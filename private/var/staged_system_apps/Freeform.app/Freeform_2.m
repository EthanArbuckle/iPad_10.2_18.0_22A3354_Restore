void sub_1003BF194(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BF4F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BF528(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003BFA98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  objc_super v7;

  objc_opt_class(CRLConnectionLineAbstractLayout, a2);
  v4 = sub_100221D0C(v3, *(void **)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v5)
    objc_msgSend(v5, "updateConnectedPath");
  v7.receiver = *(id *)(a1 + 32);
  v7.super_class = (Class)CRLShapeLayout;
  objc_msgSendSuper2(&v7, "validate");

}

os_log_t sub_1003C0E38(char *category)
{
  return os_log_create("com.apple.freeform", category);
}

id sub_1003C1004(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1[4] + 8), "containsObject:", a1[5]);
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_1003C10C8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "count");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t sub_1003C11B0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1003C11C0(uint64_t a1)
{

}

void sub_1003C11C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "allObjects"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1003C12B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(+[NSSet setWithSet:](NSSet, "setWithSet:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1003C1378(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_1003C1400(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_1003C14C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "description"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1003C152C()
{
  if (qword_1014157A8 != -1)
    dispatch_once(&qword_1014157A8, &stru_101258DF8);
  return (id)qword_1014157A0;
}

void sub_1003C156C(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMapTable strongToStrongObjectsMapTable](NSMapTable, "strongToStrongObjectsMapTable"));
  v2 = (void *)qword_1014157A0;
  qword_1014157A0 = v1;

}

id sub_1003C1598(void *a1, id *a2, dispatch_once_t *a3)
{
  dispatch_once_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void **v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  void *v14;
  void *v15;
  id *v16;

  v11 = _NSConcreteStackBlock;
  v12 = 3221225472;
  v13 = sub_1003C164C;
  v14 = &unk_10122DCC8;
  v15 = a1;
  v16 = a2;
  v5 = *a3;
  v6 = a1;
  if (v5 != -1)
    dispatch_once(a3, &v11);
  v7 = sub_1003C152C();
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  objc_msgSend(v8, "setObject:forKey:", v6, *a2, v11, v12, v13, v14, v15, v16);

  v9 = *a2;
  return v9;
}

void sub_1003C164C(uint64_t a1)
{
  os_log_t v2;

  v2 = os_log_create("com.apple.freeform", (const char *)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "UTF8String"));

  **(_QWORD **)(a1 + 40) = v2;
}

void sub_1003C1B6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003C219C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003C21C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C21F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C270C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003C2734(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C2764(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C2A00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003C2A28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C2A58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C2DC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003C3BAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C3BDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C3C0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C3C3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C3C6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C3C9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003C4B20(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  _OWORD v8[8];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v3));
  if (!v4)
  {
    v4 = objc_msgSend(v3, "tsd_newLayerForRepContentPileClone");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "name"));
    objc_msgSend(v4, "setName:", v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "delegate"));
    objc_msgSend(v4, "setDelegate:", v6);

    objc_msgSend(v3, "bounds");
    objc_msgSend(v4, "setBounds:");
    objc_msgSend(v3, "position");
    objc_msgSend(v4, "setPosition:");
    objc_msgSend(v3, "anchorPoint");
    objc_msgSend(v4, "setAnchorPoint:");
    if (v3)
    {
      objc_msgSend(v3, "transform");
      v21 = v29;
      v22 = v30;
      v23 = v31;
      v24 = v32;
      v17 = v25;
      v18 = v26;
      v19 = v27;
      v20 = v28;
      objc_msgSend(v4, "setTransform:", &v17);
      objc_msgSend(v3, "sublayerTransform");
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
      v29 = 0u;
      v30 = 0u;
      v27 = 0u;
      v28 = 0u;
      v25 = 0u;
      v26 = 0u;
      v17 = 0u;
      v18 = 0u;
      v19 = 0u;
      v20 = 0u;
      v21 = 0u;
      v22 = 0u;
      v23 = 0u;
      v24 = 0u;
      objc_msgSend(v4, "setTransform:", &v17);
      v15 = 0u;
      v16 = 0u;
      v13 = 0u;
      v14 = 0u;
      v11 = 0u;
      v12 = 0u;
      v9 = 0u;
      v10 = 0u;
    }
    v8[4] = v13;
    v8[5] = v14;
    v8[6] = v15;
    v8[7] = v16;
    v8[0] = v9;
    v8[1] = v10;
    v8[2] = v11;
    v8[3] = v12;
    objc_msgSend(v4, "setSublayerTransform:", v8);
    objc_msgSend(v4, "setHidden:", objc_msgSend(v3, "isHidden"));
    objc_msgSend(v3, "opacity");
    objc_msgSend(v4, "setOpacity:");
    objc_msgSend(v4, "setMasksToBounds:", objc_msgSend(v3, "masksToBounds"));
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v4, v3);
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);
  }

  return v4;
}

void sub_1003C4D08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4D38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4D68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4D98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4DC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4DF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4E28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4E58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4E88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4EB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4EE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C4F18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C5120(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C5150(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C54D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C5504(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_1003C65A0(double a1)
{
  return floor(a1 + 0.5);
}

double sub_1003C65B0(double a1, double a2)
{
  return floor(a1 / a2 + 0.5) * a2;
}

double sub_1003C65C8(double a1)
{
  BOOL v1;
  double v2;
  double result;

  v1 = a1 <= 0.0;
  v2 = -(-a1 - floor(-a1));
  result = a1 - floor(a1);
  if (v1)
    return v2;
  return result;
}

double sub_1003C65EC(double a1, double a2, double a3)
{
  if (a1 >= a2)
  {
    a2 = a1;
    if (a1 > a3)
      return a3;
  }
  return a2;
}

double sub_1003C660C(double a1, double a2, double a3)
{
  return a1 + (a2 - a1) * a3;
}

double sub_1003C6618()
{
  return (double)random() / 2147483650.0;
}

double sub_1003C663C(double a1, double a2)
{
  return a1 + (a2 - a1) * ((double)arc4random() / 4294967300.0);
}

double sub_1003C6678(double a1, double a2, double a3)
{
  int v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;

  if (a2 >= a3)
  {
    v6 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012591D8);
    v7 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2D338(v6, v7);
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012591F8);
    v8 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE81F0(v8, v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGFloat CRLNormalize(CGFloat, CGFloat, CGFloat)"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLMath.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 88, 0, "max >= min!");

  }
  return (a1 - a2) / (a3 - a2);
}

void sub_1003C67E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C6810(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C72D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1003C72F0(uint64_t a1)
{
  id result;
  double v3;
  double v4[4];

  result = objc_msgSend(*(id *)(a1 + 32), "getRGBAComponents:", v4);
  v3 = fmax(v4[1] * 0.715200007 + v4[0] * 0.212599993 + v4[2] * 0.0722000003 * v4[3], 0.0);
  if (v3 > 1.0)
    v3 = 1.0;
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v3;
  return result;
}

void sub_1003C80B8(uint64_t a1)
{
  uint64_t v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[5];
  id v8;
  id v9;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setRecognitionEnabled:", 1);
  v2 = (*(_QWORD *)(a1 + 64) >> 3) & 1;
  v3 = (*(_QWORD *)(a1 + 64) & 1) == 0;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(void **)(v4 + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1003C8184;
  v7[3] = &unk_101259260;
  v7[4] = v4;
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  objc_msgSend(v6, "performSearchQuery:fullWordsOnly:caseMatchingOnly:withBlock:", v5, v2, v3, v7);

}

void sub_1003C8184(_QWORD *a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  unsigned int v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  CRLCanvasSearchReference *v21;
  NSObject *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint8_t buf[4];
  unsigned int v33;
  __int16 v34;
  const char *v35;
  __int16 v36;
  const char *v37;
  __int16 v38;
  int v39;
  _BYTE v40[128];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1[4] + 16));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "layerHost"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "asiOSCVC"));

  v26 = v6;
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "smartSelectionManager"));
  v27 = v3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "freehandDrawingItemsFromCacheForPKQueryItems:", v3));
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v28, v40, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v29;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v29 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)v11);
        if (!objc_msgSend(v12, "count"))
        {
          v13 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101259218);
          v14 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109890;
            v33 = v13;
            v34 = 2082;
            v35 = "-[CRLiOSFreehandDrawingItemsSearchTarget layoutSearchForString:options:hitBlock:completionBlock:]_block_invoke_2";
            v36 = 2082;
            v37 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSFreehandDrawingItemsSearchTarget.m";
            v38 = 1024;
            v39 = 50;
            _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d DrawingItems should not be empty here.", buf, 0x22u);
          }
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101259238);
          v15 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          {
            v22 = v15;
            v23 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
            *(_DWORD *)buf = 67109378;
            v33 = v13;
            v34 = 2114;
            v35 = v23;
            _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

          }
          v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLiOSFreehandDrawingItemsSearchTarget layoutSearchForString:options:hitBlock:completionBlock:]_block_invoke"));
          v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSFreehandDrawingItemsSearchTarget.m"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v16, v17, 50, 0, "DrawingItems should not be empty here.");

        }
        if (objc_msgSend(v12, "count"))
        {
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "anyObject"));
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "canvasEditor"));
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "selectionPathWithInfos:", v12));

          v21 = -[CRLCanvasSearchReference initWithBoardItem:selectionPath:]([CRLCanvasSearchReference alloc], "initWithBoardItem:selectionPath:", v18, v20);
          (*(void (**)(void))(a1[5] + 16))();

        }
        v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v28, v40, 16);
    }
    while (v9);
  }
  v24 = a1[6];
  if (v24)
    (*(void (**)(void))(v24 + 16))();

}

void sub_1003C856C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C859C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003C8B24(void *a1)
{
  _QWORD *v1;
  dispatch_queue_t v2;
  void *v3;
  CRLBasicProgress *v4;
  id v5;

  v1 = a1;
  v2 = dispatch_queue_create("com.apple.freeform.CRLImageItemImporter", 0);
  v3 = (void *)v1[6];
  v1[6] = v2;

  v4 = -[CRLBasicProgress initWithMaxValue:]([CRLBasicProgress alloc], "initWithMaxValue:", 1.0);
  v5 = (id)v1[7];
  v1[7] = v4;

}

id sub_1003C8C7C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_createAssetDataAndThenContinueImportWithCompletionHandler:", *(_QWORD *)(a1 + 40));
}

void sub_1003C8E2C(uint64_t a1, void *a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  CRLImageDataHelper *v12;
  void *v13;
  void *v14;
  CRLImageDataHelper *v15;
  void *v16;
  _QWORD v17[5];
  id v18;
  _QWORD block[5];
  id v20;

  v6 = a2;
  v7 = a3;
  if (v7)
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_1012592A8);
    v8 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E2D3E0(v8, v7);
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(void **)(a1 + 40);
    v11 = *(NSObject **)(v9 + 48);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1003C9020;
    block[3] = &unk_101231F00;
    block[4] = v9;
    v20 = v10;
    dispatch_async(v11, block);

  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 64), a2);
    v12 = [CRLImageDataHelper alloc];
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "boardItemFactory"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "assetOwner"));
    v15 = -[CRLImageDataHelper initWithImageData:assetOwner:](v12, "initWithImageData:assetOwner:", v6, v14);

    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1003C902C;
    v17[3] = &unk_1012592D0;
    v16 = *(void **)(a1 + 40);
    v17[4] = *(_QWORD *)(a1 + 32);
    v18 = v16;
    -[CRLImageDataHelper generateThumbnailImageDataWithCompletionHandler:](v15, "generateThumbnailImageDataWithCompletionHandler:", v17);

  }
}

void sub_1003C8FF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

id sub_1003C9020(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_doAsyncImportWorkWithCompletionHandler:", *(_QWORD *)(a1 + 40));
}

void sub_1003C902C(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  _QWORD v8[5];
  id v9;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 72), a2);
  v4 = a2;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v7 = *(NSObject **)(v5 + 48);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1003C90D0;
  v8[3] = &unk_101231F00;
  v8[4] = v5;
  v9 = v6;
  dispatch_async(v7, v8);

}

id sub_1003C90D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_doAsyncImportWorkWithCompletionHandler:", *(_QWORD *)(a1 + 40));
}

void sub_1003C92B0(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];
  id v9;
  id v10;
  uint64_t v11;

  v2 = a1[4];
  v3 = (void *)a1[5];
  v4 = *(NSObject **)(v2 + 48);
  v8[0] = _NSConcreteStackBlock;
  v8[2] = sub_1003C9348;
  v8[3] = &unk_101259348;
  v8[1] = 3221225472;
  v8[4] = v2;
  v5 = v3;
  v7 = (void *)a1[6];
  v6 = a1[7];
  v9 = v5;
  v11 = v6;
  v10 = v7;
  dispatch_async(v4, v8);

}

void sub_1003C9348(_QWORD *a1)
{
  unsigned int v2;
  id *v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17;
  uint64_t v18;

  v2 = atomic_load((unsigned int *)(a1[4] + 88));
  v3 = (id *)a1[4];
  if (v2)
  {
    objc_msgSend(v3, "p_finishImportingWithInfo:error:completionHandler:", 0, 0, a1[6]);
  }
  else
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3[12], "error"));
    v5 = (id *)a1[4];
    if (v4)
    {
      v14 = (id)v4;
      objc_msgSend(v5, "p_finishImportingWithInfo:error:completionHandler:", 0, v4, a1[6]);

    }
    else
    {
      v6 = (uint64_t)objc_msgSend(v5[12], "compatibilityLevel");
      v7 = (_BYTE *)a1[4];
      if (a1[5] && !v7[92] && (v8 = a1[7], v8 >= 4) && (v6 >= 3 ? (v9 = v6 < v8) : (v9 = 0), v9))
      {
        v7[92] = 1;
        v11 = a1[4];
        v10 = (void *)a1[5];
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        v15[2] = sub_1003C94BC;
        v15[3] = &unk_101259320;
        v13 = (void *)a1[6];
        v12 = a1[7];
        v15[4] = v11;
        v17 = v12;
        v18 = v6;
        v16 = v13;
        objc_msgSend(v10, "boardItemImporter:needsMediaCompatibilityFeedbackWithReasons:forMediaType:usingBlock:", v11, 2, 2, v15);

      }
      else
      {
        _objc_msgSend(v7, "p_importImageFromDataConvertingIfNeededToRequiredCompatibilityLevel:fromCompatibilityLevel:completionHandler:", a1[7], v6, a1[6]);
      }
    }
  }
}

void sub_1003C94BC(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  _QWORD block[5];
  id v6;
  __int128 v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = *(NSObject **)(v2 + 48);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1003C9544;
  block[3] = &unk_1012592F8;
  block[1] = 3221225472;
  block[4] = v2;
  v8 = a2;
  v7 = *(_OWORD *)(a1 + 48);
  v6 = v3;
  dispatch_async(v4, block);

}

id sub_1003C9544(uint64_t a1)
{
  uint64_t v3;

  if (atomic_load((unsigned int *)(*(_QWORD *)(a1 + 32) + 88)))
    return objc_msgSend(*(id *)(a1 + 32), "p_finishImportingWithInfo:error:completionHandler:", 0, 0, *(_QWORD *)(a1 + 40));
  if (*(_BYTE *)(a1 + 64))
    v3 = *(_QWORD *)(a1 + 48);
  else
    v3 = 3;
  return _objc_msgSend(*(id *)(a1 + 32), "p_importImageFromDataConvertingIfNeededToRequiredCompatibilityLevel:fromCompatibilityLevel:completionHandler:", v3, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40));
}

void sub_1003C98F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  NSObject *v3;
  _QWORD v4[5];
  id v5;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  v3 = *(NSObject **)(v1 + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1003C9974;
  v4[3] = &unk_101231F00;
  v4[4] = v1;
  v5 = v2;
  dispatch_async(v3, v4);

}

void sub_1003C9974(uint64_t a1)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id obj;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "setValue:", 1.0);
  if (atomic_load((unsigned int *)(*(_QWORD *)(a1 + 32) + 88)))
  {
    v3 = 0;
  }
  else
  {
    obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "convertedMediaData"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "error"));
    if (obj)
    {
      objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 64), obj);
      objc_msgSend(*(id *)(a1 + 32), "p_importInfoFromDataWithCompletionHandler:", *(_QWORD *)(a1 + 40));
      goto LABEL_6;
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "p_finishImportingWithInfo:error:completionHandler:", 0, v3, *(_QWORD *)(a1 + 40));
  obj = 0;
LABEL_6:
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 104);
  *(_QWORD *)(v4 + 104) = 0;

}

id sub_1003CA260(uint64_t a1)
{
  unsigned int *v2;
  unsigned int v3;

  v2 = (unsigned int *)(*(_QWORD *)(a1 + 32) + 88);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(v3 + 1, v2));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 96), "cancel");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "cancel");
}

void sub_1003CA560(void *a1, double *a2, _QWORD *a3)
{
  objc_class *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  objc_opt_class(CRLGradientFill, a2);
  v7 = sub_1002223BC(v6, a1);
  v8 = objc_msgSend(v7, "p_newColorAtFraction:", *a2);
  v13 = objc_msgSend(v7, "p_newColorInShadingColorSpaceFromColor:", v8);

  objc_msgSend(v13, "redComponent");
  *a3 = v9;
  objc_msgSend(v13, "greenComponent");
  a3[1] = v10;
  objc_msgSend(v13, "blueComponent");
  a3[2] = v11;
  objc_msgSend(v13, "alphaComponent");
  a3[3] = v12;

}

void sub_1003CA600(void *a1, uint64_t a2)
{
  objc_class *v3;

  objc_opt_class(CRLGradientFill, a2);

}

uint64_t sub_1003CAA44(void *a1, void *a2)
{
  objc_class *v4;
  id v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  double v9;
  double v10;
  double v11;

  if (!a1 || !a2)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012595D0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2D4D0();
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DF735C();
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSComparisonResult gradientStopCompare(id _Nonnull, id _Nonnull, void * _Nonnull)"), +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLGradientFill.m"), 1453, 0, "Passing in nil is invalid.");
  }
  objc_opt_class(CRLGradientFillStop, a2);
  v5 = sub_1002223BC(v4, a1);
  objc_opt_class(CRLGradientFillStop, v6);
  v8 = sub_1002223BC(v7, a2);
  objc_msgSend(v5, "fraction");
  v10 = v9;
  objc_msgSend(v8, "fraction");
  if (v10 >= v11)
    return v11 < v10;
  else
    return -1;
}

void sub_1003CAF84(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CAFAC(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CB4C0(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CB4E8(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CB510(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CB538(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CB560(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CB588(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CBCE4(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CBD0C(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CBF68(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CBF90(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CC1EC(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CC214(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CC734(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CC75C(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CC88C(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CC8B4(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CCCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1003CCCE0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  double v7;
  double v8;
  id result;
  double v10;

  objc_msgSend(a2, "fraction");
  v8 = v7;
  result = objc_msgSend(*(id *)(a1 + 32), "fraction");
  if (v8 > v10)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_1003CF7C4(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

void sub_1003CF7EC(id a1)
{
  off_1013D9070 = sub_1003C0E38("CRLAssertCat");
}

BOOL sub_1003CF814(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  _BOOL4 v5;

  v2 = a1[1];
  v3 = a2[1];
  v4 = v2 == v3;
  v5 = v2 > v3;
  if (v4)
    return *a1 < *a2;
  else
    return v5;
}

int8x16_t sub_1003CF834(uint64_t a1, uint64_t a2)
{
  int8x16_t *v2;
  int8x16_t *v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t result;

  v2 = *(int8x16_t **)(a1 + 128);
  v3 = *(int8x16_t **)(a2 + 128);
  if (v2 == v3)
  {
    result = vextq_s8(v2[1], v2[1], 8uLL);
    v2[1] = result;
  }
  else
  {
    if (v2)
    {
      v4 = 3;
      if (v2[1].i64[0] == a1)
        v4 = 2;
      v2->i64[v4] = a2;
    }
    if (v3)
    {
      v5 = 3;
      if (v3[1].i64[0] == a2)
        v5 = 2;
      v3->i64[v5] = a1;
    }
    *(_QWORD *)(a1 + 128) = v3;
    *(_QWORD *)(a2 + 128) = v2;
  }
  return result;
}

void sub_1003CF898(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(a2 + 64);
  if ((v2 & 8) == 0)
  {
    *(_DWORD *)(a2 + 64) = v2 | 8;
    operator new();
  }
}

void sub_1003CF9BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_1003D6664((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_1003CF9F0(uint64_t **result)
{
  uint64_t *v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *result;
  v2 = result[1];
  if (*result != v2)
  {
    v3 = 0;
    do
    {
      v5 = *v1;
      v4 = v1[1];
      v1 += 3;
      v3 -= 1431655765 * ((unint64_t)(v4 - v5) >> 4);
    }
    while (v1 != v2);
    if (v3)
      operator new[]();
  }
  return result;
}

uint64_t sub_1003CFDF0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void **v11;

  *(_QWORD *)a1 = off_101259620;
  sub_1003CFF0C((_QWORD *)a1);
  sub_1003D002C(a1);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a1 + 56);
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 220) = 0;
  v2 = *(_QWORD **)(a1 + 272);
  if (v2 == (_QWORD *)(a1 + 248))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 248);
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  v4 = *(void **)(a1 + 224);
  if (v4)
  {
    *(_QWORD *)(a1 + 232) = v4;
    operator delete(v4);
  }
  v5 = *(void **)(a1 + 192);
  if (v5)
  {
    *(_QWORD *)(a1 + 200) = v5;
    operator delete(v5);
  }
  v6 = *(void **)(a1 + 168);
  if (v6)
  {
    *(_QWORD *)(a1 + 176) = v6;
    operator delete(v6);
  }
  v7 = *(void **)(a1 + 144);
  if (v7)
  {
    *(_QWORD *)(a1 + 152) = v7;
    operator delete(v7);
  }
  v8 = *(void **)(a1 + 112);
  if (v8)
  {
    *(_QWORD *)(a1 + 120) = v8;
    operator delete(v8);
  }
  v9 = *(void **)(a1 + 88);
  if (v9)
  {
    *(_QWORD *)(a1 + 96) = v9;
    operator delete(v9);
  }
  v11 = (void **)(a1 + 56);
  sub_1003D6434(&v11);
  return a1;
}

void sub_1003CFEE8(uint64_t a1)
{
  sub_1003CFDF0(a1);
  operator delete();
}

void sub_1003CFF0C(_QWORD *a1)
{
  uint64_t v2;
  void *v3;

  v2 = a1[5];
  if (v2)
  {
    a1[5] = *(_QWORD *)(v2 + 144);
    operator delete();
  }
  v3 = (void *)a1[14];
  if (v3)
  {
    a1[15] = v3;
    operator delete(v3);
  }
  a1[14] = 0;
  a1[15] = 0;
  a1[16] = 0;
  a1[19] = a1[18];
  sub_1003CFF90((uint64_t)a1);
  a1[22] = a1[21];
  a1[25] = a1[24];
}

void sub_1003CFF90(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;

  v1 = *(_QWORD ***)(a1 + 224);
  if (v1 != *(_QWORD ***)(a1 + 232))
  {
    v2 = (*v1)[4];
    if (v2)
    {
      *(_QWORD *)(*(_QWORD *)(v2 + 56) + 48) = 0;
      operator delete();
    }
    sub_1003D60BC(*v1);
    operator delete();
  }
  sub_1002307C8(a1 + 224, 0);
}

uint64_t sub_1003D002C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t *v5;

  v2 = a1 + 56;
  result = sub_1003D6474(a1 + 56, *(_QWORD **)(a1 + 56));
  v5 = *(uint64_t **)(v2 + 32);
  v4 = *(uint64_t **)(v2 + 40);
  if (v5 != v4)
  {
    do
    {
      result = *v5;
      if (*v5)
        operator delete[]();
      ++v5;
    }
    while (v5 != v4);
    v5 = *(uint64_t **)(a1 + 88);
  }
  *(_QWORD *)(a1 + 96) = v5;
  return result;
}

void sub_1003D009C(uint64_t a1)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (!*(_BYTE *)(a1 + 32))
  {
    v2 = *(uint64_t **)(a1 + 56);
    v3 = *(uint64_t **)(a1 + 64);
    if ((char *)v3 - (char *)v2 < 1)
    {
      v4 = 0;
      v6 = 0;
    }
    else
    {
      v4 = (uint64_t *)sub_1003D66F8(v3 - v2);
      v6 = v5;
    }
    sub_1003D6758(v2, v3, (uint64_t)&v9, v3 - v2, v4, v6);
    if (v4)
      operator delete(v4);
    *(_BYTE *)(a1 + 32) = 1;
  }
  for (i = *(_QWORD *)(a1 + 64); i != *(_QWORD *)(a1 + 56); i -= 8)
  {
    v8 = *(_QWORD *)(i - 8);
    v10 = *(_QWORD *)(*(_QWORD *)v8 + 8);
    sub_1003D5F80(a1 + 112, &v10);
  }
  *(_QWORD *)(a1 + 80) = i;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 221) = 1;
}

void sub_1003D017C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

uint64_t **sub_1003D0194(uint64_t a1, uint64_t **a2, uint64_t a3, int a4)
{
  if (a4)
    *(_BYTE *)(a1 + 220) = 1;
  *(_BYTE *)(a1 + 32) = 0;
  return sub_1003CF9F0(a2);
}

uint64_t sub_1003D01C0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t result;
  _BOOL4 v5;
  unsigned int v6;

  v2 = *(_DWORD *)(a1 + 12);
  switch(v2)
  {
    case 3:
      if (*(_DWORD *)(a2 + 116) == -1)
        goto LABEL_11;
      return 0;
    case 2:
      v3 = *(_DWORD *)(a2 + 116);
      break;
    case 1:
      v3 = *(_DWORD *)(a2 + 116);
      if (v3 < 0)
        v3 = -v3;
      break;
    default:
      goto LABEL_11;
  }
  if (v3 != 1)
    return 0;
LABEL_11:
  switch(*(_DWORD *)(a1 + 8))
  {
    case 1:
      if (v2 == 3)
      {
        v6 = *(_DWORD *)(a2 + 120);
        goto LABEL_26;
      }
      if (v2 == 2)
        result = *(_DWORD *)(a2 + 120) > 0;
      else
        result = *(_DWORD *)(a2 + 120) != 0;
      break;
    case 2:
      if (v2 == 3)
      {
        v6 = ~*(_DWORD *)(a2 + 120);
LABEL_26:
        result = v6 >> 31;
      }
      else if (v2 == 2)
      {
        result = *(_DWORD *)(a2 + 120) < 1;
      }
      else
      {
        result = *(_DWORD *)(a2 + 120) == 0;
      }
      break;
    case 3:
      if (v2 == 3)
      {
        v5 = *(_DWORD *)(a2 + 120) >= 0;
      }
      else if (v2 == 2)
      {
        v5 = *(_DWORD *)(a2 + 120) < 1;
      }
      else
      {
        v5 = *(_DWORD *)(a2 + 120) == 0;
      }
      return v5 ^ (*(_DWORD *)(*(_QWORD *)(a2 + 184) + 8) != 0);
    case 4:
      return 1;
    default:
      return 0;
  }
  return result;
}

uint64_t sub_1003D030C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a2 + 184);
  v3 = *(_DWORD *)(v2 + 8);
  v4 = *(_QWORD *)(a2 + 136);
  if (v4)
  {
    while (1)
    {
      v5 = *(_QWORD *)(v4 + 184);
      if (*(_DWORD *)(v5 + 8) == v3 && !*(_BYTE *)(v5 + 12))
        break;
      v4 = *(_QWORD *)(v4 + 136);
      if (!v4)
        goto LABEL_5;
    }
    if (*(_DWORD *)(result + 12))
    {
      v8 = *(_DWORD *)(v4 + 112);
      v7 = *(_DWORD *)(v4 + 116);
      if (v8 * v7 < 0 && (v7 >= 0 ? (v9 = *(_DWORD *)(v4 + 116)) : (v9 = -v7), v9 < 2))
      {
        if (*(_BYTE *)(v2 + 12))
          v11 = 1;
        else
          v11 = *(_DWORD *)(a2 + 112);
      }
      else
      {
        v10 = *(_DWORD *)(a2 + 112);
        if (v10 * v8 < 0)
          v10 = 0;
        v11 = v7 + v10;
      }
      v15 = *(_DWORD *)(v4 + 120);
      *(_DWORD *)(a2 + 116) = v11;
      *(_DWORD *)(a2 + 120) = v15;
      v6 = *(_QWORD *)(v4 + 144);
      goto LABEL_28;
    }
    v12 = *(_DWORD *)(v4 + 120);
    *(_DWORD *)(a2 + 116) = *(_DWORD *)(a2 + 112);
    *(_DWORD *)(a2 + 120) = v12;
    v6 = *(_QWORD *)(v4 + 144);
LABEL_17:
    if (v6 != a2)
    {
      v13 = *(_DWORD *)(a2 + 120);
      do
      {
        v14 = *(_QWORD *)(v6 + 184);
        if (*(_DWORD *)(v14 + 8) != v3 && !*(_BYTE *)(v14 + 12))
        {
          v13 = v13 == 0;
          *(_DWORD *)(a2 + 120) = v13;
        }
        v6 = *(_QWORD *)(v6 + 144);
      }
      while (v6 != a2);
    }
    return result;
  }
LABEL_5:
  *(_DWORD *)(a2 + 116) = *(_DWORD *)(a2 + 112);
  v6 = *(_QWORD *)(result + 40);
  if (!*(_DWORD *)(result + 12))
    goto LABEL_17;
LABEL_28:
  if (v6 != a2)
  {
    v16 = *(_DWORD *)(a2 + 120);
    do
    {
      v17 = *(_QWORD *)(v6 + 184);
      if (*(_DWORD *)(v17 + 8) != v3 && !*(_BYTE *)(v17 + 12))
      {
        v16 += *(_DWORD *)(v6 + 112);
        *(_DWORD *)(a2 + 120) = v16;
      }
      v6 = *(_QWORD *)(v6 + 144);
    }
    while (v6 != a2);
  }
  return result;
}

uint64_t sub_1003D043C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(result + 40);
  if (*(_DWORD *)(result + 12))
  {
    if (v2 != a2)
    {
      v3 = *(_DWORD *)(a2 + 116);
      v4 = *(_DWORD *)(a2 + 120);
      do
      {
        v5 = *(_QWORD *)(v2 + 184);
        if (*(_DWORD *)(v5 + 8) == 1)
        {
          v4 += *(_DWORD *)(v2 + 112);
          *(_DWORD *)(a2 + 120) = v4;
        }
        else if (!*(_BYTE *)(v5 + 12))
        {
          v3 += *(_DWORD *)(v2 + 112);
          *(_DWORD *)(a2 + 116) = v3;
        }
        v2 = *(_QWORD *)(v2 + 144);
      }
      while (v2 != a2);
    }
  }
  else
  {
    if (v2 == a2)
    {
      v7 = 0;
      v6 = 0;
    }
    else
    {
      v6 = 0;
      v7 = 0;
      do
      {
        v8 = *(_QWORD *)(v2 + 184);
        if (*(_DWORD *)(v8 + 8) == 1)
        {
          ++v6;
        }
        else if (!*(_BYTE *)(v8 + 12))
        {
          ++v7;
        }
        v2 = *(_QWORD *)(v2 + 144);
      }
      while (v2 != a2);
    }
    *(_DWORD *)(a2 + 116) = v7 & 1;
    *(_DWORD *)(a2 + 120) = v6 & 1;
  }
  return result;
}

uint64_t sub_1003D04F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  _BOOL8 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v21;
  uint64_t v22;
  _QWORD **v23;
  _QWORD *v24;
  uint64_t v25;

  v2 = a2[12];
  v3 = *(_QWORD *)(a1 + 96);
  if (v2 != v3)
    return v2 > v3;
  v5 = *a2;
  v4 = a2[1];
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v9 = a2[6];
  v8 = a2[7];
  v10 = (double)(v8 - v4);
  v11 = (double)(v9 - *a2);
  v12 = (double)(*a2 - v6) * v10 - (double)(v4 - v7) * v11;
  if (v12 != 0.0)
    return v12 < 0.0;
  v15 = *(_QWORD *)(a1 + 176);
  if ((*(_BYTE *)(v15 + 64) & 4) != 0 || v7 <= v8)
  {
    v17 = a2[22];
    if ((*(_BYTE *)(v17 + 64) & 4) != 0 || v8 <= v7)
    {
      v19 = *((unsigned __int8 *)a2 + 192);
      v13 = *((_BYTE *)a2 + 192) != 0;
      if (*(_QWORD *)(a1 + 8) == v4
        && *(_QWORD *)(**(_QWORD **)(a1 + 184) + 8) == v4
        && *(unsigned __int8 *)(a1 + 192) == v19)
      {
        v21 = *(_DWORD *)(a1 + 112);
        if (v21 < 1)
          v22 = *(_QWORD *)(v15 + 48) + 48;
        else
          v22 = *(_QWORD *)(v15 + 56) + 56;
        if ((double)(uint64_t)(*(_QWORD *)a1 - **(_QWORD **)v22) * (double)(v7 - v4)
           - (double)(v4 - *(_QWORD *)(*(_QWORD *)v22 + 8)) * (double)(v6 - *(_QWORD *)a1) == 0.0)
        {
          return 1;
        }
        else
        {
          if (v21 < 1)
            v23 = (_QWORD **)(*(_QWORD *)(v15 + 48) + 48);
          else
            v23 = (_QWORD **)(*(_QWORD *)(v15 + 56) + 56);
          v24 = *v23;
          if (*((int *)a2 + 28) < 1)
            v25 = *(_QWORD *)(v17 + 48) + 48;
          else
            v25 = *(_QWORD *)(v17 + 56) + 56;
          return v19 == (double)(v5 - *v24) * (double)(*(_QWORD *)(*(_QWORD *)v25 + 8) - v4)
                      - (double)(v4 - v24[1]) * (double)(**(_QWORD **)v25 - v5) > 0.0;
        }
      }
    }
    else
    {
      v18 = 56;
      if (*((int *)a2 + 28) > 0)
        v18 = 48;
      return v11 * (double)(*(_QWORD *)(*(_QWORD *)(v17 + v18) + 8) - v8)
           - v10 * (double)(**(_QWORD **)(v17 + v18) - v9) >= 0.0;
    }
  }
  else
  {
    v16 = 56;
    if (*(int *)(a1 + 112) > 0)
      v16 = 48;
    return (double)(v6 - v5) * (double)(*(_QWORD *)(*(_QWORD *)(v15 + v16) + 8) - v7)
         - (double)(v7 - v4) * (double)(**(_QWORD **)(v15 + v16) - v6) <= 0.0;
  }
  return v13;
}

uint64_t sub_1003D072C(uint64_t result, uint64_t *a2)
{
  uint64_t **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t **)(result + 40);
  v4 = *(_QWORD *)(result + 40);
  if (v4)
  {
    result = sub_1003D04F4(*(_QWORD *)(result + 40), a2);
    if ((_DWORD)result)
    {
      while (1)
      {
        v5 = v4;
        v4 = *(_QWORD *)(v4 + 144);
        if (!v4)
          break;
        result = sub_1003D04F4(v4, a2);
        if ((result & 1) == 0)
        {
          if (*(_DWORD *)(v5 + 196) == 2)
            v5 = v4;
          v6 = *(_QWORD *)(v5 + 144);
          goto LABEL_12;
        }
      }
      if (*(_DWORD *)(v5 + 196) == 2)
        return result;
      v6 = 0;
LABEL_12:
      a2[18] = v6;
      v3 = (uint64_t **)(v5 + 144);
      v7 = *(_QWORD *)(v5 + 144);
      if (v7)
        *(_QWORD *)(v7 + 136) = a2;
      a2[17] = v5;
    }
    else
    {
      a2[17] = 0;
      a2[18] = v4;
      *(_QWORD *)(v4 + 136) = a2;
    }
  }
  else
  {
    a2[17] = 0;
    a2[18] = 0;
  }
  *v3 = a2;
  return result;
}

void sub_1003D07DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  int v7;
  int32x2_t v8;
  __int8 v9;
  int v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 80);
  if (v2 != *(_QWORD *)(a1 + 64))
  {
    v5 = a1 + 112;
    do
    {
      if (*(_QWORD *)(**(_QWORD **)v2 + 8) != a2)
        break;
      *(_QWORD *)(a1 + 80) = v2 + 8;
      v6 = *(_DWORD *)(**(_QWORD **)v2 + 64);
      if ((v6 & 1) == 0)
        operator new();
      if ((v6 & 2) == 0)
        operator new();
      MEMORY[0xC0] = 1;
      sub_1003D072C(a1, 0);
      if (*(_BYTE *)(MEMORY[0xB8] + 12))
      {
        sub_1003D043C(a1, 0);
        v7 = *(_DWORD *)(a1 + 12);
        if (v7 == 3)
        {
          v8 = vcltz_s32(MEMORY[0x74]);
        }
        else if (v7 == 2)
        {
          v8 = vcgtz_s32(MEMORY[0x74]);
        }
        else
        {
          v8 = vtst_s32(MEMORY[0x74], MEMORY[0x74]);
        }
        v10 = *(_DWORD *)(a1 + 8);
        v9 = v8.i8[4];
        if (v10 != 1)
        {
          if (v10 == 2)
            v9 = (v8.i8[0] | v8.i8[4]) ^ 1;
          else
            v9 = v8.i8[4] ^ 1;
        }
      }
      else
      {
        sub_1003D030C(a1, 0);
        v9 = sub_1003D01C0(a1, 0);
      }
      if ((v9 & 1) != 0)
        sub_1003D17C8();
      if (MEMORY[0x38] == MEMORY[8])
      {
        MEMORY[0xA0] = *(_QWORD *)(a1 + 48);
        *(_QWORD *)(a1 + 48) = 0;
      }
      else
      {
        v11 = MEMORY[0x38];
        sub_1003D5F80(v5, &v11);
      }
      v2 = *(_QWORD *)(a1 + 80);
    }
    while (v2 != *(_QWORD *)(a1 + 64));
  }
}

void sub_1003D0D24()
{
  sub_1003D17C8();
}

void sub_1003D0E68(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(_BYTE *)(*(_QWORD *)(a2 + 184) + 12))
  {
    v5 = *(_QWORD *)(a2 + 136);
    v6 = !*(_QWORD *)(a2 + 128) || v5 == 0;
    if (!v6 && !*(_BYTE *)(*(_QWORD *)(v5 + 184) + 12) && *(_QWORD *)(v5 + 128))
    {
      if ((v9 = a3[1], v10 = *(_QWORD *)(a2 + 56), v9 >= v10 + 2) && v9 >= *(_QWORD *)(v5 + 56) + 2
        || *(_QWORD *)(a2 + 8) <= v9 && *(_QWORD *)(v5 + 8) <= v9)
      {
        if (a4)
        {
          if (sub_1003D63E0(a3, *(uint64_t **)(a2 + 136), (_QWORD *)(v5 + 48)) > 0.25)
            return;
          v9 = a3[1];
          v10 = *(_QWORD *)(a2 + 56);
        }
        else if (*(_QWORD *)(a2 + 96) != *(_QWORD *)(v5 + 96))
        {
          return;
        }
        if ((double)(*a3 - *(_QWORD *)(a2 + 48)) * (double)(*(_QWORD *)(v5 + 56) - v9)
           - (double)(v9 - v10) * (double)(*(_QWORD *)(v5 + 48) - *a3) == 0.0)
        {
          v11 = **(_QWORD **)(a2 + 128);
          v12 = **(_QWORD **)(v5 + 128);
          if (v11 == v12)
          {
            sub_1003D1900(a1, v5, a2, a3);
          }
          else
          {
            if (v11 >= v12)
            {
              v13 = v5;
              v14 = a2;
            }
            else
            {
              v13 = a2;
              v14 = v5;
            }
            sub_1003D1C6C(a1, v13, v14);
          }
          *(_DWORD *)(v5 + 196) = 2;
          *(_DWORD *)(a2 + 196) = 1;
        }
      }
    }
  }
}

uint64_t sub_1003D0FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  void (*v36)(void);
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  BOOL v44;
  _QWORD *v45;
  _QWORD *v46;
  int v47;

  v6 = a2;
  if (*(_BYTE *)(a1 + 220))
  {
    if (*(_BYTE *)(*(_QWORD *)(a2 + 184) + 12))
    {
      v8 = a3;
      if (*(_BYTE *)(*(_QWORD *)(a3 + 184) + 12))
        return 0;
      goto LABEL_7;
    }
    if (*(_BYTE *)(*(_QWORD *)(a3 + 184) + 12))
    {
      v8 = a2;
      v6 = a3;
LABEL_7:
      if (*(_DWORD *)(v8 + 196))
        sub_1003D1B00(a1, v8);
      v9 = *(_DWORD *)(v8 + 116);
      if (v9 >= 0)
        v10 = *(_DWORD *)(v8 + 116);
      else
        v10 = -v9;
      if (v10 != 1)
        return 0;
      if (*(_DWORD *)(a1 + 8) == 2)
      {
        if (!*(_QWORD *)(v8 + 128))
          return 0;
      }
      else if (!*(_DWORD *)(*(_QWORD *)(v8 + 184) + 8))
      {
        return 0;
      }
      v18 = *(_DWORD *)(a1 + 12);
      if (v18 != 3)
      {
        if (v18 == 2 && v9 != 1)
          return 0;
LABEL_67:
        if (*(_QWORD *)(v6 + 128))
        {
          v24 = sub_1003D1B40(a1, v6, a4);
          v29 = *(_QWORD *)(v6 + 128);
          v30 = 24;
          if (*(_QWORD *)(v29 + 16) == v6)
            v30 = 16;
          *(_QWORD *)(v29 + v30) = 0;
          *(_QWORD *)(v6 + 128) = 0;
          v35 = *(_QWORD *)(a1 + 272);
          if (v35)
          {
            v36 = *(void (**)(void))(*(_QWORD *)v35 + 48);
LABEL_125:
            v36();
            return v24;
          }
        }
        else
        {
          v33 = **(_QWORD **)(v6 + 184);
          v34 = *a4 == *(_QWORD *)v33 && a4[1] == *(_QWORD *)(v33 + 8);
          if (!v34
            || (*(_BYTE *)(v33 + 64) & 3) != 0
            || (v40 = sub_1003D29B0((_QWORD *)v6)) == 0
            || (v41 = v40[16]) == 0)
          {
            sub_1003D1744();
          }
          *(_QWORD *)(v6 + 128) = v41;
          v42 = *(_DWORD *)(v6 + 112);
          v43 = (_QWORD *)v40[16];
          v44 = v42 <= 0;
          if (v42 <= 0)
            v45 = v40;
          else
            v45 = (_QWORD *)v6;
          if (v44)
            v46 = (_QWORD *)v6;
          else
            v46 = v40;
          v43[2] = v45;
          v43[3] = v46;
          return v43[4];
        }
        return v24;
      }
      if (v9 == -1)
        goto LABEL_67;
      return 0;
    }
  }
  if (*(_DWORD *)(a2 + 196))
    sub_1003D1B00(a1, a2);
  if (*(_DWORD *)(a3 + 196))
    sub_1003D1B00(a1, a3);
  v11 = *(_DWORD *)(*(_QWORD *)(a2 + 184) + 8);
  v12 = *(_DWORD *)(*(_QWORD *)(a3 + 184) + 8);
  v13 = *(_DWORD *)(a1 + 12);
  if (v11 == v12)
  {
    v14 = *(_DWORD *)(a2 + 116);
    if (!v13)
    {
      *(_DWORD *)(a2 + 116) = *(_DWORD *)(a3 + 116);
      *(_DWORD *)(a3 + 116) = v14;
      goto LABEL_39;
    }
    if (*(_DWORD *)(a3 + 112) + v14)
      v15 = *(_DWORD *)(a3 + 112) + v14;
    else
      v15 = -v14;
    *(_DWORD *)(a2 + 116) = v15;
    v16 = *(_DWORD *)(a3 + 116);
    v17 = v16 - *(_DWORD *)(a2 + 112);
    if (v17)
      *(_DWORD *)(a3 + 116) = v17;
    else
      *(_DWORD *)(a3 + 116) = -v16;
  }
  else
  {
    if (!v13)
    {
      *(_DWORD *)(a2 + 120) = *(_DWORD *)(a2 + 120) == 0;
      *(_DWORD *)(a3 + 120) = *(_DWORD *)(a3 + 120) == 0;
      goto LABEL_39;
    }
    *(_DWORD *)(a2 + 120) += *(_DWORD *)(a3 + 112);
    *(_DWORD *)(a3 + 120) -= *(_DWORD *)(a2 + 112);
  }
  if (v13 > 1)
  {
    v19 = *(_DWORD *)(a2 + 116);
    v21 = 0;
    if (v13 == *(_DWORD *)(a1 + 16))
    {
      v20 = *(_DWORD *)(a3 + 116);
    }
    else
    {
      v19 = -v19;
      v20 = -*(_DWORD *)(a3 + 116);
    }
    goto LABEL_44;
  }
  v13 = 1;
LABEL_39:
  v19 = *(_DWORD *)(a2 + 116);
  if (v19 < 0)
    v19 = -v19;
  v20 = *(_DWORD *)(a3 + 116);
  if (v20 < 0)
    v20 = -v20;
  v21 = 1;
LABEL_44:
  v22 = *(_QWORD *)(a2 + 128);
  if (!v22 && v19 > 1)
    return 0;
  v23 = *(_QWORD *)(a3 + 128);
  if (!v23 && v20 > 1)
    return 0;
  if (!v22)
  {
    if (v23)
    {
      a2 = a3;
      goto LABEL_74;
    }
    if (v21)
    {
      v37 = *(_DWORD *)(a2 + 120);
      if (v37 >= 0)
        v38 = v37;
      else
        v38 = -v37;
      LODWORD(v39) = *(_DWORD *)(a3 + 120);
      if ((int)v39 >= 0)
        v39 = v39;
      else
        v39 = -(int)v39;
    }
    else
    {
      v38 = *(int *)(a2 + 120);
      if (v13 == *(_DWORD *)(a1 + 16))
      {
        v39 = *(int *)(a3 + 120);
      }
      else
      {
        v38 = -(int)v38;
        v39 = -(uint64_t)*(int *)(a3 + 120);
      }
    }
    if (v11 == v12)
    {
      v24 = 0;
      if (v19 != 1 || v20 != 1)
        return v24;
      v47 = *(_DWORD *)(a1 + 8);
      if (v47 != 4)
      {
        if (v47 == 3)
        {
          if (v11 == 1 && v38 >= 1 && v39 > 0)
            goto LABEL_123;
          v24 = 0;
          if (v11)
            return v24;
          goto LABEL_118;
        }
        if (v47 == 2)
        {
          v24 = 0;
LABEL_118:
          if (v38 > 0 || v39 >= 1)
            return v24;
          goto LABEL_123;
        }
        v24 = 0;
        if (v38 < 1 || v39 < 1)
          return v24;
      }
    }
LABEL_123:
    sub_1003D0D24();
  }
  if (!v23)
  {
LABEL_74:
    v24 = sub_1003D1B40(a1, a2, a4);
    v32 = *(_QWORD *)(a1 + 272);
    if (!v32)
    {
LABEL_77:
      sub_1003CF834(v6, a3);
      return v24;
    }
    v28 = *(void (**)(void))(*(_QWORD *)v32 + 48);
LABEL_76:
    v28();
    goto LABEL_77;
  }
  if (v19 <= 1 && v20 <= 1 && (v11 == v12 || *(_DWORD *)(a1 + 8) == 4))
  {
    if (v22 == v23 || *(_QWORD *)(v22 + 16) == a2)
    {
      sub_1003D1900(a1, a2, a3, a4);
      sub_1003D0D24();
    }
    v24 = sub_1003D1B40(a1, a2, a4);
    sub_1003D1B40(v24, a3, a4);
    v26 = *(_QWORD *)(a1 + 272);
    if (!v26)
      goto LABEL_77;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v26 + 48))(v26, v6, v6 + 48, a3, a3 + 48, v24);
    v27 = *(_QWORD *)(a1 + 272);
    if (!v27)
      goto LABEL_77;
    v28 = *(void (**)(void))(*(_QWORD *)v27 + 48);
    goto LABEL_76;
  }
  v24 = sub_1003D1900(a1, a2, a3, a4);
  v31 = *(_QWORD *)(a1 + 272);
  if (v31 && v24)
  {
    v36 = *(void (**)(void))(*(_QWORD *)v31 + 48);
    goto LABEL_125;
  }
  return v24;
}

void sub_1003D15CC(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(_BYTE *)(*(_QWORD *)(a2 + 184) + 12))
  {
    v5 = *(_QWORD *)(a2 + 144);
    v6 = !*(_QWORD *)(a2 + 128) || v5 == 0;
    if (!v6 && !*(_BYTE *)(*(_QWORD *)(v5 + 184) + 12) && *(_QWORD *)(v5 + 128))
    {
      if ((v9 = a3[1], v10 = *(_QWORD *)(a2 + 56), v9 >= v10 + 2) && v9 >= *(_QWORD *)(v5 + 56) + 2
        || *(_QWORD *)(a2 + 8) <= v9 && *(_QWORD *)(v5 + 8) <= v9)
      {
        if (a4)
        {
          if (sub_1003D63E0(a3, *(uint64_t **)(a2 + 144), (_QWORD *)(v5 + 48)) > 0.35)
            return;
          v9 = a3[1];
          v10 = *(_QWORD *)(a2 + 56);
        }
        else if (*(_QWORD *)(a2 + 96) != *(_QWORD *)(v5 + 96))
        {
          return;
        }
        if ((double)(*a3 - *(_QWORD *)(a2 + 48)) * (double)(*(_QWORD *)(v5 + 56) - v9)
           - (double)(v9 - v10) * (double)(*(_QWORD *)(v5 + 48) - *a3) == 0.0)
        {
          v11 = **(_QWORD **)(a2 + 128);
          v12 = **(_QWORD **)(v5 + 128);
          if (v11 == v12)
          {
            sub_1003D1900(a1, a2, v5, a3);
          }
          else
          {
            if (v11 >= v12)
            {
              v13 = v5;
              v14 = a2;
            }
            else
            {
              v13 = a2;
              v14 = v5;
            }
            sub_1003D1C6C(a1, v13, v14);
          }
          *(_DWORD *)(a2 + 196) = 2;
          *(_DWORD *)(v5 + 196) = 1;
        }
      }
    }
  }
}

void sub_1003D1744()
{
  sub_1003D17C8();
}

void sub_1003D17C8()
{
  operator new();
}

uint64_t sub_1003D1900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t i;
  _QWORD *v24;
  BOOL v25;

  if (*(_DWORD *)(a2 + 196))
    sub_1003D1B00(a1, a2);
  if (*(_DWORD *)(a3 + 196))
    sub_1003D1B00(a1, a3);
  v7 = *(_QWORD **)(a2 + 128);
  v8 = v7[2];
  v9 = *(_QWORD **)(a3 + 128);
  v10 = v9[2];
  if ((v8 == a2) == (v10 == a3))
  {
    if ((*(_BYTE *)(*(_QWORD *)(a2 + 176) + 64) & 3) != 0)
    {
      v7[2] = v7[3];
      v7[3] = v8;
    }
    else
    {
      if ((*(_BYTE *)(*(_QWORD *)(a3 + 176) + 64) & 3) == 0)
      {
        v12 = 0;
        *(_BYTE *)(a1 + 221) = 0;
        return v12;
      }
      v9[2] = v9[3];
      v9[3] = v10;
      v7 = v9;
    }
    v7[4] = *(_QWORD *)(v7[4] + 48);
  }
  v11 = sub_1003D1B40(a1, a2, a4);
  v12 = v11;
  v13 = *(_QWORD **)(a2 + 128);
  v14 = *(_QWORD **)(a3 + 128);
  if (v13 != v14)
  {
    if (*(_BYTE *)(*(_QWORD *)(a2 + 184) + 12))
    {
      if ((*(_DWORD *)(a2 + 112) & 0x80000000) == 0)
      {
LABEL_14:
        v15 = a3;
        v16 = a2;
LABEL_32:
        sub_1003D1C6C(v11, v15, v16);
        return v12;
      }
    }
    else if (*v13 >= *v14)
    {
      goto LABEL_14;
    }
    v15 = a2;
    v16 = a3;
    goto LABEL_32;
  }
  v13[4] = v11;
  if (*(_BYTE *)(a1 + 33))
  {
    v17 = *(_QWORD **)(a2 + 136);
    if (v17)
    {
      while (1)
      {
        if (!*(_BYTE *)(v17[23] + 12))
        {
          v18 = (_QWORD *)v17[16];
          if (v18)
            break;
        }
        v17 = (_QWORD *)v17[17];
        if (!v17)
          goto LABEL_20;
      }
      for (i = v18[1]; i; v18[1] = i)
      {
        if (*(_QWORD *)(i + 32))
          break;
        i = *(_QWORD *)(i + 8);
      }
      if (v18 == v13)
        goto LABEL_46;
      v24 = v18;
      do
      {
        v24 = (_QWORD *)v24[1];
        if (v24)
          v25 = v24 == v13;
        else
          v25 = 1;
      }
      while (!v25);
      if (v24)
LABEL_46:
        v18[1] = v13[1];
    }
    else
    {
LABEL_20:
      v18 = 0;
    }
    v13[1] = v18;
  }
  v19 = *(_QWORD *)(a2 + 128);
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(*(_QWORD *)(v19 + 16) + 128) = 0;
    *(_QWORD *)(v20 + 128) = 0;
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    v12 = v13[4];
  }
  v21 = (_QWORD *)v13[1];
  if (v21 && !v21[2])
  {
    do
    {
      if (v21[4])
        break;
      v21 = (_QWORD *)v21[1];
    }
    while (v21);
    v13[1] = v21;
  }
  return v12;
}

void sub_1003D1B00(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a2 + 196) = 0;
  if (v2 == 2)
    *(_DWORD *)(*(_QWORD *)(a2 + 144) + 196) = 0;
  else
    *(_DWORD *)(*(_QWORD *)(a2 + 136) + 196) = 0;
  sub_1003D0D24();
}

uint64_t sub_1003D1B40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v9;
  __int128 v10;
  __int128 v11;
  int v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_QWORD *)(a2 + 128);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v4 + 48);
  v7 = *a3;
  v6 = a3[1];
  if (*(_QWORD *)(v3 + 16) == a2)
  {
    if (v7 != *(_QWORD *)v4 || v6 != *(_QWORD *)(v4 + 8))
LABEL_16:
      operator new();
    v14 = *((_DWORD *)a3 + 8);
    if ((v14 & 0x80000000) == 0 && (*((_DWORD *)a3 + 4) != v14 || *((double *)a3 + 3) != *((double *)a3 + 5)))
    {
      v15 = *(_OWORD *)a3;
      v16 = *((_OWORD *)a3 + 2);
      *(_OWORD *)(v4 + 16) = *((_OWORD *)a3 + 1);
      *(_OWORD *)(v4 + 32) = v16;
      *(_OWORD *)v4 = v15;
    }
  }
  else
  {
    if (v7 != *(_QWORD *)v5 || v6 != *(_QWORD *)(v5 + 8))
      goto LABEL_16;
    v9 = *((_DWORD *)a3 + 8);
    if ((v9 & 0x80000000) == 0 && (*((_DWORD *)a3 + 4) != v9 || *((double *)a3 + 3) != *((double *)a3 + 5)))
    {
      v10 = *(_OWORD *)a3;
      v11 = *((_OWORD *)a3 + 2);
      *(_OWORD *)(v5 + 16) = *((_OWORD *)a3 + 1);
      *(_OWORD *)(v5 + 32) = v11;
      *(_OWORD *)v5 = v10;
    }
    return v5;
  }
  return v4;
}

void sub_1003D1C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t i;
  _QWORD *v13;
  BOOL v14;

  v3 = *(_QWORD **)(a2 + 128);
  v4 = v3[4];
  v5 = *(_QWORD **)(a3 + 128);
  v6 = v5[4];
  v7 = *(_QWORD *)(v4 + 48);
  v8 = *(_QWORD *)(v6 + 48);
  if (v3[2] != a2)
  {
    *(_QWORD *)(v7 + 56) = v6;
    *(_QWORD *)(v6 + 48) = v7;
    *(_QWORD *)(v4 + 48) = v8;
    *(_QWORD *)(v8 + 56) = v4;
    v9 = v5[3];
    v3[3] = v9;
    if (!v9)
      goto LABEL_4;
    goto LABEL_3;
  }
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v4 + 48) = v8;
  *(_QWORD *)(v6 + 48) = v7;
  *(_QWORD *)(v7 + 56) = v6;
  v3[4] = v6;
  v9 = v5[2];
  v3[2] = v9;
  if (v9)
LABEL_3:
    *(_QWORD *)(v9 + 128) = v3;
LABEL_4:
  v10 = *(_QWORD **)(a3 + 128);
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = 0;
  v11 = *(_QWORD **)(a2 + 128);
  for (i = v11[1]; i; v11[1] = i)
  {
    if (*(_QWORD *)(i + 32))
      break;
    i = *(_QWORD *)(i + 8);
  }
  if (v11 == v10)
    goto LABEL_15;
  v13 = v11;
  do
  {
    v13 = (_QWORD *)v13[1];
    if (v13)
      v14 = v13 == v10;
    else
      v14 = 1;
  }
  while (!v14);
  if (v13)
LABEL_15:
    v11[1] = v10[1];
  v10[1] = v11;
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 176) + 64) & 3) != 0)
  {
    v10[4] = v11[4];
    v11[4] = 0;
  }
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a3 + 128) = 0;
}

uint64_t sub_1003D1D54(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  _BOOL4 v20;
  _BOOL4 v21;
  BOOL v22;
  int v24;
  BOOL v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  if (a2)
  {
    v2 = a2;
    v3 = result;
    while (1)
    {
      v4 = *(uint64_t **)(v2 + 32);
      if (v4)
        break;
      v2 = *(_QWORD *)(v2 + 8);
      if (!v2)
        return result;
    }
    if (!*(_BYTE *)(v2 + 120))
    {
      v5 = (uint64_t *)v4[6];
      if (v5 == v4)
        goto LABEL_56;
      v6 = (uint64_t *)v4[7];
      if (v5 == v6)
        goto LABEL_56;
      if ((uint64_t *)v5[6] == v6)
      {
        v29 = *v6;
        v30 = *v6 - *v5;
        if (v30 < 0)
          v30 = *v5 - *v6;
        if ((unint64_t)v30 <= 1)
        {
          v31 = v6[1] - v5[1];
          if (v31 < 0)
            v31 = v5[1] - v6[1];
          if ((unint64_t)v31 < 2)
            goto LABEL_56;
        }
        v32 = *v4;
        v33 = *v4 - *v5;
        if (v33 < 0)
          v33 = *v5 - *v4;
        if ((unint64_t)v33 <= 1)
        {
          v34 = v4[1] - v5[1];
          if (v34 < 0)
            v34 = -v34;
          if ((unint64_t)v34 < 2)
            goto LABEL_56;
        }
        v35 = v32 - v29;
        if (v32 - v29 < 0)
          v35 = v29 - v32;
        if (v35 <= 1)
        {
          v36 = v4[1] - v6[1];
          if (v36 < 0)
            v36 = -v36;
          if ((unint64_t)v36 <= 1)
          {
LABEL_56:
            *(_QWORD *)(v4[7] + 48) = 0;
            operator delete();
          }
        }
      }
      v8 = *v4;
      v7 = v4[1];
      v9 = *(__int128 **)(v2 + 32);
      do
      {
        v10 = (uint64_t *)*((_QWORD *)v9 + 6);
        v11 = (uint64_t *)*((_QWORD *)v9 + 7);
        v12 = *v11;
        v13 = v11[1];
        v14 = (double)(v8 - *v11);
        v16 = *v10;
        v15 = v10[1];
        v17 = (double)(v15 - v7);
        v18 = (double)(v7 - v13);
        v19 = (double)(*v10 - v8);
        if (v14 * v17 - v18 * v19 == 0.0)
        {
          v20 = v7 == v13;
          v22 = v8 == v12;
          v21 = v8 == v12;
          v22 = v22 && v7 == v13;
          if (v22)
          {
            v21 = 1;
            v20 = 1;
            goto LABEL_26;
          }
          if (v16 == v8 && v15 == v7)
          {
            v16 = v8;
LABEL_26:
            v24 = *((_DWORD *)v9 + 8);
            if ((v24 & 0x80000000) == 0 && (*((_DWORD *)v9 + 4) != v24 || *((double *)v9 + 3) != *((double *)v9 + 5)))
            {
              v25 = v8 == v16 && v15 == v7;
              if (v25 || (v10 = (uint64_t *)*((_QWORD *)v9 + 7), v21 && v20))
              {
                v26 = *v9;
                v27 = v9[2];
                *((_OWORD *)v10 + 1) = v9[1];
                *((_OWORD *)v10 + 2) = v27;
                *(_OWORD *)v10 = v26;
              }
            }
            v28 = *((_QWORD *)v9 + 7);
            if (v9 == *(__int128 **)(v2 + 32))
              *(_QWORD *)(v2 + 32) = v28;
            *(_QWORD *)(v28 + 48) = *((_QWORD *)v9 + 6);
            *(_QWORD *)(*((_QWORD *)v9 + 6) + 56) = v28;
            operator delete();
          }
          if (!*(_BYTE *)(v3 + 280) || v17 * v18 + v14 * v19 < 0.0)
            goto LABEL_26;
        }
        v7 = v10[1];
        v8 = *v10;
        v9 = (__int128 *)*((_QWORD *)v9 + 6);
      }
      while (v10 != v4);
      return sub_1003D2098(v3, v2);
    }
  }
  return result;
}

uint64_t sub_1003D2098(uint64_t result, uint64_t a2)
{
  int64x2_t *v2;
  int64x2_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  int64x2_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  int64x2_t *v15;

  v2 = *(int64x2_t **)(a2 + 32);
  v3 = (int64x2_t *)v2[3].i64[0];
  v4 = (uint64_t *)v2[3].i64[1];
  v5 = (uint64_t *)v3[3].i64[0];
  if (v4 != v5)
  {
    v6 = result;
    v7 = *(int64x2_t **)(a2 + 32);
    do
    {
      v8 = v3->i64[1];
      v10 = *v4;
      v9 = v4[1];
      v13 = v5;
      v11 = *v5;
      v12 = v13[1];
      v14 = v7->i64[1];
      result = v8 - v14;
      if (((double)(v3->i64[0] - v10) * (double)(v12 - v8) - (double)(v8 - v9) * (double)(v11 - v3->i64[0]))
         * ((double)(v3->i64[0] - v7->i64[0]) * (double)(v12 - v8) - (double)(v8 - v14) * (double)(v11 - v3->i64[0])) < 0.0
        && ((double)(v10 - v3->i64[0]) * (double)(v14 - v9) - (double)(v9 - v8) * (double)(v7->i64[0] - v10))
         * ((double)(v10 - v11) * (double)(v14 - v9) - (double)(v9 - v12) * (double)(v7->i64[0] - v10)) < 0.0)
      {
        if (v7 == v2 || v3 == v2)
          *(_QWORD *)(a2 + 32) = v2[3].i64[1];
        sub_1003D21C8(v6, a2, v7);
      }
      if (v3 == v2)
        break;
      v7 = v3;
      v15 = v3 + 3;
      v3 = (int64x2_t *)v3[3].i64[0];
      v4 = (uint64_t *)v15->i64[1];
      v5 = (uint64_t *)v3[3].i64[0];
    }
    while (v4 != v5);
  }
  return result;
}

void sub_1003D21C8(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  _QWORD *v6;
  int64x2_t *v7;
  _QWORD *v8;
  int64x2_t v10;
  double v17;
  int64x2_t v18;
  uint64_t v19;
  int64x2_t *v20;
  double v21;
  int64x2_t *v22;
  double v23;
  _QWORD *v24;
  double v25;
  double v26;
  int64x2_t *v27;
  _QWORD *v28;
  int64x2_t v29;

  v6 = (_QWORD *)a3[3].i64[0];
  v7 = (int64x2_t *)a3[3].i64[1];
  v8 = (_QWORD *)v6[6];
  *(_QWORD *)(a2 + 32) = v7;
  v29 = 0uLL;
  _D2 = (double)(uint64_t)(*v8 - *v6);
  v10 = *v7;
  _Q0 = vcvtq_f64_s64(vsubq_s64(*a3, *v7));
  __asm { FMLA            D4, D2, V0.D[1] }
  if (_D4 != 0.0)
  {
    v17 = ((double)(v10.i64[0] - *v6) * (double)(uint64_t)(v8[1] - v6[1]) - (double)(v10.i64[1] - v6[1]) * _D2) / _D4;
    if (v17 <= 0.0)
    {
      v18 = *v7;
      goto LABEL_6;
    }
    if (v17 < 1.0)
    {
      v18 = vcvtq_s64_f64(vmlaq_n_f64(vcvtq_f64_s64(v10), _Q0, v17));
LABEL_6:
      v29 = v18;
      goto LABEL_8;
    }
    v29 = *a3;
  }
LABEL_8:
  v19 = *(_QWORD *)(a1 + 272);
  v20 = v7;
  if (v19)
  {
    (*(void (**)(_QWORD, int64x2_t *, int64x2_t *))(*(_QWORD *)v19 + 48))(*(_QWORD *)(a1 + 272), v7, a3);
    v20 = *(int64x2_t **)(a2 + 32);
  }
  v21 = 0.0;
  v22 = v20;
  do
  {
    v21 = v21
        + (double)(v22->i64[1] + *(_QWORD *)(v22[3].i64[1] + 8)) * (double)(*(_QWORD *)v22[3].i64[1] - v22->i64[0]);
    v22 = (int64x2_t *)v22[3].i64[0];
  }
  while (v22 != v20);
  v23 = fabs(v21 * 0.5);
  if (v23 < 2.0)
  {
    *(_QWORD *)(v20[3].i64[1] + 48) = 0;
    operator delete();
  }
  v24 = (_QWORD *)a3[3].i64[0];
  v25 = (double)(a3->i64[1] + v29.i64[1]) * (double)(v29.i64[0] - a3->i64[0])
      + (double)(v29.i64[1] + v24[1]) * (double)(*v24 - v29.i64[0])
      + (double)(a3->i64[1] + v24[1]) * (double)(a3->i64[0] - *v24);
  v26 = fabs(v25);
  if (v29.i64[0] != v7->i64[0] || (v27 = v7, v28 = v8, v29.i64[1] != v7->i64[1]))
  {
    if (v29.i64[0] != *v8 || (v27 = v7, v28 = v8, v29.i64[1] != v8[1]))
      operator new();
  }
  v8[7] = v27;
  v7[3].i64[0] = (uint64_t)v28;
  if (v26 >= 1.0 && (v26 > v23 || v21 * 0.5 > 0.0 != v25 <= 0.0))
    sub_1003D17C8();
  if (a3[3].i64[0])
    operator delete();
  operator delete();
}

BOOL sub_1003D268C(uint64_t *a1, uint64_t *a2)
{
  int v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  double v19;
  double v20;
  unsigned int v21;
  _BOOL8 v23;
  int64x2_t v24;
  int64x2_t v25;
  int64x2_t *v26;
  int64x2_t v27;
  uint64x2_t v28;
  int64x2_t v29;
  void *__p;
  _OWORD *v32;
  _OWORD v33[3];

  v3 = 0;
  v4 = (uint64_t *)a2[6];
  v5 = a1;
  do
  {
    if (v4 == a2 || (uint64_t *)a2[7] == v4)
      goto LABEL_47;
    v6 = v5[1];
    v7 = a2;
    while (1)
    {
      v8 = v7[1];
      if (v8 != v6)
        break;
      v7 = (uint64_t *)v7[6];
      if (v7 == a2)
      {
        v8 = a2[1];
        v7 = a2;
        break;
      }
    }
    if (v6 == v8)
    {
LABEL_47:
      ++v3;
    }
    else
    {
      v9 = 0;
      v10 = v6 > v8;
      v11 = *v5;
      v12 = v7;
LABEL_10:
      v12 = (uint64_t *)v12[6];
      do
      {
        if (v12 == v7)
          break;
        if ((v10 & 1) != 0)
        {
          while (1)
          {
            v13 = v12[1];
            if (v13 >= v6)
              break;
            v12 = (uint64_t *)v12[6];
            if (v12 == v7)
            {
              if (v6 > v8)
                goto LABEL_45;
              v10 = 1;
              goto LABEL_42;
            }
          }
        }
        else
        {
          while (1)
          {
            v13 = v12[1];
            if (v13 <= v6)
              break;
            v12 = (uint64_t *)v12[6];
            if (v12 == v7)
            {
              if (v6 <= v8)
                goto LABEL_45;
              v10 = 0;
              goto LABEL_42;
            }
          }
        }
        if (v12 == v7)
          break;
        v14 = *v12;
        if (v6 != v13)
        {
          v16 = (uint64_t *)v12[7];
          v17 = *v16;
          if (v11 < v14 && v11 < v17)
            goto LABEL_36;
          if (v11 > v14 && v11 > v17)
          {
            v9 = 1 - v9;
LABEL_36:
            v10 ^= 1u;
            goto LABEL_10;
          }
          v19 = (double)(v14 - v17) * (double)(v6 - v13) - (double)(v13 - v16[1]) * (double)(v11 - v14);
          if (((v10 ^ (v19 >= 0.0)) & 1) != 0)
            v9 = 1 - v9;
          if (v19 != 0.0)
            goto LABEL_36;
          goto LABEL_48;
        }
        if (v11 == v14)
          goto LABEL_48;
        v15 = (_QWORD *)v12[7];
        if (v6 == v15[1] && v11 < v14 == v11 >= *v15)
          goto LABEL_48;
        v12 = (uint64_t *)v12[6];
      }
      while (v12 != v7);
      if (v6 > v8 != (v10 & 1))
      {
LABEL_42:
        v20 = (double)(*v7 - *(_QWORD *)v7[7]) * (double)(v6 - v8)
            - (double)(v8 - *(_QWORD *)(v7[7] + 8)) * (double)(v11 - *v7);
        if (((v10 ^ (v20 >= 0.0)) & 1) != 0)
          v9 = 1 - v9;
        if (v20 == 0.0)
          goto LABEL_48;
      }
LABEL_45:
      if (!v9)
        goto LABEL_47;
      --v3;
    }
LABEL_48:
    v5 = (uint64_t *)v5[6];
    if (v3 >= 0)
      v21 = v3;
    else
      v21 = -v3;
  }
  while (v5 != a1 && v21 < 2);
  if (v21 >= 2)
    return v3 >> 31;
  sub_1003D611C(a1, (char **)&__p);
  if (__p == v32)
  {
    v29 = 0uLL;
  }
  else
  {
    v24 = vdupq_n_s64(0x8000000000000000);
    v25 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    v26 = (int64x2_t *)__p;
    do
    {
      v27 = *v26;
      v26 += 3;
      v25 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v25, v27), (int8x16_t)v27, (int8x16_t)v25);
      v24 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v27, v24), (int8x16_t)v27, (int8x16_t)v24);
    }
    while (v26 != (int64x2_t *)v32);
    v28 = (uint64x2_t)vaddq_s64(v25, v24);
    v29 = vshrq_n_s64((int64x2_t)vsraq_n_u64(v28, v28, 0x3FuLL), 1uLL);
  }
  v33[0] = v29;
  v33[1] = xmmword_100EEFC70;
  v33[2] = unk_100EEFC80;
  if (__p)
  {
    v32 = __p;
    operator delete(__p);
  }
  sub_1003D611C(a2, (char **)&__p);
  v23 = sub_10012181C((uint64_t *)v33, &__p) != 2;
  if (__p)
  {
    v32 = __p;
    operator delete(__p);
  }
  return v23;
}

void sub_1003D2994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_1003D29B0(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  result = (_QWORD *)a1[18];
  if (result)
  {
    while (result[23] != a1[23])
    {
      v3 = result[1];
      if (result[7] == v3 || (*a1 == *result ? (v4 = a1[1] == v3) : (v4 = 0), v4))
      {
        result = (_QWORD *)result[18];
        if (result)
          continue;
      }
      goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    result = (_QWORD *)a1[17];
    if (result)
    {
      while (result[23] != a1[23])
      {
        v5 = result[1];
        if (result[7] != v5 && (*a1 != *result || a1[1] != v5))
          return 0;
        result = (_QWORD *)result[17];
        if (!result)
          return result;
      }
    }
  }
  return result;
}

BOOL sub_1003D2A48(uint64_t a1, int a2, int a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  *(_DWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 12) = a3;
  *(_BYTE *)(a1 + 33) = a4;
  sub_1003D009C(a1);
  if (!a2)
    return 1;
  v9 = 0;
  if (!sub_1003D2B58(a1, &v9))
    return 1;
  while (*(_BYTE *)(a1 + 221))
  {
    sub_1003D07DC(a1, v9);
    while (1)
    {
      v6 = *(_QWORD *)(a1 + 48);
      if (!v6)
        break;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(v6 + 160);
      sub_1003D2D98(a1, v6);
    }
    if (*(_QWORD *)(a1 + 176) != *(_QWORD *)(a1 + 168))
    {
      sub_1003D3D34(a1);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a1 + 168);
    }
    *(_QWORD *)(a1 + 24) = v9;
    if (!sub_1003D2B58(a1, &v9))
    {
      if (*(_BYTE *)(a1 + 221))
      {
        sub_1003D44D0(a1);
        return *(_BYTE *)(a1 + 221) != 0;
      }
      return 0;
    }
    sub_1003D42AC((_QWORD *)a1, v9);
    sub_1003D42E0(a1, v9);
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 48);
      if (!v7)
        break;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(v7 + 160);
      sub_1003D2D98(a1, v7);
    }
  }
  return 0;
}

BOOL sub_1003D2B58(uint64_t a1, uint64_t *a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(char **)(a1 + 112);
  v3 = *(char **)(a1 + 120);
  if (v2 != v3)
  {
    *a2 = *(_QWORD *)v2;
    v4 = v3 - v2;
    if (v3 - v2 >= 9)
    {
      v5 = 0;
      v6 = v4 >> 3;
      v7 = *(_QWORD *)v2;
      v8 = (unint64_t)((v4 >> 3) - 2) >> 1;
      v9 = v2;
      do
      {
        v10 = &v9[8 * v5 + 8];
        v11 = (2 * v5) | 1;
        v5 = 2 * v5 + 2;
        if (v5 >= v6)
        {
          v12 = *(_QWORD *)v10;
          v5 = v11;
        }
        else
        {
          v12 = *(_QWORD *)v10;
          v13 = *((_QWORD *)v10 + 1);
          if (*(_QWORD *)v10 <= v13)
            v12 = *((_QWORD *)v10 + 1);
          if (*(_QWORD *)v10 >= v13)
            v5 = v11;
          else
            v10 += 8;
        }
        *(_QWORD *)v9 = v12;
        v9 = v10;
      }
      while (v5 <= v8);
      v14 = v3 - 8;
      if (v10 == v3 - 8)
      {
        *(_QWORD *)v10 = v7;
      }
      else
      {
        *(_QWORD *)v10 = *(_QWORD *)v14;
        *(_QWORD *)v14 = v7;
        v15 = v10 - v2 + 8;
        if (v15 >= 9)
        {
          v16 = (((unint64_t)v15 >> 3) - 2) >> 1;
          v17 = &v2[8 * v16];
          v18 = *(_QWORD *)v17;
          v19 = *(_QWORD *)v10;
          if (*(_QWORD *)v17 < *(_QWORD *)v10)
          {
            do
            {
              *(_QWORD *)v10 = v18;
              v10 = v17;
              if (!v16)
                break;
              v16 = (v16 - 1) >> 1;
              v17 = &v2[8 * v16];
              v18 = *(_QWORD *)v17;
            }
            while (*(_QWORD *)v17 < v19);
            *(_QWORD *)v10 = v19;
          }
        }
      }
    }
    v20 = v3 - 8;
    if (v2 == v3 - 8)
    {
LABEL_40:
      v21 = v2;
    }
    else
    {
      v21 = v3;
      while (1)
      {
        v22 = v21;
        v21 = v20;
        v23 = *a2;
        if (*a2 != *(_QWORD *)v2)
          break;
        v24 = v20 - v2;
        if (v21 - v2 >= 9)
        {
          v25 = 0;
          v26 = v24 >> 3;
          v27 = (unint64_t)((v24 >> 3) - 2) >> 1;
          v28 = v2;
          do
          {
            v29 = &v28[8 * v25 + 8];
            v30 = (2 * v25) | 1;
            v25 = 2 * v25 + 2;
            if (v25 >= v26)
            {
              v31 = *(_QWORD *)v29;
              v25 = v30;
            }
            else
            {
              v31 = *(_QWORD *)v29;
              v32 = *((_QWORD *)v29 + 1);
              if (*(_QWORD *)v29 <= v32)
                v31 = *((_QWORD *)v29 + 1);
              if (*(_QWORD *)v29 >= v32)
                v25 = v30;
              else
                v29 += 8;
            }
            *(_QWORD *)v28 = v31;
            v28 = v29;
          }
          while (v25 <= v27);
          v33 = v22 - 16;
          if (v29 == v33)
          {
            *(_QWORD *)v29 = v23;
          }
          else
          {
            *(_QWORD *)v29 = *(_QWORD *)v33;
            *(_QWORD *)v33 = v23;
            v34 = v29 - v2 + 8;
            if (v34 >= 9)
            {
              v35 = (((unint64_t)v34 >> 3) - 2) >> 1;
              v36 = &v2[8 * v35];
              v37 = *(_QWORD *)v36;
              v38 = *(_QWORD *)v29;
              if (*(_QWORD *)v36 < *(_QWORD *)v29)
              {
                do
                {
                  *(_QWORD *)v29 = v37;
                  v29 = v36;
                  if (!v35)
                    break;
                  v35 = (v35 - 1) >> 1;
                  v36 = &v2[8 * v35];
                  v37 = *(_QWORD *)v36;
                }
                while (*(_QWORD *)v36 < v38);
                *(_QWORD *)v29 = v38;
              }
            }
          }
        }
        v20 = v21 - 8;
        if (v2 == v21 - 8)
          goto LABEL_40;
      }
    }
    *(_QWORD *)(a1 + 120) = v21;
  }
  return v2 != v3;
}

void sub_1003D2D98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  double v28;
  uint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  unint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  BOOL v96;
  uint64_t v97;
  __int128 *v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  double v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  __int128 *v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  __int128 *v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  double v169;
  uint64_t v170;
  char **v171;
  uint64_t v172;
  int v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t *v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;

  v3 = a1;
  v178 = 0uLL;
  v179 = xmmword_100EEFC70;
  v180 = unk_100EEFC80;
  v4 = *(_QWORD *)(a2 + 176);
  v5 = *(_DWORD *)(a2 + 112);
  v6 = *(_QWORD *)(v4 + 8);
  v173 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 184) + 12);
  v7 = (_QWORD *)v4;
  if (*(_BYTE *)(*(_QWORD *)(a2 + 184) + 12))
  {
    if (v5 <= 0)
    {
      do
      {
        v8 = v7;
        v7 = (_QWORD *)v7[7];
      }
      while (v7[1] == v6 && (v8[8] & 6) == 0);
    }
    else
    {
      do
      {
        v8 = v7;
        v7 = (_QWORD *)v7[6];
      }
      while (v7[1] == v6 && (v8[8] & 6) == 0);
    }
  }
  else if (v5 <= 0)
  {
    do
    {
      v8 = v7;
      v7 = (_QWORD *)v7[7];
    }
    while (v7[1] == v6);
  }
  else
  {
    do
    {
      v8 = v7;
      v7 = (_QWORD *)v7[6];
    }
    while (v7[1] == v6);
  }
  v9 = *(_QWORD *)(a2 + 8);
  if ((v8[8] & 4) != 0)
    v10 = v8;
  else
    v10 = 0;
  if (v10)
    v11 = v10 == (_QWORD *)v4;
  else
    v11 = 1;
  if (!v11 && v173 == 0)
  {
    v13 = *(unsigned __int8 *)(a1 + 280);
    v14 = 56;
    if (v5 > 0)
      v14 = 48;
    v15 = *(_QWORD *)(v4 + v14);
    a1 = *(_QWORD *)v15;
    v16 = *(_QWORD *)(v15 + 8);
    v17 = *(_OWORD *)(v15 + 32);
    v181 = *(_OWORD *)(v15 + 16);
    v182 = v17;
    if (v16 == *(_QWORD *)(a2 + 56))
    {
      v18 = 0;
      v19 = *(_QWORD *)(a2 + 48);
      v20 = *(_QWORD *)a2;
      while (1)
      {
        v21 = a1;
        if (v13)
        {
          a1 = a1 >= v19;
          if ((_DWORD)a1 == v20 < v19)
            break;
        }
        if (v5 <= 0)
          v22 = 56;
        else
          v22 = 48;
        v4 = *(_QWORD *)(v4 + v22);
        *(_QWORD *)(a2 + 176) = v4;
        *(_QWORD *)(a2 + 48) = v21;
        *(_QWORD *)(a2 + 56) = v16;
        v23 = v182;
        *(_OWORD *)(a2 + 64) = v181;
        *(_OWORD *)(a2 + 80) = v23;
        a1 = *(unsigned __int8 *)(v4 + 64);
        if ((a1 & 4) == 0)
        {
          v24 = v5 <= 0 ? 56 : 48;
          v25 = *(_QWORD *)(v4 + v24);
          a1 = *(_QWORD *)v25;
          v26 = *(_QWORD *)(v25 + 8);
          v27 = *(_OWORD *)(v25 + 32);
          v181 = *(_OWORD *)(v25 + 16);
          v182 = v27;
          v18 = 1;
          v19 = v21;
          if (v26 == v16)
            continue;
        }
        goto LABEL_40;
      }
      v21 = v19;
      if ((v18 & 1) == 0)
        goto LABEL_45;
LABEL_40:
      v28 = 1.79769313e308;
      if (v21 > v20)
        v28 = -1.79769313e308;
      if (v16 != v9)
        v28 = (double)(v21 - v20) / (double)(v16 - v9);
      *(double *)(a2 + 104) = v28;
    }
  }
LABEL_45:
  v30 = (__int128 *)(a2 + 48);
  v29 = *(_QWORD *)(a2 + 48);
  v31 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)a2 == v29)
  {
    v32 = a2;
    do
    {
      v32 = *(_QWORD *)(v32 + 144);
      v33 = v32 != 0;
    }
    while (v32 && *(_QWORD **)(v32 + 176) != v10);
    v34 = *(_QWORD *)(a2 + 96);
    v175 = v34;
  }
  else
  {
    v33 = v31 < v29;
    if (v31 >= v29)
      v35 = *(_QWORD *)(a2 + 48);
    else
      v35 = *(_QWORD *)(a2 + 96);
    v175 = v35;
    if (v31 <= v29)
      v34 = *(_QWORD *)(a2 + 48);
    else
      v34 = *(_QWORD *)(a2 + 96);
  }
  if (*(_QWORD *)(a2 + 128))
  {
    *(_QWORD *)&v181 = *(_QWORD *)(a2 + 96);
    *((_QWORD *)&v181 + 1) = v9;
    v36 = *(_OWORD *)(a2 + 32);
    v182 = *(_OWORD *)(a2 + 16);
    v183 = v36;
    a1 = sub_1003D1B40(a1, a2, (uint64_t *)&v181);
    v37 = a1;
    if (!*(_BYTE *)(*(_QWORD *)(a1 + 64) + 120))
    {
      a1 = v3 + 184;
      v38 = *(_QWORD *)(v3 + 184);
      v39 = *(_QWORD *)(v3 + 176);
      if (v39 >= v38)
      {
        v41 = *(_QWORD *)(v3 + 168);
        v42 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v39 - v41) >> 3);
        v43 = v42 + 1;
        if (v42 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_100007810();
        v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v38 - v41) >> 3);
        if (2 * v44 > v43)
          v43 = 2 * v44;
        if (v44 >= 0x555555555555555)
          v45 = 0xAAAAAAAAAAAAAAALL;
        else
          v45 = v43;
        if (v45)
          v46 = (char *)sub_100045008(a1, v45);
        else
          v46 = 0;
        v47 = &v46[24 * v42];
        v48 = &v46[24 * v45];
        *(_QWORD *)v47 = v37;
        *((_QWORD *)v47 + 1) = 0;
        v47[16] = 1;
        v40 = v47 + 24;
        v49 = *(_QWORD *)(v3 + 168);
        a1 = *(_QWORD *)(v3 + 176);
        if (a1 != v49)
        {
          do
          {
            v50 = *(_OWORD *)(a1 - 24);
            *(v47 - 8) = *(_BYTE *)(a1 - 8);
            *(_OWORD *)(v47 - 24) = v50;
            v47 -= 24;
            a1 -= 24;
          }
          while (a1 != v49);
          a1 = *(_QWORD *)(v3 + 168);
        }
        *(_QWORD *)(v3 + 168) = v47;
        *(_QWORD *)(v3 + 176) = v40;
        *(_QWORD *)(v3 + 184) = v48;
        if (a1)
          operator delete((void *)a1);
      }
      else
      {
        *(_QWORD *)v39 = v37;
        *(_QWORD *)(v39 + 8) = 0;
        *(_BYTE *)(v39 + 16) = 1;
        v40 = (char *)(v39 + 24);
      }
      *(_QWORD *)(v3 + 176) = v40;
    }
  }
  v176 = (uint64_t *)(a2 + 144);
  v177 = (uint64_t *)(a2 + 136);
  v174 = (_QWORD *)(v3 + 40);
  v171 = (char **)(v3 + 168);
  v172 = v3 + 112;
  v170 = v3 + 184;
  while (1)
  {
    v51 = (uint64_t *)(a2 + 144);
    if (!v33)
      v51 = (uint64_t *)(a2 + 136);
    v52 = *v51;
    if (*v51)
    {
      while (1)
      {
        v53 = (_QWORD *)v52;
        if (*(_QWORD **)(v52 + 176) == v10)
        {
          if (*(_QWORD *)(a2 + 128))
          {
            if (*(_DWORD *)(v52 + 196))
              sub_1003D1B00(v3, v52);
            while (*(_QWORD **)(a2 + 176) != v10)
            {
              a1 = sub_1003D1B40(a1, a2, (uint64_t *)(a2 + 48));
              v123 = *(_OWORD *)(a2 + 80);
              v124 = *v30;
              *(_OWORD *)(a2 + 16) = *(_OWORD *)(a2 + 64);
              *(_OWORD *)(a2 + 32) = v123;
              *(_OWORD *)a2 = v124;
              if (*(int *)(a2 + 112) <= 0)
                v125 = 56;
              else
                v125 = 48;
              v126 = *(__int128 **)(*(_QWORD *)(a2 + 176) + v125);
              *(_QWORD *)(a2 + 176) = v126;
              v127 = *v126;
              v128 = v126[2];
              *(_OWORD *)(a2 + 64) = v126[1];
              *(_OWORD *)(a2 + 80) = v128;
              *v30 = v127;
              v130 = *(_QWORD *)a2;
              v129 = *(_QWORD *)(a2 + 8);
              *(_QWORD *)(a2 + 96) = *(_QWORD *)a2;
              v131 = *(_QWORD *)(a2 + 56);
              if (v131 == v129)
              {
                v132 = 1.79769313e308;
                if (*(_QWORD *)v30 > v130)
                  v132 = -1.79769313e308;
              }
              else
              {
                v132 = (double)(*(_QWORD *)v30 - v130) / (double)(v131 - v129);
              }
              *(double *)(a2 + 104) = v132;
              if (*(_DWORD *)(a2 + 196))
                sub_1003D1B00(v3, a2);
              if (v131 != v129)
              {
                *(_QWORD *)&v181 = v131;
                sub_1003D5F80(v172, &v181);
                sub_1003D0E68(v3, a2, (uint64_t *)a2, 0);
                sub_1003D15CC(v3, a2, (uint64_t *)a2, 1);
              }
            }
            if (v33)
              sub_1003D1900(v3, a2, v52, (uint64_t *)(a2 + 48));
            else
              sub_1003D1900(v3, v52, a2, (uint64_t *)(a2 + 48));
          }
          v134 = *(_QWORD *)(v52 + 136);
          v133 = *(_QWORD *)(v52 + 144);
          if (*(_OWORD *)(v52 + 136) == 0)
          {
            v136 = (_QWORD *)(v3 + 40);
            if (*v174 == v52)
              *v174 = v133;
          }
          else
          {
            v135 = (_QWORD *)(v134 + 144);
            v136 = (_QWORD *)(v3 + 40);
            if (!v134)
              v135 = (_QWORD *)(v3 + 40);
            *v135 = v133;
            if (v133)
              *(_QWORD *)(v133 + 136) = v134;
          }
          v137 = *v177;
          v138 = *v176;
          if (*v177 | *v176)
          {
            v139 = (_QWORD *)(v137 + 144);
            if (!v137)
              v139 = v136;
            *v139 = v138;
            if (v138)
              *(_QWORD *)(v138 + 136) = v137;
          }
          else if (*v136 == a2)
          {
            *v136 = v138;
          }
          operator delete();
        }
        v54 = *(_QWORD **)(a2 + 176);
        if (v10 == v54 && (v10[8] & 3) == 0)
        {
          v55 = *(_QWORD *)(v52 + 96);
        }
        else
        {
          v55 = *(_QWORD *)(v52 + 96);
          if (v33)
          {
            if (v55 > v34)
              break;
          }
          else if (v55 < v175)
          {
            break;
          }
          if (v55 == *(_QWORD *)v30)
          {
            v56 = *(_QWORD *)(v52 + 56);
            if (v56 != *(_QWORD *)(v52 + 8))
            {
              v57 = 7;
              if (*(int *)(a2 + 112) > 0)
                v57 = 6;
              v58 = (__int128 *)v54[v57];
              v60 = v58[1];
              v59 = v58[2];
              v178 = *v58;
              v179 = v60;
              v180 = v59;
              v61 = *(_QWORD *)(v52 + 184);
              if (v33)
              {
                if (!*(_BYTE *)(v61 + 12)
                  || *(_DWORD *)(v61 + 8) == *(_DWORD *)(*(_QWORD *)(a2 + 184) + 8)
                  || *(_QWORD *)(v52 + 128))
                {
                  v62 = *(_QWORD *)(v52 + 48);
                  if (v56 != *((_QWORD *)&v178 + 1) && v62 != *(_QWORD *)v52)
                  {
                    v63 = *(_QWORD *)(v52 + 8);
                    v62 = *(_QWORD *)v52;
                    if (*((_QWORD *)&v178 + 1) != v63)
                      v62 = *(_QWORD *)v52
                          + (uint64_t)nearbyint(*(double *)(v52 + 104) * (double)(*((_QWORD *)&v178 + 1) - v63));
                  }
                  if (v62 >= (uint64_t)v178)
                    break;
                }
                else
                {
                  v86 = *(_QWORD *)(v52 + 48);
                  if (v56 != *((_QWORD *)&v178 + 1) && v86 != *(_QWORD *)v52)
                  {
                    v87 = *(_QWORD *)(v52 + 8);
                    v86 = *(_QWORD *)v52;
                    if (*((_QWORD *)&v178 + 1) != v87)
                      v86 = *(_QWORD *)v52
                          + (uint64_t)nearbyint(*(double *)(v52 + 104) * (double)(*((_QWORD *)&v178 + 1) - v87));
                  }
                  if (v86 > (uint64_t)v178)
                    break;
                }
              }
              else if (!*(_BYTE *)(v61 + 12)
                     || *(_DWORD *)(v61 + 8) == *(_DWORD *)(*(_QWORD *)(a2 + 184) + 8)
                     || *(_QWORD *)(v52 + 128))
              {
                v64 = *(_QWORD *)(v52 + 48);
                if (v56 != *((_QWORD *)&v178 + 1) && v64 != *(_QWORD *)v52)
                {
                  v65 = *(_QWORD *)(v52 + 8);
                  v64 = *(_QWORD *)v52;
                  if (*((_QWORD *)&v178 + 1) != v65)
                    v64 = *(_QWORD *)v52
                        + (uint64_t)nearbyint(*(double *)(v52 + 104) * (double)(*((_QWORD *)&v178 + 1) - v65));
                }
                if (v64 <= (uint64_t)v178)
                  break;
              }
              else
              {
                v88 = *(_QWORD *)(v52 + 48);
                if (v56 != *((_QWORD *)&v178 + 1) && v88 != *(_QWORD *)v52)
                {
                  v89 = *(_QWORD *)(v52 + 8);
                  v88 = *(_QWORD *)v52;
                  if (*((_QWORD *)&v178 + 1) != v89)
                    v88 = *(_QWORD *)v52
                        + (uint64_t)nearbyint(*(double *)(v52 + 104) * (double)(*((_QWORD *)&v178 + 1) - v89));
                }
                if (v88 < (uint64_t)v178)
                  break;
              }
            }
          }
        }
        v66 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)&v178 = v55;
        *((_QWORD *)&v178 + 1) = v66;
        v179 = xmmword_100EEFC70;
        v180 = unk_100EEFC80;
        if (v33)
        {
          a1 = sub_1003D0FD8(v3, a2, v52, (uint64_t *)&v178);
          v52 = *(_QWORD *)(v52 + 144);
          if (v52)
            *(_QWORD *)(v52 + 136) = a2;
          v67 = *v177;
          if (*v177)
            *(_QWORD *)(v67 + 144) = v53;
          v53[17] = v67;
          v53[18] = a2;
          *(_QWORD *)(a2 + 136) = v53;
          *(_QWORD *)(a2 + 144) = v52;
          v68 = v53;
          v69 = (uint64_t *)(a2 + 144);
          if (v53[17])
            goto LABEL_122;
        }
        else
        {
          a1 = sub_1003D0FD8(v3, v52, a2, (uint64_t *)&v178);
          v70 = *(_QWORD *)(a2 + 144);
          if (v70)
            *(_QWORD *)(v70 + 136) = v52;
          v71 = *(_QWORD *)(v52 + 136);
          if (v71)
            *(_QWORD *)(v71 + 144) = a2;
          *(_QWORD *)(a2 + 136) = v71;
          *(_QWORD *)(a2 + 144) = v52;
          *(_QWORD *)(v52 + 136) = a2;
          *(_QWORD *)(v52 + 144) = v70;
          v68 = (_QWORD *)a2;
          v69 = (uint64_t *)(a2 + 136);
          v52 = *(_QWORD *)(a2 + 136);
          if (v52)
            goto LABEL_122;
        }
        *v174 = v68;
        v52 = *v69;
LABEL_122:
        *(_QWORD *)(a2 + 96) = v53[12];
        v72 = *(_QWORD *)(a2 + 128);
        if (!v72)
          goto LABEL_126;
        v73 = *(_QWORD *)(v72 + 32);
        if (*(_QWORD *)(v72 + 16) != a2)
          v73 = *(_QWORD *)(v73 + 48);
        if (!*(_BYTE *)(*(_QWORD *)(v73 + 64) + 120))
        {
          v75 = *(_QWORD *)(v3 + 176);
          v74 = *(_QWORD *)(v3 + 184);
          if (v75 >= v74)
          {
            v77 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v75 - (_QWORD)*v171) >> 3);
            v78 = v77 + 1;
            if (v77 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_100007810();
            v79 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v74 - (_QWORD)*v171) >> 3);
            if (2 * v79 > v78)
              v78 = 2 * v79;
            if (v79 >= 0x555555555555555)
              v80 = 0xAAAAAAAAAAAAAAALL;
            else
              v80 = v78;
            if (v80)
              a1 = (uint64_t)sub_100045008(v170, v80);
            else
              a1 = 0;
            v81 = a1 + 24 * v77;
            *(_QWORD *)v81 = v73;
            *(_QWORD *)(v81 + 8) = 0;
            *(_BYTE *)(v81 + 16) = 1;
            v83 = *(char **)(v3 + 168);
            v82 = *(char **)(v3 + 176);
            v84 = v81;
            if (v82 != v83)
            {
              do
              {
                v85 = *(_OWORD *)(v82 - 24);
                *(_BYTE *)(v84 - 8) = *(v82 - 8);
                *(_OWORD *)(v84 - 24) = v85;
                v84 -= 24;
                v82 -= 24;
              }
              while (v82 != v83);
              v82 = *v171;
            }
            v76 = v81 + 24;
            *(_QWORD *)(v3 + 168) = v84;
            *(_QWORD *)(v3 + 176) = v81 + 24;
            *(_QWORD *)(v3 + 184) = a1 + 24 * v80;
            if (v82)
              operator delete(v82);
          }
          else
          {
            *(_QWORD *)v75 = v73;
            *(_QWORD *)(v75 + 8) = 0;
            v76 = v75 + 24;
            *(_BYTE *)(v75 + 16) = 1;
          }
          *(_QWORD *)(v3 + 176) = v76;
          if (!v52)
            break;
        }
        else
        {
LABEL_126:
          if (!v52)
            break;
        }
      }
    }
    v90 = *(_QWORD *)(a2 + 176);
    if (v173 && (*(_BYTE *)(v90 + 64) & 3) != 0)
    {
      if (*(_QWORD *)(a2 + 128))
      {
        sub_1003D1B40(a1, a2, (uint64_t *)(a2 + 48));
        v145 = *(_QWORD *)(a2 + 128);
        v146 = 24;
        if (*(_QWORD *)(v145 + 16) == a2)
          v146 = 16;
        *(_QWORD *)(v145 + v146) = 0;
        *(_QWORD *)(a2 + 128) = 0;
      }
      v147 = *v177;
      v148 = *v176;
      if (*v177 | *v176)
      {
        v149 = (_QWORD *)(v147 + 144);
        if (!v147)
          v149 = (_QWORD *)(v3 + 40);
        *v149 = v148;
        if (v148)
          *(_QWORD *)(v148 + 136) = v147;
      }
      else if (*v174 == a2)
      {
        *v174 = v148;
      }
      operator delete();
    }
    v91 = *(_DWORD *)(a2 + 112);
    v92 = 56;
    if (v91 > 0)
      v92 = 48;
    v93 = *(_QWORD *)(*(_QWORD *)(v90 + v92) + 8);
    v94 = *(_QWORD *)(a2 + 128);
    if (v93 != *(_QWORD *)(a2 + 56))
      break;
    if (v94)
    {
      a1 = sub_1003D1B40(a1, a2, (uint64_t *)(a2 + 48));
      v91 = *(_DWORD *)(a2 + 112);
      v90 = *(_QWORD *)(a2 + 176);
    }
    v95 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)a2 = *v30;
    *(_OWORD *)(a2 + 16) = v95;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(a2 + 80);
    v96 = v91 <= 0;
    v97 = 56;
    if (!v96)
      v97 = 48;
    v98 = *(__int128 **)(v90 + v97);
    *(_QWORD *)(a2 + 176) = v98;
    v99 = *v98;
    v100 = v98[2];
    *(_OWORD *)(a2 + 64) = v98[1];
    *(_OWORD *)(a2 + 80) = v100;
    *v30 = v99;
    v102 = *(_QWORD *)a2;
    v101 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a2 + 96) = *(_QWORD *)a2;
    v103 = *(_QWORD *)(a2 + 56);
    if (v103 == v101)
    {
      v104 = 1.79769313e308;
      if (*(_QWORD *)v30 > v102)
        v104 = -1.79769313e308;
    }
    else
    {
      v104 = (double)(*(_QWORD *)v30 - v102) / (double)(v103 - v101);
    }
    *(double *)(a2 + 104) = v104;
    if (*(_DWORD *)(a2 + 196))
      sub_1003D1B00(v3, a2);
    if (v103 != v101)
    {
      *(_QWORD *)&v181 = v103;
      sub_1003D5F80(v172, &v181);
      sub_1003D0E68(v3, a2, (uint64_t *)a2, 0);
      sub_1003D15CC(v3, a2, (uint64_t *)a2, 1);
    }
    if (v173 || !*(_BYTE *)(v3 + 280))
    {
      v110 = *(_QWORD *)a2;
      v111 = *(_QWORD *)(a2 + 48);
    }
    else
    {
      v105 = *(_DWORD *)(a2 + 112);
      v106 = *(_QWORD *)(a2 + 176);
      v107 = 56;
      if (v105 > 0)
        v107 = 48;
      v108 = *(_QWORD *)(v106 + v107);
      v109 = *(_QWORD *)(v108 + 8);
      v110 = *(_QWORD *)a2;
      v111 = *(_QWORD *)(a2 + 48);
      if (v109 == *(_QWORD *)(a2 + 8))
      {
        v112 = *(_QWORD *)v108;
        if (v110 < v111 != v111 < *(_QWORD *)v108)
        {
          v113 = *(_OWORD *)(v108 + 32);
          v181 = *(_OWORD *)(v108 + 16);
          v182 = v113;
          if (v109 == *(_QWORD *)(a2 + 56) && v112 >= v111 != v110 < v111)
          {
            do
            {
              v111 = v112;
              v114 = 56;
              if (v105 > 0)
                v114 = 48;
              v106 = *(_QWORD *)(v106 + v114);
              *(_QWORD *)(a2 + 176) = v106;
              *(_QWORD *)(a2 + 48) = v111;
              *(_QWORD *)(a2 + 56) = v109;
              v115 = v182;
              *(_OWORD *)(a2 + 64) = v181;
              *(_OWORD *)(a2 + 80) = v115;
              if ((*(_BYTE *)(v106 + 64) & 4) != 0)
                break;
              v116 = 56;
              if (v105 > 0)
                v116 = 48;
              v117 = *(_QWORD *)(v106 + v116);
              v112 = *(_QWORD *)v117;
              v118 = *(_QWORD *)(v117 + 8);
              v119 = *(_OWORD *)(v117 + 32);
              v181 = *(_OWORD *)(v117 + 16);
              v182 = v119;
              if (v118 != v109)
                break;
            }
            while (v112 >= v111 != v110 < v111);
            v120 = 1.79769313e308;
            if (v111 > v110)
              v120 = -1.79769313e308;
            *(double *)(a2 + 104) = v120;
          }
        }
      }
    }
    v34 = *(_QWORD *)(a2 + 96);
    if (v110 == v111)
    {
      v121 = a2;
      do
      {
        v121 = *(_QWORD *)(v121 + 144);
        v33 = v121 != 0;
      }
      while (v121 && *(_QWORD **)(v121 + 176) != v10);
      v175 = *(_QWORD *)(a2 + 96);
    }
    else
    {
      v33 = v34 < v111;
      if (v34 >= v111)
        v122 = v111;
      else
        v122 = *(_QWORD *)(a2 + 96);
      v175 = v122;
      if (v34 <= v111)
        v34 = v111;
    }
  }
  if (v94)
  {
    v140 = sub_1003D1B40(a1, a2, (uint64_t *)(a2 + 48));
    v141 = v140;
    if (!*(_BYTE *)(*(_QWORD *)(v140 + 64) + 120))
    {
      v143 = *(_QWORD *)(v3 + 176);
      v142 = *(_QWORD *)(v3 + 184);
      if (v143 >= v142)
      {
        v150 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v143 - (_QWORD)*v171) >> 3);
        v151 = v150 + 1;
        if (v150 + 1 > 0xAAAAAAAAAAAAAAALL)
          sub_100007810();
        v152 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v142 - (_QWORD)*v171) >> 3);
        if (2 * v152 > v151)
          v151 = 2 * v152;
        if (v152 >= 0x555555555555555)
          v153 = 0xAAAAAAAAAAAAAAALL;
        else
          v153 = v151;
        if (v153)
          v154 = (char *)sub_100045008(v170, v153);
        else
          v154 = 0;
        v155 = &v154[24 * v150];
        v156 = &v154[24 * v153];
        *(_QWORD *)v155 = v141;
        *((_QWORD *)v155 + 1) = 0;
        v155[16] = 1;
        v144 = v155 + 24;
        v158 = *(char **)(v3 + 168);
        v157 = *(char **)(v3 + 176);
        if (v157 != v158)
        {
          do
          {
            v159 = *(_OWORD *)(v157 - 24);
            *(v155 - 8) = *(v157 - 8);
            *(_OWORD *)(v155 - 24) = v159;
            v155 -= 24;
            v157 -= 24;
          }
          while (v157 != v158);
          v157 = *v171;
        }
        *(_QWORD *)(v3 + 168) = v155;
        *(_QWORD *)(v3 + 176) = v144;
        *(_QWORD *)(v3 + 184) = v156;
        if (v157)
          operator delete(v157);
      }
      else
      {
        *(_QWORD *)v143 = v140;
        *(_QWORD *)(v143 + 8) = 0;
        *(_BYTE *)(v143 + 16) = 1;
        v144 = (char *)(v143 + 24);
      }
      *(_QWORD *)(v3 + 176) = v144;
    }
  }
  v160 = *(_OWORD *)(a2 + 80);
  v161 = *v30;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a2 + 32) = v160;
  *(_OWORD *)a2 = v161;
  v162 = 56;
  if (*(int *)(a2 + 112) > 0)
    v162 = 48;
  v163 = *(__int128 **)(*(_QWORD *)(a2 + 176) + v162);
  *(_QWORD *)(a2 + 176) = v163;
  v164 = *v163;
  v165 = v163[2];
  *(_OWORD *)(a2 + 64) = v163[1];
  *(_OWORD *)(a2 + 80) = v165;
  *v30 = v164;
  v167 = *(_QWORD *)a2;
  v166 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 96) = *(_QWORD *)a2;
  v168 = *(_QWORD *)(a2 + 56);
  if (v168 == v166)
  {
    v169 = 1.79769313e308;
    if (*(_QWORD *)v30 > v167)
      v169 = -1.79769313e308;
  }
  else
  {
    v169 = (double)(*(_QWORD *)v30 - v167) / (double)(v168 - v166);
  }
  *(double *)(a2 + 104) = v169;
  if (*(_DWORD *)(a2 + 196))
    sub_1003D1B00(v3, a2);
  if (v168 != v166)
  {
    *(_QWORD *)&v181 = v168;
    sub_1003D5F80(v172, &v181);
    sub_1003D0E68(v3, a2, (uint64_t *)a2, 0);
    sub_1003D15CC(v3, a2, (uint64_t *)a2, 1);
  }
}

void sub_1003D3D34(uint64_t a1)
{
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *i;
  _QWORD *v27;
  _QWORD *j;
  char v29;

  v2 = *(_QWORD *)(a1 + 168);
  v3 = *(__int128 **)(a1 + 176);
  if ((__int128 *)v2 != v3)
  {
    v4 = 0;
    v5 = v2;
    do
    {
      v6 = *(_QWORD **)v5;
      v7 = *(_QWORD *)v5 + 64;
      do
      {
        v8 = *(_QWORD *)v7;
        v9 = *(_QWORD **)(*(_QWORD *)v7 + 32);
        v7 = *(_QWORD *)v7 + 8;
      }
      while (!v9);
      v10 = *(_QWORD *)(v8 + 16);
      v11 = v6[1];
      v12 = *(_QWORD **)v5;
      if (v10)
      {
        v13 = *(_QWORD **)v5;
        do
        {
          if (v13 == (_QWORD *)v9[6])
          {
            v14 = (_QWORD *)v9[6];
            break;
          }
          v14 = v13;
          v13 = (_QWORD *)v13[7];
        }
        while (v13[1] == v11);
        while (v6 != v9)
        {
          v15 = v6;
          v6 = (_QWORD *)v6[6];
          if (v6[1] != v11)
          {
            v9 = v15;
            break;
          }
        }
      }
      else
      {
        do
        {
          v14 = v12;
          v12 = (_QWORD *)v12[7];
        }
        while (v12 != v6 && v12[1] == v11);
        do
        {
          v9 = v6;
          v6 = (_QWORD *)v6[6];
        }
        while (v6 != v14 && v6[1] == v11);
      }
      if (*v14 == *v9)
        goto LABEL_26;
      v16 = *v14 < *v9;
      if (*v14 >= *v9)
        v17 = v9;
      else
        v17 = v14;
      if (*v14 >= *v9)
        v9 = v14;
      *(_QWORD *)v5 = v17;
      *(_QWORD *)(v5 + 8) = v9;
      *(_BYTE *)(v5 + 16) = v16;
      if (v17[9])
      {
LABEL_26:
        *(_QWORD *)(v5 + 8) = 0;
      }
      else
      {
        v17[9] = v5;
        ++v4;
      }
      v5 += 24;
    }
    while ((__int128 *)v5 != v3);
    if (v4 >= 2)
    {
      sub_1003D7734(v2, v3, (uint64_t)&v29, 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v3 - v2) >> 3)), 1);
      v18 = *(_QWORD *)(a1 + 168);
      v19 = v18 + 24 * v4;
      while (v18 != v19 - 24)
      {
        v20 = v18;
        v18 += 24;
        if (v18 != v19)
        {
          v21 = v18;
          do
          {
            v22 = *(_QWORD **)v21;
            if (**(_QWORD **)v21 < **(_QWORD **)(v20 + 8)
              && *(unsigned __int8 *)(v21 + 16) != *(unsigned __int8 *)(v20 + 16))
            {
              v23 = *(_QWORD **)v20;
              if (**(_QWORD **)(v21 + 8) > **(_QWORD **)v20)
              {
                v24 = v23[1];
                if (*(_BYTE *)(v20 + 16))
                {
                  v25 = (_QWORD *)v23[6];
                  if (v25[1] == v24)
                  {
                    do
                    {
                      v22 = *(_QWORD **)v21;
                      if (*v25 > **(_QWORD **)v21)
                        goto LABEL_42;
                      *(_QWORD *)v20 = v25;
                      v25 = (_QWORD *)v25[6];
                    }
                    while (v25[1] == v24);
                    v22 = *(_QWORD **)v21;
                  }
LABEL_42:
                  for (i = (_QWORD *)v22[7]; i[1] == v24; i = (_QWORD *)i[7])
                  {
                    if (*i > **(_QWORD **)v20)
                      break;
                    *(_QWORD *)v21 = i;
                  }
                  operator new();
                }
                v27 = (_QWORD *)v23[7];
                if (v27[1] == v24)
                {
                  do
                  {
                    v22 = *(_QWORD **)v21;
                    if (*v27 > **(_QWORD **)v21)
                      goto LABEL_50;
                    *(_QWORD *)v20 = v27;
                    v27 = (_QWORD *)v27[7];
                  }
                  while (v27[1] == v24);
                  v22 = *(_QWORD **)v21;
                }
LABEL_50:
                for (j = (_QWORD *)v22[6]; j[1] == v24 && *j <= **(_QWORD **)v20; j = (_QWORD *)j[6])
                  *(_QWORD *)v21 = j;
                operator new();
              }
            }
            v21 += 24;
          }
          while (v21 != v19);
        }
      }
    }
  }
}

void sub_1003D42AC(_QWORD *a1, uint64_t a2)
{
  __n128 v3;

  if (sub_1003D48CC(a1, a2))
  {
    sub_1003D4AA0(a1, v3);
    a1[19] = a1[18];
  }
}

void sub_1003D42E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(a1 + 48) = 0;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
  {
    v4 = a1;
    v5 = a1 + 112;
    while (1)
    {
      v6 = *(_QWORD *)(v2 + 48);
      v7 = (_OWORD *)(v2 + 48);
      if (*(_QWORD *)(v2 + 56) != a2)
        break;
      *(_QWORD *)(v2 + 96) = v6;
      v8 = *(_QWORD *)(v2 + 176);
      if ((*(_BYTE *)(v8 + 64) & 4) != 0)
      {
        a1 = sub_1003D5060(v4, v2);
        v2 = a1;
        if (!a1)
          return;
      }
      else
      {
        if (*(_QWORD *)(v2 + 128))
        {
          a1 = sub_1003D1B40(a1, v2, (uint64_t *)(v2 + 48));
          v8 = *(_QWORD *)(v2 + 176);
        }
        v9 = *(_OWORD *)(v2 + 64);
        *(_OWORD *)v2 = *v7;
        *(_OWORD *)(v2 + 16) = v9;
        *(_OWORD *)(v2 + 32) = *(_OWORD *)(v2 + 80);
        if (*(int *)(v2 + 112) <= 0)
          v10 = 56;
        else
          v10 = 48;
        v11 = *(__int128 **)(v8 + v10);
        *(_QWORD *)(v2 + 176) = v11;
        v12 = *v11;
        v13 = v11[2];
        *(_OWORD *)(v2 + 64) = v11[1];
        *(_OWORD *)(v2 + 80) = v13;
        *v7 = v12;
        v15 = *(_QWORD *)v2;
        v14 = *(_QWORD *)(v2 + 8);
        *(_QWORD *)(v2 + 96) = *(_QWORD *)v2;
        v16 = *(_QWORD *)(v2 + 56);
        if (v16 == v14)
        {
          v17 = 1.79769313e308;
          if (*(_QWORD *)v7 > v15)
            v17 = -1.79769313e308;
        }
        else
        {
          v17 = (double)(*(_QWORD *)v7 - v15) / (double)(v16 - v14);
        }
        *(double *)(v2 + 104) = v17;
        if (*(_DWORD *)(v2 + 196))
          sub_1003D1B00(v4, v2);
        if (v16 == v14
          || (v19 = v16,
              sub_1003D5F80(v5, &v19),
              sub_1003D0E68(v4, v2, (uint64_t *)v2, 0),
              sub_1003D15CC(v4, v2, (uint64_t *)v2, 1),
              *(_QWORD *)(v2 + 56) == *(_QWORD *)(v2 + 8)))
        {
          *(_QWORD *)(v2 + 160) = *(_QWORD *)(v4 + 48);
          *(_QWORD *)(v4 + 48) = v2;
        }
LABEL_26:
        v2 = *(_QWORD *)(v2 + 144);
        if (!v2)
          return;
      }
    }
    if (v6 != *(_QWORD *)v2)
    {
      v6 = *(_QWORD *)v2;
      v18 = a2 - *(_QWORD *)(v2 + 8);
      if (v18)
        v6 = *(_QWORD *)v2 + (uint64_t)nearbyint(*(double *)(v2 + 104) * (double)v18);
    }
    *(_QWORD *)(v2 + 96) = v6;
    goto LABEL_26;
  }
}

void sub_1003D44D0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *i;
  uint64_t v4;
  uint64_t j;
  uint64_t v6;
  uint64_t k;
  uint64_t v8;
  uint64_t v9;
  uint64_t m;
  uint64_t v11;
  BOOL v12;

  v1 = *(_QWORD **)(a1 + 192);
  for (i = *(_QWORD **)(a1 + 200); v1 != i; v1 += 2)
  {
    v4 = *v1;
    for (j = *(_QWORD *)(*v1 + 64); j; j = *(_QWORD *)(j + 8))
    {
      if (*(_QWORD *)(j + 32))
        break;
    }
    v6 = v1[1];
    for (k = *(_QWORD *)(v6 + 64); k; k = *(_QWORD *)(k + 8))
    {
      if (*(_QWORD *)(k + 32))
        break;
    }
    v8 = *(_QWORD *)(v4 + 48);
    v9 = *(_QWORD *)(v6 + 56);
    *(_QWORD *)(v4 + 48) = v6;
    *(_QWORD *)(v6 + 56) = v4;
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v9 + 48) = v8;
    if (j == k)
      sub_1003D17C8();
    *(_QWORD *)(k + 32) = 0;
    if (*(_BYTE *)(a1 + 33))
    {
      for (m = *(_QWORD *)(j + 8); m; *(_QWORD *)(j + 8) = m)
      {
        if (*(_QWORD *)(m + 32))
          break;
        m = *(_QWORD *)(m + 8);
      }
      v11 = j;
      do
      {
        v11 = *(_QWORD *)(v11 + 8);
        if (v11)
          v12 = v11 == k;
        else
          v12 = 1;
      }
      while (!v12);
      if (v11)
        *(_QWORD *)(j + 8) = *(_QWORD *)(k + 8);
      *(_QWORD *)(k + 8) = j;
      sub_1003D4774(k, j);
    }
    else
    {
      *(_QWORD *)(k + 8) = j;
    }
  }
}

void sub_1003D4774(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  void **v6;
  _QWORD *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v2 = *(_QWORD ***)(a1 + 48);
  if (v2)
  {
    if (!*(_QWORD *)(a2 + 48))
      operator new();
    v5 = *v2;
    if (*v2 != v2[1])
    {
      do
      {
        v6 = *(void ***)(a2 + 48);
        v7 = v6[1];
        v8 = (unint64_t)v6[2];
        if ((unint64_t)v7 >= v8)
        {
          v10 = ((char *)v7 - (_BYTE *)*v6) >> 3;
          if ((unint64_t)(v10 + 1) >> 61)
            sub_100007810();
          v11 = v8 - (_QWORD)*v6;
          v12 = v11 >> 2;
          if (v11 >> 2 <= (unint64_t)(v10 + 1))
            v12 = v10 + 1;
          if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
            v13 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v13 = v12;
          if (v13)
            v14 = (char *)sub_10002BA34((uint64_t)(v6 + 2), v13);
          else
            v14 = 0;
          v15 = &v14[8 * v10];
          *(_QWORD *)v15 = *v5;
          v9 = v15 + 8;
          v17 = (char *)*v6;
          v16 = (char *)v6[1];
          if (v16 != *v6)
          {
            do
            {
              v18 = *((_QWORD *)v16 - 1);
              v16 -= 8;
              *((_QWORD *)v15 - 1) = v18;
              v15 -= 8;
            }
            while (v16 != v17);
            v16 = (char *)*v6;
          }
          *v6 = v15;
          v6[1] = v9;
          v6[2] = &v14[8 * v13];
          if (v16)
            operator delete(v16);
        }
        else
        {
          *v7 = *v5;
          v9 = v7 + 1;
        }
        v6[1] = v9;
        ++v5;
        v2 = *(_QWORD ***)(a1 + 48);
      }
      while (v5 != v2[1]);
      v5 = *v2;
    }
    v2[1] = v5;
  }
}

BOOL sub_1003D48CC(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;

  v2 = (uint64_t *)a1[5];
  if (v2 && v2[18])
  {
    a1[6] = v2;
    v5 = v2;
    do
    {
      v7 = v5[17];
      v6 = (uint64_t *)v5[18];
      v5[19] = v7;
      v5[20] = (uint64_t)v6;
      v5[21] = (uint64_t)v6;
      if (*((_DWORD *)v5 + 49) == 1)
      {
        v8 = *(_QWORD *)(v7 + 96);
      }
      else
      {
        v8 = v5[6];
        if (v5[7] != a2 && v8 != *v5)
        {
          v8 = *v5;
          v9 = a2 - v5[1];
          if (v9)
            v8 = *v5 + (uint64_t)nearbyint(*((double *)v5 + 13) * (double)v9);
        }
      }
      v5[12] = v8;
      v5 = v6;
    }
    while (v6);
    while (1)
    {
      if (!v2[21])
        return a1[19] != a1[18];
      v10 = 0;
      do
      {
        v11 = (uint64_t *)v2[21];
        if (!v11)
          break;
        v12 = v2;
        v2 = (uint64_t *)v11[21];
        v12[21] = (uint64_t)v2;
        if (v12 != v11 && v11 != v2)
        {
          v14 = v11;
          v15 = v12;
          do
          {
            if (v14[12] >= v15[12])
            {
              v15 = (uint64_t *)v15[20];
              v17 = v14;
            }
            else
            {
              v16 = (uint64_t)v14;
              do
              {
                v16 = *(_QWORD *)(v16 + 152);
                sub_1003D4C0C(a1, v16, (uint64_t)v14, a2);
              }
              while ((uint64_t *)v16 != v15);
              v17 = (uint64_t *)v14[20];
              if (v17)
                v17[19] = v14[19];
              *(_QWORD *)(v14[19] + 160) = v17;
              v18 = v15[19];
              v14[19] = v18;
              if (v18)
                *(_QWORD *)(v18 + 160) = v14;
              v14[20] = (uint64_t)v15;
              v15[19] = (uint64_t)v14;
              if (v15 == v12)
              {
                v14[21] = (uint64_t)v2;
                if (v10)
                  v10[21] = (uint64_t)v14;
                else
                  a1[6] = v14;
                v15 = v12;
                v11 = v17;
                goto LABEL_32;
              }
              v11 = v17;
            }
            v14 = v12;
LABEL_32:
            v19 = v15 == v11 || v17 == v2;
            v12 = v14;
            v14 = v17;
          }
          while (!v19);
        }
        v10 = v12;
      }
      while (v2);
      v2 = (uint64_t *)a1[6];
      if (!v2)
        return a1[19] != a1[18];
    }
  }
  return 0;
}

void sub_1003D4AA0(_QWORD *a1, __n128 a2)
{
  __int128 *v3;
  __int128 *v4;
  unint64_t v5;
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(__int128 *, __int128 *);

  v3 = (__int128 *)a1[18];
  v4 = (__int128 *)a1[19];
  v5 = 126 - 2 * __clz(((char *)v4 - (char *)v3) >> 6);
  v29 = (uint64_t (*)(__int128 *, __int128 *))sub_1003CF814;
  if (v4 == v3)
    v6 = 0;
  else
    v6 = v5;
  sub_1003D8B84(v3, v4, &v29, v6, 1, a2);
  v7 = (__int128 *)a1[18];
  if (v7 != (__int128 *)a1[19])
  {
    v8 = v7 + 4;
    do
    {
      v9 = *((_QWORD *)v7 + 6);
      v10 = *((_QWORD *)v7 + 7);
      v11 = *(_QWORD *)(v9 + 144);
      if (v11 != v10)
      {
        if (*(_QWORD *)(v9 + 136) == v10)
        {
          v11 = *((_QWORD *)v7 + 7);
        }
        else
        {
          v12 = v8;
          do
          {
            v13 = v12;
            v14 = *((_QWORD *)v12 + 6);
            v15 = *((_QWORD *)v13 + 7);
            if (*(_QWORD *)(v14 + 144) == v15)
              break;
            v16 = *(_QWORD *)(v14 + 136);
            v12 = v13 + 4;
          }
          while (v16 != v15);
          v18 = v7[2];
          v17 = v7[3];
          v20 = *v7;
          v19 = v7[1];
          v21 = v13[3];
          v23 = *v13;
          v22 = v13[1];
          v7[2] = v13[2];
          v7[3] = v21;
          *v7 = v23;
          v7[1] = v22;
          *v13 = v20;
          v13[1] = v19;
          v13[2] = v18;
          v13[3] = v17;
          v9 = *((_QWORD *)v7 + 6);
          v11 = *((_QWORD *)v7 + 7);
        }
      }
      sub_1003D0FD8((uint64_t)a1, v9, v11, (uint64_t *)v7);
      v25 = (_QWORD *)*((_QWORD *)v7 + 6);
      v24 = (_QWORD *)*((_QWORD *)v7 + 7);
      v26 = v24[18];
      if (v26)
        *(_QWORD *)(v26 + 136) = v25;
      v27 = v25[17];
      if (v27)
        *(_QWORD *)(v27 + 144) = v24;
      v24[17] = v27;
      v24[18] = v25;
      v25[17] = v24;
      v25[18] = v26;
      if (!v24[17])
        a1[5] = v24;
      v28 = *(_QWORD *)v7;
      v25[12] = *(_QWORD *)v7;
      v24[12] = v28;
      sub_1003D0E68((uint64_t)a1, (uint64_t)v24, (uint64_t *)v7, 1);
      sub_1003D15CC((uint64_t)a1, *((_QWORD *)v7 + 6), (uint64_t *)v7, 1);
      v7 += 4;
      v8 += 4;
    }
    while (v7 != (__int128 *)a1[19]);
  }
}

void sub_1003D4C0C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  __int128 *v27;
  __int128 *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;

  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v11 = (double)(v7 - *(_QWORD *)a2);
  v12 = (double)(v8 - v9);
  v13 = *(_QWORD *)(a3 + 48);
  v14 = *(_QWORD *)(a3 + 56);
  v16 = *(_QWORD *)a3;
  v15 = *(_QWORD *)(a3 + 8);
  v17 = (double)(v13 - *(_QWORD *)a3);
  v18 = (double)(v14 - v15);
  v51 = xmmword_100EEFC70;
  v52 = unk_100EEFC80;
  v19 = v12 * v17 - v18 * v11;
  if (v19 == 0.0)
  {
    v21 = *(_QWORD *)(a2 + 96);
    v22 = a4;
    v51 = xmmword_100EEFC70;
    v52 = unk_100EEFC80;
  }
  else
  {
    v20 = ((double)(v10 - v16) * v18 - (double)(v9 - v15) * v17) / v19;
    if (v20 <= 0.0)
    {
      v51 = *(_OWORD *)(a2 + 16);
      v52 = *(_OWORD *)(a2 + 32);
      v22 = *(_QWORD *)(a2 + 8);
      v21 = *(_QWORD *)a2;
    }
    else if (v20 >= 1.0)
    {
      v51 = *(_OWORD *)(a2 + 64);
      v52 = *(_OWORD *)(a2 + 80);
      v22 = *(_QWORD *)(a2 + 56);
      v21 = *(_QWORD *)(a2 + 48);
    }
    else
    {
      v21 = (uint64_t)((double)v10 + v20 * v11);
      v22 = (uint64_t)((double)v9 + v20 * v12);
    }
  }
  if (v22 >= a4 && v22 <= a1[3])
  {
    v9 = v22;
    v10 = v21;
    goto LABEL_35;
  }
  v23 = *(double *)(a2 + 104);
  v24 = fabs(v23);
  v25 = *(double *)(a3 + 104);
  v26 = fabs(v25);
  if (v24 > 100.0 && v26 > 100.0)
  {
    if (v24 <= v26)
    {
LABEL_20:
      if (v13 == v16 && v14 == v15)
      {
        v28 = (__int128 *)(a3 + 16);
      }
      else
      {
        v31 = (v18 * (double)(v22 - v15) + (double)(v21 - v16) * v17) / (v17 * v17 + v18 * v18);
        v32 = 0.0;
        if (v31 >= 0.0)
        {
          v32 = (v18 * (double)(v22 - v15) + (double)(v21 - v16) * v17) / (v17 * v17 + v18 * v18);
          if (v31 > 1.0)
            v32 = 1.0;
        }
        v13 = v16 + (uint64_t)nearbyint(v32 * v17);
        v14 = v15 + (uint64_t)nearbyint(v32 * v18);
        v28 = &xmmword_100EEFC70;
      }
      v51 = *v28;
      v52 = v28[1];
      v9 = v14;
      goto LABEL_34;
    }
    goto LABEL_16;
  }
  if (v24 > 100.0)
  {
LABEL_16:
    if (v7 == v10 && v8 == v9)
    {
      v27 = (__int128 *)(a2 + 16);
    }
    else
    {
      v29 = (v12 * (double)(v22 - v9) + (double)(v21 - v10) * v11) / (v11 * v11 + v12 * v12);
      v30 = 0.0;
      if (v29 >= 0.0)
      {
        v30 = (v12 * (double)(v22 - v9) + (double)(v21 - v10) * v11) / (v11 * v11 + v12 * v12);
        if (v29 > 1.0)
          v30 = 1.0;
      }
      v7 = v10 + (uint64_t)nearbyint(v30 * v11);
      v8 = v9 + (uint64_t)nearbyint(v30 * v12);
      v27 = &xmmword_100EEFC70;
    }
    v51 = *v27;
    v52 = v27[1];
    v9 = v8;
    goto LABEL_28;
  }
  if (v26 > 100.0)
    goto LABEL_20;
  if (v22 >= a4)
    v50 = a1[3];
  else
    v50 = a4;
  if (v24 >= v26)
  {
    if (v14 == v50 || v13 == v16)
    {
      v9 = v50;
LABEL_34:
      v10 = v13;
      goto LABEL_35;
    }
    if (v50 == v15)
    {
      v9 = *(_QWORD *)(a3 + 8);
      v10 = *(_QWORD *)a3;
      goto LABEL_35;
    }
    v10 = v16 + (uint64_t)nearbyint(v25 * (double)(v50 - v15));
    goto LABEL_67;
  }
  if (v8 == v50 || v7 == v10)
  {
    v9 = v50;
LABEL_28:
    v10 = v7;
    goto LABEL_35;
  }
  if (v50 != v9)
  {
    v10 += (uint64_t)nearbyint(v23 * (double)(v50 - v9));
LABEL_67:
    v9 = v50;
  }
LABEL_35:
  v33 = (uint64_t)(a1 + 20);
  v34 = a1[20];
  v35 = a1[19];
  if (v35 >= v34)
  {
    v37 = a1[18];
    v38 = (uint64_t)(v35 - v37) >> 6;
    v39 = v38 + 1;
    if ((unint64_t)(v38 + 1) >> 58)
      sub_100007810();
    v40 = v34 - v37;
    if (v40 >> 5 > v39)
      v39 = v40 >> 5;
    if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFC0)
      v41 = 0x3FFFFFFFFFFFFFFLL;
    else
      v41 = v39;
    if (v41)
      v42 = (char *)sub_10014A8B8(v33, v41);
    else
      v42 = 0;
    v43 = &v42[64 * v38];
    v44 = &v42[64 * v41];
    *(_QWORD *)v43 = v10;
    *((_QWORD *)v43 + 1) = v9;
    *((_OWORD *)v43 + 1) = v51;
    *((_OWORD *)v43 + 2) = v52;
    *((_QWORD *)v43 + 6) = a2;
    *((_QWORD *)v43 + 7) = a3;
    v36 = v43 + 64;
    v46 = (char *)a1[18];
    v45 = (char *)a1[19];
    if (v45 != v46)
    {
      do
      {
        v47 = *((_OWORD *)v45 - 4);
        v48 = *((_OWORD *)v45 - 3);
        v49 = *((_OWORD *)v45 - 1);
        *((_OWORD *)v43 - 2) = *((_OWORD *)v45 - 2);
        *((_OWORD *)v43 - 1) = v49;
        *((_OWORD *)v43 - 4) = v47;
        *((_OWORD *)v43 - 3) = v48;
        v43 -= 64;
        v45 -= 64;
      }
      while (v45 != v46);
      v45 = (char *)a1[18];
    }
    a1[18] = v43;
    a1[19] = v36;
    a1[20] = v44;
    if (v45)
      operator delete(v45);
  }
  else
  {
    *(_QWORD *)v35 = v10;
    *(_QWORD *)(v35 + 8) = v9;
    *(_OWORD *)(v35 + 16) = v51;
    *(_OWORD *)(v35 + 32) = v52;
    *(_QWORD *)(v35 + 48) = a2;
    *(_QWORD *)(v35 + 56) = a3;
    v36 = (char *)(v35 + 64);
  }
  a1[19] = v36;
}

uint64_t sub_1003D5060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a2 + 176);
  if ((*(_BYTE *)(v5 + 64) & 3) == 0)
  {
    v11 = a2;
    do
    {
      v11 = *(_QWORD *)(v11 + 144);
      if (!v11)
        return v4;
    }
    while (*(_QWORD *)(v11 + 176) != v5);
    if (*(_DWORD *)(a2 + 196))
      sub_1003D1B00(a1, a2);
    if (*(_DWORD *)(v11 + 196))
      sub_1003D1B00(a1, v11);
    if (v4 != v11)
    {
      do
      {
        sub_1003D0FD8(a1, a2, v4, (uint64_t *)(a2 + 48));
        v12 = *(_QWORD *)(v4 + 144);
        if (v12)
          *(_QWORD *)(v12 + 136) = a2;
        v13 = *(_QWORD *)(a2 + 136);
        if (v13)
          *(_QWORD *)(v13 + 144) = v4;
        *(_QWORD *)(v4 + 136) = v13;
        *(_QWORD *)(v4 + 144) = a2;
        *(_QWORD *)(a2 + 136) = v4;
        *(_QWORD *)(a2 + 144) = v12;
        if (!*(_QWORD *)(v4 + 136))
          *(_QWORD *)(a1 + 40) = v4;
        v4 = v12;
      }
      while (v12 != v11);
    }
    v14 = *(_QWORD *)(a2 + 128);
    if (*(_BYTE *)(*(_QWORD *)(a2 + 184) + 12))
    {
      if (v14)
        sub_1003D1900(a1, a2, v11, (uint64_t *)(a2 + 48));
      v15 = *(_QWORD *)(v11 + 136);
      v16 = *(_QWORD *)(v11 + 144);
      if (*(_OWORD *)(v11 + 136) == 0)
      {
        if (*(_QWORD *)(a1 + 40) != v11)
          goto LABEL_47;
      }
      else if (v15)
      {
        v17 = (_QWORD *)(v15 + 144);
        goto LABEL_45;
      }
      v17 = (_QWORD *)(a1 + 40);
LABEL_45:
      *v17 = v16;
      if (v16)
        *(_QWORD *)(v16 + 136) = v15;
LABEL_47:
      v21 = *(_QWORD *)(a2 + 136);
      v22 = *(_QWORD *)(a2 + 144);
      if (*(_OWORD *)(a2 + 136) == 0)
      {
        if (*(_QWORD *)(a1 + 40) != a2)
          goto LABEL_54;
      }
      else if (v21)
      {
        v23 = (_QWORD *)(v21 + 144);
        goto LABEL_52;
      }
      v23 = (_QWORD *)(a1 + 40);
LABEL_52:
      *v23 = v22;
      if (v22)
        *(_QWORD *)(v22 + 136) = v21;
LABEL_54:
      operator delete();
    }
    if (v14)
      sub_1003D1900(a1, a2, v11, (uint64_t *)(a2 + 48));
    v18 = *(_QWORD *)(a2 + 136);
    v19 = *(_QWORD *)(a2 + 144);
    if (*(_OWORD *)(a2 + 136) == 0)
    {
      if (*(_QWORD *)(a1 + 40) != a2)
        goto LABEL_59;
    }
    else if (v18)
    {
      v20 = (_QWORD *)(v18 + 144);
      goto LABEL_57;
    }
    v20 = (_QWORD *)(a1 + 40);
LABEL_57:
    *v20 = v19;
    if (v19)
      *(_QWORD *)(v19 + 136) = v18;
LABEL_59:
    v24 = *(_QWORD *)(v11 + 136);
    v25 = *(_QWORD *)(v11 + 144);
    if (*(_OWORD *)(v11 + 136) == 0)
    {
      if (*(_QWORD *)(a1 + 40) != v11)
        goto LABEL_66;
    }
    else if (v24)
    {
      v26 = (_QWORD *)(v24 + 144);
      goto LABEL_64;
    }
    v26 = (_QWORD *)(a1 + 40);
LABEL_64:
    *v26 = v25;
    if (v25)
      *(_QWORD *)(v25 + 136) = v24;
LABEL_66:
    operator delete();
  }
  if (*(_QWORD *)(a2 + 128))
    sub_1003D1B40(a1, a2, (uint64_t *)(a2 + 48));
  if (*(_QWORD *)(a2 + 56) != *(_QWORD *)(a2 + 8))
  {
    v6 = *(_QWORD *)(a2 + 128);
    if (v6)
    {
      v7 = 24;
      if (*(_QWORD *)(v6 + 16) == a2)
        v7 = 16;
      *(_QWORD *)(v6 + v7) = 0;
      *(_QWORD *)(a2 + 128) = 0;
    }
    v8 = *(_QWORD *)(a2 + 136);
    v9 = *(_QWORD *)(a2 + 144);
    if (*(_OWORD *)(a2 + 136) == 0)
    {
      if (*(_QWORD *)(a1 + 40) != a2)
        goto LABEL_37;
    }
    else if (v8)
    {
      v10 = (_QWORD *)(v8 + 144);
      goto LABEL_35;
    }
    v10 = (_QWORD *)(a1 + 40);
LABEL_35:
    *v10 = v9;
    if (v9)
      *(_QWORD *)(v9 + 136) = v8;
LABEL_37:
    operator delete();
  }
  return v4;
}

uint64_t sub_1003D5358(uint64_t result, int a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 48);
    if (v5 == result || (a3 & 1) == 0 && v5 == *(_QWORD *)(result + 56))
      return 0;
    sub_1003D5724((uint64_t)a4, 0);
    if (a2)
    {
      v9 = *(_QWORD *)v4;
      v8 = *(_QWORD *)(v4 + 8);
      v51 = *(_OWORD *)(v4 + 16);
      v53 = *(_OWORD *)(v4 + 32);
      v10 = (uint64_t **)(v4 + 56);
    }
    else
    {
      v4 = *(_QWORD *)(v4 + 48);
      v9 = *(_QWORD *)v4;
      v8 = *(_QWORD *)(v4 + 8);
      v51 = *(_OWORD *)(v4 + 16);
      v53 = *(_OWORD *)(v4 + 32);
      v10 = (uint64_t **)(v4 + 48);
    }
    v11 = *v10;
    v12 = a4 + 2;
    v13 = a4[2];
    v14 = a4[1];
    if (v14 >= v13)
    {
      v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v14 - *a4) >> 4);
      v17 = v16 + 1;
      if (v16 + 1 > 0x555555555555555)
LABEL_75:
        sub_100007810();
      v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - *a4) >> 4);
      if (2 * v18 > v17)
        v17 = 2 * v18;
      if (v18 >= 0x2AAAAAAAAAAAAAALL)
        v19 = 0x555555555555555;
      else
        v19 = v17;
      if (v19)
        v20 = (char *)sub_100121D50((uint64_t)v12, v19);
      else
        v20 = 0;
      v21 = &v20[48 * v16];
      v22 = &v20[48 * v19];
      *(_QWORD *)v21 = v9;
      *((_QWORD *)v21 + 1) = v8;
      *((_OWORD *)v21 + 1) = v51;
      *((_OWORD *)v21 + 2) = v53;
      v15 = v21 + 48;
      v24 = (char *)*a4;
      v23 = (char *)a4[1];
      if (v23 != (char *)*a4)
      {
        do
        {
          v25 = *((_OWORD *)v23 - 3);
          v26 = *((_OWORD *)v23 - 1);
          *((_OWORD *)v21 - 2) = *((_OWORD *)v23 - 2);
          *((_OWORD *)v21 - 1) = v26;
          *((_OWORD *)v21 - 3) = v25;
          v21 -= 48;
          v23 -= 48;
        }
        while (v23 != v24);
        v23 = (char *)*a4;
      }
      *a4 = v21;
      a4[1] = v15;
      a4[2] = v22;
      if (v23)
        operator delete(v23);
      v12 = a4 + 2;
    }
    else
    {
      *(_QWORD *)v14 = v9;
      *(_QWORD *)(v14 + 8) = v8;
      *(_OWORD *)(v14 + 16) = v51;
      *(_OWORD *)(v14 + 32) = v53;
      v15 = (char *)(v14 + 48);
    }
    for (a4[1] = v15; v11 != (uint64_t *)v4; v11 = (uint64_t *)v11[v40])
    {
      v27 = *v11;
      v28 = v11[1];
      if (*v11 != v9 || v28 != v8)
      {
        v52 = *((_OWORD *)v11 + 1);
        v54 = *((_OWORD *)v11 + 2);
        if ((unint64_t)v15 >= *v12)
        {
          v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v15[-*a4] >> 4);
          v31 = v30 + 1;
          if (v30 + 1 > 0x555555555555555)
            goto LABEL_75;
          if (0x5555555555555556 * ((uint64_t)(*v12 - *a4) >> 4) > v31)
            v31 = 0x5555555555555556 * ((uint64_t)(*v12 - *a4) >> 4);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v12 - *a4) >> 4) >= 0x2AAAAAAAAAAAAAALL)
            v32 = 0x555555555555555;
          else
            v32 = v31;
          if (v32)
            v33 = (char *)sub_100121D50((uint64_t)v12, v32);
          else
            v33 = 0;
          v34 = &v33[48 * v30];
          *(_QWORD *)v34 = v27;
          *((_QWORD *)v34 + 1) = v28;
          *((_OWORD *)v34 + 1) = v52;
          *((_OWORD *)v34 + 2) = v54;
          v36 = (char *)*a4;
          v35 = (char *)a4[1];
          v37 = v34;
          if (v35 != (char *)*a4)
          {
            do
            {
              v38 = *((_OWORD *)v35 - 3);
              v39 = *((_OWORD *)v35 - 1);
              *((_OWORD *)v37 - 2) = *((_OWORD *)v35 - 2);
              *((_OWORD *)v37 - 1) = v39;
              *((_OWORD *)v37 - 3) = v38;
              v37 -= 48;
              v35 -= 48;
            }
            while (v35 != v36);
            v35 = (char *)*a4;
          }
          v15 = v34 + 48;
          *a4 = v37;
          a4[1] = v34 + 48;
          a4[2] = &v33[48 * v32];
          if (v35)
            operator delete(v35);
          v12 = a4 + 2;
        }
        else
        {
          *(_QWORD *)v15 = v27;
          *((_QWORD *)v15 + 1) = v28;
          *((_OWORD *)v15 + 1) = v52;
          *((_OWORD *)v15 + 2) = v54;
          v15 += 48;
        }
        a4[1] = v15;
        v8 = v28;
        v9 = v27;
      }
      if (a2)
        v40 = 7;
      else
        v40 = 6;
    }
    if (&v15[-*a4] != (char *)144)
      return 1;
    v41 = *(_QWORD **)(v4 + 48);
    v42 = (uint64_t *)v41[6];
    if (v42 != *(uint64_t **)(v4 + 56))
      return 1;
    v43 = *v42;
    v44 = *v42 - *v41;
    if (v44 < 0)
      v44 = *v41 - *v42;
    if ((unint64_t)v44 <= 1)
    {
      v45 = v42[1] - v41[1];
      if (v45 < 0)
        v45 = v41[1] - v42[1];
      if ((unint64_t)v45 < 2)
        return 0;
    }
    v46 = *(_QWORD *)v4;
    v47 = *(_QWORD *)v4 - *v41;
    if (v47 < 0)
      v47 = *v41 - *(_QWORD *)v4;
    if ((unint64_t)v47 <= 1)
    {
      v48 = *(_QWORD *)(v4 + 8) - v41[1];
      if (v48 < 0)
        v48 = -v48;
      if ((unint64_t)v48 < 2)
        return 0;
    }
    v49 = v46 - v43;
    if (v46 - v43 < 0)
      v49 = v43 - v46;
    if (v49 > 1)
      return 1;
    v50 = *(_QWORD *)(v4 + 8) - v42[1];
    if (v50 < 0)
      v50 = -v50;
    return (unint64_t)v50 >= 2;
  }
  return result;
}

void sub_1003D5724(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 4);
  v3 = a2 >= v2;
  v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_1003D90EC((void **)a1, v4);
  }
  else if (!v3)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 48 * a2;
  }
}

uint64_t sub_1003D5760(uint64_t a1, int64x2_t *a2)
{
  uint64_t result;
  int v5;
  int64x2_t *v6;
  int64x2_t v7;
  int64x2_t v8;
  int64x2_t v9;

  if (!a2[2].i64[0])
    return 0;
  if (a2[5].i64[1] > a2[4].i64[1] && a2[5].i64[0] > a2[4].i64[0])
    return 1;
  sub_1003D1D54(a1, (uint64_t)a2);
  result = a2[2].i64[0];
  if (result)
  {
    v5 = sub_1003D5358(result, *(unsigned __int8 *)(a1 + 281), 0, (int64x2_t *)a2[6].i64);
    result = 0;
    if (v5)
    {
      v6 = (int64x2_t *)a2[6].i64[0];
      v7 = vdupq_n_s64(0x8000000000000000);
      v8 = vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
      while (v6 != (int64x2_t *)a2[6].i64[1])
      {
        v9 = *v6;
        v6 += 3;
        v8 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v8, v9), (int8x16_t)v9, (int8x16_t)v8);
        v7 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v9, v7), (int8x16_t)v9, (int8x16_t)v7);
      }
      a2[4] = v8;
      a2[5] = v7;
      return 1;
    }
  }
  return result;
}

uint64_t sub_1003D581C(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v3 = *a3;
  v4 = a3[1];
  if (*a3 == v4)
    return 0;
  while (1)
  {
    v7 = *v3;
    if (*v3)
    {
      while (!*(_QWORD *)(v7 + 32))
      {
        v7 = *(_QWORD *)(v7 + 8);
        if (!v7)
          goto LABEL_23;
      }
      if (v7 != a2 && *(_QWORD *)(v7 + 56) != a2)
      {
        *(_QWORD *)(v7 + 56) = a2;
        if (*(_QWORD *)(v7 + 48) && (sub_1003D581C(a1, a2) & 1) != 0)
          return 1;
        if (sub_1003D5760(a1, (int64x2_t *)v7))
        {
          v8 = v7;
          do
          {
            v8 = *(_QWORD *)(v8 + 8);
            if (v8)
              v9 = v8 == a2;
            else
              v9 = 1;
          }
          while (!v9);
          if (!v8
            && *(_QWORD *)(a2 + 64) >= *(_QWORD *)(v7 + 64)
            && *(_QWORD *)(a2 + 80) <= *(_QWORD *)(v7 + 80)
            && *(_QWORD *)(a2 + 72) >= *(_QWORD *)(v7 + 72)
            && *(_QWORD *)(a2 + 88) <= *(_QWORD *)(v7 + 88)
            && sub_1003D268C(*(uint64_t **)(a2 + 32), *(uint64_t **)(v7 + 32)))
          {
            break;
          }
        }
      }
    }
LABEL_23:
    if (++v3 == v4)
      return 0;
  }
  *(_QWORD *)(a2 + 8) = v7;
  return 1;
}

uint64_t sub_1003D5938(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t **v7;
  int v8;
  uint64_t v9;

  if (!*(_QWORD *)(a2 + 40)
    && *(_QWORD *)(a2 + 88) > *(_QWORD *)(a2 + 72)
    && *(_QWORD *)(a2 + 80) > *(_QWORD *)(a2 + 64))
  {
    v5 = *(_QWORD *)(a2 + 8);
    if (!v5)
      goto LABEL_18;
    v6 = result;
    while (1)
    {
      v7 = *(uint64_t ***)(v5 + 48);
      if (v7)
      {
        if ((sub_1003D581C(v6, a2, v7) & 1) != 0)
          goto LABEL_21;
        v5 = *(_QWORD *)(a2 + 8);
      }
      if (*(_QWORD *)(v5 + 32))
      {
        v8 = sub_1003D5760(v6, (int64x2_t *)v5);
        v5 = *(_QWORD *)(a2 + 8);
        if (v8)
        {
          if (*(_QWORD *)(a2 + 64) >= *(_QWORD *)(v5 + 64)
            && *(_QWORD *)(a2 + 80) <= *(_QWORD *)(v5 + 80)
            && *(_QWORD *)(a2 + 72) >= *(_QWORD *)(v5 + 72)
            && *(_QWORD *)(a2 + 88) <= *(_QWORD *)(v5 + 88))
          {
            if (sub_1003D268C(*(uint64_t **)(a2 + 32), *(uint64_t **)(v5 + 32)))
            {
LABEL_21:
              v9 = *(_QWORD *)(a2 + 8);
              if (v9)
              {
                result = *(_QWORD *)(v9 + 40);
                if (!result)
                {
                  sub_1003D5938(v6);
                  result = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 40);
                  if (!result)
                    return result;
                }
LABEL_19:
                result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)result + 16))(result, a2 + 96);
                *(_QWORD *)(a2 + 40) = result;
                return result;
              }
LABEL_18:
              result = a3;
              goto LABEL_19;
            }
            v5 = *(_QWORD *)(a2 + 8);
          }
        }
      }
      v5 = *(_QWORD *)(v5 + 8);
      *(_QWORD *)(a2 + 8) = v5;
      if (!v5)
        goto LABEL_18;
    }
  }
  return result;
}

void sub_1003D5A6C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  int v13;
  void *__p;
  void *v15;
  uint64_t v16;

  sub_1003D5BB0(a2, 0);
  sub_1003D5C44(a2, (uint64_t)(*(_QWORD *)(a1 + 232) - *(_QWORD *)(a1 + 224)) >> 3);
  if (a3)
  {
    sub_1003D5BB0(a3, 0);
    sub_1003D5C44(a3, (uint64_t)(*(_QWORD *)(a1 + 232) - *(_QWORD *)(a1 + 224)) >> 3);
  }
  v7 = *(_QWORD *)(a1 + 224);
  v6 = *(_QWORD *)(a1 + 232);
  if (v6 != v7)
  {
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(v7 + 8 * v8);
      v10 = *(_QWORD *)(v9 + 32);
      if (v10)
        break;
LABEL_15:
      if (++v8 >= (unint64_t)((v6 - v7) >> 3))
        return;
    }
    __p = 0;
    v15 = 0;
    v16 = 0;
    if (a3 && *(_BYTE *)(v9 + 120))
    {
      v11 = sub_1003D5358(v10, *(unsigned __int8 *)(a1 + 281), 1, &__p);
      v12 = a3;
      if ((v11 & 1) == 0)
        goto LABEL_12;
    }
    else
    {
      sub_1003D1D54(a1, v9);
      v13 = sub_1003D5358(*(_QWORD *)(v9 + 32), *(unsigned __int8 *)(a1 + 281), 0, &__p);
      v12 = a2;
      if (!v13)
      {
LABEL_12:
        if (__p)
        {
          v15 = __p;
          operator delete(__p);
        }
        v7 = *(_QWORD *)(a1 + 224);
        v6 = *(_QWORD *)(a1 + 232);
        goto LABEL_15;
      }
    }
    sub_1003D5CF4(v12, (uint64_t)&__p);
    goto LABEL_12;
  }
}

void sub_1003D5B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1003D5BB0(uint64_t *a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v3 = a1[1];
  v4 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 3);
  v5 = a2 >= v4;
  v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    sub_1003D925C(a1, v6);
  }
  else if (!v5)
  {
    v7 = *a1 + 24 * a2;
    if (v3 != v7)
    {
      v8 = a1[1];
      do
      {
        v10 = *(void **)(v8 - 24);
        v8 -= 24;
        v9 = v10;
        if (v10)
        {
          *(_QWORD *)(v3 - 16) = v9;
          operator delete(v9);
        }
        v3 = v8;
      }
      while (v8 != v7);
    }
    a1[1] = v7;
  }
}

uint64_t sub_1003D5C44(uint64_t *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      sub_100007810();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_100045008(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 24 * v6;
    sub_100121D94(a1, v7);
    return sub_100121F20((uint64_t)v7);
  }
  return result;
}

void sub_1003D5CE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100121F20((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_1003D5CF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[5];

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD **)(v4 - 8);
  if ((unint64_t)v7 >= v6)
  {
    v9 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v7 - *a1) >> 3);
    v10 = v9 + 1;
    if (v9 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_100007810();
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0x555555555555555)
      v12 = 0xAAAAAAAAAAAAAAALL;
    else
      v12 = v10;
    v17[4] = v4;
    v13 = (char *)sub_100045008(v4, v12);
    v14 = &v13[24 * v9];
    v17[0] = v13;
    v17[1] = v14;
    v17[3] = &v13[24 * v15];
    *((_QWORD *)v14 + 1) = 0;
    *((_QWORD *)v14 + 2) = 0;
    *(_QWORD *)v14 = 0;
    *(_OWORD *)v14 = *(_OWORD *)a2;
    *((_QWORD *)v14 + 2) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    v17[2] = v14 + 24;
    sub_100121D94(a1, v17);
    v8 = (_QWORD *)a1[1];
    sub_100121F20((uint64_t)v17);
  }
  else
  {
    *v7 = 0;
    v7[1] = 0;
    v7[2] = 0;
    *(_OWORD *)v7 = *(_OWORD *)a2;
    v7[2] = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    v8 = v7 + 3;
    a1[1] = (uint64_t)(v7 + 3);
  }
  a1[1] = (uint64_t)v8;
  return v8 - 3;
}

void sub_1003D5E20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100121F20((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003D5E34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unint64_t v7;
  int64x2_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *__p;
  void *v13;
  uint64_t v14;

  (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  sub_1003D5BB0(a3, 0);
  if (*(_BYTE *)(a1 + 220))
    sub_1003D5C44(a3, (uint64_t)(*(_QWORD *)(a1 + 232) - *(_QWORD *)(a1 + 224)) >> 3);
  v6 = *(_QWORD *)(a1 + 224);
  if (*(_QWORD *)(a1 + 232) != v6)
  {
    v7 = 0;
    do
    {
      v8 = *(int64x2_t **)(v6 + 8 * v7);
      if (v8)
      {
        v9 = v8[2].i64[0];
        if (v9)
        {
          if (v8[7].i8[8])
          {
            __p = 0;
            v13 = 0;
            v14 = 0;
            if (sub_1003D5358(v9, *(unsigned __int8 *)(a1 + 281), 1, &__p))
            {
              v10 = a3[1];
              if (v10 >= a3[2])
              {
                v11 = sub_100121B68(a3, (uint64_t)&__p);
              }
              else
              {
                sub_100121B0C((uint64_t)a3, (uint64_t)&__p);
                v11 = v10 + 24;
              }
              a3[1] = v11;
            }
            if (__p)
            {
              v13 = __p;
              operator delete(__p);
            }
          }
          else if (sub_1003D5760(a1, v8))
          {
            sub_1003D5938(a1, (uint64_t)v8, a2);
          }
        }
      }
      ++v7;
      v6 = *(_QWORD *)(a1 + 224);
    }
    while (v7 < (*(_QWORD *)(a1 + 232) - v6) >> 3);
  }
}

void sub_1003D5F64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1003D5F80(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1 + 16;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD **)(a1 + 8);
  if ((unint64_t)v6 >= v5)
  {
    v8 = *(_QWORD **)a1;
    v9 = ((uint64_t)v6 - *(_QWORD *)a1) >> 3;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61)
      sub_100007810();
    v11 = v5 - (_QWORD)v8;
    if (v11 >> 2 > v10)
      v10 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      v13 = (char *)sub_10002BA34(v4, v12);
      v8 = *(_QWORD **)a1;
      v6 = *(_QWORD **)(a1 + 8);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[8 * v9];
    v15 = &v13[8 * v12];
    *(_QWORD *)v14 = *a2;
    v7 = v14 + 8;
    while (v6 != v8)
    {
      v16 = *--v6;
      *((_QWORD *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v15;
    if (v8)
      operator delete(v8);
  }
  else
  {
    *v6 = *a2;
    v7 = v6 + 1;
  }
  *(_QWORD *)(a1 + 8) = v7;
  v17 = *(_QWORD **)a1;
  v18 = (uint64_t)v7 - *(_QWORD *)a1;
  if (v18 >= 9)
  {
    v19 = (((unint64_t)v18 >> 3) - 2) >> 1;
    v20 = &v17[v19];
    v23 = *(v7 - 1);
    v22 = v7 - 1;
    v21 = v23;
    v24 = *v20;
    if (*v20 < v23)
    {
      do
      {
        *v22 = v24;
        v22 = v20;
        if (!v19)
          break;
        v19 = (v19 - 1) >> 1;
        v20 = &v17[v19];
        v24 = *v20;
      }
      while (*v20 < v21);
      *v22 = v21;
    }
  }
}

_QWORD *sub_1003D60BC(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = a1[6];
  if (v2)
  {
    v3 = *(void **)v2;
    if (*(_QWORD *)v2)
    {
      *(_QWORD *)(v2 + 8) = v3;
      operator delete(v3);
    }
    operator delete();
  }
  v4 = (void *)a1[12];
  if (v4)
  {
    a1[13] = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_1003D611C(_QWORD *a1@<X0>, char **a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _OWORD *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  char *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  char *v38;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = (_QWORD *)a1[6];
  v5 = a1;
  if (v4 != a1)
  {
    v6 = *a1;
    v5 = a1;
    do
    {
      v7 = v4;
      v8 = *v4;
      if (v6 != *v4 || v6 != *(_QWORD *)v5[7])
      {
        v9 = v5[1];
        if (v9 != v7[1] || v9 != *(_QWORD *)(v5[7] + 8))
          break;
      }
      v4 = (_QWORD *)v7[6];
      v6 = v8;
      v5 = v7;
    }
    while (v4 != a1);
  }
  v10 = a2 + 2;
  v11 = sub_100121D50((uint64_t)(a2 + 2), 1uLL);
  v12 = *a2;
  v13 = a2[1];
  v15 = (char *)&v11[3 * v14];
  v16 = *((_OWORD *)v5 + 2);
  v17 = *(_OWORD *)v5;
  v11[1] = *((_OWORD *)v5 + 1);
  v11[2] = v16;
  *v11 = v17;
  v18 = (char *)(v11 + 3);
  if (v13 != v12)
  {
    v19 = v11;
    do
    {
      v20 = *((_OWORD *)v13 - 3);
      v21 = *((_OWORD *)v13 - 1);
      v11 = v19 - 3;
      *(v19 - 2) = *((_OWORD *)v13 - 2);
      *(v19 - 1) = v21;
      *(v19 - 3) = v20;
      v13 -= 48;
      v19 -= 3;
    }
    while (v13 != v12);
  }
  *a2 = (char *)v11;
  a2[1] = v18;
  a2[2] = v15;
  if (v12)
    operator delete(v12);
  a2[1] = v18;
  v22 = (_QWORD *)v5[6];
  if (v22 != a1)
  {
    do
    {
      v23 = (_QWORD *)v22[6];
      if (*v22 == *v23 && *v22 == *v5 || (v24 = v22[1], v24 == v23[1]) && v24 == v5[1])
      {
        v22 = v5;
      }
      else
      {
        if ((unint64_t)v18 >= *v10)
        {
          v27 = *a2;
          v28 = 0xAAAAAAAAAAAAAAABLL * ((v18 - *a2) >> 4);
          v29 = v28 + 1;
          if (v28 + 1 > 0x555555555555555)
            sub_100007810();
          if (0x5555555555555556 * ((uint64_t)(*v10 - (_QWORD)v27) >> 4) > v29)
            v29 = 0x5555555555555556 * ((uint64_t)(*v10 - (_QWORD)v27) >> 4);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v10 - (_QWORD)v27) >> 4) >= 0x2AAAAAAAAAAAAAALL)
            v30 = 0x555555555555555;
          else
            v30 = v29;
          if (v30)
          {
            v31 = (char *)sub_100121D50((uint64_t)(a2 + 2), v30);
            v27 = *a2;
            v18 = a2[1];
          }
          else
          {
            v31 = 0;
          }
          v32 = &v31[48 * v28];
          v33 = *(_OWORD *)v22;
          v34 = *((_OWORD *)v22 + 2);
          *((_OWORD *)v32 + 1) = *((_OWORD *)v22 + 1);
          *((_OWORD *)v32 + 2) = v34;
          *(_OWORD *)v32 = v33;
          if (v18 == v27)
          {
            v38 = &v31[48 * v28];
          }
          else
          {
            v35 = &v31[48 * v28];
            do
            {
              v36 = *((_OWORD *)v18 - 3);
              v37 = *((_OWORD *)v18 - 1);
              v38 = v35 - 48;
              *((_OWORD *)v35 - 2) = *((_OWORD *)v18 - 2);
              *((_OWORD *)v35 - 1) = v37;
              *((_OWORD *)v35 - 3) = v36;
              v18 -= 48;
              v35 -= 48;
            }
            while (v18 != v27);
          }
          v18 = v32 + 48;
          *a2 = v38;
          a2[1] = v32 + 48;
          a2[2] = &v31[48 * v30];
          if (v27)
            operator delete(v27);
        }
        else
        {
          v25 = *(_OWORD *)v22;
          v26 = *((_OWORD *)v22 + 2);
          *((_OWORD *)v18 + 1) = *((_OWORD *)v22 + 1);
          *((_OWORD *)v18 + 2) = v26;
          *(_OWORD *)v18 = v25;
          v18 += 48;
        }
        a2[1] = v18;
        v23 = (_QWORD *)v22[6];
      }
      v5 = v22;
      v22 = v23;
    }
    while (v23 != a1);
  }
}

void sub_1003D63BC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_1003D63E0(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  double v4;
  uint64_t v5;
  double v6;

  v3 = a2[1];
  v4 = (double)(v3 - a3[1]);
  v5 = *a3 - *a2;
  v6 = (double)v5 * (double)a1[1] + v4 * (double)*a1 - ((double)v3 * (double)v5 + v4 * (double)*a2);
  return v6 * v6 / ((double)v5 * (double)v5 + v4 * v4);
}

void sub_1003D6434(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_1003D6474((uint64_t)v2, *v2);
    operator delete(**a1);
  }
}

uint64_t sub_1003D6474(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = result;
  v3 = *(_QWORD **)(result + 8);
  while (v3 != a2)
  {
    v4 = *--v3;
    result = v4;
    *v3 = 0;
    if (v4)
      operator delete();
  }
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_1003D64D4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1003D6548((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1003D6548(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v8 = (_QWORD *)(a7 - 8);
    v9 = (_QWORD *)(a7 - 8);
    do
    {
      v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((_QWORD *)&v16 + 1) = v8;
      v7 -= 8;
      v8 = v9;
    }
    while (a3 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_1003D65DC((uint64_t)v13);
  return v11;
}

uint64_t sub_1003D65DC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_1003D6610(a1);
  return a1;
}

uint64_t sub_1003D6610(uint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;

  v1 = *(uint64_t **)(*(_QWORD *)(result + 16) + 8);
  v2 = *(uint64_t **)(*(_QWORD *)(result + 8) + 8);
  while (v1 != v2)
  {
    result = *v1;
    *v1 = 0;
    if (result)
      operator delete();
    ++v1;
  }
  return result;
}

uint64_t sub_1003D6664(uint64_t a1)
{
  sub_1003D6698(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_1003D6698(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 16);
  if (v2 != a2)
  {
    v3 = result;
    do
    {
      *(_QWORD *)(v3 + 16) = v2 - 8;
      result = *(_QWORD *)(v2 - 8);
      *(_QWORD *)(v2 - 8) = 0;
      if (result)
        operator delete();
      v2 = *(_QWORD *)(v3 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void *sub_1003D66F8(uint64_t a1)
{
  unint64_t v1;
  void *result;
  BOOL v3;

  if (a1 < 1)
    return 0;
  if (a1 >= 0xFFFFFFFFFFFFFFFLL)
    v1 = 0xFFFFFFFFFFFFFFFLL;
  else
    v1 = a1;
  while (1)
  {
    result = operator new(8 * v1, &std::nothrow);
    if (result)
      break;
    v3 = v1 > 1;
    v1 >>= 1;
    if (!v3)
      return 0;
  }
  return result;
}

uint64_t *sub_1003D6758(uint64_t *result, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t *v7;
  _QWORD **v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;

  if (a4 >= 2)
  {
    v7 = result;
    if (a4 == 2)
    {
      v8 = (_QWORD **)*result;
      v9 = *(_QWORD **)*result;
      v10 = v9[1];
      v11 = *(a2 - 1);
      v12 = *(_QWORD *)(*(_QWORD *)v11 + 8);
      if (v10 == v12)
      {
        if (*v9 <= **(_QWORD **)v11)
          return result;
      }
      else if (v10 >= v12)
      {
        return result;
      }
      *result = v11;
      *(a2 - 1) = (uint64_t)v8;
      return result;
    }
    if ((uint64_t)a4 <= 0)
    {
      return sub_1003D6938(result, a2);
    }
    else
    {
      v17 = a4 >> 1;
      v18 = &result[a4 >> 1];
      if ((uint64_t)a4 <= a6)
      {
        sub_1003D6A78((_QWORD **)result, (_QWORD **)&result[a4 >> 1], a3, a4 >> 1, a5);
        sub_1003D6A78((_QWORD **)&v7[a4 >> 1], (_QWORD **)a2, a3, a4 - v17, &a5[v17]);
        v20 = a4;
        result = (uint64_t *)sub_1003D6BDC((_QWORD **)a5, (_QWORD **)&a5[v17], (_QWORD **)&a5[v17], (_QWORD **)&a5[a4], v7);
        if (a5)
          return (uint64_t *)sub_1003D71C4(&v20, (uint64_t)a5);
      }
      else
      {
        sub_1003D6758(result, &result[a4 >> 1], a3, a4 >> 1, a5, a6);
        v19 = a4 - v17;
        sub_1003D6758(v18, a2, a3, v19, a5, a6);
        return (uint64_t *)sub_1003D6D40((unint64_t *)v7, v18, a2, a3, v17, v19, a5, a6);
      }
    }
  }
  return result;
}

void sub_1003D691C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;

  if (v10)
    sub_1003D71C4(&a10, v10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1003D6938(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  if (result == a2)
    return result;
  v2 = result;
  v3 = result + 1;
  if (result + 1 == a2)
    return result;
  v4 = 0;
  v5 = result;
  do
  {
    v6 = *v5;
    v5 = v3;
    v7 = *(_QWORD *)(*(_QWORD *)v6 + 8);
    v8 = (_QWORD *)*v3;
    v9 = *(_QWORD **)*v3;
    v10 = v9[1];
    if (v7 == v10)
    {
      if (**(_QWORD **)v6 <= *v9)
        goto LABEL_21;
    }
    else if (v7 >= v10)
    {
      goto LABEL_21;
    }
    v11 = 0;
    *v3 = 0;
    for (i = v4; ; i -= 8)
    {
      v13 = (uint64_t *)((char *)v2 + i);
      *v13 = 0;
      v13[1] = v6;
      if (v11)
        operator delete();
      if (!i)
      {
        v16 = v2;
        goto LABEL_19;
      }
      v6 = *(uint64_t *)((char *)v2 + i - 8);
      v14 = *(_QWORD *)(*(_QWORD *)v6 + 8);
      v15 = *(_QWORD *)(*v8 + 8);
      if (v14 != v15)
        break;
      if (**(_QWORD **)v6 <= *(_QWORD *)*v8)
        goto LABEL_18;
LABEL_16:
      v11 = *v13;
    }
    if (v14 < v15)
      goto LABEL_16;
LABEL_18:
    v16 = (uint64_t *)((char *)v2 + i);
LABEL_19:
    result = (uint64_t *)*v16;
    *v16 = (uint64_t)v8;
    if (result)
      operator delete();
LABEL_21:
    ++v3;
    v4 += 8;
  }
  while (v5 + 1 != a2);
  return result;
}

_QWORD **sub_1003D6A78(_QWORD **result, _QWORD **a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  _QWORD **v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  if (a4)
  {
    v8 = result;
    if (a4 != 2)
    {
      if (a4 == 1)
      {
        v9 = *result;
        *result = 0;
        *a5 = (uint64_t)v9;
      }
      else if ((uint64_t)a4 > 8)
      {
        sub_1003D6758(result, &result[a4 >> 1], a3, a4 >> 1, a5, a4 >> 1);
        sub_1003D6758(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), &a5[a4 >> 1], a4 - (a4 >> 1));
        return sub_1003D7120(v8, &v8[a4 >> 1], &v8[a4 >> 1], a2, a5);
      }
      else
      {
        return (_QWORD **)sub_1003D6FB4(result, a2, a5);
      }
      return result;
    }
    v10 = *result;
    v11 = (_QWORD *)**result;
    v12 = v11[1];
    v13 = (uint64_t)*(a2 - 1);
    v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
    if (v12 == v14)
    {
      if (*v11 <= **(_QWORD **)v13)
      {
LABEL_7:
        *result = 0;
        *a5 = (uint64_t)v10;
        v15 = *(a2 - 1);
        *(a2 - 1) = 0;
LABEL_12:
        a5[1] = (uint64_t)v15;
        return result;
      }
    }
    else if (v12 >= v14)
    {
      goto LABEL_7;
    }
    *(a2 - 1) = 0;
    *a5 = v13;
    v15 = *result;
    *result = 0;
    goto LABEL_12;
  }
  return result;
}

_QWORD **sub_1003D6BDC(_QWORD **result, _QWORD **a2, _QWORD **a3, _QWORD **a4, _QWORD *a5)
{
  _QWORD **v7;
  _QWORD **v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD **v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD **v14;
  uint64_t v15;
  _QWORD *v16;

  if (result == a2)
  {
LABEL_18:
    while (a3 != a4)
    {
      v14 = (_QWORD **)*a3;
      *a3 = 0;
      result = (_QWORD **)*a5;
      *a5 = v14;
      if (result)
        operator delete();
      ++a3;
      ++a5;
    }
    return result;
  }
  v7 = result;
  while (a3 != a4)
  {
    v8 = (_QWORD **)*v7;
    v9 = (_QWORD *)**v7;
    v10 = v9[1];
    v11 = (_QWORD **)*a3;
    v12 = (_QWORD *)**a3;
    v13 = v12[1];
    if (v10 == v13)
    {
      if (*v9 > *v12)
        goto LABEL_10;
    }
    else if (v10 < v13)
    {
LABEL_10:
      *a3 = 0;
      result = (_QWORD **)*a5;
      *a5 = v11;
      if (result)
        operator delete();
      ++a3;
      goto LABEL_13;
    }
    *v7 = 0;
    result = (_QWORD **)*a5;
    *a5 = v8;
    if (result)
      operator delete();
    ++v7;
LABEL_13:
    ++a5;
    if (v7 == a2)
      goto LABEL_18;
  }
  if (v7 != a2)
  {
    v15 = 0;
    do
    {
      v16 = v7[v15];
      v7[v15] = 0;
      result = (_QWORD **)a5[v15];
      a5[v15] = v16;
      if (result)
        operator delete();
      ++v15;
    }
    while (&v7[v15] != a2);
  }
  return result;
}

unint64_t *sub_1003D6D40(unint64_t *result, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  if (!a6)
    return result;
  v9 = a6;
  v13 = (uint64_t *)result;
  do
  {
    if (v9 <= a8 || a5 <= a8)
      return sub_1003D7228(v13, a2, a3, a4, a5, v9, a7);
    if (!a5)
      return result;
    v14 = 0;
    v15 = 0;
    v16 = *(_QWORD **)*a2;
    v17 = v16[1];
    while (1)
    {
      v18 = v13[v15];
      v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
      if (v19 != v17)
        break;
      if (**(_QWORD **)v18 > *v16)
        goto LABEL_13;
LABEL_11:
      ++v15;
      v14 -= 8;
      if (a5 == v15)
        return result;
    }
    if (v19 >= v17)
      goto LABEL_11;
LABEL_13:
    v20 = a5 - v15;
    result = (unint64_t *)&v13[v14 / 0xFFFFFFFFFFFFFFF8];
    v39 = a8;
    v40 = a4;
    v37 = &v13[v14 / 0xFFFFFFFFFFFFFFF8];
    v38 = a3;
    if (a5 - v15 < v9)
    {
      if (v9 >= 0)
        v21 = v9;
      else
        v21 = v9 + 1;
      v22 = v21 >> 1;
      v23 = &a2[v21 >> 1];
      v24 = (uint64_t *)sub_1003D7350((_QWORD **)result, (_QWORD **)a2, (_QWORD **)v23);
      v25 = (uint64_t)((char *)v24 - (char *)v13 + v14) >> 3;
      goto LABEL_23;
    }
    if (a5 - 1 == v15)
    {
      v13[v15] = *a2;
      *a2 = v18;
      return result;
    }
    if (v20 >= 0)
      v26 = a5 - v15;
    else
      v26 = v20 + 1;
    v27 = v26 >> 1;
    v24 = &v13[(v26 >> 1) + v14 / 0xFFFFFFFFFFFFFFF8];
    v28 = (uint64_t *)sub_1003D7648((_QWORD **)a2, (_QWORD **)a3, (_QWORD **)v24);
    v25 = v27;
    v23 = v28;
    v22 = v28 - a2;
LABEL_23:
    if (v24 == a2)
    {
      v13 = v23;
    }
    else if (v23 == a2)
    {
      v13 = v24;
    }
    else
    {
      v29 = v25;
      v30 = sub_1003D76AC(v24, a2, v23);
      v25 = v29;
      v13 = v30;
    }
    v31 = a5 - v25 - v15;
    v32 = v9 - v22;
    if (v25 + v22 >= v9 + a5 - (v25 + v22) - v15)
    {
      v35 = v13;
      v36 = v25;
      result = (unint64_t *)sub_1003D6D40(v13, v23, v38, v40, v31, v32, a7, v39);
      v13 = v37;
      a2 = v24;
      a4 = v40;
      v32 = v22;
      a8 = v39;
      v31 = v36;
      a3 = v35;
    }
    else
    {
      v33 = v24;
      a4 = v40;
      v34 = v22;
      a8 = v39;
      result = (unint64_t *)sub_1003D6D40(v37, v33, v13, v40, v25, v34, a7, v39);
      a2 = v23;
      a3 = v38;
    }
    a5 = v31;
    v9 = v32;
  }
  while (v32);
  return result;
}

_QWORD *sub_1003D6FB4(_QWORD *result, _QWORD **a2, uint64_t *a3)
{
  uint64_t v3;
  _QWORD **v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD **v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD **v23;

  if (result != a2)
  {
    v3 = *result;
    *result = 0;
    v4 = (_QWORD **)(result + 1);
    *a3 = v3;
    if (result + 1 != a2)
    {
      v5 = 0;
      v6 = a3;
      do
      {
        v7 = v6;
        v9 = *v6++;
        v8 = v9;
        v10 = *(_QWORD **)v9;
        v11 = *(_QWORD *)(*(_QWORD *)v9 + 8);
        v12 = (_QWORD **)*v4;
        v13 = (_QWORD *)**v4;
        v14 = v13[1];
        if (v11 == v14)
        {
          if (*v10 > *v13)
            goto LABEL_8;
        }
        else if (v11 < v14)
        {
LABEL_8:
          *v7 = 0;
          v7[1] = v8;
          v15 = a3;
          if (v7 != a3)
          {
            v16 = v5;
            do
            {
              v17 = (uint64_t *)((char *)a3 + v16);
              v18 = *(uint64_t *)((char *)a3 + v16 - 8);
              v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
              v20 = (_QWORD *)**v4;
              v21 = v20[1];
              if (v19 == v21)
              {
                if (**(_QWORD **)v18 <= *v20)
                {
                  v15 = v7;
                  goto LABEL_19;
                }
              }
              else if (v19 >= v21)
              {
                v15 = (uint64_t *)((char *)a3 + v16);
                goto LABEL_19;
              }
              v22 = *v17;
              *(v17 - 1) = 0;
              *v17 = v18;
              if (v22)
                operator delete();
              --v7;
              v16 -= 8;
            }
            while (v16);
            v15 = a3;
          }
LABEL_19:
          v23 = (_QWORD **)*v4;
          *v4 = 0;
          result = (_QWORD *)*v15;
          *v15 = (uint64_t)v23;
          if (result)
            operator delete();
          goto LABEL_21;
        }
        *v4 = 0;
        *v6 = (uint64_t)v12;
LABEL_21:
        ++v4;
        v5 += 8;
      }
      while (v4 != a2);
    }
  }
  return result;
}

_QWORD **sub_1003D7120(_QWORD **result, _QWORD **a2, _QWORD **a3, _QWORD **a4, _QWORD *a5)
{
  _QWORD **v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD **v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD **v11;
  uint64_t v12;
  _QWORD *v13;

  while (1)
  {
    if (result == a2)
    {
      while (a3 != a4)
      {
        v11 = (_QWORD **)*a3;
        *a3++ = 0;
        *a5++ = v11;
      }
      return result;
    }
    if (a3 == a4)
      break;
    v5 = (_QWORD **)*result;
    v6 = (_QWORD *)**result;
    v7 = v6[1];
    v8 = (_QWORD **)*a3;
    v9 = (_QWORD *)**a3;
    v10 = v9[1];
    if (v7 == v10)
    {
      if (*v6 <= *v9)
        goto LABEL_5;
    }
    else if (v7 >= v10)
    {
LABEL_5:
      *result++ = 0;
      *a5 = v5;
      goto LABEL_8;
    }
    *a3++ = 0;
    *a5 = v8;
LABEL_8:
    ++a5;
  }
  if (result != a2)
  {
    v12 = 0;
    do
    {
      v13 = result[v12];
      result[v12] = 0;
      a5[v12++] = v13;
    }
    while (&result[v12] != a2);
  }
  return result;
}

unint64_t *sub_1003D71C4(unint64_t *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *result;
  if (*result)
  {
    v3 = 0;
    do
    {
      result = *(unint64_t **)(a2 + 8 * v3);
      *(_QWORD *)(a2 + 8 * v3) = 0;
      if (result)
        operator delete();
      ++v3;
    }
    while (v3 < v2);
  }
  return result;
}

unint64_t *sub_1003D7228(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t *result;
  unint64_t v19;

  if (a5 <= a6)
  {
    if (a1 == a2)
    {
      v14 = 0;
      v15 = a7;
    }
    else
    {
      v14 = 0;
      v15 = a7;
      v16 = a1;
      do
      {
        v17 = *v16;
        *v16++ = 0;
        *v15++ = v17;
        ++v14;
      }
      while (v16 != a2);
    }
    v19 = v14;
    result = (unint64_t *)sub_1003D73B4(a7, v15, (_QWORD **)a2, (_QWORD **)a3, a1);
  }
  else
  {
    if (a2 == a3)
    {
      v10 = 0;
      v11 = a7;
    }
    else
    {
      v10 = 0;
      v11 = a7;
      v12 = a2;
      do
      {
        v13 = *v12;
        *v12++ = 0;
        *v11++ = v13;
        ++v10;
      }
      while (v12 != a3);
    }
    v19 = v10;
    result = (unint64_t *)sub_1003D74B4((uint64_t)v11, (uint64_t)v11, (uint64_t)a7, (uint64_t)a7, (uint64_t)a2, a2, (uint64_t)a1, a1, (uint64_t)a3, (uint64_t)a3);
  }
  if (a7)
    return sub_1003D71C4(&v19, (uint64_t)a7);
  return result;
}

void sub_1003D7330(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  if (v1)
    sub_1003D71C4((unint64_t *)(v2 - 24), v1);
  _Unwind_Resume(exception_object);
}

_QWORD **sub_1003D7350(_QWORD **result, _QWORD **a2, _QWORD **a3)
{
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD **v7;
  _QWORD *v8;
  uint64_t v9;

  if (a2 != result)
  {
    v3 = a2 - result;
    v4 = (_QWORD *)**a3;
    v5 = v4[1];
    while (1)
    {
      v6 = v3 >> 1;
      v7 = &result[v3 >> 1];
      v8 = (_QWORD *)**v7;
      v9 = v8[1];
      if (v9 == v5)
        break;
      if (v9 >= v5)
        goto LABEL_7;
LABEL_8:
      v3 = v6;
      if (!v6)
        return result;
    }
    if (*v8 > *v4)
      goto LABEL_8;
LABEL_7:
    result = v7 + 1;
    v6 = v3 + ~v6;
    goto LABEL_8;
  }
  return result;
}

uint64_t *sub_1003D73B4(uint64_t *result, uint64_t *a2, _QWORD **a3, _QWORD **a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD **v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  if (result != a2)
  {
    v17 = v5;
    v18 = v6;
    v9 = result;
    do
    {
      if (a3 == a4)
        return sub_1003D75D0((uint64_t)&v16, v9, a2, a5);
      v10 = *v9;
      v11 = *(_QWORD **)*v9;
      v12 = v11[1];
      v13 = (_QWORD **)*a3;
      v14 = (_QWORD *)**a3;
      v15 = v14[1];
      if (v12 == v15)
      {
        if (*v11 > *v14)
          goto LABEL_10;
      }
      else if (v12 < v15)
      {
LABEL_10:
        *a3 = 0;
        result = (uint64_t *)*a5;
        *a5 = (uint64_t)v13;
        if (result)
          operator delete();
        ++a3;
        goto LABEL_13;
      }
      *v9 = 0;
      result = (uint64_t *)*a5;
      *a5 = v10;
      if (result)
        operator delete();
      ++v9;
LABEL_13:
      ++a5;
    }
    while (v9 != a2);
  }
  return result;
}

uint64_t sub_1003D74B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  if (a2 == a4)
    return result;
  v10 = a2;
  v11 = (uint64_t *)(a10 - 8);
  while (a6 != a8)
  {
    v13 = a6 - 1;
    v12 = *(a6 - 1);
    v14 = *(_QWORD *)(v10 - 8);
    v15 = *(_QWORD *)(*(_QWORD *)v12 + 8);
    v16 = *(_QWORD *)(*(_QWORD *)v14 + 8);
    if (v15 == v16)
    {
      if (**(_QWORD **)v12 > **(_QWORD **)v14)
        goto LABEL_11;
    }
    else if (v15 < v16)
    {
LABEL_11:
      *v13 = 0;
      result = *v11;
      *v11 = v12;
      if (result)
LABEL_7:
        operator delete();
      goto LABEL_8;
    }
    *(_QWORD *)(v10 - 8) = 0;
    result = *v11;
    *v11 = v14;
    v13 = a6;
    v10 -= 8;
    if (result)
      goto LABEL_7;
LABEL_8:
    --v11;
    a6 = v13;
    if (v10 == a4)
      return result;
  }
  v18 = 0;
  do
  {
    v19 = *(_QWORD *)(v10 + v18 * 8 - 8);
    *(_QWORD *)(v10 + v18 * 8 - 8) = 0;
    result = v11[v18];
    v11[v18] = v19;
    if (result)
      operator delete();
    --v18;
  }
  while (v10 + v18 * 8 != a4);
  return result;
}

uint64_t *sub_1003D75D0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      v6 = *v5;
      *v5 = 0;
      v7 = *a4;
      *a4 = v6;
      if (v7)
        operator delete();
      ++v5;
      ++a4;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

_QWORD **sub_1003D7648(_QWORD **result, _QWORD **a2, _QWORD **a3)
{
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD **v7;
  _QWORD *v8;
  uint64_t v9;

  if (a2 != result)
  {
    v3 = a2 - result;
    v4 = (_QWORD *)**a3;
    v5 = v4[1];
    while (1)
    {
      v6 = v3 >> 1;
      v7 = &result[v3 >> 1];
      v8 = (_QWORD *)**v7;
      v9 = v8[1];
      if (v5 == v9)
        break;
      if (v5 < v9)
        goto LABEL_7;
LABEL_8:
      v3 = v6;
      if (!v6)
        return result;
    }
    if (*v4 <= *v8)
      goto LABEL_8;
LABEL_7:
    result = v7 + 1;
    v6 = v3 + ~v6;
    goto LABEL_8;
  }
  return result;
}

uint64_t *sub_1003D76AC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t *result;
  uint64_t *i;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;

  v3 = *a1;
  *a1 = *a2;
  result = a1 + 1;
  for (i = a2; ; *result++ = *i)
  {
    *i++ = v3;
    if (i == a3)
      break;
    if (result == a2)
      a2 = i;
    v3 = *result;
  }
  if (result != a2)
  {
    v6 = result;
    v7 = a2;
    while (1)
    {
      v8 = v6;
      while (1)
      {
        v9 = *v6;
        *v8++ = *v7;
        *v7++ = v9;
        if (v7 != a3)
          break;
        v6 = v8;
        v7 = a2;
        if (v8 == a2)
          return result;
      }
      if (v8 == a2)
        a2 = v7;
      ++v6;
    }
  }
  return result;
}

void sub_1003D7734(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD **v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t **v16;
  uint64_t v17;
  uint64_t **v18;
  __int128 *v19;
  uint64_t **v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

uint64_t sub_1003D7B10(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD **v13;

  if (result != a2)
  {
    v2 = result + 24;
    if (result + 24 != a2)
    {
      v3 = 0;
      v4 = result;
      do
      {
        v5 = v4;
        v4 = v2;
        v6 = *(_QWORD *)(v5 + 32);
        if (v6)
          v7 = *(_QWORD *)(v5 + 8) == 0;
        else
          v7 = 1;
        if (v7)
        {
          if (v6)
          {
            v8 = *(_QWORD **)v4;
LABEL_12:
            v9 = *(_BYTE *)(v5 + 40);
            *(_OWORD *)v4 = *(_OWORD *)v5;
            *(_BYTE *)(v4 + 16) = *(_BYTE *)(v5 + 16);
            v10 = result;
            if (v5 != result)
            {
              v11 = v3;
              while (1)
              {
                v12 = result + v11;
                v13 = (_QWORD **)(result + v11 - 24);
                if (v6)
                {
                  if (*(_QWORD *)(v12 - 16) && **v13 <= *v8)
                    break;
                }
                *(_OWORD *)v12 = *(_OWORD *)v13;
                *(_BYTE *)(v12 + 16) = *(_BYTE *)(result + v11 - 8);
                v11 -= 24;
                if (!v11)
                {
                  v10 = result;
                  goto LABEL_20;
                }
              }
              v10 = result + v11;
            }
LABEL_20:
            *(_QWORD *)v10 = v8;
            *(_QWORD *)(v10 + 8) = v6;
            *(_BYTE *)(v10 + 16) = v9;
          }
        }
        else
        {
          v8 = *(_QWORD **)v4;
          if (**(_QWORD **)v5 > **(_QWORD **)v4)
            goto LABEL_12;
        }
        v2 = v4 + 24;
        v3 += 24;
      }
      while (v4 + 24 != a2);
    }
  }
  return result;
}

_QWORD **sub_1003D7BF8(_QWORD **result, _QWORD **a2)
{
  _QWORD **v2;
  _QWORD *v3;
  _QWORD *v5;
  char v6;
  _QWORD **v7;

  if (result != a2)
  {
    while (1)
    {
      while (1)
      {
        if (result + 3 == a2)
          return result;
        v2 = result;
        result += 3;
        v3 = v2[4];
        if (!v3 || v2[1] == 0)
          break;
        v5 = *result;
        if (**v2 > **result)
          goto LABEL_11;
      }
      if (v3)
      {
        v5 = *result;
LABEL_11:
        v6 = *((_BYTE *)v2 + 40);
        do
        {
          do
          {
            v7 = v2;
            *(_OWORD *)(v2 + 3) = *(_OWORD *)v2;
            *((_BYTE *)v2 + 40) = *((_BYTE *)v2 + 16);
            v2 -= 3;
          }
          while (!v3);
        }
        while (!*(v7 - 2) || **(v7 - 3) > *v5);
        *v7 = v5;
        v7[1] = v3;
        *((_BYTE *)v7 + 16) = v6;
      }
    }
  }
  return result;
}

uint64_t sub_1003D7C98(__int128 *a1, uint64_t **a2, __int128 *a3)
{
  uint64_t *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  uint64_t *v17;
  char v18;
  uint64_t *v19;
  __int128 v20;
  uint64_t *v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  char v25;

  v3 = a2[1];
  if (v3)
    v4 = *((_QWORD *)a1 + 1) == 0;
  else
    v4 = 1;
  if (v4)
  {
    if (v3)
      goto LABEL_10;
    if (*((_QWORD *)a3 + 1))
    {
LABEL_25:
      v16 = *(_OWORD *)a2;
      v17 = a2[2];
      v18 = *((_BYTE *)a3 + 16);
      *(_OWORD *)a2 = *a3;
      *((_BYTE *)a2 + 16) = v18;
      *((_BYTE *)a3 + 16) = (_BYTE)v17;
      *a3 = v16;
      v19 = a2[1];
      if (v19 && *((_QWORD *)a1 + 1))
      {
        if (**(_QWORD **)a1 <= **a2)
          return 1;
      }
      else if (!v19)
      {
        return 1;
      }
      v23 = *a1;
      v24 = *((_QWORD *)a1 + 2);
      v25 = *((_BYTE *)a2 + 16);
      *a1 = *(_OWORD *)a2;
      *((_BYTE *)a1 + 16) = v25;
      *((_BYTE *)a2 + 16) = v24;
      *(_OWORD *)a2 = v23;
      return 2;
    }
    return 0;
  }
  v5 = **a2;
  if (**(_QWORD **)a1 <= v5)
  {
    if (*((_QWORD *)a3 + 1) && v5 > **(_QWORD **)a3)
      goto LABEL_25;
    return 0;
  }
LABEL_10:
  v6 = *((_QWORD *)a3 + 1);
  if (v3)
    v7 = v6 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    if (**a2 <= **(_QWORD **)a3)
      goto LABEL_19;
LABEL_16:
    v8 = *a1;
    v9 = *((_QWORD *)a1 + 2);
    v10 = *((_BYTE *)a3 + 16);
    *a1 = *a3;
    *((_BYTE *)a1 + 16) = v10;
    *((_BYTE *)a3 + 16) = v9;
    *a3 = v8;
    return 1;
  }
  if (v6)
    goto LABEL_16;
LABEL_19:
  v12 = *a1;
  v13 = *((_QWORD *)a1 + 2);
  v14 = *((_BYTE *)a2 + 16);
  *a1 = *(_OWORD *)a2;
  *((_BYTE *)a1 + 16) = v14;
  *((_BYTE *)a2 + 16) = v13;
  *(_OWORD *)a2 = v12;
  v15 = *((_QWORD *)a3 + 1);
  if (v15 && a2[1])
  {
    if (**a2 > **(_QWORD **)a3)
      goto LABEL_31;
    return 1;
  }
  if (!v15)
    return 1;
LABEL_31:
  v20 = *(_OWORD *)a2;
  v21 = a2[2];
  v22 = *((_BYTE *)a3 + 16);
  *(_OWORD *)a2 = *a3;
  *((_BYTE *)a2 + 16) = v22;
  *((_BYTE *)a3 + 16) = (_BYTE)v21;
  *a3 = v20;
  return 2;
}

__int128 *sub_1003D7E3C(uint64_t a1, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  __int128 *i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  uint64_t v14;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *((_QWORD *)a2 - 2);
  if (v3)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
  {
    if (!v3)
      goto LABEL_15;
  }
  else if (**((_QWORD **)a2 - 3) <= *v2)
  {
LABEL_15:
    for (i = (__int128 *)(a1 + 24); i < a2; i = (__int128 *)((char *)i + 24))
    {
      if (v3 && *((_QWORD *)i + 1))
      {
        if (**(_QWORD **)i > *v2)
          goto LABEL_23;
      }
      else if (v3)
      {
        goto LABEL_23;
      }
    }
    goto LABEL_23;
  }
  i = (__int128 *)(a1 + 24);
  if (!v3)
    goto LABEL_11;
LABEL_8:
  if (*((_QWORD *)i + 1))
  {
    if (**(_QWORD **)i <= *v2)
      goto LABEL_12;
  }
  else
  {
LABEL_11:
    while (!v3)
    {
LABEL_12:
      i = (__int128 *)((char *)i + 24);
      if (v3)
        goto LABEL_8;
    }
  }
LABEL_23:
  if (i < a2)
  {
    v7 = (uint64_t *)a2 - 5;
    if (!v3)
      goto LABEL_28;
    while (1)
    {
      if (v4)
      {
        if (*(_QWORD *)v7[2] <= *v2)
          goto LABEL_30;
      }
      else
      {
LABEL_28:
        if (!v3)
        {
LABEL_30:
          a2 = (__int128 *)(v7 + 2);
          break;
        }
      }
      v8 = *v7;
      v7 -= 3;
      v4 = v8;
    }
  }
  v9 = *(_QWORD *)(a1 + 16);
  while (i < a2)
  {
    v14 = *((_QWORD *)i + 2);
    v13 = *i;
    v10 = *a2;
    *((_BYTE *)i + 16) = *((_BYTE *)a2 + 16);
    *i = v10;
    *((_BYTE *)a2 + 16) = v14;
    *a2 = v13;
    do
    {
      while (1)
      {
        i = (__int128 *)((char *)i + 24);
        if (!v3 || !*((_QWORD *)i + 1))
          break;
        if (**(_QWORD **)i > *v2)
          goto LABEL_39;
      }
    }
    while (!v3);
    do
    {
      do
LABEL_39:
        a2 = (__int128 *)((char *)a2 - 24);
      while (!*((_QWORD *)a2 + 1));
    }
    while (**(_QWORD **)a2 > *v2);
  }
  if ((__int128 *)((char *)i - 24) != (__int128 *)a1)
  {
    v11 = *(__int128 *)((char *)i - 24);
    *(_BYTE *)(a1 + 16) = *((_BYTE *)i - 8);
    *(_OWORD *)a1 = v11;
  }
  *((_QWORD *)i - 3) = v2;
  *((_QWORD *)i - 2) = v3;
  *((_BYTE *)i - 8) = v9;
  return i;
}

unint64_t sub_1003D7FE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  BOOL v13;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v22;
  __int128 v24;
  uint64_t v25;

  v2 = 0;
  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  while (1)
  {
    v6 = *(_QWORD *)(a1 + v2 + 32);
    if (v6 && v4 != 0)
      break;
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v2 += 24;
  }
  if (*v3 > **(_QWORD **)(a1 + v2 + 24))
    goto LABEL_10;
LABEL_11:
  v8 = a1 + v2 + 24;
  if (v2)
  {
    do
    {
      while (1)
      {
        a2 -= 24;
        v9 = *(_QWORD *)(a2 + 8);
        if (v9 && v4 != 0)
          break;
        if (v9)
          goto LABEL_38;
      }
    }
    while (*v3 <= **(_QWORD **)a2);
  }
  else if (v8 < a2)
  {
    do
    {
      while (1)
      {
        a2 -= 24;
        v11 = *(_QWORD *)(a2 + 8);
        if (!v11 || v4 == 0)
          break;
        if (*v3 > **(_QWORD **)a2 || v8 >= a2)
          goto LABEL_38;
      }
      if (v11)
        v13 = 1;
      else
        v13 = v8 >= a2;
    }
    while (!v13);
  }
LABEL_38:
  v15 = v8;
  if (v8 < a2)
  {
    v16 = a2;
    do
    {
      v25 = *(_QWORD *)(v15 + 16);
      v24 = *(_OWORD *)v15;
      v17 = *(_OWORD *)v16;
      *(_BYTE *)(v15 + 16) = *(_BYTE *)(v16 + 16);
      *(_OWORD *)v15 = v17;
      *(_BYTE *)(v16 + 16) = v25;
      *(_OWORD *)v16 = v24;
      do
      {
        while (1)
        {
          v15 += 24;
          v18 = *(_QWORD *)(v15 + 8);
          if (v18 && v4 != 0)
            break;
          if (!v18)
            goto LABEL_51;
        }
      }
      while (*v3 > **(_QWORD **)v15);
      do
      {
LABEL_51:
        while (1)
        {
          v16 -= 24;
          v20 = *(_QWORD *)(v16 + 8);
          if (!v20 || v4 == 0)
            break;
          if (*v3 > **(_QWORD **)v16)
            goto LABEL_57;
        }
      }
      while (!v20);
LABEL_57:
      ;
    }
    while (v15 < v16);
  }
  if (v15 - 24 != a1)
  {
    v22 = *(_OWORD *)(v15 - 24);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(v15 - 8);
    *(_OWORD *)a1 = v22;
  }
  *(_QWORD *)(v15 - 24) = v3;
  *(_QWORD *)(v15 - 16) = v4;
  *(_BYTE *)(v15 - 8) = v5;
  return v15 - 24;
}

BOOL sub_1003D818C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BOOL8 result;
  _QWORD **v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD **v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v6 = (_QWORD **)(a2 - 24);
      v7 = *(_QWORD *)(a2 - 16);
      if (v7)
        v8 = *(_QWORD *)(a1 + 8) == 0;
      else
        v8 = 1;
      if (v8)
      {
        if (!v7)
          return result;
      }
      else if (**(_QWORD **)a1 <= **v6)
      {
        return result;
      }
      v21 = *(_OWORD *)a1;
      v22 = *(_QWORD *)(a1 + 16);
      v23 = *(_BYTE *)(a2 - 8);
      *(_OWORD *)a1 = *(_OWORD *)v6;
      *(_BYTE *)(a1 + 16) = v23;
      *(_BYTE *)(a2 - 8) = v22;
      *(_OWORD *)v6 = v21;
      return result;
    case 3uLL:
      sub_1003D7C98((__int128 *)a1, (uint64_t **)(a1 + 24), (__int128 *)(a2 - 24));
      return 1;
    case 4uLL:
      sub_1003D83C0(a1, a1 + 24, a1 + 48, a2 - 24);
      return 1;
    case 5uLL:
      sub_1003D84F4((__n128 *)a1, a1 + 24, a1 + 48, a1 + 72, a2 - 24);
      return 1;
    default:
      v9 = a1 + 48;
      sub_1003D7C98((__int128 *)a1, (uint64_t **)(a1 + 24), (__int128 *)(a1 + 48));
      v10 = a1 + 72;
      if (a1 + 72 == a2)
        return 1;
      v11 = 0;
      v12 = 0;
      break;
  }
  while (1)
  {
    v13 = *(_QWORD *)(v10 + 8);
    if (!v13 || *(_QWORD *)(v9 + 8) == 0)
      break;
    v15 = *(_QWORD **)v10;
    if (**(_QWORD **)v9 > **(_QWORD **)v10)
      goto LABEL_19;
LABEL_28:
    v9 = v10;
    v11 += 24;
    v10 += 24;
    if (v10 == a2)
      return 1;
  }
  if (!v13)
    goto LABEL_28;
  v15 = *(_QWORD **)v10;
LABEL_19:
  v16 = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v9;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v9 + 16);
  v17 = a1;
  if (v9 != a1)
  {
    v18 = v11;
    while (1)
    {
      v19 = a1 + v18;
      v20 = (_QWORD **)(a1 + v18 + 24);
      if (v13)
      {
        if (*(_QWORD *)(v19 + 32) && **v20 <= *v15)
          break;
      }
      *(_OWORD *)(v19 + 48) = *(_OWORD *)v20;
      *(_BYTE *)(v19 + 64) = *(_BYTE *)(a1 + v18 + 40);
      v18 -= 24;
      if (v18 == -48)
      {
        v17 = a1;
        goto LABEL_27;
      }
    }
    v17 = a1 + v18 + 48;
  }
LABEL_27:
  *(_QWORD *)v17 = v15;
  *(_QWORD *)(v17 + 8) = v13;
  *(_BYTE *)(v17 + 16) = v16;
  if (++v12 != 8)
    goto LABEL_28;
  return v10 + 24 == a2;
}

__n128 sub_1003D83C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_1003D7C98((__int128 *)a1, (uint64_t **)a2, (__int128 *)a3);
  v9 = *(_QWORD *)(a4 + 8);
  if (v9)
    v10 = *(_QWORD *)(a3 + 8) == 0;
  else
    v10 = 1;
  if (v10)
  {
    if (!v9)
      return result;
  }
  else if (**(_QWORD **)a3 <= **(_QWORD **)a4)
  {
    return result;
  }
  result = *(__n128 *)a3;
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_BYTE *)(a4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a4;
  *(_BYTE *)(a3 + 16) = v12;
  *(_BYTE *)(a4 + 16) = v11;
  *(__n128 *)a4 = result;
  v13 = *(_QWORD *)(a3 + 8);
  if (v13 && *(_QWORD *)(a2 + 8))
  {
    if (**(_QWORD **)a2 <= **(_QWORD **)a3)
      return result;
  }
  else if (!v13)
  {
    return result;
  }
  result = *(__n128 *)a2;
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_BYTE *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_BYTE *)(a2 + 16) = v15;
  *(_BYTE *)(a3 + 16) = v14;
  *(__n128 *)a3 = result;
  v16 = *(_QWORD *)(a2 + 8);
  if (!v16 || !*(_QWORD *)(a1 + 8))
  {
    if (!v16)
      return result;
    goto LABEL_19;
  }
  if (**(_QWORD **)a1 > **(_QWORD **)a2)
  {
LABEL_19:
    result = *(__n128 *)a1;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_BYTE *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = v18;
    *(_BYTE *)(a2 + 16) = v17;
    *(__n128 *)a2 = result;
  }
  return result;
}

__n128 sub_1003D84F4(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int8 v23;

  result.n128_u64[0] = sub_1003D83C0((uint64_t)a1, a2, a3, a4).n128_u64[0];
  v11 = *(_QWORD *)(a5 + 8);
  if (v11)
    v12 = *(_QWORD *)(a4 + 8) == 0;
  else
    v12 = 1;
  if (v12)
  {
    if (!v11)
      return result;
  }
  else if (**(_QWORD **)a4 <= **(_QWORD **)a5)
  {
    return result;
  }
  result = *(__n128 *)a4;
  v13 = *(_QWORD *)(a4 + 16);
  v14 = *(_BYTE *)(a5 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a5;
  *(_BYTE *)(a4 + 16) = v14;
  *(_BYTE *)(a5 + 16) = v13;
  *(__n128 *)a5 = result;
  v15 = *(_QWORD *)(a4 + 8);
  if (v15 && *(_QWORD *)(a3 + 8))
  {
    if (**(_QWORD **)a3 <= **(_QWORD **)a4)
      return result;
  }
  else if (!v15)
  {
    return result;
  }
  result = *(__n128 *)a3;
  v16 = *(_QWORD *)(a3 + 16);
  v17 = *(_BYTE *)(a4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a4;
  *(_BYTE *)(a3 + 16) = v17;
  *(_BYTE *)(a4 + 16) = v16;
  *(__n128 *)a4 = result;
  v18 = *(_QWORD *)(a3 + 8);
  if (v18 && *(_QWORD *)(a2 + 8))
  {
    if (**(_QWORD **)a2 <= **(_QWORD **)a3)
      return result;
  }
  else if (!v18)
  {
    return result;
  }
  result = *(__n128 *)a2;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = *(_BYTE *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_BYTE *)(a2 + 16) = v20;
  *(_BYTE *)(a3 + 16) = v19;
  *(__n128 *)a3 = result;
  v21 = *(_QWORD *)(a2 + 8);
  if (!v21 || !a1->n128_u64[1])
  {
    if (!v21)
      return result;
    goto LABEL_24;
  }
  if (*(_QWORD *)a1->n128_u64[0] > **(_QWORD **)a2)
  {
LABEL_24:
    result = *a1;
    v22 = a1[1].n128_u64[0];
    v23 = *(_BYTE *)(a2 + 16);
    *a1 = *(__n128 *)a2;
    a1[1].n128_u8[0] = v23;
    *(_BYTE *)(a2 + 16) = v22;
    *(__n128 *)a2 = result;
  }
  return result;
}

__int128 *sub_1003D8684(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 *v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  char v19;
  int64_t v20;
  __int128 *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v26;
  uint64_t v27;

  if ((__int128 *)a1 != a2)
  {
    v8 = (uint64_t)a2 - a1;
    v9 = ((uint64_t)a2 - a1) / 24;
    if ((uint64_t)a2 - a1 >= 25)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = a1 + 24 * v10;
      do
      {
        sub_1003D8868(a1, a4, v9, v12);
        v12 -= 24;
        --v11;
      }
      while (v11);
    }
    v13 = a2;
    if (a2 != a3)
    {
      v14 = a2;
      while (1)
      {
        v15 = *((_QWORD *)v14 + 1);
        if (v15 && *(_QWORD *)(a1 + 8) != 0)
          break;
        if (v15)
          goto LABEL_13;
LABEL_14:
        v14 = (__int128 *)((char *)v14 + 24);
        if (v14 == a3)
        {
          v13 = a3;
          goto LABEL_18;
        }
      }
      if (**(_QWORD **)a1 <= **(_QWORD **)v14)
        goto LABEL_14;
LABEL_13:
      v17 = *v14;
      v18 = *((_QWORD *)v14 + 2);
      v19 = *(_BYTE *)(a1 + 16);
      *v14 = *(_OWORD *)a1;
      *((_BYTE *)v14 + 16) = v19;
      *(_BYTE *)(a1 + 16) = v18;
      *(_OWORD *)a1 = v17;
      sub_1003D8868(a1, a4, v9, a1);
      goto LABEL_14;
    }
LABEL_18:
    if (v8 >= 25)
    {
      v20 = v8 / 0x18uLL;
      v21 = (__int128 *)((char *)a2 - 24);
      do
      {
        v26 = *(_OWORD *)a1;
        v27 = *(_QWORD *)(a1 + 16);
        sub_1003D8A0C(a1, a4, v20);
        if (v21 == (__int128 *)v22)
        {
          *(_OWORD *)v22 = v26;
          *(_BYTE *)(v22 + 16) = v27;
        }
        else
        {
          v23 = *v21;
          *(_BYTE *)(v22 + 16) = *((_BYTE *)v21 + 16);
          *(_OWORD *)v22 = v23;
          *v21 = v26;
          *((_BYTE *)v21 + 16) = v27;
          sub_1003D8AAC(a1, v22 + 24, a4, 0xAAAAAAAAAAAAAAABLL * ((v22 + 24 - a1) >> 3));
        }
        v21 = (__int128 *)((char *)v21 - 24);
      }
      while (v20-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_1003D8868(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  _QWORD *v12;
  char v13;
  char v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  __int128 v22;

  if (a3 < 2)
    return result;
  v4 = (unint64_t)(a3 - 2) >> 1;
  if (v4 < (uint64_t)(0xAAAAAAAAAAAAAAABLL * ((a4 - result) >> 3)))
    return result;
  v5 = (0x5555555555555556 * ((a4 - result) >> 3)) | 1;
  v6 = (__int128 *)(result + 24 * v5);
  if (0x5555555555555556 * ((a4 - result) >> 3) + 2 < a3)
  {
    v7 = *(_QWORD *)(result + 24 * v5 + 8);
    if (v7)
      v8 = *((_QWORD *)v6 + 4) == 0;
    else
      v8 = 1;
    if (v8)
    {
      if (!v7)
        goto LABEL_11;
    }
    else if (**((_QWORD **)v6 + 3) <= **(_QWORD **)v6)
    {
      goto LABEL_11;
    }
    v6 = (__int128 *)((char *)v6 + 24);
    v5 = 0x5555555555555556 * ((a4 - result) >> 3) + 2;
  }
LABEL_11:
  v9 = *((_QWORD *)v6 + 1);
  v10 = *(_QWORD *)(a4 + 8);
  if (v9)
    v11 = v10 == 0;
  else
    v11 = 1;
  if (v11)
  {
    if (v9)
      return result;
    v12 = *(_QWORD **)a4;
  }
  else
  {
    v12 = *(_QWORD **)a4;
    if (**(_QWORD **)a4 > **(_QWORD **)v6)
      return result;
  }
  v13 = *(_BYTE *)(a4 + 16);
  v14 = *((_BYTE *)v6 + 16);
  *(_OWORD *)a4 = *v6;
  *(_BYTE *)(a4 + 16) = v14;
  if (v4 >= v5)
  {
    while (1)
    {
      v16 = 2 * v5;
      v5 = (2 * v5) | 1;
      v15 = (__int128 *)(result + 24 * v5);
      v17 = v16 + 2;
      if (v17 < a3)
      {
        v18 = *(_QWORD *)(result + 24 * v5 + 8);
        if (v18)
          v19 = *((_QWORD *)v15 + 4) == 0;
        else
          v19 = 1;
        if (!v19)
        {
          if (**((_QWORD **)v15 + 3) <= **(_QWORD **)v15)
            goto LABEL_34;
LABEL_33:
          v15 = (__int128 *)((char *)v15 + 24);
          v5 = v17;
          goto LABEL_34;
        }
        if (v18)
          goto LABEL_33;
      }
LABEL_34:
      v20 = *((_QWORD *)v15 + 1);
      if (v20)
        v21 = v10 == 0;
      else
        v21 = 1;
      if (v21)
      {
        if (v20)
          break;
      }
      else if (*v12 > **(_QWORD **)v15)
      {
        break;
      }
      v22 = *v15;
      *((_BYTE *)v6 + 16) = *((_BYTE *)v15 + 16);
      *v6 = v22;
      v6 = v15;
      if (v4 < v5)
        goto LABEL_25;
    }
  }
  v15 = v6;
LABEL_25:
  *(_QWORD *)v15 = v12;
  *((_QWORD *)v15 + 1) = v10;
  *((_BYTE *)v15 + 16) = v13;
  return result;
}

__n128 sub_1003D8A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  __n128 result;

  v3 = 0;
  v4 = a3 - 2;
  if (a3 < 2)
    v4 = a3 - 1;
  v5 = v4 >> 1;
  do
  {
    v6 = (__n128 *)a1;
    v7 = v3 + 1;
    a1 += 24 * (v3 + 1);
    v8 = 2 * v3;
    v3 = (2 * v3) | 1;
    v9 = v8 + 2;
    if (v9 >= a3)
      goto LABEL_12;
    v10 = v6->n128_u64[3 * v7 + 1];
    if (v10)
      v11 = *(_QWORD *)(a1 + 32) == 0;
    else
      v11 = 1;
    if (v11)
    {
      if (!v10)
        goto LABEL_12;
LABEL_11:
      a1 += 24;
      v3 = v9;
      goto LABEL_12;
    }
    if (**(_QWORD **)(a1 + 24) > **(_QWORD **)a1)
      goto LABEL_11;
LABEL_12:
    result = *(__n128 *)a1;
    v6[1].n128_u8[0] = *(_BYTE *)(a1 + 16);
    *v6 = result;
  }
  while (v3 <= v5);
  return result;
}

uint64_t sub_1003D8AAC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  __int128 *v6;
  _QWORD **v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  _QWORD *v11;
  char v12;
  char v13;
  __int128 *v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  __int128 v18;

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v5 = v4 >> 1;
    v6 = (__int128 *)(result + 24 * (v4 >> 1));
    v7 = (_QWORD **)(a2 - 24);
    v8 = *((_QWORD *)v6 + 1);
    v9 = *(_QWORD *)(a2 - 16);
    if (v8)
      v10 = v9 == 0;
    else
      v10 = 1;
    if (v10)
    {
      if (!v8)
        return result;
      v11 = *v7;
    }
    else
    {
      v11 = *v7;
      if (**v7 <= **(_QWORD **)v6)
        return result;
    }
    v12 = *(_BYTE *)(a2 - 8);
    v13 = *((_BYTE *)v6 + 16);
    *(_OWORD *)v7 = *v6;
    *(_BYTE *)(a2 - 8) = v13;
    if (v4 >= 2)
    {
      do
      {
        v15 = v5 - 1;
        v5 = (v5 - 1) >> 1;
        v14 = (__int128 *)(result + 24 * v5);
        v16 = *((_QWORD *)v14 + 1);
        if (v16)
          v17 = v9 == 0;
        else
          v17 = 1;
        if (v17)
        {
          if (!v16)
            goto LABEL_11;
        }
        else if (*v11 <= **(_QWORD **)v14)
        {
          goto LABEL_11;
        }
        v18 = *v14;
        *((_BYTE *)v6 + 16) = *((_BYTE *)v14 + 16);
        *v6 = v18;
        v6 = (__int128 *)(result + 24 * v5);
      }
      while (v15 > 1);
    }
    else
    {
LABEL_11:
      v14 = v6;
    }
    *(_QWORD *)v14 = v11;
    *((_QWORD *)v14 + 1) = v9;
    *((_BYTE *)v14 + 16) = v12;
  }
  return result;
}

void sub_1003D8B84(__int128 *a1, __int128 *a2, uint64_t (**a3)(__int128 *, __int128 *), uint64_t a4, char a5, __n128 a6)
{
  __int128 *v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  char v22;
  BOOL v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

BOOL sub_1003D8F08(__int128 *a1, __int128 *a2, uint64_t (**a3)(__int128 *, __int128 *))
{
  uint64_t v6;
  _BOOL8 result;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 *v16;
  __int128 *v17;
  uint64_t v18;
  int v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v6 = ((char *)a2 - (char *)a1) >> 6;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v8 = a2 - 4;
      if (!(*a3)(a2 - 4, a1))
        return 1;
      v10 = a1[2];
      v9 = a1[3];
      v12 = *a1;
      v11 = a1[1];
      v13 = *(a2 - 1);
      v15 = *v8;
      v14 = *(a2 - 3);
      a1[2] = *(a2 - 2);
      a1[3] = v13;
      *a1 = v15;
      a1[1] = v14;
      *v8 = v12;
      *(a2 - 3) = v11;
      result = 1;
      *(a2 - 2) = v10;
      *(a2 - 1) = v9;
      return result;
    case 3:
      sub_10014AE1C(a1, a1 + 4, a2 - 4, a3);
      return 1;
    case 4:
      sub_10014B408((uint64_t)a1, a1 + 4, a1 + 8, a2 - 4, a3);
      return 1;
    case 5:
      sub_10014B4F0((uint64_t)a1, a1 + 4, a1 + 8, a1 + 12, a2 - 4, a3);
      return 1;
    default:
      v16 = a1 + 8;
      sub_10014AE1C(a1, a1 + 4, a1 + 8, a3);
      v17 = a1 + 12;
      if (a1 + 12 == a2)
        return 1;
      v18 = 0;
      v19 = 0;
      break;
  }
  while (1)
  {
    if ((*a3)(v17, v16))
    {
      v20 = v17[1];
      v29 = *v17;
      v30 = v20;
      v21 = v17[3];
      v31 = v17[2];
      v32 = v21;
      v22 = v18;
      while (1)
      {
        v23 = (__int128 *)((char *)a1 + v22);
        v24 = *(__int128 *)((char *)a1 + v22 + 144);
        v23[12] = *(__int128 *)((char *)a1 + v22 + 128);
        v23[13] = v24;
        v25 = *(__int128 *)((char *)a1 + v22 + 176);
        v23[14] = *(__int128 *)((char *)a1 + v22 + 160);
        v23[15] = v25;
        if (v22 == -128)
          break;
        v22 -= 64;
        if (((*a3)(&v29, v23 + 4) & 1) == 0)
        {
          v26 = (__int128 *)((char *)a1 + v22 + 192);
          goto LABEL_12;
        }
      }
      v26 = a1;
LABEL_12:
      v27 = v30;
      *v26 = v29;
      v26[1] = v27;
      v28 = v32;
      v26[2] = v31;
      v26[3] = v28;
      if (++v19 == 8)
        return v17 + 4 == a2;
    }
    v16 = v17;
    v18 += 64;
    v17 += 4;
    if (v17 == a2)
      return 1;
  }
}

void sub_1003D90EC(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD **)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - (_BYTE *)v7) >> 4) >= a2)
  {
    if (a2)
    {
      v13 = &v7[6 * a2];
      do
      {
        *v7 = 0;
        v7[1] = 0;
        *((_OWORD *)v7 + 1) = xmmword_100EEFC70;
        *((_OWORD *)v7 + 2) = unk_100EEFC80;
        v7 += 6;
      }
      while (v7 != v13);
      v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (_BYTE *)*a1) >> 4);
    v9 = v8 + a2;
    if (v8 + a2 > 0x555555555555555)
      sub_100007810();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (_BYTE *)*a1) >> 4);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x2AAAAAAAAAAAAAALL)
      v11 = 0x555555555555555;
    else
      v11 = v9;
    if (v11)
      v12 = (char *)sub_100121D50(v4, v11);
    else
      v12 = 0;
    v14 = &v12[48 * v8];
    v15 = &v14[48 * a2];
    v16 = v14;
    do
    {
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      *((_OWORD *)v16 + 1) = xmmword_100EEFC70;
      *((_OWORD *)v16 + 2) = unk_100EEFC80;
      v16 += 48;
    }
    while (v16 != v15);
    v17 = &v12[48 * v11];
    v19 = (char *)*a1;
    v18 = (char *)a1[1];
    if (v18 != *a1)
    {
      do
      {
        v20 = *((_OWORD *)v18 - 3);
        v21 = *((_OWORD *)v18 - 1);
        *((_OWORD *)v14 - 2) = *((_OWORD *)v18 - 2);
        *((_OWORD *)v14 - 1) = v21;
        *((_OWORD *)v14 - 3) = v20;
        v14 -= 48;
        v18 -= 48;
      }
      while (v18 != v19);
      v18 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v15;
    a1[2] = v17;
    if (v18)
      operator delete(v18);
  }
}

void sub_1003D925C(uint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  size_t v13;
  size_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      v13 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL)
      sub_100007810();
    v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    v19 = v4;
    if (v11)
      v12 = (char *)sub_100045008(v4, v11);
    else
      v12 = 0;
    v15 = v12;
    v16 = &v12[24 * v8];
    v18 = &v12[24 * v11];
    v14 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v16, v14);
    v17 = &v16[v14];
    sub_100121D94(a1, &v15);
    sub_100121F20((uint64_t)&v15);
  }
}

void sub_1003D93AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100121F20((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003D9600(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003D9630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003D98F8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addToken:isForTemporaryRelinquish:", *(_QWORD *)(a1 + 40), 0);
}

void sub_1003D9AD4()
{
  id v0;

  v0 = (id)objc_claimAutoreleasedReturnValue(+[CRLTraceableResourceManager sharedManager](CRLTraceableResourceManager, "sharedManager"));
  objc_msgSend(v0, "logSerializationAsError");

}

void sub_1003D9B08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003D9B38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003D9B68(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "didAcquire");
}

void sub_1003D9D74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003D9DA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003D9DD4(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  CKRecordID v20;
  Swift::String v21;
  uint64_t v23;
  void *v24;
  uint8_t buf[4];
  unsigned int v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  int v32;
  __int16 v33;
  uint64_t v34;
  __int16 v35;
  void *v36;

  objc_msgSend(*(id *)(a1 + 32), "setRelinquishCallStackIfNeeded:relinquishTime:", *(_QWORD *)(a1 + 40), *(double *)(a1 + 56));
  if ((objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 8), "containsObject:", *(_QWORD *)(a1 + 32)) & 1) == 0)
  {
    sub_1003D9AD4();
    v2 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101259700);
    v3 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v4 = *(_QWORD *)(a1 + 40);
      v6 = v3;
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[CRLTraceableResourceToken callStackDescriptionWithAction:callStackSymbols:index:](CRLTraceableResourceToken, "callStackDescriptionWithAction:callStackSymbols:index:", CFSTR("Relinquish"), v4, 0));
      *(_DWORD *)buf = 67110402;
      v26 = v2;
      v27 = 2082;
      v28 = "-[CRLTraceableResource didRelinquishResourceWithToken:]_block_invoke";
      v29 = 2082;
      v30 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLTraceableResource.m";
      v31 = 1024;
      v32 = 173;
      v33 = 2114;
      v34 = v5;
      v35 = 2114;
      v36 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Token has already been relinquished: %{public}@\nSecond attempt to relinquish:\n%{public}@", buf, 0x36u);

    }
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101259720);
    v8 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v8);
    v23 = *(_QWORD *)(a1 + 32);
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[CRLTraceableResourceToken callStackDescriptionWithAction:callStackSymbols:index:](CRLTraceableResourceToken, "callStackDescriptionWithAction:callStackSymbols:index:", CFSTR("Relinquish"), *(_QWORD *)(a1 + 40), 0));
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Token has already been relinquished: %{public}@\nSecond attempt to relinquish:\n%{public}@", v9, v10, v11, v12, v13, v14, v15, (uint64_t)"-[CRLTraceableResource didRelinquishResourceWithToken:]_block_invoke");

    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLTraceableResource didRelinquishResourceWithToken:]_block_invoke"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLTraceableResource.m"));
    v18 = *(_QWORD *)(a1 + 32);
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[CRLTraceableResourceToken callStackDescriptionWithAction:callStackSymbols:index:](CRLTraceableResourceToken, "callStackDescriptionWithAction:callStackSymbols:index:", CFSTR("Relinquish"), *(_QWORD *)(a1 + 40), 0));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v16, v17, 173, 1, "Token has already been relinquished: %{public}@\nSecond attempt to relinquish:\n%{public}@", v18, v19, 173, v23, v24);

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
    abort();
  }
  return _objc_msgSend(*(id *)(a1 + 48), "removeToken:isForTemporaryRelinquish:", *(_QWORD *)(a1 + 32), 0);
}

void sub_1003DA09C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DA0CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DA4E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003DA4FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DA52C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DA55C(uint64_t a1)
{
  dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 24));
}

void sub_1003DA568(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DA598(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003DA5C8(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "removeToken:isForTemporaryRelinquish:", a2, 1);
}

void sub_1003DA5D8(uint64_t a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  CKRecordID v20;
  Swift::String v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v1 + 24))
  {
    sub_1003D9AD4();
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012597E8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E2DC94();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101259808);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v10);
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Completion handler was already called.", v11, v12, v13, v14, v15, v16, v17, (uint64_t)"-[CRLTraceableResource temporarilyRelinquishForToken:usingBlock:]_block_invoke");
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLTraceableResource temporarilyRelinquishForToken:usingBlock:]_block_invoke"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLTraceableResource.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v18, v19, 201, 1, "Completion handler was already called.");

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
    abort();
  }
  *(_BYTE *)(v1 + 24) = 1;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v23 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(a1 + 40), "addToken:isForTemporaryRelinquish:", *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i), 1);
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v5);
  }

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 8), "firstObject"));
  v9 = v8;
  if (v8)
    objc_msgSend(*(id *)(a1 + 40), "scheduleRelinquishTimeoutForToken:timeout:isForTemporaryRelinquish:", v8, objc_msgSend(v8, "timeout"), 1);
  objc_msgSend(*(id *)(a1 + 48), "didCallCompletionHandler");
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 40) + 24));

}

void sub_1003DA868(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DA898(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DAB1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DAB4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DAC84(uint64_t a1)
{
  id *v2;
  id *v3;
  id v4;
  id v5;
  id v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  id v26;
  __int16 v27;
  void *v28;

  v2 = (id *)(a1 + 32);
  v3 = (id *)(a1 + 40);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
  v4 = *v3;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)*v2 + 1), "firstObject"));

  if (v4 == v5)
  {
    v6 = *(id *)(a1 + 40);
    v7 = (char *)objc_msgSend(*(id *)(a1 + 40), "timeout") - *(_QWORD *)(a1 + 48);
    if ((objc_msgSend(v6, "isTimeoutPaused") & 1) != 0 || v7)
    {
      if (objc_msgSend(v6, "isTimeoutPaused"))
        v7 = (char *)objc_msgSend(v6, "timeout");
      objc_msgSend(*(id *)(a1 + 32), "scheduleRelinquishTimeoutForToken:timeout:isForTemporaryRelinquish:", *(_QWORD *)(a1 + 40), v7, *(unsigned __int8 *)(a1 + 56));
    }
    else if (objc_msgSend(*v2, "printTimeoutAsError"))
    {
      if (qword_10147E368 != -1)
        dispatch_once(&qword_10147E368, &stru_101259890);
      v8 = off_1013D9068;
      if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
        sub_100E2DD94(v2, v8, v2 + 1);
      objc_msgSend(*v2, "p_logErrorTokenSerializationDescriptionFromQueueWithPrefix:", &stru_1012A72B0);
    }
    else
    {
      if (qword_10147E3A8 != -1)
        dispatch_once(&qword_10147E3A8, &stru_1012598B0);
      v9 = off_1013D90A8;
      if (os_log_type_enabled((os_log_t)off_1013D90A8, OS_LOG_TYPE_DEFAULT))
      {
        v10 = *v2;
        v11 = v9;
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "logContext"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "publicString"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "logContext"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "privateString"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "name"));
        v17 = objc_msgSend(*v3, "timeout");
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "intent"));
        v19 = 138544386;
        v20 = v13;
        v21 = 2112;
        v22 = v15;
        v23 = 2114;
        v24 = v16;
        v25 = 2048;
        v26 = v17;
        v27 = 2114;
        v28 = v18;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}@ %@ %{public}@ is taking more than %lu seconds to relinquish resource with '%{public}@' intent.", (uint8_t *)&v19, 0x34u);

      }
      objc_msgSend(*v2, "p_logDebugTokenSerializationDescriptionFromQueue");
    }

  }
}

void sub_1003DAF44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DAF74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTraceableResourceCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D90A8;
  off_1013D90A8 = v2;

}

uint64_t sub_1003DB058(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1003DB068(uint64_t a1)
{

}

void sub_1003DB070(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_tokenSerializationDescriptionFromQueue"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1003DB130(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_logErrorTokenSerializationDescriptionFromQueueWithPrefix:", *(_QWORD *)(a1 + 40));
}

void sub_1003DB91C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DB94C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DB97C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DB9AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DB9DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DBA0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DC088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DC0B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DC0E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DC118(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DC148(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DC178(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DC598(id a1)
{
  CRLTraceableResourceManager *v1;
  void *v2;

  v1 = objc_alloc_init(CRLTraceableResourceManager);
  v2 = (void *)qword_1014157C0;
  qword_1014157C0 = (uint64_t)v1;

}

void sub_1003DC6FC(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "addObject:", WeakRetained);
    WeakRetained = v3;
  }

}

void sub_1003DC7FC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "allObjects"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1003DCA08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DCA38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1003DCEA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DCED4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD2D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD300(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD330(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD360(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD558(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD588(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD760(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLTraceableResourceCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D90A8;
  off_1013D90A8 = v2;

}

void sub_1003DD964(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DD994(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DDB64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DDB94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003DE0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "appendString:", a2);
  if (a3)
    return objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR(", "));
  return result;
}

void sub_1003DE688(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DE6B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DE6F4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_1003DE7D8(uint64_t a1)
{
  return CRLAccessibilityPostLayoutChangedNotification(*(void **)(a1 + 32));
}

void sub_1003DF2BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DF2EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DF31C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DF34C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DF37C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DF3AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DF544(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DF574(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DFCE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003DFD18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E0368(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[14];
  _QWORD v7[14];

  v6[0] = CFSTR("CRLSnapToGrid");
  v6[1] = CFSTR("CRLDisplayEdgeGuides");
  v7[0] = &__kCFBooleanFalse;
  v7[1] = &__kCFBooleanFalse;
  v6[2] = CFSTR("CRLDisplayCenterGuides");
  v6[3] = CFSTR("CRLDisplaySpacingGuides");
  v7[2] = &__kCFBooleanTrue;
  v7[3] = &__kCFBooleanTrue;
  v6[4] = CFSTR("CRLDisplaySizingGuides");
  v6[5] = CFSTR("CRLUseHapticFeedbackWhenSnapping");
  v7[4] = &__kCFBooleanTrue;
  v7[5] = &__kCFBooleanTrue;
  v6[6] = CFSTR("CRLEncryptSharePlayData");
  v6[7] = CFSTR("CRLDeleteBoardCleanupTolerance");
  v7[6] = &__kCFBooleanTrue;
  v7[7] = &off_1012CC850;
  v6[8] = CFSTR("CRLDeletedBoardTTL");
  v6[9] = CFSTR("CRLSelectAndScrollWithApplePencil");
  v7[8] = &off_1012CC868;
  v7[9] = &__kCFBooleanFalse;
  v6[10] = CFSTR("CRLMathRecognitionMode");
  v6[11] = CFSTR("enableOSSignpost");
  v7[10] = &off_1012CC880;
  v7[11] = &__kCFBooleanFalse;
  v7[12] = &__kCFBooleanTrue;
  v6[12] = CFSTR("CRLMultiSelectionShouldDisplaySingleBoundsUserDefault");
  v6[13] = CFSTR("CRLRulerUnitTypeUserDefault");
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
  if (objc_msgSend(v1, "usesMetricSystem"))
    v2 = 1;
  else
    v2 = 2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v2));
  v7[13] = v3;
  v4 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v6, 14));
  v5 = (void *)qword_1014157D8;
  qword_1014157D8 = v4;

}

id sub_1003E073C(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(v1, "size");
  return objc_msgSend(v1, "drawInRect:blendMode:alpha:", 1, sub_10005FDDC());
}

void sub_1003E096C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "setFill");
  objc_msgSend(v3, "fillRect:", sub_10005FDDC());

}

void sub_1003E0C34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E0C64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E13C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E13F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E1F98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E1FC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E2E24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E2E54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E35F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E3628(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E4190(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E41C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003E41F0(uint64_t a1, double a2, double a3, double a4, double a5, long double a6)
{
  id result;
  void *v12;
  double v13;
  long double v14;
  double v15;
  long double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  result = objc_msgSend(*(id *)(a1 + 32), "width");
  if (*(_BYTE *)(a1 + 64))
  {
    v12 = *(void **)(a1 + 40);
    if (v12)
    {
      objc_msgSend(v12, "hitInfo");
      v13 = *(double *)&v21;
    }
    else
    {
      v24 = 0;
      v22 = 0u;
      v23 = 0u;
      v21 = 0u;
      v13 = 0.0;
    }
    v14 = sub_1000603B8(a3, a4, v13);
    v16 = v15;
    if (a5 < 0.0)
    {
      a5 = sub_1000603B8(CGPointZero.x, CGPointZero.y, a5);
      a6 = v17;
    }
    if (v14 < 0.0)
    {
      v14 = sub_1000603B8(CGPointZero.x, CGPointZero.y, v14);
      v16 = v18;
    }
    v19 = sub_1000618B4(a5, a6);
    v20 = sub_1000618B4(v14, v16);
    sub_100062188(v19, v20);
    return objc_msgSend(*(id *)(a1 + 32), "width", v21, v22, v23, v24);
  }
  return result;
}

void sub_1003E4388(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E43B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E43E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E4418(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5A64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5A94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5AC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5AF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5B24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5B54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5B84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E5BB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E6298(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E62C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E62F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E6328(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E6F84(uint64_t a1)
{
  id v2;

  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 9))
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", 0.1));
    objc_msgSend(*(id *)(a1 + 32), "setTimer:", v2);

  }
}

void sub_1003E71DC(uint64_t a1)
{
  id v2;

  if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 10))
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", 0.1));
    objc_msgSend(*(id *)(a1 + 32), "setTimer:", v2);

  }
}

void sub_1003E7404(double a1, double a2, double a3, long double a4)
{
  fmod(a3 - a2, a4);
}

uint64_t sub_1003E7CBC(uint64_t a1, uint64_t a2)
{
  return objc_opt_isKindOfClass(a2, *(_QWORD *)(a1 + 32)) & 1;
}

int64_t sub_1003E7DD8(id a1, _TtC8Freeform12CRLBoardItem *a2, _TtC8Freeform12CRLBoardItem *a3)
{
  return -[CRLBoardItem compareUsingUUIDTo:](a2, "compareUsingUUIDTo:", a3);
}

void sub_1003E8428(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E8458(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E86CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E86FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E8898(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E88C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E8DF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E8E20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E8E50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003E8E80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1003E8EF0(id a1, CRLCanvasLayout *a2, BOOL *a3)
{
  CRLCanvasLayout *v3;
  unsigned __int8 v4;

  v3 = a2;
  if (-[CRLCanvasAbstractLayout supportsRotation](v3, "supportsRotation"))
    v4 = -[CRLCanvasLayout canInspectGeometry](v3, "canInspectGeometry");
  else
    v4 = 0;

  return v4;
}

id sub_1003E966C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "launchEditAccessibilityDescriptionWithBoardItem:", *(_QWORD *)(a1 + 40));
}

void sub_1003EB270(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_1003EB288(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "elementAtIndex:", *(_QWORD *)(a1 + 48));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1003EB354(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_1003EB36C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "elementAtIndex:associatedPoints:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1003EB698(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EB6C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EB860(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EB890(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EBACC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EBAFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EC1A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EC1D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ECEAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ECEDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ED428(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ED458(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ED700(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003ED730(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EDD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1003EDD38(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1003EDD48(uint64_t a1)
{

}

void sub_1003EDD50(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1003EEA08(id a1)
{
  off_1014157F8 = sub_10009BEAC(0, CFSTR("CoreAnalytics"), "AnalyticsSendEvent", &qword_1014157F0);
  off_101415800 = sub_10009BEAC(0, CFSTR("CoreAnalytics"), "AnalyticsSendEventLazy", &qword_1014157F0);
}

void sub_1003EEED8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EEF08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1003EF034(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1003EFBC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003EFBF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F0454(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F0484(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F04B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F04E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1003F15C0(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;
  unsigned __int8 *v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;

  if (a2 < 4)
  {
    v2 = 0;
    v5 = a2;
  }
  else
  {
    v2 = 0;
    v3 = a2 + 4;
    v4 = (unsigned __int8 *)(a1 + 3);
    v5 = a2;
    do
    {
      v6 = *(v4 - 3) + 16 * v2;
      v7 = *(v4 - 2) + 16 * (v6 ^ (16 * (v6 >> 28)));
      v8 = *(v4 - 1) + 16 * (v7 ^ (16 * (v7 >> 28)));
      v9 = *v4;
      v4 += 4;
      v10 = v9 + 16 * (v8 ^ (16 * (v8 >> 28)));
      v2 = (v10 ^ ((v10 & 0xF0000000) >> 24)) & ~(v10 & 0xF0000000);
      v3 -= 4;
      v5 -= 4;
    }
    while (v3 > 7);
  }
  v11 = a1 + a2;
  switch(v5)
  {
    case 1:
      goto LABEL_11;
    case 2:
LABEL_10:
      v13 = *(unsigned __int8 *)(v11 - 2) + 16 * v2;
      v2 = (v13 ^ ((v13 & 0xF0000000) >> 24)) & ~(v13 & 0xF0000000);
LABEL_11:
      v14 = *(unsigned __int8 *)(v11 - 1) + 16 * v2;
      return (v14 ^ ((v14 & 0xF0000000) >> 24)) & ~(v14 & 0xF0000000);
    case 3:
      v12 = *(unsigned __int8 *)(v11 - 3) + 16 * v2;
      v2 = (v12 ^ ((v12 & 0xF0000000) >> 24)) & ~(v12 & 0xF0000000);
      goto LABEL_10;
  }
  return v2;
}

uint64_t sub_1003F169C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v5;
  unsigned int v6;
  BOOL v7;
  _BOOL8 v8;

  if (*(_DWORD *)a1 < *(_DWORD *)a2)
    return -1;
  if (*(_DWORD *)a1 > *(_DWORD *)a2)
    return 1;
  result = sub_1003A72E8((const unsigned __int8 *)(a1 + 4), (const unsigned __int8 *)(a2 + 4));
  if (result != -1 && result != 1)
  {
    v5 = *(_DWORD *)(a1 + 20);
    v6 = *(_DWORD *)(a2 + 20);
    v7 = v5 >= v6;
    v8 = v5 > v6;
    if (v7)
      return v8;
    else
      return -1;
  }
  return result;
}

void sub_1003F17B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F18BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003F1AC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003F1B28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F1E28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F1E70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F1EA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F2144(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F218C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F21BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F2404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F244C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F247C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F26D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F2A84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1003F2CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,void *a33,void *a34)
{
  void *v34;
  void *v35;
  uint64_t v36;

  _Unwind_Resume(a1);
}

void sub_1003F2D7C()
{
  JUMPOUT(0x1003F2D64);
}

void sub_1003F2D84()
{
  JUMPOUT(0x1003F2D6CLL);
}

void sub_1003F2E24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F32AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F32E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3318(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3348(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3378(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F35C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F35F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3620(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F3870(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F38A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3AF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F3B20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3B50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F3D34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F3D80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F405C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F40C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F40F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F430C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003F4358(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F4388(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F43FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003F45EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003F4638(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F4668(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F46D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1003F48CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1003F4918(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F4948(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F49F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F4AA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1003F4C20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1003F4CE0(uint64_t result, uint64_t a2)
{
  int v2;

  *(_DWORD *)(a2 + 30) = v2;
  *(_WORD *)(a2 + 34) = 2112;
  *(_QWORD *)(a2 + 36) = result;
  return result;
}

void sub_1003F4CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 20) = v2;
  *(_WORD *)(a2 + 28) = 1024;
}

uint64_t sub_1003F4F08(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet decimalDigitCharacterSet](NSCharacterSet, "decimalDigitCharacterSet"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "componentsSeparatedByCharactersInSet:", v2));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "firstObject"));
  if (objc_msgSend(v4, "length"))
  {
    if ((objc_msgSend(v4, "isEqualToString:", CFSTR("iPad")) & 1) != 0)
    {
      v5 = 1;
    }
    else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("iPhone")) & 1) != 0)
    {
      v5 = 2;
    }
    else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("iPod")) & 1) != 0)
    {
      v5 = 3;
    }
    else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("iMac")) & 1) != 0)
    {
      v5 = 4;
    }
    else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("MacBook")) & 1) != 0)
    {
      v5 = 5;
    }
    else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("MacBookAir")) & 1) != 0)
    {
      v5 = 6;
    }
    else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("MacBookPro")) & 1) != 0)
    {
      v5 = 7;
    }
    else if ((objc_msgSend(v4, "isEqualToString:", CFSTR("Macmini")) & 1) != 0)
    {
      v5 = 8;
    }
    else if (objc_msgSend(v4, "isEqualToString:", CFSTR("MacPro")))
    {
      v5 = 9;
    }
    else
    {
      v5 = 0;
    }
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

id sub_1003F57A4(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "p_isMetalCapable");
  byte_101415810 = (char)result;
  return result;
}

void sub_1003F5804(id a1)
{
  CRLCapabilities *v1;
  void *v2;

  v1 = objc_alloc_init(CRLCapabilities);
  v2 = (void *)qword_101415820;
  qword_101415820 = (uint64_t)v1;

}

void sub_1003F5A2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F5A5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F5C2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F5C5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F5DE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F5E18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F6014(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F6044(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F6074(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSCache);
  v2 = (void *)qword_101415828;
  qword_101415828 = (uint64_t)v1;

}

uint64_t sub_1003F6184(uint64_t result)
{
  byte_101415838 = (*(_QWORD *)(*(_QWORD *)(result + 32) + 24) > 0x1AuLL) | (0xFFF9FFu >> *(_QWORD *)(*(_QWORD *)(result + 32) + 24)) & 1;
  return result;
}

uint64_t sub_1003F61D4(CGImageSource *a1)
{
  CFDictionaryRef v1;
  void *v2;
  unsigned int v3;
  uint64_t v4;

  v1 = CGImageSourceCopyPropertiesAtIndex(a1, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary objectForKey:](v1, "objectForKey:", kCGImagePropertyOrientation));
  v3 = objc_msgSend(v2, "intValue");

  v4 = 0;
  if (v3 - 1 <= 7)
    v4 = qword_100EEFEA8[v3 - 1];

  return v4;
}

uint64_t sub_1003F624C(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
    return 1;
  else
    return dword_100EEFF08[a1 - 1];
}

CGAffineTransform *sub_1003F6270@<X0>(CGAffineTransform *result@<X0>, int a2@<W1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  CGFloat v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  CGFloat v25;
  CGFloat v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  double MidX;
  double MidY;
  __int128 v35;
  __int128 v36;
  CGAffineTransform v37;
  CGAffineTransform t1;
  CGAffineTransform v39;
  CGAffineTransform v40;
  CGRect v41;
  CGRect v42;

  if (!result)
  {
    v20 = *(_OWORD *)&CGAffineTransformIdentity.c;
    *(_OWORD *)a3 = *(_OWORD *)&CGAffineTransformIdentity.a;
    *(_OWORD *)(a3 + 16) = v20;
    v21 = *(_OWORD *)&CGAffineTransformIdentity.tx;
LABEL_20:
    *(_OWORD *)(a3 + 32) = v21;
    return result;
  }
  v13 = dword_100EEFEE8[(_QWORD)result];
  v14 = *(_OWORD *)&CGAffineTransformIdentity.a;
  v15 = *(_OWORD *)&CGAffineTransformIdentity.c;
  *(_OWORD *)a3 = *(_OWORD *)&CGAffineTransformIdentity.a;
  *(_OWORD *)(a3 + 16) = v15;
  v16 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  *(_OWORD *)(a3 + 32) = v16;
  v17 = 0xCCuLL >> (char)result;
  if (((0xCCuLL >> (char)result) & 1) != 0)
  {
    *(_OWORD *)&v40.a = v14;
    *(_OWORD *)&v40.c = v15;
    *(_OWORD *)&v40.tx = v16;
    result = CGAffineTransformScale((CGAffineTransform *)a3, &v40, a6 / a7, a7 / a6);
  }
  switch(v13)
  {
    case 2:
      goto LABEL_8;
    case 3:
      v18 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)&v39.a = *(_OWORD *)a3;
      *(_OWORD *)&v39.c = v18;
      *(_OWORD *)&v39.tx = *(_OWORD *)(a3 + 32);
      v19 = 3.14159265;
      goto LABEL_14;
    case 4:
      goto LABEL_11;
    case 5:
      v22 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)&v39.a = *(_OWORD *)a3;
      *(_OWORD *)&v39.c = v22;
      *(_OWORD *)&v39.tx = *(_OWORD *)(a3 + 32);
      CGAffineTransformRotate(&v40, &v39, -1.57079633);
      v23 = *(_OWORD *)&v40.c;
      *(_OWORD *)a3 = *(_OWORD *)&v40.a;
      *(_OWORD *)(a3 + 16) = v23;
      *(_OWORD *)(a3 + 32) = *(_OWORD *)&v40.tx;
LABEL_8:
      v24 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)&v39.a = *(_OWORD *)a3;
      *(_OWORD *)&v39.c = v24;
      *(_OWORD *)&v39.tx = *(_OWORD *)(a3 + 32);
      v25 = -1.0;
      v26 = 1.0;
      goto LABEL_12;
    case 6:
      v27 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)&v39.a = *(_OWORD *)a3;
      *(_OWORD *)&v39.c = v27;
      *(_OWORD *)&v39.tx = *(_OWORD *)(a3 + 32);
      v19 = 1.57079633;
      goto LABEL_14;
    case 7:
      v28 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)&v39.a = *(_OWORD *)a3;
      *(_OWORD *)&v39.c = v28;
      *(_OWORD *)&v39.tx = *(_OWORD *)(a3 + 32);
      CGAffineTransformRotate(&v40, &v39, -1.57079633);
      v29 = *(_OWORD *)&v40.c;
      *(_OWORD *)a3 = *(_OWORD *)&v40.a;
      *(_OWORD *)(a3 + 16) = v29;
      *(_OWORD *)(a3 + 32) = *(_OWORD *)&v40.tx;
LABEL_11:
      v30 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)&v39.a = *(_OWORD *)a3;
      *(_OWORD *)&v39.c = v30;
      *(_OWORD *)&v39.tx = *(_OWORD *)(a3 + 32);
      v25 = 1.0;
      v26 = -1.0;
LABEL_12:
      result = CGAffineTransformScale(&v40, &v39, v25, v26);
      goto LABEL_15;
    case 8:
      v31 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)&v39.a = *(_OWORD *)a3;
      *(_OWORD *)&v39.c = v31;
      *(_OWORD *)&v39.tx = *(_OWORD *)(a3 + 32);
      v19 = -1.57079633;
LABEL_14:
      result = CGAffineTransformRotate(&v40, &v39, v19);
LABEL_15:
      v32 = *(_OWORD *)&v40.c;
      *(_OWORD *)a3 = *(_OWORD *)&v40.a;
      *(_OWORD *)(a3 + 16) = v32;
      *(_OWORD *)(a3 + 32) = *(_OWORD *)&v40.tx;
      break;
    default:
      break;
  }
  if (a2)
  {
    v41.origin.x = a4;
    v41.origin.y = a5;
    v41.size.width = a6;
    v41.size.height = a7;
    MidX = CGRectGetMidX(v41);
    v42.origin.x = a4;
    v42.origin.y = a5;
    v42.size.width = a6;
    v42.size.height = a7;
    MidY = CGRectGetMidY(v42);
    memset(&v40, 0, sizeof(v40));
    CGAffineTransformMakeTranslation(&v40, MidX, MidY);
    if ((v17 & 1) != 0)
    {
      t1 = v40;
      CGAffineTransformRotate(&v39, &t1, 3.14159265);
      v40 = v39;
    }
    v35 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)&t1.a = *(_OWORD *)a3;
    *(_OWORD *)&t1.c = v35;
    *(_OWORD *)&t1.tx = *(_OWORD *)(a3 + 32);
    v37 = v40;
    CGAffineTransformConcat(&v39, &t1, &v37);
    v40 = v39;
    t1 = v39;
    result = CGAffineTransformTranslate(&v39, &t1, -MidX, -MidY);
    v36 = *(_OWORD *)&v39.c;
    v21 = *(_OWORD *)&v39.tx;
    v40 = v39;
    *(_OWORD *)a3 = *(_OWORD *)&v39.a;
    *(_OWORD *)(a3 + 16) = v36;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_1003F6578(unint64_t a1)
{
  return (a1 >> 1) & 1;
}

void sub_1003F71F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F7220(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F7250(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v2 = (void *)qword_101415848;
  qword_101415848 = v1;

}

void sub_1003F75A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F75D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F78B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F78E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F7BC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F7BF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F7ED8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F7F08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F81E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F8218(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F84F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F8528(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F880C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F883C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F8B20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F8B50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F8E34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F8E64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9148(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9178(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9458(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9488(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9768(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9798(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9AF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9B20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9E00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003F9E30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FA110(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FA140(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1003FA184(CGImage *a1)
{
  CGContext *v2;
  _OWORD data[4];
  CGRect v5;

  if (!a1)
    return 1;
  memset(data, 0, sizeof(data));
  v2 = CGBitmapContextCreateWithData(data, 1uLL, 1uLL, 8uLL, 1uLL, 0, 7u, 0, 0);
  v5.origin.x = 0.0;
  v5.origin.y = 0.0;
  v5.size.width = 1.0;
  v5.size.height = 1.0;
  CGContextDrawImage(v2, v5, a1);
  CFRelease(v2);
  return LOBYTE(data[0]) == 0;
}

CGImageRef sub_1003FA390(uint64_t a1, CGImageRef image, double a3)
{
  double Width;
  double Height;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGContext *v20;
  CGContext *v21;
  uint64_t i;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGImageRef v31;
  CGImage *v32;
  double MaxY;
  CGFloat MinY;
  CGImageRef v35;
  _BYTE v37[288];
  _BYTE v38[288];
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  Width = (double)CGImageGetWidth(image);
  Height = (double)CGImageGetHeight(image);
  v8 = fabs(*(double *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "scale");
  v10 = ceil(v8 * v9 * a3);
  v11 = fabs(*(double *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "scale");
  v13 = ceil(v11 * v12 * a3);
  v14 = *(double *)(a1 + 64);
  if (*(double *)(a1 + 56) * a3 >= Height)
    v15 = Height;
  else
    v15 = *(double *)(a1 + 56) * a3;
  if (v14 * a3 >= Height - v15)
    v16 = Height - v15;
  else
    v16 = v14 * a3;
  v17 = *(double *)(a1 + 80);
  if (*(double *)(a1 + 72) * a3 >= Width)
    v18 = Width;
  else
    v18 = *(double *)(a1 + 72) * a3;
  if (v17 * a3 >= Width - v18)
    v19 = Width - v18;
  else
    v19 = v17 * a3;
  sub_1003FA68C((uint64_t)v38, 0.0, 0.0, Width, Height, v18, v19, v15, v16);
  sub_1003FA68C((uint64_t)v37, 0.0, 0.0, v10, v13, v18, v19, v15, v16);
  v20 = sub_100012758(1, v10, v13, 1.0);
  if (!v20)
    return 0;
  v21 = v20;
  for (i = 0; i != 288; i += 32)
  {
    v23 = *(double *)&v38[i];
    v24 = *(double *)&v38[i + 8];
    v25 = *(double *)&v38[i + 16];
    v26 = *(double *)&v38[i + 24];
    v27 = *(double *)&v37[i];
    v28 = *(double *)&v37[i + 8];
    v29 = *(double *)&v37[i + 16];
    v30 = *(double *)&v37[i + 24];
    v39.origin.x = v23;
    v39.origin.y = v24;
    v39.size.width = v25;
    v39.size.height = v26;
    if (!CGRectIsEmpty(v39))
    {
      v40.origin.x = v23;
      v40.origin.y = v24;
      v40.size.width = v25;
      v40.size.height = v26;
      if (!CGRectIsNull(v40))
      {
        v41.origin.x = v27;
        v41.origin.y = v28;
        v41.size.width = v29;
        v41.size.height = v30;
        if (!CGRectIsEmpty(v41))
        {
          v42.origin.x = v27;
          v42.origin.y = v28;
          v42.size.width = v29;
          v42.size.height = v30;
          if (!CGRectIsNull(v42))
          {
            v43.origin.x = v23;
            v43.origin.y = v24;
            v43.size.width = v25;
            v43.size.height = v26;
            v31 = CGImageCreateWithImageInRect(image, v43);
            if (v31)
            {
              v32 = v31;
              CGContextSaveGState(v21);
              v44.origin.x = v27;
              v44.origin.y = v28;
              v44.size.width = v29;
              v44.size.height = v30;
              MaxY = CGRectGetMaxY(v44);
              v45.origin.x = v27;
              v45.origin.y = v28;
              v45.size.width = v29;
              v45.size.height = v30;
              MinY = CGRectGetMinY(v45);
              CGContextTranslateCTM(v21, 0.0, MaxY + MinY);
              CGContextScaleCTM(v21, 1.0, -1.0);
              v46.origin.x = v27;
              v46.origin.y = v28;
              v46.size.width = v29;
              v46.size.height = v30;
              CGContextDrawImage(v21, v46, v32);
              CGImageRelease(v32);
              CGContextRestoreGState(v21);
            }
          }
        }
      }
    }
  }
  v35 = CGBitmapContextCreateImage(v21);
  CGContextRelease(v21);
  return v35;
}

void sub_1003FA68C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CGSize size;
  CGPoint origin;
  CGRect remainder;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect slice;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  size = CGRectNull.size;
  origin = CGRectNull.origin;
  remainder.origin = origin;
  remainder.size = size;
  slice.origin = origin;
  slice.size = size;
  v28.origin = origin;
  v28.size = size;
  v29.origin = origin;
  v29.size = size;
  v24.origin = origin;
  v24.size = size;
  v25.origin = origin;
  v25.size = size;
  v26.origin = origin;
  v26.size = size;
  CGRectDivide(*(CGRect *)&a2, &slice, &remainder, a8, CGRectMinYEdge);
  CGRectDivide(remainder, &v29, &v28, a9, CGRectMaxYEdge);
  remainder.origin = origin;
  remainder.size = size;
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  CGRectDivide(v30, &v24, &remainder, a6, CGRectMinXEdge);
  CGRectDivide(remainder, &v26, &v25, a7, CGRectMaxXEdge);
  v17 = 0;
  v18 = a1 + 16;
  do
  {
    v19 = 0;
    v20 = v18;
    do
    {
      *(CGRect *)(v20 - 16) = CGRectIntersection(*(CGRect *)((char *)&slice + v19), *(&v24 + v17));
      v20 += 96;
      v19 += 32;
    }
    while (v19 != 96);
    ++v17;
    v18 += 32;
  }
  while (v17 != 3);
}

void sub_1003FABA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FABD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FAC68(uint64_t a1)
{
  id v2;
  id v3;
  double v4;
  id v5;
  uint64_t v6;
  void *v7;

  v2 = objc_alloc((Class)UIImage);
  v3 = objc_msgSend(*(id *)(a1 + 32), "CGImage");
  objc_msgSend(*(id *)(a1 + 32), "scale");
  v5 = objc_msgSend(v2, "initWithCGImage:scale:orientation:", v3, objc_msgSend(*(id *)(a1 + 32), "imageOrientation"), v4);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(v6 + 32);
  *(_QWORD *)(v6 + 32) = v5;

}

void sub_1003FAF28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FAF58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FB3DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FB40C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FB678(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FB6A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FB9D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FBA08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FC778(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FC7A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FCED0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FCF00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FDBC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1003FDBD8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1003FDBE8(uint64_t a1)
{

}

void sub_1003FDBF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mostSpecificSelectionOfClass:", *(_QWORD *)(a1 + 48)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_1003FDD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003FDD6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selectionPathWithAppendedSelection:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1003FDE28(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "enumerateSelectionsMostToLeastSpecificInPathUsingBlock:", *(_QWORD *)(a1 + 40));
}

id sub_1003FDEB4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "enumerateSelectionsLeastToMostSpecificInPathUsingBlock:", *(_QWORD *)(a1 + 40));
}

void sub_1003FE148(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FE178(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FFCEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1003FFD1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004005E0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v10;
  double v11;
  double v12;
  double v13;
  BOOL v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;

  v10 = a4;
  v11 = a3;
  v12 = a2;
  v13 = a1;
  v14 = a1 < a5;
  if (a1 != a5)
  {
    if (a1 >= a5)
      a1 = a5;
    if (!v14)
    {
      a2 = a6;
      a3 = a7;
    }
    v20 = a7;
    if (!v14)
      a4 = a8;
    v15 = a8;
    CGRectGetMaxX(*(CGRect *)&a1);
    a8 = v15;
    a7 = v20;
  }
  if (v12 != a6)
  {
    if (v12 >= a6)
      v16 = a8;
    else
      v16 = v10;
    if (v12 >= a6)
      v17 = a7;
    else
      v17 = v11;
    if (v12 >= a6)
      v18 = a6;
    else
      v18 = v12;
    if (v12 >= a6)
      v19 = a5;
    else
      v19 = v13;
    CGRectGetMaxY(*(CGRect *)(&v16 - 3));
  }
}

BOOL sub_100400A44(id *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  _BOOL8 v6;

  v3 = a2;
  if (objc_msgSend(a1[4], "distanceToSelectedSearchReference:", v3) == a1[6])
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "infoForSelectionPath"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "infoForSelectionPath"));
    v6 = v4 == v5;

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

uint64_t sub_100400B8C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char v16;

  v5 = a2;
  v6 = a3;
  v16 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  objc_opt_class(CRLCanvasInteractiveCanvasControllerAccessibility, v8);
  v10 = __CRLAccessibilityCastAsSafeCategory(v9, (uint64_t)v7, 1, &v16);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (v16)
    abort();
  v12 = (void *)v11;

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "crlaxRepForSearchReference:", v5));
  v14 = objc_msgSend(v13, "isSelected") ^ 1;

  return v14;
}

uint64_t sub_100400C4C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = objc_msgSend(v5, "distanceToSelectedSearchReference:", a2);
  v8 = objc_msgSend(*(id *)(a1 + 32), "distanceToSelectedSearchReference:", v6);

  if (v7 < v8)
    return -1;
  else
    return v7 > v8;
}

void sub_100400FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10040100C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10040101C(uint64_t a1)
{

}

void sub_100401024(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(objc_alloc((Class)objc_msgSend(*(id *)(a1 + 56), "crlaxTargetClass")), "initWithRep:knob:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100401654(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100401684(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004016B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004016E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100401790(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  id v5;
  _QWORD v6[5];
  id v7;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 32));
  ++*(_DWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)(v2 + 8) == *(_DWORD *)(v2 + 12))
  {
    dispatch_suspend(*(dispatch_object_t *)(v2 + 16));
    v2 = *(_QWORD *)(a1 + 32);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
  v3 = *(void **)(a1 + 40);
  v4 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 24);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100401848;
  v6[3] = &unk_10122C360;
  v5 = v3;
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v5;
  dispatch_async(v4, v6);

}

void sub_100401848(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 32));
  --*(_DWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)(v2 + 8) == *(_DWORD *)(v2 + 12) - 1)
  {
    dispatch_resume(*(dispatch_object_t *)(v2 + 16));
    v2 = *(_QWORD *)(a1 + 32);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
}

void sub_10040192C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  id v5;
  _QWORD v6[5];
  id v7;

  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 32));
  ++*(_DWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)(v2 + 8) == *(_DWORD *)(v2 + 12))
  {
    dispatch_suspend(*(dispatch_object_t *)(v2 + 16));
    v2 = *(_QWORD *)(a1 + 32);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
  v3 = *(void **)(a1 + 40);
  v4 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 24);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1004019E0;
  v6[3] = &unk_10122C360;
  v5 = v3;
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v5;
  dispatch_barrier_sync(v4, v6);

}

void sub_1004019E0(uint64_t a1)
{
  uint64_t v2;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(a1 + 32) + 32));
  --*(_DWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)(v2 + 8) == *(_DWORD *)(v2 + 12) - 1)
  {
    dispatch_resume(*(dispatch_object_t *)(v2 + 16));
    v2 = *(_QWORD *)(a1 + 32);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 32));
}

void sub_100402010(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402040(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402408(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402438(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402468(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402498(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004024C8(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 73) = 1;
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v1 = *(id *)(*(_QWORD *)(a1 + 32) + 49);
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v7;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v7 != v4)
          objc_enumerationMutation(v1);
        (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5) + 16))(*(_QWORD *)(*((_QWORD *)&v6 + 1) + 8 * (_QWORD)v5));
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
    }
    while (v3);
  }

}

void sub_100402C58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402C88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402CB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402CE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402D18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402D48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100402D78(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 65), "count")));
  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumberFormatter localizedStringFromNumber:numberStyle:](NSNumberFormatter, "localizedStringFromNumber:numberStyle:", v2, 1));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("%@ movies couldn’t be updated."), 0, 0));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v4, v6));

  objc_msgSend(*(id *)(a1 + 40), "presentErrors:withLocalizedDescription:completionHandler:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 65), v5, 0);
}

void sub_100403114(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100403144(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double sub_100404930(uint64_t *a1, int a2)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  int v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint8_t v14[24];

  v3 = *a1;
  v4 = a1[1] - *a1;
  if (v4 >= 0x3FFFFFFF9)
  {
    v8 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125B678);
    v9 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E3039C(v8, v9);
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125B698);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100E02830(v11, v14, v8, (os_log_t)v10);
    }

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGFloat _CRLPKVectorSafeGet(std::vector<CGFloat>, int)"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/PencilKit/CRLPKCalculusUtility.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 16, 0, "Out-of-bounds type assignment was clamped to max");

    v3 = *a1;
    v5 = 2147483646;
  }
  else
  {
    v5 = (v4 >> 3) - 1;
  }
  if (v5 >= a2)
    v5 = a2;
  return *(double *)(v3 + 8 * (v5 & ~(v5 >> 31)));
}

void sub_100404AF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100404B20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100404B50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100404B80(int a1, int a2, uint64_t a3)
{
  unsigned int v3;
  signed int v5;
  float v6;
  int v7;
  int v8;
  int v9;
  double v10;
  int v11;
  _QWORD *v12;
  double *v13;
  double v14;
  double *v15;
  double *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  double *v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  double *v26;
  double *v27;
  double *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  double *v34;
  uint64_t v35;
  int v36;
  _QWORD *v37;
  double *v38;
  double v39;
  double *v40;
  double *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  double *v47;
  uint64_t v48;

  v3 = a1 - 1;
  if (a1 >= 1)
  {
    if ((a2 & ~(a2 >> 31)) < v3)
      v3 = a2 & ~(a2 >> 31);
    v5 = (((_BYTE)a1 - (_BYTE)v3) & 1) + v3;
    v7 = a1 - v5;
    if (a1 >= v5)
      v8 = a1 - v5;
    else
      v8 = v7 + 1;
    v9 = v8 >> 1;
    v6 = 2.0 / (double)(v5 + a1);
    v10 = v6;
    if (v7 >= 2)
    {
      v11 = 0;
      v12 = (_QWORD *)(a3 + 16);
      v13 = *(double **)(a3 + 8);
      do
      {
        v14 = (double)v11 / (double)v9 * v10;
        if ((unint64_t)v13 >= *v12)
        {
          v16 = *(double **)a3;
          v17 = ((uint64_t)v13 - *(_QWORD *)a3) >> 3;
          v18 = v17 + 1;
          if ((unint64_t)(v17 + 1) >> 61)
LABEL_65:
            sub_100007810();
          v19 = *v12 - (_QWORD)v16;
          if (v19 >> 2 > v18)
            v18 = v19 >> 2;
          if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8)
            v20 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v20 = v18;
          if (v20)
          {
            v21 = (char *)sub_10002BA34(a3 + 16, v20);
            v16 = *(double **)a3;
            v13 = *(double **)(a3 + 8);
          }
          else
          {
            v21 = 0;
          }
          v22 = (double *)&v21[8 * v17];
          *v22 = v14;
          v15 = v22 + 1;
          while (v13 != v16)
          {
            v23 = *((_QWORD *)v13-- - 1);
            *((_QWORD *)v22-- - 1) = v23;
          }
          *(_QWORD *)a3 = v22;
          *(_QWORD *)(a3 + 8) = v15;
          *(_QWORD *)(a3 + 16) = &v21[8 * v20];
          if (v16)
            operator delete(v16);
        }
        else
        {
          *v13 = v14;
          v15 = v13 + 1;
        }
        *(_QWORD *)(a3 + 8) = v15;
        ++v11;
        v13 = v15;
      }
      while (v11 != v9);
    }
    if (v5)
    {
      v24 = 0;
      v25 = (_QWORD *)(a3 + 16);
      v26 = *(double **)(a3 + 8);
      do
      {
        if ((unint64_t)v26 >= *v25)
        {
          v28 = *(double **)a3;
          v29 = ((uint64_t)v26 - *(_QWORD *)a3) >> 3;
          v30 = v29 + 1;
          if ((unint64_t)(v29 + 1) >> 61)
            goto LABEL_65;
          v31 = *v25 - (_QWORD)v28;
          if (v31 >> 2 > v30)
            v30 = v31 >> 2;
          if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8)
            v32 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v32 = v30;
          if (v32)
          {
            v33 = (char *)sub_10002BA34(a3 + 16, v32);
            v28 = *(double **)a3;
            v26 = *(double **)(a3 + 8);
          }
          else
          {
            v33 = 0;
          }
          v34 = (double *)&v33[8 * v29];
          *v34 = v10;
          v27 = v34 + 1;
          while (v26 != v28)
          {
            v35 = *((_QWORD *)v26-- - 1);
            *((_QWORD *)v34-- - 1) = v35;
          }
          *(_QWORD *)a3 = v34;
          *(_QWORD *)(a3 + 8) = v27;
          *(_QWORD *)(a3 + 16) = &v33[8 * v32];
          if (v28)
            operator delete(v28);
        }
        else
        {
          *v26 = v10;
          v27 = v26 + 1;
        }
        *(_QWORD *)(a3 + 8) = v27;
        ++v24;
        v26 = v27;
      }
      while (v24 != v5);
    }
    if (v7 >= 2)
    {
      v36 = 0;
      v37 = (_QWORD *)(a3 + 16);
      v38 = *(double **)(a3 + 8);
      do
      {
        v39 = (1.0 - (double)v36 / (double)v9) * v10;
        if ((unint64_t)v38 >= *v37)
        {
          v41 = *(double **)a3;
          v42 = ((uint64_t)v38 - *(_QWORD *)a3) >> 3;
          v43 = v42 + 1;
          if ((unint64_t)(v42 + 1) >> 61)
            goto LABEL_65;
          v44 = *v37 - (_QWORD)v41;
          if (v44 >> 2 > v43)
            v43 = v44 >> 2;
          if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFF8)
            v45 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v45 = v43;
          if (v45)
          {
            v46 = (char *)sub_10002BA34(a3 + 16, v45);
            v41 = *(double **)a3;
            v38 = *(double **)(a3 + 8);
          }
          else
          {
            v46 = 0;
          }
          v47 = (double *)&v46[8 * v42];
          *v47 = v39;
          v40 = v47 + 1;
          while (v38 != v41)
          {
            v48 = *((_QWORD *)v38-- - 1);
            *((_QWORD *)v47-- - 1) = v48;
          }
          *(_QWORD *)a3 = v47;
          *(_QWORD *)(a3 + 8) = v40;
          *(_QWORD *)(a3 + 16) = &v46[8 * v45];
          if (v41)
            operator delete(v41);
        }
        else
        {
          *v38 = v39;
          v40 = v38 + 1;
        }
        *(_QWORD *)(a3 + 8) = v40;
        ++v36;
        v38 = v40;
      }
      while (v36 != v9);
    }
  }
}

void sub_100404E94(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  double v11;
  int v12;
  int v13;
  double v14;
  double v15;
  double v16;
  unsigned int v17;
  NSObject *v18;
  unsigned int v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  double *v25;
  double *v26;
  double *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  double *v33;
  uint64_t v34;
  void *v35;
  void *__p;
  void *v37;
  uint64_t v38;
  uint8_t buf[4];
  unsigned int v40;
  __int16 v41;
  const char *v42;
  __int16 v43;
  const char *v44;
  __int16 v45;
  int v46;

  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)a1)
  {
    v6 = 0;
    v7 = a3 + 16;
    do
    {
      v8 = a2[1] - *a2;
      if (v8)
      {
        v9 = 0;
        v10 = v8 >> 3;
        v11 = 0.0;
        do
        {
          v12 = (int)v10 / -2;
          if ((v6 + v9 + v12 + 1) >> 31)
          {
            v17 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_10125B6B8);
            v18 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 67109890;
              v40 = v17;
              v41 = 2082;
              v42 = "void _CRLPKConvolve(std::vector<CGFloat>, std::vector<CGFloat>, std::vector<CGFloat> &)";
              v43 = 2082;
              v44 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/PencilKit/CRLPKCalculusUtility.mm";
              v45 = 1024;
              v46 = 64;
              _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", buf, 0x22u);
            }
            v19 = v17;
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_10125B6D8);
            v20 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR))
            {
              v22 = objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
              *(_DWORD *)buf = 67109378;
              v40 = v19;
              v41 = 2114;
              v42 = (const char *)v22;
              v23 = (void *)v22;
              _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v20, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

            }
            v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void _CRLPKConvolve(std::vector<CGFloat>, std::vector<CGFloat>, std::vector<CGFloat> &)"));
            v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/PencilKit/CRLPKCalculusUtility.mm"));
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v35, v21, 64, 0, "Out-of-bounds type assignment was clamped to max");

            v13 = 0x7FFFFFFF;
          }
          else
          {
            v13 = v6 + v9 + v12 + 1;
          }
          __p = 0;
          v37 = 0;
          v38 = 0;
          sub_1002318DC(&__p, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
          v14 = sub_100404930((uint64_t *)&__p, v13);
          v10 = (uint64_t)(a2[1] - *a2) >> 3;
          if (v10 <= v9)
            sub_100194D18();
          v15 = v14;
          v16 = *(double *)(*a2 + 8 * v9);
          if (__p)
          {
            v37 = __p;
            operator delete(__p);
            v10 = (uint64_t)(a2[1] - *a2) >> 3;
          }
          v11 = v11 + v15 * v16;
          ++v9;
        }
        while (v9 < v10);
      }
      else
      {
        v11 = 0.0;
      }
      v25 = *(double **)(a3 + 8);
      v24 = *(_QWORD *)(a3 + 16);
      if ((unint64_t)v25 >= v24)
      {
        v27 = *(double **)a3;
        v28 = ((uint64_t)v25 - *(_QWORD *)a3) >> 3;
        v29 = v28 + 1;
        if ((unint64_t)(v28 + 1) >> 61)
          sub_100007810();
        v30 = v24 - (_QWORD)v27;
        if (v30 >> 2 > v29)
          v29 = v30 >> 2;
        if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFF8)
          v31 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v31 = v29;
        if (v31)
        {
          v32 = (char *)sub_10002BA34(v7, v31);
          v27 = *(double **)a3;
          v25 = *(double **)(a3 + 8);
        }
        else
        {
          v32 = 0;
        }
        v33 = (double *)&v32[8 * v28];
        *v33 = v11;
        v26 = v33 + 1;
        while (v25 != v27)
        {
          v34 = *((_QWORD *)v25-- - 1);
          *((_QWORD *)v33-- - 1) = v34;
        }
        *(_QWORD *)a3 = v33;
        *(_QWORD *)(a3 + 8) = v26;
        *(_QWORD *)(a3 + 16) = &v32[8 * v31];
        if (v27)
          operator delete(v27);
      }
      else
      {
        *v25 = v11;
        v26 = v25 + 1;
      }
      *(_QWORD *)(a3 + 8) = v26;
      ++v6;
    }
    while (v6 < (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
  }
}

void sub_1004052B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_100405304(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100405334(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100405364(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  unint64_t v28;
  double *v29;
  double *v30;
  double *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  double *v37;
  uint64_t v38;
  _BYTE v39[32];
  void *__p;
  char *v41;
  char *v42;

  __p = 0;
  v41 = 0;
  v42 = 0;
  v2 = *a1;
  if (a1[1] != *a1)
  {
    v5 = 0;
    v6 = 0;
    do
    {
      *(_QWORD *)v39 = 0;
      *(_QWORD *)&v39[24] = unk_100EED150;
      *(_OWORD *)&v39[8] = *(_OWORD *)(v2 + 16 * v6);
      if (v5 >= v42)
      {
        v7 = (char *)__p;
        v8 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - (_BYTE *)__p) >> 4);
        v9 = v8 + 1;
        if (v8 + 1 > 0x333333333333333)
          sub_100007810();
        if (0x999999999999999ALL * ((v42 - (_BYTE *)__p) >> 4) > v9)
          v9 = 0x999999999999999ALL * ((v42 - (_BYTE *)__p) >> 4);
        if (0xCCCCCCCCCCCCCCCDLL * ((v42 - (_BYTE *)__p) >> 4) >= 0x199999999999999)
          v10 = 0x333333333333333;
        else
          v10 = v9;
        if (v10)
        {
          v11 = (char *)sub_10015C128((uint64_t)&v42, v10);
          v7 = (char *)__p;
          v5 = v41;
        }
        else
        {
          v11 = 0;
        }
        v12 = &v11[80 * v8];
        *((_OWORD *)v12 + 2) = xmmword_100EED158;
        *((_OWORD *)v12 + 3) = unk_100EED168;
        *((_OWORD *)v12 + 4) = xmmword_100EED178;
        *(_OWORD *)v12 = *(_OWORD *)v39;
        *((_OWORD *)v12 + 1) = *(_OWORD *)&v39[16];
        if (v5 == v7)
        {
          v17 = &v11[80 * v8];
        }
        else
        {
          v13 = &v11[80 * v8];
          do
          {
            *((_OWORD *)v13 - 5) = *((_OWORD *)v5 - 5);
            v14 = *((_OWORD *)v5 - 4);
            v15 = *((_OWORD *)v5 - 3);
            v16 = *((_OWORD *)v5 - 1);
            v17 = v13 - 80;
            *((_OWORD *)v13 - 2) = *((_OWORD *)v5 - 2);
            *((_OWORD *)v13 - 1) = v16;
            *((_OWORD *)v13 - 4) = v14;
            *((_OWORD *)v13 - 3) = v15;
            v5 -= 80;
            v13 -= 80;
          }
          while (v5 != v7);
        }
        v5 = v12 + 80;
        __p = v17;
        v41 = v12 + 80;
        v42 = &v11[80 * v10];
        if (v7)
          operator delete(v7);
      }
      else
      {
        *(_OWORD *)v5 = *(_OWORD *)v39;
        *((_OWORD *)v5 + 3) = unk_100EED168;
        *((_OWORD *)v5 + 4) = xmmword_100EED178;
        *((_OWORD *)v5 + 1) = *(_OWORD *)&v39[16];
        *((_OWORD *)v5 + 2) = xmmword_100EED158;
        v5 += 80;
      }
      v41 = v5;
      ++v6;
      v2 = *a1;
      v18 = a1[1];
    }
    while (v6 < (v18 - *a1) >> 4);
    if (v18 != v2)
    {
      v19 = 0;
      do
      {
        v20 = sub_1002EA2D8(&__p, v19, (double (*)(_QWORD, double))sub_1002EA0A8, 0.0);
        v22 = v21;
        v23 = sub_1002EA2D8(&__p, v19, (double (*)(_QWORD, double))sub_1002EA170, 0.0);
        v25 = v24;
        v26 = pow(v22 * v22 + v20 * v20, 1.5);
        if (v26 <= 0.001)
          v27 = 100.0;
        else
          v27 = fabs((v20 * v25 - v22 * v23) / v26);
        v29 = *(double **)(a2 + 8);
        v28 = *(_QWORD *)(a2 + 16);
        if ((unint64_t)v29 >= v28)
        {
          v31 = *(double **)a2;
          v32 = ((uint64_t)v29 - *(_QWORD *)a2) >> 3;
          v33 = v32 + 1;
          if ((unint64_t)(v32 + 1) >> 61)
            sub_100007810();
          v34 = v28 - (_QWORD)v31;
          if (v34 >> 2 > v33)
            v33 = v34 >> 2;
          if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8)
            v35 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v35 = v33;
          if (v35)
          {
            v36 = (char *)sub_10002BA34(a2 + 16, v35);
            v31 = *(double **)a2;
            v29 = *(double **)(a2 + 8);
          }
          else
          {
            v36 = 0;
          }
          v37 = (double *)&v36[8 * v32];
          *v37 = v27;
          v30 = v37 + 1;
          while (v29 != v31)
          {
            v38 = *((_QWORD *)v29-- - 1);
            *((_QWORD *)v37-- - 1) = v38;
          }
          *(_QWORD *)a2 = v37;
          *(_QWORD *)(a2 + 8) = v30;
          *(_QWORD *)(a2 + 16) = &v36[8 * v35];
          if (v31)
            operator delete(v31);
        }
        else
        {
          *v29 = v27;
          v30 = v29 + 1;
        }
        *(_QWORD *)(a2 + 8) = v30;
        ++v19;
      }
      while (v19 < (a1[1] - *a1) >> 4);
    }
    if (__p)
    {
      v41 = (char *)__p;
      operator delete(__p);
    }
  }
}

void sub_1004056CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1004056FC(uint64_t a1, uint64_t a2)
{
  void *__p;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _BYTE *v16;
  uint64_t v17;

  v15 = 0;
  v16 = 0;
  v17 = 0;
  v13 = 0;
  v14 = 0;
  v12 = 0;
  sub_10015D7D8(&v12, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 4);
  sub_100405364((uint64_t *)&v12, (uint64_t)&v15);
  if (v12)
  {
    v13 = v12;
    operator delete(v12);
  }
  v9 = 0;
  v10 = 0;
  v11 = 0;
  sub_100404B80(15, 5, (uint64_t)&v9);
  v6 = 0;
  v7 = 0;
  v8 = 0;
  sub_1002318DC(&v6, v15, (uint64_t)v16, (v16 - (_BYTE *)v15) >> 3);
  __p = 0;
  v4 = 0;
  v5 = 0;
  sub_1002318DC(&__p, v9, (uint64_t)v10, (v10 - (_BYTE *)v9) >> 3);
  sub_100404E94((uint64_t)&v6, &__p, a2);
  if (__p)
  {
    v4 = __p;
    operator delete(__p);
  }
  if (v6)
  {
    v7 = v6;
    operator delete(v6);
  }
  if (v9)
  {
    v10 = v9;
    operator delete(v9);
  }
  if (v15)
  {
    v16 = v15;
    operator delete(v15);
  }
}

void sub_100405800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  uint64_t v17;
  void *v19;

  if (__p)
    operator delete(__p);
  if (a13)
    operator delete(a13);
  if (a16)
    operator delete(a16);
  v19 = *(void **)(v17 - 40);
  if (v19)
  {
    *(_QWORD *)(v17 - 32) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

id sub_100405EC0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsDisplayInRect:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

void sub_100406778(uint64_t a1, unint64_t a2, double a3, double a4)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  unsigned int v16;
  char *v17;
  char *v18;
  double v19;
  double v20;
  CRLTilingTileLayer *v22;
  char v23;
  void *v24;
  CRLTilingTileLayer *v25;
  CRLTilingTileLayer *v26;
  CRLTilingTileLayer *v27;
  CGRect v28;
  CGRect v29;

  v6 = *(_QWORD *)(a1 + 48);
  v7 = a2 / v6;
  v8 = a2 % v6;
  v9 = v6 - 1;
  v10 = (double *)(*(_QWORD *)(a1 + 32) + 16);
  if (v8 == v9)
  {
    v12 = *v10;
    v11 = *(double *)(*(_QWORD *)(a1 + 32) + 24);
  }
  else
  {
    v12 = *v10;
    v11 = *(double *)(*(_QWORD *)(a1 + 32) + 24);
    if (v7 != *(_QWORD *)(a1 + 56) - 1)
      goto LABEL_5;
  }
  v29 = *(CGRect *)(a1 + 64);
  v28.origin.x = v29.origin.x + v12 * (double)v8;
  v28.origin.y = v29.origin.y + v11 * (double)v7;
  v28.size.width = v12;
  v28.size.height = v11;
  *(CGRect *)&a3 = CGRectIntersection(v28, v29);
  v12 = v13;
  v11 = v14;
LABEL_5:
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSThread currentThread](NSThread, "currentThread", a3, a4));
  v16 = objc_msgSend(v15, "isMainThread");

  if (!v16)
    goto LABEL_16;
  v17 = (char *)objc_msgSend(*(id *)(a1 + 40), "count");
  if (!v17)
    goto LABEL_16;
  v18 = v17 - 1;
  while (1)
  {
    v25 = (CRLTilingTileLayer *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndex:", v18));
    -[CRLTilingTileLayer bounds](v25, "bounds");
    if (v20 == v12 && v19 == v11)
      break;

    if (--v18 == (char *)-1)
      goto LABEL_16;
  }
  objc_msgSend(*(id *)(a1 + 40), "removeObjectAtIndex:", v18);
  v22 = v25;
  if (v25)
  {
    v23 = 0;
  }
  else
  {
LABEL_16:
    v26 = objc_alloc_init(CRLTilingTileLayer);
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentsFormat"));
    -[CRLTilingTileLayer setContentsFormat:](v26, "setContentsFormat:", v24);

    -[CRLTilingTileLayer setZPosition:](v26, "setZPosition:", -10000.0);
    -[CRLTilingTileLayer setOpaque:](v26, "setOpaque:", objc_msgSend(*(id *)(a1 + 32), "isOpaque"));
    -[CRLTilingTileLayer setAnchorPoint:](v26, "setAnchorPoint:", CGPointZero.x, CGPointZero.y);
    objc_msgSend(*(id *)(a1 + 32), "contentsScale");
    -[CRLTilingTileLayer setContentsScale:](v26, "setContentsScale:");
    -[CRLTilingTileLayer setDrawsAsynchronously:](v26, "setDrawsAsynchronously:", objc_msgSend(*(id *)(a1 + 32), "drawsAsynchronously"));
    objc_msgSend(*(id *)(a1 + 32), "insertSublayer:atIndex:", v26, 0);
    v22 = v26;
    v23 = 1;
  }
  v27 = v22;
  -[CRLTilingTileLayer setIndex:](v22, "setIndex:", a2);
  -[CRLTilingTileLayer updateFrameWithTileSize:tilesWide:tilesHigh:](v27, "updateFrameWithTileSize:tilesWide:tilesHigh:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(double *)(*(_QWORD *)(a1 + 32) + 16), *(double *)(*(_QWORD *)(a1 + 32) + 24));
  if ((v23 & 1) == 0)
    -[CRLTilingTileLayer setNeedsDisplay](v27, "setNeedsDisplay");

}

void sub_100406C84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100406CB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100406CE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100406D14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100407178(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004071A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100408E44(uint64_t a1, uint64_t a2, double a3, double a4, long double a5, long double a6, long double a7, long double a8)
{
  double y;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  BOOL v20;
  BOOL v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;

  y = CGPointZero.y;
  if (sub_10005FDF0(CGPointZero.x, y, a5, a6) || sub_10005FDF0(CGPointZero.x, y, a7, a8))
  {
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * a2) = 0;
    return;
  }
  v15 = sub_1000618B4(a5, a6);
  v16 = sub_1000618B4(a7, a8);
  sub_100062188(v15, v16);
  v18 = fabs(v17);
  v19 = v18 / 0.785398163;
  v20 = v18 < INFINITY;
  v21 = v18 <= INFINITY;
  v22 = 0.0;
  if (v20)
    v22 = v19;
  if (v21)
    v23 = v22;
  else
    v23 = v19;
  v24 = *(_QWORD *)(a1 + 32);
  *(double *)(v24 + 8 * a2) = v23;
  v25 = sub_100061070(a5, a6);
  v26 = fmin(v25 / sub_100061070(a7, a8), 3.0);
  if (v26 <= 1.0)
  {
    if (v26 >= 1.0)
      return;
    v27 = v23 + (v26 + -1.0) * (v26 + -1.0) * 2.0;
  }
  else
  {
    v27 = v23 + (v26 + -1.0) * (v26 + -1.0);
  }
  *(double *)(v24 + 8 * a2) = v27;
}

double sub_100408F84(double a1, double a2)
{
  double v3;
  double v4;
  float v5;
  __float2 v6;
  float v7;
  __float2 v8;

  v3 = sub_1003C65EC(a1, -1.57079633, 1.57079633);
  v4 = sub_1003C65EC(a2, -1.57079633, 1.57079633);
  v5 = v3;
  v6 = __sincosf_stret(v5);
  v7 = v4;
  v8 = __sincosf_stret(v7);
  return ((v8.__sinval + v6.__sinval * -0.0625)
        * ((v6.__sinval + v8.__sinval * -0.0625)
         * 1.41421354)
        * (v6.__cosval - v8.__cosval)
        + 2.0)
       / (v6.__cosval * 1.85410202 + 3.0 + v8.__cosval * 1.14589798);
}

uint64_t sub_100409048(uint64_t a1, uint64_t a2, __CLPK_doublereal *a3, __CLPK_doublereal *a4, __CLPK_doublereal *a5, __CLPK_doublereal *a6, uint64_t a7)
{
  void *v8;
  void *v9;
  void *v10;
  __CLPK_integer __ldb[2];
  uint64_t __nrhs;

  LODWORD(__nrhs) = 0;
  *(_QWORD *)__ldb = 0;
  if (a1 != (int)a1)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125B808);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E3054C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125B828);
    v8 = off_1013D9070;
    if (!os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      goto LABEL_29;
    goto LABEL_28;
  }
  HIDWORD(__nrhs) = a1;
  if (a2 != (int)a2)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125B848);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E3054C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125B868);
    v8 = off_1013D9070;
    if (!os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      goto LABEL_29;
    goto LABEL_28;
  }
  LODWORD(__nrhs) = a2;
  if (a7 == (int)a7)
  {
    __ldb[1] = a7;
    dgtsv_((__CLPK_integer *)&__nrhs + 1, (__CLPK_integer *)&__nrhs, a3, a4, a5, a6, &__ldb[1], __ldb);
    return __ldb[0];
  }
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10125B888);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E3054C();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10125B8A8);
  v8 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
LABEL_28:
    sub_100DE87A4(v8);
LABEL_29:
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "__CLPK_integer dgtsv(long, long, __CLPK_doublereal *, __CLPK_doublereal *, __CLPK_doublereal *, __CLPK_doublereal *, long)", *(_QWORD *)__ldb, __nrhs));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLEditableBezierPathSmoothing.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 356, 0, "Out-of-bounds type assignment failed");

  return 0;
}

void sub_100409334(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100409364(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100409394(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004093C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004093F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100409424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100409454(void *a1, void *a2)
{
  id v3;
  void *v4;
  signed int v5;
  void *v6;
  signed int v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectForKey:", CFSTR("index")));
  v5 = objc_msgSend(v4, "intValue");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("index")));
  v7 = objc_msgSend(v6, "intValue");

  if (v5 > v7)
    return -1;
  else
    return v5 < v7;
}

void sub_10040A724(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040A754(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040A784(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040A7B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040B374(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040B3A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040B6FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040B72C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040B75C(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10040B764(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  __CFString *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  id v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  unsigned int v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *context;
  void *v46;
  id v47;
  id v48;
  id v49;
  char v50;
  uint64_t v51;
  id v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[128];

  context = objc_autoreleasePoolPush();
  v2 = objc_msgSend(*(id *)(a1 + 32), "count");
  v3 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", v2);
  v43 = v2;
  v49 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", v2);
  v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v44 = a1;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v53, v57, 16);
  if (v5)
  {
    v6 = v5;
    v51 = 0;
    v50 = 0;
    v7 = 0;
    v8 = 0;
    v9 = *(_QWORD *)v54;
    v47 = v4;
    v48 = v3;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v54 != v9)
          objc_enumerationMutation(v4);
        v11 = *(void **)(*((_QWORD *)&v53 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "boardItem"));
        if (v12)
        {
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[CRLIngestibleBoardItemAndDescription ingestibleBoardItemAndDescriptionWithBoardItem:description:](CRLIngestibleBoardItemAndDescription, "ingestibleBoardItemAndDescriptionWithBoardItem:description:", v12, &__NSDictionary0__struct));
          objc_msgSend(v3, "addObject:", v13);

          v14 = objc_msgSend(v11, "embeddedDataLength");
          v8 += (uint64_t)v14;
          v7 += (uint64_t)objc_msgSend(v11, "uploadDataLength") + (_QWORD)v14;
          objc_opt_class(_TtC8Freeform12CRLImageItem, v15);
          if ((objc_opt_isKindOfClass(v12, v16) & 1) != 0)
          {
            v50 = 1;
          }
          else
          {
            objc_opt_class(_TtC8Freeform12CRLMovieItem, v17);
            if ((objc_opt_isKindOfClass(v12, v22) & 1) != 0)
            {
              v23 = objc_msgSend(v12, "isAudioOnly");
              BYTE4(v51) |= v23;
              LOBYTE(v51) = v23 ^ 1 | v51;
            }
          }
        }
        else
        {
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "error"));
          v19 = v18;
          if (v18)
          {
            v20 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "domain"));
            if (v20 == CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter"))
            {
              v24 = objc_msgSend(v19, "code");

              if (v24 == (id)102)
                objc_msgSend(v46, "addObject:", v19);
            }
            else
            {

            }
            *(_QWORD *)&v25 = objc_opt_class(NSNumber, v21).n128_u64[0];
            v27 = v26;
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "userInfo", v25));
            v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "objectForKeyedSubscript:", CFSTR("CRLBoardItemImporterErrorMediaTypeKey")));
            v30 = sub_100221D0C(v27, v29);
            v31 = (void *)objc_claimAutoreleasedReturnValue(v30);

            if (v31)
            {
              v32 = objc_msgSend(v31, "integerValue");
              v4 = v47;
              if (v32 == (id)102)
              {
                BYTE4(v51) = 1;
                v3 = v48;
              }
              else
              {
                v3 = v48;
                if (v32 == (id)101)
                {
                  LOBYTE(v51) = 1;
                }
                else if (v32 == (id)100)
                {
                  v50 = 1;
                }
              }
            }
            else
            {
              v4 = v47;
              v3 = v48;
            }
            objc_msgSend(v49, "addObject:", v19);

          }
        }

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v53, v57, 16);
    }
    while (v6);
  }
  else
  {
    v51 = 0;
    v50 = 0;
    v7 = 0;
    v8 = 0;
  }

  v33 = *(void **)(v44 + 40);
  v52 = 0;
  v34 = objc_msgSend(v33, "p_validateSizeOfImportWithTotalSize:totalEmbeddedDataSize:insertedImage:insertedMovie:insertedAudio:preexistingTooLargeErrors:error:", v7, v8, v50 & 1, v51 & 1, BYTE4(v51) & 1, v46, &v52);
  v35 = v52;
  if (!v34 || objc_msgSend(v46, "count"))
  {
    if (!v35 || objc_msgSend(v46, "count") == (id)1 && v43 == (id)1)
    {
      v36 = v46;

      v49 = v36;
    }
    else
    {
      objc_msgSend(v49, "removeAllObjects");
      objc_msgSend(v49, "addObject:", v35);
    }

    v3 = 0;
  }
  v37 = *(_QWORD *)(v44 + 40);
  v38 = *(void **)(v37 + 48);
  *(_QWORD *)(v37 + 48) = v3;
  v39 = v3;

  v40 = *(_QWORD *)(v44 + 40);
  v41 = *(void **)(v40 + 56);
  *(_QWORD *)(v40 + 56) = v49;
  v42 = v49;

  (*(void (**)(void))(*(_QWORD *)(v44 + 48) + 16))();
  objc_autoreleasePoolPop(context);
}

void sub_10040BC48(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = objc_autoreleasePoolPush();
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "importers"));
  objc_msgSend(v3, "makeObjectsPerformSelector:", "cancel");

  objc_autoreleasePoolPop(v2);
}

void sub_10040BE08(uint64_t a1)
{
  void *v2;

  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "importer:needsMediaCompatibilityFeedbackWithReasons:forMediaType:usingBlock:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "p_boardItemProviderDidRequestMediaCompatibilityRequirement:", *(_QWORD *)(a1 + 40));
  objc_autoreleasePoolPop(v2);
}

void sub_10040BEC8(uint64_t a1)
{
  void *v2;

  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(a1 + 32), "p_boardItemProviderDidRequestMediaCompatibilityRequirement:", *(_QWORD *)(a1 + 40));
  objc_autoreleasePoolPop(v2);
}

void sub_10040C108(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040C138(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040C168(uint64_t a1, int a2, char a3, char a4)
{
  uint64_t v7;
  NSObject *v8;
  _QWORD v9[5];
  char v10;
  char v11;

  if (a2)
    objc_msgSend(*(id *)(a1 + 32), "cancel");
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(NSObject **)(v7 + 8);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10040C1F0;
  v9[3] = &unk_10125BA38;
  v9[4] = v7;
  v10 = a3;
  v11 = a4;
  dispatch_async(v8, v9);
}

void sub_10040C1F0(uint64_t a1)
{
  void *v2;

  v2 = objc_autoreleasePoolPush();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "completeImportWithCompatibilityOnAllDevices:allowHEVCContent:", *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41));
  objc_autoreleasePoolPop(v2);
}

void sub_10040C7BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040C7EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040C81C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040C84C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CC20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CC50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CC80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CCB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CF5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CF8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CFBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040CFEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D18C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D1BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D740(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D770(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D7A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D7D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D978(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040D9A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040DB60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040DB90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10040EA8C()
{
  return 0x4000000;
}

uint64_t CRLWPShapeLayout.columnsAreLeftToRight.getter()
{
  return 1;
}

unint64_t sub_10040EA9C()
{
  if (qword_101415860 != -1)
    dispatch_once(&qword_101415860, &stru_10125BD40);
  return atomic_load(&qword_1013DC4B0);
}

void sub_10040EAE0(id a1)
{
  void *v1;
  id v2;
  unint64_t v3;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[CRLCapabilities currentCapabilities](CRLCapabilities, "currentCapabilities"));
  v2 = objc_msgSend(v1, "physicalMemory");

  if ((unint64_t)v2 >= 0x40000001)
  {
    if ((unint64_t)v2 > 0x80000000)
      return;
    v3 = 0x1000000;
  }
  else
  {
    v3 = 0x400000;
  }
  atomic_store(v3, &qword_1013DC4B0);
}

double sub_10040EB4C()
{
  return 4096.0;
}

double sub_10040EB5C()
{
  return 3000.0;
}

uint64_t sub_10040EB6C(uint64_t a1)
{
  return qword_100EF00D0[a1];
}

double sub_10040EB7C(uint64_t a1)
{
  return dbl_100EF00F0[2 * a1];
}

uint64_t sub_10040EB90(uint64_t a1)
{
  return qword_100EF0130[a1];
}

id sub_10040EBA0(void *a1, void *a2, uint64_t a3, void *a4, double a5, double a6)
{
  id v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  BOOL v23;
  BOOL v24;
  void *v25;
  char v26;
  void *v27;
  __CFString *v28;
  __CFString *v29;
  void *v30;
  CRLImageResamplingOperation *v31;

  v11 = a1;
  v12 = a2;
  v13 = a4;
  objc_msgSend(v11, "naturalSize");
  v15 = v14;
  v17 = v16;
  v19 = objc_opt_class(CRLBitmapImageProvider, v18);
  v20 = sub_100221D0C(v19, v11);
  v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v22 = v21;
  if (v21)
    v23 = v15 <= a5;
  else
    v23 = 0;
  v24 = v23 && v17 <= a6;
  if (!v24
    || (a3 & 4) != 0 && (objc_msgSend(v21, "isOpaque") & 1) != 0
    || (v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "imageData")),
        v26 = sub_10040ED28(v25),
        v25,
        (v26 & 1) == 0))
  {
    v28 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "stringByDeletingPathExtension"));
    v29 = v28;
    if (!v28 || !-[__CFString length](v28, "length"))
    {

      v29 = CFSTR("image");
    }
    v30 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString stringByAppendingString:](v29, "stringByAppendingString:", CFSTR("-small")));
    v31 = -[CRLImageResamplingOperation initWithImageProvider:desiredSize:assetOwner:]([CRLImageResamplingOperation alloc], "initWithImageProvider:desiredSize:assetOwner:", v11, v13, a5, a6);
    -[CRLImageResamplingOperation setDisplayName:](v31, "setDisplayName:", v30);
    v27 = (void *)objc_claimAutoreleasedReturnValue(-[CRLImageResamplingOperation performResampleOperationWithResampleOptions:bitmapContextOptions:](v31, "performResampleOperationWithResampleOptions:bitmapContextOptions:", a3, 9));

  }
  else
  {
    v27 = 0;
  }

  return v27;
}

uint64_t sub_10040ED28(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  CGImageSource *v8;
  CFStringRef Type;
  void *v10;
  CFStringRef v11;
  void *v12;
  unsigned int v13;
  uint64_t v14;

  v1 = a1;
  if (sub_1004104B0(v1))
  {
    if ((unint64_t)objc_msgSend(v1, "length") < 0x4000001)
    {
      v14 = 1;
    }
    else
    {
      v2 = (void *)objc_claimAutoreleasedReturnValue(+[CRLImageProviderPool sharedPool](CRLImageProviderPool, "sharedPool"));
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "temporaryProviderForAsset:shouldValidate:", v1, 0));

      v5 = objc_opt_class(CRLBitmapImageProvider, v4);
      v6 = sub_100221D0C(v5, v3);
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      v8 = (CGImageSource *)objc_msgSend(v7, "CGImageSource");
      if (v8)
      {
        Type = CGImageSourceGetType(v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue(Type);
        if (v10)
        {
          v11 = sub_1000304A4();
          v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
          v13 = objc_msgSend(v10, "crl_conformsToUTI:", v12);

          v14 = v13 ^ 1;
        }
        else
        {
          v14 = 1;
        }

      }
      else
      {
        v14 = 1;
      }

    }
  }
  else
  {
    v14 = 0;
  }

  return v14;
}

_TtC8Freeform27CRLPreinsertionAssetWrapper *sub_10040EE30(void *a1, uint64_t a2, void *a3, double a4, double a5)
{
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _TtC8Freeform27CRLPreinsertionAssetWrapper *v17;
  void *v18;
  void *v19;
  void *v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  unsigned __int8 v27;
  void *v28;
  id v29;

  v9 = a1;
  v10 = a3;
  if (!v9)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BD60);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E30DCC();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BD80);
    v11 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLPreinsertionAssetWrapper *CRLResampleImageData(CRLAsset *__strong, CGSize, CRLImageResampleOptions, __strong id<CRLAssetOwning>)"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 200, 0, "invalid nil value for '%{public}s'", "sourceImageData");

  }
  if (a4 <= 0.0 || a5 <= 0.0)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BDA0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E30D4C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BDC0);
    v14 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLPreinsertionAssetWrapper *CRLResampleImageData(CRLAsset *__strong, CGSize, CRLImageResampleOptions, __strong id<CRLAssetOwning>)"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 201, 0, "bogus size to resample");

  }
  v17 = 0;
  if (v9 && a4 > 0.0 && a5 > 0.0)
  {
    v18 = objc_autoreleasePoolPush();
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[CRLImageProviderPool sharedPool](CRLImageProviderPool, "sharedPool"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "temporaryProviderForAsset:shouldValidate:", v9, 1));

    v21 = objc_msgSend(v20, "isError");
    if ((a2 & 2) != 0)
    {
      if ((v21 & 1) != 0)
      {
LABEL_28:
        v17 = -[CRLPreinsertionAssetWrapper initWithAlreadyInsertedAsset:owner:]([_TtC8Freeform27CRLPreinsertionAssetWrapper alloc], "initWithAlreadyInsertedAsset:owner:", v9, v10);
LABEL_31:

        objc_autoreleasePoolPop(v18);
        goto LABEL_32;
      }
    }
    else
    {
      v23 = objc_opt_class(CRLBitmapImageProvider, v22);
      v24 = sub_100221D0C(v23, v20);
      v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      if (!v25)
        goto LABEL_28;
      v26 = v25;
      v27 = objc_msgSend(v25, "isValid");

      if ((v27 & 1) == 0)
        goto LABEL_28;
    }
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "filename"));
    v29 = sub_10040EBA0(v20, v28, a2, v10, a4, a5);
    v17 = (_TtC8Freeform27CRLPreinsertionAssetWrapper *)objc_claimAutoreleasedReturnValue(v29);

    goto LABEL_31;
  }
LABEL_32:

  return v17;
}

void sub_10040F1CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F1FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F22C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F25C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F28C(void *a1, uint64_t a2)
{
  void *v3;
  id v4;
  _QWORD v5[5];

  if (a1 && a2)
  {
    if (objc_msgSend(a1, "count"))
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectAtIndex:", 0));
      v4 = objc_msgSend(v3, "pointerValue");

      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_1004115A8;
      v5[3] = &unk_10125C008;
      v5[4] = v4;
      sub_100412E70(1, 0, v5);
    }

  }
}

void sub_10040F32C(uint64_t a1)
{
  _QWORD v1[5];

  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_1004115A8;
  v1[3] = &unk_10125C008;
  v1[4] = a1;
  sub_100412E70(1, 0, v1);
}

CGContext *sub_10040F384(CGImageRef image, char a2, double a3, double a4)
{
  CGColorSpace *ColorSpace;
  double v9;
  double v10;
  double v11;
  size_t BitsPerComponent;
  size_t BitsPerPixel;
  CGBitmapInfo BitmapInfo;
  uint32_t v15;
  uint64_t v16;
  size_t v17;
  id releaseInfo;
  CGContext *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  const char *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  int v30;
  BOOL v31;
  int v32;
  int v33;
  int v34;

  if (a3 == CGSizeZero.width && a4 == CGSizeZero.height)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BDE0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E30E58();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BE00);
    v21 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGContextRef _CRLBitmapContextCreateMatchingImageIfPossible(CGSize, CGImageRef, CRLBitmapContextOptions)"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
    v24 = "CRLBitmapContextCreate: Input context size of CGSizeZero illegal.";
    v25 = v22;
    v26 = v23;
    v27 = 241;
    goto LABEL_33;
  }
  if (!image)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BE20);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E30ED8();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BE40);
    v28 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v28);
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGContextRef _CRLBitmapContextCreateMatchingImageIfPossible(CGSize, CGImageRef, CRLBitmapContextOptions)"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
    v24 = "Cannot create a context matching a nil image.";
    v25 = v22;
    v26 = v23;
    v27 = 246;
LABEL_33:
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v25, v26, v27, 0, v24);

    return 0;
  }
  ColorSpace = CGImageGetColorSpace(image);
  if (!CGColorSpaceSupportsOutput(ColorSpace))
    return 0;
  v9 = sub_100063090(a3);
  v11 = v10;
  BitsPerComponent = CGImageGetBitsPerComponent(image);
  BitsPerPixel = CGImageGetBitsPerPixel(image);
  BitmapInfo = CGImageGetBitmapInfo(image);
  switch(CGColorSpaceGetModel(ColorSpace))
  {
    case kCGColorSpaceModelUnknown:
    case kCGColorSpaceModelLab:
    case kCGColorSpaceModelDeviceN:
    case kCGColorSpaceModelIndexed:
    case kCGColorSpaceModelPattern:
    case kCGColorSpaceModelXYZ:
      v15 = 0;
      goto LABEL_9;
    case kCGColorSpaceModelMonochrome:
      if (BitsPerPixel <= 0xF)
      {
        if ((BitmapInfo & 0x1F) != 0)
          v15 = 7;
        else
          v15 = 0;
LABEL_9:
        v16 = 1;
        goto LABEL_10;
      }
      if (BitsPerPixel > 0x17)
      {
        if (BitsPerPixel >= 0x28)
          return 0;
        v15 = 256;
        v16 = 4;
        BitsPerComponent = 32;
      }
      else
      {
        v16 = 2;
        if ((BitmapInfo & 0x1F) != 0)
          v30 = 1;
        else
          v30 = 5;
        v31 = BitsPerComponent > 8;
        if (BitsPerComponent <= 8)
          BitsPerComponent = 8;
        else
          BitsPerComponent = 16;
        if (v31)
          v15 = 0;
        else
          v15 = v30;
        if (!v31)
          v16 = 2;
      }
      goto LABEL_11;
    case kCGColorSpaceModelRGB:
      if (BitsPerPixel < 0x18)
      {
        v15 = 6;
        v16 = 2;
        BitsPerComponent = 5;
        goto LABEL_11;
      }
      if (BitsPerPixel >= 0x28)
      {
        if (BitsPerPixel > 0x47)
        {
          if (BitsPerPixel > 0x87)
            return 0;
          v32 = 256;
          v16 = 16;
          BitsPerComponent = 32;
        }
        else
        {
          v32 = ((int)(BitmapInfo << 23) >> 31) & 0x2100;
          v16 = 8;
          BitsPerComponent = 16;
        }
      }
      else
      {
        v32 = 0;
        v16 = 4;
        BitsPerComponent = 8;
      }
      v33 = v32 | 1;
      v34 = v32 | 5;
      if ((BitmapInfo & 0x1F) != 0)
        v15 = v33;
      else
        v15 = v34;
      goto LABEL_11;
    case kCGColorSpaceModelCMYK:
      if (BitsPerPixel >= 0x28)
      {
        if (BitsPerPixel >= 0x40)
        {
          if (BitsPerPixel >= 0x80)
            return 0;
          v15 = 256;
          BitsPerComponent = 32;
          v16 = 32;
        }
        else
        {
          v15 = 0;
          v16 = 8;
          BitsPerComponent = 16;
        }
      }
      else
      {
        v15 = 0;
        v16 = 4;
LABEL_10:
        BitsPerComponent = 8;
      }
LABEL_11:
      v17 = sub_100012A28(v16 * (unint64_t)v9);
      releaseInfo = objc_alloc_init((Class)NSMutableArray);
      v19 = CGBitmapContextCreateWithData(0, (unint64_t)v9, (unint64_t)v11, BitsPerComponent, v17, ColorSpace, v15, (CGBitmapContextReleaseDataCallback)sub_10040F28C, releaseInfo);
      if (v19)
      {
        v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithPointer:](NSValue, "valueWithPointer:", v19));
        objc_msgSend(releaseInfo, "addObject:", v20);

        sub_10040F974((uint64_t)v19, 0, 0, 0, 0, 1.0);
        if ((a2 & 8) != 0)
        {
          CGContextTranslateCTM(v19, 0.0, (double)(unint64_t)v11);
          CGContextScaleCTM(v19, 1.0, -1.0);
        }
      }

      break;
    default:
      v15 = 0;
      v16 = 0;
      goto LABEL_11;
  }
  return v19;
}

void sub_10040F8B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F8E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F914(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F944(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040F974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  void *v12;
  void *v13;
  id v14;
  double v15;
  double x;
  double v17;
  double y;
  id v19;

  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSThread currentThread](NSThread, "currentThread"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "threadDictionary"));
  v19 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", CFSTR("CRLTilingTileLayerPositionTLSKey")));

  v14 = v19;
  if (v19)
  {
    objc_msgSend(v19, "CGPointValue");
    v14 = v19;
    x = v15;
    y = v17;
  }
  else
  {
    x = CGPointZero.x;
    y = CGPointZero.y;
  }
  sub_100411358(a1, a2, a3, a4, v14 != 0, a5, a6, x, y);

}

CGContext *sub_10040FA64(char a1, double a2, double a3)
{
  size_t v5;
  double v6;
  size_t v7;
  void *v8;
  void *v9;
  void *v10;
  CGColorSpace *v11;
  uint32_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  id releaseInfo;
  void *v17;
  CGContext *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  size_t v23;
  void *v24;

  if (a2 == CGSizeZero.width && a3 == CGSizeZero.height)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BE60);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E30F58();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BE80);
    v15 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v15);
    releaseInfo = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGContextRef CRLBitmapContextCreate(CGSize, CRLBitmapContextOptions)"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", releaseInfo, v17, 413, 0, "CRLBitmapContextCreate: Input context size of CGSizeZero illegal.");

    v18 = 0;
  }
  else
  {
    v5 = (unint64_t)sub_100063090(a2);
    v7 = (unint64_t)v6;
    if ((a1 & 1) != 0)
    {
      if ((a1 & 0x20) != 0)
        v19 = sub_100011BA0();
      else
        v19 = sub_100011A10();
      v11 = (CGColorSpace *)v19;
      v14 = 2;
      if ((a1 & 4) == 0)
        v14 = 4;
      v20 = 5;
      if ((a1 & 4) != 0)
      {
        v21 = 4102;
      }
      else
      {
        v20 = 8;
        v21 = 8198;
      }
      if ((a1 & 0x10) != 0)
        v22 = 8193;
      else
        v22 = 8194;
      if ((a1 & 2) != 0)
      {
        v14 = 4;
        v13 = 8;
      }
      else
      {
        v13 = v20;
      }
      if ((a1 & 2) != 0)
        v12 = v22;
      else
        v12 = v21;
    }
    else if ((a1 & 2) != 0)
    {
      v11 = 0;
      v12 = 7;
      v13 = 8;
      v14 = 1;
    }
    else
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125BEA0);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E30FD8();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125BEC0);
      v8 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGContextRef CRLBitmapContextCreate(CGSize, CRLBitmapContextOptions)"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 464, 0, "Must include a color or alpha channel.");

      v11 = 0;
      v12 = 8194;
      v13 = 8;
      v14 = 4;
    }
    v23 = sub_100012A28(v14 * v5);
    releaseInfo = objc_alloc_init((Class)NSMutableArray);
    v18 = CGBitmapContextCreateWithData(0, v5, v7, v13, v23, v11, v12, (CGBitmapContextReleaseDataCallback)sub_10040F28C, releaseInfo);
    if (v18)
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithPointer:](NSValue, "valueWithPointer:", v18));
      objc_msgSend(releaseInfo, "addObject:", v24);

      sub_10040F974((uint64_t)v18, 0, 0, 0, 0, 1.0);
      if ((a1 & 8) != 0)
      {
        CGContextTranslateCTM(v18, 0.0, (double)v7);
        CGContextScaleCTM(v18, 1.0, -1.0);
      }
    }
  }

  return v18;
}

void sub_10040FE3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040FE6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040FE9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10040FECC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CGContext *sub_10040FEFC(CGImage *a1, char a2, double a3, double a4)
{
  CGContext *result;
  CGColorSpace *ColorSpace;
  char v10;

  result = sub_10040F384(a1, a2, a3, a4);
  if (!result)
  {
    ColorSpace = CGImageGetColorSpace(a1);
    if (CGColorSpaceIsWideGamutRGB(ColorSpace))
      v10 = a2 | 0x20;
    else
      v10 = a2;
    return sub_10040FA64(v10, a3, a4);
  }
  return result;
}

_TtC8Freeform27CRLPreinsertionAssetWrapper *sub_10040FF64(void *a1, void *a2, uint64_t a3, char a4)
{
  id v6;
  id v7;
  _TtC8Freeform27CRLPreinsertionAssetWrapper *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  unint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  CRLImageResamplingOperation *v25;
  void *v26;
  unint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v33;
  double v34;
  double v35;
  void *v36;
  void *v37;
  _TtC8Freeform27CRLPreinsertionAssetWrapper *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v43;

  v6 = a1;
  v7 = a2;
  if ((a4 & 1) != 0 || !sub_100410348(v6))
  {
    v8 = -[CRLPreinsertionAssetWrapper initWithAlreadyInsertedAsset:owner:]([_TtC8Freeform27CRLPreinsertionAssetWrapper alloc], "initWithAlreadyInsertedAsset:owner:", v6, v7);
    v9 = objc_autoreleasePoolPush();
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[CRLImageProviderPool sharedPool](CRLImageProviderPool, "sharedPool"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "temporaryProviderForAsset:shouldValidate:", v6, 1));

    v13 = objc_opt_class(CRLBitmapImageProvider, v12);
    v14 = sub_100221D0C(v13, v11);
    v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    objc_msgSend(v11, "naturalSize");
    if (v15)
    {
      v18 = v16;
      v19 = v17;
      if (qword_101415860 != -1)
        dispatch_once(&qword_101415860, &stru_10125BD40);
      v20 = atomic_load(&qword_1013DC4B0);
      v21 = sub_100062E58(v18, v19, (double)v20);
      v22 = sub_100061064(v21);
      v24 = v23;
      v25 = -[CRLImageResamplingOperation initWithImageProvider:desiredSize:assetOwner:]([CRLImageResamplingOperation alloc], "initWithImageProvider:desiredSize:assetOwner:", v11, v7, v22, v23);
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "filename"));
      -[CRLImageResamplingOperation setDisplayName:](v25, "setDisplayName:", v26);

      if ((sub_10040ED28(v6) & 1) == 0)
      {
        if (qword_101415860 != -1)
          dispatch_once(&qword_101415860, &stru_10125BD40);
        v27 = atomic_load(&qword_1013DC4B0);
        v28 = sub_100062E58(v22, v24, (double)v27);
        v30 = sub_100061064(v28);
        v31 = v29;
        if (v30 == v22 && v29 == v24)
        {
          v33 = 66108864.0 / (double)(unint64_t)objc_msgSend(v6, "length");
          if (v33 < 1.0)
          {
            v34 = sub_100062E58(v22, v24, v24 * v22 * v33 * 0.98);
            v30 = sub_100061064(v34);
            v31 = v35;
          }
        }
        -[CRLImageResamplingOperation setDesiredAlternateSizeIfConvertedToPNG:](v25, "setDesiredAlternateSizeIfConvertedToPNG:", v30, v31);
      }
      v36 = (void *)objc_claimAutoreleasedReturnValue(-[CRLImageResamplingOperation performResampleOperationWithResampleOptions:bitmapContextOptions:](v25, "performResampleOperationWithResampleOptions:bitmapContextOptions:", 18, 9));
      v37 = v36;
      if (v36)
      {
        v38 = v36;

        v8 = v38;
      }
      else
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        v43 = v9;
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10125BEE0);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E31058();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10125BF00);
        v39 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100DE7468(v39);
        v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CRLPreinsertionAssetWrapper *_CRLConvertImageCRLAssetMakeSafeForiOS(CRLAsset *__strong, __strong id<CRLAssetOwning>, BOOL, BOOL)"));
        v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v40, v41, 554, 0, "invalid nil value for '%{public}s'", "convertedData");

        v9 = v43;
      }

    }
    objc_autoreleasePoolPop(v9);
  }
  else
  {
    v8 = -[CRLPreinsertionAssetWrapper initWithAlreadyInsertedAsset:owner:]([_TtC8Freeform27CRLPreinsertionAssetWrapper alloc], "initWithAlreadyInsertedAsset:owner:", v6, v7);
  }

  return v8;
}

uint64_t sub_100410348(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "type"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "identifier"));
  v8[0] = CFSTR("com.sgi.sgi-image");
  v8[1] = CFSTR("com.apple.macpaint-image");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v8, 2));
  v5 = objc_msgSend(v3, "crl_conformsToAnyUTI:", v4);

  if ((v5 & 1) != 0)
    v6 = 0;
  else
    v6 = sub_10040ED28(v1);

  return v6;
}

void sub_100410438(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100410468(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_TtC8Freeform27CRLPreinsertionAssetWrapper *sub_100410498(void *a1, void *a2)
{
  return sub_10040FF64(a1, a2, 0, 0);
}

_TtC8Freeform27CRLPreinsertionAssetWrapper *sub_1004104A4(void *a1, void *a2)
{
  return sub_10040FF64(a1, a2, 0, 1);
}

uint64_t sub_1004104B0(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  CFStringRef v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  _QWORD v13[4];

  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "length") < 0x4000001)
  {
    v11 = 1;
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "type"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "identifier"));
    v4 = sub_1000304A4();
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v13[0] = v5;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePNG, "identifier"));
    v13[1] = v6;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeTIFF, "identifier"));
    v13[2] = v7;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeGIF, "identifier"));
    v13[3] = v8;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v13, 4));
    v10 = objc_msgSend(v3, "crl_conformsToAnyUTI:", v9);

    v11 = v10 ^ 1;
  }

  return v11;
}

uint64_t sub_100410614(void *a1, CGImageSource *a2)
{
  CFStringRef Type;
  void *v4;
  CFStringRef v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;

  if ((unint64_t)objc_msgSend(a1, "length") < 0x4000001)
    return 1;
  Type = CGImageSourceGetType(a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(Type);
  if (v4)
  {
    v5 = sub_1000304A4();
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v4, "crl_conformsToUTI:", v6);

    v8 = v7 ^ 1;
  }
  else
  {
    v8 = 1;
  }

  return v8;
}

double sub_10041069C(CGPDFPage *a1, uint64_t a2, CGFloat *a3)
{
  return sub_1004106A4(a1, a2, a3, 0);
}

double sub_1004106A4(CGPDFPage *a1, uint64_t a2, CGFloat *a3, int a4)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  double MaxX;
  CGFloat MaxY;
  CGFloat v22;
  CGFloat v23;
  int RotationAngle;
  int v25;
  double v26;
  __int128 v27;
  double v28;
  void *v29;
  void *v30;
  void *v31;
  CGFloat v32;
  double MinY;
  double MinX;
  CGRect BoxRect;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  if (a1)
  {
    BoxRect = CGPDFPageGetBoxRect(a1, kCGPDFMediaBox);
    x = BoxRect.origin.x;
    y = BoxRect.origin.y;
    width = BoxRect.size.width;
    height = BoxRect.size.height;
    v37 = CGPDFPageGetBoxRect(a1, kCGPDFCropBox);
    v12 = v37.origin.x;
    v13 = v37.origin.y;
    v14 = v37.size.width;
    v15 = v37.size.height;
    v46 = CGPDFPageGetBoxRect(a1, kCGPDFArtBox);
    v38.origin.x = x;
    v38.origin.y = y;
    v38.size.width = width;
    v38.size.height = height;
    v47 = CGRectIntersection(v38, v46);
    v39.origin.x = v12;
    v39.origin.y = v13;
    v39.size.width = v14;
    v39.size.height = v15;
    v40 = CGRectIntersection(v39, v47);
    v16 = v40.origin.x;
    v17 = v40.origin.y;
    v18 = v40.size.width;
    v19 = v40.size.height;
    MinX = CGRectGetMinX(v40);
    v41.origin.x = v16;
    v41.origin.y = v17;
    v41.size.width = v18;
    v41.size.height = v19;
    MinY = CGRectGetMinY(v41);
    v42.origin.x = v16;
    v42.origin.y = v17;
    v42.size.width = v18;
    v42.size.height = v19;
    MaxX = CGRectGetMaxX(v42);
    v43.origin.x = v16;
    v43.origin.y = v17;
    v43.size.width = v18;
    v43.size.height = v19;
    MaxY = CGRectGetMaxY(v43);
    v44.origin.x = v16;
    v44.origin.y = v17;
    v44.size.width = v18;
    v44.size.height = v19;
    v22 = CGRectGetWidth(v44);
    v45.origin.x = v16;
    v45.origin.y = v17;
    v45.size.width = v18;
    v45.size.height = v19;
    v23 = CGRectGetHeight(v45);
    RotationAngle = CGPDFPageGetRotationAngle(a1);
    if (a4)
      v25 = 0;
    else
      v25 = RotationAngle;
    if (v25 != 90)
    {
      v26 = 0.0;
      if (v25 == 180)
      {
        v27 = xmmword_100EEE790;
        v28 = MaxY;
      }
      else
      {
        if (v25 == 270)
        {
          v27 = xmmword_100EED720;
          v28 = -MinX;
          v26 = -1.0;
          MaxX = MaxY;
          goto LABEL_19;
        }
        MaxX = -MinX;
        v27 = xmmword_100EF00B0;
        v28 = -MinY;
      }
      v32 = v22;
      if (!a2)
      {
LABEL_21:
        if (a3)
        {
          *a3 = v32;
          a3[1] = v23;
        }
        return v16;
      }
LABEL_20:
      *(_OWORD *)a2 = v27;
      *(double *)(a2 + 16) = v26;
      *(_QWORD *)(a2 + 24) = v27;
      *(double *)(a2 + 32) = MaxX;
      *(double *)(a2 + 40) = v28;
      goto LABEL_21;
    }
    v27 = xmmword_100EF00A0;
    v28 = MaxX;
    MaxX = -MinY;
    v26 = 1.0;
LABEL_19:
    v32 = v23;
    v23 = v22;
    if (!a2)
      goto LABEL_21;
    goto LABEL_20;
  }
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10125BF20);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E310E4();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10125BF40);
  v29 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "CGRect CRLComputeBoxTransformAndSizeForPDFPageIgnoringAngle(CGPDFPageRef, CGAffineTransform *, CGSize *, BOOL)"));
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v30, v31, 657, 0, "invalid nil value for '%{public}s'", "page");

  return CGRectZero.origin.x;
}

void sub_100410A10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100410A40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

__n128 sub_100410A70@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>, double a3@<D0>, double a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>, CGFloat a7@<D4>, CGFloat a8@<D5>)
{
  __n128 v16;
  __n128 v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat MinY;
  double Width;
  double Height;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 result;
  CGFloat tx;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGAffineTransform v35;
  CGAffineTransform v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  memset(&v36, 0, sizeof(v36));
  CGAffineTransformMakeTranslation(&v36, a3 * -0.5, a4 * -0.5);
  v16 = a1[1];
  *(__n128 *)&t1.a = *a1;
  *(__n128 *)&t1.c = v16;
  *(__n128 *)&t1.tx = a1[2];
  t2 = v36;
  CGAffineTransformConcat(&v35, &t1, &t2);
  v17 = *(__n128 *)&v35.c;
  *a1 = *(__n128 *)&v35.a;
  a1[1] = v17;
  a1[2] = *(__n128 *)&v35.tx;
  v18 = a5;
  v17.n128_f64[0] = a6;
  v19 = a7;
  v20 = a8;
  tx = CGRectGetMinX(*(CGRect *)((char *)&v17 - 8));
  v37.origin.x = a5;
  v37.origin.y = a6;
  v37.size.width = a7;
  v37.size.height = a8;
  MinY = CGRectGetMinY(v37);
  v38.origin.x = a5;
  v38.origin.y = a6;
  v38.size.width = a7;
  v38.size.height = a8;
  Width = CGRectGetWidth(v38);
  v39.origin.x = a5;
  v39.origin.y = a6;
  v39.size.width = a7;
  v39.size.height = a8;
  Height = CGRectGetHeight(v39);
  CGAffineTransformMakeScale(&v35, Width / a3, Height / a4);
  v36 = v35;
  v24 = a1[1];
  *(__n128 *)&t1.a = *a1;
  *(__n128 *)&t1.c = v24;
  *(__n128 *)&t1.tx = a1[2];
  t2 = v35;
  CGAffineTransformConcat(&v35, &t1, &t2);
  v25 = *(__n128 *)&v35.c;
  *a1 = *(__n128 *)&v35.a;
  a1[1] = v25;
  a1[2] = *(__n128 *)&v35.tx;
  CGAffineTransformMakeTranslation(&v35, Width * 0.5, Height * 0.5);
  v36 = v35;
  v26 = a1[1];
  *(__n128 *)&t1.a = *a1;
  *(__n128 *)&t1.c = v26;
  *(__n128 *)&t1.tx = a1[2];
  t2 = v35;
  CGAffineTransformConcat(&v35, &t1, &t2);
  v27 = *(__n128 *)&v35.c;
  *a1 = *(__n128 *)&v35.a;
  a1[1] = v27;
  a1[2] = *(__n128 *)&v35.tx;
  CGAffineTransformMakeTranslation(&v35, tx, MinY);
  v36 = v35;
  v28 = a1[1];
  *(__n128 *)&t1.a = *a1;
  *(__n128 *)&t1.c = v28;
  *(__n128 *)&t1.tx = a1[2];
  t2 = v35;
  CGAffineTransformConcat(&v35, &t1, &t2);
  v29 = *(__n128 *)&v35.c;
  *a1 = *(__n128 *)&v35.a;
  a1[1] = v29;
  a1[2] = *(__n128 *)&v35.tx;
  v30 = a1[1];
  *a2 = *a1;
  a2[1] = v30;
  result = a1[2];
  a2[2] = result;
  return result;
}

void sub_100410CB4(uint64_t a1, double a2)
{
  _QWORD v4[6];

  sub_10040F974(a1, 0, 0, 0, 0, 1.0);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100410D40;
  v4[3] = &unk_10125BFA0;
  v4[4] = a1;
  *(double *)&v4[5] = a2;
  sub_100412E70(1, 1, v4);
}

void sub_100410D40(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  void *v8;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
  if (!v3)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BF60);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E31170();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125BF80);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLSetCGContextInfoForShadowContext(CGContextRef, CGFloat)_block_invoke"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 795, 0, "invalid nil value for '%{public}s'", "dict");

  }
  v7 = *(double *)(a1 + 40);
  *(float *)&v7 = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v7));
  objc_msgSend(v3, "setValue:forKey:", v8, CFSTR("CRLCGContextInfoDictionaryKeyShadowedLayoutAngle"));

}

void sub_100410EE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100410F18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100410F48(uint64_t a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;
  uint64_t v6;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100410FC4;
  v4[3] = &unk_10125BFE8;
  v5 = a2;
  v6 = a1;
  v3 = v5;
  sub_100412E70(1, 1, v4);

}

void sub_100410FC4(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v3));
  if (!v5)
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", 1));
  v6 = v5;
  objc_msgSend(v5, "setValue:forKey:", *(_QWORD *)(a1 + 32), CFSTR("CRLCGContextInfoDictionaryKeyPdfTagger"));
  objc_msgSend(v4, "setObject:forKey:", v6, *(_QWORD *)(a1 + 40));

}

void sub_10041104C(uint64_t a1, char a2)
{
  _QWORD v2[5];
  char v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1004110A8;
  v2[3] = &unk_10125BFC0;
  v2[4] = a1;
  v3 = a2;
  sub_100412E70(1, 1, v2);
}

void sub_1004110A8(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v3));
  if (!v5)
    v5 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", 1));
  v7 = (id)v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  objc_msgSend(v7, "setValue:forKey:", v6, CFSTR("CRLCGContextInfoDictionaryKeyIsSixChannelMultiplyContext"));

  objc_msgSend(v4, "setObject:forKey:", v7, *(_QWORD *)(a1 + 32));
}

void sub_100411150(uint64_t a1, char a2)
{
  _QWORD v2[5];
  char v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1004111AC;
  v2[3] = &unk_10125BFC0;
  v2[4] = a1;
  v3 = a2;
  sub_100412E70(1, 1, v2);
}

void sub_1004111AC(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v3));
  if (!v5)
    v5 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", 1));
  v7 = (id)v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  objc_msgSend(v7, "setValue:forKey:", v6, CFSTR("CRLCGContextInfoDictionaryKeyIsSixChannelLinearDodgeContext"));

  objc_msgSend(v4, "setObject:forKey:", v7, *(_QWORD *)(a1 + 32));
}

void sub_100411254(uint64_t a1, char a2)
{
  _QWORD v2[5];
  char v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1004112B0;
  v2[3] = &unk_10125BFC0;
  v2[4] = a1;
  v3 = a2;
  sub_100412E70(1, 1, v2);
}

void sub_1004112B0(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v3));
  if (!v5)
    v5 = objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", 1));
  v7 = (id)v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  objc_msgSend(v7, "setValue:forKey:", v6, CFSTR("CRLCGContextInfoDictionaryKeyIsSixChannelBlendingSuppressed"));

  objc_msgSend(v4, "setObject:forKey:", v7, *(_QWORD *)(a1 + 32));
}

void sub_100411358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, double a7, double a8, double a9)
{
  id v18;
  void *v19;
  void *v20;
  void *v21;
  double v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  _QWORD v29[4];
  id v30;
  uint64_t v31;

  v18 = objc_alloc((Class)NSMutableDictionary);
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a2));
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a3));
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a4));
  *(float *)&v22 = a7;
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v22));
  if (a5)
    v24 = objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", a8, a9));
  else
    v24 = objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v25 = (void *)v24;
  v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", a6));
  v27 = objc_msgSend(v18, "initWithObjectsAndKeys:", v19, CFSTR("CRLCGContextInfoDictionaryKeyIsPrintContext"), v20, CFSTR("CRLCGContextInfoDictionaryKeyIsPDFContext"), v21, CFSTR("CRLCGContextInfoDictionaryKeyIsCALayerContext"), v23, CFSTR("CRLCGContextInfoDictionaryKeyAssociatedScreenScale"), v25, CFSTR("CRLCGContextInfoDictionaryKeyTileOffset"), v26, CFSTR("CRLCGContextInfoDictionaryKeyHasBackgroundsSuppressed"), 0);

  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_10041153C;
  v29[3] = &unk_10125BFE8;
  v30 = v27;
  v31 = a1;
  v28 = v27;
  sub_100412E70(1, 1, v29);

}

void sub_10041153C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v6 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v4 = *(void **)(a1 + 32);
  if (v3)
  {
    v5 = v3;
    objc_msgSend(v3, "addEntriesFromDictionary:", v4);
  }
  else
  {
    v5 = v4;
  }
  objc_msgSend(v6, "setObject:forKey:", v5, *(_QWORD *)(a1 + 40));

}

id sub_1004115A8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "removeObjectForKey:", *(_QWORD *)(a1 + 32));
}

const __CFString *sub_1004115B4(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("invalid CRLLineCapStyle");
  else
    return *(&off_10125C168 + a1);
}

const __CFString *sub_1004115D8(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("invalid CRLLineJoinStyle");
  else
    return *(&off_10125C180 + a1);
}

double sub_1004115FC(uint64_t a1)
{
  double v1;
  _QWORD v3[6];
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = (double *)&v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1004116AC;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = v5[3];
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100411694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004116AC(uint64_t a1, void *a2)
{
  void *v3;
  float v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyShadowedLayoutAngle")));
  objc_msgSend(v3, "floatValue");
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v4;

}

uint64_t sub_100411714(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1004117BC;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1004117A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004117BC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyIsReflection")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

id sub_100411820(uint64_t a1)
{
  id v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = sub_1004118EC;
  v8 = sub_1004118FC;
  v9 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100411904;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1004118D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1004118EC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1004118FC(uint64_t a1)
{

}

void sub_100411904(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyPdfTagger")));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

uint64_t sub_100411964(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100411A0C;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1004119F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100411A0C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyIsSixChannelMultiplyContext")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

uint64_t sub_100411A70(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100411B18;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100411B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100411B18(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyIsSixChannelLinearDodgeContext")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

uint64_t sub_100411B7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100411C24;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100411C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100411C24(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyIsSixChannelBlendingSuppressed")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

double sub_100411C88(uint64_t a1)
{
  double v1;
  _QWORD v3[6];
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = (double *)&v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100411D38;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = v5[3];
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100411D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100411D38(uint64_t a1, void *a2)
{
  void *v3;
  float v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyLayoutAngle")));
  objc_msgSend(v3, "floatValue");
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v4;

}

uint64_t sub_100411DA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100411E48;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100411E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100411E48(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyIsPrintContext")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

uint64_t sub_100411EAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100411F54;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100411F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100411F54(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyHasBackgroundsSuppressed")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

uint64_t sub_100411FB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100412060;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100412048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100412060(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyIsPDFContext")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

uint64_t sub_1004120C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10041216C;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100412154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10041216C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyIsCALayerContext")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

double sub_1004121D0(uint64_t a1)
{
  double v1;
  double v2;
  _QWORD v4[6];
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = (double *)&v5;
  v7 = 0x2020000000;
  v8 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100412298;
  v4[3] = &unk_10125C030;
  v4[4] = &v5;
  v4[5] = a1;
  sub_100412E70(0, 0, v4);
  v1 = v6[3];
  if (v1 == 0.0)
  {
    +[UIScreen crl_screenScale](UIScreen, "crl_screenScale");
    v1 = v2;
  }
  _Block_object_dispose(&v5, 8);
  return v1;
}

void sub_100412280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100412298(uint64_t a1, void *a2)
{
  void *v3;
  float v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyAssociatedScreenScale")));
  objc_msgSend(v3, "floatValue");
  *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v4;

}

void sub_100412300(void *a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100412398;
  v5[3] = &unk_10125C058;
  v6 = a1;
  v7 = a2;
  v3 = v7;
  v4 = v6;
  sub_100412E70(1, 0, v5);

}

void sub_100412398(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
  if (!v3)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend(v6, "setObject:forKey:", v3, *(_QWORD *)(a1 + 32));
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "valueForKey:", *(_QWORD *)(a1 + 40)));
  if (!v4)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    objc_msgSend(v3, "setValue:forKey:", v4, *(_QWORD *)(a1 + 40));
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  objc_msgSend(v4, "crl_push:", v5);

}

void sub_100412470(void *a1)
{
  sub_100412300(a1, CFSTR("CRLCGContextInfoDictionaryKeyRenderedWithMissingData"));
}

void sub_10041247C(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v7)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100412540;
    v8[3] = &unk_10125C080;
    v9 = v5;
    v10 = v6;
    v11 = v7;
    sub_100412E70(1, 0, v8);

  }
}

void sub_100412540(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", a1[4]));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "valueForKey:", a1[5]));
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v10;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v10 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)v8), "addObject:", a1[6]);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v6);
  }

}

void sub_100412654(void *a1, void *a2)
{
  id v3;
  id v4;

  v3 = a2;
  sub_10041247C(a1, CFSTR("CRLCGContextInfoDictionaryKeyRenderedWithMissingData"), v3);
  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSThread currentThread](NSThread, "currentThread"));
  sub_10041247C(v4, CFSTR("CRLCGContextInfoDictionaryKeyThreadRenderedWithMissingData"), v3);

}

id sub_1004126C0(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  _QWORD v9[4];
  id v10;
  id v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t);
  id v18;

  v3 = a1;
  v4 = a2;
  v13 = 0;
  v14 = &v13;
  v15 = 0x3032000000;
  v16 = sub_1004118EC;
  v17 = sub_1004118FC;
  v18 = 0;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1004127D4;
  v9[3] = &unk_10125C0E8;
  v5 = v3;
  v10 = v5;
  v6 = v4;
  v11 = v6;
  v12 = &v13;
  sub_100412E70(1, 0, v9);
  v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

void sub_1004127BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004127D4(_QWORD *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v3 = a2;
  v5 = objc_opt_class(NSMutableDictionary, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", a1[4]));

  v7 = sub_100221D0C(v5, v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", a1[5]));
  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "crl_pop"));
  v11 = *(_QWORD *)(a1[6] + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

  if (!*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125C0A0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E311FC();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125C0C0);
    v13 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSSet<CRLAsset *> *CRLCGContextStopWatchingDatasNeedDownloadWithObservationContext(__strong id, NSString *__strong)_block_invoke"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLRenderingUtility.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v14, v15, 1175, 0, "invalid nil value for '%{public}s'", "datas");

  }
  if (!objc_msgSend(v9, "count"))
    objc_msgSend(v8, "removeObjectForKey:", a1[5]);

}

void sub_1004129D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100412A08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100412A38(void *a1)
{
  return sub_1004126C0(a1, CFSTR("CRLCGContextInfoDictionaryKeyRenderedWithMissingData"));
}

void sub_100412A44(uint64_t a1, char a2)
{
  _QWORD v2[5];
  char v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100412AA0;
  v2[3] = &unk_10125BFC0;
  v2[4] = a1;
  v3 = a2;
  sub_100412E70(1, 1, v2);
}

void sub_100412AA0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
  if (!v3)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend(v5, "setObject:forKey:", v3, *(_QWORD *)(a1 + 32));
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 40)));
  objc_msgSend(v3, "setValue:forKey:", v4, CFSTR("CRLCGContextInfoDictionaryKeyPrefersRasterRendering"));

}

uint64_t sub_100412B3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100412BE4;
  v3[3] = &unk_10125C030;
  v3[4] = &v4;
  v3[5] = a1;
  sub_100412E70(0, 0, v3);
  v1 = *((unsigned __int8 *)v5 + 24);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100412BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100412BE4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("CRLCGContextInfoDictionaryKeyPrefersRasterRendering")));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v3, "BOOLValue");

}

id sub_100412C48(CGImage *a1, void *a2)
{
  id v3;
  void *v4;
  UTType *v5;
  uint64_t v6;
  __CFString *v7;
  const __CFURL *v8;
  CGImageDestination *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "pathExtension"));
  v5 = UTTypePNG;
  if (v4 && objc_msgSend(v4, "length"))
  {
    v6 = objc_claimAutoreleasedReturnValue(+[UTType typeWithFilenameExtension:](UTType, "typeWithFilenameExtension:", v4));

    v5 = (UTType *)v6;
  }
  v7 = (__CFString *)objc_claimAutoreleasedReturnValue(-[UTType identifier](v5, "identifier"));
  v8 = (const __CFURL *)objc_msgSend(objc_alloc((Class)NSURL), "initFileURLWithPath:", v3);
  v9 = CGImageDestinationCreateWithURL(v8, v7, 1uLL, 0);

  if (v9)
  {
    CGImageDestinationAddImage(v9, a1, 0);
    if (!CGImageDestinationFinalize(v9))
    {
      if (qword_10147E368 != -1)
        dispatch_once(&qword_10147E368, &stru_10125C108);
      v10 = off_1013D9068;
      if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
        sub_100E31288((uint64_t)v3, v10, v11, v12, v13, v14, v15, v16);

      v3 = 0;
    }
    CFRelease(v9);
  }
  else
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_10125C128);
    v17 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E31288((uint64_t)v3, v17, v18, v19, v20, v21, v22, v23);

    v3 = 0;
  }

  return v3;
}

void sub_100412E10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100412E40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100412E70(int a1, int a2, void *a3)
{
  void (**v5)(void);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(void);

  v5 = a3;
  if (v5)
  {
    v9 = v5;
    if (qword_101415938 != -1)
      dispatch_once(&qword_101415938, &stru_10125C148);
    if (a1)
    {
      pthread_rwlock_wrlock(&stru_101415870);
      v6 = qword_101415868;
      if (!qword_101415868 && a2)
      {
        v7 = objc_claimAutoreleasedReturnValue(+[NSMapTable weakToStrongObjectsMapTable](NSMapTable, "weakToStrongObjectsMapTable"));
        v8 = (void *)qword_101415868;
        qword_101415868 = v7;

        v6 = qword_101415868;
      }
    }
    else
    {
      pthread_rwlock_rdlock(&stru_101415870);
      v6 = qword_101415868;
    }
    if (v6)
      v9[2]();
    pthread_rwlock_unlock(&stru_101415870);
    v5 = v9;
  }

}

void sub_100412F3C(id a1)
{
  pthread_rwlock_init(&stru_101415870, 0);
}

id sub_100413244(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setStatus:", 2);
}

void sub_1004134A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004134D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100413AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v14 - 176), 8);
  _Block_object_dispose((const void *)(v14 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100413B44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100413B74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CGImage *sub_100413BA4(_QWORD *a1)
{
  CGImage *result;

  result = *(CGImage **)(a1[4] + 32);
  if (result)
  {
    result = CGImageRetain(result);
    *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) = result;
    *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = *(_QWORD *)(a1[4] + 48);
  }
  return result;
}

uint64_t sub_100413BF0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 16) != 0;
  return result;
}

void sub_100413EC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100413EF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041410C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041413C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100414458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  uint64_t v15;
  va_list va;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a13);
  va_start(va, a13);
  v15 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100414494(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004144C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004144F4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  void *v11;
  void *v12;

  v2 = *(_QWORD **)(a1 + 32);
  v3 = v2[4];
  if (v3)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v3;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "hasBakedMask");
  }
  else
  {
    objc_msgSend(v2, "p_desiredSizedImageSize");
    v5 = v4;
    v7 = v6;
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_validatedBitmapImageProvider"));
    v12 = v8;
    if (v8)
    {
      v9 = objc_msgSend(*(id *)(a1 + 32), "p_canDrawThumbnailAsSizedImage");
      v8 = v12;
      if ((v9 & 1) == 0)
      {
        if (*(_BYTE *)(a1 + 80))
          v10 = objc_msgSend(v12, "CGImageForSize:inContext:orContentsScaleProvider:", 0, *(_QWORD *)(a1 + 40), v5, v7);
        else
          v10 = objc_msgSend(v12, "CGImageOfAnySize");
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v10;
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(v12, "orientation");
        v8 = v12;
      }
    }
    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_validatedThumbnailImageProvider"));
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v11, "CGImageOfLargestSafeSize");
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(v11, "orientation");
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 0;

      v8 = v12;
    }

  }
}

void sub_10041482C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041485C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004149A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1004149C0(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 32) != 0;
  return result;
}

void sub_100414BF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100414C20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100414E5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100414E8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004151C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004151F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

double *sub_1004152B8(double *result)
{
  double *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v1 = result;
  v2 = *((_QWORD *)result + 4);
  if (!*(_QWORD *)(v2 + 32)
    || (result = *(double **)(v2 + 40)) == 0
    || (v3 = v1[6], v3 > 100.0) && (result = (double *)objc_msgSend(result, "size"), v3 > v4 + v4)
    || (v5 = v1[7], v5 > 100.0)
    && (result = (double *)objc_msgSend(*(id *)(*((_QWORD *)v1 + 4) + 40), "size"), v5 > v6 + v6))
  {
    *(_BYTE *)(*(_QWORD *)(*((_QWORD *)v1 + 5) + 8) + 24) = 1;
  }
  return result;
}

void sub_100415454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10041546C(uint64_t a1)
{
  id result;
  unsigned int v3;
  unsigned int v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v13;
  void *v14;

  result = *(id *)(a1 + 32);
  if (*((_QWORD *)result + 4))
  {
    if (!*((_QWORD *)result + 5))
      goto LABEL_5;
    result = objc_msgSend(*(id *)(a1 + 40), "isEqualToSizedImageDescription:");
    if ((result & 1) != 0)
      return result;
    result = *(id *)(a1 + 32);
    if (*((_QWORD *)result + 4))
    {
LABEL_5:
      v3 = objc_msgSend(*((id *)result + 5), "hasBakedMask");
      v4 = objc_msgSend(*(id *)(a1 + 40), "hasBakedMask");
      result = *(id *)(a1 + 32);
      if (v3 != v4)
      {
        objc_msgSend(result, "p_invalidateSizedImageOnAccessQueue");
        result = *(id *)(a1 + 32);
      }
    }
  }
  if (*((_QWORD *)result + 2))
  {
    v5 = objc_msgSend(*((id *)result + 2), "status");
    result = *(id *)(a1 + 32);
    if (!v5)
    {
      objc_msgSend(*((id *)result + 2), "desiredSize");
      v7 = v6;
      v9 = v8;
      objc_msgSend(*(id *)(a1 + 40), "size");
      if (v7 != v11 || v9 != v10)
        return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setStatus:", 1);
      v13 = *(void **)(a1 + 48);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "provider"));

      if (v13 != v14)
        return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setStatus:", 1);
      result = *(id *)(a1 + 32);
    }
  }
  if (!*((_QWORD *)result + 2))
  {
    result = objc_msgSend(result, "p_prepareToGenerateSizedImageWithDescription:", *(_QWORD *)(a1 + 40));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  }
  return result;
}

void sub_100415774(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004157A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100415A80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100415AB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100415E80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100415EB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100415EE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100415F10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041616C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041619C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004161CC(id *a1)
{
  id v2;
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;

  if ((objc_msgSend(a1[4], "imageDrawingHelperShouldRetryGeneratingSizedImageLater:", a1[5]) & 1) != 0)
  {
    _objc_msgSend(a1[6], "setStatus:", 1);
  }
  else if (objc_msgSend(a1[5], "p_generateSizedImage:", a1[6]))
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100416278;
    v4[3] = &unk_10122D3D8;
    v2 = a1[4];
    v3 = a1[5];
    v5 = v2;
    v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

  }
}

id sub_100416278(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "imageDrawingHelper:didGenerateSizedImageSynchronously:", *(_QWORD *)(a1 + 40), 0);
}

void sub_100416354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_10041636C(_QWORD *result)
{
  uint64_t v1;

  v1 = result[5];
  if (result[4] == *(_QWORD *)(v1 + 16))
  {
    *(_BYTE *)(v1 + 24) = 1;
    *(_BYTE *)(*(_QWORD *)(result[6] + 8) + 24) = 1;
  }
  return result;
}

void sub_100416438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100416450(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  CGImage *v5;
  CGImage *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  TSDSizedImageDescription *v18;
  double v19;
  double v20;
  TSDSizedImageDescription *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 16);
  if (v3 && *(_BYTE *)(v2 + 24))
  {
    v4 = objc_msgSend(v3, "status");
    if (v4 != (id)1)
    {
      if (v4)
        goto LABEL_13;
      v5 = (CGImage *)objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "sizedImage");
      if (!v5)
        goto LABEL_13;
      v6 = v5;
      objc_msgSend(*(id *)(a1 + 32), "p_desiredSizedImageSize");
      v8 = v7;
      v10 = v9;
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "desiredSize");
      if (v8 == v12 && v10 == v11)
      {
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_imageProvider"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "provider"));

        if (v14 == v15)
        {
          CGImageRelease(*(CGImageRef *)(*(_QWORD *)(a1 + 32) + 32));
          *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32) = CGImageRetain(v6);
          v18 = [TSDSizedImageDescription alloc];
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "desiredSize");
          v21 = -[TSDSizedImageDescription initWithSize:isWideGamut:hasBakedMask:](v18, "initWithSize:isWideGamut:hasBakedMask:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "wideGamut"), objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "sizedImageHasMask"), v19, v20);
          v22 = *(_QWORD *)(a1 + 32);
          v23 = *(void **)(v22 + 40);
          *(_QWORD *)(v22 + 40) = v21;

          *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48) = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "sizedImageOrientation");
          if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "hasBakedMask")
            && !*(_QWORD *)(*(_QWORD *)(a1 + 32) + 56))
          {
            +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_10125C568);
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
              sub_100E31BD8();
            if (qword_10147E370 != -1)
              dispatch_once(&qword_10147E370, &stru_10125C588);
            v24 = off_1013D9070;
            if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
              sub_100DE7468(v24);
            v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageRepDrawingHelper p_takeSizedImageFromStateIfReady]_block_invoke"));
            v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageRepDrawingHelper.m"));
            +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v25, v26, 619, 0, "invalid nil value for '%{public}s'", "_sizedImageMaskPath");

          }
          goto LABEL_13;
        }
      }
    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
LABEL_13:
    v16 = *(_QWORD *)(a1 + 32);
    v17 = *(void **)(v16 + 16);
    *(_QWORD *)(v16 + 16) = 0;

    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 24) = 0;
  }
}

void sub_10041671C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041674C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004167FC(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "p_desiredSizedImageDescription"));
  objc_msgSend(v1, "p_prepareToGenerateSizedImageWithDescription:", v2);

}

void sub_1004168EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CGImageRef sub_100416904(uint64_t a1)
{
  CGImageRef result;

  result = CGImageRetain(*(CGImageRef *)(*(_QWORD *)(a1 + 32) + 32));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

id sub_100416990(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_invalidateSizedImageOnAccessQueue");
}

id sub_1004169F0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id result;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 16);
  if (v3)
  {
    if ((objc_msgSend(v3, "sizedImageHasMask") & 1) != 0)
      return objc_msgSend(*(id *)(a1 + 32), "p_invalidateSizedImageOnAccessQueue");
    v2 = *(_QWORD *)(a1 + 32);
  }
  result = *(id *)(v2 + 40);
  if (result)
  {
    result = objc_msgSend(result, "hasBakedMask");
    if ((_DWORD)result)
      return objc_msgSend(*(id *)(a1 + 32), "p_invalidateSizedImageOnAccessQueue");
  }
  return result;
}

void sub_100416C14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100416C44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100416C74(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;

  v2 = *(_QWORD *)(a1 + 32);
  if ((*(_QWORD *)(v2 + 32) || *(_QWORD *)(v2 + 16))
    && ((objc_msgSend(*(id *)(v2 + 40), "hasBakedMask") & 1) != 0
     || (v3 = *(void **)(*(_QWORD *)(a1 + 32) + 16)) != 0 && objc_msgSend(v3, "maskPath")))
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (*(_QWORD *)(v4 + 32)
      || (v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v4, "p_validatedBitmapImageProvider")),
          objc_msgSend(v5, "orientation"),
          v5,
          v4 = *(_QWORD *)(a1 + 32),
          *(_QWORD *)(v4 + 32)))
    {
      objc_msgSend(*(id *)(v4 + 40), "size");
    }
    else
    {
      objc_msgSend(*(id *)(v4 + 16), "desiredSize");
    }
    v6 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    if (!v6)
      goto LABEL_24;
    v7 = v6;
    v8 = *(_QWORD *)(a1 + 32);
    if (!*(_QWORD *)(v8 + 56) && !objc_msgSend(*(id *)(v8 + 16), "maskPath"))
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125C5E8);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E31CF0();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125C608);
      v9 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLImageRepDrawingHelper invalidateSizedImageIfNeededForBakedMaskPathFromBlock:]_block_invoke"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageRepDrawingHelper.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 717, 0, "Need some mask path if comparing masks");

    }
    v12 = *(_QWORD *)(a1 + 32);
    v13 = *(id *)(v12 + 56);
    if (!v13)
      v13 = objc_msgSend(*(id *)(v12 + 16), "maskPath");
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPathWithCGPath:](CRLBezierPath, "bezierPathWithCGPath:", v13));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPathWithCGPath:](CRLBezierPath, "bezierPathWithCGPath:", v7));
    v16 = objc_msgSend(v14, "isEqual:", v15);

    if ((v16 & 1) == 0)
LABEL_24:
      objc_msgSend(*(id *)(a1 + 32), "p_invalidateSizedImageOnAccessQueue");
  }
}

void sub_100416ED0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100416F00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100417040(uint64_t a1)
{
  uint64_t v2;
  id result;

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v2 + 32))
  {
    result = 0;
  }
  else
  {
    result = *(id *)(v2 + 16);
    if (result)
      result = objc_msgSend(result, "sizedImageHasMask");
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_100417120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100417138(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "status") == (id)1)
  {
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(void **)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }
}

void sub_1004178DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004178F4(uint64_t a1, void *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "pureGeometry"));
  objc_msgSend(v8, "frame");
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 32) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;

}

void sub_100417E08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100417E38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100417E68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100417E98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041848C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004184BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004184EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041851C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100418CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_100418D20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100418D50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100418D80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100418DB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100418DE0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100418E10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100418E40(uint64_t a1, void *a2)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = objc_msgSend(a2, "minimumSize");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  return result;
}

void sub_100419B8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100419BB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100419BE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100419D70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100419DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CRLBrushStrokeDirectMetalRenderingContext;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_100419F6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10041A064(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10041A10C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10041A18C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10041A334(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10041A35C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041A38C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041A474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10041A7BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10041A84C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041A87C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041A8AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041A8DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041ACB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10041AD5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041AD8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041ADBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041ADEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041AF84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10041B044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10041B180(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10041B3C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10041B424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041B454(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,void *a30)
{
  void *v30;
  void *v31;

  _Unwind_Resume(a1);
}

void sub_10041C848(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C878(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C8A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C8D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C908(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C938(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C968(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C998(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C9C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041C9F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041CA28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041CA58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041D54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20,uint64_t a21,void *a22)
{
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_10041D748(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041D778(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041D7A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041D7D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041D808(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041D838(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041DDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_10041DEDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041DF0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041DF3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041DF6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041DF9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041DFCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10041E164(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10041FE50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,void *__p,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  void *v56;
  void *v57;

  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

void sub_1004200A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004200D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100420100(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100420130(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100420160(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100420190(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004201C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004201F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100421BC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,void *a47,void *a48,void *a49,void *a50,uint64_t a51,uint64_t a52,void *a53,void *a54,uint64_t a55,uint64_t a56,void *a57,void *a58)
{
  void *v58;
  void *v59;

  _Unwind_Resume(a1);
}

void sub_100421FF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422028(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422058(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  unint64_t v11;
  unint64_t v12;
  float *v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  _OWORD v21[5];
  uint64_t v22;
  _OWORD v23[5];
  uint64_t v24;
  _OWORD v25[5];
  uint64_t v26;
  _OWORD v27[5];
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v2 = a2[3];
  v49 = a2[2];
  v50 = v2;
  v51 = a2[4];
  v52 = *((_QWORD *)a2 + 10);
  v3 = a2[1];
  v47 = *a2;
  v48 = v3;
  v4 = *(__int128 *)((char *)a2 + 136);
  v43 = *(__int128 *)((char *)a2 + 120);
  v44 = v4;
  v45 = *(__int128 *)((char *)a2 + 152);
  v46 = *((_QWORD *)a2 + 21);
  v5 = *(__int128 *)((char *)a2 + 104);
  v41 = *(__int128 *)((char *)a2 + 88);
  v42 = v5;
  v6 = a2[14];
  v37 = a2[13];
  v38 = v6;
  v39 = a2[15];
  v40 = *((_QWORD *)a2 + 32);
  v7 = a2[12];
  v35 = a2[11];
  v36 = v7;
  v8 = *(__int128 *)((char *)a2 + 312);
  v31 = *(__int128 *)((char *)a2 + 296);
  v32 = v8;
  v33 = *(__int128 *)((char *)a2 + 328);
  v34 = *((_QWORD *)a2 + 43);
  v9 = *(__int128 *)((char *)a2 + 280);
  v29 = *(__int128 *)((char *)a2 + 264);
  v30 = v9;
  if (*(_QWORD *)(a1 + 32))
  {
    v11 = 0;
    do
    {
      v12 = *(_QWORD *)(a1 + 40) + v11;
      if (!*(_BYTE *)(a1 + 80))
        v12 = *(_QWORD *)(a1 + 48) + ~v12;
      v13 = (float *)(*(_QWORD *)(a1 + 56) + 32 * v12);
      v14 = v13[1];
      v15 = v13[2];
      v16 = v13[3];
      v17 = v13[4];
      v18 = v13[5];
      v19 = v13[6];
      v20 = v13[7];
      v27[2] = v49;
      v27[3] = v50;
      v27[4] = v51;
      v28 = v52;
      v27[0] = v47;
      v27[1] = v48;
      sub_1000B4E74((uint64_t)v27, v11, v14, v15);
      v25[2] = v43;
      v25[3] = v44;
      v25[4] = v45;
      v26 = v46;
      v25[0] = v41;
      v25[1] = v42;
      sub_1000B4E74((uint64_t)v25, v11, v16, v17);
      v23[2] = v37;
      v23[3] = v38;
      v23[4] = v39;
      v24 = v40;
      v23[0] = v35;
      v23[1] = v36;
      sub_1000B4E74((uint64_t)v23, v11, v18, v19);
      v21[2] = v31;
      v21[3] = v32;
      v21[4] = v33;
      v22 = v34;
      v21[0] = v29;
      v21[1] = v30;
      sub_1000B4E54((uint64_t)v21, v11++, v20);
    }
    while (v11 < *(_QWORD *)(a1 + 32));
  }
}

_QWORD *sub_10042223C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  v2 = (_QWORD *)(a1 + 56);
  v2[2] = 0;
  return sub_100424484(v2, *(const void **)(a2 + 56), *(_QWORD *)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 5);
}

void sub_100422258(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(_QWORD *)(a1 + 64) = v2;
    operator delete(v2);
  }
}

void sub_100422270(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004222A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422324(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100422410(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100422710(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004228FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100422924(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422954(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422B90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100422BC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422BF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422DE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100422E08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422E38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100422EE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_100422FE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042303C(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.freeform.CRLBrushStrokeMetalTextureQueue", 0);
  v2 = (void *)qword_101415960;
  qword_101415960 = (uint64_t)v1;

}

void sub_1004230A8(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.freeform.CRLBrushStrokeMetalShaderQueue", 0);
  v2 = (void *)qword_101415970;
  qword_101415970 = (uint64_t)v1;

}

void sub_1004231F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;

  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

uint64_t sub_100423218(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100423228(uint64_t a1)
{

}

void sub_100423230(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 512, 0, 16);
  v2 = (void *)qword_101415980;
  qword_101415980 = (uint64_t)v1;

}

void sub_100423268(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned int v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  Class v29;
  NSString *v30;
  void *v31;
  void *v32;
  Class v33;
  NSString *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  uint8_t buf[4];
  unsigned int v40;
  __int16 v41;
  const char *v42;
  __int16 v43;
  const char *v44;
  __int16 v45;
  int v46;
  __int16 v47;
  id v48;
  __int16 v49;
  void *v50;
  __int16 v51;
  id v52;
  __int16 v53;
  id v54;
  _QWORD v55[2];
  _QWORD v56[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_101415980, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
  if (!v2)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend((id)qword_101415980, "setObject:forKeyedSubscript:");
  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "strokeName"));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v3));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "strokeName"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBrushStrokeLoader storageForBrushStrokeNamed:](CRLBrushStrokeLoader, "storageForBrushStrokeNamed:", v7));

    if (!v8)
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125CF78);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E32F64();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125CF98);
      v9 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBrushStroke p_metalTextureForCurrentStrokeAndDevice:]_block_invoke"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBrushStroke.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v10, v11, 1752, 0, "invalid nil value for '%{public}s'", "storage");

    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "image"));
    if (v12)
    {
      v13 = objc_msgSend(objc_alloc((Class)MTKTextureLoader), "initWithDevice:", *(_QWORD *)(a1 + 32));
      v14 = objc_msgSend(v12, "CGImage");
      v55[0] = MTKTextureLoaderOptionOrigin;
      v55[1] = MTKTextureLoaderOptionSRGB;
      v56[0] = MTKTextureLoaderOriginFlippedVertically;
      v56[1] = &__kCFBooleanFalse;
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v56, v55, 2));
      v38 = 0;
      v16 = objc_msgSend(v13, "newTextureWithCGImage:options:error:", v14, v15, &v38);
      v17 = v38;
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v19 = *(void **)(v18 + 40);
      *(_QWORD *)(v18 + 40) = v16;

      v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      if (v20)
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "strokeName"));
        objc_msgSend(v2, "setObject:forKeyedSubscript:", v20, v21);
      }
      else
      {
        v23 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10125CFF8);
        v24 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v24, OS_LOG_TYPE_ERROR))
        {
          objc_opt_class(v17, v25);
          v34 = NSStringFromClass(v33);
          v37 = (id)objc_claimAutoreleasedReturnValue(v34);
          v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "domain"));
          v35 = objc_msgSend(v17, "code");
          *(_DWORD *)buf = 67110914;
          v40 = v23;
          v41 = 2082;
          v42 = "-[CRLBrushStroke p_metalTextureForCurrentStrokeAndDevice:]_block_invoke";
          v43 = 2082;
          v44 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBrushStroke.mm";
          v45 = 1024;
          v46 = 1767;
          v47 = 2114;
          v48 = v37;
          v49 = 2114;
          v50 = v36;
          v51 = 2048;
          v52 = v35;
          v53 = 2112;
          v54 = v17;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v24, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unable to load brush texture with error errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x4Au);

        }
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_10125D018);
        v26 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)v26, OS_LOG_TYPE_ERROR))
        {
          objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
          sub_100DE7E60();
        }

        v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBrushStroke p_metalTextureForCurrentStrokeAndDevice:]_block_invoke"));
        v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBrushStroke.mm"));
        objc_opt_class(v17, v28);
        v30 = NSStringFromClass(v29);
        v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "domain"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v21, v27, 1767, 0, "Unable to load brush texture with error errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v31, v32, objc_msgSend(v17, "code"), v17);

      }
    }
    else
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125CFB8);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E32ED8();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_10125CFD8);
      v22 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_ERROR))
      {
        objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        sub_100DE7E60();
      }

      v13 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLBrushStroke p_metalTextureForCurrentStrokeAndDevice:]_block_invoke"));
      v17 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBrushStroke.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v17, 1754, 0, "invalid nil value for '%{public}s'", "strokePatternTextureImage");
    }

  }
}

void sub_100423948(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_100423A88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100423AB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100423AE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100423B18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100423B48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100423B78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100423CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;

  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

void sub_100423CEC(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 512, 0, 16);
  v2 = (void *)qword_101415990;
  qword_101415990 = (uint64_t)v1;

}

void sub_100423D24(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_101415990, "objectForKeyedSubscript:", a1[4]));
  if (!v12)
  {
    v12 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend((id)qword_101415990, "setObject:forKeyedSubscript:");
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1[6]));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", v2));
  v4 = *(_QWORD *)(a1[5] + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40))
  {
    v6 = objc_alloc_init((Class)MTLRenderPipelineColorAttachmentDescriptor);
    objc_msgSend(v6, "setPixelFormat:", a1[6]);
    objc_msgSend(v6, "setBlendingEnabled:", 1);
    objc_msgSend(v6, "setDestinationAlphaBlendFactor:", 5);
    objc_msgSend(v6, "setDestinationRGBBlendFactor:", 5);
    v7 = -[CRLMetalShader initDefaultShaderWithVertexShader:fragmentShader:device:colorAttachment:]([CRLMetalShader alloc], "initDefaultShaderWithVertexShader:fragmentShader:device:colorAttachment:", CFSTR("brushStrokeVertexShader"), CFSTR("brushStrokeFragmentShader"), a1[4], v6);
    v8 = *(_QWORD *)(a1[5] + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    v10 = *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1[6]));
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v10, v11);

  }
}

void sub_100423E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v10;

  _Unwind_Resume(a1);
}

void sub_100423FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;

  _Block_object_dispose(&a17, 8);

  _Unwind_Resume(a1);
}

void sub_100424010(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 512, 0, 16);
  v2 = (void *)qword_1014159A0;
  qword_1014159A0 = (uint64_t)v1;

}

void sub_100424048(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;

  v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_1014159A0, "objectForKeyedSubscript:", a1[4]));
  if (!v12)
  {
    v12 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    objc_msgSend((id)qword_1014159A0, "setObject:forKeyedSubscript:");
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1[6]));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", v2));
  v4 = *(_QWORD *)(a1[5] + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40))
  {
    v6 = objc_alloc_init((Class)MTLRenderPipelineColorAttachmentDescriptor);
    objc_msgSend(v6, "setPixelFormat:", a1[6]);
    objc_msgSend(v6, "setBlendingEnabled:", 1);
    objc_msgSend(v6, "setDestinationAlphaBlendFactor:", 5);
    objc_msgSend(v6, "setDestinationRGBBlendFactor:", 5);
    v7 = -[CRLMetalShader initDefaultTextureAndColorShaderWithDevice:colorAttachment:]([CRLMetalShader alloc], "initDefaultTextureAndColorShaderWithDevice:colorAttachment:", a1[4], v6);
    v8 = *(_QWORD *)(a1[5] + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    v10 = *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1[6]));
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v10, v11);

  }
}

void sub_1004241A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v10;

  _Unwind_Resume(a1);
}

void sub_100424330(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_100424358(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1004243CC(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1004243B0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1004243CC(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    sub_100007810();
  result = (char *)sub_100114120((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

_QWORD *sub_10042440C(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_1001350F8(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_100424468(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_100424484(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_1001350F8(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1004244E0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100424B04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100424B34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100425038(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100425068(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004263DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042640C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100427304(id a1)
{
  CRLiOSVisualEffectHelper *v1;
  void *v2;

  v1 = objc_alloc_init(CRLiOSVisualEffectHelper);
  v2 = (void *)qword_101415A18;
  qword_101415A18 = (uint64_t)v1;

}

id sub_1004276C0(uint64_t a1, void *a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "renderInContext:", objc_msgSend(a2, "CGContext"));
}

id sub_100427E84(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startAnimation");
}

id sub_100427F84(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startAnimation");
}

void sub_1004281AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004281DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100428418(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100428448(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042871C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _OWORD v11[3];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "p_scrimOwnerForView:", v7));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "viewForScrimOpacityAnimation"));
        objc_msgSend(v8, "willBeginScrimOpacityAnimation");
        v10 = *(void **)(a1 + 40);
        if (v10)
        {
          objc_msgSend(v10, "p_touchDownAffineTransformForView:", v7);
        }
        else
        {
          v13 = 0u;
          v14 = 0u;
          v12 = 0u;
        }
        v11[0] = v12;
        v11[1] = v13;
        v11[2] = v14;
        objc_msgSend(v7, "setTransform:", v11);
        objc_msgSend(v9, "setAlpha:", 1.0);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v4);
  }

}

void sub_100428890(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_activeTouchDownAnimatorForView:", *(_QWORD *)(a1 + 40)));
  v3 = *(void **)(a1 + 48);

  if (v2 == v3)
    objc_msgSend(*(id *)(a1 + 32), "p_setActiveTouchDownAnimator:forView:", 0, *(_QWORD *)(a1 + 40));
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v4 = *(id *)(a1 + 56);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_scrimOwnerForView:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8), (_QWORD)v10));
        objc_msgSend(v9, "didEndScrimOpacityAnimation");

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v6);
  }

}

void sub_100428B80(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[3];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v15;
    v11 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v12 = *(_OWORD *)&CGAffineTransformIdentity.a;
    v10 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "p_scrimOwnerForView:", v7, v10, v11, v12));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "viewForScrimOpacityAnimation"));
        objc_msgSend(v8, "willBeginScrimOpacityAnimation");
        v13[0] = v12;
        v13[1] = v11;
        v13[2] = v10;
        objc_msgSend(v7, "setTransform:", v13);
        objc_msgSend(v9, "setAlpha:", 0.0);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v4);
  }

}

void sub_100428CF0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_activeTouchUpAnimatorForView:", *(_QWORD *)(a1 + 40)));
  v3 = *(void **)(a1 + 48);

  if (v2 == v3)
    objc_msgSend(*(id *)(a1 + 32), "p_setActiveTouchUpAnimator:forView:", 0, *(_QWORD *)(a1 + 40));
  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  v4 = *(id *)(a1 + 56);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_scrimOwnerForView:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v8), (_QWORD)v10));
        objc_msgSend(v9, "didEndScrimOpacityAnimation");

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v6);
  }

}

void sub_100428E68(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.25, 0.0, 0.75, 1.0);
  v2 = (void *)qword_101415A28;
  qword_101415A28 = (uint64_t)v1;

}

void sub_100428EE4(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 400.0, 25.0, 0.0, 0.0);
  v2 = (void *)qword_101415A38;
  qword_101415A38 = (uint64_t)v1;

}

void sub_100428F68(id a1)
{
  uint64_t v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[CASpringAnimation animationWithKeyPath:](CASpringAnimation, "animationWithKeyPath:", CFSTR("transform")));
  objc_msgSend(v2, "setMass:", 1.0);
  objc_msgSend(v2, "setStiffness:", 400.0);
  objc_msgSend(v2, "setDamping:", 25.0);
  objc_msgSend(v2, "setInitialVelocity:", 0.0);
  objc_msgSend(v2, "settlingDuration");
  qword_101415A48 = v1;

}

void sub_10042950C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042953C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042956C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042959C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004297B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004297E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100429A04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100429A34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100429C70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100429CA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100429E88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100429EB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042ACDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042AD0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042AD3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042AD6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042B850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10042B878(uint64_t a1)
{
  _QWORD *WeakRetained;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = WeakRetained[22];
    v5 = v2;
    if (v3)
    {
      (*(void (**)(void))(v3 + 16))();
      v2 = v5;
      v4 = (void *)v5[22];
    }
    else
    {
      v4 = 0;
    }
    v2[22] = 0;

    v2 = v5;
  }

}

void sub_10042BCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10042BD44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10042BD54(uint64_t a1)
{

}

id sub_10042BD5C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "addExistingEntry:");
}

void sub_10042BD64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042BD94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042BDC4(uint64_t a1)
{
  _QWORD *WeakRetained;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = WeakRetained[22];
    v5 = v2;
    if (v3)
    {
      (*(void (**)(void))(v3 + 16))();
      v2 = v5;
      v4 = (void *)v5[22];
    }
    else
    {
      v4 = 0;
    }
    v2[22] = 0;

    v2 = v5;
  }

}

void sub_10042BE2C(uint64_t a1, void *a2)
{
  id v4;

  v4 = a2;
  if (v4)
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_10042C1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10042C1C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042C1F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042C224(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  id v6;

  v4 = *(void **)(a1 + 32);
  v5 = a3;
  objc_msgSend(v4, "addObject:", v5);
  v6 = objc_msgSend(v5, "size");

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += v6;
}

int64_t sub_10042C284(id a1, CRLZipEntry *a2, CRLZipEntry *a3)
{
  CRLZipEntry *v4;
  unint64_t v5;
  unint64_t v6;

  v4 = a3;
  v5 = -[CRLZipEntry offset](a2, "offset");
  v6 = -[CRLZipEntry offset](v4, "offset");

  if (v5 < v6)
    return -1;
  else
    return v5 > v6;
}

void sub_10042C5F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042C624(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042C654(uint64_t a1, char a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v5 = a3;
  v6 = v5;
  if ((a2 & 1) != 0)
  {
    v9 = v5;
    objc_msgSend(*(id *)(a1 + 32), "setCompletedUnitCount:", (char *)objc_msgSend(*(id *)(a1 + 40), "size") + (_QWORD)objc_msgSend(*(id *)(a1 + 32), "completedUnitCount"));
    objc_msgSend(*(id *)(a1 + 48), "copyRemainingEntries:fromArchive:progress:completionHandler:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 72));
LABEL_7:
    v6 = v9;
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(a1 + 72);
  if (v7)
  {
    v9 = v5;
    if (v5)
    {
      (*(void (**)(uint64_t, id))(v7 + 16))(v7, v5);
    }
    else
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError crl_fileWriteUnknownErrorWithUserInfo:](NSError, "crl_fileWriteUnknownErrorWithUserInfo:", 0));
      (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);

    }
    goto LABEL_7;
  }
LABEL_8:

}

void sub_10042C9D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042CA00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042CA30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042CA60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042CB44(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7;
  uint64_t v8;
  id v9;

  v7 = a5;
  if (a2)
  {
    v8 = *(_QWORD *)(a1 + 32);
    if (v8)
    {
      v9 = v7;
      (*(void (**)(uint64_t, BOOL))(v8 + 16))(v8, v7 == 0);
      v7 = v9;
    }
  }

}

void sub_10042D8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  _Block_object_dispose(&STACK[0x2A0], 8);
  _Block_object_dispose(&a66, 8);
  _Unwind_Resume(a1);
}

void sub_10042D938(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042D968(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042D998(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042D9C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042D9F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042DA28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042DA58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042DA88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10042DAB8(uint64_t a1)
{
  char v2;

  v2 = 0;
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, char *))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), 1, 0, 0, *(_QWORD *)(a1 + 32), &v2);
}

void sub_10042DAF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042DB24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042DB54(_QWORD *a1, uint64_t a2, NSObject *a3, void *a4, _BYTE *a5)
{
  void *v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  id v12;
  void *v13;

  v12 = a4;
  if (a3)
    *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) += dispatch_data_get_size(a3);
  (*(void (**)(void))(a1[4] + 16))();
  v8 = v12;
  if (!v12 && *a5)
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", NSCocoaErrorDomain, 3072, 0));
  if (v8)
  {
    v9 = *(_QWORD *)(a1[6] + 8);
    v11 = *(_QWORD *)(v9 + 40);
    v10 = (id *)(v9 + 40);
    if (!v11)
    {
      v13 = v8;
      objc_storeStrong(v10, v8);
      v8 = v13;
    }
  }

}

void sub_10042DC2C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;

  v2 = a2;
  v7 = 0;
  v4 = a1[4];
  if (!a2)
    v2 = *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40);
  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, char *))(v4 + 16))(v4, 1, a1[6], a1[6], v2, &v7);
  v5 = *(_QWORD *)(a1[5] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = 0;

}

void sub_10042DDA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10042E078(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10042E208(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_10042E384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_10042E72C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_10042E790(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;
  void *v10;
  NSObject *v11;

  if ((a1 & 1) == 0)
  {
    v9 = sub_100432D74(CFSTR("PDF assertion failure: "), a2, (uint64_t)&a9);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    if (objc_msgSend(v10, "length"))
    {
      if (qword_10147E608 != -1)
        dispatch_once(&qword_10147E608, &stru_10125DB60);
      v11 = off_1013DC530;
      if (os_log_type_enabled((os_log_t)off_1013DC530, OS_LOG_TYPE_ERROR))
        sub_100E33ED0((uint64_t)v10, v11);
    }
    +[NSException raise:format:](NSException, "raise:format:", NSInternalInconsistencyException, CFSTR("%@"), v10, &a9);

  }
}

void sub_10042E854(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042E9F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042EAD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042ED90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042EDF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042EE20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042F0F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042F158(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042F188(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042F478(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10042F4EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042F51C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10042F634(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10042F6EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042F7B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10042F850(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10042F920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10042FA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_10042FA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v10;
  id v11;
  void *v12;
  NSObject *v13;
  __int16 v14;
  __int128 __p;

  v14 = 32;
  sub_100432E88(&__p, 4 * a1, &v14);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCharacters:length:](NSString, "stringWithCharacters:length:"));
  if ((_QWORD)__p)
  {
    *((_QWORD *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  v11 = sub_100432D74(v10, a2, (uint64_t)&a9);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  if (objc_msgSend(v12, "length"))
  {
    if (qword_10147E608 != -1)
      dispatch_once(&qword_10147E608, &stru_10125DB80);
    v13 = off_1013DC530;
    if (os_log_type_enabled((os_log_t)off_1013DC530, OS_LOG_TYPE_INFO))
    {
      LODWORD(__p) = 138412290;
      *(_QWORD *)((char *)&__p + 4) = v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "%@", (uint8_t *)&__p, 0xCu);
    }
  }

}

void sub_10042FBB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_10042FCB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

void sub_10042FD80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10042FE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100430004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100430084(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100430124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100430258(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004302F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1004303A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10043045C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100430514(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043055C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004305B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043068C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_1004306B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  unsigned int v21;
  CGContext *v22;
  void *v23;
  CGContext *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  CRLPdfTaggerTextStorageChunkContext *v29;
  id v30;
  CGRect v31;

  v30 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topOfContextStack"));
  objc_opt_class(CRLPdfTaggerDrawableContext, v2);
  v4 = sub_100221D0C(v3, v30);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v5)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "taggerStateOutsideCore"));

    if (v7)
    {
      *(_QWORD *)&v9 = objc_opt_class(CRLWPShapeRep, v8).n128_u64[0];
      v11 = v10;
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "parentRep", v9));
      v13 = sub_100221D0C(v11, v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

      if (v14)
      {
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "info"));
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "accessibilityDescription"));
        v17 = objc_msgSend(v16, "length");

        if (v17)
        {
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "fill"));
          if (v18)
          {

          }
          else
          {
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "stroke"));
            if (!v19
              || (v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "stroke")),
                  v21 = objc_msgSend(v20, "isNullStroke"),
                  v20,
                  v19,
                  v21))
            {
              CGContextSaveGState((CGContextRef)objc_msgSend(*(id *)(a1 + 32), "cgContext"));
              v22 = (CGContext *)objc_msgSend(*(id *)(a1 + 32), "cgContext");
              v23 = (void *)objc_claimAutoreleasedReturnValue(+[CRLColor clearColor](CRLColor, "clearColor"));
              CGContextSetFillColorWithColor(v22, (CGColorRef)objc_msgSend(v23, "CGColor"));

              v24 = (CGContext *)objc_msgSend(*(id *)(a1 + 32), "cgContext");
              v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "layout"));
              v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "geometry"));
              objc_msgSend(v26, "size");
              v31.origin.x = sub_10005FDDC();
              CGContextFillRect(v24, v31);

              CGContextRestoreGState((CGContextRef)objc_msgSend(*(id *)(a1 + 32), "cgContext"));
            }
          }
        }

      }
      v27 = *(void **)(a1 + 32);
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "taggerStateOutsideCore"));
      objc_msgSend(v27, "setState:", v28);

      objc_msgSend(v6, "setTaggerStateOutsideCore:", 0);
    }
  }

  v29 = -[CRLPdfTaggerTextStorageChunkContext initWithStateOfTagger:textStorageChunk:limitSelection:]([CRLPdfTaggerTextStorageChunkContext alloc], "initWithStateOfTagger:textStorageChunk:limitSelection:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "pushContext:", v29);

}

void sub_1004308E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

id sub_1004309C0(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  *(_QWORD *)&v3 = objc_opt_class(CRLPdfTaggerTextStorageChunkContext, a2).n128_u64[0];
  return objc_msgSend(v2, "restoreStateFromTopOfContextStackWithExpectedClass:", v4, v3);
}

void sub_100430A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_100430AB8(uint64_t a1)
{
  CRLPdfTaggerTextColumnContext *v2;

  v2 = -[CRLPdfTaggerTextColumnContext initWithStateOfTagger:column:limitSelection:]([CRLPdfTaggerTextColumnContext alloc], "initWithStateOfTagger:column:limitSelection:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "pushContext:");

}

void sub_100430B08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_100430B70(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  *(_QWORD *)&v3 = objc_opt_class(CRLPdfTaggerTextColumnContext, a2).n128_u64[0];
  return objc_msgSend(v2, "restoreStateFromTopOfContextStackWithExpectedClass:", v4, v3);
}

void sub_100430BEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100430E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100431054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_1004311F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v10 - 64), 8);

  _Unwind_Resume(a1);
}

void sub_100431244(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v7;
  uint64_t v8;
  id v9;

  v9 = a2;
  v8 = objc_opt_class(CRLWPHyperlinkField, v7);
  if ((objc_opt_isKindOfClass(v9, v8) & 1) != 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a5 = 1;
  }

}

void sub_1004312B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100431384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_100431514(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_100431664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1004316E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id *sub_1004317D4(id *result)
{
  id *v1;

  if (result[6])
  {
    v1 = result;
    objc_msgSend(result[4], "advanceParagraphEnumeratorToCharIndex:", result[5]);
    if (objc_msgSend(v1[4], "charIndexIsAtStartOfParagraph:", v1[5]))
      objc_msgSend(v1[4], "beginParagraphWithLineFragmentRange:", v1[5], v1[6]);
    return (id *)objc_msgSend(v1[4], "assertTopOfContextStackIsParagraph:", 1);
  }
  return result;
}

id *sub_100431888(id *result)
{
  id *v1;

  if (result[6])
  {
    v1 = result;
    objc_msgSend(result[4], "assertTopOfContextStackIsParagraph:", 1);
    result = (id *)objc_msgSend(v1[4], "charIndexIsAtEndOfParagraph:", (char *)v1[5] + (_QWORD)v1[6]);
    if ((_DWORD)result)
      return (id *)_objc_msgSend(v1[4], "endParagraphWithLineFragmentRange:", v1[5], v1[6]);
  }
  return result;
}

void sub_100431934(uint64_t a1)
{
  CRLPdfTaggerListLabelContext *v2;

  v2 = -[CRLPdfTaggerContext initWithStateOfTagger:]([CRLPdfTaggerListLabelContext alloc], "initWithStateOfTagger:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 32), "pushContext:");
  if (!+[CRLPdfTagger isHeaderTag:](CRLPdfTagger, "isHeaderTag:", objc_msgSend(*(id *)(a1 + 32), "topmostTagType")))objc_msgSend(*(id *)(a1 + 32), "beginTagWithType:", 302);

}

void sub_1004319AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_100431A14(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  *(_QWORD *)&v3 = objc_opt_class(CRLPdfTaggerListLabelContext, a2).n128_u64[0];
  return objc_msgSend(v2, "restoreStateFromTopOfContextStackWithExpectedClass:", v4, v3);
}

void sub_100431A9C(uint64_t a1)
{
  CRLPdfTaggerLineFragmentContext *v2;

  if (*(_QWORD *)(a1 + 48))
  {
    if (objc_msgSend(*(id *)(a1 + 32), "charIndexIsAtStartOfParagraph:", *(_QWORD *)(a1 + 40)))
      objc_msgSend(*(id *)(a1 + 32), "beginParagraphBodyWithLineFragmentRange:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
    v2 = -[CRLPdfTaggerLineFragmentContext initWithStateOfTagger:lineFragmentCharRange:]([CRLPdfTaggerLineFragmentContext alloc], "initWithStateOfTagger:lineFragmentCharRange:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
    objc_msgSend(*(id *)(a1 + 32), "pushContext:");

  }
}

void sub_100431B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

_QWORD *sub_100431B8C(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;
  void *v3;
  double v4;
  uint64_t v5;

  if (result[6])
  {
    v2 = result;
    v3 = (void *)result[4];
    *(_QWORD *)&v4 = objc_opt_class(CRLPdfTaggerLineFragmentContext, a2).n128_u64[0];
    objc_msgSend(v3, "restoreStateFromTopOfContextStackWithExpectedClass:", v5, v4);
    result = objc_msgSend((id)v2[4], "charIndexIsAtEndOfParagraph:", v2[6] + v2[5]);
    if ((_DWORD)result)
      return _objc_msgSend((id)v2[4], "endParagraphBodyWithLineFragmentRange:", v2[5], v2[6]);
  }
  return result;
}

void sub_100431C94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100431D0C(uint64_t a1)
{
  CRLPdfTaggerPrimaryTextRunContext *v2;
  void *v3;
  id v4;
  id v5;
  int v6;

  v2 = -[CRLPdfTaggerPrimaryTextRunContext initWithStateOfTagger:charRange:]([CRLPdfTaggerPrimaryTextRunContext alloc], "initWithStateOfTagger:charRange:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "pushContext:", v2);
  if (*(_BYTE *)(a1 + 56))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topmostParagraphContext"));
    if (objc_msgSend(v3, "needsSpans"))
    {
      v4 = objc_msgSend(*(id *)(a1 + 32), "indexOfFirstVisibleCharInParagraphAtOrAfterCharIndex:", *(_QWORD *)(a1 + 40));
      v6 = 0;
      v5 = objc_msgSend(*(id *)(a1 + 32), "retrieveHighestInfoAtCharIndex:returnTagType:", v4, &v6);
      if (!v6)
        v6 = 500;
      objc_msgSend(*(id *)(a1 + 32), "beginTagWithType:");
    }

  }
}

void sub_100431DC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_100431E40(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  *(_QWORD *)&v3 = objc_opt_class(CRLPdfTaggerPrimaryTextRunContext, a2).n128_u64[0];
  return objc_msgSend(v2, "restoreStateFromTopOfContextStackWithExpectedClass:", v4, v3);
}

void sub_100431ECC(uint64_t a1)
{
  void *v2;
  CRLPdfTaggerAncillaryTextRunContext *v3;

  v3 = -[CRLPdfTaggerSecondaryTextRunContext initWithStateOfTagger:charRange:baseTextRange:]([CRLPdfTaggerAncillaryTextRunContext alloc], "initWithStateOfTagger:charRange:baseTextRange:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 32), "pushContext:");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topmostParagraphContext"));
  if (objc_msgSend(v2, "needsSpans"))
    objc_msgSend(*(id *)(a1 + 32), "beginTagWithType:", 500);

}

void sub_100431F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id sub_100431FC4(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  *(_QWORD *)&v3 = objc_opt_class(CRLPdfTaggerAncillaryTextRunContext, a2).n128_u64[0];
  return objc_msgSend(v2, "restoreStateFromTopOfContextStackWithExpectedClass:", v4, v3);
}

void sub_10043209C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_100432174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

id sub_100432198(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dispatchObject:drawableBlock:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_100432254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

uint64_t sub_100432274(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100432284(uint64_t a1)
{

}

void sub_10043228C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_1004323D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_100432490(uint64_t a1, void *a2)
{
  uint64_t v3;
  double v4;
  id v5;
  id v6;

  v6 = a2;
  *(_QWORD *)&v4 = objc_opt_class(*(_QWORD *)(a1 + 32), v3).n128_u64[0];
  if (objc_msgSend(v5, "shouldMapDrawableRep:", v6, v4))
    objc_msgSend(*(id *)(a1 + 32), "beginDrawable:", v6);

}

void sub_1004324E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100432548(uint64_t a1, void *a2)
{
  uint64_t v3;
  double v4;
  id v5;
  id v6;

  v6 = a2;
  *(_QWORD *)&v4 = objc_opt_class(*(_QWORD *)(a1 + 32), v3).n128_u64[0];
  if (objc_msgSend(v5, "shouldMapDrawableRep:", v6, v4))
    objc_msgSend(*(id *)(a1 + 32), "endDrawable:", v6);

}

void sub_100432598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100432958(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_100432A0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100432A3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100432B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id sub_100432B2C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "beginDrawable:", *(_QWORD *)(a1 + 40));
}

void sub_100432BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id sub_100432BC8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "endDrawable:", *(_QWORD *)(a1 + 40));
}

void sub_100432C28(uint64_t a1)
{
  CRLPdfTaggerCommentContext *v2;

  v2 = -[CRLPdfTaggerContext initWithStateOfTagger:]([CRLPdfTaggerCommentContext alloc], "initWithStateOfTagger:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 32), "pushContext:");
  objc_msgSend(*(id *)(a1 + 32), "beginTagWithType:", 507);

}

void sub_100432C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id sub_100432CE8(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;

  v2 = *(void **)(a1 + 32);
  *(_QWORD *)&v3 = objc_opt_class(CRLPdfTaggerCommentContext, a2).n128_u64[0];
  return objc_msgSend(v2, "restoreStateFromTopOfContextStackWithExpectedClass:", v4, v3);
}

id sub_100432D74(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  v5 = a1;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a2));
  v7 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:arguments:", v6, a3);
  if (objc_msgSend(v5, "length"))
  {
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingString:", v7));

    v7 = (id)v8;
  }

  return v7;
}

void sub_100432E08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100432E30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLPdfTaggingLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC530;
  off_1013DC530 = v2;

}

void sub_100432E5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLPdfTaggingLogCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC530;
  off_1013DC530 = v2;

}

_QWORD *sub_100432E88(_QWORD *a1, uint64_t a2, _WORD *a3)
{
  _WORD *v6;
  _WORD *v7;
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_100134034(a1, a2);
    v6 = (_WORD *)a1[1];
    v7 = &v6[a2];
    v8 = 2 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 2;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_100432EEC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100433A84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100433AB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100433AE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100433B14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100433CAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100433CDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100433EB0(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithUserInterfaceLevel:](UITraitCollection, "traitCollectionWithUserInterfaceLevel:", 0));
  v2 = (void *)qword_101415A58;
  qword_101415A58 = v1;

}

void sub_100433F20(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithUserInterfaceLevel:](UITraitCollection, "traitCollectionWithUserInterfaceLevel:", 1));
  v2 = (void *)qword_101415A60;
  qword_101415A60 = v1;

}

void sub_100434BE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100434C14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

__CFData *sub_10043507C(CGImage *a1, void *a2)
{
  const __CFDictionary *v3;
  __CFData *v4;
  __CFString *v5;
  CGImageDestination *v6;

  v3 = a2;
  v4 = (__CFData *)objc_claimAutoreleasedReturnValue(+[NSMutableData data](NSMutableData, "data"));
  v5 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePNG, "identifier"));
  v6 = CGImageDestinationCreateWithData(v4, v5, 1uLL, 0);

  CGImageDestinationAddImage(v6, a1, v3);
  if (!CGImageDestinationFinalize(v6))
  {

    v4 = 0;
  }
  CFRelease(v6);
  return v4;
}

__CFData *sub_100435130(CGImage *a1)
{
  return sub_10043507C(a1, 0);
}

id sub_100435138(uint64_t a1, CGFloat a2)
{
  UIImage *v3;
  UIImage *v4;
  NSData *v5;
  void *v6;

  v3 = (UIImage *)objc_msgSend(objc_alloc((Class)UIImage), "initWithCGImage:", a1);
  if (v3)
  {
    v4 = v3;
    v5 = UIImageJPEGRepresentation(v3, a2);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  }
  else
  {
    v6 = 0;
  }
  return v6;
}

__CFData *sub_10043519C(CGImage *a1)
{
  __CFData *v2;
  __CFString *v3;
  CGImageDestination *v4;

  v2 = (__CFData *)objc_claimAutoreleasedReturnValue(+[NSMutableData data](NSMutableData, "data"));
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeTIFF, "identifier"));
  v4 = CGImageDestinationCreateWithData(v2, v3, 1uLL, 0);

  CGImageDestinationAddImage(v4, a1, 0);
  if (!CGImageDestinationFinalize(v4))
  {

    v2 = 0;
  }
  if (v4)
    CFRelease(v4);
  return v2;
}

void sub_100435878(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_1004358A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004358D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100435904(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100435930(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100435960(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100435B28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100435C7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100435E44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100435E74(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100435FF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100436260(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100436500(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_10043652C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100436670(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_10043684C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100437374(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLScribbleInteractionDelegateCategory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC538;
  off_1013DC538 = v2;

}

void sub_100437430(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_10043787C(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1004378E8;
  v2[3] = &unk_10124EF60;
  v1 = *(void **)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  objc_msgSend(v1, "crlaxEnumerateSmartFieldsUsingBlock:", v2);

}

id sub_1004378E8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "crlaxSetParentInteractiveCanvasController:", *(_QWORD *)(a1 + 32));
}

void sub_10043858C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004385BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004385EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043861C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100438CC8(id *a1, void *a2)
{
  id *v4;
  dispatch_queue_attr_t v5;
  NSObject *v6;
  dispatch_queue_t v7;
  id v8;
  id v9;
  id v10;
  id v11;

  objc_storeStrong(a1 + 6, a2);
  v11 = a2;
  v4 = a1;
  v5 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = dispatch_queue_create("CRLMultipleItemImporter", v6);
  v8 = v4[1];
  v4[1] = v7;

  v9 = v4[8];
  v4[8] = &__NSArray0__struct;

  v10 = v4[9];
  v4[9] = &__NSArray0__struct;

}

void sub_100438D6C(void *a1, void *a2)
{
  _BYTE *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  CRLProgressGroup *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v4, "count"));
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v6 = v4;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v7)
  {
    v8 = v7;
    v9 = 0;
    v10 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v17 != v10)
          objc_enumerationMutation(v6);
        v12 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v12, "usesProgressDialog", (_QWORD)v16))
        {
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "progress"));
          if (v13)
          {
            objc_msgSend(v5, "addObject:", v13);
            v9 = 1;
          }

        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v8);
  }
  else
  {
    v9 = 0;
  }

  v3[33] = v9 & 1;
  v14 = -[CRLProgressGroup initWithChildren:]([CRLProgressGroup alloc], "initWithChildren:", v5);
  v15 = (void *)*((_QWORD *)v3 + 3);
  *((_QWORD *)v3 + 3) = v14;

}

void sub_100439390(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004393C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004395AC(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_1004395B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  __CFString *v14;
  id v15;
  void *v16;
  uint64_t v18;
  void *v19;
  id obj;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  NSErrorUserInfoKey v25;
  void *v26;
  _BYTE v27[128];

  v1 = a1;
  if ((objc_msgSend(*(id *)(a1 + 32), "isCancelled") & 1) != 0)
    return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 40) + 16))();
  v18 = v1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(v1 + 32) + 16), "importers"));
  v3 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v2, "count"));
  v4 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v2, "count"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  obj = v2;
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
  if (!v5)
    goto LABEL_19;
  v6 = v5;
  v7 = *(_QWORD *)v22;
  do
  {
    for (i = 0; i != v6; i = (char *)i + 1)
    {
      if (*(_QWORD *)v22 != v7)
        objc_enumerationMutation(obj);
      v9 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "boardItem"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "error"));
      objc_msgSend(v9, "embeddedDataLength");
      objc_msgSend(v9, "uploadDataLength");
      if (!v10)
      {
        if (!v11)
        {
          v25 = NSURLErrorKey;
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "URL"));
          v26 = v12;
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1));
          v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", NSURLErrorDomain, -3001, v13));

        }
        v14 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "domain"));
        if (v14 == CFSTR("com.apple.freeform.CRLErrorDomainInfoImporter"))
        {
          v15 = objc_msgSend(v11, "code");

          if (v15 == (id)102)
            objc_msgSend(v19, "addObject:", v11);
        }
        else
        {

        }
LABEL_16:
        objc_msgSend(v4, "addObject:", v11);
        goto LABEL_17;
      }
      objc_msgSend(v3, "addObject:", v10);
      if ((objc_msgSend(v11, "crl_errorShouldAlwaysBeReportedDuringImport") & 1) != 0)
        goto LABEL_16;
LABEL_17:

    }
    v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
  }
  while (v6);
LABEL_19:

  if (objc_msgSend(v19, "count"))
  {
    v1 = v18;
    if (objc_msgSend(v19, "count") == (id)1 && objc_msgSend(obj, "count") == (id)1)
    {
      v16 = v4;
      v4 = v19;
    }
    else
    {
      objc_msgSend(v4, "removeAllObjects");
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "firstObject"));
      objc_msgSend(v4, "addObject:", v16);
    }

    objc_msgSend(v3, "removeAllObjects");
  }
  else
  {
    v1 = v18;
  }
  objc_msgSend(*(id *)(v1 + 32), "setBoardItems:", v3);
  objc_msgSend(*(id *)(v1 + 32), "setErrors:", v4);

  return (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 40) + 16))();
}

void sub_100439974(uint64_t a1)
{
  id v1;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 32) = 1;
  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "importers"));
  objc_msgSend(v1, "makeObjectsPerformSelector:", "cancel");

}

id sub_100439B58(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "importer:needsMediaCompatibilityFeedbackWithReasons:forMediaType:usingBlock:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 48));
  return _objc_msgSend(*(id *)(a1 + 32), "p_importerDidRequestMediaCompatibilityRequirement:", *(_QWORD *)(a1 + 40));
}

id sub_100439C08(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_importerDidRequestMediaCompatibilityRequirement:", *(_QWORD *)(a1 + 40));
}

void sub_100439E24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100439E54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100439E84(uint64_t a1, int a2, char a3, char a4)
{
  uint64_t v7;
  NSObject *v8;
  _QWORD v9[5];
  char v10;
  char v11;

  if (a2)
    objc_msgSend(*(id *)(a1 + 32), "cancel");
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(NSObject **)(v7 + 8);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100439F0C;
  v9[3] = &unk_10125BA38;
  v9[4] = v7;
  v10 = a3;
  v11 = a4;
  dispatch_async(v8, v9);
}

id sub_100439F0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "completeImportWithCompatibilityOnAllDevices:allowHEVCContent:", *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41));
}

void sub_10043A1AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043A214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043A394(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043A518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043A5B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043A674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  va_list va;

  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSUInteger sub_10043A698(NSRange *a1, NSRange range2, uint64_t a3, _BYTE *a4)
{
  NSUInteger result;
  NSRange v7;
  uint64_t v8;

  v7 = NSIntersectionRange(a1[3], range2);
  result = v7.location;
  v8 = *(_QWORD *)(a1[2].length + 8);
  if (v7.length)
  {
    *(_BYTE *)(v8 + 24) = 1;
    return (*(uint64_t (**)(void))(a1[2].location + 16))();
  }
  else
  {
    *a4 = *(_BYTE *)(v8 + 24);
  }
  return result;
}

void sub_10043AA54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043AB04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043B208(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043B230(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043B260(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043B80C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043B834(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043B864(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043B904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10043B99C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10043BB10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043BBB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

const __CFString *sub_10043BBD4(unint64_t a1)
{
  void *v3;
  void *v4;
  void *v5;

  if (a1 < 8)
    return *(&off_10125E350 + a1);
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10125E0A8);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E348D4();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_10125E0C8);
  v3 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)v3, OS_LOG_TYPE_ERROR))
  {
    objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
    sub_100DE7E60();
  }

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSString *NSStringFromCRLWPSelectionType(CRLWPSelectionType)"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPSelection.mm"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v4, v5, 92, 0, "Unknown selection type: %lu", a1);

  return CFSTR("<UNKNOWN SELECTION TYPE>");
}

void sub_10043BD7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043BDA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043BDD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C3EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043C484(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C4B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C4E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C514(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C544(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C574(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C7DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10043C824(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C854(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043C9D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043CB58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043CE0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043CE50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043CE80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043D01C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043D13C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043D244(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043D3E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043D5F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043D7E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043D994(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043DA68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043DCE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_10043DD34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043DD64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043DE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10043DE90(id a1, _NSRange a2, unint64_t a3, BOOL *a4)
{
  void *v4;
  void *v5;
  void *v6;

  if (a2.location + a2.length >= 0x7FFFFFFFFFFFFFFFLL)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125E2A8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E34C9C();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125E2C8);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v4, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLWPSelection i_setVisualRanges:]_block_invoke"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPSelection.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v5, v6, 529, 0, "illegal visual range");

  }
}

void sub_10043E01C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043E044(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043E074(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043E338(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043E37C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043E3AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043E3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSValue valueWithRange:](NSValue, "valueWithRange:", a2, a3));
  objc_msgSend(v3, "addObject:");

}

void sub_10043E42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10043E5B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043E7C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10043F184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

BOOL sub_10043F30C(id a1, CRLBezierPath *a2)
{
  return -[CRLBezierPath containsElementsOtherThanMoveAndClose](a2, "containsElementsOtherThanMoveAndClose");
}

void sub_10043F314(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043F344(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043F374(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFloodFillCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC600;
  off_1013DC600 = v2;

}

NSString *__cdecl sub_10043F3A0(id a1, CRLBezierPath *a2)
{
  CRLBezierPath *v2;
  void *v3;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", -[CRLBezierPath cString](v2, "cString")));

  return (NSString *)v3;
}

void sub_10043F3E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10043F3F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFloodFillCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC600;
  off_1013DC600 = v2;

}

void sub_10043F424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043F454(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10043F8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,void *a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;

  sub_10001E288(v48);
  _Block_object_dispose(&a35, 8);
  if (__p)
  {
    a42 = (uint64_t)__p;
    operator delete(__p);
  }

  sub_10001E288((uint64_t)&a45);
  _Unwind_Resume(a1);
}

id sub_10043F9DC(uint64_t a1, uint64_t a2)
{
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_flattenedPathForPath:", a2));
}

__n128 sub_10043F9FC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_10043FA20(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

void sub_10043FA38(uint64_t a1, uint64_t a2)
{
  void *v4;
  double v5;
  double v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  _QWORD v11[6];
  _QWORD v12[4];
  id v13;
  id v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _QWORD v21[6];
  _QWORD v22[10];
  int v23;
  _QWORD v24[10];
  int v25;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a2));
  if (objc_msgSend(v4, "containsElementsOtherThanMoveAndClose"))
  {
    v24[0] = 0;
    v24[1] = v24;
    v24[2] = 0x5812000000;
    v24[3] = sub_10043FCA4;
    v24[4] = sub_10043FCB0;
    memset(&v24[5], 0, 40);
    v25 = 1065353216;
    v22[0] = 0;
    v22[1] = v22;
    v22[2] = 0x5812000000;
    v22[3] = sub_10043FCB8;
    v22[4] = sub_10043FCC4;
    memset(&v22[5], 0, 40);
    v23 = 1065353216;
    v5 = *(double *)(a1 + 64);
    objc_msgSend(v4, "length");
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3321888768;
    v12[2] = sub_10043FCCC;
    v12[3] = &unk_10125E550;
    v18 = a2;
    v19 = v5 * 2.5 / v6;
    v15 = v24;
    v16 = v22;
    v13 = *(id *)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 64);
    sub_100441B78((uint64_t)v21, a1 + 72);
    v21[5] = *(_QWORD *)(a1 + 112);
    v7 = *(id *)(a1 + 48);
    v8 = *(_QWORD *)(a1 + 56);
    v14 = v7;
    v17 = v8;
    objc_msgSend(v4, "iterateOverPathWithPointDistancePerIteration:usingBlock:", v12, 1.0);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1004403A8;
    v11[3] = &unk_10125E588;
    v9 = *(NSObject **)(a1 + 48);
    v10 = *(_QWORD *)(a1 + 56);
    v11[4] = v24;
    v11[5] = v10;
    dispatch_sync(v9, v11);

    sub_10001E288((uint64_t)v21);
    _Block_object_dispose(v22, 8);
    sub_10001E288((uint64_t)&v22[6]);
    _Block_object_dispose(v24, 8);
    sub_10001E288((uint64_t)&v24[6]);
  }

}

void sub_10043FC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_10001E288(v36);
  _Block_object_dispose(&a33, 8);
  sub_10001E288(v35);
  _Block_object_dispose((const void *)(v37 - 184), 8);
  sub_10001E288(v34);

  _Unwind_Resume(a1);
}

uint64_t sub_10043FCA4(uint64_t a1, uint64_t a2)
{
  return sub_10001E640(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t sub_10043FCB0(uint64_t a1)
{
  return sub_10001E288(a1 + 48);
}

uint64_t sub_10043FCB8(uint64_t a1, uint64_t a2)
{
  return sub_10001E640(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t sub_10043FCC4(uint64_t a1)
{
  return sub_10001E288(a1 + 48);
}

uint64_t sub_10043FCCC(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t *v8;
  double *v9;
  void *v10;
  uint64_t v11;
  double v12;
  uint64_t *i;
  __int128 v14;
  __int128 v15;
  char *v16;
  char *j;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  unint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  BOOL v33;
  _QWORD block[7];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  double v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t *v45;
  _QWORD *v46[2];
  _QWORD v47[7];
  _QWORD v48[8];
  char *v49;
  char *v50;
  uint64_t v51;

  v8 = (uint64_t *)(a1 + 72);
  v9 = (double *)sub_10001DF18((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48), (unint64_t *)(a1 + 72));
  if (v9 && vabdd_f64(v9[10], a4) < *(double *)(a1 + 80))
  {
    sub_10001E344((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48), (unint64_t *)(a1 + 72));
    sub_10001E344((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), (unint64_t *)(a1 + 72));
  }
  v10 = *(void **)(a1 + 32);
  v47[0] = _NSConcreteStackBlock;
  v47[1] = 3321888768;
  v47[2] = sub_1004400FC;
  v47[3] = &unk_10125E4F0;
  v47[4] = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  v12 = *(double *)(a1 + 88);
  *(double *)&v47[5] = a4;
  v47[6] = v11;
  sub_100441B78((uint64_t)v48, a1 + 96);
  v48[5] = *(_QWORD *)(a1 + 136);
  *(double *)&v48[6] = a2;
  *(double *)&v48[7] = a3;
  if (v10)
  {
    objc_msgSend(v10, "closestHitsTo:withSearchThreshold:passingTest:", v47, a2, a3, v12);
  }
  else
  {
    v49 = 0;
    v50 = 0;
    v51 = 0;
  }
  v46[0] = 0;
  v46[1] = 0;
  v45 = (uint64_t *)v46;
  for (i = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 64); i; i = (uint64_t *)*i)
  {
    v14 = *((_OWORD *)i + 3);
    v41 = *((_OWORD *)i + 2);
    v42 = v14;
    v15 = *((_OWORD *)i + 5);
    v43 = *((_OWORD *)i + 4);
    v44 = v15;
    v40 = *((_OWORD *)i + 1);
    sub_100441E04(&v45, (unint64_t *)&v40, (uint64_t *)&v40);
  }
  v16 = v49;
  for (j = v50; v16 != j; v16 += 56)
  {
    v18 = *(_OWORD *)v16;
    v19 = *((_OWORD *)v16 + 1);
    v20 = *((_OWORD *)v16 + 2);
    v39 = *((double *)v16 + 6);
    v37 = v19;
    v38 = v20;
    v36 = v18;
    sub_10001E344((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), (unint64_t *)&v38);
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48;
    LODWORD(v40) = 0;
    sub_100441EBC(v21, (unint64_t *)&v38, &v38, (int *)&v40);
    v22 = (double *)sub_10001DF18((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48), (unint64_t *)&v38);
    v23 = *(_QWORD *)(a1 + 48);
    if (!v22 || v22[11] > v39)
    {
      v24 = *v8;
      v41 = v36;
      v42 = v37;
      v43 = v38;
      *(double *)&v44 = v39;
      *(_QWORD *)&v40 = v24;
      *((double *)&v40 + 1) = a4;
      sub_10001E344((_QWORD *)(*(_QWORD *)(v23 + 8) + 48), (unint64_t *)&v38);
      sub_1004420E4(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48, (unint64_t *)&v38, &v38, &v40);
      sub_1002191D4((uint64_t)&v45, (unint64_t *)&v38);
    }
  }
  v25 = v45;
  if (v45 != (uint64_t *)v46)
  {
    do
    {
      *(_QWORD *)&v40 = v25[4];
      v26 = sub_10001DF18((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), (unint64_t *)&v40);
      if (!v26)
        sub_10001E2D0("unordered_map::at: key not found");
      v27 = v26[3] + 1;
      if (v27 < 5)
      {
        sub_10001E344((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), (unint64_t *)&v40);
        v30 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48;
        *(_QWORD *)&v36 = v27;
        sub_100442370(v30, (unint64_t *)&v40, &v40, (uint64_t *)&v36);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1004401F0;
        block[3] = &unk_10125E528;
        v28 = *(NSObject **)(a1 + 40);
        v29 = *(_QWORD *)(a1 + 48);
        block[4] = *(_QWORD *)(a1 + 64);
        block[5] = v29;
        block[6] = v40;
        dispatch_sync(v28, block);
        sub_10001E344((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48), (unint64_t *)&v40);
        sub_10001E344((_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 48), (unint64_t *)&v40);
      }
      v31 = (uint64_t *)v25[1];
      if (v31)
      {
        do
        {
          v32 = v31;
          v31 = (uint64_t *)*v31;
        }
        while (v31);
      }
      else
      {
        do
        {
          v32 = (uint64_t *)v25[2];
          v33 = *v32 == (_QWORD)v25;
          v25 = v32;
        }
        while (!v33);
      }
      v25 = v32;
    }
    while (v32 != (uint64_t *)v46);
  }
  sub_10001CE40((uint64_t)&v45, v46[0]);
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
  return sub_10001E288((uint64_t)v48);
}

void sub_1004400A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10001E288(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1004400FC(uint64_t a1, unint64_t a2, double a3, double a4, double a5)
{
  unint64_t v5;
  double v9;
  double *v11;
  double v12;
  double *v13;
  double v14;
  unint64_t v15;

  v15 = a2;
  v5 = *(_QWORD *)(a1 + 32);
  if (v5 > a2)
    return 0;
  if (v5 == a2)
  {
    v9 = *(double *)(a1 + 40);
    if (v9 > a5 || vabdd_f64(a5, v9) < *(double *)(a1 + 48))
      return 0;
  }
  v11 = (double *)sub_10001C8C0((_QWORD *)(a1 + 56), (unint64_t *)(a1 + 32));
  if (!v11 || (v12 = v11[3], (v13 = (double *)sub_10001C8C0((_QWORD *)(a1 + 56), &v15)) == 0))
    sub_10001E2D0("unordered_map::at: key not found");
  v14 = *(double *)(a1 + 96) + v12 * 0.5 + v13[3] * 0.5;
  return sub_10006108C(*(double *)(a1 + 104), *(double *)(a1 + 112), a3, a4) <= v14;
}

uint64_t sub_1004401DC(uint64_t a1, uint64_t a2)
{
  return sub_100441B78(a1 + 56, a2 + 56);
}

uint64_t sub_1004401E8(uint64_t a1)
{
  return sub_10001E288(a1 + 56);
}

void sub_1004401F0(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v1 = *(_QWORD **)(a1[4] + 8);
  v2 = sub_10001DF18((_QWORD *)(*(_QWORD *)(a1[5] + 8) + 48), a1 + 6);
  if (!v2)
    sub_10001E2D0("unordered_map::at: key not found");
  v3 = v2 + 3;
  v4 = v1[8];
  v5 = v1[7];
  if (v5 >= v4)
  {
    v10 = v1[6];
    v11 = 0x8E38E38E38E38E39 * ((uint64_t)(v5 - v10) >> 3);
    v12 = v11 + 1;
    if (v11 + 1 > 0x38E38E38E38E38ELL)
      sub_100007810();
    v13 = 0x8E38E38E38E38E39 * ((uint64_t)(v4 - v10) >> 3);
    if (2 * v13 > v12)
      v12 = 2 * v13;
    if (v13 >= 0x1C71C71C71C71C7)
      v14 = 0x38E38E38E38E38ELL;
    else
      v14 = v12;
    if (v14)
      v15 = (char *)sub_100442328((uint64_t)(v1 + 8), v14);
    else
      v15 = 0;
    v16 = &v15[72 * v11];
    v17 = &v15[72 * v14];
    *(_OWORD *)v16 = *(_OWORD *)v3;
    v18 = *((_OWORD *)v3 + 1);
    v19 = *((_OWORD *)v3 + 2);
    v20 = *((_OWORD *)v3 + 3);
    *((_QWORD *)v16 + 8) = v3[8];
    *((_OWORD *)v16 + 2) = v19;
    *((_OWORD *)v16 + 3) = v20;
    *((_OWORD *)v16 + 1) = v18;
    v9 = v16 + 72;
    v22 = (char *)v1[6];
    v21 = (char *)v1[7];
    if (v21 != v22)
    {
      do
      {
        *(_OWORD *)(v16 - 72) = *(_OWORD *)(v21 - 72);
        v23 = *(_OWORD *)(v21 - 56);
        v24 = *(_OWORD *)(v21 - 40);
        v25 = *(_OWORD *)(v21 - 24);
        *((_QWORD *)v16 - 1) = *((_QWORD *)v21 - 1);
        *(_OWORD *)(v16 - 24) = v25;
        *(_OWORD *)(v16 - 40) = v24;
        *(_OWORD *)(v16 - 56) = v23;
        v16 -= 72;
        v21 -= 72;
      }
      while (v21 != v22);
      v21 = (char *)v1[6];
    }
    v1[6] = v16;
    v1[7] = v9;
    v1[8] = v17;
    if (v21)
      operator delete(v21);
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)v3;
    v6 = *(_OWORD *)(v2 + 5);
    v7 = *(_OWORD *)(v2 + 7);
    v8 = *(_OWORD *)(v2 + 9);
    *(_QWORD *)(v5 + 64) = v2[11];
    *(_OWORD *)(v5 + 32) = v7;
    *(_OWORD *)(v5 + 48) = v8;
    *(_OWORD *)(v5 + 16) = v6;
    v9 = (char *)(v5 + 72);
  }
  v1[7] = v9;
}

uint64_t sub_100440394(uint64_t a1, uint64_t a2)
{
  return sub_100441B78(a1 + 96, a2 + 96);
}

uint64_t sub_1004403A0(uint64_t a1)
{
  return sub_10001E288(a1 + 96);
}

void sub_1004403A8(uint64_t a1)
{
  uint64_t *i;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[80];

  for (i = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 64); i; i = (uint64_t *)*i)
  {
    *(_OWORD *)&v20[32] = *((_OWORD *)i + 3);
    *(_OWORD *)&v20[48] = *((_OWORD *)i + 4);
    *(_OWORD *)&v20[64] = *((_OWORD *)i + 5);
    *(_OWORD *)v20 = *((_OWORD *)i + 1);
    *(_OWORD *)&v20[16] = *((_OWORD *)i + 2);
    v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
    v4 = v3[7];
    v5 = v3[8];
    if (v4 >= v5)
    {
      v7 = v3[6];
      v8 = 0x8E38E38E38E38E39 * ((uint64_t)(v4 - v7) >> 3);
      v9 = v8 + 1;
      if (v8 + 1 > 0x38E38E38E38E38ELL)
        sub_100007810();
      v10 = 0x8E38E38E38E38E39 * ((uint64_t)(v5 - v7) >> 3);
      if (2 * v10 > v9)
        v9 = 2 * v10;
      if (v10 >= 0x1C71C71C71C71C7)
        v11 = 0x38E38E38E38E38ELL;
      else
        v11 = v9;
      if (v11)
        v12 = (char *)sub_100442328((uint64_t)(v3 + 8), v11);
      else
        v12 = 0;
      v13 = &v12[72 * v8];
      *((_QWORD *)v13 + 8) = *(_QWORD *)&v20[72];
      *((_OWORD *)v13 + 2) = *(_OWORD *)&v20[40];
      *((_OWORD *)v13 + 3) = *(_OWORD *)&v20[56];
      *(_OWORD *)v13 = *(_OWORD *)&v20[8];
      *((_OWORD *)v13 + 1) = *(_OWORD *)&v20[24];
      v15 = (char *)v3[6];
      v14 = (char *)v3[7];
      v16 = v13;
      if (v14 != v15)
      {
        do
        {
          *(_OWORD *)(v16 - 72) = *(_OWORD *)(v14 - 72);
          v17 = *(_OWORD *)(v14 - 56);
          v18 = *(_OWORD *)(v14 - 40);
          v19 = *(_OWORD *)(v14 - 24);
          *((_QWORD *)v16 - 1) = *((_QWORD *)v14 - 1);
          *(_OWORD *)(v16 - 24) = v19;
          *(_OWORD *)(v16 - 40) = v18;
          *(_OWORD *)(v16 - 56) = v17;
          v16 -= 72;
          v14 -= 72;
        }
        while (v14 != v15);
        v14 = (char *)v3[6];
      }
      v6 = v13 + 72;
      v3[6] = v16;
      v3[7] = v13 + 72;
      v3[8] = &v12[72 * v11];
      if (v14)
        operator delete(v14);
    }
    else
    {
      *(_OWORD *)(v4 + 32) = *(_OWORD *)&v20[40];
      *(_OWORD *)(v4 + 48) = *(_OWORD *)&v20[56];
      *(_QWORD *)(v4 + 64) = *(_QWORD *)&v20[72];
      *(_OWORD *)v4 = *(_OWORD *)&v20[8];
      *(_OWORD *)(v4 + 16) = *(_OWORD *)&v20[24];
      v6 = (char *)(v4 + 72);
    }
    v3[7] = v6;
  }
}

uint64_t sub_100440578(uint64_t a1, uint64_t a2)
{
  return sub_100441B78(a1 + 72, a2 + 72);
}

uint64_t sub_100440584(uint64_t a1)
{
  return sub_10001E288(a1 + 72);
}

void sub_10044058C(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double *i;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v2 = *(double **)(v1 + 48);
  for (i = *(double **)(v1 + 56); v2 != i; v2 += 9)
  {
    v6 = v2[1];
    v5 = v2[2];
    v7 = v2[3];
    v8 = v2[4];
    v9 = v2[5];
    v10 = *((_QWORD *)v2 + 6);
    v11 = v2[7];
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", *(_QWORD *)v2));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "p_bezierPathWithSectionOfBezierPath:centeredAtPercentAlongPath:withMaximumLength:", v12, v6, 5.0));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", v10));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "p_bezierPathWithSectionOfBezierPath:centeredAtPercentAlongPath:withMaximumLength:", v14, v11, 5.0));
    if (!+[CRLBezierPathBooleanOperationHelper hasAnyCrossingBetweenPath:andPath:](CRLBezierPathBooleanOperationHelper, "hasAnyCrossingBetweenPath:andPath:", v13, v15))
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[CRLBezierPath bezierPathWithStart:end:](CRLBezierPath, "bezierPathWithStart:end:", v5, v7, v8, v9));
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v16);

    }
  }
}

void sub_1004406D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_10044070C()
{
  JUMPOUT(0x100440700);
}

void sub_1004408D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_100440908(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "lineToPoint:");
}

void sub_1004409D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004415F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_10044176C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044179C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004417CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004417FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044182C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044185C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044188C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004418BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004418EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044191C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

_QWORD *sub_10044194C(uint64_t a1, unint64_t *a2, _QWORD *a3, _QWORD *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v8 = *a2;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v8)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  i[2] = *a3;
  i[3] = *a4;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    v16 = 1;
    if (v9 >= 3)
      v16 = (v9 & (v9 - 1)) != 0;
    v17 = v16 | (2 * v9);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_10001CBC8(a1, v19);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *i = *v21;
LABEL_38:
    *v21 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v20 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v22 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9)
        v22 %= v9;
    }
    else
    {
      v22 &= v9 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_100441B64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100441B78(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_10001CBC8(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_100441BEC(a1, i + 2, (_OWORD *)i + 1);
  return a1;
}

void sub_100441BD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_10001E288(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_100441BEC(uint64_t a1, unint64_t *a2, _OWORD *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  _QWORD **v9;
  _QWORD *i;
  unint64_t v11;
  float v12;
  float v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;

  v6 = *a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (v7)
  {
    v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      v3 = *a2;
      if (v6 >= v7)
        v3 = v6 % v7;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
    v9 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v9)
    {
      for (i = *v9; i; i = (_QWORD *)*i)
      {
        v11 = i[1];
        if (v11 == v6)
        {
          if (i[2] == v6)
            return i;
        }
        else
        {
          if (v8.u32[0] > 1uLL)
          {
            if (v11 >= v7)
              v11 %= v7;
          }
          else
          {
            v11 &= v7 - 1;
          }
          if (v11 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v6;
  *((_OWORD *)i + 1) = *a3;
  v12 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    v14 = 1;
    if (v7 >= 3)
      v14 = (v7 & (v7 - 1)) != 0;
    v15 = v14 | (2 * v7);
    v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16)
      v17 = v16;
    else
      v17 = v15;
    sub_10001CBC8(a1, v17);
    v7 = *(_QWORD *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v6 >= v7)
        v3 = v6 % v7;
      else
        v3 = v6;
    }
    else
    {
      v3 = (v7 - 1) & v6;
    }
  }
  v18 = *(_QWORD *)a1;
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *i = *v19;
LABEL_38:
    *v19 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v18 + 8 * v3) = a1 + 16;
  if (*i)
  {
    v20 = *(_QWORD *)(*i + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7)
        v20 %= v7;
    }
    else
    {
      v20 &= v7 - 1;
    }
    v19 = (_QWORD *)(*(_QWORD *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_100441DF0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_100441E04(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  unint64_t v7;
  uint64_t **v8;
  unint64_t v9;
  uint64_t *v10;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = v5[4];
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_10001D650(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

_QWORD *sub_100441EBC(uint64_t a1, unint64_t *a2, _QWORD *a3, int *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v8 = *a2;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v8)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  v14 = *a4;
  i[2] = *a3;
  i[3] = v14;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_10001CBC8(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *i = *v22;
LABEL_38:
    *v22 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1004420D0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_1004420E4(uint64_t a1, unint64_t *a2, _QWORD *a3, __int128 *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  void **v11;
  char *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v8 = *a2;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      v12 = (char *)*v11;
      if (*v11)
      {
        do
        {
          v13 = *((_QWORD *)v12 + 1);
          if (v13 == v8)
          {
            if (*((_QWORD *)v12 + 2) == v8)
              return v12;
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9)
                v13 %= v9;
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4)
              break;
          }
          v12 = *(char **)v12;
        }
        while (v12);
      }
    }
  }
  v12 = (char *)operator new(0x60uLL);
  v14 = *a4;
  *(_OWORD *)(v12 + 40) = a4[1];
  v15 = a4[3];
  *(_OWORD *)(v12 + 56) = a4[2];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = v8;
  *((_QWORD *)v12 + 2) = *a3;
  *(_OWORD *)(v12 + 72) = v15;
  *((_QWORD *)v12 + 11) = *((_QWORD *)a4 + 8);
  *(_OWORD *)(v12 + 24) = v14;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_10001CBC8(a1, v21);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *(_QWORD *)v12 = *v23;
LABEL_38:
    *v23 = v12;
    goto LABEL_39;
  }
  *(_QWORD *)v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v22 + 8 * v4) = a1 + 16;
  if (*(_QWORD *)v12)
  {
    v24 = *(_QWORD *)(*(_QWORD *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9)
        v24 %= v9;
    }
    else
    {
      v24 &= v9 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_100442314(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100442328(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL)
    sub_1000078E0();
  return operator new(72 * a2);
}

_QWORD *sub_100442370(uint64_t a1, unint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;

  v8 = *a2;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v4 = *a2;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v8)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4)
            break;
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *i = 0;
  i[1] = v8;
  v14 = *a4;
  i[2] = *a3;
  i[3] = v14;
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_10001CBC8(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v22)
  {
    *i = *v22;
LABEL_38:
    *v22 = i;
    goto LABEL_39;
  }
  *i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    v23 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v23 >= v9)
        v23 %= v9;
    }
    else
    {
      v23 &= v9 - 1;
    }
    v22 = (_QWORD *)(*(_QWORD *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_100442584(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100442964(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100442994(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004443C8(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "crlaxCompleteConnectionsCustomContent"));
  objc_msgSend(v1, "addObjectsFromArray:", v2);

}

void sub_100445168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_100445180(uint64_t a1)
{
  _OWORD *v2;
  __n128 result;
  __int128 v4;
  __int128 v5;
  __n128 v6;

  objc_msgSend(*(id *)(a1 + 32), "transformToConvertNaturalFromLayerRelative");
  v2 = *(_OWORD **)(*(_QWORD *)(a1 + 40) + 8);
  result = v6;
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  return result;
}

void sub_100445974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10044598C(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalPointFromUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_100445A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100445AA4(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalRectFromUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_100445B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100445BA8(uint64_t a1)
{
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalPointToUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  return result;
}

void sub_100445CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100445CC0(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertNaturalRectToUnscaledCanvas:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

id sub_100446D18(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 32), "crlaxPerformCleanupTasksPriorToRemovalFromCanvas");
  result = objc_msgSend(*(id *)(a1 + 32), "crlaxRespondsToSelector:fromExtrasProtocol:", "crlaxPerformExtraCleanupTasksPriorToRemovalFromCanvas", &OBJC_PROTOCOL___CRLCanvasRepAccessibilityExtras);
  if ((_DWORD)result)
    return _objc_msgSend(*(id *)(a1 + 32), "crlaxPerformExtraCleanupTasksPriorToRemovalFromCanvas");
  return result;
}

void sub_100446E38(id a1)
{
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

uint64_t sub_1004475E8(CGFloat *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  char v39;
  char v40;

  v5 = a2;
  v6 = a3;
  v40 = 0;
  v7 = v5;
  objc_opt_class(CRLCanvasRepAccessibility, v8);
  v10 = __CRLAccessibilityCastAsSafeCategory(v9, (uint64_t)v7, 1, &v40);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (v40)
    goto LABEL_7;
  v12 = (void *)v11;

  objc_msgSend(v12, "crlaxFrameInUnscaledCanvas");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = a1[4];
  v22 = a1[5];
  v23 = a1[6];
  v24 = a1[7];

  v39 = 0;
  v25 = v6;
  objc_opt_class(CRLCanvasRepAccessibility, v26);
  v28 = __CRLAccessibilityCastAsSafeCategory(v27, (uint64_t)v25, 1, &v39);
  v29 = objc_claimAutoreleasedReturnValue(v28);
  if (v39)
LABEL_7:
    abort();
  v30 = (void *)v29;
  v31 = sub_1000612CC(v21, v22, v23, v24, v14, v16, v18, v20);

  objc_msgSend(v30, "crlaxFrameInUnscaledCanvas");
  v36 = sub_1000612CC(a1[4], a1[5], a1[6], a1[7], v32, v33, v34, v35);

  if (v31 <= v36)
    v37 = 1;
  else
    v37 = -1;

  return v37;
}

void sub_1004484BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004484EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100449590(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004495C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100449B98(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100449BC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100449F0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100449F3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B730(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B760(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B790(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B7C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B7F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B820(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B850(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B880(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B8B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B8E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B910(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B940(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B970(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044B9A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044C6C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044C6F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044C720(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044C750(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044CA3C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044CA6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D890(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D8C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D8F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D920(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D950(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D980(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D9B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044D9E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044DD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10044DD2C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10044DD3C(uint64_t a1)
{

}

void sub_10044DD44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_accessibilityParentTableView"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10044E060(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044E090(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044E0C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044E0F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044FCA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044FCD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044FD04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10044FD34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004503D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100450404(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100450434(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100450464(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100450840(id a1)
{
  CRLWPFontList *v1;
  void *v2;

  v1 = objc_alloc_init(CRLWPFontList);
  v2 = (void *)qword_101415A80;
  qword_101415A80 = (uint64_t)v1;

}

void sub_1004508A8(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "pathForResource:ofType:", CFSTR("FontExclusionList"), CFSTR("plist")));

  if (v4)
    v2 = objc_msgSend(objc_alloc((Class)NSArray), "initWithContentsOfFile:", v4);
  else
    v2 = objc_alloc_init((Class)NSArray);
  v3 = (void *)qword_101415A90;
  qword_101415A90 = (uint64_t)v2;

}

id sub_100450A3C(id a1, NSArray *a2, unint64_t a3)
{
  return sub_1001B1018(a2, a3);
}

id sub_100450B40(id a1, NSString *a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  CRLWPOpaqueFontID *v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(-[NSString componentsSeparatedByString:](a2, "componentsSeparatedByString:", CFSTR("|")));
  if (objc_msgSend(v2, "count"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 0));
    v4 = 0;
    if ((unint64_t)objc_msgSend(v2, "count") >= 2)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 1));
      v6 = objc_msgSend(v5, "isEqualToString:", &stru_1012A72B0);

      if ((v6 & 1) != 0)
        v4 = 0;
      else
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 1));
    }
    v7 = -[CRLWPOpaqueFontID initWithPostScriptName:familyName:]([CRLWPOpaqueFontID alloc], "initWithPostScriptName:familyName:", v3, v4);

  }
  else
  {
    v7 = (CRLWPOpaqueFontID *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  }

  return v7;
}

BOOL sub_100450C34(id a1, id a2, NSDictionary *a3)
{
  id v3;
  id v4;

  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));

  return v4 != v3;
}

void sub_10045148C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004514BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1004514EC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2);
}

void sub_1004518DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045190C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1004521BC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *i;
  id v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v3 = a2;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = 0;
    v8 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v4);
        if (objc_msgSend(v3, "hasPrefix:", *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i), (_QWORD)v12))
        {
          v10 = v3;

          v7 = v10;
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

void sub_100452990(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004529C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004529F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100452A20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100452C80(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100452CB0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

CRLWPFont *__cdecl sub_100452EBC(id a1, CRLWPOpaqueFontID *a2)
{
  return +[CRLWPFont fontWithOpaqueIdentifier:](CRLWPFont, "fontWithOpaqueIdentifier:", a2);
}

BOOL sub_100452ECC(id a1, id a2, NSDictionary *a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  v3 = a2;
  objc_opt_class(CRLWPFont, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  LOBYTE(v3) = objc_msgSend(v7, "isRequestedFont");
  return (char)v3;
}

id sub_100452F88(id a1, CRLWPOpaqueFontID *a2)
{
  CRLWPOpaqueFontID *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[CRLWPOpaqueFontID desiredPostScriptName](v2, "desiredPostScriptName"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(-[CRLWPOpaqueFontID familyName](v2, "familyName"));

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@|%@"), v3, v4));
  return v5;
}

void sub_100453A84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100453AB4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100454168(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100454198(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004545C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004545F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100454628(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100454658(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100455150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100455170(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100455180(uint64_t a1)
{

}

void sub_100455188(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "crlaxSubstringInStorageWithRange:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100455410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100455428(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "glyphRectForRange:includingLabel:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), 0);
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_100455784(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004557B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004557E4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100455814(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100455FF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456028(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456058(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456088(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004560B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004560E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456118(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456148(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456178(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004561A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456B10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456B40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456B70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456BA0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456BD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456C00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456C30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456C60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456C90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456CC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456CF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100456D20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045774C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045777C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100458A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100458A84(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100458A94(uint64_t a1)
{

}

void sub_100458A9C(uint64_t a1, const void *a2, uint64_t a3, size_t a4)
{
  NSObject *v8;
  NSObject *v9;
  dispatch_data_t concat;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD destructor[5];
  _QWORD v15[5];
  id v16;

  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3032000000;
  v15[3] = sub_100458A84;
  v15[4] = sub_100458A94;
  v16 = *(id *)(a1 + 32);
  v8 = *(NSObject **)(a1 + 40);
  destructor[0] = _NSConcreteStackBlock;
  destructor[1] = 3221225472;
  destructor[2] = sub_100458BD0;
  destructor[3] = &unk_1012351C0;
  destructor[4] = v15;
  v9 = dispatch_data_create(a2, a4, v8, destructor);
  concat = dispatch_data_create_concat(*(dispatch_data_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v9);
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = concat;

  v13 = *(_QWORD *)(a1 + 48);
  if (v13)
    (*(void (**)(uint64_t, NSObject *, uint64_t, const void *, size_t))(v13 + 16))(v13, v9, a3, a2, a4);

  _Block_object_dispose(v15, 8);
}

void sub_100458BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100458BD0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = 0;

}

id sub_1004595C4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_prepareForHitTestingInBackgroundWithMarqueeSelectionEligibleInfos:marqueeSelectionIneligibleInfos:viewScale:visibleUnscaledRect:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88));
}

void sub_100459878(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 56);
  *(_QWORD *)(v2 + 56) = 0;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 64);
  *(_QWORD *)(v4 + 64) = 0;

  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(void **)(v6 + 72);
  *(_QWORD *)(v6 + 72) = 0;

}

void sub_100459F04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100459F34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045A760(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045A790(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045AAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10045AB38(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10045AB48(uint64_t a1)
{

}

void sub_10045AB50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "pathsWithPercentage:approximatelyInsidePath:requiringPercentForFilledEdges:", *(_QWORD *)(a1 + 40), 1, 0.5));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v5 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v12;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v12 != v8)
          objc_enumerationMutation(v5);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "objectForKeyedSubscript:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v9), (_QWORD)v11));
        if (v10)
          objc_msgSend(*(id *)(a1 + 48), "addObject:", v10);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v7);
  }

}

_TtC8Freeform12CRLBoardItem *__cdecl sub_10045C044(id a1, CRLCanvasLayout *a2)
{
  CRLCanvasLayout *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;

  v2 = a2;
  *(_QWORD *)&v4 = objc_opt_class(_TtC8Freeform12CRLBoardItem, v3).n128_u64[0];
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(-[CRLCanvasLayout info](v2, "info", v4));

  v8 = sub_100221D0C(v6, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return (_TtC8Freeform12CRLBoardItem *)v9;
}

void sub_10045CCC0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend(a2, "copy");
  objc_msgSend(*(id *)(a1 + 32), "setObject:atIndexedSubscript:", v5, a3);

}

void sub_10045D3D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045D400(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045D67C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045D980(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045D9BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045D9EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045DA1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045DA4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045DD68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045DDA4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045DDD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045DE04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045DE34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E07C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045E0B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E0E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E470(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045E4CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E4FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10045E52C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10045E53C(uint64_t a1)
{

}

void sub_10045E544(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_10045E8B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045E8F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E928(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E958(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E988(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045E9F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045EA68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045EAD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045EC4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045ECEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLFreehandDrawingPathCreatorCodeCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC6C8;
  off_1013DC6C8 = v2;

}

void sub_10045EEBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045EEE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045EF14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045F2F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10045F318(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045F348(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045F830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28)
{
  void *v28;

  _Unwind_Resume(a1);
}

void sub_10045F8A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045F8D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045F9DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

_QWORD *sub_10045FA7C(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_10045FAF4(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10045FAD8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10045FAF4(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x333333333333334)
    sub_100007810();
  result = (char *)sub_10015C128((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[80 * v4];
  return result;
}

_QWORD *sub_10045FB44(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_10045FAF4(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_10045FBA0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10045FF1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10045FF4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100460100(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100460130(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004602C0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004602F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_100460D6C(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "integerValue") == *(id *)(a1 + 32);
}

id sub_100460E24(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:");
}

id sub_100460F64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  _UNKNOWN **v5;
  _UNKNOWN **v6;
  id v7;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "objectForKeyedSubscript:", a2));
  v4 = (void *)v3;
  v5 = &off_1012CC8B0;
  if (v3)
    v5 = (_UNKNOWN **)v3;
  v6 = v5;

  v7 = objc_msgSend(*(id *)(a1 + 40), "containsObject:", v6);
  return v7;
}

id sub_100461240(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "entriesCountImpl");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1004614B4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1004614D0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100461500(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100461530(uint64_t a1)
{
  dispatch_semaphore_t *WeakRetained;
  dispatch_semaphore_t *v2;

  WeakRetained = (dispatch_semaphore_t *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    dispatch_semaphore_signal(WeakRetained[4]);
    WeakRetained = v2;
  }

}

id sub_100461638(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "beginEntryWithNameImpl:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 68), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64), *(unsigned __int8 *)(a1 + 69));
}

void sub_100461A90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100461AC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100461AF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100461B20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_100461C24(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "addDataImpl:queue:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

void sub_100461FAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100461FDC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10046200C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_10046201C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_10046202C(uint64_t a1, uint64_t a2, uint64_t a3, const Bytef *a4, unint64_t a5)
{
  unsigned int v8;
  void *v10;
  void *v11;
  void *v12;

  v8 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "CRC");
  if (HIDWORD(a5))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FC60);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E37214();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FC80);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLZipWriter addDataImpl:queue:completion:]_block_invoke"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/Zip/CRLZipWriter.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 273, 0, "Out-of-bounds type assignment was clamped to max");

    LODWORD(a5) = -1;
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "setCRC:", crc32(v8, a4, a5));
  return 1;
}

void sub_1004621BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004621EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004623C4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  CKRecordID v20;
  Swift::String v21;
  _QWORD v22[5];
  id v23;
  id v24;
  _QWORD block[4];
  id v26;
  id v27;

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v2 + 72))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FCC8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E37294();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FCE8);
    v10 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v10);
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Trying to flush while closed.", v11, v12, v13, v14, v15, v16, v17, (uint64_t)"-[CRLZipWriter flushCurrentEntryWithQueue:completion:]_block_invoke");
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLZipWriter flushCurrentEntryWithQueue:completion:]_block_invoke"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/Zip/CRLZipWriter.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v18, v19, 291, 1, "Trying to flush while closed.");

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
    abort();
  }
  v3 = *(void **)(v2 + 160);
  if (v3)
  {
    v4 = v3;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100462678;
    block[3] = &unk_10122C360;
    v5 = *(NSObject **)(a1 + 40);
    v6 = *(id *)(a1 + 48);
    v26 = v4;
    v27 = v6;
    v7 = v4;
    dispatch_async(v5, block);

  }
  else
  {
    objc_msgSend((id)v2, "finishEntry");
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(NSObject **)(v8 + 16);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_100462688;
    v22[3] = &unk_101253178;
    v22[4] = v8;
    v24 = *(id *)(a1 + 48);
    v23 = *(id *)(a1 + 40);
    dispatch_async(v9, v22);

  }
}

void sub_100462618(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100462648(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100462678(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100462688(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[5];
  id v7;
  id v8;

  dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 16));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_writeChannel"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100462730;
  v6[3] = &unk_10125FD10;
  v3 = *(id *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v8 = v3;
  v6[4] = v4;
  v7 = v5;
  objc_msgSend(v2, "flushWithCompletion:", v6);

}

void sub_100462730(_QWORD *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void (**v7)(_QWORD, _QWORD);
  NSObject *v8;
  _QWORD v9[4];
  id v10;
  void (**v11)(_QWORD, _QWORD);

  v3 = a2;
  v4 = v3;
  if (a1[6])
  {
    v5 = v3;
    if (!v3)
      v5 = *(void **)(a1[4] + 160);
    v6 = v5;
    v7 = (void (**)(_QWORD, _QWORD))a1[6];
    if (v7)
    {
      v8 = a1[5];
      if (v8)
      {
        v9[0] = _NSConcreteStackBlock;
        v9[1] = 3221225472;
        v9[2] = sub_100462810;
        v9[3] = &unk_10122C360;
        v11 = v7;
        v10 = v6;
        dispatch_async(v8, v9);

      }
      else
      {
        ((void (**)(_QWORD, id))v7)[2](v7, v6);
      }
    }

  }
  dispatch_resume(*(dispatch_object_t *)(a1[4] + 16));

}

uint64_t sub_100462810(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1004629F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100462AE8(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7;
  uint64_t v8;
  id v9;

  v9 = a3;
  v7 = a4;
  if (a2)
  {
    v8 = *(_QWORD *)(a1 + 32);
    if (v8)
      (*(void (**)(uint64_t, BOOL, id))(v8 + 16))(v8, v7 == 0, v7);
  }

}

void sub_100462D9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100462DCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100462DFC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  CKRecordID v14;
  Swift::String v15;
  _QWORD v16[5];
  id v17;

  v1 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v1 + 72))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FDB8);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E373E4();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FDD8);
    v4 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v4);
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Already closed.", v5, v6, v7, v8, v9, v10, v11, (uint64_t)"-[CRLZipWriter writeEntryWithName:force32BitSize:lastModificationDate:size:CRC:fromReadChannel:writeHandler:]_block_invoke");
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLZipWriter writeEntryWithName:force32BitSize:lastModificationDate:size:CRC:fromReadChannel:writeHandler:]_block_invoke"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/Zip/CRLZipWriter.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 367, 1, "Already closed.");

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    abort();
  }
  dispatch_suspend(*(dispatch_object_t *)(v1 + 144));
  objc_msgSend(*(id *)(a1 + 32), "beginEntryWithNameImpl:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 84), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72), *(unsigned int *)(a1 + 80), 0);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100463044;
  v16[3] = &unk_10125FE00;
  v16[4] = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 56);
  v17 = *(id *)(a1 + 64);
  objc_msgSend(v3, "readWithHandler:", v16);

}

void sub_100462FE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100463014(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100463044(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;

  v7 = a3;
  objc_msgSend(*(id *)(a1 + 32), "handleWriteError:", a4);
  if (v7)
  {
    v8 = *(_QWORD **)(a1 + 32);
    if (!v8[20])
      objc_msgSend(v8, "addDataImpl:queue:completion:", v7, 0, 0);
  }
  v9 = *(_QWORD *)(a1 + 40);
  if (v9)
  {
    v12 = 0;
    (*(void (**)(uint64_t, uint64_t, id, _QWORD, char *))(v9 + 16))(v9, a2, v7, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 160), &v12);
    if (v12)
    {
      v10 = *(void **)(a1 + 32);
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", NSCocoaErrorDomain, 3072, 0));
      objc_msgSend(v10, "handleWriteError:", v11);

    }
  }
  if ((_DWORD)a2)
    dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 144));

}

id sub_1004631E0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "addExistingEntryImpl:", *(_QWORD *)(a1 + 40));
}

id sub_100463364(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setEntryInsertionOffsetImpl:", *(_QWORD *)(a1 + 40));
}

void sub_100463408(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  NSObject *v4;
  _QWORD v5[5];
  id v6;

  dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 144));
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  v4 = *(NSObject **)(v2 + 16);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10046348C;
  v5[3] = &unk_101231F00;
  v5[4] = v2;
  v6 = v3;
  dispatch_async(v4, v5);

}

void sub_10046348C(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD v4[5];
  id v5;

  dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 16));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_writeChannel"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100463520;
  v4[3] = &unk_10122C360;
  v3 = *(id *)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(v2, "addBarrier:", v4);

}

void sub_100463520(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 16));
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 144));
}

void sub_100463604(id *a1)
{
  _BYTE *v2;
  id v3;
  NSObject *v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  CKRecordID v19;
  Swift::String v20;
  _QWORD v21[5];
  id v22;
  id v23;
  _QWORD block[4];
  id v25;
  id v26;

  v2 = a1[4];
  if (v2[72])
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FE48);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E37464();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FE68);
    v9 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v9);
    sub_1001BC7E8((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Shouldn't have closed twice.", v10, v11, v12, v13, v14, v15, v16, (uint64_t)"-[CRLZipWriter closeWithQueue:completion:]_block_invoke");
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLZipWriter closeWithQueue:completion:]_block_invoke"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/Zip/CRLZipWriter.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v17, v18, 460, 1, "Shouldn't have closed twice.");

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    abort();
  }
  if (*((_QWORD *)v2 + 20))
  {
    v2[72] = 1;
    v3 = *((id *)a1[4] + 20);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004638DC;
    block[3] = &unk_10122C360;
    v4 = a1[5];
    v5 = a1[6];
    v25 = v3;
    v26 = v5;
    v6 = v3;
    dispatch_async(v4, block);

  }
  else
  {
    objc_msgSend(v2, "finishEntry");
    objc_msgSend(a1[4], "writeCentralDirectory");
    *((_BYTE *)a1[4] + 72) = 1;
    v7 = a1[4];
    v8 = *((_QWORD *)v7 + 2);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_1004638EC;
    v21[3] = &unk_101253178;
    v21[4] = v7;
    v23 = a1[6];
    v22 = a1[5];
    dispatch_async(v8, v21);

  }
}

void sub_10046387C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004638AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1004638DC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1004638EC(id *a1)
{
  void *v2;
  _QWORD v3[5];
  id v4;
  id v5;
  id v6;
  id location;

  dispatch_suspend(*((dispatch_object_t *)a1[4] + 2));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "p_writeChannel"));
  objc_initWeak(&location, v2);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1004639EC;
  v3[3] = &unk_10125FED0;
  objc_copyWeak(&v6, &location);
  v3[4] = a1[4];
  v5 = a1[6];
  v4 = a1[5];
  objc_msgSend(v2, "addBarrier:", v3);

  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);

}

void sub_1004639D0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1004639EC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  _QWORD block[4];
  id v10;
  uint64_t v11;
  id v12;
  id v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained)
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FE88);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E374E4();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_10125FEA8);
    v3 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE7468(v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLZipWriter closeWithQueue:completion:]_block_invoke"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/Zip/CRLZipWriter.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v4, v5, 491, 0, "invalid nil value for '%{public}s'", "strongWriteChannel");

  }
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(NSObject **)(v6 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100463C34;
  block[3] = &unk_101253098;
  v10 = WeakRetained;
  v11 = v6;
  v13 = *(id *)(a1 + 48);
  v12 = *(id *)(a1 + 40);
  v8 = WeakRetained;
  dispatch_async(v7, block);

}

void sub_100463BD4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100463C04(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100463C34(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "close");
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(*(_QWORD *)(a1 + 40) + 32), 0xFFFFFFFFFFFFFFFFLL);
  if (*(_QWORD *)(a1 + 56))
  {
    v2 = *(id *)(*(_QWORD *)(a1 + 40) + 160);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100463CFC;
    v6[3] = &unk_10122C360;
    v3 = *(NSObject **)(a1 + 48);
    v4 = *(id *)(a1 + 56);
    v7 = v2;
    v8 = v4;
    v5 = v2;
    dispatch_async(v3, v6);

  }
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 40) + 16));
}

uint64_t sub_100463CFC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100464078(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100464378(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_1004646E4(uint64_t a1, void *a2)
{
  id v3;
  void (**v4)(_QWORD, _QWORD);
  NSObject *v5;
  _QWORD v6[4];
  id v7;
  void (**v8)(_QWORD, _QWORD);

  v3 = a2;
  v4 = *(void (***)(_QWORD, _QWORD))(a1 + 40);
  if (v4)
  {
    v5 = *(NSObject **)(a1 + 32);
    if (v5)
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_10046478C;
      v6[3] = &unk_10122C360;
      v8 = v4;
      v7 = v3;
      dispatch_async(v5, v6);

    }
    else
    {
      ((void (**)(_QWORD, id))v4)[2](v4, v3);
    }
  }

}

uint64_t sub_10046478C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100464850(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[5];
  id v7;
  _QWORD *v8;
  _QWORD v9[5];
  id v10;

  dispatch_suspend(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 16));
  v9[0] = 0;
  v9[1] = v9;
  v9[2] = 0x3032000000;
  v9[3] = sub_100464954;
  v9[4] = sub_100464964;
  v10 = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_writeChannel"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10046496C;
  v6[3] = &unk_10125FF60;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v8 = v9;
  v6[4] = v3;
  v5 = *(_QWORD *)(a1 + 56);
  v7 = *(id *)(a1 + 48);
  objc_msgSend(v2, "writeData:offset:handler:", v4, v5, v6);

  _Block_object_dispose(v9, 8);
}

void sub_10046493C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100464954(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100464964(uint64_t a1)
{

}

void sub_10046496C(_QWORD *a1, int a2, uint64_t a3, void *a4)
{
  id v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD v15[6];

  v7 = a4;
  if (v7 && (v8 = *(_QWORD *)(a1[6] + 8), v10 = *(_QWORD *)(v8 + 40), v9 = (id *)(v8 + 40), !v10))
  {
    objc_storeStrong(v9, a4);
    if (!a2)
      goto LABEL_11;
  }
  else if (!a2)
  {
    goto LABEL_11;
  }
  v11 = a1[6];
  if (*(_QWORD *)(*(_QWORD *)(v11 + 8) + 40))
  {
    v12 = a1[4];
    v13 = *(NSObject **)(v12 + 144);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100464A4C;
    v15[3] = &unk_10122C6A0;
    v15[4] = v12;
    v15[5] = v11;
    dispatch_async(v13, v15);
  }
  v14 = a1[5];
  if (v14)
    (*(void (**)(uint64_t, _QWORD))(v14 + 16))(v14, *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
  dispatch_resume(*(dispatch_object_t *)(a1[4] + 16));
LABEL_11:

}

id sub_100464A4C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "handleWriteError:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

void sub_100464D14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100464D44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_100464E04(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_QWORD *)(*(_QWORD *)(result + 32) + 112);
  return result;
}

void sub_100464F44(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100464F74(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_writeChannel"));
  objc_msgSend(v1, "close");

}

void sub_100465020(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  CRLZipEntry *v8;
  void *v9;
  id v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unsigned __int8 v16;
  _BYTE v17[128];

  v16 = 0;
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 40);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v17, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v13;
LABEL_3:
    v6 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v5)
        objc_enumerationMutation(v2);
      v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * v6);
      v8 = objc_alloc_init(CRLZipEntry);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "name", (_QWORD)v12));
      -[CRLZipEntry setName:](v8, "setName:", v9);

      v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(-[CRLZipEntry name](v8, "name")));
      -[CRLZipEntry setNameLength:](v8, "setNameLength:", (unsigned __int16)strlen((const char *)objc_msgSend(v10, "UTF8String")));

      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "lastModificationDate"));
      -[CRLZipEntry setLastModificationDate:](v8, "setLastModificationDate:", v11);

      -[CRLZipEntry setSize:](v8, "setSize:", objc_msgSend(v7, "size"));
      -[CRLZipEntry setCompressedSize:](v8, "setCompressedSize:", objc_msgSend(v7, "size"));
      -[CRLZipEntry setOffset:](v8, "setOffset:", objc_msgSend(v7, "offset"));
      -[CRLZipEntry setCRC:](v8, "setCRC:", objc_msgSend(v7, "CRC"));
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
      LODWORD(v7) = v16;

      if ((_DWORD)v7)
        break;
      if (v4 == (id)++v6)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v12, v17, 16);
        if (v4)
          goto LABEL_3;
        break;
      }
    }
  }

}

int64_t sub_100465254(id a1, CRLZipWriterEntry *a2, CRLZipWriterEntry *a3)
{
  CRLZipWriterEntry *v4;
  unint64_t v5;
  unint64_t v6;

  v4 = a3;
  v5 = -[CRLZipWriterEntry offset](a2, "offset");
  v6 = -[CRLZipWriterEntry offset](v4, "offset");

  if (v5 < v6)
    return -1;
  else
    return v5 > v6;
}

void sub_10046535C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sortedEntriesImpl"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t sub_100465424(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 72);
  return result;
}

void sub_10046550C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 56), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_1004655D4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "truncateToNumberOfEntriesImpl:completion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

id sub_1004657A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "truncateToOffsetImpl:completion:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

void sub_100465A6C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100465A9C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

char *sub_1004662AC(uint64_t a1)
{
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  unint64_t v10;
  char *v11;
  char *result;
  id v13;
  NSUInteger v14;
  NSUInteger v15;
  NSUInteger v16;
  char *v17;
  char *v18;
  uint64_t v19;
  NSRange v20;
  NSRange v21;

  v2 = objc_msgSend(*(id *)(a1 + 32), "range");
  if (v2 >= objc_msgSend(*(id *)(a1 + 40), "range")
    || (v3 = (char *)objc_msgSend(*(id *)(a1 + 40), "range"),
        v5 = &v3[v4],
        v6 = (char *)objc_msgSend(*(id *)(a1 + 32), "range"),
        v5 >= &v6[v7]))
  {
    v13 = objc_msgSend(*(id *)(a1 + 32), "range");
    v15 = v14;
    v21.location = (NSUInteger)objc_msgSend(*(id *)(a1 + 40), "range");
    v21.length = v16;
    v20.location = (NSUInteger)v13;
    v20.length = v15;
    return (char *)NSUnionRange(v20, v21).location;
  }
  else
  {
    v8 = (char *)objc_msgSend(*(id *)(a1 + 40), "range");
    v9 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
    if (v8 <= &v9[v10 >> 1])
    {
      v17 = (char *)objc_msgSend(*(id *)(a1 + 40), "range");
      v18 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
      if (v17 >= &v18[v19])
        return &v18[v19];
      else
        return v17;
    }
    else
    {
      v11 = (char *)objc_msgSend(*(id *)(a1 + 32), "range");
      result = (char *)objc_msgSend(*(id *)(a1 + 40), "range");
      if (v11 < result)
        return v11;
    }
  }
  return result;
}

void sub_1004670D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100467104(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004678FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046792C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100467B4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100467B7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004685E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100468610(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100469280(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004692B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100469C20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100469C50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100469F60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100469F90(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046A650(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046A680(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046A6B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046A6E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046AA78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046AAA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046AFCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046AFFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046B02C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046B05C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046BA88(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046BAB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046C418(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046C448(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046C478(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046C4A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046C81C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046C84C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046D1C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046D1F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10046D2D8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

void sub_10046D394(uint64_t a1, void *a2)
{
  id v3;
  int v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = a2;
  if (!v3)
  {
    v4 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012604F0);
    v5 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E37F90(v4, v5);
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_101260510);
    v6 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100DE81F0(v6, v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLRotorSearchController locateSearchReference:]_block_invoke"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLAccessibility/Canvas/Accessibility/iOS/CRLRotorSearchController.m"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v7, v8, 82, 0, "invalid nil value for '%{public}s'", "layout");

  }
  if ((objc_opt_respondsToSelector(v3, "calculatePointFromSearchReference:") & 1) != 0)
  {
    objc_msgSend(v3, "calculatePointFromSearchReference:", *(_QWORD *)(a1 + 32));
    objc_msgSend(*(id *)(a1 + 32), "setSearchReferencePoint:");
    objc_msgSend(v3, "alignmentFrameInRoot");
    objc_msgSend(*(id *)(a1 + 32), "setSearchReferenceLayoutFrame:");
  }

}

void sub_10046D534(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046D564(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_10046DAAC(int a1)
{
  return a1 == 0;
}

void sub_10046EAE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10046EB14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10046F050(_OWORD *a1, void *a2)
{
  __int128 v2;
  _OWORD v4[3];

  v2 = a1[3];
  v4[0] = a1[2];
  v4[1] = v2;
  v4[2] = a1[4];
  return (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "crl_strokeByAppendingTransform:", v4));
}

void sub_10046F3A8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double v8;
  char v9;

  v9 = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "crlaxValueForKey:", CFSTR("_visualElement")));
  objc_opt_class(UIView, v3);
  v5 = __CRLAccessibilityCastAsClass(v4, (uint64_t)v2, 1, &v9);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (v9)
    abort();
  v7 = (void *)v6;

  LODWORD(v8) = *(_DWORD *)(a1 + 40);
  objc_msgSend(v7, "_setValue:andSendAction:", *(unsigned __int8 *)(a1 + 44), v8);

}

void sub_100470C30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100470C60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100470EC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100470EF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047167C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004716AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004716DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047170C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100471988(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004719B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100471B54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100471B84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100471EC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100471EF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004720F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100472120(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004731A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004731D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100474300(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100474330(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100474D34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100474D64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004772A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004772D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100477774(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004777A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100477CE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_100477DF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

double sub_100479D94(uint64_t a1)
{
  if ((unint64_t)(a1 - 9) > 5)
    return 150.0;
  else
    return dbl_100EF03D8[a1 - 9];
}

void sub_10047A258(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047A288(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047A570(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047A5A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047A8D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047A904(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047ACEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047AD1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047AFFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047B02C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047B7C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047B7F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047BB40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047BB70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t (**sub_10047BDF4(uint64_t a1))(void)
{
  uint64_t (**result)(void);

  result = *(uint64_t (***)(void))(a1 + 48);
  if (result)
    result = (uint64_t (**)(void))result[2]();
  if (*(_QWORD *)(a1 + 32))
    return (uint64_t (**)(void))objc_msgSend(*(id *)(a1 + 40), "endIgnoringUserInteractionWithToken:");
  return result;
}

void sub_10047BFC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047BFF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047C198(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047C1C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047C4E8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047C518(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047C840(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047C870(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047CA04(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "checkForUpdateWithCompletionHandler:", 0);

}

_BYTE *sub_10047CAFC(uint64_t a1)
{
  _BYTE *result;
  uint64_t v3;

  result = *(_BYTE **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  if (!result[40])
    return objc_msgSend(result, "checkForUpdateWithCompletionHandler:", v3);
  if (v3)
    return (_BYTE *)(*(uint64_t (**)(uint64_t, _QWORD))(v3 + 16))(v3, 0);
  return result;
}

uint64_t sub_10047CC00(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10047CC10(uint64_t a1)
{

}

void sub_10047CC18(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 16), "objectForKeyedSubscript:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_10047CF64(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;

  v14 = a4;
  v7 = a3;
  v8 = a2;
  objc_opt_class(NSHTTPURLResponse, v9);
  v11 = sub_1002223BC(v10, v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  objc_msgSend(*(id *)(a1 + 32), "processResponse:data:error:", v12, v8, v14);
  objc_msgSend(*(id *)(a1 + 40), "endBackgroundTask:", *(_QWORD *)(a1 + 56));
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 24));
  v13 = *(_QWORD *)(a1 + 48);
  if (v13)
    (*(void (**)(uint64_t, id))(v13 + 16))(v13, v14);

}

void sub_10047D4F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10047D638(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10047D668(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;

}

void sub_10047D77C(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc(*(Class *)(a1 + 32)), "initInternal");
  v2 = (void *)qword_101415AA8;
  qword_101415AA8 = (uint64_t)v1;

}

void sub_10047D9F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047DA20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047DDF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047DE24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047DE54(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047DE84(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047E29C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047E2CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047EDD8(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  CRLPasteboardMultipleImportableBoardItemProvider *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  CRLPasteboardMultipleImportableBoardItemProvider *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  CRLPasteboardMultipleImportableBoardItemProvider *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  _QWORD v42[4];
  id v43;
  void *v44;
  CRLPasteboardMultipleImportableBoardItemProvider *v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  char v53;
  _QWORD v54[4];
  CRLPasteboardMultipleImportableBoardItemProvider *v55;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectionModelTranslator"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "editorController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selectionPath"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "containerToInsertIntoForSelectionPath:", v6));

    objc_opt_class(_TtC8Freeform12CRLGroupItem, v8);
    v10 = sub_100221D0C(v9, v7);
    v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    if (v11)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "canvasEditor"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "pasteboardController"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "asyncProvidersForBoardItemsFromPasteboard:", *(_QWORD *)(a1 + 40)));
      if (objc_msgSend(v15, "count"))
      {
        v41 = v7;
        v16 = -[CRLPasteboardMultipleImportableBoardItemProvider initWithImportableBoardItemProviders:]([CRLPasteboardMultipleImportableBoardItemProvider alloc], "initWithImportableBoardItemProviders:", v15);
        -[CRLPasteboardMultipleImportableBoardItemProvider setAlertPresenter:](v16, "setAlertPresenter:", v13);
        v39 = v15;
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "editingCoordinator"));
        objc_msgSend(v18, "suspendCollaborationWithReason:", CFSTR("CRLGroupEditorPastingAsyncDrawables"));

        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "layerHost"));
        v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
        v40 = v12;
        v21 = v13;
        v22 = v14;
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "localizedStringForKey:value:table:", CFSTR("Pasting…"), 0, 0));
        v24 = (void *)objc_claimAutoreleasedReturnValue(-[CRLPasteboardMultipleImportableBoardItemProvider progress](v16, "progress"));
        v54[0] = _NSConcreteStackBlock;
        v54[1] = 3221225472;
        v54[2] = sub_10047F2F4;
        v54[3] = &unk_10122D110;
        v25 = v16;
        v55 = v25;
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "beginModalOperationWithPresentedLocalizedMessage:progress:cancelHandler:", v23, v24, v54));

        v14 = v22;
        v13 = v21;
        v12 = v40;

        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "editingCoordinator"));
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "boardItemFactory"));
        v42[0] = _NSConcreteStackBlock;
        v42[1] = 3221225472;
        v42[2] = sub_10047F2FC;
        v42[3] = &unk_101260E10;
        v43 = v40;
        v44 = v26;
        v45 = v25;
        v46 = v14;
        v47 = *(id *)(a1 + 40);
        v48 = v13;
        v29 = v11;
        v30 = *(_QWORD *)(a1 + 32);
        v49 = v29;
        v50 = v30;
        v31 = *(void **)(a1 + 48);
        v52 = *(_QWORD *)(a1 + 56);
        v53 = *(_BYTE *)(a1 + 64);
        v51 = v31;
        v32 = v25;
        -[CRLPasteboardMultipleImportableBoardItemProvider provideBoardItemsWithFactory:completionHandler:](v32, "provideBoardItemsWithFactory:completionHandler:", v28, v42);

        v15 = v39;
        v7 = v41;

      }
      else
      {
        v38 = *(_QWORD *)(a1 + 48);
        if (v38)
          (*(void (**)(uint64_t, void *))(v38 + 16))(v38, &__NSArray0__struct);
      }

    }
    else
    {
      +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101260DC8);
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100E38CC4();
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101260DE8);
      v34 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
        sub_100DE7468(v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLGroupEditor pasteWithPasteboard:atIndex:forceMatchStyle:bakeFormulas:completionHandler:]_block_invoke"));
      v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupEditor.m"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v35, v36, 229, 0, "invalid nil value for '%{public}s'", "groupToInsertInto");

      v37 = *(_QWORD *)(a1 + 48);
      if (v37)
        (*(void (**)(uint64_t, void *))(v37 + 16))(v37, &__NSArray0__struct);
    }

  }
  else
  {
    v33 = *(_QWORD *)(a1 + 48);
    if (v33)
      (*(void (**)(uint64_t, void *))(v33 + 16))(v33, &__NSArray0__struct);
  }
}

void sub_10047F294(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047F2C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10047F2F4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "cancel");
}

void sub_10047F2FC(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char v23;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layerHost"));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10047F3F4;
  v12[3] = &unk_101260E10;
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v13 = v3;
  v14 = v4;
  v6 = v5;
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(void **)(a1 + 64);
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = *(id *)(a1 + 72);
  v9 = *(id *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(void **)(a1 + 96);
  v19 = v9;
  v20 = v10;
  v22 = *(_QWORD *)(a1 + 104);
  v23 = *(_BYTE *)(a1 + 112);
  v21 = v11;
  objc_msgSend(v2, "continueAsynchronousWorkOnMainThreadUsingBlock:", v12);

}

void sub_10047F3F4(uint64_t a1)
{
  void *v2;
  void *v3;
  unsigned int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layerHost"));
  objc_msgSend(v2, "endModalOperationWithToken:", *(_QWORD *)(a1 + 40));

  if ((objc_msgSend(*(id *)(a1 + 48), "isCancelled") & 1) != 0)
  {
    v14 = &__NSArray0__struct;
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "boardItems"));
    if (objc_msgSend(v3, "count"))
    {
      v4 = objc_msgSend(*(id *)(a1 + 56), "hasNativeBoardItemsOnPasteboard:", *(_QWORD *)(a1 + 64));
      v5 = *(void **)(a1 + 72);
      if (v4)
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "canvasEditorHelper"));
        objc_msgSend(v6, "prepareGeometryForPastingBoardItems:fromPasteboard:intoContainer:useOriginalPositions:", v3, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 80), 0);
      }
      else
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(+[CRLInsertionContext nonInteractiveInsertionContext](CRLInsertionContext, "nonInteractiveInsertionContext"));
        objc_msgSend(v5, "prepareGeometryForInsertingBoardItems:withInsertionContext:", v3, v6);
      }

      v14 = v3;
      objc_msgSend(*(id *)(a1 + 88), "p_pasteBoardItems:inGroup:atIndex:forceMatchStyle:isCrossDocument:");
    }
    else
    {
      v14 = &__NSArray0__struct;
    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "errors"));
    if (objc_msgSend(v7, "count"))
    {
      v8 = *(void **)(a1 + 32);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "localizedErrorDescription"));
      objc_msgSend(v8, "presentErrors:withLocalizedDescription:completionHandler:", v7, v9, 0);

    }
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 88), "interactiveCanvasController"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "editingCoordinator"));
  objc_msgSend(v11, "resumeCollaborationWithReason:", CFSTR("CRLGroupEditorPastingAsyncDrawables"));

  v12 = *(_QWORD *)(a1 + 96);
  v13 = v14;
  if (v12)
  {
    (*(void (**)(void))(v12 + 16))();
    v13 = v14;
  }

}

void sub_10047FE1C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047FE4C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047FE7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047FEAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10047FF60(uint64_t a1, int a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  BOOL v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *i;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char isKindOfClass;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  void *j;
  void *v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  id v59;
  unsigned int v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  id v73;
  unsigned int v74;
  NSObject *v75;
  void *v76;
  void *v77;
  void *v78;
  NSObject *v79;
  char *v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  void *k;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  NSObject *v99;
  const char *v100;
  id v101;
  NSObject *v102;
  char *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  void *m;
  uint64_t v115;
  void *v116;
  void *v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  id v123;
  void *v124;
  uint64_t v125;
  _TtC8Freeform21CRLBoardItemSelection *v126;
  void *v127;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  id v132;
  CRLCommandSelectionBehavior *v133;
  void *v134;
  _BOOL4 v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  id v141;
  void *v142;
  id v143;
  uint64_t v144;
  void *v145;
  id v146;
  id v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  void *v152;
  id v153;
  void *v154;
  id obj;
  id obja;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  _OWORD v161[3];
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  _BYTE v182[128];
  _BYTE v183[128];
  uint8_t v184[128];
  uint8_t buf[4];
  unsigned int v186;
  __int16 v187;
  const char *v188;
  __int16 v189;
  const char *v190;
  __int16 v191;
  int v192;
  __int16 v193;
  const char *v194;
  __int16 v195;
  id v196;
  _BYTE v197[128];
  _BYTE v198[128];
  _BYTE v199[128];

  if (a2)
  {
    v2 = a1;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "infosForCurrentSelectionPath"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "freehandDrawingToolkit"));
    v6 = objc_msgSend(v5, "isLassoAbleToSelectMixedType");

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "freehandDrawingToolkit"));
    v8 = objc_msgSend(v7, "isInDrawingMode");

    if (v8)
      v9 = v6 == 0;
    else
      v9 = 1;
    v154 = v3;
    v149 = v2;
    v137 = v4;
    if (v9)
    {
      v135 = 0;
    }
    else
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
      v178 = 0u;
      v179 = 0u;
      v180 = 0u;
      v181 = 0u;
      obj = v4;
      v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v178, v199, 16);
      if (v11)
      {
        v13 = v11;
        v14 = *(_QWORD *)v179;
        do
        {
          for (i = 0; i != v13; i = (char *)i + 1)
          {
            if (*(_QWORD *)v179 != v14)
              objc_enumerationMutation(obj);
            v16 = *(void **)(*((_QWORD *)&v178 + 1) + 8 * (_QWORD)i);
            objc_opt_class(_TtC8Freeform12CRLShapeItem, v12);
            v18 = sub_100221D0C(v17, v16);
            v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
            v21 = v19;
            if (v19
              && (v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "parentInfo")),
                  objc_opt_class(_TtC8Freeform22CRLFreehandDrawingItem, v23),
                  isKindOfClass = objc_opt_isKindOfClass(v22, v24),
                  v22,
                  (isKindOfClass & 1) != 0))
            {
              v26 = v10;
              v27 = v21;
            }
            else
            {
              objc_opt_class(_TtC8Freeform22CRLFreehandDrawingItem, v20);
              v29 = sub_100221D0C(v28, v16);
              v30 = (void *)objc_claimAutoreleasedReturnValue(v29);

              if (!v30)
                goto LABEL_19;
              v26 = v10;
              v27 = v16;
            }
            objc_msgSend(v26, "addObject:", v27);
LABEL_19:

          }
          v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v178, v199, 16);
        }
        while (v13);
      }

      v31 = objc_msgSend(obj, "count");
      v32 = objc_msgSend(v10, "count");
      v135 = v31 != v32;
      if (v31 != v32)
      {
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "canvasEditor"));
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "selectionPathWithInfos:", v10));

        objc_msgSend(v3, "setSelectionPath:withSelectionFlags:", v34, 0);
      }

      v2 = v149;
    }
    v142 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "canvasEditor"));
    v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 32), "editorController"));
    v136 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "selectionPath"));

    v138 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
    v147 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 0, 0, 0);
    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectionModelTranslator"));
    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "editorController"));
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "selectionPath"));
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "unlockedBoardItemsForSelectionPath:", v38));

    v176 = 0u;
    v177 = 0u;
    v174 = 0u;
    v175 = 0u;
    v143 = v39;
    v40 = objc_msgSend(v143, "countByEnumeratingWithState:objects:count:", &v174, v198, 16);
    if (v40)
    {
      v42 = v40;
      v43 = *(_QWORD *)v175;
      do
      {
        for (j = 0; j != v42; j = (char *)j + 1)
        {
          if (*(_QWORD *)v175 != v43)
            objc_enumerationMutation(v143);
          v45 = *(void **)(*((_QWORD *)&v174 + 1) + 8 * (_QWORD)j);
          *(_QWORD *)&v46 = objc_opt_class(_TtC8Freeform12CRLGroupItem, v41).n128_u64[0];
          v48 = v47;
          v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "parentInfo", v46));
          v50 = sub_100221D0C(v48, v49);
          v51 = (void *)objc_claimAutoreleasedReturnValue(v50);

          if (v51)
          {
            v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v147, "objectForKeyedSubscript:", v51));
            if (!v52)
            {
              v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
              objc_msgSend(v147, "setObject:forKey:", v52, v51);
            }
            objc_msgSend(v52, "addObject:", v45);

          }
          else
          {
            objc_msgSend(v138, "addObject:", v45);
          }

        }
        v42 = objc_msgSend(v143, "countByEnumeratingWithState:objects:count:", &v174, v198, 16);
      }
      while (v42);
    }

    v53 = v142;
    v145 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v142, "pasteboardController"));
    v141 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 0, 0, 0);
    v140 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v139 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
    v54 = v147;
    if (objc_msgSend(v147, "count"))
    {
      v172 = 0u;
      v173 = 0u;
      v170 = 0u;
      v171 = 0u;
      v148 = v147;
      v146 = objc_msgSend(v148, "countByEnumeratingWithState:objects:count:", &v170, v197, 16);
      if (v146)
      {
        v144 = *(_QWORD *)v171;
        do
        {
          v55 = 0;
          do
          {
            if (*(_QWORD *)v171 != v144)
              objc_enumerationMutation(v148);
            v150 = v55;
            obja = *(id *)(*((_QWORD *)&v170 + 1) + 8 * v55);
            v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v148, "objectForKeyedSubscript:"));
            v57 = objc_claimAutoreleasedReturnValue(+[CRLPasteboard pasteboardWithUniqueName](CRLPasteboard, "pasteboardWithUniqueName"));
            objc_msgSend(v53, "copyBoardItems:toPasteboard:asPDF:nativeOnly:", v56, v57, 0, 1);
            v151 = (void *)v57;
            v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v145, "providersForBoardItemsFromPasteboard:", v57));
            v59 = objc_msgSend(v58, "count");
            v152 = v56;
            if (v59 != objc_msgSend(v56, "count"))
            {
              v60 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
              if (qword_10147E370 != -1)
                dispatch_once(&qword_10147E370, &stru_101260F18);
              v61 = off_1013D9070;
              if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
              {
                v99 = v61;
                v100 = (const char *)objc_msgSend(v58, "count");
                v101 = objc_msgSend(v56, "count");
                *(_DWORD *)buf = 67110402;
                v186 = v60;
                v187 = 2082;
                v188 = "-[CRLGroupEditor duplicate:]_block_invoke";
                v189 = 2082;
                v190 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupEditor.m";
                v191 = 1024;
                v192 = 453;
                v193 = 2048;
                v194 = v100;
                v195 = 2048;
                v196 = v101;
                _os_log_error_impl((void *)&_mh_execute_header, v99, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Copied %zi children instead of %zi", buf, 0x36u);

              }
              if (qword_10147E370 != -1)
                dispatch_once(&qword_10147E370, &stru_101260F38);
              v62 = off_1013D9070;
              if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
              {
                v102 = v62;
                v103 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
                *(_DWORD *)buf = 67109378;
                v186 = v60;
                v187 = 2114;
                v188 = v103;
                _os_log_error_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

              }
              v63 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLGroupEditor duplicate:]_block_invoke"));
              v64 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupEditor.m"));
              +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v63, v64, 453, 0, "Copied %zi children instead of %zi", objc_msgSend(v58, "count"), objc_msgSend(v56, "count"));

            }
            v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
            v166 = 0u;
            v167 = 0u;
            v168 = 0u;
            v169 = 0u;
            v153 = v58;
            v66 = objc_msgSend(v153, "countByEnumeratingWithState:objects:count:", &v166, v184, 16);
            if (v66)
            {
              v67 = v66;
              v68 = *(_QWORD *)v167;
              do
              {
                v69 = 0;
                do
                {
                  if (*(_QWORD *)v167 != v68)
                    objc_enumerationMutation(v153);
                  v70 = *(void **)(*((_QWORD *)&v166 + 1) + 8 * (_QWORD)v69);
                  v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "editingCoordinator"));
                  v72 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v71, "boardItemFactory"));
                  v73 = objc_msgSend(v70, "newBoardItemWithFactory:bakedSize:", v72, 0);

                  if (v73)
                  {
                    objc_msgSend(v65, "addObject:", v73);
                  }
                  else
                  {
                    v74 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
                    if (qword_10147E370 != -1)
                      dispatch_once(&qword_10147E370, &stru_101260F58);
                    v75 = off_1013D9070;
                    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)buf = 67110146;
                      v186 = v74;
                      v187 = 2082;
                      v188 = "-[CRLGroupEditor duplicate:]_block_invoke";
                      v189 = 2082;
                      v190 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupEditor.m";
                      v191 = 1024;
                      v192 = 457;
                      v193 = 2082;
                      v194 = "boardItem";
                      _os_log_error_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", buf, 0x2Cu);
                    }
                    if (qword_10147E370 != -1)
                      dispatch_once(&qword_10147E370, &stru_101260F78);
                    v76 = off_1013D9070;
                    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
                    {
                      v79 = v76;
                      v80 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
                      *(_DWORD *)buf = 67109378;
                      v186 = v74;
                      v187 = 2114;
                      v188 = v80;
                      _os_log_error_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

                    }
                    v77 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLGroupEditor duplicate:]_block_invoke"));
                    v78 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupEditor.m"));
                    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v77, v78, 457, 0, "invalid nil value for '%{public}s'", "boardItem");

                  }
                  v69 = (char *)v69 + 1;
                }
                while (v67 != v69);
                v67 = objc_msgSend(v153, "countByEnumeratingWithState:objects:count:", &v166, v184, 16);
              }
              while (v67);
            }

            if (objc_msgSend(v65, "count"))
            {
              objc_msgSend(v141, "setObject:forKey:", v65, obja);
              objc_msgSend(v140, "addObjectsFromArray:", v65);
              v164 = 0u;
              v165 = 0u;
              v162 = 0u;
              v163 = 0u;
              v81 = v65;
              v82 = objc_msgSend(v81, "countByEnumeratingWithState:objects:count:", &v162, v183, 16);
              if (v82)
              {
                v83 = v82;
                v84 = *(_QWORD *)v163;
                do
                {
                  for (k = 0; k != v83; k = (char *)k + 1)
                  {
                    if (*(_QWORD *)v163 != v84)
                      objc_enumerationMutation(v81);
                    v86 = *(void **)(*((_QWORD *)&v162 + 1) + 8 * (_QWORD)k);
                    v87 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v154, "layoutForInfo:", obja));
                    v88 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v86, "geometry"));
                    v89 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v87, "geometryInRoot"));
                    v90 = v89;
                    if (v89)
                      objc_msgSend(v89, "transform");
                    else
                      memset(v161, 0, sizeof(v161));
                    v91 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v88, "geometryByAppendingTransform:", v161));
                    objc_msgSend(v86, "setGeometry:", v91);

                  }
                  v83 = objc_msgSend(v81, "countByEnumeratingWithState:objects:count:", &v162, v183, 16);
                }
                while (v83);
              }

              v92 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v149 + 32), "editorController"));
              v93 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v92, "selectionPath"));

              v53 = v142;
              v94 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v142, "selectionPathWithInfos:", v152));
              v95 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v149 + 32), "editorController"));
              objc_msgSend(v95, "setSelectionPath:", v94);

              v96 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v142, "canvasEditorHelper"));
              objc_msgSend(v96, "prepareGeometryForPastingBoardItems:fromPasteboard:intoContainer:useOriginalPositions:", v81, v151, obja, 0);

              v97 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v149 + 32), "editorController"));
              objc_msgSend(v97, "setSelectionPath:", v93);

              v98 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v152, "allObjects"));
              objc_msgSend(v139, "addObjectsFromArray:", v98);

              v3 = v154;
            }

            v2 = v149;
            v55 = v150 + 1;
          }
          while ((id)(v150 + 1) != v146);
          v146 = objc_msgSend(v148, "countByEnumeratingWithState:objects:count:", &v170, v197, 16);
        }
        while (v146);
      }

      if (objc_msgSend(v138, "count"))
      {
        +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101260F98);
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100E38E04();
        if (qword_10147E370 != -1)
          dispatch_once(&qword_10147E370, &stru_101260FB8);
        v104 = off_1013D9070;
        if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          sub_100DE7468(v104);
        v105 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLGroupEditor duplicate:]_block_invoke"));
        v106 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupEditor.m"));
        +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v105, v106, 488, 0, "We don't expect to see cross-container selections in Freeform that have objects that aren't in a container (aka freehand drawings!");

      }
      v107 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "commandController"));
      objc_msgSend(v107, "openGroup");
      v108 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
      v109 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v108, "localizedStringForKey:value:table:", CFSTR("Duplicate"), 0, CFSTR("UndoStrings")));
      objc_msgSend(v107, "setCurrentGroupActionString:", v109);

      v159 = 0u;
      v160 = 0u;
      v157 = 0u;
      v158 = 0u;
      v110 = v141;
      v111 = objc_msgSend(v110, "countByEnumeratingWithState:objects:count:", &v157, v182, 16);
      if (v111)
      {
        v112 = v111;
        v113 = *(_QWORD *)v158;
        do
        {
          for (m = 0; m != v112; m = (char *)m + 1)
          {
            if (*(_QWORD *)v158 != v113)
              objc_enumerationMutation(v110);
            v115 = *(_QWORD *)(*((_QWORD *)&v157 + 1) + 8 * (_QWORD)m);
            v116 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v110, "objectForKey:", v115));
            objc_msgSend(*(id *)(v2 + 32), "p_pasteBoardItems:inGroup:atIndex:forceMatchStyle:isCrossDocument:", v116, v115, 0x7FFFFFFFFFFFFFFFLL, 0, 0);

          }
          v112 = objc_msgSend(v110, "countByEnumeratingWithState:objects:count:", &v157, v182, 16);
        }
        while (v112);
      }

      v117 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v140));
      *(_QWORD *)&v119 = objc_opt_class(_TtC8Freeform21CRLBoardItemSelection, v118).n128_u64[0];
      v121 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v136, "mostSpecificSelectionOfClass:", v120, v119));
      v123 = v136;
      v124 = v123;
      if (v121)
      {
        objc_opt_class(_TtC8Freeform17CRLGroupSelection, v122);
        v124 = v123;
        if ((objc_opt_isKindOfClass(v121, v125) & 1) == 0)
        {
          v126 = -[CRLBoardItemSelection initWithBoardItems:]([_TtC8Freeform21CRLBoardItemSelection alloc], "initWithBoardItems:", v117);
          v124 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v123, "selectionPathReplacingMostSpecificLocationOfSelection:withSelection:", v121, v126));

        }
      }
      if (v135)
      {
        v127 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "selectionModelTranslator"));
        v128 = objc_claimAutoreleasedReturnValue(objc_msgSend(v127, "selectionPathForInfos:", v137));

        v123 = (id)v128;
      }
      if (+[CRLFeatureFlagsHelper isOSFeatureEnabled:](CRLFeatureFlagsHelper, "isOSFeatureEnabled:", 1))
      {
        v129 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layerHost"));
        v130 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v129, "asiOSCVC"));

        v131 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v130, "smartSelectionManager"));
        v132 = objc_msgSend(v139, "copy");
        objc_msgSend(v131, "replacingCurrentlySmartSelectedItems:withNewItemsToSmartSelect:", v132, v117);

      }
      v133 = -[CRLCommandSelectionBehavior initWithForwardSelectionPath:reverseSelectionPath:]([CRLCommandSelectionBehavior alloc], "initWithForwardSelectionPath:reverseSelectionPath:", v124, v123);
      objc_msgSend(v107, "closeGroupWithSelectionBehavior:", v133);

      v134 = v137;
      v53 = v142;
      v54 = v147;
    }
    else
    {
      v123 = v136;
      v134 = v137;
    }
    if ((objc_opt_respondsToSelector(v53, "hideLassoSelectionEditMenuInDrawingModeIfLassoToolIsSelected") & 1) != 0)
      objc_msgSend(v53, "hideLassoSelectionEditMenuInDrawingModeIfLassoToolIsSelected");

  }
}

void sub_1004810AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004810DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048110C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048113C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048116C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048119C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004818B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  _Unwind_Resume(a1);
}

void sub_1004819D0()
{
  JUMPOUT(0x1004819BCLL);
}

void sub_100481BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;

  a9.super_class = (Class)CRLWPTextKnobTracker;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_100481C18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100481C48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100481D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_100481E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_100481F3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_100481F74()
{
  JUMPOUT(0x100481F68);
}

void sub_1004820A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004821BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100482274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100482300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_100482F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, id a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_100483290(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10048340C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004838AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_100483A0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_100483AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_100484280(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004842B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004842E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100484310(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100484340(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100484370(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100484898(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004848C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004848F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100484928(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100484FD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100485000(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1004850D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "i_setLayersInvalidWithoutInvalidatingAnySpecificLayers");
}

void sub_100485534(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100485564(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100485960(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100485990(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100485BC8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100485BF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004871D8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x1004870ECLL);
  }
  _Unwind_Resume(exception_object);
}

int64_t sub_100487AE4(id a1, id a2, id a3)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  int64_t v14;

  v4 = a3;
  v5 = a2;
  objc_opt_class(CRLCanvasRep, v6);
  v8 = sub_100221D0C(v7, v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  objc_opt_class(CRLCanvasRep, v10);
  v12 = sub_100221D0C(v11, v4);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  if (objc_msgSend(v9, "forcesPlacementOnTop")
    && (objc_msgSend(v13, "forcesPlacementOnTop") & 1) != 0)
  {
    v14 = 0;
  }
  else if ((objc_msgSend(v9, "forcesPlacementOnTop") & 1) != 0)
  {
    v14 = 1;
  }
  else
  {
    v14 = (uint64_t)((_QWORD)objc_msgSend(v13, "forcesPlacementOnTop") << 63) >> 63;
  }

  return v14;
}

int64_t sub_100487BAC(id a1, id a2, id a3)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;
  void *v16;
  unsigned __int8 v17;
  int64_t v18;

  v4 = a3;
  v5 = a2;
  objc_opt_class(CRLCanvasRep, v6);
  v8 = sub_100221D0C(v7, v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  objc_opt_class(CRLCanvasRep, v10);
  v12 = sub_100221D0C(v11, v4);
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  if (objc_msgSend(v9, "forcesPlacementOnTop"))
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "repForSelecting"));
    v15 = objc_msgSend(v14, "isSelected");

    if ((v15 & 1) != 0)
      goto LABEL_10;
  }
  if (!objc_msgSend(v13, "forcesPlacementOnTop")
    || (v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "repForSelecting")),
        v17 = objc_msgSend(v16, "isSelected"),
        v16,
        (v17 & 1) == 0))
  {
    if (objc_msgSend(v9, "forcesPlacementOnTop")
      && (objc_msgSend(v13, "forcesPlacementOnTop") & 1) != 0)
    {
      v18 = 0;
      goto LABEL_12;
    }
    if ((objc_msgSend(v9, "forcesPlacementOnTop") & 1) == 0)
    {
      v18 = (uint64_t)((_QWORD)objc_msgSend(v13, "forcesPlacementOnTop") << 63) >> 63;
      goto LABEL_12;
    }
LABEL_10:
    v18 = 1;
    goto LABEL_12;
  }
  v18 = -1;
LABEL_12:

  return v18;
}

void sub_1004888A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004888D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100488CD0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100488D00(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100488D30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100488D60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100488F40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100488F70(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100489164(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100489194(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100489614(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100489644(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100489674(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004896A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004896D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100489704(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048A188(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048A1B8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048A470(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048A4A0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048AC18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048AC48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048AC78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048ACA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048AF18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048AF48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048C70C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x250], 8);
  _Unwind_Resume(a1);
}

id sub_10048C7F8(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v3 = a2;
  *(_QWORD *)&v5 = objc_opt_class(CRLFreehandDrawingRep, v4).n128_u64[0];
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "parentRep", v5));
  v9 = sub_100221D0C(v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (v10)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
  v11 = objc_msgSend(v3, "wantsGuidesWhileDragging");

  return v11;
}

void sub_10048C88C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048C8BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048C8EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048C91C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048C94C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048C97C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048D240(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCanvasRepDragTrackerCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC748;
  off_1013DC748 = v2;

}

void sub_10048D3B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLCanvasRepDragTrackerCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DC748;
  off_1013DC748 = v2;

}

void sub_10048E248(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E278(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E2A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E2D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E46C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E49C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E624(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E654(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E844(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048E874(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048EA78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048EAA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048EDB8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048EDE8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F320(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F350(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F380(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F3B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F3E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F410(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F7B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10048F7E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F810(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F840(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048F870(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10048FF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10048FF60(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "convertUnscaledToBoundsRect:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

uint64_t *sub_100490318(uint64_t *result, int64_t *a2, _DWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t **v10;
  int64_t *v11;
  int64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t **v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v21;
  int64_t *v22;
  int64_t v23;
  int64_t v24;

  *a3 = -1;
  *(_OWORD *)a2 = xmmword_100EF0418;
  *((_OWORD *)a2 + 1) = unk_100EF0428;
  v3 = *result;
  if ((int)(-1431655765 * ((result[1] - *result) >> 3)) >= 1)
  {
    v4 = 0;
    v5 = 0;
    v6 = -1431655765 * ((result[1] - *result) >> 3);
    v7 = 0x7FFFFFFFFFFFFFFFLL;
    v8 = 0x8000000000000000;
    result = (uint64_t *)0x8000000000000000;
    v9 = 0x7FFFFFFFFFFFFFFFLL;
    while (1)
    {
      v10 = (int64_t **)(v3 + 24 * v4);
      v11 = *v10;
      v12 = v10[1];
      if (v11 != v12)
        break;
LABEL_20:
      if (++v4 == v6)
        return result;
    }
    v13 = v7;
    v14 = v9;
    while (1)
    {
      v15 = (uint64_t *)v11[1];
      if ((uint64_t)v15 >= (uint64_t)result)
      {
        v19 = *v11;
        if ((uint64_t)v15 > (uint64_t)result || v19 < v5)
        {
          v16 = (uint64_t **)(a2 + 3);
          *a3 = v4;
          v17 = v7;
          result = v15;
          v18 = v13;
          v5 = v19;
LABEL_14:
          *v16 = v15;
          v7 = v17;
          v13 = v18;
        }
      }
      else
      {
        v16 = (uint64_t **)(a2 + 1);
        v17 = v11[1];
        v18 = v17;
        if ((uint64_t)v15 < v13)
          goto LABEL_14;
      }
      v21 = *v11;
      if (*v11 > v8)
      {
        v22 = a2 + 2;
        v8 = *v11;
        v23 = v9;
        v24 = v14;
LABEL_18:
        *v22 = v21;
        v9 = v23;
        v14 = v24;
        goto LABEL_19;
      }
      v22 = a2;
      v23 = *v11;
      v24 = *v11;
      if (v21 < v14)
        goto LABEL_18;
LABEL_19:
      v11 += 6;
      if (v11 == v12)
        goto LABEL_20;
    }
  }
  return result;
}

void sub_10049045C(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  BOOL v8;
  double v9;
  double v10;
  long double v11;
  long double v12;

  v4 = a1[1];
  v5 = a2[1];
  v6 = 0.0;
  v7 = *a2 - *a1;
  v8 = *a2 == *a1 && v5 == v4;
  v9 = 0.0;
  if (!v8)
  {
    v10 = (double)v7;
    v11 = (double)(v5 - v4);
    v12 = 1.0 / hypot((double)v7, v11);
    v6 = v12 * v11;
    v9 = -(v12 * v10);
  }
  *(_OWORD *)(a3 + 16) = xmmword_100EF0438;
  *(_OWORD *)(a3 + 32) = unk_100EF0448;
  *(double *)a3 = v6;
  *(double *)(a3 + 8) = v9;
}

void sub_1004904D8(uint64_t *a1, uint64_t a2, int a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;

  v7 = 0;
  v8 = 0;
  v9 = 0;
  v8 = sub_100121B68(&v7, a2);
  sub_100490568(a1, &v7, a3, a4);
  v10 = (void **)&v7;
  sub_100121A78(&v10);
}

void sub_100490550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_100121A78((void ***)va);
  _Unwind_Resume(a1);
}

void sub_100490568(uint64_t *a1, uint64_t *a2, int a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  uint64_t v15;
  _OWORD v16[3];
  uint64_t v17;
  int v18;
  void **v19;

  v5 = *a2;
  v6 = a2[1];
  if (v6 != v5)
  {
    v14 = 0uLL;
    v15 = 0;
    sub_10032AFD4(&v14, v5, v6, 0xAAAAAAAAAAAAAAABLL * ((v6 - v5) >> 3));
    LOBYTE(v17) = 0;
    memset(v16, 0, sizeof(v16));
    HIDWORD(v17) = a3;
    v18 = a4;
    v10 = a1[14];
    if (v10 >= a1[15])
    {
      v12 = sub_100493F44(a1 + 13, (uint64_t)&v14);
      v13 = (void *)*((_QWORD *)&v16[1] + 1);
      a1[14] = v12;
      if (v13)
      {
        *(_QWORD *)&v16[2] = v13;
        operator delete(v13);
      }
    }
    else
    {
      *(_QWORD *)(v10 + 16) = 0;
      *(_QWORD *)(v10 + 24) = 0;
      *(_QWORD *)v10 = 0;
      *(_QWORD *)(v10 + 8) = 0;
      *(_OWORD *)v10 = v14;
      *(_QWORD *)(v10 + 16) = v15;
      v14 = 0uLL;
      *(_QWORD *)(v10 + 32) = 0;
      *(_QWORD *)(v10 + 40) = 0;
      *(_OWORD *)(v10 + 24) = v16[0];
      v16[0] = 0uLL;
      *(_QWORD *)(v10 + 40) = *(_QWORD *)&v16[1];
      *(_QWORD *)(v10 + 48) = 0;
      *(_QWORD *)&v16[1] = 0;
      *(_QWORD *)(v10 + 56) = 0;
      *(_QWORD *)(v10 + 64) = 0;
      *(_OWORD *)(v10 + 48) = *(_OWORD *)((char *)&v16[1] + 8);
      *(_QWORD *)(v10 + 64) = *((_QWORD *)&v16[2] + 1);
      v15 = 0;
      memset((char *)&v16[1] + 8, 0, 24);
      v11 = v17;
      *(_DWORD *)(v10 + 80) = v18;
      *(_QWORD *)(v10 + 72) = v11;
      a1[14] = v10 + 88;
    }
    v19 = (void **)v16;
    sub_100121A78(&v19);
    v19 = (void **)&v14;
    sub_100121A78(&v19);
  }
}

void sub_1004906A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1004906BC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1004906BC(uint64_t a1)
{
  void *v2;
  void **v4;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
  v4 = (void **)(a1 + 24);
  sub_100121A78(&v4);
  v4 = (void **)a1;
  sub_100121A78(&v4);
  return a1;
}

void sub_100490710(_QWORD *a1, _QWORD *a2)
{
  char **v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _OWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  _OWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  __int128 v35;
  char *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v4 = (char **)(a1 + 7);
  a1[8] = a1[7];
  sub_1003A54B4((void **)a1 + 7, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 4));
  v6 = (_QWORD *)*a2;
  v5 = a2[1];
  if (v5 != *a2)
  {
    v7 = (_QWORD *)(v5 - 48);
    v8 = (_OWORD *)a1[8];
    if (v6 != (_QWORD *)(v5 - 48))
    {
      v9 = a1 + 9;
      do
      {
        v10 = v6;
        v6 += 6;
        sub_10049045C(v10, v6, (uint64_t)&v40);
        if ((unint64_t)v8 >= *v9)
        {
          v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - *v4) >> 4);
          v14 = v13 + 1;
          if (v13 + 1 > 0x555555555555555)
            goto LABEL_40;
          if (0x5555555555555556 * ((uint64_t)(*v9 - (_QWORD)*v4) >> 4) > v14)
            v14 = 0x5555555555555556 * ((uint64_t)(*v9 - (_QWORD)*v4) >> 4);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v9 - (_QWORD)*v4) >> 4) >= 0x2AAAAAAAAAAAAAALL)
            v15 = 0x555555555555555;
          else
            v15 = v14;
          if (v15)
            v16 = (char *)sub_100121D50((uint64_t)(a1 + 9), v15);
          else
            v16 = 0;
          v17 = &v16[48 * v13];
          v18 = v41;
          *(_OWORD *)v17 = v40;
          *((_OWORD *)v17 + 1) = v18;
          *((_OWORD *)v17 + 2) = v42;
          v20 = (char *)a1[7];
          v19 = (char *)a1[8];
          v21 = v17;
          if (v19 != v20)
          {
            do
            {
              v22 = *((_OWORD *)v19 - 3);
              v23 = *((_OWORD *)v19 - 1);
              *((_OWORD *)v21 - 2) = *((_OWORD *)v19 - 2);
              *((_OWORD *)v21 - 1) = v23;
              *((_OWORD *)v21 - 3) = v22;
              v21 -= 48;
              v19 -= 48;
            }
            while (v19 != v20);
            v19 = *v4;
          }
          v8 = v17 + 48;
          a1[7] = v21;
          a1[8] = v17 + 48;
          a1[9] = &v16[48 * v15];
          if (v19)
            operator delete(v19);
        }
        else
        {
          v11 = v40;
          v12 = v42;
          v8[1] = v41;
          v8[2] = v12;
          *v8 = v11;
          v8 += 3;
        }
        a1[8] = v8;
      }
      while (v6 != v7);
      v6 = (_QWORD *)*a2;
    }
    sub_10049045C(v7, v6, (uint64_t)&v40);
    v24 = a1[9];
    if ((unint64_t)v8 >= v24)
    {
      v28 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - *v4) >> 4);
      if (v28 + 1 > 0x555555555555555)
LABEL_40:
        sub_100007810();
      v29 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - (_QWORD)*v4) >> 4);
      v30 = 2 * v29;
      if (2 * v29 <= v28 + 1)
        v30 = v28 + 1;
      if (v29 >= 0x2AAAAAAAAAAAAAALL)
        v31 = 0x555555555555555;
      else
        v31 = v30;
      if (v31)
        v32 = (char *)sub_100121D50((uint64_t)(a1 + 9), v31);
      else
        v32 = 0;
      v33 = &v32[48 * v28];
      v34 = &v32[48 * v31];
      v35 = v41;
      *(_OWORD *)v33 = v40;
      *((_OWORD *)v33 + 1) = v35;
      *((_OWORD *)v33 + 2) = v42;
      v27 = v33 + 48;
      v37 = (char *)a1[7];
      v36 = (char *)a1[8];
      if (v36 != v37)
      {
        do
        {
          v38 = *((_OWORD *)v36 - 3);
          v39 = *((_OWORD *)v36 - 1);
          *((_OWORD *)v33 - 2) = *((_OWORD *)v36 - 2);
          *((_OWORD *)v33 - 1) = v39;
          *((_OWORD *)v33 - 3) = v38;
          v33 -= 48;
          v36 -= 48;
        }
        while (v36 != v37);
        v36 = *v4;
      }
      a1[7] = v33;
      a1[8] = v27;
      a1[9] = v34;
      if (v36)
        operator delete(v36);
    }
    else
    {
      v25 = v40;
      v26 = v42;
      v8[1] = v41;
      v8[2] = v26;
      *v8 = v25;
      v27 = v8 + 3;
    }
    a1[8] = v27;
  }
}

double sub_1004909C0@<D0>(double *a1@<X0>, double *a2@<X1>, double *a3@<X2>, double *a4@<X3>, uint64_t a5@<X8>)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double result;
  double v14;
  double v15;

  v5 = *a1;
  v6 = *a3;
  v7 = *a4;
  if (*a1 == *a2)
  {
    if (v6 != v7)
    {
      v11 = a3[1];
      v12 = (a4[1] - v11) / (v7 - v6);
      *(double *)a5 = v5;
      *(double *)(a5 + 8) = v11 - v12 * v6 + v12 * v5;
      goto LABEL_8;
    }
    goto LABEL_3;
  }
  v8 = a1[1];
  v9 = (a2[1] - v8) / (*a2 - v5);
  if (v6 == v7)
  {
    v10 = v8 - v9 * v5;
LABEL_6:
    *(double *)a5 = v6;
    *(double *)(a5 + 8) = v10 + v9 * v6;
    goto LABEL_8;
  }
  v14 = a3[1];
  v15 = (a4[1] - v14) / (v7 - v6);
  if (v9 != v15)
  {
    v10 = v8 - v9 * v5;
    v6 = (v14 - v15 * v6 - v10) / (v9 - v15);
    goto LABEL_6;
  }
LABEL_3:
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
LABEL_8:
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)(a5 + 16) = xmmword_100EF0438;
  *(_OWORD *)(a5 + 32) = unk_100EF0448;
  return result;
}

void sub_100490A7C(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  double v6;
  float64x2_t v7;
  float64x2_t v8;
  float64x2_t v9;
  uint64_t v10;
  float64x2_t v11;
  unint64_t v12;
  int64x2_t **v13;
  int64x2_t v14;
  int64x2_t *v15;
  int64x2_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  int64x2_t *v22;
  char *v23;
  int64x2_t *v24;
  int64x2_t *v25;
  int64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  unint64_t v29;
  int64x2_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  int64x2_t *v36;
  char *v37;
  int64x2_t *v38;
  int64x2_t *v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  float64x2_t v43;
  int64x2_t v44;
  __int128 v45;
  int64x2_t v46;

  if (a4 == a5)
  {
    v6 = fabs(*(double *)(a1 + 16));
    v7 = vcvtq_f64_s64(*(int64x2_t *)(*a3 + 48 * a4));
    v8 = *(float64x2_t *)(*(_QWORD *)(a1 + 56) + 48 * a4);
    v9 = vmlsq_lane_f64(v7, v8, v6, 0);
    v45 = xmmword_100EF0438;
    v46 = (int64x2_t)unk_100EF0448;
  }
  else
  {
    v6 = *(double *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 56);
    v45 = xmmword_100EF0438;
    v46 = (int64x2_t)unk_100EF0448;
    v7 = vcvtq_f64_s64(*(int64x2_t *)(*a3 + 48 * a4));
    v9 = vmlaq_n_f64(v7, *(float64x2_t *)(v10 + 48 * a5), v6);
    v8 = *(float64x2_t *)(v10 + 48 * a4);
  }
  v11 = vmlaq_n_f64(v7, v8, v6);
  v12 = a2[8];
  v13 = (int64x2_t **)(a2 + 6);
  v14 = vcvtq_s64_f64(vrndaq_f64(v9));
  v15 = (int64x2_t *)a2[7];
  if ((unint64_t)v15 >= v12)
  {
    v17 = 0xAAAAAAAAAAAAAAABLL * (v15 - *v13);
    v18 = v17 + 1;
    if (v17 + 1 > 0x555555555555555)
      goto LABEL_38;
    v43 = v11;
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (_QWORD)*v13) >> 4);
    if (2 * v19 > v18)
      v18 = 2 * v19;
    if (v19 >= 0x2AAAAAAAAAAAAAALL)
      v20 = 0x555555555555555;
    else
      v20 = v18;
    if (v20)
    {
      v42 = v14;
      v21 = (char *)sub_100121D50((uint64_t)(a2 + 8), v20);
      v14 = v42;
    }
    else
    {
      v21 = 0;
    }
    v22 = (int64x2_t *)&v21[48 * v17];
    v23 = &v21[48 * v20];
    *v22 = v14;
    v22[1] = (int64x2_t)v45;
    v22[2] = v46;
    v16 = v22 + 3;
    v25 = (int64x2_t *)a2[6];
    v24 = (int64x2_t *)a2[7];
    if (v24 != v25)
    {
      do
      {
        v26 = v24[-3];
        v27 = v24[-1];
        v22[-2] = v24[-2];
        v22[-1] = v27;
        v22[-3] = v26;
        v22 -= 3;
        v24 -= 3;
      }
      while (v24 != v25);
      v24 = *v13;
    }
    a2[6] = v22;
    a2[7] = v16;
    a2[8] = v23;
    if (v24)
      operator delete(v24);
    v11 = v43;
  }
  else
  {
    *v15 = v14;
    v15[1] = (int64x2_t)v45;
    v15[2] = v46;
    v16 = v15 + 3;
  }
  a2[7] = v16;
  v28 = vcvtq_s64_f64(vrndaq_f64(v11));
  v29 = a2[8];
  if ((unint64_t)v16 < v29)
  {
    *v16 = v28;
    v16[1] = (int64x2_t)xmmword_100EF0438;
    v16[2] = (int64x2_t)unk_100EF0448;
    v30 = v16 + 3;
    goto LABEL_37;
  }
  v31 = 0xAAAAAAAAAAAAAAABLL * (v16 - *v13);
  if (v31 + 1 > 0x555555555555555)
LABEL_38:
    sub_100007810();
  v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - (_QWORD)*v13) >> 4);
  v33 = 2 * v32;
  if (2 * v32 <= v31 + 1)
    v33 = v31 + 1;
  if (v32 >= 0x2AAAAAAAAAAAAAALL)
    v34 = 0x555555555555555;
  else
    v34 = v33;
  if (v34)
  {
    v44 = v28;
    v35 = (char *)sub_100121D50((uint64_t)(a2 + 8), v34);
    v28 = v44;
  }
  else
  {
    v35 = 0;
  }
  v36 = (int64x2_t *)&v35[48 * v31];
  v37 = &v35[48 * v34];
  *v36 = v28;
  v36[1] = (int64x2_t)xmmword_100EF0438;
  v36[2] = (int64x2_t)unk_100EF0448;
  v30 = v36 + 3;
  v39 = (int64x2_t *)a2[6];
  v38 = (int64x2_t *)a2[7];
  if (v38 != v39)
  {
    do
    {
      v40 = v38[-3];
      v41 = v38[-1];
      v36[-2] = v38[-2];
      v36[-1] = v41;
      v36[-3] = v40;
      v36 -= 3;
      v38 -= 3;
    }
    while (v38 != v39);
    v38 = *v13;
  }
  a2[6] = v36;
  a2[7] = v30;
  a2[8] = v37;
  if (v38)
    operator delete(v38);
LABEL_37:
  a2[7] = v30;
}

void sub_100490D80(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  double *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double *v12;
  double *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  double v29;
  double v30;
  __int128 v31;
  _QWORD *v32;
  __int128 v33;
  double v34;
  double v35;
  unint64_t v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  double v45;
  double v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __int128 v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  __int128 v65;
  char *v66;
  char *v67;
  __int128 v68;
  __int128 v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  __int128 v80;
  char *v81;
  char *v82;
  __int128 v83;
  __int128 v84;
  unint64_t v85;
  __int128 v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  __int128 v95;
  char *v96;
  char *v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  char *v101;
  __int128 v102;
  __int128 v103;
  double v104;
  double v105;
  __int128 v106;
  __int128 v107;
  double v108;
  double v109;
  __int128 v110;
  __int128 v111;
  double v112[2];
  __int128 v113;
  __int128 v114;
  double v115[2];
  __int128 v116;
  __int128 v117;
  double v118[2];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;

  v6 = *(_QWORD *)(a1 + 56);
  if (a4 == a5)
  {
    v7 = (double *)(v6 + 48 * a4);
    v9 = *v7;
    v8 = v7[1];
    v10 = -*v7;
    v11 = v8;
  }
  else
  {
    v12 = (double *)(v6 + 48 * a5);
    v9 = *v12;
    v8 = v12[1];
    v13 = (double *)(v6 + 48 * a4);
    v14 = v13[1] - v8;
    v15 = *v12 - *v13;
    v16 = sqrt(v15 * v15 + v14 * v14);
    v10 = 0.0;
    if (fabs(v16) >= 0.001)
    {
      v11 = v14 * (1.0 / v16);
      v10 = v15 * (1.0 / v16);
    }
    else
    {
      v11 = 0.0;
    }
  }
  v17 = *(double *)(a1 + 16);
  v18 = fabs(v17);
  v19 = *a3;
  v20 = *a3 + 48 * a4;
  v21 = (__int128 *)(v20 + 16);
  v22 = (double)*(uint64_t *)v20;
  v23 = (double)*(uint64_t *)(v20 + 8);
  v24 = v11 * v18 + v22;
  v25 = v10 * v18 + v23;
  v118[0] = v10 * v17 + v24;
  v118[1] = v25 - v11 * v17;
  v26 = *(_OWORD *)(v20 + 32);
  v119 = *(_OWORD *)(v20 + 16);
  v120 = v26;
  v115[0] = v24 - v10 * v17;
  v115[1] = v11 * v17 + v25;
  v27 = *(_OWORD *)(v20 + 32);
  v116 = *(_OWORD *)(v20 + 16);
  v117 = v27;
  v28 = v19 + 48 * a5;
  v29 = (double)*(uint64_t *)v28 + v9 * v17;
  v30 = (double)*(uint64_t *)(v28 + 8) + v8 * v17;
  v112[0] = v29;
  v112[1] = v30;
  v31 = *(_OWORD *)(v28 + 32);
  v113 = *(_OWORD *)(v28 + 16);
  v114 = v31;
  v32 = a2 + 6;
  if (a4 != a5)
  {
    v108 = v22 + v9 * v17;
    v109 = v23 + v8 * v17;
    v43 = *(_OWORD *)(v20 + 32);
    v110 = *v21;
    v111 = v43;
    sub_1004909C0(v118, v115, v112, &v108, (uint64_t)&v104);
    v44 = v21[1];
    v106 = *v21;
    v107 = v44;
    v46 = v104;
    v45 = v105;
    v47 = v21[1];
    v48 = llround(v104);
    v49 = llround(v105);
    v121 = *v21;
    v122 = v47;
    v50 = a2[8];
    v51 = a2[7];
    if (v51 >= v50)
    {
      v58 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v51 - *v32) >> 4);
      v59 = v58 + 1;
      if (v58 + 1 > 0x555555555555555)
        goto LABEL_69;
      v60 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v50 - *v32) >> 4);
      if (2 * v60 > v59)
        v59 = 2 * v60;
      if (v60 >= 0x2AAAAAAAAAAAAAALL)
        v61 = 0x555555555555555;
      else
        v61 = v59;
      if (v61)
        v62 = (char *)sub_100121D50((uint64_t)(a2 + 8), v61);
      else
        v62 = 0;
      v78 = &v62[48 * v58];
      v79 = &v62[48 * v61];
      *(_QWORD *)v78 = v48;
      *((_QWORD *)v78 + 1) = v49;
      v80 = v122;
      *((_OWORD *)v78 + 1) = v121;
      *((_OWORD *)v78 + 2) = v80;
      v42 = v78 + 48;
      v82 = (char *)a2[6];
      v81 = (char *)a2[7];
      if (v81 != v82)
      {
        do
        {
          v83 = *((_OWORD *)v81 - 3);
          v84 = *((_OWORD *)v81 - 1);
          *((_OWORD *)v78 - 2) = *((_OWORD *)v81 - 2);
          *((_OWORD *)v78 - 1) = v84;
          *((_OWORD *)v78 - 3) = v83;
          v78 -= 48;
          v81 -= 48;
        }
        while (v81 != v82);
        v81 = (char *)*v32;
      }
      a2[6] = v78;
      a2[7] = v42;
      a2[8] = v79;
      if (v81)
        operator delete(v81);
    }
    else
    {
      *(_QWORD *)v51 = v48;
      *(_QWORD *)(v51 + 8) = v49;
      v52 = v122;
      *(_OWORD *)(v51 + 16) = v121;
      *(_OWORD *)(v51 + 32) = v52;
      v42 = (char *)(v51 + 48);
    }
    a2[7] = v42;
    v121 = v106;
    v122 = v107;
    v70 = llround(v24 + v24 - v46);
    v71 = llround(v25 + v25 - v45);
    v85 = a2[8];
    if ((unint64_t)v42 >= v85)
    {
      v88 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v42[-*v32] >> 4);
      if (v88 + 1 <= 0x555555555555555)
      {
        v89 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v85 - *v32) >> 4);
        v90 = 2 * v89;
        if (2 * v89 <= v88 + 1)
          v90 = v88 + 1;
        if (v89 >= 0x2AAAAAAAAAAAAAALL)
          v91 = 0x555555555555555;
        else
          v91 = v90;
        if (v91)
          v92 = (char *)sub_100121D50((uint64_t)(a2 + 8), v91);
        else
          v92 = 0;
        v93 = &v92[48 * v88];
        v94 = &v92[48 * v91];
        *(_QWORD *)v93 = v70;
        *((_QWORD *)v93 + 1) = v71;
        v100 = v107;
        *((_OWORD *)v93 + 1) = v106;
        *((_OWORD *)v93 + 2) = v100;
        v87 = v93 + 48;
        v101 = (char *)a2[6];
        v96 = (char *)a2[7];
        if (v96 == v101)
          goto LABEL_66;
        do
        {
          v102 = *((_OWORD *)v96 - 3);
          v103 = *((_OWORD *)v96 - 1);
          *((_OWORD *)v93 - 2) = *((_OWORD *)v96 - 2);
          *((_OWORD *)v93 - 1) = v103;
          *((_OWORD *)v93 - 3) = v102;
          v93 -= 48;
          v96 -= 48;
        }
        while (v96 != v101);
        goto LABEL_65;
      }
LABEL_69:
      sub_100007810();
    }
LABEL_49:
    *(_QWORD *)v42 = v70;
    *((_QWORD *)v42 + 1) = v71;
    v86 = v122;
    *((_OWORD *)v42 + 1) = v121;
    *((_OWORD *)v42 + 2) = v86;
    v87 = v42 + 48;
    goto LABEL_68;
  }
  v108 = v29 + v11 * v17;
  v109 = v30 + v10 * v17;
  v110 = xmmword_100EF0438;
  v111 = unk_100EF0448;
  sub_1004909C0(v118, v115, v112, &v108, (uint64_t)&v104);
  v33 = v21[1];
  v106 = *v21;
  v107 = v33;
  v35 = v104;
  v34 = v105;
  v36 = llround(v24 + v24 - v104);
  v37 = v21[1];
  v38 = llround(v25 + v25 - v105);
  v121 = *v21;
  v122 = v37;
  v39 = a2[8];
  v40 = a2[7];
  if (v40 >= v39)
  {
    v53 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - *v32) >> 4);
    v54 = v53 + 1;
    if (v53 + 1 > 0x555555555555555)
      goto LABEL_69;
    v55 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v39 - *v32) >> 4);
    if (2 * v55 > v54)
      v54 = 2 * v55;
    if (v55 >= 0x2AAAAAAAAAAAAAALL)
      v56 = 0x555555555555555;
    else
      v56 = v54;
    if (v56)
      v57 = (char *)sub_100121D50((uint64_t)(a2 + 8), v56);
    else
      v57 = 0;
    v63 = &v57[48 * v53];
    v64 = &v57[48 * v56];
    *(_QWORD *)v63 = v36;
    *((_QWORD *)v63 + 1) = v38;
    v65 = v122;
    *((_OWORD *)v63 + 1) = v121;
    *((_OWORD *)v63 + 2) = v65;
    v42 = v63 + 48;
    v67 = (char *)a2[6];
    v66 = (char *)a2[7];
    if (v66 != v67)
    {
      do
      {
        v68 = *((_OWORD *)v66 - 3);
        v69 = *((_OWORD *)v66 - 1);
        *((_OWORD *)v63 - 2) = *((_OWORD *)v66 - 2);
        *((_OWORD *)v63 - 1) = v69;
        *((_OWORD *)v63 - 3) = v68;
        v63 -= 48;
        v66 -= 48;
      }
      while (v66 != v67);
      v66 = (char *)*v32;
    }
    a2[6] = v63;
    a2[7] = v42;
    a2[8] = v64;
    if (v66)
      operator delete(v66);
  }
  else
  {
    *(_QWORD *)v40 = v36;
    *(_QWORD *)(v40 + 8) = v38;
    v41 = v122;
    *(_OWORD *)(v40 + 16) = v121;
    *(_OWORD *)(v40 + 32) = v41;
    v42 = (char *)(v40 + 48);
  }
  a2[7] = v42;
  v121 = v106;
  v122 = v107;
  v70 = llround(v35);
  v71 = llround(v34);
  v72 = a2[8];
  if ((unint64_t)v42 < v72)
    goto LABEL_49;
  v73 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v42[-*v32] >> 4);
  if (v73 + 1 > 0x555555555555555)
    goto LABEL_69;
  v74 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v72 - *v32) >> 4);
  v75 = 2 * v74;
  if (2 * v74 <= v73 + 1)
    v75 = v73 + 1;
  if (v74 >= 0x2AAAAAAAAAAAAAALL)
    v76 = 0x555555555555555;
  else
    v76 = v75;
  if (v76)
    v77 = (char *)sub_100121D50((uint64_t)(a2 + 8), v76);
  else
    v77 = 0;
  v93 = &v77[48 * v73];
  v94 = &v77[48 * v76];
  *(_QWORD *)v93 = v70;
  *((_QWORD *)v93 + 1) = v71;
  v95 = v107;
  *((_OWORD *)v93 + 1) = v106;
  *((_OWORD *)v93 + 2) = v95;
  v87 = v93 + 48;
  v97 = (char *)a2[6];
  v96 = (char *)a2[7];
  if (v96 == v97)
    goto LABEL_66;
  do
  {
    v98 = *((_OWORD *)v96 - 3);
    v99 = *((_OWORD *)v96 - 1);
    *((_OWORD *)v93 - 2) = *((_OWORD *)v96 - 2);
    *((_OWORD *)v93 - 1) = v99;
    *((_OWORD *)v93 - 3) = v98;
    v93 -= 48;
    v96 -= 48;
  }
  while (v96 != v97);
LABEL_65:
  v96 = (char *)*v32;
LABEL_66:
  a2[6] = v93;
  a2[7] = v87;
  a2[8] = v94;
  if (v96)
    operator delete(v96);
LABEL_68:
  a2[7] = v87;
}

void sub_100491384(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, double a6)
{
  double v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64x2_t v12;
  int64x2_t *v13;
  int64x2_t *v14;
  void **v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  int64x2_t *v22;
  char *v23;
  int64x2_t *v24;
  int64x2_t *v25;
  int64x2_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int64x2_t v29;
  int64x2_t v30;

  v8 = *(double *)(a1 + 16) / (a6 + 1.0);
  v9 = (uint64_t)(a2 + 8);
  v10 = a2[8];
  v11 = *a3 + 48 * a4;
  v12 = vcvtq_s64_f64(vrndaq_f64(vmlaq_n_f64(vcvtq_f64_s64(*(int64x2_t *)v11), vaddq_f64(*(float64x2_t *)(*(_QWORD *)(a1 + 56) + 48 * a5), *(float64x2_t *)(*(_QWORD *)(a1 + 56) + 48 * a4)), v8)));
  v29 = *(int64x2_t *)(v11 + 16);
  v30 = *(int64x2_t *)(v11 + 32);
  v13 = (int64x2_t *)a2[7];
  if ((unint64_t)v13 >= v10)
  {
    v15 = (void **)(a2 + 6);
    v16 = a2[6];
    v17 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v13->i64 - v16) >> 4);
    v18 = v17 + 1;
    if (v17 + 1 > 0x555555555555555)
      sub_100007810();
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - v16) >> 4);
    if (2 * v19 > v18)
      v18 = 2 * v19;
    if (v19 >= 0x2AAAAAAAAAAAAAALL)
      v20 = 0x555555555555555;
    else
      v20 = v18;
    if (v20)
    {
      v28 = v12;
      v21 = (char *)sub_100121D50(v9, v20);
      v12 = v28;
    }
    else
    {
      v21 = 0;
    }
    v22 = (int64x2_t *)&v21[48 * v17];
    v23 = &v21[48 * v20];
    *v22 = v12;
    v22[1] = v29;
    v22[2] = v30;
    v14 = v22 + 3;
    v25 = (int64x2_t *)a2[6];
    v24 = (int64x2_t *)a2[7];
    if (v24 != v25)
    {
      do
      {
        v26 = v24[-3];
        v27 = v24[-1];
        v22[-2] = v24[-2];
        v22[-1] = v27;
        v22[-3] = v26;
        v22 -= 3;
        v24 -= 3;
      }
      while (v24 != v25);
      v24 = (int64x2_t *)*v15;
    }
    a2[6] = v22;
    a2[7] = v14;
    a2[8] = v23;
    if (v24)
      operator delete(v24);
  }
  else
  {
    *v13 = v12;
    v13[1] = v29;
    v13[2] = v30;
    v14 = v13 + 3;
  }
  a2[7] = v14;
}

void sub_100491534(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, double a6)
{
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  __double2 v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  int64x2_t **v21;
  float64x2_t v22;
  int32x2_t v23;
  int64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  int64x2_t v27;
  int64x2_t *v28;
  int64x2_t *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  int64x2_t *v35;
  char *v36;
  int64x2_t *v37;
  int64x2_t *v38;
  int64x2_t v39;
  int64x2_t v40;
  int v41;
  double v42;
  double v43;
  int i;
  double v45;
  double v46;
  double v47;
  double v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  int64x2_t *v56;
  char *v57;
  char *v58;
  int64x2_t v59;
  int64x2_t v60;
  uint64_t v61;
  int64x2_t v62;
  int64x2_t *v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  int64x2_t *v68;
  char *v69;
  int64x2_t *v70;
  int64x2_t *v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  _QWORD *v75;
  uint64_t v76;
  float64x2_t v77;
  double v78;
  float64x2_t v79;
  float64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;

  v12 = *(double *)(a1 + 16);
  if (*(_QWORD *)(a1 + 216))
  {
    v78 = *(double *)(a1 + 16);
    v13 = fabs(v12);
    v14 = *(double *)(a1 + 144);
    if (v14 <= 1.0e-12)
    {
      v14 = log10(v13 + 2.0) * 0.25;
    }
    else if (v14 >= v13)
    {
      v14 = v13;
    }
    v15 = 3.14159265 / acos(1.0 - v14 / v13);
    if (v13 * 3.14159265 >= v15)
      v16 = v15;
    else
      v16 = v13 * 3.14159265;
    v17 = __sincos_stret(6.28318531 / v16);
    *(__double2 *)(a1 + 40) = v17;
    v12 = v78;
    if (v78 < 0.0)
      *(double *)(a1 + 40) = -v17.__sinval;
    *(double *)(a1 + 32) = v16 / 6.28318531;
  }
  v18 = *a3 + 48 * a4;
  v84 = *(int64x2_t *)(v18 + 16);
  v85 = *(int64x2_t *)(v18 + 32);
  v20 = a2 + 8;
  v19 = a2[8];
  v21 = (int64x2_t **)(a2 + 6);
  v22 = vmulq_n_f64(*(float64x2_t *)(*(_QWORD *)(a1 + 56) + 48 * a5), v12);
  v23 = vdup_n_s32(a4 == a5);
  v24.i64[0] = v23.u32[0];
  v24.i64[1] = v23.u32[1];
  v25 = (float64x2_t)vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v24, 0x3FuLL)), (int8x16_t)vnegq_f64(v22), (int8x16_t)v22);
  v26 = vcvtq_f64_s64(*(int64x2_t *)v18);
  v27 = vcvtq_s64_f64(vrndaq_f64(vaddq_f64(v25, v26)));
  v28 = (int64x2_t *)a2[7];
  v75 = a3;
  v76 = a4;
  v77 = v26;
  if ((unint64_t)v28 >= v19)
  {
    v30 = 0xAAAAAAAAAAAAAAABLL * (v28 - *v21);
    v31 = v30 + 1;
    if (v30 + 1 > 0x555555555555555)
      goto LABEL_67;
    v79 = v25;
    v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v19 - (_QWORD)*v21) >> 4);
    if (2 * v32 > v31)
      v31 = 2 * v32;
    if (v32 >= 0x2AAAAAAAAAAAAAALL)
      v33 = 0x555555555555555;
    else
      v33 = v31;
    if (v33)
    {
      v74 = v27;
      v34 = (char *)sub_100121D50((uint64_t)(a2 + 8), v33);
      v27 = v74;
      v21 = (int64x2_t **)(a2 + 6);
    }
    else
    {
      v34 = 0;
    }
    v35 = (int64x2_t *)&v34[48 * v30];
    v36 = &v34[48 * v33];
    *v35 = v27;
    v35[1] = v84;
    v35[2] = v85;
    v29 = v35 + 3;
    v38 = (int64x2_t *)a2[6];
    v37 = (int64x2_t *)a2[7];
    if (v37 != v38)
    {
      do
      {
        v39 = v37[-3];
        v40 = v37[-1];
        v35[-2] = v37[-2];
        v35[-1] = v40;
        v35[-3] = v39;
        v35 -= 3;
        v37 -= 3;
      }
      while (v37 != v38);
      v37 = *v21;
    }
    a2[6] = v35;
    a2[7] = v29;
    a2[8] = v36;
    if (v37)
    {
      operator delete(v37);
      v21 = (int64x2_t **)(a2 + 6);
    }
    v26 = v77;
    v25 = v79;
  }
  else
  {
    *v28 = v27;
    v28[1] = v84;
    v28[2] = v85;
    v29 = v28 + 3;
  }
  a2[7] = v29;
  v41 = vcvtpd_s64_f64(fabs(a6) * *(double *)(a1 + 32));
  if (v41 >= 2)
  {
    v42 = v25.f64[1];
    v43 = v26.f64[1];
    for (i = 1; i != v41; ++i)
    {
      v45 = v25.f64[0];
      v47 = *(double *)(a1 + 40);
      v46 = *(double *)(a1 + 48);
      v48 = -(v47 * v42);
      v42 = v42 * v46 + v45 * v47;
      v25.f64[0] = v48 + v45 * v46;
      v49 = llround(v25.f64[0] + v26.f64[0]);
      v50 = llround(v42 + v43);
      if ((unint64_t)v29 >= *v20)
      {
        v51 = 0xAAAAAAAAAAAAAAABLL * (v29 - *v21);
        v52 = v51 + 1;
        if (v51 + 1 > 0x555555555555555)
          goto LABEL_67;
        v80 = v25;
        if (0x5555555555555556 * ((uint64_t)(*v20 - (_QWORD)*v21) >> 4) > v52)
          v52 = 0x5555555555555556 * ((uint64_t)(*v20 - (_QWORD)*v21) >> 4);
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v20 - (_QWORD)*v21) >> 4) >= 0x2AAAAAAAAAAAAAALL)
          v53 = 0x555555555555555;
        else
          v53 = v52;
        if (v53)
        {
          v54 = (char *)sub_100121D50((uint64_t)(a2 + 8), v53);
          v21 = (int64x2_t **)(a2 + 6);
        }
        else
        {
          v54 = 0;
        }
        v55 = &v54[48 * v51];
        *(_QWORD *)v55 = v49;
        *((_QWORD *)v55 + 1) = v50;
        *((int64x2_t *)v55 + 1) = v84;
        *((int64x2_t *)v55 + 2) = v85;
        v57 = (char *)a2[6];
        v56 = (int64x2_t *)a2[7];
        v58 = v55;
        if (v56 != (int64x2_t *)v57)
        {
          do
          {
            v59 = v56[-3];
            v60 = v56[-1];
            *((int64x2_t *)v58 - 2) = v56[-2];
            *((int64x2_t *)v58 - 1) = v60;
            *((int64x2_t *)v58 - 3) = v59;
            v58 -= 48;
            v56 -= 3;
          }
          while (v56 != (int64x2_t *)v57);
          v56 = *v21;
        }
        v29 = (int64x2_t *)(v55 + 48);
        a2[6] = v58;
        a2[7] = v55 + 48;
        a2[8] = &v54[48 * v53];
        if (v56)
        {
          operator delete(v56);
          v21 = (int64x2_t **)(a2 + 6);
        }
        v26.f64[0] = v77.f64[0];
        v25 = v80;
      }
      else
      {
        v29->i64[0] = v49;
        v29->i64[1] = v50;
        v29[1] = v84;
        v29[2] = v85;
        v29 += 3;
      }
      a2[7] = v29;
    }
  }
  v61 = *v75 + 48 * v76;
  v62 = vcvtq_s64_f64(vrndaq_f64(vmlaq_n_f64(vcvtq_f64_s64(*(int64x2_t *)v61), *(float64x2_t *)(*(_QWORD *)(a1 + 56) + 48 * v76), *(double *)(a1 + 16))));
  v82 = *(int64x2_t *)(v61 + 16);
  v83 = *(int64x2_t *)(v61 + 32);
  if ((unint64_t)v29 < *v20)
  {
    *v29 = v62;
    v29[1] = v82;
    v29[2] = v83;
    v63 = v29 + 3;
    goto LABEL_66;
  }
  v64 = 0xAAAAAAAAAAAAAAABLL * (v29 - *v21);
  if (v64 + 1 > 0x555555555555555)
LABEL_67:
    sub_100007810();
  v65 = 0x5555555555555556 * ((uint64_t)(*v20 - (_QWORD)*v21) >> 4);
  if (v65 <= v64 + 1)
    v65 = v64 + 1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v20 - (_QWORD)*v21) >> 4) >= 0x2AAAAAAAAAAAAAALL)
    v66 = 0x555555555555555;
  else
    v66 = v65;
  if (v66)
  {
    v81 = v62;
    v67 = (char *)sub_100121D50((uint64_t)(a2 + 8), v66);
    v62 = v81;
    v21 = (int64x2_t **)(a2 + 6);
  }
  else
  {
    v67 = 0;
  }
  v68 = (int64x2_t *)&v67[48 * v64];
  v69 = &v67[48 * v66];
  *v68 = v62;
  v68[1] = v82;
  v68[2] = v83;
  v63 = v68 + 3;
  v71 = (int64x2_t *)a2[6];
  v70 = (int64x2_t *)a2[7];
  if (v70 != v71)
  {
    do
    {
      v72 = v70[-3];
      v73 = v70[-1];
      v68[-2] = v70[-2];
      v68[-1] = v73;
      v68[-3] = v72;
      v68 -= 3;
      v70 -= 3;
    }
    while (v70 != v71);
    v70 = *v21;
  }
  a2[6] = v68;
  a2[7] = v63;
  a2[8] = v69;
  if (v70)
    operator delete(v70);
LABEL_66:
  a2[7] = v63;
}

void sub_100491A88(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  int32x2_t v5;
  uint64_t v11;
  _QWORD *v12;
  double *v13;
  double *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  unint64_t v24;
  int64x2_t v25;
  int64x2_t *v26;
  unint64_t v27;
  int64x2_t *v28;
  int64x2_t v29;
  int64x2_t v30;
  int64x2_t *v31;
  uint64_t v32;
  float64x2_t v33;
  unint64_t v34;
  int64x2_t **v35;
  int64x2_t v36;
  int64x2_t *v37;
  int64x2_t *v38;
  void **v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  int64x2_t *v53;
  char *v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t *v57;
  int64x2_t *v58;
  int64x2_t v59;
  int64x2_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  int64x2_t *v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t *v70;
  char *v71;
  int64x2_t *v72;
  int64x2_t *v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t *v76;
  unint64_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  int64x2_t *v86;
  char *v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t *v90;
  char *v91;
  int64x2_t v92;
  int64x2_t v93;
  uint64_t v94;
  int64x2_t v95;
  unint64_t v96;
  int64x2_t *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  int64x2_t *v103;
  char *v104;
  int64x2_t *v105;
  int64x2_t *v106;
  int64x2_t v107;
  int64x2_t v108;
  double v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;

  v5 = vmovn_s64(vceqq_s64(*(int64x2_t *)(*a3 + 48 * a4), *(int64x2_t *)(*a3 + 48 * a5)));
  if ((v5.i32[0] & v5.i32[1] & 1) == 0)
  {
    v12 = (_QWORD *)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 56);
    v13 = (double *)(v11 + 48 * a4);
    v14 = (double *)(v11 + 48 * a5);
    v15 = *v14;
    v16 = v14[1];
    v17 = *v13;
    v18 = v13[1];
    v19 = v18 * *v14 - v16 * *v13;
    v20 = 1.0;
    if (v19 <= 1.0)
    {
      v20 = v18 * *v14 - v16 * *v13;
      if (v19 < -1.0)
        v20 = -1.0;
    }
    if (*(_QWORD *)(a1 + 216))
    {
      sub_100492344(a1 + 192, (uint64_t)a3, (uint64_t)v12, a4, a5);
      *(double *)(a1 + 16) = v21;
      if (*(_BYTE *)(a2 + 72))
      {
        v21 = -v21;
        *(double *)(a1 + 16) = v21;
      }
    }
    else
    {
      v21 = *(double *)(a1 + 16);
    }
    if (fabs(v21) <= 1.0e-12)
    {
      v27 = *(_QWORD *)(a2 + 64);
      v28 = (int64x2_t *)(*a3 + 48 * a4);
      v26 = *(int64x2_t **)(a2 + 56);
      if ((unint64_t)v26 < v27)
      {
        v29 = *v28;
        v30 = v28[2];
        v26[1] = v28[1];
        v26[2] = v30;
        *v26 = v29;
        goto LABEL_16;
      }
      v39 = (void **)(a2 + 48);
      v40 = *(_QWORD *)(a2 + 48);
      v41 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v26->i64 - v40) >> 4);
      v42 = v41 + 1;
      if (v41 + 1 <= 0x555555555555555)
      {
        v43 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - v40) >> 4);
        if (2 * v43 > v42)
          v42 = 2 * v43;
        if (v43 >= 0x2AAAAAAAAAAAAAALL)
          v44 = 0x555555555555555;
        else
          v44 = v42;
        if (v44)
          v45 = (char *)sub_100121D50(a2 + 64, v44);
        else
          v45 = 0;
        v53 = (int64x2_t *)&v45[48 * v41];
        v54 = &v45[48 * v44];
        v55 = *v28;
        v56 = v28[2];
        v53[1] = v28[1];
        v53[2] = v56;
        *v53 = v55;
        v31 = v53 + 3;
        v58 = *(int64x2_t **)(a2 + 48);
        v57 = *(int64x2_t **)(a2 + 56);
        if (v57 == v58)
          goto LABEL_57;
        do
        {
          v59 = v57[-3];
          v60 = v57[-1];
          v53[-2] = v57[-2];
          v53[-1] = v60;
          v53[-3] = v59;
          v53 -= 3;
          v57 -= 3;
        }
        while (v57 != v58);
        goto LABEL_56;
      }
LABEL_109:
      sub_100007810();
    }
    v22 = v18 * v16 + v17 * v15;
    if (fabs(v20 * v21) < 1.0 && v22 > 0.0)
    {
      v23 = *a3 + 48 * a4;
      v24 = *(_QWORD *)(a2 + 64);
      v25 = vcvtq_s64_f64(vrndaq_f64(vmlaq_n_f64(vcvtq_f64_s64(*(int64x2_t *)v23), *(float64x2_t *)(*v12 + 48 * a5), v21)));
      v113 = *(int64x2_t *)(v23 + 16);
      v116 = *(int64x2_t *)(v23 + 32);
      v26 = *(int64x2_t **)(a2 + 56);
      if ((unint64_t)v26 < v24)
      {
        *v26 = v25;
        v26[1] = v113;
        v26[2] = v116;
LABEL_16:
        v31 = v26 + 3;
LABEL_59:
        *(_QWORD *)(a2 + 56) = v31;
        return;
      }
      v39 = (void **)(a2 + 48);
      v47 = *(_QWORD *)(a2 + 48);
      v48 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v26->i64 - v47) >> 4);
      v49 = v48 + 1;
      if (v48 + 1 <= 0x555555555555555)
      {
        v50 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - v47) >> 4);
        if (2 * v50 > v49)
          v49 = 2 * v50;
        if (v50 >= 0x2AAAAAAAAAAAAAALL)
          v51 = 0x555555555555555;
        else
          v51 = v49;
        if (v51)
        {
          v110 = v25;
          v52 = (char *)sub_100121D50(a2 + 64, v51);
          v25 = v110;
        }
        else
        {
          v52 = 0;
        }
        v53 = (int64x2_t *)&v52[48 * v48];
        v54 = &v52[48 * v51];
        *v53 = v25;
        v53[1] = v113;
        v53[2] = v116;
        v31 = v53 + 3;
        v66 = *(int64x2_t **)(a2 + 48);
        v57 = *(int64x2_t **)(a2 + 56);
        if (v57 == v66)
          goto LABEL_57;
        do
        {
          v67 = v57[-3];
          v68 = v57[-1];
          v53[-2] = v57[-2];
          v53[-1] = v68;
          v53[-3] = v67;
          v53 -= 3;
          v57 -= 3;
        }
        while (v57 != v66);
LABEL_56:
        v57 = (int64x2_t *)*v39;
LABEL_57:
        *(_QWORD *)(a2 + 48) = v53;
        *(_QWORD *)(a2 + 56) = v31;
        *(_QWORD *)(a2 + 64) = v54;
        if (v57)
          operator delete(v57);
        goto LABEL_59;
      }
      goto LABEL_109;
    }
    if (v22 > -0.99 && v20 * v21 < 0.0)
    {
      v32 = *a3 + 48 * a4;
      v33 = vmlaq_n_f64(vcvtq_f64_s64(*(int64x2_t *)v32), *(float64x2_t *)(*v12 + 48 * a5), v21);
      v34 = *(_QWORD *)(a2 + 64);
      v35 = (int64x2_t **)(a2 + 48);
      v36 = vcvtq_s64_f64(vrndaq_f64(v33));
      v114 = *(int64x2_t *)(v32 + 16);
      v117 = *(int64x2_t *)(v32 + 32);
      v37 = *(int64x2_t **)(a2 + 56);
      if ((unint64_t)v37 >= v34)
      {
        v61 = 0xAAAAAAAAAAAAAAABLL * (v37 - *v35);
        v62 = v61 + 1;
        if (v61 + 1 > 0x555555555555555)
          goto LABEL_110;
        v63 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v34 - (_QWORD)*v35) >> 4);
        if (2 * v63 > v62)
          v62 = 2 * v63;
        if (v63 >= 0x2AAAAAAAAAAAAAALL)
          v64 = 0x555555555555555;
        else
          v64 = v62;
        if (v64)
        {
          v111 = v36;
          v65 = (char *)sub_100121D50(a2 + 64, v64);
          v36 = v111;
        }
        else
        {
          v65 = 0;
        }
        v70 = (int64x2_t *)&v65[48 * v61];
        v71 = &v65[48 * v64];
        *v70 = v36;
        v70[1] = v114;
        v70[2] = v117;
        v38 = v70 + 3;
        v73 = *(int64x2_t **)(a2 + 48);
        v72 = *(int64x2_t **)(a2 + 56);
        if (v72 != v73)
        {
          do
          {
            v74 = v72[-3];
            v75 = v72[-1];
            v70[-2] = v72[-2];
            v70[-1] = v75;
            v70[-3] = v74;
            v70 -= 3;
            v72 -= 3;
          }
          while (v72 != v73);
          v72 = *v35;
        }
        *(_QWORD *)(a2 + 48) = v70;
        *(_QWORD *)(a2 + 56) = v38;
        *(_QWORD *)(a2 + 64) = v71;
        if (v72)
          operator delete(v72);
      }
      else
      {
        *v37 = v36;
        v37[1] = v114;
        v37[2] = v117;
        v38 = v37 + 3;
      }
      *(_QWORD *)(a2 + 56) = v38;
      v76 = (int64x2_t *)(*a3 + 48 * a4);
      v77 = *(_QWORD *)(a2 + 64);
      if ((unint64_t)v38 >= v77)
      {
        v81 = 0xAAAAAAAAAAAAAAABLL * (v38 - *v35);
        if (v81 + 1 > 0x555555555555555)
          goto LABEL_110;
        v82 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v77 - (_QWORD)*v35) >> 4);
        v83 = 2 * v82;
        if (2 * v82 <= v81 + 1)
          v83 = v81 + 1;
        if (v82 >= 0x2AAAAAAAAAAAAAALL)
          v84 = 0x555555555555555;
        else
          v84 = v83;
        if (v84)
          v85 = (char *)sub_100121D50(a2 + 64, v84);
        else
          v85 = 0;
        v86 = (int64x2_t *)&v85[48 * v81];
        v87 = &v85[48 * v84];
        v88 = *v76;
        v89 = v76[2];
        v86[1] = v76[1];
        v86[2] = v89;
        *v86 = v88;
        v80 = v86 + 3;
        v91 = *(char **)(a2 + 48);
        v90 = *(int64x2_t **)(a2 + 56);
        if (v90 != (int64x2_t *)v91)
        {
          do
          {
            v92 = v90[-3];
            v93 = v90[-1];
            v86[-2] = v90[-2];
            v86[-1] = v93;
            v86[-3] = v92;
            v86 -= 3;
            v90 -= 3;
          }
          while (v90 != (int64x2_t *)v91);
          v90 = *v35;
        }
        *(_QWORD *)(a2 + 48) = v86;
        *(_QWORD *)(a2 + 56) = v80;
        *(_QWORD *)(a2 + 64) = v87;
        if (v90)
          operator delete(v90);
      }
      else
      {
        v78 = *v76;
        v79 = v76[2];
        v38[1] = v76[1];
        v38[2] = v79;
        *v38 = v78;
        v80 = v38 + 3;
      }
      *(_QWORD *)(a2 + 56) = v80;
      v94 = *a3 + 48 * a4;
      v95 = vcvtq_s64_f64(vrndaq_f64(vmlaq_n_f64(vcvtq_f64_s64(*(int64x2_t *)v94), *(float64x2_t *)(*(_QWORD *)(a1 + 56) + 48 * a4), *(double *)(a1 + 16))));
      v115 = *(int64x2_t *)(v94 + 16);
      v118 = *(int64x2_t *)(v94 + 32);
      v96 = *(_QWORD *)(a2 + 64);
      if ((unint64_t)v80 < v96)
      {
        *v80 = v95;
        v80[1] = v115;
        v80[2] = v118;
        v97 = v80 + 3;
LABEL_105:
        *(_QWORD *)(a2 + 56) = v97;
        return;
      }
      v98 = 0xAAAAAAAAAAAAAAABLL * (v80 - *v35);
      if (v98 + 1 <= 0x555555555555555)
      {
        v99 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v96 - (_QWORD)*v35) >> 4);
        v100 = 2 * v99;
        if (2 * v99 <= v98 + 1)
          v100 = v98 + 1;
        if (v99 >= 0x2AAAAAAAAAAAAAALL)
          v101 = 0x555555555555555;
        else
          v101 = v100;
        if (v101)
        {
          v112 = v95;
          v102 = (char *)sub_100121D50(a2 + 64, v101);
          v95 = v112;
        }
        else
        {
          v102 = 0;
        }
        v103 = (int64x2_t *)&v102[48 * v98];
        v104 = &v102[48 * v101];
        *v103 = v95;
        v103[1] = v115;
        v103[2] = v118;
        v97 = v103 + 3;
        v106 = *(int64x2_t **)(a2 + 48);
        v105 = *(int64x2_t **)(a2 + 56);
        if (v105 != v106)
        {
          do
          {
            v107 = v105[-3];
            v108 = v105[-1];
            v103[-2] = v105[-2];
            v103[-1] = v108;
            v103[-3] = v107;
            v103 -= 3;
            v105 -= 3;
          }
          while (v105 != v106);
          v105 = *v35;
        }
        *(_QWORD *)(a2 + 48) = v103;
        *(_QWORD *)(a2 + 56) = v97;
        *(_QWORD *)(a2 + 64) = v104;
        if (v105)
          operator delete(v105);
        goto LABEL_105;
      }
LABEL_110:
      sub_100007810();
    }
    if (v22 <= 0.999)
    {
      v46 = *(_DWORD *)(a1 + 128);
      if (v46 == 3)
      {
        if (v22 > *(double *)(a1 + 24) + -1.0)
          goto LABEL_32;
      }
      else
      {
        if (v22 > 0.99 || v46 == 1)
        {
          sub_100490A7C(a1, (_QWORD *)a2, a3, a4, a5);
          return;
        }
        if (v46 == 2)
        {
          v109 = atan2(v20, v22);
          sub_100491534(a1, (_QWORD *)a2, a3, a4, a5, v109);
          return;
        }
      }
      sub_100490D80(a1, (_QWORD *)a2, a3, a4, a5);
      return;
    }
LABEL_32:
    sub_100491384(a1, (_QWORD *)a2, a3, a4, a5, v18 * v16 + v17 * v15);
  }
}

uint64_t sub_100492344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v7 = a5;
  v8 = a4;
  v5 = *(_QWORD *)(a1 + 24);
  if (!v5)
    sub_1004942F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t *))(*(_QWORD *)v5 + 48))(v5, a2, a3, &v8, &v7);
}

uint64_t sub_100492380(uint64_t result, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  uint64_t v15;
  double v16;
  _BOOL4 v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;

  v5 = result;
  v7 = *a3;
  v6 = (uint64_t *)a3[1];
  v8 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v6 - *a3) >> 4);
  if (v8 <= 2)
  {
    v9 = *(double *)(result + 16);
    if (v9 >= 0.0)
      goto LABEL_30;
    goto LABEL_13;
  }
  v10 = v6 - 6;
  if ((v8 & 1) != 0)
    v11 = v6 - 6;
  else
    v11 = (uint64_t *)a3[1];
  if ((uint64_t *)v7 == v11)
  {
    v13 = 0.0;
    v11 = (uint64_t *)*a3;
    if ((v8 & 1) != 0)
LABEL_11:
      v13 = v13 + (double)(v11[1] + v10[1]) * (double)(*v10 - *v11);
  }
  else
  {
    v12 = *v10;
    v13 = 0.0;
    v14 = (uint64_t *)*a3;
    do
    {
      v15 = v14[1];
      v16 = v13 + (double)(v15 + v10[1]) * (double)(v12 - *v14);
      v10 = v14 + 6;
      v12 = v14[6];
      v13 = v16 + (double)(v14[7] + v15) * (double)(*v14 - v12);
      v14 += 12;
    }
    while (v14 != v11);
    v10 = v14 - 6;
    if ((v8 & 1) != 0)
      goto LABEL_11;
  }
  v17 = v13 * 0.5 >= 0.0;
  v9 = *(double *)(result + 16);
  if (((v17 ^ (v9 < 0.0)) & 1) != 0)
  {
LABEL_30:
    if (v6 != (uint64_t *)v7)
    {
      v28 = 0;
      v29 = v8 - 1;
      do
      {
        sub_100491A88(v5, a2, a3, v28, v29);
        v29 = v28++;
      }
      while (v28 < 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
    }
    v30 = (uint64_t *)(a2 + 24);
    v31 = a2 + 48;
    v32 = *(_QWORD *)(a2 + 32);
    if (v32 >= *(_QWORD *)(a2 + 40))
    {
      result = sub_100121B68(v30, v31);
    }
    else
    {
      sub_100121B0C((uint64_t)v30, v31);
      result = v32 + 24;
    }
    *(_QWORD *)(a2 + 32) = result;
    return result;
  }
LABEL_13:
  if ((uint64_t *)v7 == v6)
  {
    v25 = 1.0;
    v20 = 0x7FFFFFFFFFFFFFFFLL;
    v18 = 0x8000000000000000;
  }
  else
  {
    v18 = 0x8000000000000000;
    v19 = 0x7FFFFFFFFFFFFFFFLL;
    v20 = 0x7FFFFFFFFFFFFFFFLL;
    v21 = 0x8000000000000000;
    v22 = (uint64_t *)*a3;
    do
    {
      v23 = *v22;
      v24 = v22[1];
      v22 += 6;
      if (v23 < v19)
        v19 = v23;
      if (v23 > v21)
        v21 = v23;
      if (v24 < v20)
        v20 = v24;
      if (v24 > v18)
        v18 = v24;
    }
    while (v22 != v6);
    v25 = (double)(v21 - v19);
  }
  v26 = fabs(v9);
  v27 = v26 + v26;
  if (v27 <= v25 && v27 <= (double)(v18 - v20))
    goto LABEL_30;
  return result;
}

uint64_t sub_10049259C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  BOOL v16;
  __int128 *v17;
  void **v18;
  __int128 *v19;
  __int128 *v20;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  _OWORD *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  size_t v46;
  float64x2_t *v47;

  sub_100492380(a1, a2, a3);
  v6 = *a3;
  v7 = a3[1];
  v8 = (_OWORD *)(v7 - 48);
  if (*a3 != v7 && (unint64_t)v8 > v6)
  {
    v10 = v6 + 48;
    do
    {
      v11 = *(_OWORD *)(v10 - 48);
      v12 = *(_OWORD *)(v10 - 32);
      v13 = *(_OWORD *)(v10 - 16);
      v15 = v8[1];
      v14 = v8[2];
      *(_OWORD *)(v10 - 48) = *v8;
      *(_OWORD *)(v10 - 32) = v15;
      *(_OWORD *)(v10 - 16) = v14;
      v8[1] = v12;
      v8[2] = v13;
      *v8 = v11;
      v8 -= 3;
      v16 = v10 >= (unint64_t)v8;
      v10 += 48;
    }
    while (!v16);
  }
  v19 = *(__int128 **)(a1 + 56);
  v17 = *(__int128 **)(a1 + 64);
  v18 = (void **)(a1 + 56);
  v20 = v17 - 3;
  if (v19 != v17 && v20 > v19)
  {
    v22 = v19 + 3;
    do
    {
      v23 = *(v22 - 3);
      v24 = *(v22 - 2);
      v25 = *(v22 - 1);
      v27 = v20[1];
      v26 = v20[2];
      *(v22 - 3) = *v20;
      *(v22 - 2) = v27;
      *(v22 - 1) = v26;
      v20[1] = v24;
      v20[2] = v25;
      *v20 = v23;
      v20 -= 3;
      v16 = v22 >= v20;
      v22 += 3;
    }
    while (!v16);
    v19 = *(__int128 **)(a1 + 56);
    v17 = *(__int128 **)(a1 + 64);
  }
  v28 = *(_QWORD *)(a1 + 72);
  if ((unint64_t)v17 >= v28)
  {
    v32 = 0xAAAAAAAAAAAAAAABLL * (v17 - v19);
    v33 = v32 + 1;
    if (v32 + 1 > 0x555555555555555)
      sub_100007810();
    v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - (_QWORD)v19) >> 4);
    if (2 * v34 > v33)
      v33 = 2 * v34;
    if (v34 >= 0x2AAAAAAAAAAAAAALL)
      v35 = 0x555555555555555;
    else
      v35 = v33;
    if (v35)
      v36 = (char *)sub_100121D50(a1 + 72, v35);
    else
      v36 = 0;
    v37 = &v36[48 * v32];
    v38 = &v36[48 * v35];
    v39 = *v19;
    v40 = v19[2];
    *((_OWORD *)v37 + 1) = v19[1];
    *((_OWORD *)v37 + 2) = v40;
    *(_OWORD *)v37 = v39;
    v31 = v37 + 48;
    v42 = *(char **)(a1 + 56);
    v41 = *(char **)(a1 + 64);
    if (v41 != v42)
    {
      do
      {
        v43 = *((_OWORD *)v41 - 3);
        v44 = *((_OWORD *)v41 - 1);
        *((_OWORD *)v37 - 2) = *((_OWORD *)v41 - 2);
        *((_OWORD *)v37 - 1) = v44;
        *((_OWORD *)v37 - 3) = v43;
        v37 -= 48;
        v41 -= 48;
      }
      while (v41 != v42);
      v41 = (char *)*v18;
    }
    *(_QWORD *)(a1 + 56) = v37;
    *(_QWORD *)(a1 + 64) = v31;
    *(_QWORD *)(a1 + 72) = v38;
    if (v41)
      operator delete(v41);
  }
  else
  {
    v29 = *v19;
    v30 = v19[2];
    v17[1] = v19[1];
    v17[2] = v30;
    *v17 = v29;
    v31 = v17 + 3;
  }
  *(_QWORD *)(a1 + 64) = v31;
  v45 = *(_QWORD *)(a1 + 56);
  v46 = (size_t)v31 - v45 - 48;
  if (v46)
  {
    memmove(*(void **)(a1 + 56), (const void *)(v45 + 48), v46);
    v47 = (float64x2_t *)*v18;
  }
  else
  {
    v47 = *(float64x2_t **)(a1 + 56);
  }
  *(_QWORD *)(a1 + 64) = v45 + v46;
  while (v47 != (float64x2_t *)(v45 + v46))
  {
    *v47 = vnegq_f64(*v47);
    v47 += 3;
  }
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a2 + 48);
  return sub_100492380(a1, a2, a3);
}

uint64_t sub_1004927C8(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  double v7;
  int v8;
  unint64_t v9;
  __int128 *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 *v37;
  __int128 v38;
  __int128 v39;
  double v40;
  int v41;
  unint64_t v42;
  __int128 *v43;
  _OWORD *v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  char *v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t result;

  v6 = a1 + 192;
  if (*(_QWORD *)(a1 + 216))
  {
    sub_100492344(a1 + 192, (uint64_t)a3, a1 + 56, 0, 0);
    *(double *)(a1 + 16) = v7;
  }
  else
  {
    v7 = *(double *)(a1 + 16);
  }
  if (fabs(v7) <= 1.0e-12)
  {
    v9 = a2[8];
    v10 = (__int128 *)*a3;
    v11 = (_OWORD *)a2[7];
    if ((unint64_t)v11 >= v9)
    {
      v15 = a2[6];
      v16 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v11 - v15) >> 4);
      v17 = v16 + 1;
      if (v16 + 1 > 0x555555555555555)
        sub_100007810();
      v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - v15) >> 4);
      if (2 * v18 > v17)
        v17 = 2 * v18;
      if (v18 >= 0x2AAAAAAAAAAAAAALL)
        v19 = 0x555555555555555;
      else
        v19 = v17;
      if (v19)
        v20 = (char *)sub_100121D50((uint64_t)(a2 + 8), v19);
      else
        v20 = 0;
      v21 = &v20[48 * v16];
      v22 = &v20[48 * v19];
      v23 = *v10;
      v24 = v10[2];
      *((_OWORD *)v21 + 1) = v10[1];
      *((_OWORD *)v21 + 2) = v24;
      *(_OWORD *)v21 = v23;
      v14 = v21 + 48;
      v26 = (char *)a2[6];
      v25 = (char *)a2[7];
      if (v25 != v26)
      {
        do
        {
          v27 = *((_OWORD *)v25 - 3);
          v28 = *((_OWORD *)v25 - 1);
          *((_OWORD *)v21 - 2) = *((_OWORD *)v25 - 2);
          *((_OWORD *)v21 - 1) = v28;
          *((_OWORD *)v21 - 3) = v27;
          v21 -= 48;
          v25 -= 48;
        }
        while (v25 != v26);
        v25 = (char *)a2[6];
      }
      a2[6] = v21;
      a2[7] = v14;
      a2[8] = v22;
      if (v25)
        operator delete(v25);
    }
    else
    {
      v12 = *v10;
      v13 = v10[2];
      v11[1] = v10[1];
      v11[2] = v13;
      *v11 = v12;
      v14 = v11 + 3;
    }
    a2[7] = v14;
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 132);
    if (v8 == 4)
    {
      sub_100491534(a1, a2, a3, 0, 0, 3.14159265);
    }
    else if (v8 == 2)
    {
      sub_100490A7C(a1, a2, a3, 0, 0);
    }
    else
    {
      sub_100490D80(a1, a2, a3, 0, 0);
    }
  }
  v29 = 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4);
  v30 = v29 - 1;
  if (v29 - 1 >= 2)
  {
    v31 = 0;
    do
    {
      v32 = v31 + 1;
      sub_100491A88(a1, (uint64_t)a2, a3, v31 + 1, v31);
      v31 = v32;
    }
    while (v29 - 2 != v32);
  }
  if (v29 != 1)
  {
    v33 = 48 * v29;
    v34 = v29 - 1;
    do
    {
      v35 = *(_QWORD *)(a1 + 56) + v33;
      *(float64x2_t *)(v35 - 48) = vnegq_f64(*(float64x2_t *)(v35 - 96));
      *(_OWORD *)(v35 - 32) = xmmword_100EF0438;
      *(_OWORD *)(v35 - 16) = unk_100EF0448;
      v33 -= 48;
      --v34;
    }
    while (v34);
  }
  v36 = *(_OWORD **)(a1 + 56);
  v37 = &v36[3 * v30];
  v38 = *v37;
  v39 = v37[2];
  v36[1] = v37[1];
  v36[2] = v39;
  *v36 = v38;
  if (*(_QWORD *)(a1 + 216))
  {
    sub_100492344(v6, (uint64_t)a3, a1 + 56, v30, v30);
    *(double *)(a1 + 16) = v40;
  }
  else
  {
    v40 = *(double *)(a1 + 16);
  }
  if (fabs(v40) <= 1.0e-12)
  {
    v42 = a2[8];
    v43 = (__int128 *)(*a3 + 48 * v30);
    v44 = (_OWORD *)a2[7];
    if ((unint64_t)v44 >= v42)
    {
      v48 = a2[6];
      v49 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v44 - v48) >> 4);
      v50 = v49 + 1;
      if (v49 + 1 > 0x555555555555555)
        sub_100007810();
      v51 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v42 - v48) >> 4);
      if (2 * v51 > v50)
        v50 = 2 * v51;
      if (v51 >= 0x2AAAAAAAAAAAAAALL)
        v52 = 0x555555555555555;
      else
        v52 = v50;
      if (v52)
        v53 = (char *)sub_100121D50((uint64_t)(a2 + 8), v52);
      else
        v53 = 0;
      v54 = &v53[48 * v49];
      v55 = &v53[48 * v52];
      v56 = *v43;
      v57 = v43[2];
      *((_OWORD *)v54 + 1) = v43[1];
      *((_OWORD *)v54 + 2) = v57;
      *(_OWORD *)v54 = v56;
      v47 = v54 + 48;
      v59 = (char *)a2[6];
      v58 = (char *)a2[7];
      if (v58 != v59)
      {
        do
        {
          v60 = *((_OWORD *)v58 - 3);
          v61 = *((_OWORD *)v58 - 1);
          *((_OWORD *)v54 - 2) = *((_OWORD *)v58 - 2);
          *((_OWORD *)v54 - 1) = v61;
          *((_OWORD *)v54 - 3) = v60;
          v54 -= 48;
          v58 -= 48;
        }
        while (v58 != v59);
        v58 = (char *)a2[6];
      }
      a2[6] = v54;
      a2[7] = v47;
      a2[8] = v55;
      if (v58)
        operator delete(v58);
    }
    else
    {
      v45 = *v43;
      v46 = v43[2];
      v44[1] = v43[1];
      v44[2] = v46;
      *v44 = v45;
      v47 = v44 + 3;
    }
    a2[7] = v47;
  }
  else
  {
    v41 = *(_DWORD *)(a1 + 132);
    if (v41 == 4)
    {
      sub_100491534(a1, a2, a3, v30, v30, 3.14159265);
    }
    else if (v41 == 2)
    {
      sub_100490A7C(a1, a2, a3, v30, v30);
    }
    else
    {
      sub_100490D80(a1, a2, a3, v30, v30);
    }
  }
  if (v30)
  {
    v62 = 0;
    do
    {
      sub_100491A88(a1, (uint64_t)a2, a3, v30, v62);
      v62 = v30--;
    }
    while (v30);
  }
  v63 = a2 + 3;
  v64 = (uint64_t)(a2 + 6);
  v65 = a2[4];
  if (v65 >= a2[5])
  {
    result = sub_100121B68(v63, v64);
  }
  else
  {
    sub_100121B0C((uint64_t)v63, v64);
    result = v65 + 24;
  }
  a2[4] = result;
  return result;
}

void sub_100492C5C(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  double v5;
  char *v6;
  char *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  int v16;
  double v17;
  double v18;
  double v19;
  __double2 v20;
  __int128 **v21;
  void **v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  unint64_t v30;
  unint64_t v31;
  int v32;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  void *exception;
  uint64_t v57;
  __int128 v58;
  unsigned int v59;
  __int128 v60;
  __int128 v61;

  v60 = 0u;
  v61 = 0u;
  v59 = -1;
  sub_100490318((uint64_t *)a2, (int64_t *)&v60, &v59);
  if ((v59 & 0x80000000) != 0)
    return;
  v4 = *(_DWORD *)(a2 + 80);
  if (v4)
  {
    *(_BYTE *)(a2 + 72) = 0;
    v5 = fabs(*(double *)(a1 + 8)) * 0.5;
    goto LABEL_16;
  }
  v6 = *(char **)(*(_QWORD *)a2 + 24 * v59);
  v7 = *(char **)(*(_QWORD *)a2 + 24 * v59 + 8);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - v6) >> 4);
  if (v8 <= 2)
  {
    *(_BYTE *)(a2 + 72) = 0;
    goto LABEL_15;
  }
  v9 = v7 - 48;
  if ((v8 & 1) != 0)
    v7 -= 48;
  if (v6 == v7)
  {
    v11 = 0.0;
    if ((v8 & 1) != 0)
LABEL_12:
      v11 = v11
          + (double)(uint64_t)(*((_QWORD *)v6 + 1) + *((_QWORD *)v9 + 1))
          * (double)(uint64_t)(*(_QWORD *)v9 - *(_QWORD *)v6);
  }
  else
  {
    v10 = *(_QWORD *)v9;
    v11 = 0.0;
    do
    {
      v12 = *((_QWORD *)v6 + 1);
      v13 = v11 + (double)(v12 + *((_QWORD *)v9 + 1)) * (double)(v10 - *(_QWORD *)v6);
      v9 = v6 + 48;
      v10 = *((_QWORD *)v6 + 6);
      v11 = v13 + (double)(*((_QWORD *)v6 + 7) + v12) * (double)(*(_QWORD *)v6 - v10);
      v6 += 96;
    }
    while (v6 != v7);
    v9 = v6 - 48;
    v6 = v7;
    if ((v8 & 1) != 0)
      goto LABEL_12;
  }
  v14 = v11 * 0.5;
  *(_BYTE *)(a2 + 72) = v14 < 0.0;
  if (v14 < 0.0)
  {
    v5 = -*(double *)(a1 + 8);
    goto LABEL_16;
  }
LABEL_15:
  v5 = *(double *)(a1 + 8);
LABEL_16:
  *(double *)(a1 + 16) = v5;
  v15 = fabs(v5);
  if (v15 + -2.30584301e18 >= (double)(uint64_t)v60
    || 2.30584301e18 - v15 <= (double)(uint64_t)v61
    || v15 + -2.30584301e18 >= (double)*((uint64_t *)&v60 + 1)
    || 2.30584301e18 - v15 <= (double)*((uint64_t *)&v61 + 1))
  {
    exception = __cxa_allocate_exception(0x20uLL);
    sub_100493D90(exception, "Values exceed permitted range");
  }
  v16 = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 128) = v16;
  *(_DWORD *)(a1 + 132) = v4;
  if (!*(_QWORD *)(a1 + 216) && (v16 == 2 || *(_DWORD *)(a2 + 80) == 4))
  {
    v17 = *(double *)(a1 + 144);
    if (v17 <= 1.0e-12)
    {
      v17 = log10(v15 + 2.0) * 0.25;
    }
    else if (v17 >= v15)
    {
      v17 = v15;
    }
    v18 = 3.14159265 / acos(1.0 - v17 / v15);
    if (v15 * 3.14159265 >= v18)
      v19 = v18;
    else
      v19 = v15 * 3.14159265;
    v20 = __sincos_stret(6.28318531 / v19);
    *(__double2 *)(a1 + 40) = v20;
    if (v5 < 0.0)
      *(double *)(a1 + 40) = -v20.__sinval;
    *(double *)(a1 + 32) = v19 / 6.28318531;
  }
  v21 = *(__int128 ***)a2;
  if (*(_QWORD *)a2 != *(_QWORD *)(a2 + 8))
  {
    v22 = (void **)(a2 + 48);
    v23 = (int)vcvtpd_s64_f64(v15);
    do
    {
      v24 = sub_100494354(*v21, v21[1]);
      v25 = (uint64_t *)*v21;
      if (v21[1] != v24)
        v21[1] = v24;
      if (v4 <= 1 && 0xAAAAAAAAAAAAAAABLL * (((char *)v24 - (char *)v25) >> 4) >= 2)
      {
        v26 = *v25;
        v27 = v24 - 3;
        v28 = (char *)(v24 - 3) - (char *)v25;
        do
        {
          if (*(_QWORD *)v27 != v26 || *((_QWORD *)v27 + 1) != v25[1])
            break;
          v21[1] = v27;
          v30 = 0xAAAAAAAAAAAAAAABLL * (v28 >> 4);
          v27 -= 3;
          v28 -= 48;
        }
        while (v30 > 1);
        v24 = v27 + 3;
      }
      if (v24 == (__int128 *)v25)
        goto LABEL_81;
      v31 = 0xAAAAAAAAAAAAAAABLL * (((char *)v24 - (char *)v25) >> 4);
      v32 = *(_DWORD *)(a2 + 80);
      if (v31 <= 2 && v32 == 0)
        goto LABEL_81;
      *(_QWORD *)(a2 + 56) = *(_QWORD *)(a2 + 48);
      if (v31 == 2)
      {
        if (v32 == 1)
        {
          if (*(_DWORD *)(a2 + 76) == 2)
            v38 = 4;
          else
            v38 = 3;
          *(_DWORD *)(a1 + 132) = v38;
        }
      }
      else if (v31 == 1)
      {
        if (*(double *)(a1 + 16) >= 1.0)
        {
          if (*(_DWORD *)(a2 + 76) == 2)
          {
            sub_10049320C(v25, vcvtpd_s64_f64((*(double *)(a1 + 32) + *(double *)(a1 + 32)) * 3.14159265), (uint64_t)&v57, v15, v15);
            v34 = *v22;
            if (*v22)
            {
              *(_QWORD *)(a2 + 56) = v34;
              operator delete(v34);
              *v22 = 0;
              *(_QWORD *)(a2 + 56) = 0;
              *(_QWORD *)(a2 + 64) = 0;
            }
            v35 = v57;
            *(_QWORD *)(a2 + 48) = v57;
            v36 = v58;
            *(_OWORD *)(a2 + 56) = v58;
            while (v35 != v36)
            {
              v37 = (*v21)[2];
              *(_OWORD *)(v35 + 16) = (*v21)[1];
              *(_OWORD *)(v35 + 32) = v37;
              v35 += 48;
            }
          }
          else
          {
            v40 = v25[1];
            v41 = *v25 + v23;
            *(_QWORD *)&v60 = *v25 - v23;
            *((_QWORD *)&v60 + 1) = v40 - v23;
            *(_QWORD *)&v61 = v41;
            *((_QWORD *)&v61 + 1) = v40 + v23;
            sub_1004935B4((uint64_t *)&v60, (uint64_t)&v57);
            v42 = *v22;
            if (*v22)
            {
              *(_QWORD *)(a2 + 56) = v42;
              operator delete(v42);
              *v22 = 0;
              *(_QWORD *)(a2 + 56) = 0;
              *(_QWORD *)(a2 + 64) = 0;
            }
            v43 = v57;
            *(_QWORD *)(a2 + 48) = v57;
            v44 = v58;
            *(_OWORD *)(a2 + 56) = v58;
            while (v43 != v44)
            {
              v45 = (*v21)[2];
              *(_OWORD *)(v43 + 16) = (*v21)[1];
              *(_OWORD *)(v43 + 32) = v45;
              v43 += 48;
            }
          }
          v46 = *(_QWORD *)(a2 + 32);
          v47 = (uint64_t *)(a2 + 24);
          v48 = a2 + 48;
          if (v46 >= *(_QWORD *)(a2 + 40))
          {
            v49 = sub_100121B68(v47, v48);
          }
          else
          {
            sub_100121B0C((uint64_t)v47, v48);
            v49 = v46 + 24;
          }
          *(_QWORD *)(a2 + 32) = v49;
        }
        goto LABEL_81;
      }
      sub_100490710((_QWORD *)a1, v21);
      v39 = *(_DWORD *)(a1 + 132);
      if (v39 == 1)
      {
        sub_10049259C(a1, a2, (uint64_t *)v21);
      }
      else if (v39)
      {
        sub_1004927C8(a1, (_QWORD *)a2, (uint64_t *)v21);
      }
      else
      {
        sub_100492380(a1, a2, (uint64_t *)v21);
      }
LABEL_81:
      v21 += 3;
    }
    while (v21 != *(__int128 ***)(a2 + 8));
  }
  v50 = *(_QWORD *)(a1 + 80);
  v51 = *(_QWORD *)(a1 + 88);
  v52 = (uint64_t *)(a1 + 80);
  v53 = *(_QWORD *)(a2 + 24);
  v54 = *(_QWORD *)(a2 + 32);
  v55 = (uint64_t *)(a2 + 24);
  sub_1003D5C44(v52, 0xAAAAAAAAAAAAAAABLL * ((v51 - v50) >> 3) - 0x5555555555555555 * ((v54 - v53) >> 3));
  sub_1004943D0(*v55, v55[1], v52);
  sub_100121AB8(v55);
}

void sub_1004931F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10049320C(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  int v6;
  double v9;
  __double2 v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  char *v27;
  int v28;
  double sinval;
  double cosval;
  unint64_t v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  double v43;

  if (a4 <= 0.0)
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  else
  {
    v6 = a2;
    if (a5 <= 0.0)
      v9 = a4;
    else
      v9 = a5;
    if (a2 <= 2)
      v6 = (int)(sqrt((v9 + a4) * 0.5) * 3.14159265);
    v10 = __sincos_stret(6.28318531 / (double)v6);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    sub_1003A54B4((void **)a3, v6);
    v11 = llround((double)*a1 + a4);
    v12 = (uint64_t)(double)a1[1];
    v14 = (_QWORD *)(a3 + 16);
    v13 = *(_QWORD *)(a3 + 16);
    v15 = *(unint64_t **)(a3 + 8);
    if ((unint64_t)v15 >= v13)
    {
      v17 = *(unint64_t **)a3;
      v18 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v15 - *(_QWORD *)a3) >> 4);
      v19 = v18 + 1;
      if (v18 + 1 > 0x555555555555555)
        sub_100007810();
      v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - (_QWORD)v17) >> 4);
      if (2 * v20 > v19)
        v19 = 2 * v20;
      if (v20 >= 0x2AAAAAAAAAAAAAALL)
        v21 = 0x555555555555555;
      else
        v21 = v19;
      if (v21)
      {
        v22 = (char *)sub_100121D50(a3 + 16, v21);
        v17 = *(unint64_t **)a3;
        v15 = *(unint64_t **)(a3 + 8);
      }
      else
      {
        v22 = 0;
      }
      v23 = &v22[48 * v18];
      *(_QWORD *)v23 = v11;
      *((_QWORD *)v23 + 1) = v12;
      v24 = &v22[48 * v21];
      *((_OWORD *)v23 + 1) = xmmword_100EF0438;
      *((_OWORD *)v23 + 2) = unk_100EF0448;
      v16 = (unint64_t *)(v23 + 48);
      if (v15 == v17)
      {
        v27 = v23;
      }
      else
      {
        do
        {
          v25 = *((_OWORD *)v15 - 3);
          v26 = *((_OWORD *)v15 - 1);
          v27 = v23 - 48;
          *((_OWORD *)v23 - 2) = *((_OWORD *)v15 - 2);
          *((_OWORD *)v23 - 1) = v26;
          *((_OWORD *)v23 - 3) = v25;
          v15 -= 6;
          v23 -= 48;
        }
        while (v15 != v17);
      }
      *(_QWORD *)a3 = v27;
      *(_QWORD *)(a3 + 8) = v16;
      *(_QWORD *)(a3 + 16) = v24;
      if (v17)
        operator delete(v17);
    }
    else
    {
      *v15 = v11;
      v15[1] = v12;
      *((_OWORD *)v15 + 1) = xmmword_100EF0438;
      *((_OWORD *)v15 + 2) = unk_100EF0448;
      v16 = v15 + 6;
    }
    *(_QWORD *)(a3 + 8) = v16;
    if (v6 >= 2)
    {
      v28 = 1;
      sinval = v10.__sinval;
      cosval = v10.__cosval;
      do
      {
        v31 = llround((double)*a1 + a4 * cosval);
        v32 = llround((double)a1[1] + v9 * sinval);
        if ((unint64_t)v16 >= *v14)
        {
          v33 = *(unint64_t **)a3;
          v34 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v16 - *(_QWORD *)a3) >> 4);
          v35 = v34 + 1;
          if (v34 + 1 > 0x555555555555555)
            sub_100007810();
          if (0x5555555555555556 * ((uint64_t)(*v14 - (_QWORD)v33) >> 4) > v35)
            v35 = 0x5555555555555556 * ((uint64_t)(*v14 - (_QWORD)v33) >> 4);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*v14 - (_QWORD)v33) >> 4) >= 0x2AAAAAAAAAAAAAALL)
            v36 = 0x555555555555555;
          else
            v36 = v35;
          if (v36)
          {
            v37 = (char *)sub_100121D50(a3 + 16, v36);
            v33 = *(unint64_t **)a3;
            v16 = *(unint64_t **)(a3 + 8);
          }
          else
          {
            v37 = 0;
          }
          v38 = &v37[48 * v34];
          *(_QWORD *)v38 = v31;
          *((_QWORD *)v38 + 1) = v32;
          *((_OWORD *)v38 + 1) = xmmword_100EF0438;
          *((_OWORD *)v38 + 2) = unk_100EF0448;
          if (v16 == v33)
          {
            v42 = &v37[48 * v34];
          }
          else
          {
            v39 = &v37[48 * v34];
            do
            {
              v40 = *((_OWORD *)v16 - 3);
              v41 = *((_OWORD *)v16 - 1);
              v42 = v39 - 48;
              *((_OWORD *)v39 - 2) = *((_OWORD *)v16 - 2);
              *((_OWORD *)v39 - 1) = v41;
              *((_OWORD *)v39 - 3) = v40;
              v16 -= 6;
              v39 -= 48;
            }
            while (v16 != v33);
          }
          v16 = (unint64_t *)(v38 + 48);
          *(_QWORD *)a3 = v42;
          *(_QWORD *)(a3 + 8) = v38 + 48;
          *(_QWORD *)(a3 + 16) = &v37[48 * v36];
          if (v33)
            operator delete(v33);
        }
        else
        {
          *v16 = v31;
          v16[1] = v32;
          *((_OWORD *)v16 + 1) = xmmword_100EF0438;
          *((_OWORD *)v16 + 2) = unk_100EF0448;
          v16 += 6;
        }
        *(_QWORD *)(a3 + 8) = v16;
        v43 = v10.__sinval * cosval;
        cosval = cosval * v10.__cosval - sinval * v10.__sinval;
        sinval = v43 + sinval * v10.__cosval;
        ++v28;
      }
      while (v28 != v6);
    }
  }
}

void sub_10049358C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1004935B4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char **v7;
  char *v8;
  char *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _BYTE *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _BYTE *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _BYTE *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  char *v59;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  sub_1003A54B4((void **)a2, 4uLL);
  v5 = *a1;
  v4 = a1[1];
  v7 = (char **)(a2 + 16);
  v6 = *(char **)(a2 + 16);
  v8 = *(char **)(a2 + 8);
  if (v8 >= v6)
  {
    v10 = *(_BYTE **)a2;
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v8[-*(_QWORD *)a2] >> 4);
    v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555)
      sub_100007810();
    v13 = 0xAAAAAAAAAAAAAAABLL * ((v6 - v10) >> 4);
    if (2 * v13 > v12)
      v12 = 2 * v13;
    if (v13 >= 0x2AAAAAAAAAAAAAALL)
      v14 = 0x555555555555555;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)sub_100121D50(a2 + 16, v14);
      v10 = *(_BYTE **)a2;
      v8 = *(char **)(a2 + 8);
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[48 * v11];
    *(_QWORD *)v16 = v5;
    *((_QWORD *)v16 + 1) = v4;
    v6 = &v15[48 * v14];
    *((_OWORD *)v16 + 1) = xmmword_100EF0438;
    *((_OWORD *)v16 + 2) = unk_100EF0448;
    v9 = v16 + 48;
    if (v8 == v10)
    {
      v19 = v16;
    }
    else
    {
      do
      {
        v17 = *((_OWORD *)v8 - 3);
        v18 = *((_OWORD *)v8 - 1);
        v19 = v16 - 48;
        *((_OWORD *)v16 - 2) = *((_OWORD *)v8 - 2);
        *((_OWORD *)v16 - 1) = v18;
        *((_OWORD *)v16 - 3) = v17;
        v8 -= 48;
        v16 -= 48;
      }
      while (v8 != v10);
    }
    *(_QWORD *)a2 = v19;
    *(_QWORD *)(a2 + 8) = v9;
    *(_QWORD *)(a2 + 16) = v6;
    if (v10)
    {
      operator delete(v10);
      v6 = *v7;
    }
  }
  else
  {
    *(_QWORD *)v8 = v5;
    *((_QWORD *)v8 + 1) = v4;
    *((_OWORD *)v8 + 1) = xmmword_100EF0438;
    *((_OWORD *)v8 + 2) = unk_100EF0448;
    v9 = v8 + 48;
  }
  *(_QWORD *)(a2 + 8) = v9;
  v20 = a1[1];
  v21 = a1[2];
  if (v9 >= v6)
  {
    v23 = *(_BYTE **)a2;
    v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v9[-*(_QWORD *)a2] >> 4);
    v25 = v24 + 1;
    if (v24 + 1 > 0x555555555555555)
      sub_100007810();
    v26 = 0xAAAAAAAAAAAAAAABLL * ((v6 - v23) >> 4);
    if (2 * v26 > v25)
      v25 = 2 * v26;
    if (v26 >= 0x2AAAAAAAAAAAAAALL)
      v27 = 0x555555555555555;
    else
      v27 = v25;
    if (v27)
    {
      v28 = (char *)sub_100121D50(a2 + 16, v27);
      v23 = *(_BYTE **)a2;
      v9 = *(char **)(a2 + 8);
    }
    else
    {
      v28 = 0;
    }
    v29 = &v28[48 * v24];
    *(_QWORD *)v29 = v21;
    *((_QWORD *)v29 + 1) = v20;
    v6 = &v28[48 * v27];
    *((_OWORD *)v29 + 1) = xmmword_100EF0438;
    *((_OWORD *)v29 + 2) = unk_100EF0448;
    v22 = v29 + 48;
    if (v9 == v23)
    {
      v32 = v29;
    }
    else
    {
      do
      {
        v30 = *((_OWORD *)v9 - 3);
        v31 = *((_OWORD *)v9 - 1);
        v32 = v29 - 48;
        *((_OWORD *)v29 - 2) = *((_OWORD *)v9 - 2);
        *((_OWORD *)v29 - 1) = v31;
        *((_OWORD *)v29 - 3) = v30;
        v9 -= 48;
        v29 -= 48;
      }
      while (v9 != v23);
    }
    *(_QWORD *)a2 = v32;
    *(_QWORD *)(a2 + 8) = v22;
    *(_QWORD *)(a2 + 16) = v6;
    if (v23)
    {
      operator delete(v23);
      v6 = *v7;
    }
  }
  else
  {
    *(_QWORD *)v9 = v21;
    *((_QWORD *)v9 + 1) = v20;
    *((_OWORD *)v9 + 1) = xmmword_100EF0438;
    *((_OWORD *)v9 + 2) = unk_100EF0448;
    v22 = v9 + 48;
  }
  *(_QWORD *)(a2 + 8) = v22;
  v34 = a1[2];
  v33 = a1[3];
  if (v22 >= v6)
  {
    v36 = *(_BYTE **)a2;
    v37 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v22[-*(_QWORD *)a2] >> 4);
    v38 = v37 + 1;
    if (v37 + 1 > 0x555555555555555)
      sub_100007810();
    v39 = 0xAAAAAAAAAAAAAAABLL * ((v6 - v36) >> 4);
    if (2 * v39 > v38)
      v38 = 2 * v39;
    if (v39 >= 0x2AAAAAAAAAAAAAALL)
      v40 = 0x555555555555555;
    else
      v40 = v38;
    if (v40)
    {
      v41 = (char *)sub_100121D50(a2 + 16, v40);
      v36 = *(_BYTE **)a2;
      v22 = *(char **)(a2 + 8);
    }
    else
    {
      v41 = 0;
    }
    v42 = &v41[48 * v37];
    *(_QWORD *)v42 = v34;
    *((_QWORD *)v42 + 1) = v33;
    v6 = &v41[48 * v40];
    *((_OWORD *)v42 + 1) = xmmword_100EF0438;
    *((_OWORD *)v42 + 2) = unk_100EF0448;
    v35 = v42 + 48;
    if (v22 == v36)
    {
      v45 = v42;
    }
    else
    {
      do
      {
        v43 = *((_OWORD *)v22 - 3);
        v44 = *((_OWORD *)v22 - 1);
        v45 = v42 - 48;
        *((_OWORD *)v42 - 2) = *((_OWORD *)v22 - 2);
        *((_OWORD *)v42 - 1) = v44;
        *((_OWORD *)v42 - 3) = v43;
        v22 -= 48;
        v42 -= 48;
      }
      while (v22 != v36);
    }
    *(_QWORD *)a2 = v45;
    *(_QWORD *)(a2 + 8) = v35;
    *(_QWORD *)(a2 + 16) = v6;
    if (v36)
    {
      operator delete(v36);
      v6 = *v7;
    }
  }
  else
  {
    *(_QWORD *)v22 = v34;
    *((_QWORD *)v22 + 1) = v33;
    *((_OWORD *)v22 + 1) = xmmword_100EF0438;
    *((_OWORD *)v22 + 2) = unk_100EF0448;
    v35 = v22 + 48;
  }
  *(_QWORD *)(a2 + 8) = v35;
  v46 = *a1;
  v47 = a1[3];
  if (v35 >= v6)
  {
    v49 = *(_BYTE **)a2;
    v50 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v35[-*(_QWORD *)a2] >> 4);
    v51 = v50 + 1;
    if (v50 + 1 > 0x555555555555555)
      sub_100007810();
    v52 = 0xAAAAAAAAAAAAAAABLL * ((v6 - v49) >> 4);
    if (2 * v52 > v51)
      v51 = 2 * v52;
    if (v52 >= 0x2AAAAAAAAAAAAAALL)
      v53 = 0x555555555555555;
    else
      v53 = v51;
    if (v53)
    {
      v54 = (char *)sub_100121D50(a2 + 16, v53);
      v49 = *(_BYTE **)a2;
      v35 = *(char **)(a2 + 8);
    }
    else
    {
      v54 = 0;
    }
    v55 = &v54[48 * v50];
    *(_QWORD *)v55 = v46;
    *((_QWORD *)v55 + 1) = v47;
    v56 = &v54[48 * v53];
    *((_OWORD *)v55 + 1) = xmmword_100EF0438;
    *((_OWORD *)v55 + 2) = unk_100EF0448;
    v48 = v55 + 48;
    if (v35 == v49)
    {
      v59 = v55;
    }
    else
    {
      do
      {
        v57 = *((_OWORD *)v35 - 3);
        v58 = *((_OWORD *)v35 - 1);
        v59 = v55 - 48;
        *((_OWORD *)v55 - 2) = *((_OWORD *)v35 - 2);
        *((_OWORD *)v55 - 1) = v58;
        *((_OWORD *)v55 - 3) = v57;
        v35 -= 48;
        v55 -= 48;
      }
      while (v35 != v49);
    }
    *(_QWORD *)a2 = v59;
    *(_QWORD *)(a2 + 8) = v48;
    *(_QWORD *)(a2 + 16) = v56;
    if (v49)
      operator delete(v49);
  }
  else
  {
    *(_QWORD *)v35 = v46;
    *((_QWORD *)v35 + 1) = v47;
    *((_OWORD *)v35 + 1) = xmmword_100EF0438;
    *((_OWORD *)v35 + 2) = unk_100EF0448;
    v48 = v35 + 48;
  }
  *(_QWORD *)(a2 + 8) = v48;
}

void sub_100493A44(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100493A70(uint64_t a1, double a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;

  *(_DWORD *)a1 = 0;
  v4 = (uint64_t *)(a1 + 80);
  sub_100121AB8((uint64_t *)(a1 + 80));
  v5 = *(uint64_t **)(a1 + 104);
  v6 = *(uint64_t **)(a1 + 112);
  if (v6 != v5)
  {
    if (fabs(a2) >= 0.5)
    {
      v9 = *(double *)(a1 + 136);
      v10 = 2.0;
      if (v9 > 1.0)
        v10 = 2.0 / (v9 * v9);
      *(double *)(a1 + 24) = v10;
      *(double *)(a1 + 8) = a2;
      do
      {
        sub_100492C5C(a1, (uint64_t)v5);
        if (*(_DWORD *)a1)
          sub_100121AB8(v4);
        v5 += 11;
      }
      while (v5 != *(uint64_t **)(a1 + 112));
    }
    else
    {
      do
      {
        sub_1003D5C44(v4, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 88) - *(_QWORD *)(a1 + 80)) >> 3)- 0x5555555555555555 * ((v5[1] - *v5) >> 3));
        v7 = *v5;
        v8 = v5[1];
        v5 += 11;
        sub_1004943D0(v7, v8, v4);
      }
      while (v5 != v6);
    }
  }
}

void sub_100493B70(uint64_t a1, uint64_t *a2, char a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  _BYTE v13[24];
  _BYTE *v14;
  _QWORD v15[2];
  int v16;
  uint64_t v17;
  __int16 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[4];
  char v33;
  BOOL v34;
  uint64_t v35;

  sub_100121AB8(a2);
  sub_100493A70(a1, a4);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  if (v9 != v8)
  {
    if ((uint64_t *)(a1 + 80) != a2)
      sub_10032AC2C((uint64_t)a2, v8, v9, 0xAAAAAAAAAAAAAAABLL * ((v9 - v8) >> 3));
    if (a4 < 0.0 || (a3 & 1) == 0)
    {
      v15[1] = 0;
      v16 = 2;
      v17 = 0;
      v18 = 0;
      v19 = 0u;
      v20 = 0u;
      v21 = 0u;
      v22 = 0u;
      v23 = 0u;
      v24 = 0u;
      v27 = 0u;
      memset(v28, 0, 29);
      v25 = 0u;
      v26 = 0u;
      v28[29] = 1;
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32[3] = 0;
      v35 = 0;
      v15[0] = &off_101251F68;
      v33 = 0;
      v34 = *(unsigned __int8 *)(a1 + 153) != *(unsigned __int8 *)(*(_QWORD *)(a1 + 104) + 72);
      if (*(_QWORD *)(a1 + 184))
      {
        sub_100326F10((uint64_t)v13, a1 + 160);
        sub_100326E78(v32, (uint64_t)v13);
        v10 = v14;
        if (v14 == v13)
        {
          v11 = 4;
          v10 = v13;
          goto LABEL_11;
        }
        if (v14)
        {
          v11 = 5;
LABEL_11:
          (*(void (**)(void))(*v10 + 8 * v11))();
        }
      }
      sub_1003D0194((uint64_t)v15, (uint64_t **)(a1 + 80), 0, 0);
      if (*(_BYTE *)(*(_QWORD *)(a1 + 104) + 72))
        v12 = 3;
      else
        v12 = 2;
      sub_100320F24((uint64_t)v15, 2, v12, a2);
      sub_1003CFDF0((uint64_t)v15);
    }
  }
}

void sub_100493D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, char a13)
{
  uint64_t *v13;
  uint64_t *v15;
  uint64_t v16;

  v15 = a12;
  if (a12 == v13)
  {
    v16 = 4;
    v15 = &a9;
  }
  else
  {
    if (!a12)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_6:
  sub_1003CFDF0((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_100493D94(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)off_101261A48;
  if (SHIBYTE(this[3].__vftable) < 0)
    operator delete(this[1].__vftable);
  std::exception::~exception(this);
}

_QWORD *sub_100493DD0(_QWORD *a1, char *a2)
{
  *a1 = off_101261A48;
  sub_100493E80(a1 + 1, a2);
  return a1;
}

void sub_100493E00(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void sub_100493E14(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)off_101261A48;
  if (SHIBYTE(this[3].__vftable) < 0)
    operator delete(this[1].__vftable);
  std::exception::~exception(this);
  operator delete();
}

uint64_t sub_100493E64(uint64_t a1)
{
  uint64_t result;

  result = a1 + 8;
  if (*(char *)(a1 + 31) < 0)
    return *(_QWORD *)result;
  return result;
}

_QWORD *sub_100493E80(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    sub_100493F30();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_100493F30()
{
  sub_100007824("basic_string");
}

uint64_t sub_100493F44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  void *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t *v14;

  v3 = 0x2E8BA2E8BA2E8BA3 * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x2E8BA2E8BA2E8BALL)
    sub_100007810();
  if (0x5D1745D1745D1746 * ((a1[2] - *a1) >> 3) > v4)
    v4 = 0x5D1745D1745D1746 * ((a1[2] - *a1) >> 3);
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((a1[2] - *a1) >> 3)) >= 0x1745D1745D1745DLL)
    v6 = 0x2E8BA2E8BA2E8BALL;
  else
    v6 = v4;
  v14 = a1 + 2;
  if (v6)
    v7 = (char *)sub_100007898((uint64_t)(a1 + 2), v6);
  else
    v7 = 0;
  v10 = v7;
  v11 = &v7[88 * v3];
  v13 = &v7[88 * v6];
  sub_100494064((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  v12 = v11 + 88;
  sub_1004940D8(a1, &v10);
  v8 = a1[1];
  sub_100494284(&v10);
  return v8;
}

void sub_100494050(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100494284((void **)va);
  _Unwind_Resume(a1);
}

__n128 sub_100494064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  uint64_t v4;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a3 + 24);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a3 + 40);
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  result = *(__n128 *)(a3 + 48);
  *(__n128 *)(a2 + 48) = result;
  *(_QWORD *)(a2 + 64) = *(_QWORD *)(a3 + 64);
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 64) = 0;
  v4 = *(_QWORD *)(a3 + 72);
  *(_DWORD *)(a2 + 80) = *(_DWORD *)(a3 + 80);
  *(_QWORD *)(a2 + 72) = v4;
  return result;
}

uint64_t sub_1004940D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_10049414C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10049414C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 88;
      sub_100494064(a1, v7 - 88, v9);
      v7 = *((_QWORD *)&v16 + 1) - 88;
      *((_QWORD *)&v16 + 1) -= 88;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_100494200((uint64_t)v13);
  return v11;
}

uint64_t sub_100494200(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_100494234((uint64_t *)a1);
  return a1;
}

void sub_100494234(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_10032AF00(v3, v1);
      v1 += 88;
    }
    while (v1 != v2);
  }
}

void **sub_100494284(void **a1)
{
  sub_1004942B4(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_1004942B4(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 88;
    sub_10032AF00(v4, i - 88);
  }
}

void sub_1004942F8()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = &off_101261A88;
}

void sub_100494330(std::exception *a1)
{
  std::exception::~exception(a1);
  operator delete();
}

__int128 *sub_100494354(__int128 *a1, __int128 *a2)
{
  __int128 *result;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *i;
  __int128 v10;
  __int128 v11;

  result = a2;
  if (a1 != a2)
  {
    v4 = a1 - 3;
    do
    {
      if (v4 + 6 == a2)
        return a2;
      v5 = *((_QWORD *)v4 + 6);
      v6 = *((_QWORD *)v4 + 7);
      v4 += 3;
    }
    while (v5 != *((_QWORD *)v4 + 6) || v6 != *((_QWORD *)v4 + 7));
    for (i = v4 + 6; i != a2; i += 3)
    {
      if (*(_QWORD *)v4 != *(_QWORD *)i || *((_QWORD *)v4 + 1) != *((_QWORD *)i + 1))
      {
        v10 = *i;
        v11 = i[2];
        v4[4] = i[1];
        v4[5] = v11;
        v4[3] = v10;
        v4 += 3;
      }
    }
    return v4 + 3;
  }
  return result;
}

uint64_t sub_1004943D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;

  v3 = a1;
  v6 = a3;
  if (a1 == a2)
    return a1;
  v4 = a2;
  do
  {
    sub_100494430(&v6, v3);
    v3 += 24;
  }
  while (v3 != v4);
  return v4;
}

uint64_t **sub_100494430(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v3 = *a1;
  v5 = (*a1)[1];
  v4 = (*a1)[2];
  v6 = *a1;
  if (v5 >= v4)
  {
    v7 = sub_100121B68(v6, a2);
  }
  else
  {
    sub_100121B0C((uint64_t)v6, a2);
    v7 = v5 + 24;
  }
  v3[1] = v7;
  return a1;
}

void sub_100495180(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004951B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004958F0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100495920(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_100496168(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10049622C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

_BYTE *sub_1004967C4(uint64_t a1)
{
  _BYTE *result;

  result = *(_BYTE **)(a1 + 32);
  if (result[296])
    return _objc_msgSend(result, "p_showHUDAndGuides");
  return result;
}

unint64_t sub_100496D84(CKRecordID a1, Swift::String a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  unint64_t v10;
  unint64_t v11;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v10 = ((unint64_t)a1.super.isa - 1) / 3;
  v11 = ((unint64_t)a1.super.isa - 1) % 3;
  switch(v11)
  {
    case 2uLL:
      CGRectGetMinX(*(CGRect *)&a3);
      break;
    case 1uLL:
      CGRectGetMidX(*(CGRect *)&a3);
      break;
    case 0uLL:
      CGRectGetMaxX(*(CGRect *)&a3);
      break;
  }
  switch(v10)
  {
    case 2uLL:
      v14.origin.x = a3;
      v14.origin.y = a4;
      v14.size.width = a5;
      v14.size.height = a6;
      CGRectGetMinY(v14);
      break;
    case 1uLL:
      v15.origin.x = a3;
      v15.origin.y = a4;
      v15.size.width = a5;
      v15.size.height = a6;
      CGRectGetMidY(v15);
      break;
    case 0uLL:
      v13.origin.x = a3;
      v13.origin.y = a4;
      v13.size.width = a5;
      v13.size.height = a6;
      CGRectGetMaxY(v13);
      break;
  }
  return (unint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(a1, a2);
}

void sub_10049755C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049758C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004975BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004975EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049761C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049764C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049AC9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  char a68;

  _Block_object_dispose(&a62, 8);
  _Block_object_dispose(&a68, 8);
  _Unwind_Resume(a1);
}

void sub_10049ACFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

uint64_t sub_10049AD2C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10049AD3C(uint64_t a1)
{

}

void sub_10049AD44(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  unsigned int v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  signed int v26;
  void *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  id *v32;
  uint64_t v33;
  NSObject *log;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint8_t buf[4];
  void *v41;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  if (*(_BYTE *)(v8 + 24))
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101261C68);
    v9 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E3A650(v9);
    goto LABEL_40;
  }
  *(_BYTE *)(v8 + 24) = 1;
  if (objc_msgSend(v6, "crl_isCancelError"))
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101261C88);
    v10 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Cancelled loading file representation", buf, 2u);
    }
    goto LABEL_34;
  }
  if (!v5)
  {
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101261D08);
    v29 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E3A528(v29);
    goto LABEL_34;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "URL"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "UUIDString"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "URLByAppendingPathComponent:isDirectory:", v13, 1));

  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 96), "crl_safeLastPathComponentForItemURL:registeredTypeIdentifier:", v5, *(_QWORD *)(a1 + 40)));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "URLByAppendingPathComponent:", v15));
  v17 = *(void **)(a1 + 48);
  v39 = 0;
  LODWORD(v13) = objc_msgSend(v17, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v14, 1, 0, &v39);
  v18 = v39;
  v19 = v18;
  if (!(_DWORD)v13)
  {
    v22 = v18;
    goto LABEL_29;
  }
  v20 = *(void **)(a1 + 48);
  v38 = v19;
  v21 = objc_msgSend(v20, "copyItemAtURL:toURL:error:", v5, v16, &v38);
  v22 = v38;

  if (!v21)
  {
LABEL_29:
    if (qword_10147E368 != -1)
      dispatch_once(&qword_10147E368, &stru_101261CE8);
    v30 = off_1013D9068;
    if (os_log_type_enabled((os_log_t)off_1013D9068, OS_LOG_TYPE_ERROR))
      sub_100E3A5BC(v30);
    goto LABEL_33;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 32));
  objc_msgSend(*(id *)(a1 + 56), "addObject:", v16);
  v23 = *(void **)(a1 + 48);
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "path"));
  v37 = 0;
  v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "attributesOfItemAtPath:error:", v24, &v37));
  v25 = v37;

  v35 = v25;
  if (!v25)
  {
    v26 = objc_msgSend(v36, "fileSize");
    if (qword_10147E4D8 != -1)
      dispatch_once(&qword_10147E4D8, &stru_101261CA8);
    log = off_1013D91D8;
    if (os_log_type_enabled((os_log_t)off_1013D91D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      LODWORD(v41) = v26 / 1024;
      _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEFAULT, "Photo Picker filesize %d kb", buf, 8u);
    }
  }
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "pathExtension", log));
  if (qword_10147E4D8 != -1)
    dispatch_once(&qword_10147E4D8, &stru_101261CC8);
  v28 = off_1013D91D8;
  if (os_log_type_enabled((os_log_t)off_1013D91D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v41 = v27;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Photo Picker file format %@", buf, 0xCu);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 32));

LABEL_33:
LABEL_34:
  if (v7 && (objc_msgSend(v7, "crl_isCancelError") & 1) == 0)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 32));
    v31 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v33 = *(_QWORD *)(v31 + 40);
    v32 = (id *)(v31 + 40);
    if (!v33)
      objc_storeStrong(v32, a3);
    os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 32));
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
LABEL_40:

}

void sub_10049B25C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10049B28C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10049B2BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLInsertMediaCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91D8;
  off_1013D91D8 = v2;

}

void sub_10049B2EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLInsertMediaCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D91D8;
  off_1013D91D8 = v2;

}

void sub_10049B31C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10049B34C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLDefaultCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9068;
  off_1013D9068 = v2;

}

void sub_10049B37C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  id v5;

  v1 = *(_QWORD *)(a1 + 48);
  if (v1)
  {
    v3 = *(_QWORD *)(a1 + 32);
    v5 = objc_msgSend(*(id *)(a1 + 40), "copy");
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "copy");
    (*(void (**)(uint64_t, uint64_t, id, id))(v1 + 16))(v1, v3, v5, v4);

  }
}

void sub_10049B8C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049B8F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049B924(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049B954(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049B984(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049B9B4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049BEE4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049BF14(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049C518(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049C548(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049D1C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049D1F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049D224(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
  {
    v8 = *(void **)(a1 + 32);
    v9 = v5;
LABEL_5:
    objc_msgSend(v8, "addObject:", v9);
    goto LABEL_6;
  }
  if (v6)
  {
    v8 = *(void **)(a1 + 40);
    v9 = v7;
    goto LABEL_5;
  }
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101261EF8);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E3AA00();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101261F18);
  v10 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100DE7468(v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLPasteboardItemSource loadImportedImagesForAssetOwner:compatibilityAlertPresenter:withHandler:]_block_invoke"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLPasteboardItemSource.m"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v11, v12, 245, 0, "invalid nil value for '%{public}s'", "imageFillError");

LABEL_6:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));

}

void sub_10049D3C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049D3F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049D424(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049D454(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_10049D484(_QWORD *a1)
{
  uint64_t result;

  result = a1[6];
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, a1[4], a1[5]);
  return result;
}

void sub_10049D588(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10049D5E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10049D654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_10049D930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  void *v9;

  sub_100171FA4(&a9);
  _Unwind_Resume(a1);
}

void sub_10049D9BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049D9EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049DCA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_10049DCF8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049DD28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049DF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, objc_super a11)
{
  void *v11;

  a11.super_class = (Class)CRLWPStorageSpellChecker;
  -[_Unwind_Exception dealloc](&a11, "dealloc");
  _Unwind_Resume(a1);
}

void sub_10049DF7C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049DFAC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049E880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,void *a36)
{
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;

  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_10049E9F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049EA24(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_10049EA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*(id *)(a1 + 32), "p_extendRangeToBeChecked:delta:", a2, a3, 0);
  return objc_msgSend(*(id *)(a1 + 40), "addRange:", v4, v5);
}

id sub_10049EA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "i_addSpellingAndGrammarMarksInRange:spellingResults:grammarResults:sync:", a2, a3, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 64));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_10049EAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(*(id *)(a1 + 32), "p_extendRangeToBeChecked:delta:", a2, a3, 0);
  return objc_msgSend(*(id *)(a1 + 40), "addRange:", v4, v5);
}

id sub_10049EB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(a1 + 32), "i_addSpellingAndGrammarMarksInRange:spellingResults:grammarResults:sync:", a2, a3, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
}

void sub_10049EB28(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049EB58(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049EC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

uint64_t sub_10049EC70(uint64_t a1)
{
  uint64_t v2;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "isEqual:", *(_QWORD *)(a1 + 40)) ^ 1;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 24), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 32), *(id *)(a1 + 48));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "clear");
  return v2;
}

void sub_10049EE9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10049EEC4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049EEF4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049EFBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10049F0F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10049F1C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10049F4A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_10049F51C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049F54C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049F85C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_10049F8BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049F8EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_10049FF6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1004A0044(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A0074(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A00A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A00D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A0104(id a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB968);
  v2 = (void *)qword_101415AC0;
  qword_101415AC0 = (uint64_t)v1;

  v3 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB980);
  v4 = (void *)qword_101415AC8;
  qword_101415AC8 = (uint64_t)v3;

  v5 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB998);
  v6 = (void *)qword_101415AD0;
  qword_101415AD0 = (uint64_t)v5;

  v7 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB9B0);
  v8 = (void *)qword_101415AD8;
  qword_101415AD8 = (uint64_t)v7;

  v9 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB9C8);
  v10 = (void *)qword_101415AE0;
  qword_101415AE0 = (uint64_t)v9;

  v11 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB9E0);
  v12 = (void *)qword_101415AE8;
  qword_101415AE8 = (uint64_t)v11;

  v13 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CB9F8);
  v14 = (void *)qword_101415AF0;
  qword_101415AF0 = (uint64_t)v13;

  v15 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CBA10);
  v16 = (void *)qword_101415AF8;
  qword_101415AF8 = (uint64_t)v15;

  v17 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CBA28);
  v18 = (void *)qword_101415B00;
  qword_101415B00 = (uint64_t)v17;

  v19 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CBA40);
  v20 = (void *)qword_101415B08;
  qword_101415B08 = (uint64_t)v19;

}

void sub_1004A0284(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CBA58);
  v2 = (void *)qword_101415B18;
  qword_101415B18 = (uint64_t)v1;

}

void sub_1004A02B8(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSSet), "initWithArray:", &off_1012CBA70);
  v2 = (void *)qword_101415B28;
  qword_101415B28 = (uint64_t)v1;

}

void sub_1004A08F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{

  _Unwind_Resume(a1);
}

void sub_1004A0A34(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A0A64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A0B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1004A1420(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  double v45;
  void *v46;
  void *v47;
  double v48;
  double v49;
  CGFloat v50;
  CGFloat v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  void *v72;
  CGContext *v73;
  CGImage *v74;
  id v75;
  CGRect v76;

  objc_msgSend(*(id *)(a1 + 32), "naturalBounds");
  v3 = v2;
  v5 = v4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
  objc_msgSend(v6, "convertUnscaledToBoundsSize:", v3, v5);
  v8 = v7;
  v10 = v9;

  objc_msgSend(*(id *)(a1 + 32), "p_playButtonAndMinPaddingHeight:", *(unsigned __int8 *)(a1 + 80));
  v12 = v11;
  v13 = *(double *)(a1 + 40);
  v14 = *(double *)(a1 + 48);
  v15 = v10 - v11;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
  objc_msgSend(v16, "convertBoundsToUnscaledRect:", v13, v14, v8, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  objc_msgSend(*(id *)(a1 + 32), "ifFitsDrawTitleWithContext:rect:", *(_QWORD *)(a1 + 72), v18, v20, v22, v24);
  v26 = v25;
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
  objc_msgSend(v27, "convertUnscaledToBoundsLength:", v26);
  v29 = v28;

  if (v26 > 0.0)
  {
    v30 = v10 - (v12 + v29);
    v31 = *(double *)(a1 + 40);
    v32 = *(double *)(a1 + 48);
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
    objc_msgSend(v33, "convertBoundsToUnscaledRect:", v31, v32, v8, v30);
    v35 = v34;
    v37 = v36;
    v39 = v38;
    v41 = v40;

    objc_msgSend(*(id *)(a1 + 32), "ifFitsDrawCreatorWithContext:rect:topPadding:", *(_QWORD *)(a1 + 72), v35, v37, v39, v41, v26);
    v43 = v42;
    v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
    objc_msgSend(v44, "convertUnscaledToBoundsLength:", v43);
    v29 = v45;

  }
  if (!*(_BYTE *)(a1 + 80))
  {
    v46 = (void *)objc_claimAutoreleasedReturnValue(+[CRLImage imageWithSystemImageNamed:pointSize:](CRLImage, "imageWithSystemImageNamed:pointSize:", CFSTR("waveform.path"), 48.0));
    v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "canvas"));
    objc_msgSend(v47, "convertBoundsToUnscaledLength:", v29);
    v49 = v48;

    v50 = *(double *)(a1 + 40);
    v51 = *(double *)(a1 + 48);
    v52 = *(double *)(a1 + 56);
    v53 = *(double *)(a1 + 64) - v49;
    objc_msgSend(v46, "size");
    v55 = v54;
    v57 = v56;
    objc_msgSend(*(id *)(a1 + 32), "p_playButtonSize");
    if (v53 >= v58)
      v59 = v58;
    else
      v59 = v53;
    v60 = sub_100062E78(0, v55, v57, v52, v59 + -2.0);
    v62 = v61;
    v63 = sub_100061400(v50, v51, v52, v53);
    v65 = sub_10005FD98(v63, v64, v60);
    v67 = v66;
    v69 = v68;
    v71 = v70;
    v72 = (void *)objc_claimAutoreleasedReturnValue(+[CRLMovieRep CRLMovieButtonFillColor](CRLMovieRep, "CRLMovieButtonFillColor"));
    v75 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "compositedImageWithColor:alpha:blendMode:", v72, 23, 1.0));

    CGContextTranslateCTM(*(CGContextRef *)(a1 + 72), 0.0, *(CGFloat *)(a1 + 64));
    CGContextScaleCTM(*(CGContextRef *)(a1 + 72), 1.0, -1.0);
    v73 = *(CGContext **)(a1 + 72);
    v74 = (CGImage *)objc_msgSend(v75, "CGImageForSize:inContext:orContentsScaleProvider:", v73, 0, v60, v62);
    v76.origin.x = v65;
    v76.origin.y = v67;
    v76.size.width = v69;
    v76.size.height = v71;
    CGContextDrawImage(v73, v76, v74);
    CGContextScaleCTM(*(CGContextRef *)(a1 + 72), 1.0, -1.0);
    CGContextTranslateCTM(*(CGContextRef *)(a1 + 72), 0.0, -*(double *)(a1 + 64));

  }
}

id sub_1004A19D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_teardownPlayerController");
}

void sub_1004A19DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A1A0C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1004A203C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_teardownPlayerController");
}

void sub_1004A2BE4(uint64_t a1)
{
  _QWORD block[5];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1004A2C40;
  block[3] = &unk_10122D110;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1004A2C40(uint64_t a1)
{
  id v2;

  if ((objc_msgSend(*(id *)(a1 + 32), "hasBeenRemoved") & 1) == 0)
  {
    if (objc_msgSend(*(id *)(a1 + 32), "isSelected"))
    {
      if (objc_msgSend(*(id *)(a1 + 32), "p_shouldPlayerControllerExistThroughoutSelection"))
        objc_msgSend(*(id *)(a1 + 32), "p_setUpPlayerControllerIfNecessary");
    }
    v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
    objc_msgSend(v2, "invalidateContentLayersForRep:", *(_QWORD *)(a1 + 32));

  }
}

void sub_1004A2CBC(uint64_t a1)
{
  __CFRunLoop *Main;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD block[4];
  id v7;
  uint64_t v8;
  id v9;

  Main = CFRunLoopGetMain();
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1004A2D68;
  block[3] = &unk_101234DA0;
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v7 = v3;
  v8 = v4;
  v9 = v5;
  CFRunLoopPerformBlock(Main, kCFRunLoopCommonModes, block);
  CFRunLoopWakeUp(Main);

}

uint64_t sub_1004A2D68(uint64_t a1)
{
  id v2;
  unsigned __int8 v3;
  uint64_t v4;
  void *v5;

  v2 = objc_msgSend(*(id *)(a1 + 32), "statusOfValueForKey:error:", CFSTR("playable"), 0);
  if (v2 != (id)4)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 40) + 240) = 1;
    if (v2 == (id)2)
      v3 = objc_msgSend(*(id *)(a1 + 32), "isPlayable");
    else
      v3 = 0;
    *(_BYTE *)(*(_QWORD *)(a1 + 40) + 241) = v3;
  }
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(v4 + 248);
  if (v5 == *(void **)(a1 + 32))
  {
    *(_QWORD *)(v4 + 248) = 0;

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_1004A405C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A408C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A40BC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A40EC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A411C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A414C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A417C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A41AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A41DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1004A420C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1004A4578(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A45A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A45D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLMoviePlaybackCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013DB560;
  off_1013DB560 = v2;

}

void sub_1004A4708(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "interactiveCanvasController"));
  objc_msgSend(v2, "presentError:completionHandler:", *(_QWORD *)(a1 + 40), 0);

}

void sub_1004A4A20(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A4A50(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A4A80(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  void *v9;
  id v10;
  id v11;
  id from;
  id location;

  v3 = a2;
  v4 = v3;
  if (v3 && objc_msgSend(v3, "needsDownload"))
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    objc_initWeak(&from, v4);
    v5 = *(_QWORD *)(a1 + 40);
    v6 = _NSConcreteStackBlock;
    v7 = 3221225472;
    v8 = sub_1004A4BB0;
    v9 = &unk_101235030;
    objc_copyWeak(&v10, &location);
    objc_copyWeak(&v11, &from);
    objc_msgSend(v4, "addDownloadObserverWithIdentifier:options:handler:", v5, 2, &v6);
    objc_msgSend(v4, "downloadIfNeeded", v6, v7, v8, v9);
    objc_msgSend(*(id *)(a1 + 32), "p_updateDownloadSpinnerState");
    objc_destroyWeak(&v11);
    objc_destroyWeak(&v10);
    objc_destroyWeak(&from);
    objc_destroyWeak(&location);
  }

}

void sub_1004A4B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1004A4BB0(uint64_t a1)
{
  id v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "p_handleAssetPreparationCompletionForAsset:", v2);

}

BOOL sub_1004A5D28(id a1, CRLCanvasElementInfo *a2, BOOL *a3)
{
  CRLCanvasElementInfo *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;

  v3 = a2;
  objc_opt_class(_TtC8Freeform12CRLBoardItem, v4);
  v6 = sub_100221D0C(v5, v3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  return v7 != 0;
}

void sub_1004A6630(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A6660(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004A7174(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A71A4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A71D4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7204(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7234(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7264(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7294(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A72C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A72F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7324(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7354(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "p_timebaseTimeDidChangeToStartOrEndTime");

}

void sub_1004A7380(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A73B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A76C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A76F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7724(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7754(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A79FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7A2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7D10(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A7D40(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A83C4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A83F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

uint64_t sub_1004A8424(uint64_t a1)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "p_setAbsoluteCurrentTime:", *(double *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "p_updateLayers");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_1004A8660(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A8690(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A8EBC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A8EEC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A966C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A969C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A96CC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A96FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A99FC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A9A2C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A9A5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A9A8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A9FC0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004A9FF0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA020(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA050(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA080(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA0B0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004AA358(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA388(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA3B8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "p_displayLinkDidTrigger");

}

void sub_1004AA554(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA584(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA708(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA738(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA97C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AA9AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AAA9C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x28u);
}

void sub_1004AAD64(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AAD94(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AB04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1004AB068(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  if (a2 == 4)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_1004AB1F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AB228(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AB3C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AB3F8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AB5AC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AB5DC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AC0F4(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AC124(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AC154(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AC184(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

BOOL sub_1004AC1B4(id a1, CRLCanvasElementInfo *a2)
{
  CRLCanvasElementInfo *v2;
  uint64_t v3;
  uint64_t v4;
  char isKindOfClass;

  v2 = a2;
  v4 = objc_opt_class(_TtC8Freeform12CRLBoardItem, v3);
  isKindOfClass = objc_opt_isKindOfClass(v2, v4);

  return isKindOfClass & 1;
}

void sub_1004ACF78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ACFA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AD6D8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  __int128 v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned int v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint8_t buf[4];
  unsigned int v26;
  __int16 v27;
  const char *v28;
  __int16 v29;
  const char *v30;
  __int16 v31;
  int v32;
  _BYTE v33[128];

  v3 = a2;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v33, 16);
  if (v5)
  {
    v7 = v5;
    v8 = *(_QWORD *)v22;
    *(_QWORD *)&v6 = 67109378;
    v20 = v6;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v22 != v8)
          objc_enumerationMutation(v4);
        v10 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)v9);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "layoutForInfo:", v10, v20));
        v12 = v11;
        if (v11)
        {
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "geometry"));
          objc_msgSend(v13, "frame");
          v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:"));
          objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v14, v10);
        }
        else
        {
          v15 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101262E78);
          v16 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67109890;
            v26 = v15;
            v27 = 2082;
            v28 = "-[CRLDrawableZOrderArranger p_zOrderSiblingsForRelativeOrder]_block_invoke";
            v29 = 2082;
            v30 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLDrawableZOrderArranger.m";
            v31 = 1024;
            v32 = 477;
            _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Should always be able to get a layout with temporaryLayoutControllerForInfos.", buf, 0x22u);
          }
          if (qword_10147E370 != -1)
            dispatch_once(&qword_10147E370, &stru_101262E98);
          v17 = off_1013D9070;
          if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
          {
            v18 = v17;
            v19 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
            *(_DWORD *)buf = v20;
            v26 = v15;
            v27 = 2114;
            v28 = v19;
            _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

          }
          v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[CRLDrawableZOrderArranger p_zOrderSiblingsForRelativeOrder]_block_invoke"));
          v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLDrawableZOrderArranger.m"));
          +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 477, 0, "Should always be able to get a layout with temporaryLayoutControllerForInfos.");
        }

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v21, v33, 16);
    }
    while (v7);
  }

}

void sub_1004ADA18(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ADA48(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ADA78(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ADAA8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ADCCC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ADCFC(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ADF5C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004ADF8C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AE398(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AE3C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AEA30(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AEA60(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AEC38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004AEC68(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

id sub_1004B0270(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  char v11;

  v11 = 0;
  v2 = *(id *)(a1 + 32);
  objc_opt_class(CRLCanvasLayoutAccessibility, v3);
  v5 = __CRLAccessibilityCastAsSafeCategory(v4, (uint64_t)v2, 1, &v11);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (v11)
    abort();
  v7 = (void *)v6;

  if (v7)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "crlaxInteractiveCanvasController"));
    v9 = objc_msgSend(v8, "crlaxScrollLayoutToVisibleAndFocusTheAssociatedRep:", v7);

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

uint64_t sub_1004B03C0(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  id v8;
  id v9;
  void *v10;

  v8 = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)a1 = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  objc_storeStrong((id *)a1, a2);
  *(_QWORD *)(a1 + 8) = a3;
  v9 = objc_msgSend(v8, "length");
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v9;
  sub_1004B04B4(a1);
  v10 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = 0;

  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 74) = a4;

  return a1;
}

void sub_1004B046C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  uint64_t v3;
  void *v5;
  va_list va;

  va_start(va, a2);
  sub_1004B2130((void ***)va);
  sub_1004B20C0((void ***)va);

  v5 = *(void **)(v3 + 32);
  if (v5)
  {
    *(_QWORD *)(v3 + 40) = v5;
    operator delete(v5);
  }

  _Unwind_Resume(a1);
}

void sub_1004B04B4(uint64_t a1)
{
  unint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = (_QWORD *)(a1 + 32);
  sub_1004B1C68(a1 + 32, v2);
  if (v2)
  {
    objc_msgSend(*(id *)a1, "getCharacters:range:", *(_QWORD *)(a1 + 32), 0, v2);
    v4 = v2 - 1;
    v5 = *(_QWORD *)(a1 + 32);
    if (v4 >= (*(_QWORD *)(a1 + 40) - v5) >> 1)
      v6 = 0;
    else
      v6 = *(unsigned __int16 *)(v5 + 2 * v4);
    if (sub_1001AE2A0(v6))
      v7 = v6;
    else
      v7 = 0;
    *(_WORD *)(a1 + 72) = v7;
    if (objc_msgSend(*(id *)a1, "hasColumnBreakAtCharIndex:", v4))
      *(_WORD *)(*v3 + 2 * v4) = 8233;
  }
  else
  {
    *(_WORD *)(a1 + 72) = 0;
  }
}

uint64_t sub_1004B0560(uint64_t a1)
{
  const void *v2;
  void *v3;
  void **v5;

  v2 = *(const void **)(a1 + 64);
  if (v2)
  {
    CFRelease(v2);
    *(_QWORD *)(a1 + 64) = 0;
  }
  v5 = (void **)(a1 + 104);
  sub_1004B2130(&v5);
  v5 = (void **)(a1 + 80);
  sub_1004B20C0(&v5);

  v3 = *(void **)(a1 + 32);
  if (v3)
  {
    *(_QWORD *)(a1 + 40) = v3;
    operator delete(v3);
  }

  return a1;
}

void sub_1004B05E0(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  const UniChar *v5;
  uint64_t v6;
  CFStringRef v7;
  id v8;
  void *v9;
  id v10;
  void *v11;

  if (!a1[7])
    goto LABEL_11;
  +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101263060);
  if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
    sub_100E3C850();
  if (qword_10147E370 != -1)
    dispatch_once(&qword_10147E370, &stru_101263080);
  v2 = off_1013D9070;
  if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_ERROR))
  {
    objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
    sub_100DE7E60();
  }

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPParagraphTypesetter::createAttributedString()"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphTypesetter.mm"));
  +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 78, 0, "expected nil value for '%{public}s'", "_attributedString");

  if (!a1[7])
  {
LABEL_11:
    v5 = (const UniChar *)a1[4];
    v6 = a1[5] - (_QWORD)v5;
    if (v6 < 1)
    {
      v10 = objc_alloc_init((Class)NSMutableAttributedString);
      v11 = (void *)a1[7];
      a1[7] = v10;

    }
    else
    {
      v7 = CFStringCreateWithCharactersNoCopy(kCFAllocatorDefault, v5, (unint64_t)v6 >> 1, kCFAllocatorNull);
      v8 = objc_msgSend(objc_alloc((Class)NSMutableAttributedString), "initWithString:", v7);
      v9 = (void *)a1[7];
      a1[7] = v8;

      CFRelease(v7);
    }
  }
}

void sub_1004B07F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004B081C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B084C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B087C(uint64_t a1)
{
  const __CFDictionary *v2;
  CFStringRef v3;
  void *v4;

  sub_1004B0938(a1);
  v3 = kCTTypesetterOptionAllowUnboundedLayout;
  v4 = &__kCFBooleanTrue;
  v2 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v4, &v3, 1));
  *(_QWORD *)(a1 + 64) = CTTypesetterCreateWithAttributedStringAndOptions(*(CFAttributedStringRef *)(a1 + 56), v2);

}

void sub_1004B0920(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t sub_1004B0938(uint64_t result)
{
  if (*(_QWORD *)(result + 88) != *(_QWORD *)(result + 80))
    sub_1004B1C98();
  return result;
}

uint64_t sub_1004B09D4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  unint64_t v7;
  id v8;
  __int128 *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  double v24;
  double v25;
  double v27;
  id v30;
  double v31;
  double v32;

  v3 = *(_QWORD *)(a1 + 88) - *(_QWORD *)(a1 + 80);
  if (!v3)
    return 0;
  v7 = v3 / 72;
  v8 = *(id *)a1;
  if (*(uint64_t *)(a2 + 24) < 0)
    v9 = &xmmword_100EEE418;
  else
    v9 = (__int128 *)a2;
  v30 = objc_msgSend(v8, "charRangeMappedFromStorage:", *(_QWORD *)v9, *((_QWORD *)v9 + 1));
  v11 = v10;
  v12 = 0;
  v13 = 0;
  if (v7 <= 1)
    v14 = 1;
  else
    v14 = v7;
  do
  {
    v15 = *(_QWORD *)(a1 + 80);
    v16 = v15 + v12;
    if (!*(_BYTE *)(v15 + v12 + 64))
    {
      v18 = *(_QWORD *)(v16 + 8);
      v17 = *(_QWORD *)(v16 + 16);
      v19 = sub_1004B0B8C(a2, v18);
      v21 = sub_1004B0B8C(a2, v17 + v18) - v19;
      if (v21 <= 0.0)
        goto LABEL_22;
      v22 = *(double *)(v15 + v12 + 32);
      if (v21 >= v22)
        v22 = v21;
      if (v22 <= a3)
      {
LABEL_22:
        if (!*(_BYTE *)(v16 + 64) && v18 >= (unint64_t)v30 && v18 - (unint64_t)v30 < v11)
        {
          v24 = *(double *)(v15 + v12 + 32);
          v25 = v24 + 1.0;
          if (v21 + 1.0 < v24 && v25 >= v21)
          {
            v31 = 0.0;
            v32 = 0.0;
            sub_1004B0C10((id *)a1, v20, v15 + v12, &v32, &v31);
            v27 = v21 + v32 + v31;
            if (v25 >= v27 && v27 + 1.0 < v24)
            {
              *(double *)(v15 + v12 + 56) = v24 - v27;
              v13 = 1;
            }
          }
        }
      }
      else
      {
        v13 = 1;
        *(_BYTE *)(v16 + 64) = 1;
      }
    }
    v12 += 72;
    --v14;
  }
  while (v14);
  return v13 & 1;
}

double sub_1004B0B8C(uint64_t a1, unint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  const __CTLine *v7;
  CFRange StringRange;
  double v10;
  const __CTLine *v11;

  v3 = (uint64_t *)sub_10013E674(a1);
  v4 = *v3;
  v5 = v3[1];
  v6 = 0.0;
  while (v4 != v5)
  {
    v7 = (const __CTLine *)sub_10019FA78(v4);
    StringRange = CTLineGetStringRange(v7);
    if (StringRange.location <= a2 && StringRange.location + StringRange.length >= a2)
    {
      v10 = *(double *)(v4 + 8);
      v11 = (const __CTLine *)sub_10019FA78(v4);
      return v10 + CTLineGetOffsetForStringIndex(v11, a2, 0);
    }
    v4 += 104;
  }
  return v6;
}

void sub_1004B0C10(id *a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  const __CTLine *v12;
  id v13;

  *a5 = 0;
  *a4 = 0;
  v9 = *(id *)a3;
  v10 = *(_QWORD *)(a3 + 8);
  v11 = *(_QWORD *)(a3 + 16);
  v13 = v9;
  if (objc_msgSend(v9, "baseTextScript") == 6)
  {
    v12 = *(const __CTLine **)(a3 + 24);
    if (v12)
      CTLineGetStringRange(v12);
    objc_msgSend(*a1, "charRangeMappedToStorage:", v10, v11);
    *a4 = 0;
    *a5 = 0;
  }

}

void sub_1004B0C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

double sub_1004B0CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  void *i;
  void *v11;
  double v12;
  __int128 *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  void *v25;
  _BOOL4 v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  unint64_t GlyphCount;
  double v33;
  NSObject *v35;
  const __CTLine *line;
  unint64_t v38;
  unint64_t v39;
  CGAffineTransform v41;
  uint8_t buf[8];
  double v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[128];

  v3 = *(_QWORD *)(a1 + 80);
  v2 = *(_QWORD *)(a1 + 88);
  v4 = v2 - v3;
  if (v2 != v3)
  {
    v46 = 0u;
    v47 = 0u;
    v44 = 0u;
    v45 = 0u;
    v5 = sub_10013E770(a2);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v44, v48, 16);
    if (v7)
    {
      v8 = *(_QWORD *)v45;
      v9 = 0.0;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v45 != v8)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v11, "adornmentLocation") == 1)
          {
            objc_msgSend(v11, "underlineAdjustment");
            if (v9 < v12)
              v9 = v12;
          }
        }
        v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v44, v48, 16);
      }
      while (v7);
    }

    if (*(uint64_t *)(a2 + 24) < 0)
      v14 = &xmmword_100EEE418;
    else
      v14 = (__int128 *)a2;
    v15 = objc_msgSend(*(id *)a1, "charRangeMappedFromStorage:", *(_QWORD *)v14, *((_QWORD *)v14 + 1));
    v38 = v16;
    v39 = (unint64_t)v15;
    v17 = 0;
    v18 = 0;
    v19 = 0x8E38E38E38E38E39 * (v4 >> 3);
    do
    {
      v20 = *(_QWORD *)(a1 + 80);
      v21 = v20 + 72 * v17;
      v22 = *(_QWORD *)(v21 + 8);
      if (v22 >= v39 && v22 - v39 < v38)
      {
        v24 = *(_QWORD *)(v21 + 16);
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)v21, "rubyText"));
        if (objc_msgSend(v25, "length"))
        {
          v26 = *(_BYTE *)(v20 + 72 * v17 + 64) == 0;

          if (v26)
          {
            v27 = v20 + 72 * v17;
            line = *(const __CTLine **)(v27 + 24);
            if (line)
            {
              v28 = *(double *)(v27 + 32);
              if (v28 > 0.0)
              {
                v29 = sub_1004B0B8C(a2, v22);
                v31 = sub_1004B0B8C(a2, v24 + v22) - v29;
                if (v28 + 1.0 < v31)
                {
                  GlyphCount = CTLineGetGlyphCount(line);
                  if (GlyphCount < 2
                    || !CTLineCreateJustifiedLine(line, 1.0, v31 + (v31 - v28) / (double)GlyphCount * 0.5 * -2.0))
                  {
                    CFRetain(line);
                  }
                  operator new();
                }
                if (v31 + 1.0 < v28)
                {
                  v41.a = 0.0;
                  v43 = 0.0;
                  sub_1004B0C10((id *)a1, v30, v20 + 72 * v17, &v41, &v43);
                  v33 = v31 + v41.a + v43;
                  if (v28 + 1.0 >= v33 && v33 + 1.0 < v28)
                  {
                    if (qword_10147E380 != -1)
                      dispatch_once(&qword_10147E380, &stru_1012630A0);
                    v35 = off_1013D9080;
                    if (os_log_type_enabled((os_log_t)off_1013D9080, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_WORD *)buf = 0;
                      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "could not properly position ruby text. fall back to centering over base text.", buf, 2u);
                    }
                  }
                }
                operator new();
              }
            }
            *(_QWORD *)(a2 + 24) |= 0x400uLL;
          }
        }
        else
        {

        }
      }
      v17 = ++v18;
    }
    while (v19 > v18);
  }
  return 0.0;
}

void sub_1004B129C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004B1318(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLWarningCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9080;
  off_1013D9080 = v2;

}

_QWORD *sub_1004B1348(_QWORD *result, uint64_t *a2)
{
  _QWORD *v3;
  void *v4;
  __int128 *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  char *v12;
  unint64_t v13;
  char *v14;
  double v15;
  CGAffineTransform v16;
  _BYTE v17[24];
  __int128 v18;
  CFIndex location;
  CGAffineTransform v20;

  if (result[13] != result[14])
  {
    v3 = result;
    v4 = (void *)*result;
    if (a2[3] < 0)
      v5 = &xmmword_100EEE418;
    else
      v5 = (__int128 *)a2;
    result = objc_msgSend(v4, "charRangeMappedFromStorage:", *(_QWORD *)v5, *((_QWORD *)v5 + 1));
    v8 = (char *)v3[13];
    v7 = (char *)v3[14];
    if (v7 != v8)
    {
      v9 = (v7 - v8) >> 6;
      do
      {
        v10 = v9 >> 1;
        v11 = (unint64_t *)&v8[64 * (v9 >> 1)];
        v13 = *v11;
        v12 = (char *)(v11 + 8);
        v9 += ~(v9 >> 1);
        if (v13 < result)
          v8 = v12;
        else
          v9 = v10;
      }
      while (v9);
    }
    if (v8 != v7)
    {
      v14 = (char *)result + v6;
      do
      {
        if (*(_QWORD *)v8 >= (unint64_t)v14)
          break;
        v15 = sub_1004B0B8C((uint64_t)a2, *(_QWORD *)v8);
        sub_10019F910((uint64_t)v17, *((CFTypeRef *)v8 + 2), 0x7FFFFFFFFFFFFFFFLL, 0, 0, v15 + *((double *)v8 + 4), *((double *)v8 + 3) * 0.5);
        CGAffineTransformMakeScale(&v16, *((CGFloat *)v8 + 7), 1.0);
        v20 = v16;
        v18 = *(_OWORD *)v8;
        location = CTLineGetStringRange((CTLineRef)*((_QWORD *)v8 + 2)).location;
        sub_10013E700(a2, (uint64_t)v17);
        result = (_QWORD *)sub_10019FA00(v17);
        v8 += 64;
      }
      while (v8 != v7);
    }
  }
  return result;
}

void sub_1004B1494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_10019FA00(va);
  _Unwind_Resume(a1);
}

char *sub_1004B14AC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  char *v7;
  unint64_t v8;
  char *v9;
  char *v10;

  v3 = *(char **)(a1 + 104);
  v2 = *(char **)(a1 + 112);
  if (v3 == v2)
    return 0;
  v4 = (v2 - v3) >> 6;
  do
  {
    v5 = v4 >> 1;
    v6 = (unint64_t *)&v3[64 * (v4 >> 1)];
    v8 = *v6;
    v7 = (char *)(v6 + 8);
    v4 += ~(v4 >> 1);
    if (v8 < a2)
      v3 = v7;
    else
      v4 = v5;
  }
  while (v4);
  if (v3 == v2 || *(_QWORD *)v3 != a2)
    return 0;
  v9 = v3 + 64;
  do
  {
    v10 = v9;
    if (v9 == v2)
      break;
    v9 += 64;
  }
  while (*(_QWORD *)v10 == a2);
  return v10 - 64;
}

BOOL sub_1004B1530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BYTE *i;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88) - v2;
  if (!v3)
    return 0;
  v4 = v3 / 72;
  if (v4 <= 1)
    v4 = 1;
  for (i = (_BYTE *)(v2 + 64); *((_QWORD *)i - 8) != a2; i += 72)
  {
    if (!--v4)
      return 0;
  }
  return *i != 0;
}

uint64_t sub_1004B1594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  _BYTE *v7;

  v3 = *(_QWORD *)(a1 + 80);
  v2 = *(_QWORD *)(a1 + 88);
  v4 = v2 - v3;
  if (v2 == v3)
  {
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = v4 / 72;
    if (v6 <= 1)
      v6 = 1;
    v7 = (_BYTE *)(v3 + 64);
    do
    {
      if (*((_QWORD *)v7 - 8) == a2)
      {
        v5 = 1;
        *v7 = 1;
      }
      v7 += 72;
      --v6;
    }
    while (v6);
  }
  return v5 & 1;
}

uint64_t sub_1004B15FC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BYTE *v5;

  v2 = *(_QWORD *)(result + 80);
  v3 = *(_QWORD *)(result + 88) - v2;
  if (v3)
  {
    v4 = v3 / 72;
    if (v4 <= 1)
      v4 = 1;
    v5 = (_BYTE *)(v2 + 64);
    do
    {
      if (*((_QWORD *)v5 - 8) == a2)
        *v5 = 0;
      v5 += 72;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_1004B1650(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double *v5;
  unint64_t v6;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88) - v2;
  if (v3)
  {
    v4 = v3 / 72;
    if (v4 <= 1)
      v4 = 1;
    v5 = (double *)(v2 + 56);
    do
    {
      v6 = *((_QWORD *)v5 - 5) + *((_QWORD *)v5 - 6);
      if (v6 <= a2)
        break;
      if (v6 - 1 == a2 && *v5 == 0.0)
        return 1;
      v5 += 9;
      --v4;
    }
    while (v4);
  }
  return 0;
}

uint64_t sub_1004B16C8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 64);
}

id sub_1004B16D0(uint64_t a1)
{
  return *(id *)(a1 + 56);
}

id sub_1004B16D8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  if (*(_QWORD *)(a1 + 64))
  {
    +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012630C0);
    if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      sub_100E3C8F0();
    if (qword_10147E370 != -1)
      dispatch_once(&qword_10147E370, &stru_1012630E0);
    v2 = off_1013D9070;
    if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_ERROR))
    {
      objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
      sub_100DE7E60();
    }

    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "NSMutableAttributedString *CRLWPParagraphTypesetter::mutableAttributedString() const"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphTypesetter.mm"));
    +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 382, 0, "expected nil value for '%{public}s'", "_ctTypesetter");

  }
  return *(id *)(a1 + 56);
}

void sub_1004B1870(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1004B1898(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B18C8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B18F8(uint64_t a1, void *a2)
{
  unint64_t *v4;
  unint64_t *i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  _WORD *v15;
  _BYTE *v16;
  _BYTE *v17;
  char *v18;
  id v19;
  uint8_t buf[4];
  unsigned int v21;
  __int16 v22;
  const char *v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  int v27;

  v19 = a2;
  objc_storeStrong((id *)a1, a2);
  sub_1004B04B4(a1);
  v4 = *(unint64_t **)(a1 + 104);
  for (i = *(unint64_t **)(a1 + 112); v4 != i; v4 += 8)
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = (*(_QWORD *)(a1 + 40) - v6) >> 1;
    v8 = v4[1] + *v4;
    if (*v4 >= v7 || v8 > v7)
    {
      v10 = +[CRLAssertionHandler _atomicIncrementAssertCount](CRLAssertionHandler, "_atomicIncrementAssertCount");
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101263100);
      v11 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)off_1013D9070, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 67109890;
        v21 = v10;
        v22 = 2082;
        v23 = "void CRLWPParagraphTypesetter::updateSource(__strong id<CRLWPTextSource>)";
        v24 = 2082;
        v25 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphTypesetter.mm";
        v26 = 1024;
        v27 = 394;
        _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Tate-chu-yoko run's range is not within the text buffer.", buf, 0x22u);
      }
      if (qword_10147E370 != -1)
        dispatch_once(&qword_10147E370, &stru_101263120);
      v12 = off_1013D9070;
      if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
      {
        v18 = (char *)objc_claimAutoreleasedReturnValue(+[CRLAssertionHandler packedBacktraceString](CRLAssertionHandler, "packedBacktraceString"));
        *(_DWORD *)buf = 67109378;
        v21 = v10;
        v22 = 2114;
        v23 = v18;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v12, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: Assertion backtrace: >>%{public}@<<", buf, 0x12u);

      }
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void CRLWPParagraphTypesetter::updateSource(__strong id<CRLWPTextSource>)"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphTypesetter.mm"));
      +[CRLAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](CRLAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v13, v14, 394, 0, "Tate-chu-yoko run's range is not within the text buffer.");

    }
    else
    {
      v15 = (_WORD *)(v6 + 2 * *v4);
      *v15 = -4;
      v16 = v15 + 1;
      v17 = (_BYTE *)(v6 + 2 * v8);
      if (v16 != v17)
        memset_pattern16(v16, "\v \v \v \v \v \v \v \v ", (v17 - v16) & 0xFFFFFFFFFFFFFFFELL);
    }
  }

}

void sub_1004B1BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_1004B1C08(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B1C38(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B1C68(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 1;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 2 * a2;
  }
  else
  {
    sub_1004B21A0((char **)a1, a2 - v2);
  }
}

void sub_1004B1C98()
{
  operator new();
}

uint64_t sub_1004B1D3C(uint64_t result)
{
  if (result)
    operator delete();
  return result;
}

double sub_1004B1D58(uint64_t a1)
{
  double result;
  uint64_t v2;

  result = 0.0;
  if (a1)
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      if (!*(_BYTE *)(v2 + 64))
        return *(double *)(v2 + 56) * 0.5;
    }
  }
  return result;
}

void sub_1004B1D84(const __CFAttributedString *a1, NSUInteger a2, NSUInteger a3)
{
  unint64_t v3;
  const __CTFont *Attribute;
  CFIndex location;
  CFIndex length;
  NSRange v7;
  unsigned __int8 v8;
  NSUInteger v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  const __CFDictionary *v14;
  const __CTFontDescriptor *v15;
  CGFloat Size;
  CTFontRef CopyWithAttributes;
  CFStringRef v18;
  CFStringRef v19;
  CFStringRef v20;
  void *v21;
  CFRange effectiveRange;
  _QWORD v26[2];
  _QWORD v27[2];
  void *v28;
  CFStringRef v29;
  void *v30;
  NSRange v31;

  v21 = (void *)objc_claimAutoreleasedReturnValue(+[CRLWPFontMetricsCache sharedCache](CRLWPFontMetricsCache, "sharedCache"));
  if (a2 < a2 + a3)
  {
    v19 = kCTFontFeatureTypeIdentifierKey;
    v20 = kCTFontFeatureSettingsAttribute;
    v18 = kCTFontFeatureSelectorIdentifierKey;
    v3 = a2;
    do
    {
      Attribute = (const __CTFont *)CFAttributedStringGetAttribute(a1, v3, kCTFontAttributeName, &effectiveRange);
      location = effectiveRange.location;
      length = effectiveRange.length;
      v31.length = a3;
      v31.location = a2;
      v7 = NSIntersectionRange((NSRange)effectiveRange, v31);
      v8 = objc_msgSend(v21, "supportedFractionalWidthsForFont:", Attribute);
      v9 = 4;
      if (v7.length < 4)
        v9 = v7.length;
      if (v9 != 2)
      {
        if (v9 != 3)
        {
          if (v9 != 4)
            goto LABEL_19;
          if ((v8 & 0x10) != 0)
          {
            v10 = 4;
            goto LABEL_14;
          }
        }
        if ((v8 & 8) != 0)
        {
          v10 = 3;
          goto LABEL_14;
        }
      }
      if ((v8 & 4) != 0)
      {
        v10 = 2;
LABEL_14:
        v29 = v20;
        v26[0] = v19;
        v26[1] = v18;
        v27[0] = &off_1012CC910;
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v10, v18, v19, v20));
        v27[1] = v11;
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v27, v26, 2));
        v28 = v12;
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v28, 1));
        v30 = v13;
        v14 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v30, &v29, 1));

        v15 = CTFontDescriptorCreateWithAttributes(v14);
        if (v15)
        {
          Size = CTFontGetSize(Attribute);
          CopyWithAttributes = CTFontCreateCopyWithAttributes(Attribute, Size, 0, v15);
          if (CopyWithAttributes)
          {
            CFAttributedStringSetAttribute(a1, (CFRange)v7, kCTFontAttributeName, CopyWithAttributes);
            CFRelease(CopyWithAttributes);
          }
          CFRelease(v15);
        }

      }
LABEL_19:
      if (v3 + 1 > length + location)
        ++v3;
      else
        v3 = length + location;
    }
    while (v3 < a2 + a3);
  }

}

void sub_1004B2004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

uint64_t sub_1004B2060(uint64_t a1)
{
  const void *v2;

  v2 = *(const void **)(a1 + 24);
  if (v2)
    CFRelease(v2);
  return a1;
}

uint64_t sub_1004B2090(uint64_t a1)
{
  const void *v2;

  v2 = *(const void **)(a1 + 16);
  if (v2)
    CFRelease(v2);
  return a1;
}

void sub_1004B20C0(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_1004B2060(v4 - 72);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1004B2130(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_1004B2090(v4 - 64);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1004B21A0(char **a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int16 v18;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 1)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 2 * a2);
      v7 += 2 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = *a1;
    v9 = v7 - *a1;
    v10 = a2 + (v9 >> 1);
    if (v10 < 0)
      sub_100007810();
    v11 = v9 >> 1;
    v12 = v5 - v8;
    if (v12 > v10)
      v10 = v12;
    if (v12 >= 0x7FFFFFFFFFFFFFFELL)
      v13 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v13 = v10;
    if (v13)
    {
      v14 = (char *)sub_100134070(v4, v13);
      v8 = *a1;
      v7 = a1[1];
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[2 * v11];
    v16 = &v14[2 * v13];
    bzero(v15, 2 * a2);
    v17 = &v15[2 * a2];
    while (v7 != v8)
    {
      v18 = *((_WORD *)v7 - 1);
      v7 -= 2;
      *((_WORD *)v15 - 1) = v18;
      v15 -= 2;
    }
    *a1 = v15;
    a1[1] = v17;
    a1[2] = v16;
    if (v8)
      operator delete(v8);
  }
}

void sub_1004B240C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B243C(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B25A8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B25D8(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B2744(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B2774(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B28E0(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

void sub_1004B2910(id a1)
{
  os_log_t v1;
  void *v2;
  void *v3;

  v1 = sub_1003C0E38("CRLAssertCat");
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = off_1013D9070;
  off_1013D9070 = v2;

}

int main(int argc, const char **argv, const char **envp)
{
  int v3;
  char **v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *ObjCClassFromMetadata;
  NSString *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  NSString *v14;
  uint64_t v15;
  uint64_t v16;

  v3 = static CommandLine.argc.getter(*(_QWORD *)&argc, argv, envp);
  v4 = (char **)static CommandLine.unsafeArgv.getter();
  v5 = type metadata accessor for CRLiOSApplication();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v5, v6);
  v8 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v10 = v9;
    v8 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  v11 = type metadata accessor for CRLiOSAppDelegate();
  v13 = (objc_class *)swift_getObjCClassFromMetadata(v11, v12);
  v14 = NSStringFromClass(v13);
  if (!v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v16 = v15;
    v14 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
  }
  UIApplicationMain(v3, v4, v8, v14);

  return 0;
}

uint64_t CRLWPShapeLayout.descendersCannotClip.getter()
{
  return 0;
}

void *variable initialization expression of CRLDocumentSessionAnalyticsManager.commandControllerNotificationSubscriber()
{
  return &_swiftEmptySetSingleton;
}

id variable initialization expression of iCloudStatusFooter.iCloudStatusLabel()
{
  return objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
}

uint64_t CRLWPShapeLayout.instructionalTextCharacterFill.getter()
{
  return 0;
}

id variable initialization expression of CRLAnalyticsDataStore.userDefaults()
{
  return objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
}

uint64_t variable initialization expression of CRLAnalyticsDataStore.lastSeenUserID()
{
  return 0;
}

void variable initialization expression of CRLMiniFormatterStateManager.observedObjects()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      sub_1004B5FB0((uint64_t)_swiftEmptyArrayStorage);
  }
}

unint64_t variable initialization expression of CRLAnalyticsActiveUseManager.appForegroundedAnalyticsDomain()
{
  return 0xD000000000000010;
}

uint64_t variable initialization expression of CRLAnalyticsActiveUseManager.deviceIDAnalyticsKey()
{
  return 0x4449656369766564;
}

uint64_t variable initialization expression of CRLAnalyticsActiveUseManager.userIDAnalyticsKey()
{
  return 0x444972657375;
}

unint64_t variable initialization expression of CRLAnalyticsActiveUseManager.supportsEndToEndEncryptionKey()
{
  return 0xD00000000000001ALL;
}

unint64_t variable initialization expression of CRLAnalyticsActiveUseManager.overriddenUserIDAnalyticsKey()
{
  return 0xD000000000000010;
}

unint64_t variable initialization expression of CRLAnalyticsActiveUseManager.hadiCloudAccountAnalyticsKey()
{
  return 0xD000000000000010;
}

unint64_t variable initialization expression of CRLAnalyticsActiveUseManager.hadQuotaViolationKey()
{
  return 0xD000000000000011;
}

uint64_t sub_1004B2E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3, a1, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  __chkstk_darwin();
  v6 = (char *)&v9 - v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, a1, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 0.0);
  return dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v6, a1, v3);
}

_QWORD *sub_1004B2F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v22 - v8;
  v11 = *(_QWORD *)(v10 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v11, a1, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated type descriptor for ExpressibleByFloatLiteral.FloatLiteralType);
  __chkstk_darwin(AssociatedTypeWitness);
  v14 = (char *)&v22 - v13;
  type metadata accessor for CRLLowPassFilter(0, a1, a2, v15);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v11, a1, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByFloatLiteral, &associated conformance descriptor for ExpressibleByFloatLiteral.ExpressibleByFloatLiteral.FloatLiteralType: _ExpressibleByBuiltinFloatLiteral);
  dispatch thunk of _ExpressibleByBuiltinFloatLiteral.init(_builtinFloatLiteral:)(AssociatedTypeWitness, AssociatedConformanceWitness, 0.5);
  dispatch thunk of ExpressibleByFloatLiteral.init(floatLiteral:)(v14, a1, v11);
  sub_1004B2E88(a1, a2);
  v19 = sub_10061E0BC((uint64_t)v9, (uint64_t)v7, v17, v18);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v7, a1);
  v20(v9, a1);
  return v19;
}

uint64_t _s8Freeform16CRLOneEuroFilterC9prevValuexvpfi_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16) + 8) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v3, a1, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated type descriptor for ExpressibleByIntegerLiteral.IntegerLiteralType);
  __chkstk_darwin();
  v6 = (char *)&v9 - v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v3, a1, AssociatedTypeWitness, &protocol requirements base descriptor for ExpressibleByIntegerLiteral, &associated conformance descriptor for ExpressibleByIntegerLiteral.ExpressibleByIntegerLiteral.IntegerLiteralType: _ExpressibleByBuiltinIntegerLiteral);
  dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)(&unk_100EF05A8, 256, AssociatedTypeWitness, AssociatedConformanceWitness);
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)(v6, a1, v3);
}

double variable initialization expression of CRLWPLayout.defaultEdgeInset()
{
  return 4.0;
}

id variable initialization expression of CRLWPLayout._columns()
{
  return objc_msgSend(objc_allocWithZone((Class)NSMutableArray), "init");
}

uint64_t variable initialization expression of CRLWPLayout.layoutDetailsFactory()
{
  return type metadata accessor for CRLWPLaidOutColumnProxy();
}

unint64_t variable initialization expression of CRLiOSPencilMediator.prefersPencilOnlyDrawingKeyPath()
{
  return 0xD000000000000018;
}

void *variable initialization expression of CRLAnalyticsOSSignpostManager._unsafe_contextList()
{
  return &_swiftEmptyArrayStorage;
}

id variable initialization expression of CRLAnalyticsOSSignpostManager.signpostsEnabled()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = objc_msgSend(v0, "BOOLForKey:", CFSTR("enableOSSignpost"));

  return v1;
}

uint64_t variable initialization expression of CRLAnalyticsOSSignpostManager.contextAccessLock()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;

  v0 = type metadata accessor for CRLUnfairLock();
  v1 = swift_allocObject(v0, 24, 7);
  v2 = (_DWORD *)swift_slowAlloc(4, -1);
  *v2 = 0;
  *(_QWORD *)(v1 + 16) = v2;
  atomic_thread_fence(memory_order_acq_rel);
  return v1;
}

unint64_t variable initialization expression of CRLMathCalculationController.expressions()
{
  return sub_1008D7958((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of CRLMathCalculationController.pkExpressions()
{
  return sub_1008D7AF8((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of CRLMathCalculationController.expressionStrokeGroups()
{
  return sub_1008D7B0C((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of CRLDocumentSessionAnalyticsManager.documentSessionEndedAnalyticsDomain()
{
  return 0xD000000000000016;
}

uint64_t variable initialization expression of CRLDocumentSessionAnalyticsManager.durationKey()
{
  return 0x6E6F697461727564;
}

uint64_t variable initialization expression of CRLDocumentSessionAnalyticsManager.hadEditKey()
{
  return 0x74696445646168;
}

unint64_t variable initialization expression of CRLDocumentSessionAnalyticsManager.percentageTimeSpentInEditModeKey()
{
  return 0xD00000000000001DLL;
}

unint64_t variable initialization expression of CRLDocumentSessionAnalyticsManager.editModeBeganCountKey()
{
  return 0xD000000000000012;
}

uint64_t _s8Freeform34CRLDocumentSessionAnalyticsManagerC16sessionBeganDate33_2B4D529139D82FBEDCC1F54AB6576EC8LL10Foundation0H0VSgvpfi_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

unint64_t variable initialization expression of CRLUIPropertyNotifier.subscribers()
{
  return sub_1008E019C(_swiftEmptyArrayStorage);
}

_QWORD *variable initialization expression of CRLiOSPencilHoverGestureHandler.previewImageProvider()
{
  uint64_t v0;
  _QWORD *result;

  v0 = type metadata accessor for CRLiOSPencilHoverPreviewImageProvider();
  result = (_QWORD *)swift_allocObject(v0, 40, 7);
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

id variable initialization expression of CRLiOSPencilHoverGestureHandler.pencilHoverStates()
{
  objc_class *v0;
  _BYTE *v1;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for CRLiOSPencilHoverStates();
  v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType] = 8;
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, "init");
}

id variable initialization expression of CRLiOSPageTitleButton.titleFont()
{
  return objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 14.0, UIFontWeightRegular);
}

id variable initialization expression of CRLiOSPageTitleButton.selectedTitleColor()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v4[5];
  uint64_t v5;

  v0 = objc_allocWithZone((Class)UIColor);
  v4[4] = sub_100BBC604;
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = *(_QWORD *)"";
  v4[2] = sub_1004B3678;
  v4[3] = &unk_101265E60;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v5);
  return v2;
}

CGFloat variable initialization expression of CRLiOSPageTitleButton.hitTestingInsets()
{
  return UIEdgeInsetsZero.top;
}

double variable initialization expression of CRLiOSAutoSizingHostingController.lastLayoutSize()
{
  return 0.0;
}

unint64_t variable initialization expression of CRLiOSAutoSizingHostingController.scrollTargets()
{
  return sub_1008D7828((uint64_t)_swiftEmptyArrayStorage);
}

double variable initialization expression of CRLLinkViewHostingRep.reloadViewSize()
{
  return 53.0;
}

BOOL sub_1004B3578@<W0>(void **a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_100C02964(*a1);
  *a2 = result;
  return result;
}

BOOL sub_1004B35A4@<W0>(void **a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_100C02DFC(*a1);
  *a2 = result;
  return result;
}

BOOL sub_1004B35D0@<W0>(void **a1@<X0>, _BYTE *a2@<X8>)
{
  _BOOL8 result;

  result = sub_100C03680(*a1);
  *a2 = result;
  return result;
}

uint64_t variable initialization expression of CRLStatusHUDManager.maxInfos()
{
  return 5;
}

id variable initialization expression of CRLStatusHUDManager.delayedControllers()
{
  return objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
}

uint64_t variable initialization expression of CRLRateLimiter.queue()
{
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  return static OS_dispatch_queue.main.getter();
}

unint64_t variable initialization expression of CRLWPTopicNumbers.topicNumberData()
{
  return sub_1008D83C0((uint64_t)_swiftEmptyArrayStorage);
}

id sub_1004B3678(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

NSNumber sub_1004B36C8()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_1004B36D0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_1004B3720(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_1004B3774(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL sub_1004B3798(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1004B37AC(uint64_t a1, uint64_t a2)
{
  return sub_1004B545C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

_QWORD *sub_1004B37CC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1004B37E0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1004B3810(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1004B3824(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_1004B3838(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1004B384C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

void sub_1004B3860(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1004B3868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

NSNumber sub_1004B3880()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_1004B3888(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_1004B38D8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1004B392C(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

_QWORD *sub_1004B3950@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1004B3964@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1004B3978@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1004B39A4@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1004B39C8(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1004B39DC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1004B39F0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1004B3A04()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_1004B3A14(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1004B3A2C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013DE538, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1430);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1004B3A6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013DE538, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1430);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1004B3AB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

id sub_1004B3AF0()
{
  id *v0;

  return *v0;
}

uint64_t sub_1004B3AF8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_1004B3B08@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1004B3B18(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1004B3B28(uint64_t a1, uint64_t a2)
{
  return sub_1004B545C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void sub_1004B3B34()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

_DWORD *sub_1004B3B5C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004B3B68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100EF0EB0, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_1004B3BB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100EF0F4C, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

BOOL sub_1004B3C00(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1004B3C14()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1004B3C58()
{
  Swift::UInt32 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1004B3C80(uint64_t a1)
{
  Swift::UInt32 *v1;
  Swift::UInt32 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_1004B3CC0(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_1004B3D34(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_1004B3DB0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

uint64_t sub_1004B3DF0()
{
  double *v0;

  return Double.hashValue.getter(*v0);
}

void sub_1004B3DF8()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_1004B3E28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:_:)(a1, v2);
}

Swift::Int sub_1004B3E38()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_1004B3E7C(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_1004B3EBC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF19C0, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_1004B3EF8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF19C0, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_1004B3F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004B508C(a1, a2, a3, (uint64_t)&unk_100EF19C0);
}

double sub_1004B3F4C@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_1004B3F58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_100D5C3E4();
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1004B3F94()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CKErrorDomain);
}

uint64_t sub_1004B3FA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1004B3FE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1004B4024(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1004B4088()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_1004B40BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

BOOL sub_1004B4110(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1004B4124(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_1004B4138(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1004B4140@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1004B4154@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1004B4168@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1004B417C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1004B41AC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1004B41D8@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1004B41FC(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1004B4210(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_1004B4224(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1004B4238@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1004B424C(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1004B4260(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1004B4274()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_1004B4284(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_1004B4298@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1004B42A8(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_1004B42B4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004B42C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_1004B7878(&qword_1013DEE50, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_100EF3398);
  v3 = sub_1004B7878(&qword_1013DEE58, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_100EF3338);
  v4 = sub_1004B9B6C();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_1004B4360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100EF19C0, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_1004B43AC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(AVFoundationErrorDomain);
}

uint64_t sub_1004B43BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013DED58, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF466C);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1004B43FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013DED58, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF466C);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1004B443C(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013DED58, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF466C);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1004B44A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013DED58, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF466C);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1004B44F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7, a1);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_1004B454C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DE6D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1874);
  v3 = sub_1004B7878(&qword_1013DE6D8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1814);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B45D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DE6C0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EF1E3C);
  v3 = sub_1004B7878(&qword_1013DE6C8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EF1DDC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

float sub_1004B4654@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1004B4660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE68, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100EF31E0);
  v3 = sub_1004B7878(&qword_1013DEE70, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100EF3180);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

uint64_t sub_1004B46F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEEF0, (uint64_t (*)(uint64_t))type metadata accessor for CAMediaTimingFillMode, (uint64_t)&unk_100EF4AB4);
  v3 = sub_1004B7878(&qword_1013DEEF8, (uint64_t (*)(uint64_t))type metadata accessor for CAMediaTimingFillMode, (uint64_t)&unk_100EF4A54);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4778(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DE6F0, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_100EF11DC);
  v3 = sub_1004B7878(&qword_1013DE6F8, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_100EF117C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B47FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE20, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EF45F0);
  v3 = sub_1004B7878(&qword_1013DEE28, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EF37DC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DEDC0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_100EF44E8);
  v3 = sub_1004B7878(&qword_1013DEDC8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_100EF4198);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4904(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEDD0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_100EF40B0);
  v3 = sub_1004B7878(&qword_1013DEDD8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_100EF4058);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4988(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE40, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationMetadataKey, (uint64_t)&unk_100EF352C);
  v3 = sub_1004B7878(&qword_1013DEE48, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationMetadataKey, (uint64_t)&unk_100EF34CC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4A0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE98, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EF2968);
  v3 = sub_1004B7878(&qword_1013DEEA0, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EF2910);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1004B4AE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DEDE0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentAttributeKey, (uint64_t)&unk_100EF4528);
  v3 = sub_1004B7878(&qword_1013DEDE8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentAttributeKey, (uint64_t)&unk_100EF3F58);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4B6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEDF0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EF4568);
  v3 = sub_1004B7878(&qword_1013DEDF8, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EF3E14);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4BF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE78, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100EF2EE4);
  v3 = sub_1004B7878(&qword_1013DEE80, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100EF2E84);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4C74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DE6E0, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_100EF164C);
  v3 = sub_1004B7878(&qword_1013DE6E8, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_100EF15EC);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4CF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DE700, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100EF21FC);
  v3 = sub_1004B7878(&qword_1013DE708, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100EF0CC4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4D7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DEE88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF47EC);
  v3 = sub_1004B7878(&qword_1013DEE90, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF2A58);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4E00@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1004B4E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE00, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_100EF3AEC);
  v3 = sub_1004B7878(&qword_1013DEE08, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_100EF3A8C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4EAC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;
  uint64_t result;

  v4 = sub_1004B9BB0(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1004B4EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE10, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_100EF45AC);
  v3 = sub_1004B7878(&qword_1013DEE18, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_100EF396C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B4F6C(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF0EB0, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_1004B4FA8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF0EB0, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_1004B4FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004B508C(a1, a2, a3, (uint64_t)&unk_100EF0EB0);
}

uint64_t sub_1004B4FFC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF0F4C, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_1004B5038(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF0F4C, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_1004B5080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004B508C(a1, a2, a3, (uint64_t)&unk_100EF0F4C);
}

Swift::Int sub_1004B508C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, a1);
  WitnessTable = swift_getWitnessTable(a4, a2);
  _CFObject.hash(into:)(v8, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_1004B50EC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4;
  uint64_t result;

  v4 = sub_100D5C3E8();
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_1004B5128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEE30, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationInteraction, (uint64_t)&unk_100EF3684);
  v3 = sub_1004B7878(&qword_1013DEE38, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationInteraction, (uint64_t)&unk_100EF3624);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B51AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878((unint64_t *)&qword_1013DEDB0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EF44A4);
  v3 = sub_1004B7878(&qword_1013DEDB8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EF42A0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B5230@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_1004B5274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1004B7878(&qword_1013DEDA0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100EF4414);
  v3 = sub_1004B7878(&qword_1013DEDA8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100EF43B4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1004B52F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013DED60, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF47AC);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1004B5338(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013DED60, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF47AC);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1004B5378(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013DED58, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF466C);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1004B53B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013DED58, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF466C);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_1004B5410()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_1004B5418()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_1004B5448(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_1004B545C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_1004B5498(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1004B54D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

BOOL sub_1004B5548(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1004B555C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

void *sub_1004B55E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void *result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v29 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_1004B804C(&qword_1013DE788);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v30 = v9;
    v31 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v34 = v10 + 56;
    while (1)
    {
      v32 = v11;
      v33(v8, v31 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_1004B7878(&qword_1013DE790, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v33(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          sub_1004B7878(&qword_1013DE798, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v22 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8);
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v6, v2);
          if ((v22 & 1) != 0)
          {
            v24(v8, v2);
            v3 = v23;
            v9 = v30;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v30;
      }
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v26 = *(_QWORD *)(v10 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v10 + 16) = v28;
LABEL_4:
      v11 = v32 + 1;
      if (v32 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1004B584C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1004B804C(&qword_1013DE770);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v37 = v1;
    v38 = a1 + 32;
    do
    {
      v6 = *(void **)(v38 + 8 * v4);
      v7 = *(_QWORD *)(v3 + 40);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v10 = v9;
      Hasher.init(_seed:)(v39, v7);
      v11 = v6;
      String.hash(into:)(v39, v8, v10);
      v12 = Hasher._finalize()();
      swift_bridgeObjectRelease(v10);
      v13 = -1 << *(_BYTE *)(v3 + 32);
      v14 = v12 & ~v13;
      v15 = v14 >> 6;
      v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
      v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
        v20 = v19;
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        if (v18 == v21 && v20 == v22)
        {
LABEL_3:
          swift_bridgeObjectRelease_n(v20, 2);
LABEL_4:

          goto LABEL_5;
        }
        v24 = v22;
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v24);
        if ((v25 & 1) != 0)
          goto LABEL_4;
        v26 = ~v13;
        while (1)
        {
          v14 = (v14 + 1) & v26;
          v15 = v14 >> 6;
          v16 = *(_QWORD *)(v5 + 8 * (v14 >> 6));
          v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0)
            break;
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14));
          v20 = v28;
          v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
          if (v27 == v29 && v20 == v30)
            goto LABEL_3;
          v32 = v30;
          v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v20, v29, v30, 0);
          swift_bridgeObjectRelease(v20);
          swift_bridgeObjectRelease(v32);
          if ((v33 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v15) = v17 | v16;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14) = v11;
      v34 = *(_QWORD *)(v3 + 16);
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
      {
        __break(1u);
        return;
      }
      *(_QWORD *)(v3 + 16) = v36;
LABEL_5:
      ++v4;
    }
    while (v4 != v37);
  }
}

void *sub_1004B5A78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v40;
  void *result;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[9];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v45 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v45 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v45 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    sub_1004B804C(&qword_1013DE628);
    v16 = static _SetStorage.allocate(capacity:)(v15);
    v17 = 0;
    v46 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v18 = *(_QWORD *)(v3 + 72);
    v48 = v16 + 56;
    v49 = v18;
    v19 = v15;
    v45 = v15;
    while (1)
    {
      v47 = v17;
      sub_1004B8460(v46 + v49 * v17, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      Hasher.init(_seed:)(v50, *(_QWORD *)(v16 + 40));
      v20 = type metadata accessor for UUID(0);
      v21 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v50, v20, v21);
      v22 = type metadata accessor for CRLBoardIdentifierStorage(0);
      v23 = &v14[*(int *)(v22 + 20)];
      v24 = *(_QWORD *)v23;
      v25 = *((_QWORD *)v23 + 1);
      swift_bridgeObjectRetain(v25);
      String.hash(into:)(v50, v24, v25);
      swift_bridgeObjectRelease(v25);
      v26 = Hasher._finalize()();
      v27 = -1 << *(_BYTE *)(v16 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v48 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if (((1 << v28) & v30) != 0)
      {
        v32 = ~v27;
        do
        {
          sub_1004B8460(*(_QWORD *)(v16 + 48) + v28 * v49, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
          v33 = static UUID.== infix(_:_:)(v12);
          sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
          sub_1004B8460((uint64_t)v14, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
          if ((v33 & 1) != 0)
          {
            v34 = *(int *)(v22 + 20);
            v35 = *(_QWORD *)&v9[v34];
            v36 = *(_QWORD *)&v9[v34 + 8];
            v37 = &v6[v34];
            v38 = *((_QWORD *)v37 + 1);
            if (v35 == *(_QWORD *)v37 && v36 == v38)
            {
              sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
              sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
              sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
LABEL_4:
              sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
              v19 = v45;
              goto LABEL_5;
            }
            v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, *(_QWORD *)v37, v38, 0);
            sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
            if ((v40 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
          }
          v28 = (v28 + 1) & v32;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)(v48 + 8 * (v28 >> 6));
          v31 = 1 << v28;
        }
        while ((v30 & (1 << v28)) != 0);
        v19 = v45;
      }
      *(_QWORD *)(v48 + 8 * v29) = v31 | v30;
      result = (void *)sub_1004B84E0((uint64_t)v14, *(_QWORD *)(v16 + 48) + v28 * v49, type metadata accessor for CRLBoardIdentifier);
      v42 = *(_QWORD *)(v16 + 16);
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        break;
      *(_QWORD *)(v16 + 16) = v44;
LABEL_5:
      v17 = v47 + 1;
      if (v47 + 1 == v19)
        return (void *)v16;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1004B5DF4(uint64_t a1)
{
  sub_1004B6DD4(a1, (uint64_t *)&unk_1013DE990, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
}

Swift::Int sub_1004B5E10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1004B804C(&qword_1013DE6B8);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_1004B5FB0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  id v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = a1;
  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_1004B804C(&qword_1013DEA38);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (v1 < 0)
        v7 = v1;
      else
        v7 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = (char *)(v4 + 7);
  v44 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v42 = v1;
    while (1)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
      v11 = __OFADD__(v9++, 1);
      if (v11)
      {
        __break(1u);
        goto LABEL_43;
      }
      v12 = v10;
      v13 = NSObject._rawHashValue(seed:)(v4[5]);
      v14 = -1 << *((_BYTE *)v4 + 32);
      v15 = v13 & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
      v18 = 1 << v15;
      if (((1 << v15) & v17) != 0)
      {
        type metadata accessor for CRLBoardItem(0);
        v19 = *(id *)(v4[6] + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, v12);

        if ((v20 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v12);
          v1 = v42;
          goto LABEL_18;
        }
        v21 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v21;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)&v8[8 * (v15 >> 6)];
          v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0)
            break;
          v22 = *(id *)(v4[6] + 8 * v15);
          v23 = static NSObject.== infix(_:_:)(v22, v12);

          if ((v23 & 1) != 0)
            goto LABEL_17;
        }
        v1 = v42;
      }
      *(_QWORD *)&v8[8 * v16] = v18 | v17;
      *(_QWORD *)(v4[6] + 8 * v15) = v12;
      v24 = v4[2];
      v11 = __OFADD__(v24, 1);
      v25 = v24 + 1;
      if (v11)
        goto LABEL_44;
      v4[2] = v25;
LABEL_18:
      if (v9 == v44)
        return;
    }
  }
  v26 = 0;
  v43 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v26 != v43)
  {
    v27 = v4[5];
    v28 = *(id *)(v1 + 32 + 8 * v26);
    v29 = NSObject._rawHashValue(seed:)(v27);
    v30 = -1 << *((_BYTE *)v4 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      type metadata accessor for CRLBoardItem(0);
      v35 = *(id *)(v4[6] + 8 * v31);
      v36 = static NSObject.== infix(_:_:)(v35, v28);

      if ((v36 & 1) != 0)
        goto LABEL_30;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(v4[6] + 8 * v31);
          v39 = static NSObject.== infix(_:_:)(v38, v28);

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)&v8[8 * (v31 >> 6)];
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v5 = v44;
        goto LABEL_31;
      }
LABEL_38:
      v5 = v44;
    }
    *(_QWORD *)&v8[8 * v32] = v34 | v33;
    *(_QWORD *)(v4[6] + 8 * v31) = v28;
    v40 = v4[2];
    v11 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v11)
      goto LABEL_45;
    v4[2] = v41;
LABEL_31:
    if (++v26 == v5)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

void *sub_1004B6308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  _BYTE *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  char *v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  _BYTE v55[16];
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[10];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v60 = &v55[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for UUID(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin(v4);
  v61 = &v55[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6);
  v56 = &v55[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v59 = &v55[-v9];
  v66 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v10 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v12 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v55[-v14];
  __chkstk_darwin(v16);
  v18 = &v55[-v17];
  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
    return &_swiftEmptySetSingleton;
  sub_1004B804C(&qword_1013DE638);
  v20 = static _SetStorage.allocate(capacity:)(v19);
  v21 = 0;
  v22 = v20 + 56;
  v65 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v23 = *(_QWORD *)(v10 + 72);
  v58 = v15;
  v64 = v19;
  do
  {
    v67 = v21;
    sub_1004B8460(v65 + v23 * v21, (uint64_t)v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
    Hasher.init(_seed:)(v68, *(_QWORD *)(v20 + 40));
    sub_1004B8460((uint64_t)v18, (uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v66);
    if (!EnumCaseMultiPayload)
    {
      v32 = v59;
      sub_1004B84E0((uint64_t)v15, (uint64_t)v59, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v33 = v56;
      sub_1004B8460((uint64_t)v32, (uint64_t)v56, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      v34 = sub_1004B804C(&qword_1013E1790);
      v35 = (char *)&loc_1004B6614
          + *((int *)qword_1004B68E8
            + (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 5, v34));
      __asm { BR              X9 }
    }
    if (EnumCaseMultiPayload == 1)
    {
      v26 = v60;
      sub_1004B84E0((uint64_t)v15, (uint64_t)v60, type metadata accessor for CRLBoardIdentifier);
      v27 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v68, v63, v27);
      v28 = (uint64_t *)&v26[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v29 = *v28;
      v30 = v28[1];
      swift_bridgeObjectRetain(v30);
      String.hash(into:)(v68, v29, v30);
      swift_bridgeObjectRelease(v30);
      v31 = (uint64_t)v26;
    }
    else
    {
      v36 = &v15[*(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48)];
      v37 = v60;
      sub_1004B84E0((uint64_t)v15, (uint64_t)v60, type metadata accessor for CRLBoardIdentifier);
      v38 = v63;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v61, v36, v63);
      v57 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v68, v38, v57);
      v39 = (uint64_t *)&v37[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v40 = *v39;
      v41 = v39[1];
      swift_bridgeObjectRetain(v41);
      String.hash(into:)(v68, v40, v41);
      swift_bridgeObjectRelease(v41);
      v42 = v61;
      dispatch thunk of Hashable.hash(into:)(v68, v38, v57);
      v43 = v38;
      v15 = v58;
      (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v42, v43);
      v31 = (uint64_t)v37;
    }
    sub_1004B84A4(v31, type metadata accessor for CRLBoardIdentifier);
    v44 = Hasher._finalize()();
    v45 = ~(-1 << *(_BYTE *)(v20 + 32));
    v46 = v44 & v45;
    v47 = (v44 & (unint64_t)v45) >> 6;
    v48 = *(_QWORD *)(v22 + 8 * v47);
    v49 = 1 << (v44 & v45);
    if ((v49 & v48) != 0)
    {
      while (1)
      {
        sub_1004B8460(*(_QWORD *)(v20 + 48) + v46 * v23, (uint64_t)v12, type metadata accessor for CRLBoardPreviewImageCache.Item);
        v50 = sub_10059CBF0((uint64_t)v12, (uint64_t)v18);
        sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardPreviewImageCache.Item);
        if (v50)
          break;
        v46 = (v46 + 1) & v45;
        v47 = v46 >> 6;
        v48 = *(_QWORD *)(v22 + 8 * (v46 >> 6));
        v49 = 1 << v46;
        if ((v48 & (1 << v46)) == 0)
          goto LABEL_13;
      }
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLBoardPreviewImageCache.Item);
      v24 = v64;
    }
    else
    {
LABEL_13:
      v24 = v64;
      *(_QWORD *)(v22 + 8 * v47) = v49 | v48;
      sub_1004B84E0((uint64_t)v18, *(_QWORD *)(v20 + 48) + v46 * v23, type metadata accessor for CRLBoardPreviewImageCache.Item);
      v51 = *(_QWORD *)(v20 + 16);
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
      {
        __break(1u);
        JUMPOUT(0x1004B68E8);
      }
      *(_QWORD *)(v20 + 16) = v53;
    }
    v21 = v67 + 1;
  }
  while (v67 + 1 != v24);
  return (void *)v20;
}

Swift::Int sub_1004B6900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1004B804C(&qword_1013DE6B0);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == (_DWORD)v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_1004B6A40(uint64_t a1)
{
  sub_1004B6A54(a1, &qword_1013DEA20, (void (*)(_QWORD))type metadata accessor for CRLBoardPreviewImageCache.LookupKey);
}

void sub_1004B6A54(uint64_t a1, uint64_t *a2, void (*a3)(_QWORD))
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  id v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  id v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;

  v4 = a1;
  v5 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v9 = a1;
    else
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v4);
    if (v6)
    {
LABEL_3:
      sub_1004B804C(a2);
      v7 = (_QWORD *)static _SetStorage.allocate(capacity:)(v6);
      if (!v5)
        goto LABEL_4;
LABEL_11:
      if (v4 < 0)
        v10 = v4;
      else
        v10 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      v8 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease(v4);
      if (!v8)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
  }
  v7 = &_swiftEmptySetSingleton;
  if (v5)
    goto LABEL_11;
LABEL_4:
  v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v8)
    return;
LABEL_15:
  v11 = (char *)(v7 + 7);
  v48 = v8;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v12 = 0;
    v45 = v4;
    while (1)
    {
      v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v4);
      v14 = __OFADD__(v12++, 1);
      if (v14)
      {
        __break(1u);
        goto LABEL_43;
      }
      v15 = v13;
      v16 = NSObject._rawHashValue(seed:)(v7[5]);
      v17 = -1 << *((_BYTE *)v7 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      v20 = *(_QWORD *)&v11[8 * (v18 >> 6)];
      v21 = 1 << v18;
      if (((1 << v18) & v20) != 0)
      {
        a3(0);
        v22 = *(id *)(v7[6] + 8 * v18);
        v23 = static NSObject.== infix(_:_:)(v22, v15);

        if ((v23 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v15);
          v4 = v45;
          goto LABEL_18;
        }
        v24 = ~v17;
        while (1)
        {
          v18 = (v18 + 1) & v24;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)&v11[8 * (v18 >> 6)];
          v21 = 1 << v18;
          if ((v20 & (1 << v18)) == 0)
            break;
          v25 = *(id *)(v7[6] + 8 * v18);
          v26 = static NSObject.== infix(_:_:)(v25, v15);

          if ((v26 & 1) != 0)
            goto LABEL_17;
        }
        v4 = v45;
      }
      *(_QWORD *)&v11[8 * v19] = v21 | v20;
      *(_QWORD *)(v7[6] + 8 * v18) = v15;
      v27 = v7[2];
      v14 = __OFADD__(v27, 1);
      v28 = v27 + 1;
      if (v14)
        goto LABEL_44;
      v7[2] = v28;
LABEL_18:
      if (v12 == v48)
        return;
    }
  }
  v29 = 0;
  v46 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v29 != v46)
  {
    v30 = v7[5];
    v31 = *(id *)(v4 + 32 + 8 * v29);
    v32 = NSObject._rawHashValue(seed:)(v30);
    v33 = -1 << *((_BYTE *)v7 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    v36 = *(_QWORD *)&v11[8 * (v34 >> 6)];
    v37 = 1 << v34;
    if (((1 << v34) & v36) != 0)
    {
      a3(0);
      v38 = *(id *)(v7[6] + 8 * v34);
      v39 = static NSObject.== infix(_:_:)(v38, v31);

      if ((v39 & 1) != 0)
        goto LABEL_30;
      v40 = ~v33;
      v34 = (v34 + 1) & v40;
      v35 = v34 >> 6;
      v36 = *(_QWORD *)&v11[8 * (v34 >> 6)];
      v37 = 1 << v34;
      if ((v36 & (1 << v34)) != 0)
      {
        while (1)
        {
          v41 = *(id *)(v7[6] + 8 * v34);
          v42 = static NSObject.== infix(_:_:)(v41, v31);

          if ((v42 & 1) != 0)
            break;
          v34 = (v34 + 1) & v40;
          v35 = v34 >> 6;
          v36 = *(_QWORD *)&v11[8 * (v34 >> 6)];
          v37 = 1 << v34;
          if ((v36 & (1 << v34)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v8 = v48;
        goto LABEL_31;
      }
LABEL_38:
      v8 = v48;
    }
    *(_QWORD *)&v11[8 * v35] = v37 | v36;
    *(_QWORD *)(v7[6] + 8 * v34) = v31;
    v43 = v7[2];
    v14 = __OFADD__(v43, 1);
    v44 = v43 + 1;
    if (v14)
      goto LABEL_45;
    v7[2] = v44;
LABEL_31:
    if (++v29 == v8)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

void sub_1004B6DB8(uint64_t a1)
{
  sub_1004B6DD4(a1, (uint64_t *)&unk_1013DE800, (unint64_t *)&qword_1013E56B0, off_101229828);
}

void sub_1004B6DD4(uint64_t a1, uint64_t *a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  id v32;
  Swift::Int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  uint64_t v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v50;

  v5 = a1;
  v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
    if (v7)
    {
LABEL_3:
      sub_1004B804C(a2);
      v8 = (_QWORD *)static _SetStorage.allocate(capacity:)(v7);
      if (!v6)
        goto LABEL_4;
LABEL_11:
      if (v5 < 0)
        v11 = v5;
      else
        v11 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v5);
      if (!v9)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_3;
  }
  v8 = &_swiftEmptySetSingleton;
  if (v6)
    goto LABEL_11;
LABEL_4:
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    return;
LABEL_15:
  v12 = (char *)(v8 + 7);
  v50 = v9;
  if ((v5 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    v46 = v5;
    while (1)
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v5);
      v15 = __OFADD__(v13++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_43;
      }
      v16 = v14;
      v17 = NSObject._rawHashValue(seed:)(v8[5]);
      v18 = -1 << *((_BYTE *)v8 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
      v22 = 1 << v19;
      if (((1 << v19) & v21) != 0)
      {
        sub_1004B8930(0, a3, a4);
        v23 = *(id *)(v8[6] + 8 * v19);
        v24 = static NSObject.== infix(_:_:)(v23, v16);

        if ((v24 & 1) != 0)
        {
LABEL_17:
          swift_unknownObjectRelease(v16);
          v5 = v46;
          goto LABEL_18;
        }
        v25 = ~v18;
        while (1)
        {
          v19 = (v19 + 1) & v25;
          v20 = v19 >> 6;
          v21 = *(_QWORD *)&v12[8 * (v19 >> 6)];
          v22 = 1 << v19;
          if ((v21 & (1 << v19)) == 0)
            break;
          v26 = *(id *)(v8[6] + 8 * v19);
          v27 = static NSObject.== infix(_:_:)(v26, v16);

          if ((v27 & 1) != 0)
            goto LABEL_17;
        }
        v5 = v46;
      }
      *(_QWORD *)&v12[8 * v20] = v22 | v21;
      *(_QWORD *)(v8[6] + 8 * v19) = v16;
      v28 = v8[2];
      v15 = __OFADD__(v28, 1);
      v29 = v28 + 1;
      if (v15)
        goto LABEL_44;
      v8[2] = v29;
LABEL_18:
      if (v13 == v50)
        return;
    }
  }
  v30 = 0;
  v47 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v30 != v47)
  {
    v31 = v8[5];
    v32 = *(id *)(v5 + 32 + 8 * v30);
    v33 = NSObject._rawHashValue(seed:)(v31);
    v34 = -1 << *((_BYTE *)v8 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
    v38 = 1 << v35;
    if (((1 << v35) & v37) != 0)
    {
      sub_1004B8930(0, a3, a4);
      v39 = *(id *)(v8[6] + 8 * v35);
      v40 = static NSObject.== infix(_:_:)(v39, v32);

      if ((v40 & 1) != 0)
        goto LABEL_30;
      v41 = ~v34;
      v35 = (v35 + 1) & v41;
      v36 = v35 >> 6;
      v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
      v38 = 1 << v35;
      if ((v37 & (1 << v35)) != 0)
      {
        while (1)
        {
          v42 = *(id *)(v8[6] + 8 * v35);
          v43 = static NSObject.== infix(_:_:)(v42, v32);

          if ((v43 & 1) != 0)
            break;
          v35 = (v35 + 1) & v41;
          v36 = v35 >> 6;
          v37 = *(_QWORD *)&v12[8 * (v35 >> 6)];
          v38 = 1 << v35;
          if ((v37 & (1 << v35)) == 0)
            goto LABEL_38;
        }
LABEL_30:

        v9 = v50;
        goto LABEL_31;
      }
LABEL_38:
      v9 = v50;
    }
    *(_QWORD *)&v12[8 * v36] = v38 | v37;
    *(_QWORD *)(v8[6] + 8 * v35) = v32;
    v44 = v8[2];
    v15 = __OFADD__(v44, 1);
    v45 = v44 + 1;
    if (v15)
      goto LABEL_45;
    v8[2] = v45;
LABEL_31:
    if (++v30 == v9)
      return;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

uint64_t sub_1004B7138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004B7148(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void type metadata accessor for CRLWPParagraphBorderType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE278, (uint64_t)&unk_101265FE8);
}

void type metadata accessor for CRLWPOutlineStyleType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE280, (uint64_t)&unk_101266008);
}

void type metadata accessor for CRLWPParagraphAlignment(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE288, (uint64_t)&unk_101266028);
}

void type metadata accessor for CRLWPUnderline(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE290, (uint64_t)&unk_101266048);
}

void type metadata accessor for CRLWPSuperscript(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE298, (uint64_t)&unk_101266068);
}

void type metadata accessor for CRLWPStrikethru(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2A0, (uint64_t)&unk_101266088);
}

void type metadata accessor for CRLWPLigatures(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2A8, (uint64_t)&unk_1012660A8);
}

void type metadata accessor for CRLWPCapitalization(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2B0, (uint64_t)&unk_1012660C8);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2B8, (uint64_t)&unk_1012660E8);
}

void type metadata accessor for CKDeviceToDeviceEncryptionStatus(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2C0, (uint64_t)&unk_101266110);
}

void type metadata accessor for CKAccountStatus(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2C8, (uint64_t)&unk_101266138);
}

void type metadata accessor for SCNetworkReachabilityFlags(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2D0, (uint64_t)&unk_101266158);
}

__n128 initializeWithTake for CRLSyncSaveResult(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1004B7258(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1004B72B4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for SCNetworkReachabilityContext(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2D8, (uint64_t)&unk_1012661D8);
}

void type metadata accessor for SCNetworkReachability(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2E0, (uint64_t)&unk_101266210);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2E8, (uint64_t)&unk_101266240);
}

void type metadata accessor for CHMathExpressionType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2F0, (uint64_t)&unk_101266270);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE2F8, (uint64_t)&unk_101266290);
}

_QWORD *initializeBufferWithCopyOfBuffer for CRLPointData(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLSizeData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLSizeData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE300, (uint64_t)&unk_101266310);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE308, (uint64_t)&unk_101266338);
}

__n128 initializeWithTake for CRLColorModelMonochromeData(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE310, (uint64_t)&unk_1012663B8);
}

void type metadata accessor for CRLCanvasKnobTag(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE318, (uint64_t)&unk_1012663E0);
}

void type metadata accessor for CRLWPListLabelType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE320, (uint64_t)&unk_101266400);
}

void type metadata accessor for CRLWPListNumberType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE328, (uint64_t)&unk_101266420);
}

void type metadata accessor for UITextInlinePredictionType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE330, (uint64_t)&unk_101266440);
}

void type metadata accessor for UITextAutocorrectionType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE338, (uint64_t)&unk_101266460);
}

void type metadata accessor for Mode(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE340, (uint64_t)&unk_101266480);
}

uint64_t initializeBufferWithCopyOfBuffer for CRLRepAnimator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 initializeWithTake for CRLColorModelRGBData(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClassAndContentsScale(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLBoardPreviewImageCache.ImageSizeClassAndContentsScale(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE348, (uint64_t)&unk_101266500);
}

void type metadata accessor for CKError(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE350, (uint64_t)&unk_101266530);
}

void type metadata accessor for CRLWPWritingDirection(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE358, (uint64_t)&unk_101266558);
}

void type metadata accessor for CRLWPInsertionEdge(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE360, (uint64_t)&unk_101266578);
}

void type metadata accessor for CRLWPCaretAffinity(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE368, (uint64_t)&unk_101266598);
}

void type metadata accessor for Identifier(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE370, (uint64_t)&unk_1012665B8);
}

void type metadata accessor for CRLAssetDownloadObserverOptions(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE378, (uint64_t)&unk_1012665E0);
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE380, (uint64_t)&unk_101266660);
}

void type metadata accessor for simd_quatf(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE388, (uint64_t)&unk_101266690);
}

void type metadata accessor for CGPath(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE390, (uint64_t)&unk_1012666B8);
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE398, (uint64_t)&unk_1012666E8);
}

__n128 initializeWithTake for CRLEditableBezierPathSourceData.Node(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1004B7600(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1004B7620(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3A0, (uint64_t)&unk_101266770);
}

__n128 initializeWithTake for CRLShadowData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_1004B7690(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1004B76B0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3A8, (uint64_t)&unk_101266800);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3B0, (uint64_t)&unk_1012668B8);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3B8, (uint64_t)&unk_101266938);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3C0, (uint64_t)&unk_101266960);
}

uint64_t getEnumTagSinglePayload for CRLRectData(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLRectData(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3C8, (uint64_t)&unk_1012669E8);
}

void type metadata accessor for CRLChangeProperty(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3D0, (uint64_t)&unk_101266A10);
}

void type metadata accessor for CRLChangeKind(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3D8, (uint64_t)&unk_101266A30);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3E0, (uint64_t)&unk_101266A50);
}

void type metadata accessor for CRLiOSPencilBehavior(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3E8, (uint64_t)&unk_101266A78);
}

void type metadata accessor for CRLiOSPencilModeType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3F0, (uint64_t)&unk_101266A98);
}

void type metadata accessor for CRLAssetDownloadObserverStatus(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DE3F8, (uint64_t)&unk_101266AB8);
}

uint64_t sub_1004B7820()
{
  return sub_1004B7878(&qword_1013DE4C0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100EF0C88);
}

uint64_t sub_1004B784C()
{
  return sub_1004B7878(&qword_1013DE4C8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100EF0C5C);
}

uint64_t sub_1004B7878(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004B78B8()
{
  return sub_1004B7878(&qword_1013DE4D0, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t)&unk_100EF0E40);
}

uint64_t sub_1004B78E4()
{
  return sub_1004B7878(&qword_1013DE4D8, (uint64_t (*)(uint64_t))type metadata accessor for CGColor, (uint64_t)&unk_100EF0E6C);
}

uint64_t sub_1004B7910()
{
  return sub_1004B7878(&qword_1013DE4E0, (uint64_t (*)(uint64_t))type metadata accessor for CGPath, (uint64_t)&unk_100EF0EDC);
}

uint64_t sub_1004B793C()
{
  return sub_1004B7878(&qword_1013DE4E8, (uint64_t (*)(uint64_t))type metadata accessor for CGPath, (uint64_t)&unk_100EF0F08);
}

uint64_t sub_1004B7968()
{
  return sub_1004B7878(&qword_1013DE4F0, (uint64_t (*)(uint64_t))type metadata accessor for CRLAssetDownloadObserverOptions, (uint64_t)&unk_100EF0FA8);
}

uint64_t sub_1004B7994()
{
  return sub_1004B7878(&qword_1013DE4F8, (uint64_t (*)(uint64_t))type metadata accessor for CRLAssetDownloadObserverOptions, (uint64_t)&unk_100EF0F78);
}

uint64_t sub_1004B79C0()
{
  return sub_1004B7878(&qword_1013DE500, (uint64_t (*)(uint64_t))type metadata accessor for CRLAssetDownloadObserverOptions, (uint64_t)&unk_100EF0FD0);
}

uint64_t sub_1004B79EC()
{
  return sub_1004B7878(&qword_1013DE508, (uint64_t (*)(uint64_t))type metadata accessor for CRLAssetDownloadObserverOptions, (uint64_t)&unk_100EF1008);
}

uint64_t sub_1004B7A18()
{
  return sub_1004B7878(&qword_1013DE510, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_100EF1140);
}

uint64_t sub_1004B7A44()
{
  return sub_1004B7878(&qword_1013DE518, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_100EF1114);
}

uint64_t sub_1004B7A70()
{
  return sub_1004B7878(&qword_1013DE520, (uint64_t (*)(uint64_t))type metadata accessor for Identifier, (uint64_t)&unk_100EF11B0);
}

uint64_t sub_1004B7A9C()
{
  return sub_1004B7878(&qword_1013DE528, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1348);
}

uint64_t sub_1004B7AC8()
{
  return sub_1004B7878(&qword_1013DE530, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1374);
}

uint64_t sub_1004B7AF4()
{
  return sub_1004B7878(&qword_1013DE538, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1430);
}

uint64_t sub_1004B7B20()
{
  return sub_1004B7878(&qword_1013DE540, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF13FC);
}

uint64_t sub_1004B7B4C()
{
  return sub_1004B7878(&qword_1013DE548, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF13B8);
}

uint64_t sub_1004B7B78()
{
  return sub_1004B7878(&qword_1013DE550, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EF151C);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB68, (uint64_t)&unk_101267030);
}

uint64_t sub_1004B7BB8()
{
  return sub_1004B7878(&qword_1013DE558, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EF14E0);
}

unint64_t sub_1004B7BE8()
{
  unint64_t result;

  result = qword_1013DE560;
  if (!qword_1013DE560)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1013DE560);
  }
  return result;
}

uint64_t sub_1004B7C2C()
{
  return sub_1004B7878(&qword_1013DE568, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EF1558);
}

uint64_t sub_1004B7C58()
{
  return sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
}

uint64_t sub_1004B7C84()
{
  return sub_1004B7878(&qword_1013DE578, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_100EF15B0);
}

uint64_t sub_1004B7CB0()
{
  return sub_1004B7878(&qword_1013DE580, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_100EF1584);
}

uint64_t sub_1004B7CDC()
{
  return sub_1004B7878(&qword_1013DE588, (uint64_t (*)(uint64_t))type metadata accessor for Mode, (uint64_t)&unk_100EF1620);
}

uint64_t sub_1004B7D08()
{
  return sub_1004B7878(&qword_1013DE590, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF17D8);
}

uint64_t sub_1004B7D34()
{
  return sub_1004B7878(&qword_1013DE598, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF17AC);
}

uint64_t sub_1004B7D60()
{
  return sub_1004B7878(&qword_1013DE5A0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1848);
}

uint64_t sub_1004B7D8C()
{
  return sub_1004B7878(&qword_1013DE5A8, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_100EF1950);
}

uint64_t sub_1004B7DB8()
{
  return sub_1004B7878(&qword_1013DE5B0, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_100EF197C);
}

uint64_t sub_1004B7DE4()
{
  return sub_1004B7878(&qword_1013DE5B8, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_100EF1A1C);
}

uint64_t sub_1004B7E10()
{
  return sub_1004B7878(&qword_1013DE5C0, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_100EF19EC);
}

uint64_t sub_1004B7E3C()
{
  return sub_1004B7878(&qword_1013DE5C8, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_100EF1A44);
}

uint64_t sub_1004B7E68()
{
  return sub_1004B7878(&qword_1013DE5D0, (uint64_t (*)(uint64_t))type metadata accessor for SCNetworkReachabilityFlags, (uint64_t)&unk_100EF1A7C);
}

uint64_t sub_1004B7E94()
{
  return sub_1004B7878(&qword_1013DE5D8, (uint64_t (*)(uint64_t))type metadata accessor for CKDeviceToDeviceEncryptionStatus, (uint64_t)&unk_100EF1C14);
}

uint64_t sub_1004B7EC0()
{
  return sub_1004B7878(&qword_1013DE5E0, (uint64_t (*)(uint64_t))type metadata accessor for CKDeviceToDeviceEncryptionStatus, (uint64_t)&unk_100EF1BE4);
}

uint64_t sub_1004B7EEC()
{
  return sub_1004B7878(&qword_1013DE5E8, (uint64_t (*)(uint64_t))type metadata accessor for CKDeviceToDeviceEncryptionStatus, (uint64_t)&unk_100EF1C3C);
}

uint64_t sub_1004B7F18()
{
  return sub_1004B7878(&qword_1013DE5F0, (uint64_t (*)(uint64_t))type metadata accessor for CKDeviceToDeviceEncryptionStatus, (uint64_t)&unk_100EF1C74);
}

uint64_t sub_1004B7F44()
{
  return sub_1004B7878(&qword_1013DE5F8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EF1DA0);
}

uint64_t sub_1004B7F70()
{
  return sub_1004B7878(&qword_1013DE600, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EF1D74);
}

uint64_t sub_1004B7F9C()
{
  return sub_1004B7878(&qword_1013DE608, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100EF1E10);
}

uint64_t sub_1004B7FC8()
{
  return sub_1004B7878(&qword_1013DE610, (uint64_t (*)(uint64_t))type metadata accessor for CRLChangeProperty, (uint64_t)&unk_100EF0DD0);
}

uint64_t sub_1004B7FF4()
{
  return sub_1004B7878(&qword_1013DE618, (uint64_t (*)(uint64_t))type metadata accessor for CRLChangeKind, (uint64_t)&unk_100EF0D70);
}

uint64_t sub_1004B8020()
{
  return sub_1004B7878(&qword_1013DE620, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100EF0CF8);
}

uint64_t sub_1004B804C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void *sub_1004B808C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v39;
  void *result;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[9];

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - v6;
  v49 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  v8 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    sub_1004B804C(&qword_1013DE778);
    v45 = v14;
    v15 = static _SetStorage.allocate(capacity:)(v14);
    v16 = 0;
    v46 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v17 = *(_QWORD *)(v8 + 72);
    v51 = v15 + 56;
    v52 = v17;
    v18 = type metadata accessor for CRLBoardIdentifierAndValue;
    while (1)
    {
      v47 = v16;
      v19 = v18;
      sub_1004B8460(v46 + v52 * v16, (uint64_t)v13, v18);
      Hasher.init(_seed:)(v53, *(_QWORD *)(v15 + 40));
      v20 = type metadata accessor for UUID(0);
      v21 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      dispatch thunk of Hashable.hash(into:)(v53, v20, v21);
      v50 = type metadata accessor for CRLBoardIdentifierStorage(0);
      v22 = &v13[*(int *)(v50 + 20)];
      v23 = *(_QWORD *)v22;
      v24 = *((_QWORD *)v22 + 1);
      swift_bridgeObjectRetain(v24);
      String.hash(into:)(v53, v23, v24);
      swift_bridgeObjectRelease(v24);
      v48 = *(int *)(v49 + 20);
      Hasher._combine(_:)(v13[v48]);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v15 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      v29 = *(_QWORD *)(v51 + 8 * (v27 >> 6));
      v30 = 1 << v27;
      if (((1 << v27) & v29) != 0)
        break;
      v18 = v19;
LABEL_19:
      *(_QWORD *)(v51 + 8 * v28) = v30 | v29;
      result = (void *)sub_1004B84E0((uint64_t)v13, *(_QWORD *)(v15 + 48) + v27 * v52, v18);
      v41 = *(_QWORD *)(v15 + 16);
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v15 + 16) = v43;
LABEL_3:
      v16 = v47 + 1;
      if (v47 + 1 == v45)
        return (void *)v15;
    }
    v31 = ~v26;
    v18 = v19;
    while (1)
    {
      sub_1004B8460(*(_QWORD *)(v15 + 48) + v27 * v52, (uint64_t)v10, v18);
      v32 = static UUID.== infix(_:_:)(v10);
      sub_1004B8460((uint64_t)v10, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      sub_1004B8460((uint64_t)v13, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
      if ((v32 & 1) != 0)
      {
        v33 = *(int *)(v50 + 20);
        v34 = *(_QWORD *)&v7[v33];
        v35 = *(_QWORD *)&v7[v33 + 8];
        v36 = &v4[v33];
        v37 = *((_QWORD *)v36 + 1);
        if (v34 == *(_QWORD *)v36 && v35 == v37)
        {
          sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        }
        else
        {
          v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, *(_QWORD *)v36, v37, 0);
          sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
          if ((v39 & 1) == 0)
            goto LABEL_7;
        }
        if (v10[*(int *)(v49 + 20)] == v13[v48])
        {
          v18 = v19;
          sub_1004B84A4((uint64_t)v10, v19);
          sub_1004B84A4((uint64_t)v13, v19);
          goto LABEL_3;
        }
      }
      else
      {
        sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      }
LABEL_7:
      v18 = v19;
      sub_1004B84A4((uint64_t)v10, v19);
      v27 = (v27 + 1) & v31;
      v28 = v27 >> 6;
      v29 = *(_QWORD *)(v51 + 8 * (v27 >> 6));
      v30 = 1 << v27;
      if ((v29 & (1 << v27)) == 0)
        goto LABEL_19;
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1004B8460(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004B84A4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004B84E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

Swift::Int sub_1004B8524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _BYTE v20[40];
  _OWORD v21[2];
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1004B804C(&qword_1013DEA18);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      sub_1004B8968(v6 + 40 * v4, (uint64_t)v21);
      result = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v3 + 40));
      v8 = ~(-1 << *(_BYTE *)(v3 + 32));
      v9 = result & v8;
      v10 = (result & (unint64_t)v8) >> 6;
      v11 = *(_QWORD *)(v5 + 8 * v10);
      v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        while (1)
        {
          sub_1004B8968(*(_QWORD *)(v3 + 48) + 40 * v9, (uint64_t)v20);
          v13 = static AnyHashable.== infix(_:_:)(v20, v21);
          result = sub_1004B89A4((uint64_t)v20);
          if ((v13 & 1) != 0)
            break;
          v9 = (v9 + 1) & v8;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0)
            goto LABEL_8;
        }
        sub_1004B89A4((uint64_t)v21);
      }
      else
      {
LABEL_8:
        *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
        v14 = *(_QWORD *)(v3 + 48) + 40 * v9;
        v15 = v21[0];
        v16 = v21[1];
        *(_QWORD *)(v14 + 32) = v22;
        *(_OWORD *)v14 = v15;
        *(_OWORD *)(v14 + 16) = v16;
        v17 = *(_QWORD *)(v3 + 16);
        v18 = __OFADD__(v17, 1);
        v19 = v17 + 1;
        if (v18)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v19;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_1004B8688(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_1004B804C((uint64_t *)&unk_1013DEA00);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v25 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v25 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v24 = v5;
  while ((v25 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v25);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v26 = v10;
    v28 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for CalculateExpression(0);
    v14 = sub_1004B7878((unint64_t *)&unk_1013E8820, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      sub_1004B7878(&qword_1013DEA10, (uint64_t (*)(uint64_t))&type metadata accessor for CalculateExpression, (uint64_t)&protocol conformance descriptor for CalculateExpression);
      do
      {
        v27 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v27, &v28) & 1) != 0)
        {
          swift_release(v26);
          v5 = v24;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v24;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v26;
    v22 = v4[2];
    v11 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v23;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  swift_retain(*(_QWORD *)(v25 + 32 + 8 * v8));
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

void sub_1004B891C(uint64_t a1)
{
  sub_1004B6A54(a1, &qword_1013DE780, (void (*)(_QWORD))type metadata accessor for CRLSceneInfo);
}

uint64_t sub_1004B8930(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1004B8968(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1004B89A4(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

Swift::Int sub_1004B89D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt32 v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1004B804C(&qword_1013DEA30);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_DWORD *)(v6 + 4 * v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_DWORD *)(v14 + 4 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_DWORD *)(v14 + 4 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_DWORD *)(v14 + 4 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_1004B8B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1004B804C(&qword_1013DEA28);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      Hasher.init(_seed:)(v19, *(_QWORD *)(v3 + 40));
      Hasher._combine(_:)(v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA40, (uint64_t)&unk_101266AD8);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA48, (uint64_t)&unk_101266B00);
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA50, (uint64_t)&unk_101266B28);
}

void type metadata accessor for DocumentType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA58, (uint64_t)&unk_101266B50);
}

void type metadata accessor for DocumentAttributeKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA60, (uint64_t)&unk_101266B78);
}

void type metadata accessor for CRLLineEndType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA68, (uint64_t)&unk_101266BA0);
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA70, (uint64_t)&unk_101266BC0);
}

void type metadata accessor for UITextLayoutDirection(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA78, (uint64_t)&unk_101266BE8);
}

void type metadata accessor for CRLWPSelectRange(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA80, (uint64_t)&unk_101266C08);
}

void type metadata accessor for CRLSelectionFlags(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA88, (uint64_t)&unk_101266C28);
}

void type metadata accessor for CalculateKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA90, (uint64_t)&unk_101266C50);
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEA98, (uint64_t)&unk_101266C78);
}

void type metadata accessor for CIContextOption(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAA0, (uint64_t)&unk_101266C98);
}

void type metadata accessor for CRLConnectionLinePathSourceType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAA8, (uint64_t)&unk_101266CC0);
}

void type metadata accessor for CRLMediaReplacingSupportedMediaTypes(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAB0, (uint64_t)&unk_101266CE0);
}

void type metadata accessor for InfoKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAB8, (uint64_t)&unk_101266D00);
}

void type metadata accessor for CRLBoardItemImporterErrorMediaType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAC0, (uint64_t)&unk_101266D28);
}

void type metadata accessor for CRLFirstLaunchAction(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAC8, (uint64_t)&unk_101266D48);
}

void type metadata accessor for UIActivityItemsConfigurationInteraction(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAD0, (uint64_t)&unk_101266D68);
}

void type metadata accessor for UIActivityItemsConfigurationMetadataKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAD8, (uint64_t)&unk_101266D90);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAE0, (uint64_t)&unk_101266DB8);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAE8, (uint64_t)&unk_101266DD8);
}

void type metadata accessor for CRLTextInputArrowKeyDirection(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAF0, (uint64_t)&unk_101266E00);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEAF8, (uint64_t)&unk_101266E20);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB00, (uint64_t)&unk_101266E40);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB08, (uint64_t)&unk_101266E68);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB10, (uint64_t)&unk_101266E90);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB18, (uint64_t)&unk_101266EB8);
}

void type metadata accessor for CRLRectEdge(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB20, (uint64_t)&unk_101266EE8);
}

void type metadata accessor for CRLShapeEditorBooleanType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB28, (uint64_t)&unk_101266F10);
}

void type metadata accessor for MatchingFlags(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB30, (uint64_t)&unk_101266F30);
}

void type metadata accessor for CRLFreehandDrawingToolType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB38, (uint64_t)&unk_101266F58);
}

void type metadata accessor for CRLWPVerticalAlignment(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB40, (uint64_t)&unk_101266F78);
}

void type metadata accessor for REEngineServiceMask(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB48, (uint64_t)&unk_101266F98);
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB50, (uint64_t)&unk_101266FC0);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB58, (uint64_t)&unk_101266FE0);
}

void type metadata accessor for ActivityType(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB60, (uint64_t)&unk_101267008);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEB70, (uint64_t)&unk_101267050);
}

uint64_t sub_1004B8F50()
{
  return sub_1004B7878(&qword_1013DE568, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100EF1558);
}

uint64_t sub_1004B8F7C()
{
  return sub_1004B7878(&qword_1013DEB78, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EF28D8);
}

uint64_t sub_1004B8FA8()
{
  return sub_1004B7878(&qword_1013DEB80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EF28B0);
}

uint64_t sub_1004B8FD4()
{
  return sub_1004B7878(&qword_1013DEB88, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, (uint64_t)&unk_100EF2940);
}

uint64_t sub_1004B9000()
{
  return sub_1004B7878(&qword_1013DEB90, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF2A1C);
}

uint64_t sub_1004B902C()
{
  return sub_1004B7878(&qword_1013DEB98, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF29F0);
}

uint64_t sub_1004B9058()
{
  return sub_1004B7878(&qword_1013DEBA0, (uint64_t (*)(uint64_t))type metadata accessor for REEngineServiceMask, (uint64_t)&unk_100EF2B9C);
}

uint64_t sub_1004B9084()
{
  return sub_1004B7878(&qword_1013DEBA8, (uint64_t (*)(uint64_t))type metadata accessor for REEngineServiceMask, (uint64_t)&unk_100EF2B6C);
}

uint64_t sub_1004B90B0()
{
  return sub_1004B7878(&qword_1013DEBB0, (uint64_t (*)(uint64_t))type metadata accessor for REEngineServiceMask, (uint64_t)&unk_100EF2BC4);
}

uint64_t sub_1004B90DC()
{
  return sub_1004B7878(&qword_1013DEBB8, (uint64_t (*)(uint64_t))type metadata accessor for REEngineServiceMask, (uint64_t)&unk_100EF2BFC);
}

uint64_t sub_1004B9108()
{
  return sub_1004B7878(&qword_1013DEBC0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100EF2E48);
}

uint64_t sub_1004B9134()
{
  return sub_1004B7878(&qword_1013DEBC8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100EF2E1C);
}

uint64_t sub_1004B9160()
{
  return sub_1004B7878(&qword_1013DEBD0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_100EF2EB8);
}

uint64_t sub_1004B918C()
{
  return sub_1004B7878(&qword_1013DEBD8, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EF2FA8);
}

uint64_t sub_1004B91B8()
{
  return sub_1004B7878(&qword_1013DEBE0, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EF2F74);
}

uint64_t sub_1004B91E4()
{
  return sub_1004B7878(&qword_1013DEBE8, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EF2FD4);
}

uint64_t sub_1004B9210()
{
  return sub_1004B7878(&qword_1013DEBF0, (uint64_t (*)(uint64_t))type metadata accessor for UIPopoverArrowDirection, (uint64_t)&unk_100EF3010);
}

uint64_t sub_1004B923C()
{
  return sub_1004B7878(&qword_1013DEBF8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100EF3144);
}

uint64_t sub_1004B9268()
{
  return sub_1004B7878(&qword_1013DEC00, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100EF3118);
}

uint64_t sub_1004B9294()
{
  return sub_1004B7878(&qword_1013DEC08, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100EF31B4);
}

uint64_t sub_1004B92C0()
{
  return sub_1004B7878(&qword_1013DEC10, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_100EF32FC);
}

uint64_t sub_1004B92EC()
{
  return sub_1004B7878(&qword_1013DEC18, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_100EF32D0);
}

uint64_t sub_1004B9318()
{
  return sub_1004B7878(&qword_1013DEC20, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_100EF336C);
}

uint64_t sub_1004B9344()
{
  return sub_1004B7878(&qword_1013DEC28, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationMetadataKey, (uint64_t)&unk_100EF3490);
}

uint64_t sub_1004B9370()
{
  return sub_1004B7878(&qword_1013DEC30, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationMetadataKey, (uint64_t)&unk_100EF3464);
}

uint64_t sub_1004B939C()
{
  return sub_1004B7878(&qword_1013DEC38, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationMetadataKey, (uint64_t)&unk_100EF3500);
}

uint64_t sub_1004B93C8()
{
  return sub_1004B7878(&qword_1013DEC40, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationInteraction, (uint64_t)&unk_100EF35E8);
}

uint64_t sub_1004B93F4()
{
  return sub_1004B7878(&qword_1013DEC48, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationInteraction, (uint64_t)&unk_100EF35BC);
}

uint64_t sub_1004B9420()
{
  return sub_1004B7878(&qword_1013DEC50, (uint64_t (*)(uint64_t))type metadata accessor for UIActivityItemsConfigurationInteraction, (uint64_t)&unk_100EF3658);
}

uint64_t sub_1004B944C()
{
  return sub_1004B7878(&qword_1013DEC58, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EF37A0);
}

uint64_t sub_1004B9478()
{
  return sub_1004B7878(&qword_1013DEC60, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EF3774);
}

uint64_t sub_1004B94A4()
{
  return sub_1004B7878(&qword_1013DEC68, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_100EF3930);
}

uint64_t sub_1004B94D0()
{
  return sub_1004B7878(&qword_1013DEC70, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_100EF3904);
}

uint64_t sub_1004B94FC()
{
  return sub_1004B7878(&qword_1013DEC78, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_100EF3A50);
}

uint64_t sub_1004B9528()
{
  return sub_1004B7878(&qword_1013DEC80, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_100EF3A24);
}

uint64_t sub_1004B9554()
{
  return sub_1004B7878(&qword_1013DEC88, (uint64_t (*)(uint64_t))type metadata accessor for CalculateKey, (uint64_t)&unk_100EF3AC0);
}

uint64_t sub_1004B9580()
{
  return sub_1004B7878(&qword_1013DEC90, (uint64_t (*)(uint64_t))type metadata accessor for CRLSelectionFlags, (uint64_t)&unk_100EF3BAC);
}

uint64_t sub_1004B95AC()
{
  return sub_1004B7878(&qword_1013DEC98, (uint64_t (*)(uint64_t))type metadata accessor for CRLSelectionFlags, (uint64_t)&unk_100EF3B7C);
}

uint64_t sub_1004B95D8()
{
  return sub_1004B7878(&qword_1013DECA0, (uint64_t (*)(uint64_t))type metadata accessor for CRLSelectionFlags, (uint64_t)&unk_100EF3BD4);
}

uint64_t sub_1004B9604()
{
  return sub_1004B7878(&qword_1013DECA8, (uint64_t (*)(uint64_t))type metadata accessor for CRLSelectionFlags, (uint64_t)&unk_100EF3C0C);
}

uint64_t sub_1004B9630()
{
  return sub_1004B7878(&qword_1013DECB0, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EF3DD8);
}

uint64_t sub_1004B965C()
{
  return sub_1004B7878(&qword_1013DECB8, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EF3DAC);
}

uint64_t sub_1004B9688()
{
  return sub_1004B7878(&qword_1013DECC0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentAttributeKey, (uint64_t)&unk_100EF3F20);
}

uint64_t sub_1004B96B4()
{
  return sub_1004B7878(&qword_1013DECC8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentAttributeKey, (uint64_t)&unk_100EF3EF8);
}

uint64_t sub_1004B96E0()
{
  return sub_1004B7878(&qword_1013DECD0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_100EF4020);
}

uint64_t sub_1004B970C()
{
  return sub_1004B7878(&qword_1013DECD8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_100EF3FF8);
}

uint64_t sub_1004B9738()
{
  return sub_1004B7878(&qword_1013DECE0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentType, (uint64_t)&unk_100EF4088);
}

uint64_t sub_1004B9764()
{
  return sub_1004B7878(&qword_1013DECE8, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_100EF4160);
}

uint64_t sub_1004B9790()
{
  return sub_1004B7878(&qword_1013DECF0, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_100EF4138);
}

uint64_t sub_1004B97BC()
{
  return sub_1004B7878(&qword_1013DECF8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EF4264);
}

uint64_t sub_1004B97E8()
{
  return sub_1004B7878(&qword_1013DED00, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EF4238);
}

uint64_t sub_1004B9814()
{
  return sub_1004B7878(&qword_1013DED08, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100EF4378);
}

uint64_t sub_1004B9840()
{
  return sub_1004B7878(&qword_1013DED10, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100EF434C);
}

uint64_t sub_1004B986C()
{
  return sub_1004B7878(&qword_1013DED18, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_100EF43E8);
}

uint64_t sub_1004B9898()
{
  return sub_1004B7878(&qword_1013DED20, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100EF42D4);
}

uint64_t sub_1004B98C4()
{
  return sub_1004B7878(&qword_1013DED28, (uint64_t (*)(uint64_t))type metadata accessor for DocumentReadingOptionKey, (uint64_t)&unk_100EF41C8);
}

uint64_t sub_1004B98F0()
{
  return sub_1004B7878(&qword_1013DED30, (uint64_t (*)(uint64_t))type metadata accessor for DocumentAttributeKey, (uint64_t)&unk_100EF3F88);
}

uint64_t sub_1004B991C()
{
  return sub_1004B7878(&qword_1013DED38, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100EF3E48);
}

uint64_t sub_1004B9948()
{
  return sub_1004B7878(&qword_1013DED40, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_100EF39A0);
}

uint64_t sub_1004B9974()
{
  return sub_1004B7878(&qword_1013DED48, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_100EF3810);
}

uint64_t sub_1004B99A0()
{
  return sub_1004B7878(&qword_1013DED50, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EF3270);
}

uint64_t sub_1004B99CC()
{
  return sub_1004B7878(&qword_1013DED58, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF466C);
}

void type metadata accessor for AVError(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEEB8, (uint64_t)&unk_101267128);
}

uint64_t sub_1004B9A0C()
{
  return sub_1004B7878(&qword_1013DED60, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF47AC);
}

uint64_t sub_1004B9A38()
{
  return sub_1004B7878(&qword_1013DED68, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF473C);
}

uint64_t sub_1004B9A64()
{
  return sub_1004B7878(&qword_1013DED70, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF46D4);
}

uint64_t sub_1004B9A90()
{
  return sub_1004B7878(&qword_1013DED78, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EF4634);
}

uint64_t sub_1004B9ABC()
{
  return sub_1004B7878(&qword_1013DED80, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EF3298);
}

uint64_t sub_1004B9AE8()
{
  return sub_1004B7878(&qword_1013DED88, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF4714);
}

uint64_t sub_1004B9B14()
{
  return sub_1004B7878(&qword_1013DED90, (uint64_t (*)(uint64_t))type metadata accessor for AVError, (uint64_t)&unk_100EF476C);
}

uint64_t sub_1004B9B40()
{
  return sub_1004B7878(&qword_1013DED98, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100EF2A8C);
}

unint64_t sub_1004B9B6C()
{
  unint64_t result;

  result = qword_1013DEE60;
  if (!qword_1013DEE60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1013DEE60);
  }
  return result;
}

uint64_t sub_1004B9BB0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

__n128 initializeWithCopy for CRL3DTransform(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLiOSPencilKitCanvasViewController.CRLiOSPencilKitRulerEdgePoints(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLiOSPencilKitCanvasViewController.CRLiOSPencilKitRulerEdgePoints(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for simd_float4x4(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEEA8, (uint64_t)&unk_1012670D8);
}

void type metadata accessor for CAMediaTimingFillMode(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEEB0, (uint64_t)&unk_101267100);
}

void type metadata accessor for PadPosition(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEEC0, (uint64_t)&unk_101267150);
}

void type metadata accessor for CNContactSortOrder(uint64_t a1)
{
  sub_1004B9CA8(a1, &qword_1013DEEC8, (uint64_t)&unk_101267170);
}

void sub_1004B9CA8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1004B9CEC()
{
  return sub_1004B7878(&qword_1013DEED0, (uint64_t (*)(uint64_t))type metadata accessor for CNContactSortOrder, (uint64_t)&unk_100EF4910);
}

uint64_t sub_1004B9D18()
{
  return sub_1004B7878(&qword_1013DEED8, (uint64_t (*)(uint64_t))type metadata accessor for CAMediaTimingFillMode, (uint64_t)&unk_100EF4A18);
}

uint64_t sub_1004B9D44()
{
  return sub_1004B7878(&qword_1013DEEE0, (uint64_t (*)(uint64_t))type metadata accessor for CAMediaTimingFillMode, (uint64_t)&unk_100EF49EC);
}

uint64_t sub_1004B9D70()
{
  return sub_1004B7878(&qword_1013DEEE8, (uint64_t (*)(uint64_t))type metadata accessor for CAMediaTimingFillMode, (uint64_t)&unk_100EF4A88);
}

double *sub_1004B9E5C()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t i;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t j;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  id v36;
  unint64_t v37;
  uint64_t k;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  uint64_t m;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  double *v58;
  uint64_t v60;
  void *v61;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v2 = (void *)Strong;
  v3 = swift_unknownObjectWeakLoadStrong(v0);
  if (!v3)
    goto LABEL_94;
  v4 = (void *)v3;
  v5 = *(_QWORD *)(v0 + 16);
  v60 = v5;
  v61 = (void *)v3;
  if ((v5 & 1) != 0)
  {
    v6 = objc_msgSend(v2, "containerRenderablesForRep:", v3);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1004BA914();
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    }
    else
    {
      v9 = (uint64_t)_swiftEmptyArrayStorage;
    }
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v20 = v9;
      else
        v20 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (v10)
        goto LABEL_9;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v9);
      if (v10)
      {
LABEL_9:
        if (v10 < 1)
        {
          __break(1u);
          goto LABEL_97;
        }
        for (i = 0; i != v10; ++i)
        {
          if ((v9 & 0xC000000000000001) != 0)
            v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
          else
            v14 = *(id *)(v9 + 8 * i + 32);
          v15 = v14;
          v16 = objc_msgSend(v14, "layer", v60, v61);

          if (v16)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
            v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v19 >= v18 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
            v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
            specialized Array._endMutation()(v13);
          }
        }
        swift_bridgeObjectRelease(v9);
        v4 = v61;
        LOBYTE(v5) = v60;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease(v9);
LABEL_25:
    swift_bridgeObjectRelease(v9);
    sub_10061EAD4((uint64_t)_swiftEmptyArrayStorage);
  }
  if ((v5 & 2) == 0)
    goto LABEL_46;
  v21 = objc_msgSend(v4, "overlayRenderables");
  v22 = sub_1004BA914();
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v31 = v9;
    else
      v31 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v31);
    if (v10)
    {
LABEL_29:
      if (v10 >= 1)
      {
        for (j = 0; j != v10; ++j)
        {
          if ((v9 & 0xC000000000000001) != 0)
            v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v9);
          else
            v25 = *(id *)(v9 + 8 * j + 32);
          v26 = v25;
          v27 = objc_msgSend(v25, "layer", v60, v61);

          if (v27)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
            v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v30 >= v29 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
            v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
            specialized Array._endMutation()(v24);
          }
        }
        swift_bridgeObjectRelease(v9);
        v4 = v61;
        LOBYTE(v5) = v60;
        goto LABEL_45;
      }
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    if (v10)
      goto LABEL_29;
  }
  swift_bridgeObjectRelease(v9);
LABEL_45:
  swift_bridgeObjectRelease(v9);
  sub_10061EAD4((uint64_t)_swiftEmptyArrayStorage);
LABEL_46:
  if ((v5 & 4) == 0)
    goto LABEL_51;
  v32 = objc_msgSend(v4, "contentPlatformView");
  if (!v32)
    goto LABEL_51;
  v33 = v32;
  v34 = objc_msgSend(v32, "layer");

  if (!v34)
    goto LABEL_51;
  v9 = (uint64_t)v34;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v11 >> 1)
    goto LABEL_100;
  while (1)
  {
    v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
    specialized Array._endMutation()(v35);

LABEL_51:
    if ((v5 & 8) != 0)
    {
      v36 = objc_msgSend(v4, "additionalRenderablesOverRenderable");
      v37 = sub_1004BA914();
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          v46 = v9;
        else
          v46 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v9);
        v10 = _CocoaArrayWrapper.endIndex.getter(v46);
        if (v10)
          goto LABEL_54;
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v9);
        if (v10)
        {
LABEL_54:
          if (v10 < 1)
          {
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
          for (k = 0; k != v10; ++k)
          {
            if ((v9 & 0xC000000000000001) != 0)
              v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(k, v9);
            else
              v40 = *(id *)(v9 + 8 * k + 32);
            v41 = v40;
            v42 = objc_msgSend(v40, "layer", v60, v61);

            if (v42)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
              v45 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
              v44 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v45 >= v44 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
              v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v42);
              specialized Array._endMutation()(v39);
            }
          }
          swift_bridgeObjectRelease(v9);
          v4 = v61;
          LOBYTE(v5) = v60;
          goto LABEL_70;
        }
      }
      swift_bridgeObjectRelease(v9);
LABEL_70:
      swift_bridgeObjectRelease(v9);
      sub_10061EAD4((uint64_t)_swiftEmptyArrayStorage);
    }
    if ((v5 & 0x10) == 0)
      goto LABEL_91;
    v47 = objc_msgSend(v4, "additionalRenderablesUnderRenderable");
    v48 = sub_1004BA914();
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v48);

    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v57 = v9;
      else
        v57 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v57);
      if (!v10)
      {
LABEL_89:
        swift_bridgeObjectRelease(v9);
        goto LABEL_90;
      }
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v9);
      if (!v10)
        goto LABEL_89;
    }
    if (v10 >= 1)
      break;
LABEL_99:
    __break(1u);
LABEL_100:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v10 + 1, 1);
  }
  for (m = 0; m != v10; ++m)
  {
    if ((v9 & 0xC000000000000001) != 0)
      v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(m, v9);
    else
      v51 = *(id *)(v9 + 8 * m + 32);
    v52 = v51;
    v53 = objc_msgSend(v51, "layer", v60, v61);

    if (v53)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
      v56 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v55 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v56 >= v55 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
      v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v53);
      specialized Array._endMutation()(v50);
    }
  }
  swift_bridgeObjectRelease(v9);
  v4 = v61;
  LOBYTE(v5) = v60;
LABEL_90:
  swift_bridgeObjectRelease(v9);
  sub_10061EAD4((uint64_t)_swiftEmptyArrayStorage);
LABEL_91:
  if ((v5 & 0x20) != 0)
  {
    v58 = sub_1004BA584();
    sub_10061EAD4((uint64_t)v58);
  }

LABEL_94:
  return _swiftEmptyArrayStorage;
}

double *sub_1004BA584()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  double *v19;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  _BYTE v30[24];
  char v31;
  double *v32;
  _QWORD v33[3];

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (!Strong)
    return _swiftEmptyArrayStorage;
  v2 = (void *)Strong;
  v3 = (void *)swift_unknownObjectWeakLoadStrong(v0);
  if (!v3 || (v4 = v3, v5 = objc_msgSend(v3, "info"), v4, !v5))
  {
LABEL_22:

    return _swiftEmptyArrayStorage;
  }
  v6 = type metadata accessor for CRLGroupItem(0);
  if (!swift_dynamicCastClass(v5, v6))
  {
    swift_unknownObjectRelease(v5);
    goto LABEL_22;
  }
  sub_1004E3A60();
  v8 = v7;
  v9 = v2;
  v10 = (uint64_t)sub_1004BA950(v8, (void *)v9);
  swift_bridgeObjectRelease(v8);

  v29 = (void *)v9;
  if ((unint64_t)v10 >> 62)
    goto LABEL_26;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = (id)v9;
  swift_bridgeObjectRetain(v10);
  for (; v11; v11 = _CocoaArrayWrapper.endIndex.getter(v21))
  {
    v28 = v5;
    v13 = _swiftEmptyArrayStorage;
    v9 = 4;
    v5 = v29;
    while (1)
    {
      v14 = (v10 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v10)
          : *(id *)(v10 + 8 * v9);
      v15 = v14;
      v16 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
        break;
      swift_unknownObjectWeakInit(&v32);
      swift_unknownObjectWeakInit(v33);
      swift_unknownObjectWeakAssign(&v32, v15);
      swift_unknownObjectWeakAssign(v33, v5);
      v33[1] = qword_1013DF440 & 0xFFFFFFFFFFFFFFE7;
      sub_1004BAB14((uint64_t)&v32, (uint64_t)v30, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
      v31 = 0;

      if ((v31 & 1) != 0)
      {
        sub_1004BAAD4((uint64_t)v30);
      }
      else
      {
        sub_1004BAB14((uint64_t)v30, (uint64_t)&v32, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
        sub_1004BAB14((uint64_t)&v32, (uint64_t)v30, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = (double *)sub_100D0EC3C(0, *((_QWORD *)v13 + 2) + 1, 1, (unint64_t)v13);
        v18 = *((_QWORD *)v13 + 2);
        v17 = *((_QWORD *)v13 + 3);
        if (v18 >= v17 >> 1)
          v13 = (double *)sub_100D0EC3C((_QWORD *)(v17 > 1), v18 + 1, 1, (unint64_t)v13);
        *((_QWORD *)v13 + 2) = v18 + 1;
        sub_1004BAB14((uint64_t)v30, (uint64_t)&v13[3 * v18 + 4], (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
        v5 = v29;
      }
      ++v9;
      if (v16 == v11)
      {

        swift_bridgeObjectRelease(v10);
        v5 = v28;
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_26:
    if (v10 < 0)
      v21 = v10;
    else
      v21 = v10 & 0xFFFFFFFFFFFFFF8;
    v22 = (id)v9;
    swift_bridgeObjectRetain(v10);
  }

  swift_bridgeObjectRelease(v10);
  v13 = _swiftEmptyArrayStorage;
LABEL_31:
  swift_bridgeObjectRelease(v10);
  v23 = *((_QWORD *)v13 + 2);
  if (v23)
  {
    v24 = (uint64_t)(v13 + 4);
    swift_bridgeObjectRetain(v13);
    v19 = _swiftEmptyArrayStorage;
    do
    {
      v25 = v19;
      v26 = sub_1004BAB14(v24, (uint64_t)v30, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
      v27 = sub_1004B9E5C(v26);
      v32 = v19;
      swift_bridgeObjectRetain(v19);
      sub_10061EAD4(v27);
      v19 = v32;
      sub_1004BAB64((uint64_t)v30);
      swift_bridgeObjectRelease(v25);
      v24 += 24;
      --v23;
    }
    while (v23);
    swift_unknownObjectRelease(v5);

    swift_bridgeObjectRelease(v13);
  }
  else
  {
    swift_unknownObjectRelease(v5);

    v19 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v13);
  return v19;
}

unint64_t sub_1004BA914()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EE6D0;
  if (!qword_1013EE6D0)
  {
    v1 = objc_opt_self(CRLCanvasRenderable);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013EE6D0);
  }
  return result;
}

void *sub_1004BA950(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    v5 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v8 = v7;
      v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v10 = objc_msgSend(a2, "repForInfo:", v7);

      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v12 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
        specialized Array._endMutation()(v6);
      }
      ++v5;
      if (v9 == v4)
        goto LABEL_19;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_19:
  swift_bridgeObjectRelease(a1);
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1004BAAD4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013DF448);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004BAB14(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  a3(a2, a1);
  a3(a2 + 8, a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  return a2;
}

uint64_t sub_1004BAB64(uint64_t a1)
{
  ((void (*)(void))swift_unknownObjectWeakDestroy)();
  swift_unknownObjectWeakDestroy(a1 + 8);
  return a1;
}

uint64_t destroy for CRLRepAnimator(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return swift_unknownObjectWeakDestroy(a1 + 8);
}

uint64_t initializeWithCopy for CRLRepAnimator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004BAC14(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit);
}

uint64_t assignWithCopy for CRLRepAnimator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = ((uint64_t (*)(void))swift_unknownObjectWeakCopyAssign)();
  swift_unknownObjectWeakCopyAssign(v4 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t initializeWithTake for CRLRepAnimator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004BAC14(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit);
}

uint64_t assignWithTake for CRLRepAnimator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004BAC14(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeAssign);
}

uint64_t sub_1004BAC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7;

  v7 = a4();
  ((void (*)(uint64_t, uint64_t))a4)(v7 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLRepAnimator(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLRepAnimator(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLRepAnimator()
{
  return &type metadata for CRLRepAnimator;
}

ValueMetadata *type metadata accessor for CRLRepAnimator.RepLayerType()
{
  return &type metadata for CRLRepAnimator.RepLayerType;
}

unint64_t sub_1004BACCC()
{
  unint64_t result;

  result = qword_1013DF450;
  if (!qword_1013DF450)
  {
    result = swift_getWitnessTable(&unk_100EF4B9C, &type metadata for CRLRepAnimator.RepLayerType);
    atomic_store(result, (unint64_t *)&qword_1013DF450);
  }
  return result;
}

unint64_t sub_1004BAD14()
{
  unint64_t result;

  result = qword_1013DF458;
  if (!qword_1013DF458)
  {
    result = swift_getWitnessTable("E)7", &type metadata for CRLRepAnimator.RepLayerType);
    atomic_store(result, (unint64_t *)&qword_1013DF458);
  }
  return result;
}

unint64_t sub_1004BAD5C()
{
  unint64_t result;

  result = qword_1013DF460;
  if (!qword_1013DF460)
  {
    result = swift_getWitnessTable(&unk_100EF4BC4, &type metadata for CRLRepAnimator.RepLayerType);
    atomic_store(result, (unint64_t *)&qword_1013DF460);
  }
  return result;
}

unint64_t sub_1004BADA4()
{
  unint64_t result;

  result = qword_1013DF468;
  if (!qword_1013DF468)
  {
    result = swift_getWitnessTable(&unk_100EF4BFC, &type metadata for CRLRepAnimator.RepLayerType);
    atomic_store(result, (unint64_t *)&qword_1013DF468);
  }
  return result;
}

BOOL sub_1004BADE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_1004BAE00()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1004BAE44()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1004BAE6C(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_1004BAEAC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574496472616F62;
  else
    return 0x6564496472616F62;
}

uint64_t sub_1004BAF00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004BB900(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004BAF24()
{
  return 0;
}

void sub_1004BAF30(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1004BAF3C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BB5C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BAF64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BB5C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BAF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004BB670(v0 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier);
  v1 = v0 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardItemUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004BAFEC()
{
  return type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord(0);
}

uint64_t type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord(uint64_t a1)
{
  uint64_t result;

  result = qword_1013DF498;
  if (!qword_1013DF498)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLTombstoneBoardItemRealTimeChangeRecord);
  return result;
}

uint64_t sub_1004BB030(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 2, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1004BB0B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013DF558);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1004BB5C8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys, &type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys, v11, v9, v10);
  v12 = v3 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier;
  v21 = 0;
  v13 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v14 = sub_1004B7878(&qword_1013DF560, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02410);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v12, &v21, v5, v13, v14);
  if (!v2)
  {
    v15 = v3 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardItemUUID;
    v20 = 1;
    v16 = type metadata accessor for UUID(0);
    v17 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v20, v5, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t *sub_1004BB244(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v28 = *v1;
  v3 = type metadata accessor for UUID(0);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v6);
  v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1004B804C(&qword_1013DF540);
  v8 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_1004BB5C8();
  v14 = v27;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys, &type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys, v13, v11, v12);
  if (v14)
  {
    swift_deallocPartialClassInstance(v1, v28, *(unsigned int *)(*v1 + 48), *(unsigned __int16 *)(*v1 + 52));
  }
  else
  {
    v15 = v8;
    v30 = 0;
    v16 = sub_1004B7878(&qword_1013DF550, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02438);
    v17 = (uint64_t)v25;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v6, &v30, v26, v6, v16);
    v27 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier;
    sub_1004BB62C(v17, (uint64_t)v1 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier);
    v29 = 1;
    v18 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = v5;
    v20 = v24;
    v21 = v26;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v24, &v29, v26, v24, v18);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))((uint64_t)v1 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardItemUUID, v19, v20);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v1;
}

uint64_t CRLiOSDocumentModeHandwriting.pencilModeType.getter()
{
  return 2;
}

uint64_t *sub_1004BB4D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *result;

  v6 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  result = sub_1004BB244(a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_1004BB528(_QWORD *a1)
{
  return sub_1004BB0B8(a1);
}

uint64_t sub_1004BB548(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013DF530, type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord, (uint64_t)&unk_100EF4D64);
  result = sub_1004B7878(&qword_1013DF538, type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord, (uint64_t)"E)7");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

_QWORD *sub_1004BB5A4(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1004BB5C8()
{
  unint64_t result;

  result = qword_1013DF548;
  if (!qword_1013DF548)
  {
    result = swift_getWitnessTable(&unk_100EF4E6C, &type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF548);
  }
  return result;
}

uint64_t _s8Freeform26AnyCRLCommandChangeContextVwxx_0(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1004BB62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004BB670(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *initializeBufferWithCopyOfBuffer for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004BB794 + 4 * byte_100EF4D05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004BB7C8 + 4 * byte_100EF4D00[v4]))();
}

uint64_t sub_1004BB7C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BB7D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004BB7D8);
  return result;
}

uint64_t sub_1004BB7E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004BB7ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004BB7F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BB7F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BB804(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1004BB80C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_1004BB82C()
{
  unint64_t result;

  result = qword_1013DF568;
  if (!qword_1013DF568)
  {
    result = swift_getWitnessTable(&unk_100EF4E44, &type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF568);
  }
  return result;
}

unint64_t sub_1004BB874()
{
  unint64_t result;

  result = qword_1013DF570;
  if (!qword_1013DF570)
  {
    result = swift_getWitnessTable(&unk_100EF4DB4, &type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF570);
  }
  return result;
}

unint64_t sub_1004BB8BC()
{
  unint64_t result;

  result = qword_1013DF578;
  if (!qword_1013DF578)
  {
    result = swift_getWitnessTable(&unk_100EF4DDC, &type metadata for CRLTombstoneBoardItemRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF578);
  }
  return result;
}

uint64_t sub_1004BB900(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    v5 = 0xEF7265696669746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6574496472616F62 && a2 == 0xED0000444955556DLL)
  {
    swift_bridgeObjectRelease(0xED0000444955556DLL);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6574496472616F62, 0xED0000444955556DLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1004BBA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform32CRLCommandHistoryItemDatabaseRow_boardIdentifier);
  v1 = v0 + OBJC_IVAR____TtC8Freeform32CRLCommandHistoryItemDatabaseRow_uuid;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004BBBC8(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLCommandHistoryItemDatabaseRow_commandHistoryItemData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLCommandHistoryItemDatabaseRow_commandHistoryItemData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004BBAAC()
{
  return type metadata accessor for CRLCommandHistoryItemDatabaseRow(0);
}

uint64_t type metadata accessor for CRLCommandHistoryItemDatabaseRow(uint64_t a1)
{
  uint64_t result;

  result = qword_1013DF5A8;
  if (!qword_1013DF5A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandHistoryItemDatabaseRow);
  return result;
}

uint64_t sub_1004BBAF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_100EF4EE8;
      v5[3] = &unk_100EF4F00;
      result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1004BBB8C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004BBBC8(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1004BBC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  _BYTE *v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  unint64_t v36;
  uint64_t v37;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (**v56)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  char v57[24];

  v55 = a3;
  v5 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  v15 = __chkstk_darwin(v14);
  v17 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))((char *)&v49
                                                                            - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v49 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v49 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v49 - v24;
  v54 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  v56 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v54 - 8);
  __chkstk_darwin(v54);
  v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1006B44FC(a2, a1);
  if (v29 >> 60 != 15)
  {
    v53 = v29;
    if (!__OFADD__(a2, 4))
    {
      v52 = v28;
      v31 = sub_1006B45D4(a2 + 4, a1);
      if ((v32 & 1) == 0)
      {
        if (v31 != 1)
        {
          if (!v31)
          {
            v34 = (uint64_t)v52;
            v33 = v53;
            sub_1004BE310((uint64_t)v52, v53);
            sub_10067B2E0(v34, v33);
            v17 = v56;
            sub_1004B84E0((uint64_t)v13, (uint64_t)v23, type metadata accessor for CRLBoardIdentifierStorage);
            sub_1004B84E0((uint64_t)v23, (uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
            swift_release(a1);
            sub_1004BE2FC(v34, v33);
            sub_1004B84E0((uint64_t)v25, (uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
            v45 = 0;
            v47 = v54;
            v46 = v55;
LABEL_15:
            swift_storeEnumTagMultiPayload(v27, v47, v45);
            sub_1004B84E0((uint64_t)v27, v46, type metadata accessor for CRLAssetReferrerIdentifier);
            v37 = 0;
            return v17[7](v46, v37, 1, v47, v30);
          }
          v17 = v56;
          if (qword_1013DD6B8 == -1)
          {
LABEL_13:
            swift_beginAccess(&static OS_os_log.crlDefault, v57, 0, 0);
            v39 = (id)static OS_os_log.crlDefault;
            v40 = static os_log_type_t.error.getter(v39);
            sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v40, "Invalid CRLAssetReferrerIdentifier type.", 40, 2, (uint64_t)_swiftEmptyArrayStorage);

            swift_release(a1);
            sub_1004BE2FC((uint64_t)v52, v53);
            v37 = 1;
            v47 = v54;
            v46 = v55;
            return v17[7](v46, v37, 1, v47, v30);
          }
LABEL_17:
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
          goto LABEL_13;
        }
        v35 = sub_1006B44FC(a2 + 1, a1);
        if (v36 >> 60 != 15)
        {
          v41 = (uint64_t)v35;
          v42 = v36;
          v44 = (uint64_t)v52;
          v43 = v53;
          sub_1004BE310((uint64_t)v52, v53);
          UUID.init(crl_data:)(v44, v43);
          sub_10067B2E0(v41, v42);
          sub_1004B84E0((uint64_t)v11, (uint64_t)v17, type metadata accessor for CRLBoardIdentifierStorage);
          sub_1004B84E0((uint64_t)v17, (uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
          swift_release(a1);
          sub_1004BE2FC((uint64_t)v52, v53);
          v48 = (uint64_t)&v27[*(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48)];
          (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v27, v7, v51);
          sub_1004B84E0((uint64_t)v20, v48, type metadata accessor for CRLBoardIdentifier);
          v45 = 1;
          v47 = v54;
          v46 = v55;
          v17 = v56;
          goto LABEL_15;
        }
      }
      swift_release(a1);
      sub_1004BE2FC((uint64_t)v52, v53);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_17;
  }
  v30 = swift_release(a1);
LABEL_10:
  v37 = 1;
  v47 = v54;
  v46 = v55;
  v17 = v56;
  return v17[7](v46, v37, 1, v47, v30);
}

uint64_t sub_1004BC12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v1, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload(v11, v9) == 1)
  {
    v8 = &v11[*(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    v13 = UUID.crl_data()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_1004B84E0((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    v13 = sub_10067BA88();
  }
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  return v13;
}

uint64_t sub_1004BC2D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(v2, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    v15 = (uint64_t)&v13[*(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_1004B84E0(v15, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    Hasher._combine(_:)(1uLL);
    v16 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v16);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v16);
    v17 = &v10[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v18 = *(_QWORD *)v17;
    v19 = *((_QWORD *)v17 + 1);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(a1, v18, v19);
    swift_bridgeObjectRelease(v19);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_1004B84E0((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    Hasher._combine(_:)(0);
    v21 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v21);
    v22 = &v10[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v23 = *(_QWORD *)v22;
    v24 = *((_QWORD *)v22 + 1);
    swift_bridgeObjectRetain(v24);
    String.hash(into:)(a1, v23, v24);
    swift_bridgeObjectRelease(v24);
    return sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t sub_1004BC55C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v52 = sub_1004B804C(&qword_1013DF818);
  v40 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v51 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  __chkstk_darwin(v3);
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013DF820);
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = __chkstk_darwin(v46);
  v50 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - v10;
  v12 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1004B804C(&qword_1013DF828);
  v15 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v19 = a1[4];
  sub_1004BB5A4(a1, v18);
  v20 = sub_1004BDBEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLAssetReferrerIdentifier.CodingKeys, &type metadata for CRLAssetReferrerIdentifier.CodingKeys, v20, v18, v19);
  sub_1004B8460(v49, (uint64_t)v14, type metadata accessor for CRLAssetReferrerIdentifier);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v21 = v40;
    v49 = v15;
    v22 = (uint64_t)&v14[*(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48)];
    v24 = v43;
    v23 = v44;
    v25 = v45;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v14, v45);
    sub_1004B84E0(v22, v50, type metadata accessor for CRLBoardIdentifier);
    v56 = 1;
    v26 = sub_1004BDC30();
    v27 = v47;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys, &v56, v47, &type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys, v26);
    v55 = 0;
    v28 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v29 = v48;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v24, &v55, v52, v25, v28);
    if (v29)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v51, v52);
      sub_1004B84A4(v50, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
      v30 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
    }
    else
    {
      v54 = 1;
      v37 = sub_1004B7878(&qword_1013DF830, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F02134);
      KeyedEncodingContainer.encode<A>(_:forKey:)(v50, &v54, v52, v46, v37);
      v38 = v49;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v51, v52);
      sub_1004B84A4(v50, type metadata accessor for CRLBoardIdentifier);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
      v30 = *(uint64_t (**)(char *, uint64_t))(v38 + 8);
    }
    return v30(v17, v27);
  }
  else
  {
    sub_1004B84E0((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    v53 = 0;
    v31 = sub_1004BDC74();
    v32 = v47;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys, &v53, v47, &type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys, v31);
    v33 = sub_1004B7878(&qword_1013DF830, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F02134);
    v34 = v42;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v11, v35, v42, v46, v33);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v34);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v32);
  }
}

uint64_t sub_1004BC9C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  __n128 v36;
  unint64_t v37;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;

  v54 = a2;
  v3 = sub_1004B804C(&qword_1013DF7E0);
  v4 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  v58 = v4;
  __chkstk_darwin(v3);
  v61 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013DF7E8);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  __chkstk_darwin(v6);
  v59 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013DF7F0);
  v60 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v50 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v50 - v18;
  v21 = a1[3];
  v20 = a1[4];
  v62 = a1;
  sub_1004BB5A4(a1, v21);
  v22 = sub_1004BDBEC();
  v23 = v63;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLAssetReferrerIdentifier.CodingKeys, &type metadata for CRLAssetReferrerIdentifier.CodingKeys, v22, v21, v20);
  if (v23)
    goto LABEL_7;
  v52 = v17;
  v53 = v14;
  v24 = v61;
  v51 = v19;
  v63 = v11;
  v25 = KeyedDecodingContainer.allKeys.getter(v8);
  v26 = v25;
  v27 = v8;
  if (*(_QWORD *)(v25 + 16) != 1)
  {
    v32 = type metadata accessor for DecodingError(0);
    swift_allocError(v32, &protocol witness table for DecodingError, 0, 0);
    v34 = v33;
    sub_1004B804C(&qword_1013DF800);
    *v34 = v63;
    v35 = KeyedDecodingContainer.codingPath.getter(v8);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v35, 0xD00000000000002BLL, 0x8000000100FACD50, 0);
    v36.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, enum case for DecodingError.typeMismatch(_:), v32);
    swift_willThrow(v36);
    swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v8);
LABEL_7:
    v48 = v62;
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v48);
  }
  if ((*(_BYTE *)(v25 + 32) & 1) != 0)
  {
    v67 = 1;
    v28 = sub_1004BDC30();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys, &v67, v8, &type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys, v28);
    v29 = type metadata accessor for UUID(0);
    v66 = 0;
    v30 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v31 = v57;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v29, &v66, v57, v29, v30);
    v59 = v10;
    sub_1004B804C((uint64_t *)&unk_1013E1780);
    v44 = type metadata accessor for CRLBoardIdentifier(0);
    v65 = 1;
    v45 = sub_1004B7878((unint64_t *)&unk_1013FE1B0, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0210C);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v44, &v65, v31, v44, v45);
    v46 = v60;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v24, v31);
    swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v59, v27);
    v47 = (uint64_t)v53;
    swift_storeEnumTagMultiPayload(v53, v63, 1);
    v48 = v62;
  }
  else
  {
    v64 = 0;
    v37 = sub_1004BDC74();
    v38 = v59;
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys, &v64, v8, &type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys, v37);
    v40 = type metadata accessor for CRLBoardIdentifier(0);
    v41 = sub_1004B7878((unint64_t *)&unk_1013FE1B0, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0210C);
    v47 = (uint64_t)v52;
    v42 = v56;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v40, v43, v56, v40, v41);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v42);
    swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v27);
    v48 = v62;
    swift_storeEnumTagMultiPayload(v47, v63, 0);
  }
  v49 = (uint64_t)v51;
  sub_1004B84E0(v47, (uint64_t)v51, type metadata accessor for CRLAssetReferrerIdentifier);
  sub_1004B84E0(v49, v54, type metadata accessor for CRLAssetReferrerIdentifier);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v48);
}

Swift::Int UUID.UUIDCodingError.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void UUID.UUIDCodingError.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_1004BCFB4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_1004BCFF0()
{
  return 12383;
}

uint64_t sub_1004BCFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(12383, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

void sub_1004BD078(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1004BD084(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BDC74();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BD0AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BDC74();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BD0DC()
{
  _BYTE *v0;

  if (*v0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_1004BD0F8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004BE7B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004BD11C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BDC30();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BD144(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BDC30();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BD16C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574496472616F62;
  else
    return 0x6472616F62;
}

uint64_t sub_1004BD1A8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004BE870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004BD1CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BDBEC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BD1F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004BDBEC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BD21C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004BC9C8(a1, a2);
}

uint64_t sub_1004BD230(_QWORD *a1)
{
  return sub_1004BC55C(a1);
}

Swift::Int sub_1004BD244()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1004BC2D8((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1004BD284(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1004BC2D8((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1004BD2C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_referrerIdentifier, type metadata accessor for CRLAssetReferrerIdentifier);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_referrerAssetName
                                      + 8));
  v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_assetUUID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004BD33C()
{
  return type metadata accessor for CRLAssetReferenceDatabaseRow(0);
}

uint64_t type metadata accessor for CRLAssetReferenceDatabaseRow(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013DF670, (uint64_t)&nominal type descriptor for CRLAssetReferenceDatabaseRow);
}

uint64_t sub_1004BD358(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for CRLAssetReferrerIdentifier(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100EF4F60;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      result = swift_updateClassMetadata2(a1, 256, 4, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLAssetReferrerIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013DF780, (uint64_t)&nominal type descriptor for CRLAssetReferrerIdentifier);
}

uint64_t sub_1004BD408(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetUnsyncedChanges()
{
  return &type metadata for CRLAssetUnsyncedChanges;
}

uint64_t *sub_1004BD44C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = type metadata accessor for UUID(0);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v9((uint64_t *)((char *)a1 + v10), (uint64_t *)v12, v8);
      v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v14 = &v11[v13];
      v15 = &v12[v13];
      v16 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v16;
      swift_bridgeObjectRetain(v16);
      v17 = a1;
      v18 = a3;
      v19 = 1;
    }
    else
    {
      v21 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v22 = (uint64_t *)((char *)a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain(v24);
      v17 = a1;
      v18 = a3;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return a1;
}

uint64_t sub_1004BD574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  v4 = type metadata accessor for UUID(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v2, v4);
  if (EnumCaseMultiPayload == 1)
  {
    v2 += *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
    v5(v2, v4);
  }
  v6 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20) + 8);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1004BD5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for UUID(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v8(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
    v10 = a1 + v9;
    v11 = a2 + v9;
    v8(a1 + v9, v11, v7);
    v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v13 = (_QWORD *)(v10 + v12);
    v14 = (_QWORD *)(v11 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = 1;
  }
  else
  {
    v16 = 0;
    v17 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    v15 = v19[1];
    *v18 = *v19;
    v18[1] = v15;
  }
  swift_bridgeObjectRetain(v15);
  swift_storeEnumTagMultiPayload(a1, a3, v16);
  return a1;
}

uint64_t sub_1004BD6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLAssetReferrerIdentifier);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for UUID(0);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v10 = a1 + v9;
      v11 = a2 + v9;
      v8(a1 + v9, v11, v7);
      v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v13 = (_QWORD *)(v10 + v12);
      v14 = (_QWORD *)(v11 + v12);
      *v13 = *v14;
      v15 = v14[1];
      v13[1] = v15;
      v16 = 1;
    }
    else
    {
      v16 = 0;
      v17 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v18 = (_QWORD *)(a1 + v17);
      v19 = (_QWORD *)(a2 + v17);
      *v18 = *v19;
      v15 = v19[1];
      v18[1] = v15;
    }
    swift_bridgeObjectRetain(v15);
    swift_storeEnumTagMultiPayload(a1, a3, v16);
  }
  return a1;
}

uint64_t sub_1004BD80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = type metadata accessor for UUID(0);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
  v8(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
    v10 = a1 + v9;
    v11 = a2 + v9;
    v8(a1 + v9, v11, v7);
    v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(v10 + *(int *)(v12 + 20)) = *(_OWORD *)(v11 + *(int *)(v12 + 20));
    v13 = 1;
  }
  else
  {
    v14 = type metadata accessor for CRLBoardIdentifierStorage(0);
    v13 = 0;
    *(_OWORD *)(a1 + *(int *)(v14 + 20)) = *(_OWORD *)(a2 + *(int *)(v14 + 20));
  }
  swift_storeEnumTagMultiPayload(a1, a3, v13);
  return a1;
}

uint64_t sub_1004BD8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1004B84A4(a1, type metadata accessor for CRLAssetReferrerIdentifier);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v7 = type metadata accessor for UUID(0);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
      v10 = a1 + v9;
      v11 = a2 + v9;
      v8(a1 + v9, v11, v7);
      v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)(v10 + *(int *)(v12 + 20)) = *(_OWORD *)(v11 + *(int *)(v12 + 20));
      v13 = 1;
    }
    else
    {
      v14 = type metadata accessor for CRLBoardIdentifierStorage(0);
      v13 = 0;
      *(_OWORD *)(a1 + *(int *)(v14 + 20)) = *(_OWORD *)(a2 + *(int *)(v14 + 20));
    }
    swift_storeEnumTagMultiPayload(a1, a3, v13);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SyncEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1004BD9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_1004BDA08(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _BYTE v6[32];
  _QWORD v7[2];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    v7[0] = v4;
    result = type metadata accessor for UUID(319);
    if (v5 <= 0x3F)
    {
      swift_getTupleTypeLayout2(v6, *(_QWORD *)(result - 8) + 64, v4);
      v7[1] = v6;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v7);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004BDAA0()
{
  return sub_1004B7878(&qword_1013DF7B8, type metadata accessor for CRLAssetReferrerIdentifier, (uint64_t)"U)7");
}

unint64_t sub_1004BDAD0()
{
  unint64_t result;

  result = qword_1013DF7C0;
  if (!qword_1013DF7C0)
  {
    result = swift_getWitnessTable(&unk_100EF50A4, &type metadata for CRLAssetUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013DF7C0);
  }
  return result;
}

unint64_t sub_1004BDB18()
{
  unint64_t result;

  result = qword_1013DF7C8;
  if (!qword_1013DF7C8)
  {
    result = swift_getWitnessTable(&unk_100EF5074, &type metadata for CRLAssetUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013DF7C8);
  }
  return result;
}

unint64_t sub_1004BDB60()
{
  unint64_t result;

  result = qword_1013DF7D0;
  if (!qword_1013DF7D0)
  {
    result = swift_getWitnessTable(&unk_100EF50CC, &type metadata for CRLAssetUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013DF7D0);
  }
  return result;
}

unint64_t sub_1004BDBA8()
{
  unint64_t result;

  result = qword_1013DF7D8;
  if (!qword_1013DF7D8)
  {
    result = swift_getWitnessTable(&unk_100EF5104, &type metadata for CRLAssetUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_1013DF7D8);
  }
  return result;
}

unint64_t sub_1004BDBEC()
{
  unint64_t result;

  result = qword_1013DF7F8;
  if (!qword_1013DF7F8)
  {
    result = swift_getWitnessTable(&unk_100EF54FC, &type metadata for CRLAssetReferrerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF7F8);
  }
  return result;
}

unint64_t sub_1004BDC30()
{
  unint64_t result;

  result = qword_1013DF808;
  if (!qword_1013DF808)
  {
    result = swift_getWitnessTable(&unk_100EF54AC, &type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF808);
  }
  return result;
}

unint64_t sub_1004BDC74()
{
  unint64_t result;

  result = qword_1013DF810;
  if (!qword_1013DF810)
  {
    result = swift_getWitnessTable(&unk_100EF545C, &type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF810);
  }
  return result;
}

uint64_t sub_1004BDCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v4 = type metadata accessor for UUID(0);
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  __chkstk_darwin(v4);
  v67 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v63 = (uint64_t)&v62 - v9;
  __chkstk_darwin(v10);
  v65 = (uint64_t)&v62 - v11;
  __chkstk_darwin(v12);
  v66 = (uint64_t)&v62 - v13;
  __chkstk_darwin(v14);
  v16 = (char *)&v62 - v15;
  __chkstk_darwin(v17);
  v64 = (uint64_t)&v62 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v62 - v20;
  v22 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v62 - v26;
  v28 = sub_1004B804C(&qword_1013DF838);
  __chkstk_darwin(v28);
  v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (uint64_t)&v30[*(int *)(v31 + 48)];
  sub_1004B8460(a1, (uint64_t)v30, type metadata accessor for CRLAssetReferrerIdentifier);
  sub_1004B8460(a2, v32, type metadata accessor for CRLAssetReferrerIdentifier);
  if (swift_getEnumCaseMultiPayload(v30, v22) == 1)
  {
    sub_1004B8460((uint64_t)v30, (uint64_t)v24, type metadata accessor for CRLAssetReferrerIdentifier);
    v33 = *(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48);
    v34 = (uint64_t)&v24[v33];
    if (swift_getEnumCaseMultiPayload(v32, v22) == 1)
    {
      v35 = v32 + v33;
      v36 = v67;
      v37 = v68;
      v38 = v32;
      v39 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v67, v38, v69);
      v40 = v66;
      sub_1004B84E0(v34, v66, type metadata accessor for CRLBoardIdentifier);
      v41 = v65;
      sub_1004B84E0(v35, v65, type metadata accessor for CRLBoardIdentifier);
      v42 = static UUID.== infix(_:_:)(v24);
      v43 = *(void (**)(char *, uint64_t))(v37 + 8);
      v43(v24, v39);
      if ((v42 & 1) != 0)
      {
        v44 = static UUID.== infix(_:_:)(v40);
        v45 = v63;
        sub_1004B8460(v40, v63, type metadata accessor for CRLBoardIdentifier);
        v46 = v62;
        sub_1004B8460(v41, v62, type metadata accessor for CRLBoardIdentifier);
        if ((v44 & 1) != 0)
        {
          v47 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          v48 = *(_QWORD *)(v45 + v47);
          v49 = *(_QWORD *)(v45 + v47 + 8);
          v50 = (_QWORD *)(v46 + v47);
          v51 = v50[1];
          if (v48 == *v50 && v49 == v51)
          {
            sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
            sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
            v43(v36, v39);
LABEL_26:
            sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLAssetReferrerIdentifier);
            return 1;
          }
          v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, *v50, v51, 0);
          sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
          v43(v36, v39);
          if ((v61 & 1) != 0)
            goto LABEL_26;
          goto LABEL_20;
        }
        sub_1004B84A4(v46, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v45, type metadata accessor for CRLBoardIdentifier);
      }
      sub_1004B84A4(v41, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v40, type metadata accessor for CRLBoardIdentifier);
      v43(v36, v39);
LABEL_20:
      sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLAssetReferrerIdentifier);
      return 0;
    }
    sub_1004B84A4((uint64_t)&v24[v33], type metadata accessor for CRLBoardIdentifier);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v69);
  }
  else
  {
    sub_1004B8460((uint64_t)v30, (uint64_t)v27, type metadata accessor for CRLAssetReferrerIdentifier);
    if (swift_getEnumCaseMultiPayload(v32, v22) != 1)
    {
      sub_1004B84E0(v32, (uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
      v52 = static UUID.== infix(_:_:)(v27);
      v53 = v64;
      sub_1004B8460((uint64_t)v27, v64, type metadata accessor for CRLBoardIdentifier);
      sub_1004B8460((uint64_t)v21, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      if ((v52 & 1) != 0)
      {
        v54 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v55 = *(_QWORD *)(v53 + v54);
        v56 = *(_QWORD *)(v53 + v54 + 8);
        v57 = &v16[v54];
        v58 = *((_QWORD *)v57 + 1);
        if (v55 == *(_QWORD *)v57 && v56 == v58)
        {
          sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
          sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
          goto LABEL_26;
        }
        v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, *(_QWORD *)v57, v58, 0);
        sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
        if ((v60 & 1) != 0)
          goto LABEL_26;
      }
      else
      {
        sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v53, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
      }
      goto LABEL_20;
    }
    sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
  }
  sub_1004BE2BC((uint64_t)v30);
  return 0;
}

uint64_t sub_1004BE2BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013DF838);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004BE2FC(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1004BBBC8(result, a2);
  return result;
}

uint64_t sub_1004BE310(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

ValueMetadata *type metadata accessor for CRLAssetReferrerIdentifier.CodingKeys()
{
  return &type metadata for CRLAssetReferrerIdentifier.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLAssetReferrerIdentifier.BoardCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for CRLAssetReferrerIdentifier.BoardCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1004BE400 + 4 * byte_100EF4F20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1004BE420 + 4 * byte_100EF4F25[v4]))();
}

_BYTE *sub_1004BE400(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1004BE420(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004BE428(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004BE430(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1004BE438(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1004BE440(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetReferrerIdentifier.BoardCodingKeys()
{
  return &type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys;
}

uint64_t _s8Freeform26CRLAssetReferrerIdentifierO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004BE4A8 + 4 * byte_100EF4F2F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004BE4DC + 4 * byte_100EF4F2A[v4]))();
}

uint64_t sub_1004BE4DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BE4E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004BE4ECLL);
  return result;
}

uint64_t sub_1004BE4F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004BE500);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004BE504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004BE50C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetReferrerIdentifier.BoardItemCodingKeys()
{
  return &type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys;
}

unint64_t sub_1004BE52C()
{
  unint64_t result;

  result = qword_1013DF840;
  if (!qword_1013DF840)
  {
    result = swift_getWitnessTable(&unk_100EF52C4, &type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF840);
  }
  return result;
}

unint64_t sub_1004BE574()
{
  unint64_t result;

  result = qword_1013DF848;
  if (!qword_1013DF848)
  {
    result = swift_getWitnessTable(&unk_100EF537C, &type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF848);
  }
  return result;
}

unint64_t sub_1004BE5BC()
{
  unint64_t result;

  result = qword_1013DF850;
  if (!qword_1013DF850)
  {
    result = swift_getWitnessTable(&unk_100EF5434, &type metadata for CRLAssetReferrerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF850);
  }
  return result;
}

unint64_t sub_1004BE604()
{
  unint64_t result;

  result = qword_1013DF858;
  if (!qword_1013DF858)
  {
    result = swift_getWitnessTable(&unk_100EF52EC, &type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF858);
  }
  return result;
}

unint64_t sub_1004BE64C()
{
  unint64_t result;

  result = qword_1013DF860;
  if (!qword_1013DF860)
  {
    result = swift_getWitnessTable(&unk_100EF5314, &type metadata for CRLAssetReferrerIdentifier.BoardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF860);
  }
  return result;
}

unint64_t sub_1004BE694()
{
  unint64_t result;

  result = qword_1013DF868;
  if (!qword_1013DF868)
  {
    result = swift_getWitnessTable("=(7", &type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF868);
  }
  return result;
}

unint64_t sub_1004BE6DC()
{
  unint64_t result;

  result = qword_1013DF870;
  if (!qword_1013DF870)
  {
    result = swift_getWitnessTable(&unk_100EF525C, &type metadata for CRLAssetReferrerIdentifier.BoardItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF870);
  }
  return result;
}

unint64_t sub_1004BE724()
{
  unint64_t result;

  result = qword_1013DF878;
  if (!qword_1013DF878)
  {
    result = swift_getWitnessTable(&unk_100EF53A4, &type metadata for CRLAssetReferrerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF878);
  }
  return result;
}

unint64_t sub_1004BE76C()
{
  unint64_t result;

  result = qword_1013DF880;
  if (!qword_1013DF880)
  {
    result = swift_getWitnessTable(&unk_100EF53CC, &type metadata for CRLAssetReferrerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013DF880);
  }
  return result;
}

uint64_t sub_1004BE7B0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(12383, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease(0xE200000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(12639, 0xE200000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1004BE870(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6472616F62 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6472616F62, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6574496472616F62 && a2 == 0xE90000000000006DLL)
  {
    swift_bridgeObjectRelease(0xE90000000000006DLL);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6574496472616F62, 0xE90000000000006DLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1004BE974()
{
  qword_1013DF888 = 0x4028000000000000;
}

void sub_1004BE984()
{
  qword_1013DF890 = 0x4028000000000000;
}

UIFontWeight sub_1004BE994()
{
  UIFontWeight result;

  result = UIFontWeightBold;
  qword_1013DF898 = *(_QWORD *)&UIFontWeightBold;
  return result;
}

UIFontTextStyle sub_1004BE9AC()
{
  qword_1013DF8A0 = (uint64_t)UIFontTextStyleSubheadline;
  return UIFontTextStyleSubheadline;
}

id sub_1004BE9C4(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_labelColor, &qword_1013DF8A8);
}

void sub_1004BE9D8()
{
  qword_1013DF8B0 = 0;
}

void sub_1004BE9E4()
{
  qword_1013DF8B8 = 0x4028000000000000;
}

UIFontWeight sub_1004BE9F4()
{
  UIFontWeight result;

  result = UIFontWeightRegular;
  qword_1013DF8C0 = *(_QWORD *)&UIFontWeightRegular;
  return result;
}

UIFontTextStyle sub_1004BEA0C()
{
  qword_1013DF8C8 = (uint64_t)UIFontTextStyleFootnote;
  return UIFontTextStyleFootnote;
}

id sub_1004BEA24(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1013DF8D0);
}

id sub_1004BEA38(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

void sub_1004BEA78(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void *v5;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  void *v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  CGFloat v22;
  CGFloat v23;
  double v24;
  uint64_t v25;
  _BYTE v27[24];

  v11 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v11);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = (char *)objc_msgSend(v5, "movieItem");
  if (v14)
  {
    v15 = v14;
    v16 = *(_UNKNOWN *****)&v14[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v16 == &off_1013E07D8)
      v17 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v17 = 0;
    swift_beginAccess(v17 + qword_10147E7D8, v27, 32, 0);
    swift_retain(v16);
    v18 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v18);
    swift_endAccess(v27);
    swift_release(v16);
    v19 = (uint64_t *)&v13[*(int *)(v11 + 40)];
    v21 = *v19;
    v20 = v19[1];
    swift_bridgeObjectRetain(v20);
    sub_1004BF6D4((uint64_t)v13);

    if (v20)
    {
      if (qword_1013DC830 != -1)
        swift_once(&qword_1013DC830, sub_1004BE974);
      v22 = *(double *)&qword_1013DF888;
      if (qword_1013DC838 != -1)
        swift_once(&qword_1013DC838, sub_1004BE984);
      v23 = *(double *)&qword_1013DF890;
      if (qword_1013DC840 != -1)
        swift_once(&qword_1013DC840, sub_1004BE994);
      v24 = *(double *)&qword_1013DF898;
      if (qword_1013DC848 != -1)
        swift_once(&qword_1013DC848, sub_1004BE9AC);
      v25 = qword_1013DF8A0;
      if (qword_1013DC850 != -1)
        swift_once(&qword_1013DC850, sub_1004BE9C4);
      sub_1004BFB08(v21, v20, v25, (void *)qword_1013DF8A8, a1, 1, v23, v22, v24, a2, a3, a4, a5);
      swift_bridgeObjectRelease(v20);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1004BED88(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  void *v6;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  void *v17;
  _UNKNOWN ****v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  CGFloat v25;
  double v26;
  double v27;
  uint64_t v28;
  _BYTE v30[24];

  v13 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v13);
  v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = (char *)objc_msgSend(v6, "movieItem");
  if (v16)
  {
    v17 = v16;
    v18 = *(_UNKNOWN *****)&v16[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v18 == &off_1013E07D8)
      v19 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v19 = 0;
    swift_beginAccess(v19 + qword_10147E7D8, v30, 32, 0);
    swift_retain(v18);
    v20 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v20);
    swift_endAccess(v30);
    swift_release(v18);
    v21 = (uint64_t *)&v15[*(int *)(v13 + 44)];
    v23 = *v21;
    v22 = v21[1];
    swift_bridgeObjectRetain(v22);
    sub_1004BF6D4((uint64_t)v15);

    if (v22)
    {
      if (qword_1013DC858 != -1)
        swift_once(&qword_1013DC858, sub_1004BE9D8);
      v24 = *(double *)&qword_1013DF8B0;
      if (qword_1013DC860 != -1)
        swift_once(&qword_1013DC860, sub_1004BE9E4);
      v25 = *(double *)&qword_1013DF8B8;
      if (qword_1013DC868 != -1)
        swift_once(&qword_1013DC868, sub_1004BE9F4);
      v26 = *(double *)&qword_1013DF8C0;
      if (qword_1013DC870 != -1)
        swift_once(&qword_1013DC870, sub_1004BEA0C);
      v27 = v24 + a6;
      v28 = qword_1013DF8C8;
      if (qword_1013DC878 != -1)
        swift_once(&qword_1013DC878, sub_1004BEA24);
      sub_1004BFB08(v23, v22, v28, (void *)qword_1013DF8D0, a1, 0, v25, v27, v26, a2, a3, a4, a5);
      swift_bridgeObjectRelease(v22);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1004BF0AC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  char *v12;
  void *v13;
  _UNKNOWN ****v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id v22;
  double Width;
  double v24;
  double Height;
  const __CTLine *v26;
  _BYTE v28[24];
  CGRect v29;
  CGRect v30;

  v9 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = (char *)objc_msgSend(v4, "movieItem");
  if (v12)
  {
    v13 = v12;
    v14 = *(_UNKNOWN *****)&v12[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v14 == &off_1013E07D8)
      v15 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v15 = 0;
    swift_beginAccess(v15 + qword_10147E7D8, v28, 32, 0);
    swift_retain(v14);
    v16 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v16);
    swift_endAccess(v28);
    swift_release(v14);
    v17 = (uint64_t *)&v11[*(int *)(v9 + 44)];
    v19 = *v17;
    v18 = v17[1];
    swift_bridgeObjectRetain(v18);
    sub_1004BF6D4((uint64_t)v11);

    if (v18)
    {
      if (qword_1013DC868 != -1)
        swift_once(&qword_1013DC868, sub_1004BE9F4);
      v20 = *(double *)&qword_1013DF8C0;
      if (qword_1013DC870 != -1)
        swift_once(&qword_1013DC870, sub_1004BEA0C);
      v21 = qword_1013DF8C8;
      if (qword_1013DC878 != -1)
        swift_once(&qword_1013DC878, sub_1004BEA24);
      v22 = sub_1004BF710(v20, v19, v18, v21, (void *)qword_1013DF8D0, 0);
      swift_bridgeObjectRelease(v18);
      v29.origin.x = a1;
      v29.origin.y = a2;
      v29.size.width = a3;
      v29.size.height = a4;
      Width = CGRectGetWidth(v29);
      if (qword_1013DC860 != -1)
        swift_once(&qword_1013DC860, sub_1004BE9E4);
      v24 = Width - (*(double *)&qword_1013DF8B8 + *(double *)&qword_1013DF8B8);
      v30.origin.x = a1;
      v30.origin.y = a2;
      v30.size.width = a3;
      v30.size.height = a4;
      Height = CGRectGetHeight(v30);
      if (v24 <= 0.0 || Height <= 0.0)
      {

      }
      else
      {
        v26 = CTLineCreateWithAttributedString((CFAttributedStringRef)v22);
        CTLineGetBoundsWithOptions(v26, 0);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1004BF3C0(double a1, double a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  void *v9;
  _UNKNOWN ****v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  const __CFAttributedString *v18;
  double v19;
  const __CTLine *v20;
  _BYTE v22[24];

  v5 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v5);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (char *)objc_msgSend(v2, "movieItem");
  if (v8)
  {
    v9 = v8;
    v10 = *(_UNKNOWN *****)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v10 == &off_1013E07D8)
      v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v11 = 0;
    swift_beginAccess(v11 + qword_10147E7D8, v22, 32, 0);
    swift_retain(v10);
    v12 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v12);
    swift_endAccess(v22);
    swift_release(v10);
    v13 = (uint64_t *)&v7[*(int *)(v5 + 40)];
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain(v15);
    sub_1004BF6D4((uint64_t)v7);

    if (v15)
    {
      if (qword_1013DC840 != -1)
        swift_once(&qword_1013DC840, sub_1004BE994);
      v16 = *(double *)&qword_1013DF898;
      if (qword_1013DC848 != -1)
        swift_once(&qword_1013DC848, sub_1004BE9AC);
      v17 = qword_1013DF8A0;
      if (qword_1013DC850 != -1)
        swift_once(&qword_1013DC850, sub_1004BE9C4);
      v18 = (const __CFAttributedString *)sub_1004BF710(v16, v14, v15, v17, (void *)qword_1013DF8A8, 0);
      swift_bridgeObjectRelease(v15);
      if (qword_1013DC838 != -1)
        swift_once(&qword_1013DC838, sub_1004BE984);
      v19 = a1 - (*(double *)&qword_1013DF890 + *(double *)&qword_1013DF890);
      if (qword_1013DC830 != -1)
        swift_once(&qword_1013DC830, sub_1004BE974);
      if (v19 > 0.0 && a2 - *(double *)&qword_1013DF888 > 0.0)
      {
        v20 = CTLineCreateWithAttributedString(v18);
        CTLineGetBoundsWithOptions(v20, 0);

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004BF6D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLMovieItemAssetData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1004BF710(double a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t inited;
  unint64_t v15;
  NSString *v16;
  id v17;
  NSString *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSString *v23;
  id v24;
  id v25;
  unint64_t v26;
  id v27;
  NSString v28;
  Class isa;
  id v30;
  id v31;
  id v32;
  uint64_t v34;

  v10 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", a4);
  v11 = v10;
  if (UIFontWeightRegular != a1)
  {
    v12 = v10;
    v11 = sub_10097C6E8(a1);

  }
  v13 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v13, &v34);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v15 = sub_1004BF9E0();
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 64) = v15;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v16 = NSFontAttributeName;
  v17 = v11;
  v18 = NSForegroundColorAttributeName;
  v19 = objc_msgSend(a5, "CGColor");
  type metadata accessor for CGColor(0);
  v21 = v20;
  *(_QWORD *)(inited + 80) = v19;
  *(_QWORD *)(inited + 104) = v20;
  *(_QWORD *)(inited + 112) = NSBackgroundColorAttributeName;
  v22 = (void *)objc_opt_self(CRLColor);
  v23 = NSBackgroundColorAttributeName;
  v24 = objc_msgSend(v22, "clearColor");
  v25 = objc_msgSend(v24, "CGColor");

  *(_QWORD *)(inited + 144) = v21;
  *(_QWORD *)(inited + 120) = v25;
  v26 = sub_1008D4FE0(inited);
  v27 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(a3);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v26);
  v30 = objc_msgSend(v27, "initWithString:attributes:", v28, isa);

  if (a6)
  {
    objc_msgSend(a6, "setFont:", v17);
    objc_msgSend(v17, "pointSize");
    objc_msgSend(a6, "setFontSize:");
    v31 = objc_msgSend(a5, "CGColor");
    objc_msgSend(a6, "setForegroundColor:", v31);

    v32 = v30;
    objc_msgSend(a6, "setString:", v32);

  }
  return v30;
}

unint64_t sub_1004BF9E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101401710;
  if (!qword_101401710)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_101401710);
  }
  return result;
}

unint64_t sub_1004BFA1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DE6D0;
  if (!qword_1013DE6D0)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_100EF1874, v1);
    atomic_store(result, (unint64_t *)&qword_1013DE6D0);
  }
  return result;
}

double sub_1004BFA64(CFAttributedStringRef attrString, char a2, double a3, double a4)
{
  double height;
  const __CTLine *v8;
  double width;
  CGRect BoundsWithOptions;

  height = 0.0;
  if (a3 > 0.0 && a4 > 0.0)
  {
    v8 = CTLineCreateWithAttributedString(attrString);
    BoundsWithOptions = CTLineGetBoundsWithOptions(v8, 0);
    width = BoundsWithOptions.size.width;
    height = BoundsWithOptions.size.height;

    if (height >= a4)
    {
      return 0.0;
    }
    else if (width > a3 && (a2 & 1) != 0 && height + height < a4)
    {
      return height + height;
    }
  }
  return height;
}

double sub_1004BFB08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, CGContextRef c, char a6, CGFloat a7, CGFloat a8, double a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13)
{
  id v26;
  const __CFAttributedString *v27;
  double v28;
  double Height;
  double v30;
  char v31;
  char v32;
  CGRect v34;
  CGRect v35;

  CGContextSaveGState(c);
  v26 = objc_msgSend(objc_allocWithZone((Class)CATextLayer), "init");
  v27 = (const __CFAttributedString *)sub_1004BF710(a9, a1, a2, a3, a4, v26);
  v34.origin.x = a10;
  v34.origin.y = a11;
  v34.size.width = a12;
  v34.size.height = a13;
  v28 = CGRectGetWidth(v34) - (a7 + a7);
  v35.origin.x = a10;
  v35.origin.y = a11;
  v35.size.width = a12;
  v35.size.height = a13;
  Height = CGRectGetHeight(v35);
  v30 = sub_1004BFA64(v27, a6, v28, Height);
  v32 = v31;
  CGContextTranslateCTM(c, a7, a8);
  objc_msgSend(v26, "setWrapped:", v32 & 1);
  objc_msgSend(v26, "setTruncationMode:", kCATruncationEnd);
  objc_msgSend(v26, "setAlignmentMode:", kCAAlignmentCenter);
  objc_msgSend(v26, "setBounds:", a10, a11, v28, v30);
  objc_msgSend(v26, "drawInContext:", c);
  CGContextRestoreGState(c);

  return v30;
}

uint64_t sub_1004BFCC0(unint64_t a1)
{
  id v2;
  NSString v3;
  void *v4;
  id v5;
  Class isa;
  Class v7;
  NSString v8;
  id v9;
  Class v10;
  Class v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  __n128 v20;
  Class v21;
  void *v22;
  id v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v2, "userInterfaceLayoutDirection");

  v3 = String._bridgeToObjectiveC()();
  v4 = (void *)objc_opt_self(CABasicAnimation);
  v5 = objc_msgSend(v4, "animationWithKeyPath:", v3);

  if (a1 > 1)
  {
    v28 = a1;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for AnimationDirection, &v28, &type metadata for AnimationDirection, &type metadata for Int);
    __break(1u);
  }
  else
  {
    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v5, "setFromValue:", isa);

    v7 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v5, "setToValue:", v7);

    objc_msgSend(v5, "setDuration:", 0.35);
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v4, "animationWithKeyPath:", v8);

    v10 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v9, "setFromValue:", v10);

    v11 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v9, "setToValue:", v11);

    objc_msgSend(v9, "setDuration:", 0.35);
    LODWORD(v11) = objc_msgSend((id)objc_opt_self(CRLAccessibility), "shouldRemoveMovementAnimations");
    v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    if ((_DWORD)v11)
    {
      v13 = swift_allocObject(v12, 40, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v13 + 32) = v9;
      v28 = v13;
      specialized Array._endMutation()(v13);
      v14 = v28;
    }
    else
    {
      v15 = swift_allocObject(v12, 48, 7);
      *(_OWORD *)(v15 + 16) = xmmword_100EF5560;
      *(_QWORD *)(v15 + 32) = v5;
      *(_QWORD *)(v15 + 40) = v9;
      v28 = v15;
      specialized Array._endMutation()(v15);
      v14 = v28;
      v16 = v5;
    }
    v17 = objc_allocWithZone((Class)CAAnimationGroup);
    v18 = v9;
    v19 = objc_msgSend(v17, "init");
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v26 = v14;
      else
        v26 = v14 & 0xFFFFFFFFFFFFFF8;
      v27 = sub_1004C10C0();
      swift_bridgeObjectRetain(v14);
      _bridgeCocoaArray<A>(_:)(v26, v27);
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = swift_bridgeObjectRetain(v14);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v20);
      sub_1004C10C0();
    }
    swift_bridgeObjectRelease();
    sub_1004C10C0();
    v21 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "setAnimations:", v21, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v19, "setDuration:", 0.35);
    v22 = (void *)objc_opt_self(CAMediaTimingFunction);
    v23 = v19;
    v24 = objc_msgSend(v22, "functionWithName:", kCAMediaTimingFunctionEaseOut);
    objc_msgSend(v23, "setTimingFunction:", v24);

    return (uint64_t)v23;
  }
  return result;
}

_QWORD *sub_1004C00E0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

unint64_t StatusHUDType.init(rawValue:)(unint64_t a1)
{
  return sub_1004C0EDC(a1);
}

unint64_t sub_1004C0128@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1004C0EDC(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1004C0158(char a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  double v30;
  double v31;
  _QWORD *v32;
  void *v33;
  _QWORD *v34;
  id v35;
  __n128 v36;
  _QWORD aBlock[5];
  _QWORD *v38;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14 = __chkstk_darwin(v13).n128_u64[0];
  v16 = (char *)aBlock - v15;
  v17 = objc_msgSend(v3, "manager", v14);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v3, "hideTimer");
    objc_msgSend(v19, "invalidate");

    objc_msgSend(v3, "setHideTimer:", 0);
    if ((objc_msgSend(v3, "hiding") & 1) != 0)
    {
      swift_unknownObjectRelease(v18);
      return;
    }
    if ((a1 & 1) == 0)
    {
      v22 = objc_msgSend(v3, "timeStartedShowing");
      if (v22)
      {
        v23 = v22;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

        v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v24(v8, v12, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
        {
          v25 = ((uint64_t (*)(char *, char *, uint64_t))v24)(v16, v8, v9);
          v26 = fabs(Date.timeIntervalSinceNow.getter(v25));
          objc_msgSend(v3, "minimumShowDuration");
          if (v26 >= v27 || (objc_msgSend(v3, "minimumShowDuration"), v28 - v26 <= 0.0))
          {
            objc_msgSend(v18, "hideWithHudController:", v3);
            objc_msgSend(v3, "setHiding:", 1);
            v36 = swift_unknownObjectRelease(v18);
          }
          else
          {
            v29 = (void *)objc_opt_self(NSTimer);
            objc_msgSend(v3, "timeLeftToShow");
            v31 = v30;
            v32 = (_QWORD *)swift_allocObject(&unk_101267C88, 40, 7);
            v32[2] = a2;
            v32[3] = v18;
            v32[4] = v3;
            aBlock[4] = sub_1004C11A8;
            v38 = v32;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = *(_QWORD *)"";
            aBlock[2] = sub_1004C6194;
            aBlock[3] = &unk_101267CA0;
            v33 = _Block_copy(aBlock);
            v34 = v38;
            swift_unknownObjectRetain(v18);
            swift_unknownObjectRetain(v3);
            swift_release(v34);
            v35 = objc_msgSend(v29, "scheduledTimerWithTimeInterval:repeats:block:", 0, v33, v31);
            _Block_release(v33);
            objc_msgSend(v3, "setHideTimer:", v35);
            swift_unknownObjectRelease(v18);

          }
          (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v16, v9, v36);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      }
      sub_1004C113C((uint64_t)v8);
    }
    objc_msgSend(v18, "hideWithHudController:", v3);
    objc_msgSend(v3, "setHiding:", 1);
    swift_unknownObjectRelease(v18);
    return;
  }
  if (objc_msgSend(v3, "showing"))
  {
    if (qword_1013DD6E8 != -1)
      swift_once(&qword_1013DD6E8, sub_100A01318);
    swift_beginAccess(&static OS_os_log.crlStatusHUD, aBlock, 0, 0);
    v20 = (id)static OS_os_log.crlStatusHUD;
    v21 = static os_log_type_t.error.getter(v20);
    sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v21, "Trying to hide while showing without a manager", 46, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

id sub_1004C05B4(int a1, id a2, void *a3)
{
  id v4;

  objc_msgSend(a2, "hideWithHudController:");
  objc_msgSend(a3, "setHiding:", 1);
  v4 = objc_msgSend(a3, "hideTimer");
  objc_msgSend(v4, "invalidate");

  return objc_msgSend(a3, "setHideTimer:", 0);
}

void sub_1004C0630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  _QWORD *v8;
  uint64_t v9;

  if (!a1)
  {
    sub_1004C0798(0.0);
    objc_msgSend(v4, "setAnimating:", 1);
    objc_msgSend(v4, "updateForAppearance");
    v8 = (_QWORD *)swift_allocObject(&unk_101267B20, 56, 7);
    v8[2] = a4;
    v8[3] = v4;
    v8[4] = 0;
    v8[5] = a2;
    v8[6] = a3;
    swift_unknownObjectRetain(v4);
    sub_1004C0F54(a2, a3);
    sub_1004C0AC8(0, (uint64_t)sub_1004C0F68, (uint64_t)v8, a4);
LABEL_5:
    swift_release(v8);
    return;
  }
  if (a1 == 1)
  {
    sub_1004C0798(1.0);
    objc_msgSend(v4, "setAnimating:", 1);
    v8 = (_QWORD *)swift_allocObject(&unk_101267AF8, 56, 7);
    v8[2] = a4;
    v8[3] = v4;
    v8[4] = 1;
    v8[5] = a2;
    v8[6] = a3;
    swift_unknownObjectRetain(v4);
    sub_1004C0F54(a2, a3);
    sub_1004C0904(1uLL, (uint64_t)sub_1004C0F48, (uint64_t)v8, a4);
    goto LABEL_5;
  }
  v9 = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for AnimationDirection, &v9, &type metadata for AnimationDirection, &type metadata for Int);
  __break(1u);
}

void sub_1004C0798(double a1)
{
  void *v1;
  id v3;
  double v4;
  id v5;

  v3 = objc_msgSend(v1, "hudView");
  v5 = objc_msgSend(v3, "layer");

  *(float *)&v4 = a1;
  objc_msgSend(v5, "setOpacity:", v4);

}

double sub_1004C0814(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;
  double result;

  v11 = (_QWORD *)swift_allocObject(&unk_101267BE8, 48, 7);
  v11[2] = a6;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a2;
  sub_1004C0F54(a4, a5);
  swift_unknownObjectRetain(a2);
  sub_1004C0904(a3, (uint64_t)sub_1004C106C, (uint64_t)v11, a6);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

id sub_1004C08A4(uint64_t a1, void (*a2)(uint64_t, __n128), uint64_t a3, id a4)
{
  __n128 v8;

  if (a2)
  {
    v8 = swift_retain(a3);
    a2(a1, v8);
    sub_1004C1024((uint64_t)a2, a3);
  }
  return objc_msgSend(a4, "setAnimating:", 0);
}

void sub_1004C0904(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v10;
  id v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  double v17;
  _QWORD v18[5];
  _QWORD *v19;

  v5 = v4;
  v10 = objc_msgSend(v4, "hudView");
  v11 = objc_msgSend(v10, "layer");

  v12 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v12, "begin");
  v13 = (_QWORD *)swift_allocObject(&unk_101267C10, 56, 7);
  v13[2] = a4;
  v13[3] = v5;
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  v18[4] = sub_1004C10B0;
  v19 = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = *(_QWORD *)"";
  v18[2] = sub_1005D2FC0;
  v18[3] = &unk_101267C28;
  v14 = _Block_copy(v18);
  v15 = v19;
  swift_unknownObjectRetain(v5);
  sub_1004C0F54(a2, a3);
  objc_msgSend(v12, "setCompletionBlock:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  v16 = (void *)sub_1004BFCC0(a1);
  objc_msgSend(v11, "addAnimation:forKey:", v16, 0);

  objc_msgSend(v12, "commit");
  LODWORD(v17) = 1.0;
  if (!a1)
    goto LABEL_4;
  if (a1 == 1)
  {
    LODWORD(v17) = 0;
LABEL_4:
    objc_msgSend(v11, "setOpacity:", v17);

    return;
  }
  v18[0] = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for AnimationDirection, v18, &type metadata for AnimationDirection, &type metadata for Int);
  __break(1u);
}

void sub_1004C0AC8(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  void **v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;

  v5 = v4;
  v10 = objc_msgSend(v5, "containerView");
  v11 = objc_msgSend(v10, "superview");

  objc_msgSend(v11, "layoutIfNeeded");
  v12 = objc_msgSend(v5, "heightConstraint");
  if (!v12)
    goto LABEL_7;
  v13 = v12;
  if (!a1)
  {
    v14 = 56.0;
LABEL_6:
    objc_msgSend(v12, "setConstant:", v14);

LABEL_7:
    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_101267B48, 32, 7);
    *(_QWORD *)(v16 + 16) = a4;
    *(_QWORD *)(v16 + 24) = v5;
    v26 = sub_1004C0FAC;
    v27 = (_QWORD *)v16;
    v22 = _NSConcreteStackBlock;
    v23 = *(_QWORD *)"";
    v24 = sub_1005D2FC0;
    v25 = &unk_101267B60;
    v17 = _Block_copy(&v22);
    v18 = v27;
    swift_unknownObjectRetain(v5);
    swift_release(v18);
    v19 = (_QWORD *)swift_allocObject(&unk_101267B98, 48, 7);
    v19[2] = a4;
    v19[3] = a2;
    v19[4] = a3;
    v19[5] = v5;
    v26 = sub_1004C0FD0;
    v27 = v19;
    v22 = _NSConcreteStackBlock;
    v23 = *(_QWORD *)"";
    v24 = sub_1006084F4;
    v25 = &unk_101267BB0;
    v20 = _Block_copy(&v22);
    v21 = v27;
    swift_unknownObjectRetain(v5);
    sub_1004C0F54(a2, a3);
    swift_release(v21);
    objc_msgSend(v15, "animateWithDuration:delay:options:animations:completion:", 0x20000, v17, v20, 0.15, 0.0);
    _Block_release(v20);
    _Block_release(v17);
    return;
  }
  if (a1 == (void **)1)
  {
    v14 = 0.0;
    goto LABEL_6;
  }
  v22 = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for AnimationDirection, &v22, &type metadata for AnimationDirection, &type metadata for Int);
  __break(1u);
}

double sub_1004C0D08(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;
  double result;

  v11 = (_QWORD *)swift_allocObject(&unk_101267C60, 48, 7);
  v11[2] = a6;
  v11[3] = a2;
  v11[4] = a4;
  v11[5] = a5;
  swift_unknownObjectRetain(a2);
  sub_1004C0F54(a4, a5);
  sub_1004C0AC8(a3, (uint64_t)sub_1004C1130, (uint64_t)v11, a6);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

id sub_1004C0D98(int a1, id a2, void (*a3)(id, __n128), uint64_t a4)
{
  __n128 v7;

  objc_msgSend(a2, "setHiding:", 0);
  if (a3)
  {
    v7 = swift_retain(a4);
    a3(a2, v7);
    sub_1004C1024((uint64_t)a3, a4);
  }
  return objc_msgSend(a2, "setAnimating:", 0);
}

id sub_1004C0E08(void *a1, uint64_t a2, void (*a3)(void *, __n128), uint64_t a4)
{
  id result;
  __n128 v8;

  result = objc_msgSend(a1, "setShowing:", a2 == 0);
  if (a3)
  {
    v8 = swift_retain(a4);
    a3(a1, v8);
    return (id)sub_1004C1024((uint64_t)a3, a4);
  }
  return result;
}

void sub_1004C0E74(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "containerView");
  v2 = objc_msgSend(v1, "superview");

  objc_msgSend(v2, "layoutIfNeeded");
}

unint64_t sub_1004C0EDC(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

unint64_t sub_1004C0EF0()
{
  unint64_t result;

  result = qword_1013DF8D8;
  if (!qword_1013DF8D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for StatusHUDType, &type metadata for StatusHUDType);
    atomic_store(result, (unint64_t *)&qword_1013DF8D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusHUDType()
{
  return &type metadata for StatusHUDType;
}

uint64_t sub_1004C0F48(uint64_t a1)
{
  return sub_1004C0F74(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C0D08);
}

uint64_t sub_1004C0F54(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_1004C0F68(uint64_t a1)
{
  return sub_1004C0F74(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C0814);
}

uint64_t sub_1004C0F74(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_1004C0F88()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004C0FAC()
{
  uint64_t v0;

  sub_1004C0E74(*(void **)(v0 + 24));
}

uint64_t sub_1004C0FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004C0FC4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1004C0FD0()
{
  uint64_t v0;
  void (*v1)(uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t result;

  v1 = *(void (**)(uint64_t, __n128))(v0 + 24);
  if (v1)
  {
    v4 = v0 + 32;
    v2 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v4 + 8);
    v5 = swift_retain(v2);
    v1(v3, v5);
    return sub_1004C1024((uint64_t)v1, v2);
  }
  return result;
}

uint64_t sub_1004C1024(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_1004C1038()
{
  _QWORD *v0;

  if (v0[3])
    swift_release(v0[4]);
  swift_unknownObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

id sub_1004C106C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C08A4(a1, *(void (**)(uint64_t, __n128))(v1 + 24), *(_QWORD *)(v1 + 32), *(id *)(v1 + 40));
}

uint64_t sub_1004C107C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[3]);
  if (v0[5])
    swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

id sub_1004C10B0()
{
  uint64_t v0;

  return sub_1004C0E08(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(void *, __n128))(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t sub_1004C10C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DF8E0;
  if (!qword_1013DF8E0)
  {
    v1 = objc_opt_self(CAAnimation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013DF8E0);
  }
  return result;
}

uint64_t sub_1004C10FC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

id sub_1004C1130(int a1)
{
  uint64_t v1;

  return sub_1004C0D98(a1, *(id *)(v1 + 24), *(void (**)(id, __n128))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1004C113C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E04F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004C117C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1004C11A8(int a1)
{
  uint64_t v1;

  return sub_1004C05B4(a1, *(id *)(v1 + 24), *(void **)(v1 + 32));
}

ValueMetadata *type metadata accessor for AnimationDirection()
{
  return &type metadata for AnimationDirection;
}

unint64_t sub_1004C11C8()
{
  unint64_t result;

  result = qword_1013DF8E8;
  if (!qword_1013DF8E8)
  {
    result = swift_getWitnessTable(&unk_100EF56CC, &type metadata for AnimationDirection);
    atomic_store(result, (unint64_t *)&qword_1013DF8E8);
  }
  return result;
}

id sub_1004C1224(uint64_t a1, void *a2, void *a3)
{
  objc_class *v3;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  objc_super v21;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_strokePathCompactData;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_strokePathCompactData] = 0;
  v9 = OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_maskPath;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_maskPath] = 0;
  v10 = &v7[OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_id];
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  v13 = *(void **)&v7[v8];
  *(_QWORD *)&v7[v8] = a2;
  v14 = v7;
  v15 = a2;

  v16 = *(void **)&v7[v9];
  *(_QWORD *)&v7[v9] = a3;
  v17 = a3;

  v21.receiver = v14;
  v21.super_class = v3;
  v18 = objc_msgSendSuper2(&v21, "init");

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v18;
}

void sub_1004C1500(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  void (*v30)(__n128);
  id v31;
  __n128 v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  id v55;
  CKRecordID v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[24];
  char v72[24];
  int v73;
  char v74;

  v5 = v3;
  v73 = a3;
  v67 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v67);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  __chkstk_darwin(v12);
  v68 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v15 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v15)
    goto LABEL_20;
  v16 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
  v17 = swift_dynamicCastClass(v15, v16);
  if (!v17)
  {

LABEL_20:
    v11 = 47;
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemPKData.swift", 115, 2, 31, "Unable to retrieve freehand drawing shape item.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve freehand drawing shape item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemPKData.swift", 115, 2u, 31, (uint64_t)"Unable to retrieve freehand drawing shape item.", 47, 2u);
    goto LABEL_21;
  }
  v18 = v17;
  v19 = v15;
  sub_100DBEE64(v18, (uint64_t)&off_10127C5E0);

  if (v4)
  {

    return;
  }
  v65 = a1;
  v66 = v8;
  v20 = OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_strokePathCompactData;
  v21 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_strokePathCompactData);
  v22 = v21;
  sub_100B09FA4(v21);
  v23 = OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_maskPath;
  v24 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_maskPath);
  v25 = v24;
  sub_100B0A720(v24);
  v26 = v19;
  sub_100DB0D78(v18, (uint64_t)&off_10127C5E0, v73);

  v64 = v23;
  v27 = *(void **)(v5 + v20);
  if (v27)
  {
    v28 = v27;
    if (objc_msgSend(v28, "shouldSolveMath"))
    {
      v63 = v20;
      v29 = *(_QWORD *)(v18 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v30 = *(void (**)(__n128))(*(_QWORD *)v29 + 264);
      v62 = v26;
      v31 = v26;
      v32 = swift_retain(v29);
      v30(v32);
      v61 = v31;

      v33 = swift_release(v29);
      v35 = v69;
      v34 = v70;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v69 + 48))(v11, 1, v70, v33) == 1)
        goto LABEL_22;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v68, v11, v34);
      v36 = UUID._bridgeToObjectiveC()().super.isa;
      v37 = objc_msgSend(v65, "getBoardItemForUUID:", v36);

      if (v37)
      {
        v65 = v28;
        v38 = type metadata accessor for CRLFreehandDrawingItem(0);
        v39 = swift_dynamicCastClass(v37, v38);
        v40 = (uint64_t)v66;
        if (v39)
        {
          v41 = v39;
          v42 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
          v43 = *(_QWORD *)(v39 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v60 = type metadata accessor for CRLFreehandItemData(0);
          v44 = swift_dynamicCastClassUnconditional(v43, v60, 0, 0, 0) + qword_101481578;
          swift_beginAccess(v44, v72, 0, 0);
          sub_1004C1F6C(v44, v40);
          v45 = sub_1004B804C((uint64_t *)&unk_1013F5590);
          CRRegister.wrappedValue.getter(v45);
          LOBYTE(v44) = v71[0];
          sub_1004C1FB0(v40);
          if ((v44 & 1) != 0)
          {
            v46 = v5;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);

          }
          else
          {
            v51 = v37;
            sub_100DBEE64(v41, (uint64_t)&off_10127C5E0);

            v52 = *(_QWORD *)(v41 + v42);
            v53 = swift_dynamicCastClassUnconditional(v52, v60, 0, 0, 0) + qword_101481578;
            swift_beginAccess(v53, v71, 33, 0);
            v74 = 1;
            v54 = swift_retain(v52);
            CRRegister.wrappedValue.setter(&v74, v45, v54);
            swift_endAccess(v71);
            swift_release(v52);
            v55 = v51;
            sub_100DB0D78(v41, (uint64_t)&off_10127C5E0, v73);
            v46 = v5;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);

          }
          v20 = v63;
          v47 = v64;
          v26 = v62;
          goto LABEL_17;
        }

      }
      v11 = 41;
      sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemPKData.swift", 115, 2, 44, "Unable to retrieve freehand drawing item.", 41, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve freehand drawing item.");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemPKData.swift", 115, 2u, 44, (uint64_t)"Unable to retrieve freehand drawing item.", 41, 2u);
      while (1)
      {
LABEL_21:
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v56, *(Swift::String *)&v57);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
        __break(1u);
LABEL_22:
        sub_1004C1F2C(v11);
        v11 = 62;
        sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemPKData.swift", 115, 2, 40, "Unable to retrieve parent UUID of freehand drawing shape item.", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve parent UUID of freehand drawing shape item.");
        sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetFreehandDrawingShapeItemPKData.swift", 115, 2u, 40, (uint64_t)"Unable to retrieve parent UUID of freehand drawing shape item.", 62, 2u);
      }
    }
    v46 = v5;

  }
  else
  {
    v46 = v5;
  }
  v47 = v64;
LABEL_17:
  v48 = v46;
  v49 = *(void **)(v46 + v20);
  *(_QWORD *)(v46 + v20) = 0;

  v50 = *(void **)(v46 + v47);
  *(_QWORD *)(v48 + v47) = 0;

}

void sub_1004C1C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_1004C1CE8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetFreehandDrawingShapeItemPKData(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004C1D7C()
{
  return type metadata accessor for CRLCommandSetFreehandDrawingShapeItemPKData(0);
}

uint64_t type metadata accessor for CRLCommandSetFreehandDrawingShapeItemPKData(uint64_t a1)
{
  uint64_t result;

  result = qword_1013DF930;
  if (!qword_1013DF930)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetFreehandDrawingShapeItemPKData);
  return result;
}

uint64_t sub_1004C1DC0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

id sub_1004C1E38(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  objc_super v19;

  v7 = OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_strokePathCompactData;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_strokePathCompactData] = 0;
  v8 = OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_maskPath;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_maskPath] = 0;
  v9 = &v3[OBJC_IVAR____TtC8Freeform43CRLCommandSetFreehandDrawingShapeItemPKData_id];
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  v12 = *(void **)&v3[v7];
  *(_QWORD *)&v3[v7] = a2;
  v13 = v3;
  v14 = a2;

  v15 = *(void **)&v3[v8];
  *(_QWORD *)&v3[v8] = a3;
  v16 = a3;

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for CRLCommandSetFreehandDrawingShapeItemPKData(0);
  v17 = objc_msgSendSuper2(&v19, "init");
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v17;
}

uint64_t sub_1004C1F2C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004C1F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C1FB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLChunkedRealTimeMessageBufferError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLChunkedRealTimeMessageBufferError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1004C20C8 + 4 * byte_100EF5755[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004C20FC + 4 * byte_100EF5750[v4]))();
}

uint64_t sub_1004C20FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004C2104(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004C210CLL);
  return result;
}

uint64_t sub_1004C2118(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004C2120);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1004C2124(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004C212C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1004C2138(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLChunkedRealTimeMessageBufferError()
{
  return &type metadata for CRLChunkedRealTimeMessageBufferError;
}

unint64_t sub_1004C2154()
{
  unint64_t result;

  result = qword_1013DF940;
  if (!qword_1013DF940)
  {
    result = swift_getWitnessTable(&unk_100EF57E8, &type metadata for CRLChunkedRealTimeMessageBufferError);
    atomic_store(result, (unint64_t *)&qword_1013DF940);
  }
  return result;
}

BOOL sub_1004C2198(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t *sub_1004C21B8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

id sub_1004C21D4(void *a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  Swift::String v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t ObjectType;
  objc_super v16;
  _BYTE v17[880];

  v4 = a1;
  sub_100C8E820(v4, 0, (uint64_t)v17);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v17, v5);
  v6 = (objc_class *)type metadata accessor for CRLCommandSetDefaultShapeInsertionPreset();
  v7 = objc_allocWithZone(v6);
  v8 = OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_actionString;
  v9 = qword_1013DC880;
  v10 = (char *)v7;
  if (v9 != -1)
    swift_once(&qword_1013DC880, sub_1004C34DC);
  v11 = &v10[v8];
  v12 = unk_1013DF950;
  *(_QWORD *)v11 = qword_1013DF948;
  *((_QWORD *)v11 + 1) = v12;
  sub_1004C4938((uint64_t)v17, (uint64_t)&v10[OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_shapeStyle], &qword_1013F1540);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_shapeType] = a2;
  swift_bridgeObjectRetain(v12);

  v16.receiver = v10;
  v16.super_class = v6;
  v13 = objc_msgSendSuper2(&v16, "init");

  ObjectType = swift_getObjectType(v2);
  swift_deallocPartialClassInstance(v2, ObjectType, 920, 7);
  return v13;
}

void sub_1004C2320(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  _BYTE v12[880];
  _BYTE v13[24];
  _QWORD v14[110];

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_shapeType);
    if (v7 == 2 || v7 == 1)
    {
      v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      sub_1004C4938(v3 + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_shapeStyle, (uint64_t)v14, &qword_1013F1540);
      swift_beginAccess(v8 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v13, 33, 0);
      type metadata accessor for CRLBoardCRDTData(0);
      sub_1004C4938((uint64_t)v14, (uint64_t)v12, &qword_1013F1540);
      type metadata accessor for CRLBoardInsertStyleData(0);
    }
    else
    {
      if (v7)
      {
        v14[0] = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_shapeType);
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLCommandSetDefaultShapeInsertionPreset.ShapeType, v14, &type metadata for CRLCommandSetDefaultShapeInsertionPreset.ShapeType, &type metadata for Int);
        __break(1u);
        return;
      }
      v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      sub_1004C4938(v3 + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_shapeStyle, (uint64_t)v14, &qword_1013F1540);
      swift_beginAccess(v8 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v13, 33, 0);
      type metadata accessor for CRLBoardCRDTData(0);
      sub_1004C4938((uint64_t)v14, (uint64_t)v12, &qword_1013F1540);
    }
    v9 = swift_retain(v8);
    sub_1004C4D78(v14, sub_1004C4F6C, v9);
    v10 = sub_1004B804C((uint64_t *)&unk_1013DFA80);
    CRRegister.wrappedValue.setter(v12, v10, v11);
    swift_endAccess(v13);
    swift_release(v8);
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
  }
}

double sub_1004C25D8()
{
  uint64_t v0;
  __n128 v1;
  double result;
  _BYTE v3[880];

  sub_1004C4938(v0 + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_shapeStyle, (uint64_t)v3, &qword_1013F1540);
  sub_1004C4D78(v3, sub_1004C497C, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_actionString
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_1004C2638()
{
  return sub_1004C3370(type metadata accessor for CRLCommandSetDefaultShapeInsertionPreset);
}

uint64_t type metadata accessor for CRLCommandSetDefaultShapeInsertionPreset()
{
  return objc_opt_self(_TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset);
}

uint64_t sub_1004C26C8(uint64_t a1, uint64_t a2)
{
  return sub_1004C34A4(a1, a2, &OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultShapeInsertionPreset_actionString);
}

void sub_1004C27F8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  _BYTE v11[888];
  _BYTE v12[24];
  _BYTE v13[888];

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    sub_1004C4938(v3 + OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_stickyStyle, (uint64_t)v13, &qword_1013DFA70);
    swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v12, 33, 0);
    type metadata accessor for CRLBoardCRDTData(0);
    sub_1004C4938((uint64_t)v13, (uint64_t)v11, &qword_1013DFA70);
    type metadata accessor for CRLBoardInsertStyleData(0);
    v8 = swift_retain(v7);
    sub_1004C4254(v13, sub_1004C444C, v8);
    v9 = sub_1004B804C(&qword_1013DFA78);
    CRRegister.wrappedValue.setter(v11, v9, v10);
    swift_endAccess(v12);
    swift_release(v7);
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
  }
}

double sub_1004C2974()
{
  uint64_t v0;
  __n128 v1;
  double result;
  _BYTE v3[888];

  sub_1004C4938(v0 + OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_stickyStyle, (uint64_t)v3, &qword_1013DFA70);
  sub_1004C4254(v3, sub_1004C3D60, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_actionString
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_1004C29D4()
{
  return sub_1004C3370(type metadata accessor for CRLCommandSetDefaultStickyNoteInsertionPreset);
}

uint64_t type metadata accessor for CRLCommandSetDefaultStickyNoteInsertionPreset()
{
  return objc_opt_self(_TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset);
}

uint64_t sub_1004C2A64(uint64_t a1, uint64_t a2)
{
  return sub_1004C34A4(a1, a2, &OBJC_IVAR____TtC8Freeform45CRLCommandSetDefaultStickyNoteInsertionPreset_actionString);
}

id sub_1004C2A70(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  char *v8;
  __n128 v9;
  void *v10;
  Swift::String v11;
  float v12;
  Swift::String v13;
  objc_class *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t ObjectType;
  objc_super v24;
  _QWORD __src[47];
  _BYTE __dst[376];
  void *v27;
  _BYTE v28[128];
  _BYTE v29[232];

  v2 = v1;
  v3 = a1;
  v4 = (void *)sub_100A14240();

  if (v4)
  {
    sub_1008BF750(v4, (uint64_t)__dst);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__dst, v5);
  }
  else
  {
    sub_1004C39E8((uint64_t)__dst);
  }
  sub_1004C4938((uint64_t)__dst, (uint64_t)v29, (uint64_t *)&unk_1013F1530);
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v7 = *(uint64_t (**)(__n128))(*(_QWORD *)v6 + 384);
  v8 = v3;
  v9 = swift_retain(v6);
  v10 = (void *)v7(v9);

  swift_release(v6);
  if (v10)
  {
    sub_10080C2C4(v10, (uint64_t)__dst);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__dst, v11);
  }
  else
  {
    sub_1004C3A10(__dst);
  }
  sub_1004C4938((uint64_t)__dst, (uint64_t)v28, (uint64_t *)&unk_1013F02D0);
  v12 = sub_1008CF3C8();
  sub_1004C4938((uint64_t)v29, (uint64_t)__src, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v28, (uint64_t)&__src[29], (uint64_t *)&unk_1013F02D0);
  *(float *)&__src[45] = v12;
  __src[46] = &_swiftEmptyDictionarySingleton;
  memcpy(__dst, __src, sizeof(__dst));
  v27 = &_swiftEmptyDictionarySingleton;
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__dst, v13);
  v14 = (objc_class *)type metadata accessor for CRLCommandSetDefaultImageInsertionPreset();
  v15 = objc_allocWithZone(v14);
  v16 = OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultImageInsertionPreset_actionString;
  v17 = qword_1013DC880;
  v18 = (char *)v15;
  if (v17 != -1)
    swift_once(&qword_1013DC880, sub_1004C34DC);
  v19 = &v18[v16];
  v20 = unk_1013DF950;
  *(_QWORD *)v19 = qword_1013DF948;
  *((_QWORD *)v19 + 1) = v20;
  sub_1004C4938((uint64_t)__dst, (uint64_t)&v18[OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultImageInsertionPreset_imageStyle], &qword_1013DFA60);
  swift_bridgeObjectRetain(v20);

  v24.receiver = v18;
  v24.super_class = v14;
  v21 = objc_msgSendSuper2(&v24, "init");

  ObjectType = swift_getObjectType(v2);
  swift_deallocPartialClassInstance(v2, ObjectType, 416, 7);
  return v21;
}

void sub_1004C2CBC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v10[384];
  _BYTE v11[24];
  _BYTE v12[384];

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    sub_1004C4938(v3 + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultImageInsertionPreset_imageStyle, (uint64_t)v12, &qword_1013DFA60);
    swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v11, 33, 0);
    type metadata accessor for CRLBoardCRDTData(0);
    sub_1004C4938((uint64_t)v12, (uint64_t)v10, &qword_1013DFA60);
    type metadata accessor for CRLBoardInsertStyleData(0);
    swift_retain(v7);
    sub_1004C3794((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3BC4);
    v8 = sub_1004B804C(&qword_1013DFA68);
    CRRegister.wrappedValue.setter(v10, v8, v9);
    swift_endAccess(v11);
    swift_release(v7);
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
  }
}

double sub_1004C2E38()
{
  return sub_1004C330C(&OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultImageInsertionPreset_imageStyle, &qword_1013DFA60, &OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultImageInsertionPreset_actionString);
}

id sub_1004C2E54()
{
  return sub_1004C3370(type metadata accessor for CRLCommandSetDefaultImageInsertionPreset);
}

uint64_t type metadata accessor for CRLCommandSetDefaultImageInsertionPreset()
{
  return objc_opt_self(_TtC8Freeform40CRLCommandSetDefaultImageInsertionPreset);
}

uint64_t sub_1004C2E9C(uint64_t a1, uint64_t a2)
{
  return sub_1004C34A4(a1, a2, &OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultImageInsertionPreset_actionString);
}

id sub_1004C2EA8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  char *v9;
  __n128 v10;
  void *v11;
  Swift::String v12;
  _UNKNOWN ****v13;
  _UNKNOWN ****v14;
  uint64_t v15;
  int v16;
  Swift::String v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t ObjectType;
  objc_super v28;
  _QWORD __src[47];
  _BYTE __dst[376];
  void *v31;
  _BYTE v32[128];
  _BYTE v33[232];

  v2 = v1;
  v3 = a1;
  v4 = (void *)sub_100A14240();

  if (v4)
  {
    sub_1008BF750(v4, (uint64_t)__dst);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__dst, v5);
  }
  else
  {
    sub_1004C39E8((uint64_t)__dst);
  }
  sub_1004C4938((uint64_t)__dst, (uint64_t)v33, (uint64_t *)&unk_1013F1530);
  v6 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v7 + 384);
  v9 = v3;
  v10 = swift_retain(v7);
  v11 = (void *)v8(v10);

  swift_release(v7);
  if (v11)
  {
    sub_10080C2C4(v11, (uint64_t)__dst);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__dst, v12);
  }
  else
  {
    sub_1004C3A10(__dst);
  }
  sub_1004C4938((uint64_t)__dst, (uint64_t)v32, (uint64_t *)&unk_1013F02D0);
  v13 = *(_UNKNOWN *****)&v3[v6];
  if (*v13 == &off_1013E07D8)
    v14 = v13;
  else
    v14 = 0;
  swift_beginAccess((char *)v14 + qword_10147E7D8, __dst, 32, 0);
  type metadata accessor for CRLMovieItemCRDTData(0);
  swift_retain(v13);
  v15 = sub_1004B804C(&qword_1013DFA58);
  CRRegister.wrappedValue.getter(v15);
  v16 = __src[0];
  swift_endAccess(__dst);
  swift_release(v13);
  swift_bridgeObjectRelease(__src[1]);
  sub_1004C4938((uint64_t)v33, (uint64_t)__src, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v32, (uint64_t)&__src[29], (uint64_t *)&unk_1013F02D0);
  LODWORD(__src[45]) = v16;
  __src[46] = &_swiftEmptyDictionarySingleton;
  memcpy(__dst, __src, sizeof(__dst));
  v31 = &_swiftEmptyDictionarySingleton;
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__dst, v17);
  v18 = (objc_class *)type metadata accessor for CRLCommandSetDefaultMovieInsertionPreset();
  v19 = objc_allocWithZone(v18);
  v20 = OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultMovieInsertionPreset_actionString;
  v21 = qword_1013DC880;
  v22 = (char *)v19;
  if (v21 != -1)
    swift_once(&qword_1013DC880, sub_1004C34DC);
  v23 = &v22[v20];
  v24 = unk_1013DF950;
  *(_QWORD *)v23 = qword_1013DF948;
  *((_QWORD *)v23 + 1) = v24;
  sub_1004C4938((uint64_t)__dst, (uint64_t)&v22[OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultMovieInsertionPreset_movieStyle], &qword_1013DFA48);
  swift_bridgeObjectRetain(v24);

  v28.receiver = v22;
  v28.super_class = v18;
  v25 = objc_msgSendSuper2(&v28, "init");

  ObjectType = swift_getObjectType(v2);
  swift_deallocPartialClassInstance(v2, ObjectType, 416, 7);
  return v25;
}

void sub_1004C3174(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _BYTE v10[384];
  _BYTE v11[24];
  _BYTE v12[384];

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    sub_1004C4938(v3 + OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultMovieInsertionPreset_movieStyle, (uint64_t)v12, &qword_1013DFA48);
    swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v11, 33, 0);
    type metadata accessor for CRLBoardCRDTData(0);
    sub_1004C4938((uint64_t)v12, (uint64_t)v10, &qword_1013DFA48);
    type metadata accessor for CRLBoardInsertStyleData(0);
    swift_retain(v7);
    sub_1004C3794((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3BC4);
    v8 = sub_1004B804C(&qword_1013DFA50);
    CRRegister.wrappedValue.setter(v10, v8, v9);
    swift_endAccess(v11);
    swift_release(v7);
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
  }
}

double sub_1004C32F0()
{
  return sub_1004C330C(&OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultMovieInsertionPreset_movieStyle, &qword_1013DFA48, &OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultMovieInsertionPreset_actionString);
}

double sub_1004C330C(_QWORD *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  double result;
  _BYTE v6[392];

  sub_1004C4938(v3 + *a1, (uint64_t)v6, a2);
  sub_1004C3794((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3A28);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v3 + *a3 + 8)).n128_u64[0];
  return result;
}

id sub_1004C3364()
{
  return sub_1004C3370(type metadata accessor for CRLCommandSetDefaultMovieInsertionPreset);
}

id sub_1004C3370(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

double sub_1004C33BC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4, _QWORD *a5)
{
  double result;
  _BYTE v8[384];

  sub_1004C4938(a1 + *a3, (uint64_t)v8, a4);
  sub_1004C3794((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3A28);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *a5 + 8)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for CRLCommandSetDefaultMovieInsertionPreset()
{
  return objc_opt_self(_TtC8Freeform40CRLCommandSetDefaultMovieInsertionPreset);
}

ValueMetadata *type metadata accessor for CRLCommandSetDefaultShapeInsertionPreset.ShapeType()
{
  return &type metadata for CRLCommandSetDefaultShapeInsertionPreset.ShapeType;
}

unint64_t sub_1004C3454()
{
  unint64_t result;

  result = qword_1013DFA40;
  if (!qword_1013DFA40)
  {
    result = swift_getWitnessTable(&unk_100EF599C, &type metadata for CRLCommandSetDefaultShapeInsertionPreset.ShapeType);
    atomic_store(result, (unint64_t *)&qword_1013DFA40);
  }
  return result;
}

uint64_t sub_1004C3498(uint64_t a1, uint64_t a2)
{
  return sub_1004C34A4(a1, a2, &OBJC_IVAR____TtC8Freeform40CRLCommandSetDefaultMovieInsertionPreset_actionString);
}

uint64_t sub_1004C34A4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;

  v4 = (uint64_t *)(*v3 + *a3);
  v5 = *v4;
  swift_bridgeObjectRetain(v4[1]);
  return v5;
}

void sub_1004C34DC()
{
  id v0;
  NSString v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  qword_1013DF948 = v5;
  unk_1013DF950 = v7;
}

double sub_1004C35DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  double result;

  if (a13)
  {
    swift_bridgeObjectRelease(a13);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a10);
    swift_bridgeObjectRelease(a12);
    sub_1004C36BC(a19, a20, a21);
    swift_bridgeObjectRelease(a24);
    sub_1004C36E8(a25, a26, a27, a28);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a29).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004C36BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_1004C36E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_1004C3718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t result;

  result = a11;
  if (a11)
  {
    swift_bridgeObjectRelease(a11);
    swift_bridgeObjectRelease(a16);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a10);
    return swift_bridgeObjectRelease(a15);
  }
  return result;
}

uint64_t sub_1004C3794(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v11 = *(_OWORD *)(a1 + 336);
  v12 = *(_OWORD *)(a1 + 352);
  v9 = *(_OWORD *)(a1 + 304);
  v10 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    *(_QWORD *)(a1 + 368),
    *(_QWORD *)(a1 + 376));
  return a1;
}

uint64_t sub_1004C3830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t result;

  if (a13)
  {
    swift_bridgeObjectRetain(a12);
    swift_bridgeObjectRetain(a13);
    swift_bridgeObjectRetain(a7);
    swift_bridgeObjectRetain(a10);
    sub_1004C3910(a19, a20, a21);
    swift_bridgeObjectRetain(a24);
    sub_1004C393C(a25, a26, a27, a28);
    return swift_bridgeObjectRetain(a29);
  }
  return result;
}

uint64_t sub_1004C3910(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain(result);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

uint64_t sub_1004C393C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_1004C396C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t result;

  if (a11)
  {
    swift_bridgeObjectRetain(a15);
    swift_bridgeObjectRetain(a16);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a10);
    return swift_bridgeObjectRetain(a11);
  }
  return result;
}

double sub_1004C39E8(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 224) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_1004C3A10(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_1004C3A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  double result;

  if (a47)
  {
    sub_1004C35DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29);
    sub_1004C3718(a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    swift_bridgeObjectRelease(a48);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a47).n128_u64[0];
  }
  return result;
}

double sub_1004C3BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  double result;

  if (a47)
  {
    sub_1004C3830(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29);
    sub_1004C396C(a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45);
    swift_bridgeObjectRetain(a47);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a48).n128_u64[0];
  }
  return result;
}

double sub_1004C3D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t a65;
  uint64_t a66;
  uint64_t a67;
  uint64_t a68;
  uint64_t a69;
  uint64_t a70;
  uint64_t a71;
  uint64_t a72;
  unint64_t v72;
  double result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;

  v72 = STACK[0x530];
  if (STACK[0x530])
  {
    v93 = STACK[0x650];
    v94 = STACK[0x648];
    v95 = STACK[0x628];
    v88 = STACK[0x5D8];
    v89 = STACK[0x5E0];
    v86 = STACK[0x5C8];
    v87 = STACK[0x5D0];
    v84 = STACK[0x5B8];
    v85 = STACK[0x5C0];
    v91 = STACK[0x5A8];
    v92 = STACK[0x5B0];
    v90 = STACK[0x5A0];
    v82 = STACK[0x590];
    v83 = STACK[0x598];
    v80 = STACK[0x580];
    v81 = STACK[0x588];
    v78 = STACK[0x548];
    v79 = STACK[0x578];
    v76 = STACK[0x538];
    v77 = STACK[0x540];
    v75 = STACK[0x528];
    v74 = STACK[0x520];
    sub_1004C35DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29);
    sub_1004C4174(a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    sub_1004C3718(a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59);
    sub_1004C41DC(a61, a62, a63, a64, a65, a66, a67);
    sub_1004C41DC(a68, a69, a70, a71, a72, v74, v75);
    swift_bridgeObjectRelease(v72);
    sub_1004C4218(v76, v77, v78);
    sub_1004C4174(v79, v80, v81, v82, v83, v90, v91, v92, v84, v85, v86, v87, v88, v89);
    swift_bridgeObjectRelease(v93);
    swift_bridgeObjectRelease(v94);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v95).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004C4174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;

  result = a13;
  if (a13)
  {
    swift_bridgeObjectRelease(a13);
    swift_bridgeObjectRelease(a14);
    swift_bridgeObjectRelease(a7);
    swift_bridgeObjectRelease(a10);
    return swift_bridgeObjectRelease(a12);
  }
  return result;
}

uint64_t sub_1004C41DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;

  if (a6)
  {
    v8 = result;
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a7);
    return swift_bridgeObjectRelease(v8);
  }
  return result;
}

void sub_1004C4218(uint64_t a1, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_1004C4230(a1, a2, a3 & 1);
}

void sub_1004C4230(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_bridgeObjectRelease(a2);
  else
    sub_1004C4240(a1, a2);
}

uint64_t sub_1004C4240(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRelease(a2);
  return result;
}

#error "1004C4424: call analysis failed (funcsize=126)"

uint64_t sub_1004C444C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t a65;
  uint64_t a66;
  uint64_t a67;
  uint64_t a68;
  uint64_t a69;
  uint64_t a70;
  uint64_t a71;
  uint64_t a72;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;

  v72 = STACK[0x530];
  if (STACK[0x530])
  {
    v93 = STACK[0x648];
    v94 = STACK[0x650];
    v87 = STACK[0x5D8];
    v88 = STACK[0x5E0];
    v85 = STACK[0x5C8];
    v86 = STACK[0x5D0];
    v83 = STACK[0x5B8];
    v84 = STACK[0x5C0];
    v91 = STACK[0x5B0];
    v92 = STACK[0x628];
    v89 = STACK[0x5A0];
    v90 = STACK[0x5A8];
    v81 = STACK[0x590];
    v82 = STACK[0x598];
    v79 = STACK[0x580];
    v80 = STACK[0x588];
    v77 = STACK[0x548];
    v78 = STACK[0x578];
    v75 = STACK[0x538];
    v76 = STACK[0x540];
    v74 = STACK[0x528];
    v73 = STACK[0x520];
    sub_1004C3830(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29);
    sub_1004C485C(a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    sub_1004C396C(a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59);
    sub_1004C48C4(a61, a62, a63, a64, a65, a66, a67);
    sub_1004C48C4(a68, a69, a70, a71, a72, v73, v74);
    swift_bridgeObjectRetain(v72);
    sub_1004C48FC(v75, v76, v77);
    sub_1004C485C(v78, v79, v80, v81, v82, v89, v90, v91, v83, v84, v85, v86, v87, v88);
    swift_bridgeObjectRetain(v92);
    swift_bridgeObjectRetain(v93);
    return swift_bridgeObjectRetain(v94);
  }
  return result;
}

uint64_t sub_1004C485C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result;

  if (a13)
  {
    swift_bridgeObjectRetain(a12);
    swift_bridgeObjectRetain(a13);
    swift_bridgeObjectRetain(a14);
    swift_bridgeObjectRetain(a7);
    return swift_bridgeObjectRetain(a10);
  }
  return result;
}

uint64_t sub_1004C48C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a6)
  {
    swift_bridgeObjectRetain(result);
    swift_bridgeObjectRetain(a6);
    return swift_bridgeObjectRetain(a7);
  }
  return result;
}

uint64_t sub_1004C48FC(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1004C4914(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1004C4914(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  else
    return sub_1004C4924(a1, a2);
}

uint64_t sub_1004C4924(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1004C4938(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1004B804C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_1004C497C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t a65;
  uint64_t a66;
  uint64_t a67;
  uint64_t a68;
  uint64_t a69;
  uint64_t a70;
  uint64_t a71;
  uint64_t a72;
  unint64_t v72;
  double result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;

  v72 = STACK[0x520];
  if (STACK[0x520])
  {
    v93 = STACK[0x638];
    v94 = STACK[0x618];
    v88 = STACK[0x5C8];
    v89 = STACK[0x5D0];
    v86 = STACK[0x5B8];
    v87 = STACK[0x5C0];
    v84 = STACK[0x5A8];
    v85 = STACK[0x5B0];
    v91 = STACK[0x598];
    v92 = STACK[0x5A0];
    v90 = STACK[0x590];
    v82 = STACK[0x580];
    v83 = STACK[0x588];
    v80 = STACK[0x570];
    v81 = STACK[0x578];
    v78 = STACK[0x538];
    v79 = STACK[0x568];
    v76 = STACK[0x528];
    v77 = STACK[0x530];
    v74 = STACK[0x510];
    v75 = STACK[0x518];
    sub_1004C35DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29);
    sub_1004C4174(a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    sub_1004C3718(a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59);
    sub_1004C41DC(a61, a62, a63, a64, a65, a66, a67);
    sub_1004C41DC(a68, a69, a70, a71, a72, v74, v75);
    swift_bridgeObjectRelease(v72);
    sub_1004C4218(v76, v77, v78);
    sub_1004C4174(v79, v80, v81, v82, v83, v90, v91, v92, v84, v85, v86, v87, v88, v89);
    swift_bridgeObjectRelease(v93);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v94).n128_u64[0];
  }
  return result;
}

#error "1004C4F44: call analysis failed (funcsize=125)"

uint64_t sub_1004C4F6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t a65;
  uint64_t a66;
  uint64_t a67;
  uint64_t a68;
  uint64_t a69;
  uint64_t a70;
  uint64_t a71;
  uint64_t a72;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;

  v72 = STACK[0x520];
  if (STACK[0x520])
  {
    v92 = STACK[0x618];
    v93 = STACK[0x638];
    v87 = STACK[0x5C8];
    v88 = STACK[0x5D0];
    v85 = STACK[0x5B8];
    v86 = STACK[0x5C0];
    v83 = STACK[0x5A8];
    v84 = STACK[0x5B0];
    v90 = STACK[0x598];
    v91 = STACK[0x5A0];
    v89 = STACK[0x590];
    v81 = STACK[0x580];
    v82 = STACK[0x588];
    v79 = STACK[0x570];
    v80 = STACK[0x578];
    v77 = STACK[0x538];
    v78 = STACK[0x568];
    v75 = STACK[0x528];
    v76 = STACK[0x530];
    v73 = STACK[0x510];
    v74 = STACK[0x518];
    sub_1004C3830(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29);
    sub_1004C485C(a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43);
    sub_1004C396C(a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59);
    sub_1004C48C4(a61, a62, a63, a64, a65, a66, a67);
    sub_1004C48C4(a68, a69, a70, a71, a72, v73, v74);
    swift_bridgeObjectRetain(v72);
    sub_1004C48FC(v75, v76, v77);
    sub_1004C485C(v78, v79, v80, v81, v82, v89, v90, v91, v83, v84, v85, v86, v87, v88);
    swift_bridgeObjectRetain(v92);
    return swift_bridgeObjectRetain(v93);
  }
  return result;
}

void sub_1004C5368()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v0);

  qword_10147E6A0 = (uint64_t)v1;
}

id sub_1004C53D8()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  qword_10147E6A8 = (uint64_t)result;
  return result;
}

int64x2_t sub_1004C5410()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4041000000000000uLL);
  xmmword_10147E6B0 = (__int128)result;
  return result;
}

void sub_1004C5424()
{
  qword_10147E6C0 = 0x4028000000000000;
}

void sub_1004C5434()
{
  qword_10147E6C8 = 0x4028000000000000;
}

void sub_1004C5444()
{
  qword_10147E6D0 = 0x4041000000000000;
}

char *sub_1004C5494()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  void *v6;
  id v7;
  void *v8;
  id v9;
  char *v10;
  id v11;

  v1 = v0;
  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x100))() & 1) != 0)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v2 = swift_allocObject(&unk_1012681E0, 24, 7);
    swift_unknownObjectWeakInit(v2 + 16, v0);
    v3 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004CBB04, v2);
    v4 = sub_1004C57EC(v3, 0, 0, 0);

    return v4;
  }
  else
  {
    v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
    v7 = objc_msgSend(v6, "tintColor");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "UIColor");

    }
    else
    {
      v9 = 0;
    }
    v10 = sub_1004C57EC(0, v9, 0, 0);

    v11 = objc_msgSend(v6, "action");
    if (v11)
      objc_msgSend(v10, "addTarget:action:forControlEvents:", *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController), v11, 64);
    return v10;
  }
}

void sub_1004C562C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t ObjectType;
  void *v17;
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;
  _BYTE v21[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_QWORD *)Strong;
    v6 = Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 16);
      v10 = objc_msgSend(a1, "sender");
      if (v10)
      {
        v11 = v10;
        _bridgeAnyObjectToAny(_:)(v18, v10);
        swift_unknownObjectRelease(v11);
      }
      else
      {
        memset(v18, 0, sizeof(v18));
      }
      sub_1004C4938((uint64_t)v18, (uint64_t)v19, &qword_1013E0230);
      if (v20)
      {
        v12 = type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
        if ((swift_dynamicCast(&v17, v19, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
        {
          v13 = v17;
          v14 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0xF8))();
          if (v14)
          {
            v15 = (void *)v14;
            ObjectType = swift_getObjectType(v8);
            (*(void (**)(void *, void *, _QWORD *, uint64_t, uint64_t))(v9 + 16))(v15, v13, v5, ObjectType, v9);
            sub_1004CA020(1, 0);

            swift_unknownObjectRelease(v8);
          }
          else
          {

            swift_unknownObjectRelease(v8);
          }
        }
        else
        {
          swift_unknownObjectRelease(v8);

        }
      }
      else
      {
        swift_unknownObjectRelease(v8);

        sub_1004CB800((uint64_t)v19, &qword_1013E0230);
      }
    }
    else
    {

    }
  }
}

char *sub_1004C57EC(void *a1, void *a2, void *a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  char **v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  double v40;
  NSString v41;
  uint64_t v42;
  char *v43;
  double v44;
  NSString v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  char *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  Class isa;
  id v72;
  uint64_t v74;
  id v75;
  uint64_t ObjectType;
  char *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD aBlock[5];
  uint64_t v83;

  v5 = v4;
  v79 = a4;
  ObjectType = swift_getObjectType(v4);
  v9 = sub_1004B804C((uint64_t *)&unk_1013F4240);
  __chkstk_darwin(v9);
  v77 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013F6AE0);
  v12 = __chkstk_darwin(v11);
  v78 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v74 - v14;
  v16 = type metadata accessor for UIButton.Configuration(0);
  v80 = *(_QWORD *)(v16 - 8);
  v81 = v16;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v74 - v21;
  static UIButton.Configuration.plain()(v20);
  v23 = a2;
  if (!a2)
    v23 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v75 = a2;
  UIButton.Configuration.baseForegroundColor.setter(v23);
  v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v25 = objc_msgSend(v24, "traitCollection");

  LODWORD(v24) = objc_msgSend(v25, "crl_isUserInterfaceStyleDark");
  v26 = (void *)objc_opt_self(UIColor);
  v27 = &selRef_tertiarySystemBackgroundColor;
  if (!(_DWORD)v24)
    v27 = &selRef_secondarySystemBackgroundColor;
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v26, *v27));
  v28 = a3;
  if (!a3)
  {
    v29 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v5
                                                                + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element), "image"));
    if (v29)
    {
      v30 = v29;
      v28 = objc_msgSend(v29, "UIImage");

    }
    else
    {
      v28 = 0;
    }
  }
  v31 = a3;
  v32 = v28;
  v33 = UIButton.Configuration.image.setter(v28);
  v34 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0xF0))(v33);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v34);
  type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v19, v22, v81);
  v35 = a1;
  v36 = (char *)UIButton.init(configuration:primaryAction:)(v19, a1);
  swift_unknownObjectWeakAssign(&v36[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_formatterBuilder], v5);
  v37 = (char *)v5 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_crlaxAccessibilityFormatterLabel;
  v38 = *(_QWORD *)((char *)v5
                  + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_crlaxAccessibilityFormatterLabel
                  + 8);
  v39 = v36;
  if (v38)
  {
    swift_bridgeObjectRetain(v38);
    v41 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v36, "setAccessibilityLabel:", v41, v40);

  objc_msgSend(v36, "setShowsLargeContentViewer:", 1);
  v42 = *((_QWORD *)v37 + 1);
  v43 = v36;
  if (v42)
  {
    swift_bridgeObjectRetain(v42);
    v45 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v42).n128_u64[0];
  }
  else
  {
    v45 = 0;
  }
  objc_msgSend(v36, "setLargeContentTitle:", v45, v44);

  objc_msgSend(v36, "setLargeContentImage:", v32);
  v46 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v5);
  objc_msgSend(v36, "addInteraction:", v46);

  v47 = v79;
  if (v79)
  {
    v48 = swift_allocObject(&unk_101268280, 32, 7);
    *(_QWORD *)(v48 + 16) = v47;
    *(_QWORD *)(v48 + 24) = v28;
    v49 = swift_allocObject(&unk_1012682A8, 32, 7);
    *(_QWORD *)(v49 + 16) = sub_1004CBAA8;
    *(_QWORD *)(v49 + 24) = v48;
    aBlock[4] = sub_1004CBAD4;
    v83 = v49;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_1012682C0;
    v50 = _Block_copy(aBlock);
    v51 = v83;
    v52 = v47;
    v53 = v32;
    v54 = v36;
    objc_msgSend(v54, "setConfigurationUpdateHandler:", v50, swift_release(v51).n128_f64[0]);
    _Block_release(v50);

  }
  else
  {
    v55 = v36;
    UIButton.configuration.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v15, 1, v81))
    {
      v56 = v78;
      sub_1004CB7BC((uint64_t)v15, v78, &qword_1013F6AE0);
      UIButton.configuration.setter(v56);

      sub_1004CB800((uint64_t)v15, &qword_1013F6AE0);
    }
    else
    {
      v57 = swift_allocObject(&unk_101268230, 24, 7);
      swift_unknownObjectWeakInit(v57 + 16, v55);
      v58 = (_QWORD *)swift_allocObject(&unk_101268258, 40, 7);
      v58[2] = v57;
      v58[3] = a2;
      v58[4] = ObjectType;
      v59 = v75;
      v60 = v77;
      UIConfigurationColorTransformer.init(_:)(sub_1004CBA9C, v58);
      v61 = type metadata accessor for UIConfigurationColorTransformer(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
      UIButton.Configuration.imageColorTransformer.setter(v60);
      UIButton.configuration.setter(v15);

    }
  }
  v62 = (void *)objc_opt_self(NSLayoutConstraint);
  v63 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v64 = swift_allocObject(v63, 48, 7);
  *(_OWORD *)(v64 + 16) = xmmword_100EF5560;
  v65 = objc_msgSend(v36, "widthAnchor");
  if (qword_1013DC898 != -1)
    swift_once(&qword_1013DC898, sub_1004C5410);
  v66 = objc_msgSend(v65, "constraintEqualToConstant:", *(double *)&xmmword_10147E6B0);

  *(_QWORD *)(v64 + 32) = v66;
  v67 = objc_msgSend(v36, "heightAnchor");
  v68 = objc_retainAutoreleasedReturnValue(objc_msgSend(v67, "constraintEqualToConstant:", *((double *)&xmmword_10147E6B0
                                                                                           + 1)));

  *(_QWORD *)(v64 + 40) = v68;
  aBlock[0] = v64;
  specialized Array._endMutation()(v69);
  v70 = aBlock[0];
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v62, "activateConstraints:", isa, swift_bridgeObjectRelease(v70).n128_f64[0]);

  v72 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v5);
  objc_msgSend(v36, "addInteraction:", v72);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v22, v81);
  return v36;
}

void sub_1004C5F68(void **a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  v6 = sub_1004B804C(&qword_1013F6AE0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v27 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v27 - v13;
  v15 = *a1;
  v16 = type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
  v17 = swift_dynamicCastClass(v15, v16);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = v15;
    if (objc_msgSend(v18, "state") == (id)1
      || *((_BYTE *)v18 + OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_isPresentingPopover) == 1)
    {
      v20 = v19;
      UIButton.configuration.getter();
      v21 = type metadata accessor for UIButton.Configuration(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v14, 1, v21))
      {
        v23 = a2;
        UIButton.Configuration.image.setter(a2);
        UIButton.configuration.setter(v14);

        return;
      }
      sub_1004CB7BC((uint64_t)v14, (uint64_t)v12, &qword_1013F6AE0);
      UIButton.configuration.setter(v12);

      v22 = (uint64_t)v14;
    }
    else
    {
      v24 = v19;
      UIButton.configuration.getter();
      v25 = type metadata accessor for UIButton.Configuration(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v9, 1, v25))
      {
        v26 = a3;
        UIButton.Configuration.image.setter(a3);
        UIButton.configuration.setter(v9);

        return;
      }
      sub_1004CB7BC((uint64_t)v9, (uint64_t)v12, &qword_1013F6AE0);
      UIButton.configuration.setter(v12);

      v22 = (uint64_t)v9;
    }
    sub_1004CB800(v22, &qword_1013F6AE0);
  }
}

void sub_1004C6194(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

id sub_1004C61E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _BYTE *Strong;
  _BYTE *v5;
  id v6;
  id v7;
  char v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (objc_msgSend(Strong, "state") == (id)1
      || v5[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_isPresentingPopover] == 1)
    {
      if (qword_1013DC890 != -1)
        swift_once(&qword_1013DC890, sub_1004C53D8);
      v6 = (id)qword_10147E6A8;
    }
    else if (a3)
    {
      v6 = a3;
    }
    else
    {
      v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    }
    v7 = v6;

    return v7;
  }
  else if (a3)
  {
    return a3;
  }
  else
  {
    return objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  }
}

id sub_1004C6310()
{
  return objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, 2, 17.0);
}

Class sub_1004C6348(void *a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  UIButton v14;
  id v15;
  UIImage *v16;
  id v17;
  UIImage *v18;
  objc_class *v19;
  NSString v20;
  objc_class *v21;
  NSString v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  objc_class *v32;
  NSString v33;
  void *v34;
  objc_class *v35;
  id v36;
  NSString v37;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  objc_class *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  objc_class *v60;
  NSString v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v68;
  Class isa;
  id v70;
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  UIAction_optional v77;
  CGSize v78;
  CGSize v79;
  CGRect v80;
  CGRect v81;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v10 = swift_allocObject(&unk_1012681E0, 24, 7);
  v75 = v5;
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = (_QWORD *)swift_allocObject(&unk_101268208, 40, 7);
  v11[2] = v10;
  v11[3] = a3;
  v11[4] = a4;
  swift_bridgeObjectRetain(a4);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004CBA24, v11);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  v13 = v12;
  v77.value.super.super.isa = (Class)v12;
  v14.super.super.super.super.isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v77).super.super.super.super.isa;
  v74 = v13;
  if (a1)
  {
    v15 = a1;
    v78.width = 1.0;
    v78.height = 1.0;
    UIGraphicsBeginImageContext(v78);
    objc_msgSend(v15, "setFill");
    v80.origin.x = 0.0;
    v80.origin.y = 0.0;
    v80.size.width = 1.0;
    v80.size.height = 1.0;
    UIRectFill(v80);
    v16 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    -[objc_class setBackgroundImage:forState:](v14.super.super.super.super.isa, "setBackgroundImage:forState:", v16, 0);

    v17 = objc_msgSend(v15, "colorWithAlphaComponent:", 0.6);
    v79.width = 1.0;
    v79.height = 1.0;
    UIGraphicsBeginImageContext(v79);
    objc_msgSend(v17, "setFill");
    v81.origin.x = 0.0;
    v81.origin.y = 0.0;
    v81.size.width = 1.0;
    v81.size.height = 1.0;
    UIRectFill(v81);
    v18 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    -[objc_class setBackgroundImage:forState:](v14.super.super.super.super.isa, "setBackgroundImage:forState:", v18, 1);

    v19 = v14.super.super.super.super.isa;
    v20 = String._bridgeToObjectiveC()();
    -[objc_class setAccessibilityLabel:](v19, "setAccessibilityLabel:", v20);

    v21 = v19;
    v22 = objc_msgSend(v15, "accessibilityName");
    v24 = a3;
    if (!v22)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v26 = v25;
      v22 = String._bridgeToObjectiveC()();
      v27 = v26;
      v24 = a3;
      *(_QWORD *)&v23 = swift_bridgeObjectRelease(v27).n128_u64[0];
    }
    -[objc_class setAccessibilityValue:](v21, "setAccessibilityValue:", v22, v23);

    v28 = objc_msgSend(v15, "accessibilityName");
    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v30 = v29;

    if (a2)
      goto LABEL_5;
  }
  else
  {
    v73 = 0;
    v24 = a3;
    v30 = 0;
    if (a2)
    {
LABEL_5:
      v31 = a2;
      -[objc_class setImage:forState:](v14.super.super.super.super.isa, "setImage:forState:", v31, 0);
      v72 = objc_msgSend(v31, "crl_imageWithAlpha:renderingMode:", 0, 0.6);
      -[objc_class setImage:forState:](v14.super.super.super.super.isa, "setImage:forState:", v72, 1);
      v32 = v14.super.super.super.super.isa;
      v33 = String._bridgeToObjectiveC()();
      -[objc_class setAccessibilityLabel:](v32, "setAccessibilityLabel:", v33);

      v34 = (void *)objc_opt_self(NSBundle);
      v35 = v32;
      v36 = objc_msgSend(v34, "mainBundle");
      v37 = String._bridgeToObjectiveC()();
      v38 = String._bridgeToObjectiveC()();
      v39 = a4;
      v40 = v30;
      v41 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, v38, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v43 = v42;

      v30 = v40;
      a4 = v39;
      v44 = String._bridgeToObjectiveC()();
      -[objc_class setAccessibilityValue:](v35, "setAccessibilityValue:", v44, swift_bridgeObjectRelease(v43).n128_f64[0]);

    }
  }
  v45 = -[objc_class layer](v14.super.super.super.super.isa, "layer");
  objc_msgSend(v45, "setCornerRadius:", 5.0);

  v46 = -[objc_class layer](v14.super.super.super.super.isa, "layer");
  objc_msgSend(v46, "setMasksToBounds:", 1);

  v47 = -[objc_class layer](v14.super.super.super.super.isa, "layer");
  objc_msgSend(v47, "setCornerCurve:", kCACornerCurveContinuous);

  v48 = -[objc_class layer](v14.super.super.super.super.isa, "layer");
  v49 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  v50 = objc_msgSend(v49, "CGColor");

  objc_msgSend(v48, "setBorderColor:", v50);
  v51 = -[objc_class layer](v14.super.super.super.super.isa, "layer");
  objc_msgSend(v51, "setBorderWidth:", 1.0);

  -[objc_class setShowsLargeContentViewer:](v14.super.super.super.super.isa, "setShowsLargeContentViewer:", 1);
  if (v30)
  {
    v52 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v53 = swift_allocObject(v52, 64, 7);
    *(_OWORD *)(v53 + 16) = xmmword_100EF5A10;
    *(_QWORD *)(v53 + 32) = v24;
    *(_QWORD *)(v53 + 40) = a4;
    *(_QWORD *)(v53 + 48) = v73;
    *(_QWORD *)(v53 + 56) = v30;
    swift_bridgeObjectRetain(a4);
    v54 = v14.super.super.super.super.isa;
    v55 = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v56 = sub_1004CBA30((unint64_t *)&qword_1013DFC40, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v55, v56);
    v58 = v57;
    swift_bridgeObjectRelease(v53);
    v59 = String._bridgeToObjectiveC()();
    -[objc_class setLargeContentTitle:](v54, "setLargeContentTitle:", v59, swift_bridgeObjectRelease(v58).n128_f64[0]);

  }
  else
  {
    v60 = v14.super.super.super.super.isa;
    v61 = String._bridgeToObjectiveC()();
    -[objc_class setLargeContentTitle:](v60, "setLargeContentTitle:", v61);

  }
  -[objc_class setLargeContentImage:](v14.super.super.super.super.isa, "setLargeContentImage:", a2);
  v62 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v75);
  -[objc_class addInteraction:](v14.super.super.super.super.isa, "addInteraction:", v62);

  v63 = (void *)objc_opt_self(NSLayoutConstraint);
  v64 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v65 = swift_allocObject(v64, 40, 7);
  *(_OWORD *)(v65 + 16) = xmmword_100EEF400;
  v66 = -[objc_class widthAnchor](v14.super.super.super.super.isa, "widthAnchor");
  v67 = objc_msgSend(v66, "constraintEqualToConstant:", a5);

  *(_QWORD *)(v65 + 32) = v67;
  specialized Array._endMutation()(v68);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v63, "activateConstraints:", isa, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v70 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v75);
  -[objc_class addInteraction:](v14.super.super.super.super.isa, "addInteraction:", v70);

  return v14.super.super.super.super.isa;
}

void sub_1004C6BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t (*v24)(uint64_t, uint64_t);
  id v25;
  double v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
    v10 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter);
    v29 = *(_QWORD *)(v9 + 16);
    v30 = *(_QWORD *)(v9 + 8);
    v11 = *(void **)&v8[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element];
    v12 = *(void **)&v8[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_editorController];
    v13 = *(void **)&v8[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController];
    objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder());
    v14 = v13;
    v15 = v11;
    v16 = v12;
    swift_bridgeObjectRetain(a4);
    v17 = sub_1009505DC(v10, v30, v29, v15, v16, v13, 0, 1, a3, a4, 0, 1, 0);
    swift_unknownObjectRelease(v10);

    v18 = sub_10094C664();
    if (v18)
    {
      v19 = v18;
      v20 = swift_unknownObjectWeakLoadStrong(v9);
      if (v20)
      {
        v21 = v20;
        v22 = *(_QWORD *)(v9 + 16);
        ObjectType = swift_getObjectType(v20);
        v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 64);
        v25 = v19;
        LOBYTE(v24) = v24(ObjectType, v22);
        v26 = (*(double (**)(uint64_t, uint64_t))(v22 + 72))(ObjectType, v22);
        v27 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController());
        swift_unknownObjectRetain(v21);
        v28 = v17;
        v17 = sub_1005B4E34(v25, v17, v24 & 1, 0, v21, v22, v26);
        (*(void (**)(void *, uint64_t, uint64_t))(v22 + 24))(v17, ObjectType, v22);

        swift_unknownObjectRelease(v21);
      }
      else
      {

        v17 = v19;
      }
    }
    else
    {

    }
  }
}

id sub_1004C6DDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;

  swift_getObjectType(v1);
  v3 = swift_allocObject(&unk_101268140, 24, 7);
  *(_QWORD *)(v3 + 16) = 1;
  swift_bridgeObjectRetain(a1);
  v5 = (uint64_t)sub_1004CA880(v4, (uint64_t (*)(unint64_t, id))sub_1004CB77C);
  swift_bridgeObjectRelease(a1);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v17 = v5;
    else
      v17 = v5 & 0xFFFFFFFFFFFFFF8;
    v18 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    swift_bridgeObjectRetain(v5);
    v7 = _bridgeCocoaArray<A>(_:)(v17, v18);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = swift_bridgeObjectRetain(v5);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v7 = v5;
  }
  swift_bridgeObjectRelease(v5);
  v8 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v7);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  objc_msgSend(v10, "setAxis:", 0);
  objc_msgSend(v10, "setAlignment:", 0);
  objc_msgSend(v10, "setDistribution:", 1);
  objc_msgSend(v10, "setSpacing:", 1.0);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v11 = *(double *)&qword_10147E6D0;
  v12 = objc_msgSend(v10, "heightAnchor");
  v13 = objc_msgSend(v12, "constraintGreaterThanOrEqualToConstant:", v11);

  objc_msgSend(v13, "setActive:", 1);
  swift_bridgeObjectRelease(v7);

  v14 = objc_msgSend(v10, "heightAnchor");
  v15 = objc_msgSend(v14, "constraintGreaterThanOrEqualToConstant:", *(double *)&qword_10147E6D0);

  objc_msgSend(v15, "setActive:", 1);
  swift_release(v3);

  return v10;
}

uint64_t sub_1004C70CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  sub_1004CB9AC(a1, v1);
  return UIMutableTraits.userInterfaceStyle.setter(1, v1, v2);
}

id sub_1004C7108(void *a1, void *a2, uint64_t a3)
{
  if (objc_msgSend(a1, "accessibilityContrast") == (id)1)
    return objc_msgSend(a2, "resolvedColorWithTraitCollection:", a3);
  else
    return a2;
}

void sub_1004C7170(Swift::Int a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  Swift::Bool v33;
  int v34;
  char **v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  char **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  void *v65;
  UIAccessibilityTraits v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  UIAccessibilityTraits v71;
  unint64_t v72;
  unint64_t v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BOOL4 v80;
  uint64_t v81;
  id v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  Swift::Int v92;

  v88 = a5;
  v91 = a4;
  v18 = sub_1004B804C(&qword_1013E10A0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v79 - v23;
  v92 = a1;
  v90 = a2;
  if (!a1)
  {
    v80 = 0;
    v29 = 6.0;
    v79 = 5;
    goto LABEL_10;
  }
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v77 = a3;
    else
      v77 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v78 = _CocoaArrayWrapper.endIndex.getter(v77);
    swift_bridgeObjectRelease(a3);
    v26 = v78 - 1;
    if (!__OFSUB__(v78, 1))
      goto LABEL_4;
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v25 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v26 = v25 - 1;
  if (__OFSUB__(v25, 1))
    goto LABEL_36;
LABEL_4:
  v27 = v26 == v92;
  v80 = v26 != v92;
  v28 = 10;
  if (!v27)
    v28 = 0;
  v79 = v28;
  if (v27)
    v29 = 6.0;
  else
    v29 = 0.0;
LABEL_10:
  v87 = a8;
  v81 = a12;
  v83 = a10;
  v84 = a9;
  v85 = a11;
  sub_1004CB7BC(v91, (uint64_t)v24, &qword_1013E10A0);
  v30 = type metadata accessor for IndexSet(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v24, 1, v30);
  v89 = a6;
  v86 = a7;
  if (v32 == 1)
  {
    sub_1004CB800((uint64_t)v24, &qword_1013E10A0);
  }
  else
  {
    v33 = IndexSet.contains(_:)(v92);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v30);
    if (v33)
    {
      v88 = sub_1004CA9D4((uint64_t)v88, a6);
      v34 = 1;
      v35 = &selRef_whiteColor;
      goto LABEL_17;
    }
  }
  v36 = (void *)objc_opt_self(UIScreen);
  v37 = objc_msgSend(v36, "mainScreen", v79);
  v38 = objc_msgSend(v37, "traitCollection");

  LODWORD(v37) = objc_msgSend(v38, "crl_isUserInterfaceStyleDark");
  v39 = (void *)objc_opt_self(UIColor);
  v40 = &selRef_tertiarySystemBackgroundColor;
  if (!(_DWORD)v37)
    v40 = &selRef_secondarySystemBackgroundColor;
  v88 = objc_msgSend(v39, *v40);
  v34 = 0;
  v35 = &selRef_labelColor;
LABEL_17:
  v82 = objc_msgSend((id)objc_opt_self(UIColor), *v35);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  sub_1004CB7BC(v91, (uint64_t)v21, &qword_1013E10A0);
  v41 = *(unsigned __int8 *)(v19 + 80);
  v42 = (v41 + 17) & ~v41;
  v43 = v42 + v20;
  v44 = ((v43 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject(&unk_101268168, v44 + 9, v41 | 7);
  v46 = (v43 & 0xFFFFFFFFFFFFFFF8) + v45;
  LODWORD(v91) = v34;
  *(_BYTE *)(v45 + 16) = v34;
  sub_1004C4938((uint64_t)v21, v45 + v42, &qword_1013E10A0);
  *(_BYTE *)(v45 + v43) = v86 & 1;
  v47 = v84;
  *(_QWORD *)(v46 + 8) = v87;
  *(_QWORD *)(v46 + 16) = v47;
  v48 = v45 + v44;
  v49 = v92;
  *(_QWORD *)v48 = v92;
  *(_BYTE *)(v48 + 8) = v83 & 1;
  swift_retain(v47);
  v50 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004CB8F8, v45);
  v51 = v85;
  if (!v85)
  {
    v64 = v82;
    v62 = objc_msgSend(v90, "imageWithTintColor:", v82);
    v65 = (void *)objc_opt_self(UIColor);
    v56 = v50;
    v61 = objc_msgSend(v65, "labelColor");
    v54 = v89;
    v55 = v88;
    v63 = sub_1004C7A58(v62, 0, 0, v50, v88, 0, v64, v61, v29, 0, v79, v80, 0, 0, v89);
    v52 = v64;
    goto LABEL_22;
  }
  v52 = v82;
  v53 = objc_msgSend(v90, "imageWithTintColor:", v82);
  v55 = v88;
  v54 = v89;
  if ((v49 & 0x8000000000000000) != 0)
    goto LABEL_37;
  if (*(_QWORD *)(v51 + 16) <= v49)
  {
LABEL_38:
    __break(1u);
    return;
  }
  v56 = v53;
  v57 = v51 + 16 * v49;
  v58 = *(_QWORD *)(v57 + 32);
  v59 = *(_QWORD *)(v57 + 40);
  v60 = (void *)objc_opt_self(UIColor);
  v61 = v50;
  v62 = objc_msgSend(v60, "labelColor", swift_bridgeObjectRetain(v59).n128_f64[0]);
  v63 = sub_1004C7A58(v56, 0, 0, v50, v55, 0, v52, v62, v29, 0, v79, v80, v58, v59, v54);
  swift_bridgeObjectRelease(v59);
LABEL_22:

  v66 = UIAccessibilityTraitSelected;
  v67 = v63;
  v68 = (unint64_t)objc_msgSend(v67, "accessibilityTraits");
  v69 = -1;
  if ((v68 & v66) != 0)
    v69 = ~v66;
  v70 = v69 & v68;
  if ((v68 & v66) == v66)
    v71 = 0;
  else
    v71 = v66;
  v72 = v71 | v68;
  if ((_DWORD)v91)
    v73 = v72;
  else
    v73 = v70;
  objc_msgSend(v67, "setAccessibilityTraits:", v73, v79);

  v74 = objc_allocWithZone((Class)UILargeContentViewerInteraction);
  v75 = v67;
  v76 = objc_msgSend(v74, "initWithDelegate:", v54);
  objc_msgSend(v75, "addInteraction:", v76);

}

uint64_t sub_1004C77A0(uint64_t a1, char a2, uint64_t a3, char a4, void (*a5)(_BYTE *, Swift::Int), uint64_t a6, Swift::Int a7, int a8)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  _BYTE *v27;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __int128 v33;
  void (*v34)(_BYTE *, Swift::Int);
  Swift::Int memberAfterInsert;
  void (*v36)(_BYTE *, uint64_t);
  _BYTE v37[4];
  int v38;
  Swift::Int v39;
  uint64_t v40;
  void (*v41)(_BYTE *, Swift::Int);

  v38 = a8;
  v39 = a7;
  v40 = a6;
  v41 = a5;
  v11 = sub_1004B804C(&qword_1013E10A0);
  __chkstk_darwin(v11);
  v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v37[-v15];
  v17 = type metadata accessor for IndexSet(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = &v37[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v23 = &v37[-v22];
  v25 = __chkstk_darwin(v24);
  v27 = &v37[-v26];
  if ((a2 & 1) != 0)
  {
    sub_1004CB7BC(a3, (uint64_t)v16, &qword_1013E10A0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
      return sub_1004CB800((uint64_t)v16, &qword_1013E10A0);
    v30 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v27, v16, v17);
    v31 = IndexSet.count.getter(v30);
    if (v31 == 1 && (a4 & 1) != 0)
    {
      IndexSet.init()(v32);
LABEL_15:
      v41(v23, *((_QWORD *)&v33 + 1));
      v36 = *(void (**)(_BYTE *, uint64_t))(v18 + 8);
      v36(v23, v17);
      return ((uint64_t (*)(_BYTE *, uint64_t))v36)(v27, v17);
    }
    if (IndexSet.count.getter(v31) >= 2)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 16))(v23, v27, v17);
      *(Swift::Int_optional *)&v33 = IndexSet.remove(_:)(v39);
      goto LABEL_15;
    }
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v27, v17);
  }
  else if ((v38 & 1) != 0)
  {
    sub_1004CB7BC(a3, (uint64_t)v13, &qword_1013E10A0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17) == 1)
    {
      IndexSet.init()(v29);
      sub_1004CB800((uint64_t)v13, &qword_1013E10A0);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v20, v13, v17);
    }
    v34 = v41;
    memberAfterInsert = IndexSet.insert(_:)(v39).memberAfterInsert;
    v34(v20, memberAfterInsert);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    IndexSet.init(integer:)(v39, v25);
    ((void (*)(_BYTE *))v41)(v23);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v23, v17);
  }
}

void *sub_1004C7A58(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, double a9, unsigned __int8 a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  NSString v41;
  id v42;
  id v43;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD aBlock[5];
  uint64_t v52;

  v46 = a8;
  v45 = a6;
  v50 = a15;
  v47 = a14;
  v48 = a13;
  v22 = type metadata accessor for UIButton.Configuration(0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v49 = a1;
  v27 = v26;
  v29 = (char *)&v45 - v28;
  v31 = v30;
  sub_1004C8984(a1, a2, a3, a5, a7, a10, a11, a12 & 1, a9, 0);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v25, v29, v31);
  v32 = a4;
  v33 = (void *)UIButton.init(configuration:primaryAction:)(v25, a4);
  aBlock[4] = sub_1004C8900(a5, v45, a7, v46);
  v52 = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_101267FD0;
  v35 = _Block_copy(aBlock);
  objc_msgSend(v33, "setConfigurationUpdateHandler:", v35, swift_release(v52).n128_f64[0]);
  v36 = v35;
  v37 = v47;
  _Block_release(v36);
  v38 = v33;
  if (v37)
    v39 = String._bridgeToObjectiveC()();
  else
    v39 = 0;
  objc_msgSend(v33, "setAccessibilityLabel:", v39, v45, v46);

  objc_msgSend(v33, "setPointerInteractionEnabled:", 1);
  objc_msgSend(v33, "setShowsLargeContentViewer:", 1);
  v40 = v33;
  if (v37)
    v41 = String._bridgeToObjectiveC()();
  else
    v41 = 0;
  objc_msgSend(v33, "setLargeContentTitle:", v41);

  objc_msgSend(v33, "setLargeContentImage:", v49);
  v42 = objc_allocWithZone((Class)UILargeContentViewerInteraction);
  v43 = objc_msgSend(v42, "initWithDelegate:", v50);
  objc_msgSend(v33, "addInteraction:", v43);

  objc_msgSend(v33, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v31);
  return v33;
}

id sub_1004C7D68()
{
  uint64_t v0;
  id v1;
  void *object;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  Class isa;
  id v16;
  uint64_t v18;

  v1 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  object = String.uppercased()()._object;
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend(v3, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  v5 = objc_msgSend(v4, "fontDescriptor");
  v6 = objc_msgSend(v5, "fontDescriptorWithSymbolicTraits:", 2);

  if (v6)
  {
    objc_msgSend(v4, "pointSize");
    v7 = objc_msgSend(v3, "fontWithDescriptor:size:", v6);

    v4 = v6;
  }
  else
  {
    v7 = 0;
  }

  objc_msgSend(v1, "setFont:", v7);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  v9 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v1, "setTextColor:", v9);

  objc_msgSend(v1, "setTextAlignment:", 4);
  objc_msgSend(v1, "setNumberOfLines:", 0);
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v1, "setShowsLargeContentViewer:", 1);
  v10 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v0);
  objc_msgSend(v1, "addInteraction:", v10);

  v11 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v12 = swift_allocObject(v11, 40, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v12 + 32) = v1;
  v18 = v12;
  specialized Array._endMutation()(v12);
  v13 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v14 = v1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v13, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  objc_msgSend(v16, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v16, "setDirectionalLayoutMargins:", 0.0, 4.0, 0.0, 0.0);

  return v16;
}

void sub_1004C8084(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, int a6, void *a7, double a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  id v24;
  char *v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  double v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  char **v35;
  id v36;
  char *v37;
  void (*v38)(_BYTE *, _QWORD);
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  double v44;
  int v45;
  char *v46;
  uint64_t v47;
  _BYTE v48[32];

  v43 = a7;
  v44 = *(double *)&a5;
  v45 = a6;
  v13 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v47 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v46 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UIButton.Configuration.Size(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v22);
  v23 = swift_bridgeObjectRetain(a2);
  UIButton.Configuration.title.setter(a1, a2, v23);
  if (a4)
  {
    if (a3)
      a3 = objc_msgSend(a3, "imageWithTintColor:", a4);
  }
  else
  {
    v24 = a3;
  }
  v25 = v15;
  v26 = v43;
  v27 = v16;
  v28 = a3;
  v29 = UIButton.Configuration.image.setter(a3);
  v30 = v44;
  if ((v45 & 1) != 0)
    v30 = 3.0;
  UIButton.Configuration.imagePadding.setter(v29, v30);
  v31 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleSubheadline, -1);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v31);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for UIButton.Configuration.Size.medium(_:), v18);
  UIButton.Configuration.buttonSize.setter(v21);
  v32 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v33 = objc_msgSend(v32, "traitCollection");

  LODWORD(v32) = objc_msgSend(v33, "crl_isUserInterfaceStyleDark");
  v34 = (void *)objc_opt_self(UIColor);
  v35 = &selRef_tertiarySystemBackgroundColor;
  if (!(_DWORD)v32)
    v35 = &selRef_secondarySystemBackgroundColor;
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v34, *v35));
  v36 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  UIButton.Configuration.baseForegroundColor.setter(v36);
  v37 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v46, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v27);
  UIButton.Configuration.cornerStyle.setter(v37);
  v38 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v48);
  UIBackgroundConfiguration.cornerRadius.setter(a8);
  v38(v48, 0);
  UIButton.Configuration.contentInsets.setter(0.0, 12.0, 0.0, 12.0);
  v39 = swift_allocObject(&unk_101268118, 24, 7);
  *(_QWORD *)(v39 + 16) = v26;
  v40 = v26;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_1004CB748, v39);
  v41 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v25, 0, 1, v41);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v25);

}

uint64_t sub_1004C840C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  id v10;
  uint64_t KeyPath;
  id v13;

  v6 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  KeyPath = swift_getKeyPath(&unk_100EF5AF0);
  v7 = swift_getKeyPath(&unk_100EF5B20);
  v8 = a2;
  if (!a2)
    v8 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline, KeyPath);
  v13 = v8;
  v9 = sub_1004CB548();
  v10 = a2;
  return AttributeContainer.subscript.setter(&v13, v7, v9);
}

uint64_t sub_1004C84D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = *a2;
  v4 = *a1;
  v5 = v2;
  sub_1004B804C((uint64_t *)&unk_1013DFBE0);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v5, &v4) & 1;
}

uint64_t sub_1004C8530()
{
  uint64_t v0;

  v0 = sub_1004B804C((uint64_t *)&unk_1013DFBE0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_1004C8574(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1004CB548();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_1004C8598()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

void *sub_1004C85B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, void *a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  int v19;
  uint64_t v20;
  void (**v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t (*v37)(void *);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  NSString v42;
  id v43;
  NSString v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  _QWORD v50[3];
  void *v51;
  uint64_t v52;
  void *v53;
  _QWORD aBlock[5];
  uint64_t v55;

  v10 = v9;
  v52 = v9;
  v53 = a8;
  v50[1] = swift_getObjectType(v10);
  v19 = a6 & 1;
  v20 = type metadata accessor for UIButton.Configuration(0);
  v21 = *(void (***)(_QWORD, _QWORD, _QWORD))(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)v50 - v25;
  v50[2] = a1;
  v51 = a3;
  v27 = a1;
  v28 = a2;
  v29 = a5;
  v31 = v30;
  sub_1004C8084(v27, a2, a3, a4, v29, v19, v53, a9);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  v53 = v21;
  ((void (**)(char *, char *, uint64_t))v21)[2](v23, v26, v31);
  v32 = a7;
  v33 = (void *)UIButton.init(configuration:primaryAction:)(v23, a7);
  v34 = (void *)objc_opt_self(UIColor);
  v35 = objc_msgSend(v34, "labelColor");
  v36 = objc_msgSend(v34, "labelColor");
  v37 = sub_1004C8900(0, 0, v35, v36);
  v39 = v38;

  aBlock[4] = v37;
  v55 = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_1012680E0;
  v40 = _Block_copy(aBlock);
  objc_msgSend(v33, "setConfigurationUpdateHandler:", v40, swift_release(v55).n128_f64[0]);
  _Block_release(v40);
  v41 = v33;
  if (v28)
    v42 = String._bridgeToObjectiveC()();
  else
    v42 = 0;
  objc_msgSend(v33, "setAccessibilityLabel:", v42);

  objc_msgSend(v33, "setShowsLargeContentViewer:", 1);
  v43 = v33;
  if (v28)
    v44 = String._bridgeToObjectiveC()();
  else
    v44 = 0;
  objc_msgSend(v33, "setLargeContentTitle:", v44);

  objc_msgSend(v33, "setLargeContentImage:", v51);
  v45 = objc_allocWithZone((Class)UILargeContentViewerInteraction);
  v46 = objc_msgSend(v45, "initWithDelegate:", v52);
  objc_msgSend(v33, "addInteraction:", v46);

  v47 = objc_msgSend(v33, "titleLabel");
  if (v47)
  {
    v48 = v47;
    objc_msgSend(v47, "setTextAlignment:", 1);

  }
  (*((void (**)(char *, uint64_t))v53 + 1))(v26, v31);
  return v33;
}

uint64_t (*sub_1004C8900(void *a1, void *a2, void *a3, void *a4))(void *a1)
{
  uint64_t v4;
  _QWORD *v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v9 = (_QWORD *)swift_allocObject(&unk_101268008, 56, 7);
  v9[2] = a4;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a1;
  v9[6] = v4;
  v10 = a4;
  v11 = a2;
  v12 = a3;
  v13 = a1;
  return sub_1004CB500;
}

uint64_t sub_1004C8984(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, int a6, uint64_t a7, int a8, double a9, char a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  char v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t (*v42)(_BYTE *, _QWORD);
  uint64_t result;
  uint64_t v44;
  uint64_t (*v45)(_BYTE *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  int v50;
  int v51;
  void *v52;
  _BYTE v53[32];

  v50 = a8;
  v51 = a6;
  v46 = a7;
  v49 = a5;
  v52 = a4;
  v14 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for UIButton.Configuration.Size(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v22);
  v25 = a1;
  UIButton.Configuration.image.setter(a1);
  if ((a10 & 1) != 0)
    v26 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, -1, 17.0);
  else
    v26 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleBody, -1);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v26);
  v27 = swift_bridgeObjectRetain(a3);
  UIButton.Configuration.title.setter(a2, a3, v27);
  v28 = swift_allocObject(&unk_101268030, 18, 7);
  *(_BYTE *)(v28 + 16) = a10 & 1;
  *(_BYTE *)(v28 + 17) = v51 & 1;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_1004CB520, v28);
  v29 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v24, 0, 1, v29);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for UIButton.Configuration.Size.small(_:), v17);
  UIButton.Configuration.buttonSize.setter(v20);
  v30 = v52;
  if (v52)
  {
    v31 = v52;
  }
  else
  {
    v32 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v33 = objc_msgSend(v32, "traitCollection");

    LODWORD(v32) = objc_msgSend(v33, "crl_isUserInterfaceStyleDark");
    v34 = (void *)objc_opt_self(UIColor);
    if ((_DWORD)v32)
      v35 = objc_msgSend(v34, "tertiarySystemBackgroundColor");
    else
      v35 = objc_msgSend(v34, "secondarySystemBackgroundColor");
    v31 = v35;
  }
  v36 = v50;
  v38 = v48;
  v37 = v49;
  v39 = v47;
  v40 = v30;
  UIButton.Configuration.baseBackgroundColor.setter(v31);
  v41 = v37;
  UIButton.Configuration.baseForegroundColor.setter(v37);
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v16, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v38);
  UIButton.Configuration.cornerStyle.setter(v16);
  UIButton.Configuration.contentInsets.setter(NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  v42 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v53);
  UIBackgroundConfiguration.cornerRadius.setter(a9);
  result = v42(v53, 0);
  if ((v36 & 1) == 0)
  {
    if (!sub_1003A91F4())
    {
      v44 = v46;
LABEL_28:
      v45 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v53);
      UIBackgroundConfiguration._maskedCorners.setter(v44);
      return v45(v53, 0);
    }
    if ((v46 & 1) != 0)
    {
      if ((v46 & 4) != 0)
      {
        v44 = 10;
        if ((v46 & 2) == 0)
        {
LABEL_25:
          if ((v46 & 8) == 0 || (v44 & 4) != 0)
            goto LABEL_28;
LABEL_27:
          v44 |= 4uLL;
          goto LABEL_28;
        }
      }
      else
      {
        v44 = 2;
        if ((v46 & 2) == 0)
          goto LABEL_19;
      }
    }
    else if ((v46 & 4) != 0)
    {
      v44 = 8;
      if ((v46 & 2) == 0)
        goto LABEL_25;
    }
    else
    {
      v44 = 0;
      if ((v46 & 2) == 0)
      {
LABEL_19:
        if ((v46 & 8) == 0)
          goto LABEL_28;
        goto LABEL_27;
      }
    }
    v44 |= 1uLL;
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_1004C8D70@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char **v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  uint64_t KeyPath;
  id v21;

  v8 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  KeyPath = swift_getKeyPath(&unk_100EF5AF0);
  v9 = swift_getKeyPath(&unk_100EF5B20);
  v10 = (void *)objc_opt_self(UIFont);
  v11 = v10;
  if ((a2 & 1) != 0)
  {
    v12 = &selRef_italicSystemFontOfSize_;
    if ((a3 & 1) == 0)
      v12 = &selRef_systemFontOfSize_;
    v21 = objc_msgSend(v10, *v12, 17.0, KeyPath);
  }
  else
  {
    v13 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleBody, KeyPath);
    v14 = v13;
    if ((a3 & 1) != 0)
    {
      v15 = objc_msgSend(v13, "fontDescriptor");
      v16 = objc_msgSend(v15, "fontDescriptorWithSymbolicTraits:", 1);

      if (v16)
      {
        objc_msgSend(v14, "pointSize");
        v17 = objc_msgSend(v11, "fontWithDescriptor:size:", v16);

      }
      else
      {

        v17 = 0;
      }
    }
    else
    {
      v17 = v13;
    }
    v21 = v17;
  }
  v18 = sub_1004CB548();
  return AttributeContainer.subscript.setter(&v21, v9, v18);
}

void *sub_1004C8F18(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, double a9, unsigned __int8 a10)
{
  return sub_1004C7A58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, 0, 1, 0, 0, 0);
}

char *sub_1004C9080(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, double a9, unsigned __int8 a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  NSString v35;
  char *v36;
  NSString v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t ObjectType;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[5];
  uint64_t v54;

  v11 = v10;
  v47 = a6;
  v48 = a8;
  v44 = a5;
  v45 = a7;
  ObjectType = swift_getObjectType(v11);
  v17 = type metadata accessor for UIButton.Configuration(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v43 - v22;
  v49 = a2;
  v50 = a1;
  v24 = a1;
  v25 = a2;
  v27 = v44;
  v26 = v45;
  sub_1004C8984(v24, v25, a3, v44, v45, a10, 0, 1, a9, 1);
  type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
  v51 = v18;
  v52 = v17;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
  v28 = a4;
  v29 = (char *)UIButton.init(configuration:primaryAction:)(v21, a4);
  swift_unknownObjectWeakAssign(&v29[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_formatterBuilder], v11);
  aBlock[4] = sub_1004C8900(v27, v47, v26, v48);
  v54 = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_1012680B8;
  v31 = _Block_copy(aBlock);
  v32 = v54;
  v33 = v29;
  objc_msgSend(v33, "setConfigurationUpdateHandler:", v31, swift_release(v32).n128_f64[0]);
  _Block_release(v31);

  v34 = v33;
  if (a3)
    v35 = String._bridgeToObjectiveC()();
  else
    v35 = 0;
  objc_msgSend(v33, "setAccessibilityLabel:", v35);

  objc_msgSend(v33, "setShowsLargeContentViewer:", 1);
  v36 = v33;
  if (a3)
    v37 = String._bridgeToObjectiveC()();
  else
    v37 = 0;
  objc_msgSend(v33, "setLargeContentTitle:", v37);

  v38 = v50;
  objc_msgSend(v33, "setLargeContentImage:", v50);
  v39 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v11);
  objc_msgSend(v33, "addInteraction:", v39);

  if (!v38)
  {
    v40 = (void *)objc_opt_self(UILabel);
    v41 = objc_msgSend(v33, "titleLabel");
    objc_msgSend(v40, "crlaxTurnOnButtonShapeUnderlines:", v41);

  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v52);
  return v33;
}

uint64_t sub_1004C93A4(void *a1, void *a2, void *a3, void *a4, id a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  id v33;
  id v34;
  id v35;
  char *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;

  v10 = sub_1004B804C(&qword_1013F6AE0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v43 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v43 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v43 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v43 - v23;
  if (objc_msgSend(a1, "state") == (id)1)
  {
    UIButton.configuration.getter(1);
    v25 = type metadata accessor for UIButton.Configuration(0);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
    if (v26(v24, 1, v25))
    {
      sub_1004CB7BC((uint64_t)v24, (uint64_t)v22, &qword_1013F6AE0);
      UIButton.configuration.setter(v22);
      v27 = sub_1004CB800((uint64_t)v24, &qword_1013F6AE0);
    }
    else
    {
      v31 = a2;
      UIButton.Configuration.baseForegroundColor.setter(a2);
      v27 = UIButton.configuration.setter(v24);
    }
    UIButton.configuration.getter(v27);
    if (v26(v19, 1, v25))
    {
      sub_1004CB7BC((uint64_t)v19, (uint64_t)v22, &qword_1013F6AE0);
      UIButton.configuration.setter(v22);
      return sub_1004CB800((uint64_t)v19, &qword_1013F6AE0);
    }
    v34 = a3;
    if (!a3)
      v34 = sub_1004CA598();
    v35 = a3;
    UIButton.Configuration.baseBackgroundColor.setter(v34);
    v36 = v19;
  }
  else
  {
    ((void (*)(void))UIButton.configuration.getter)();
    v28 = type metadata accessor for UIButton.Configuration(0);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48);
    if (v29(v16, 1, v28))
    {
      sub_1004CB7BC((uint64_t)v16, (uint64_t)v22, &qword_1013F6AE0);
      UIButton.configuration.setter(v22);
      v30 = sub_1004CB800((uint64_t)v16, &qword_1013F6AE0);
    }
    else
    {
      v33 = a4;
      UIButton.Configuration.baseForegroundColor.setter(a4);
      v30 = UIButton.configuration.setter(v16);
    }
    UIButton.configuration.getter(v30);
    if (v29(v13, 1, v28))
    {
      sub_1004CB7BC((uint64_t)v13, (uint64_t)v22, &qword_1013F6AE0);
      UIButton.configuration.setter(v22);
      return sub_1004CB800((uint64_t)v13, &qword_1013F6AE0);
    }
    if (a5)
    {
      v37 = a5;
    }
    else
    {
      v38 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      v39 = objc_msgSend(v38, "traitCollection");

      LODWORD(v38) = objc_msgSend(v39, "crl_isUserInterfaceStyleDark");
      v40 = (void *)objc_opt_self(UIColor);
      if ((_DWORD)v38)
        v41 = objc_msgSend(v40, "tertiarySystemBackgroundColor");
      else
        v41 = objc_msgSend(v40, "secondarySystemBackgroundColor");
      a5 = v41;
      v37 = 0;
    }
    v42 = v37;
    UIButton.Configuration.baseBackgroundColor.setter(a5);
    v36 = v13;
  }
  return UIButton.configuration.setter(v36);
}

uint64_t sub_1004C9754(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t (*v14)(_BYTE *, _QWORD);
  _BYTE v16[32];

  v2 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UIButton.Configuration.Size(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin();
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static UIButton.Configuration.plain()(v8);
  v11 = a1;
  UIButton.Configuration.image.setter(a1);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v10, enum case for UIButton.Configuration.Size.small(_:), v6);
  UIButton.Configuration.buttonSize.setter(v10);
  v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 4, 15.0);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v12);
  v13 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v13, "clearColor"));
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v13, "labelColor"));
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v2);
  UIButton.Configuration.cornerStyle.setter(v5);
  v14 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v16);
  UIBackgroundConfiguration.cornerRadius.setter(6.0);
  return v14(v16, 0);
}

void *sub_1004C98F4()
{
  uint64_t v0;

  v0 = sub_100704150();
  if (v0)
    sub_100511EB8(v0);
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1004C9948(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[3];
  _QWORD v13[4];

  sub_1004CB6E8(a2, (uint64_t)v13);
  v3 = type metadata accessor for CRLBoardItem(0);
  if ((swift_dynamicCast(v12, v13, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return 0;
  v4 = (void *)v12[0];
  v5 = sub_100704150();
  if (!v5)
  {

    return v5;
  }
  v6 = sub_100622190(v4, v5);
  swift_bridgeObjectRelease(v5);
  if ((v6 & 1) == 0)
  {

    return 0;
  }
  v7 = (uint64_t *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details)
                 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess(v7, v12, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_100843260(11), (v10 & 1) != 0))
  {
    sub_1004CB7BC(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)v13, &qword_1013E0230);
    v5 = 1;
  }
  else
  {
    v5 = 0;
    memset(v13, 0, 24);
    v13[3] = 1;
  }
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013DFC00);

  return v5;
}

uint64_t sub_1004C9AD8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t Strong;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController);
  if (!v1)
    return 0;
  v2 = objc_msgSend(v1, "canvasView");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = type metadata accessor for CRLiOSBoardView();
  while (1)
  {
    v5 = swift_dynamicCastClass(v3, v4);
    if (v5)
      break;
    v6 = objc_msgSend(v3, "superview");

    v3 = v6;
    if (!v6)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"crlaxPreferredViewControllerForLargeContentViewer", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2, 619, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crlaxPreferredViewControllerForLargeContentViewer", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2u, 619, (uint64_t)"invalid nil value found", 23, 2u);
      v7 = 0;
      v3 = 0;
      goto LABEL_9;
    }
  }
  v7 = (char *)v5;
  Strong = swift_unknownObjectWeakLoadStrong(v5 + OBJC_IVAR____TtC8Freeform15CRLiOSBoardView_delegate);
  v9 = v3;
  if (Strong)
  {
    swift_unknownObjectRelease(Strong);
LABEL_10:
    v10 = swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC8Freeform15CRLiOSBoardView_delegate]);
    if (v10)
    {
      v11 = v10;
      v12 = objc_opt_self(UIViewController);
      v13 = swift_dynamicCastObjCClass(v11, v12);
      swift_unknownObjectRelease(v11);
      if (v13)
        goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_9:
  sub_100757E04(&_mh_execute_header, (uint64_t)"crlaxPreferredViewControllerForLargeContentViewer", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2, 620, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crlaxPreferredViewControllerForLargeContentViewer", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2u, 620, (uint64_t)"invalid nil value found", 23, 2u);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v7)
    goto LABEL_10;
LABEL_12:
  sub_100757E04(&_mh_execute_header, (uint64_t)"crlaxPreferredViewControllerForLargeContentViewer", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2, 621, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crlaxPreferredViewControllerForLargeContentViewer", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2u, 621, (uint64_t)"invalid nil value found", 23, 2u);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (!v7)
  {
LABEL_18:

    return 0;
  }
LABEL_13:
  v14 = swift_unknownObjectWeakLoadStrong(&v7[OBJC_IVAR____TtC8Freeform15CRLiOSBoardView_delegate]);
  if (!v14)
  {

    goto LABEL_18;
  }
  v15 = v14;
  v16 = objc_opt_self(UIViewController);
  v17 = swift_dynamicCastObjCClass(v15, v16);

  if (!v17)
    swift_unknownObjectRelease(v15);

  return v17;
}

id sub_1004C9E3C()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterBuilder);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterBuilder()
{
  return objc_opt_self(_TtC8Freeform26CRLiOSMiniFormatterBuilder);
}

uint64_t sub_1004C9EF4()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x180))() & 1;
}

uint64_t sub_1004C9F30()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x188))() & 1;
}

uint64_t sub_1004C9F6C()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x190))() & 1;
}

uint64_t sub_1004C9FA8()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1C0))() & 1;
}

uint64_t sub_1004C9FE4()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1C8))() & 1;
}

id sub_1004CA020(char a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _BYTE *v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton_isPresentingPopover] = a1;
  if ((a2 & 1) != 0)
    return objc_msgSend(v3, "setHighlighted:", a1 & 1);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v26 = static OS_dispatch_queue.main.getter();
  v15 = swift_allocObject(&unk_101268078, 25, 7);
  *(_QWORD *)(v15 + 16) = v3;
  *(_BYTE *)(v15 + 24) = a1 & 1;
  aBlock[4] = sub_1004CB648;
  v28 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101268090;
  v16 = _Block_copy(aBlock);
  v17 = v28;
  v18 = v3;
  v19 = swift_release(v17);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_1004CB65C();
  v21 = v7;
  v22 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v23 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v6, v20);
  v24 = (void *)v26;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
  return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

id sub_1004CA354()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterBaseLayerButton);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterBaseLayerButton()
{
  return objc_opt_self(_TtC8Freeform34CRLiOSMiniFormatterBaseLayerButton);
}

id sub_1004CA414()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterColorPickerViewController);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterColorPickerViewController()
{
  return objc_opt_self(_TtC8Freeform44CRLiOSMiniFormatterColorPickerViewController);
}

uint64_t sub_1004CA478(uint64_t a1, uint64_t a2)
{
  return sub_10094EBDC(a1, a2) & 1;
}

unint64_t sub_1004CA4A8()
{
  _QWORD *v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform44CRLiOSMiniFormatterColorPickerViewController_builder)
                + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v1, "options") & 0x10) != 0)
    return 1;
  else
    return ((unint64_t)objc_msgSend(v1, "options") >> 19) & 1;
}

void sub_1004CA508()
{
  sub_1004CB3D0();
}

id sub_1004CA528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v8;
  char *v9;
  char *v10;
  objc_super v12;

  v8 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterColorPickerViewController();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform44CRLiOSMiniFormatterColorPickerViewController_builder] = a2;
  v10 = &v9[OBJC_IVAR____TtC8Freeform44CRLiOSMiniFormatterColorPickerViewController_popoverDelegate];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a5;
  v12.receiver = v9;
  v12.super_class = v8;
  return objc_msgSendSuper2(&v12, "init");
}

id sub_1004CA598()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  char **v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  id v11;

  v0 = (void *)objc_opt_self(UIScreen);
  v1 = objc_msgSend(v0, "mainScreen");
  v2 = objc_msgSend(v1, "traitCollection");

  LODWORD(v1) = objc_msgSend(v2, "crl_isUserInterfaceStyleDark");
  v3 = (void *)objc_opt_self(UIColor);
  v4 = &selRef_tertiarySystemBackgroundColor;
  if (!(_DWORD)v1)
    v4 = &selRef_secondarySystemBackgroundColor;
  v5 = objc_msgSend(v3, *v4);
  v6 = objc_msgSend(v0, "mainScreen");
  v7 = objc_msgSend(v6, "traitCollection");

  LODWORD(v6) = objc_msgSend(v7, "crl_isUserInterfaceStyleDark");
  v8 = (void *)objc_opt_self(UIColor);
  v9 = &selRef_tertiarySystemFillColor;
  if (!(_DWORD)v6)
    v9 = &selRef_secondarySystemFillColor;
  v10 = objc_msgSend(v8, *v9);
  v11 = sub_10097C8D0(v10);

  return v11;
}

id sub_1004CA6E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  char *v6;
  char *v13;
  uint64_t *v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v27;
  objc_super v28;

  v13 = &v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter];
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  swift_unknownObjectWeakInit(v13);
  swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_crlaxPopoverContainerViewController]);
  v14 = (uint64_t *)&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_crlaxAccessibilityFormatterLabel];
  *v14 = 0;
  v14[1] = 0;
  *((_QWORD *)v13 + 1) = a2;
  *((_QWORD *)v13 + 2) = a3;
  swift_unknownObjectWeakAssign(v13, a1);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element] = a4;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_editorController] = a5;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController] = a6;
  v15 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterBoardItemDataProvider());
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v28.receiver = v15;
  v28.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
  v16 = a5;
  v17 = v6;
  v18 = a4;
  v19 = a6;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_boardItemDataProvider] = objc_msgSendSuper2(&v28, "init");
  v20 = objc_msgSend(v18, "crlaxLabel");
  if (v20)
  {
    v21 = v20;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v25 = v14[1];
  *v14 = v22;
  v14[1] = v24;

  swift_bridgeObjectRelease(v25);
  v27.receiver = v17;
  v27.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterBuilder();
  return objc_msgSendSuper2(&v27, "init");
}

_QWORD *sub_1004CA880(uint64_t a1, uint64_t (*a2)(unint64_t, id))
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  specialized ContiguousArray.reserveCapacity(_:)(0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v3)
  {
    while (1)
    {
      v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
LABEL_7:
        v6 = v5;
        v7 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_12;
        v8 = a2(v4, v5);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        v9 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
        v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
        specialized ContiguousArray._endMutation()(v10);
        ++v4;
        if (v7 == v3)
          goto LABEL_17;
      }
      if (v4 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      if (a1 < 0)
        v11 = a1;
      else
        v11 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v3 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (!v3)
        goto LABEL_17;
    }
    v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

id sub_1004CA9D4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void **v3;
  id v4;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v23[5];
  uint64_t v24;

  v3 = (void **)(a1 + 16);
  v2 = *(void **)(a1 + 16);
  v4 = v2;
  if (v2 == (void *)1)
  {
    if (qword_1013DC888 != -1)
      swift_once(&qword_1013DC888, sub_1004C5368);
    v4 = (id)qword_10147E6A0;
    if (qword_10147E6A0)
    {
      v6 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController);
      if (v6)
      {
        v7 = (id)qword_10147E6A0;
        v8 = objc_msgSend(v6, "canvasView");
        if (v8)
        {
          v9 = v8;
          v10 = objc_msgSend(v8, "traitCollection");

          if (v10)
          {
            v11 = v10;
            v12 = (void *)UITraitCollection.modifyingTraits(_:)(sub_1004C70CC, 0);

            v13 = swift_allocObject(&unk_101268190, 32, 7);
            *(_QWORD *)(v13 + 16) = v7;
            *(_QWORD *)(v13 + 24) = v12;
            v14 = objc_allocWithZone((Class)UIColor);
            v23[4] = sub_1004CB9A4;
            v24 = v13;
            v23[0] = _NSConcreteStackBlock;
            v23[1] = *(_QWORD *)"";
            v23[2] = sub_1004B3678;
            v23[3] = &unk_1012681A8;
            v15 = _Block_copy(v23);
            v16 = v7;
            v17 = v12;
            v4 = objc_msgSend(v14, "initWithDynamicProvider:", v15);
            _Block_release(v15);
            v18 = v24;

            swift_release(v18);
          }
        }
      }
      else
      {
        v19 = (id)qword_10147E6A0;
      }
    }
    swift_beginAccess(v3, v23, 1, 0);
    v20 = *v3;
    *v3 = v4;
    v21 = v4;
    sub_1004CB49C(v20);
  }
  sub_1004CB968(v2);
  return v4;
}

char *sub_1004CABC8(void *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  id v17;
  id v18;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  uint64_t v31;
  id v32;
  char *v33;
  id v34;
  char *v35;
  id v36;
  char *v37;
  id v38;
  char *v39;
  objc_super v40;
  objc_super v41;
  objc_super v42;
  objc_super v43;
  objc_super v44;

  if ((objc_msgSend(a1, "options") & 4) != 0
    || (objc_msgSend(a1, "options") & 0x1000) != 0
    || (objc_msgSend(a1, "options") & 0x80000) != 0)
  {
    v13 = a4;
    v14 = a1;
    v15 = a3;
    v16 = ((unint64_t)objc_msgSend(v14, "options") >> 19) & 1;
    objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder());
    v17 = a2;
    v18 = sub_1009505DC((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v14, v15, a4, v16, 0, 0, 0, 0, 1, 0);

  }
  else
  {
    if ((objc_msgSend(a1, "options") & 8) != 0)
    {
      objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterStrokeBuilder());
      v20 = a4;
      v21 = a2;
      return sub_100886890((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, a1, a3, a4);
    }
    if ((objc_msgSend(a1, "options") & 0x10) == 0
      && (objc_msgSend(a1, "options") & 0x2000) == 0
      && (objc_msgSend(a1, "options") & 0x20000) == 0
      && (objc_msgSend(a1, "options") & 0x100000) == 0)
    {
      if ((objc_msgSend(a1, "options") & 0x20) != 0)
      {
        v23 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterLineEndsBuilder());
        v24 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterLineDataProvider());
        *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a3;
        v44.receiver = v24;
        v44.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
        v25 = a1;
        v26 = a3;
        v27 = a4;
        v28 = a2;
        v29 = (char *)v23;
        v30 = objc_msgSendSuper2(&v44, "init");
        v31 = OBJC_IVAR____TtC8Freeform34CRLiOSMiniFormatterLineEndsBuilder_lineDataProvider;
      }
      else if ((objc_msgSend(a1, "options") & 0x40) != 0)
      {
        v32 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterConnectionLineBuilder());
        v33 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterLineDataProvider());
        *(_QWORD *)&v33[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a3;
        v43.receiver = v33;
        v43.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
        v25 = a1;
        v26 = a3;
        v27 = a4;
        v28 = a2;
        v29 = (char *)v32;
        v30 = objc_msgSendSuper2(&v43, "init");
        v31 = OBJC_IVAR____TtC8Freeform40CRLiOSMiniFormatterConnectionLineBuilder_lineDataProvider;
      }
      else
      {
        if ((objc_msgSend(a1, "options") & 0x80) != 0
          || (objc_msgSend(a1, "options") & 0x200) != 0)
        {
          v34 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterImageAndMovieBuilder());
          v35 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterMediaDataProvider());
          *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a3;
          v42.receiver = v35;
          v42.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
          v25 = a1;
          v26 = a3;
          v27 = a4;
          v28 = a2;
          v29 = (char *)v34;
          v30 = objc_msgSendSuper2(&v42, "init");
        }
        else
        {
          if ((objc_msgSend(a1, "options") & 0x100) == 0)
          {
            if ((objc_msgSend(a1, "options") & 0x800) != 0)
            {
              objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterURLBuilder());
              v8 = a4;
              v9 = a2;
              v10 = a1;
              v11 = a3;
              v12 = sub_100A0EA58((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v10, v11, a4);
              goto LABEL_34;
            }
            if ((objc_msgSend(a1, "options") & 0x400) != 0)
            {
              objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterFileBuilder());
              v8 = a4;
              v9 = a2;
              v10 = a1;
              v11 = a3;
              v12 = sub_10088BA00((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v10, v11, a4);
              goto LABEL_34;
            }
            if ((objc_msgSend(a1, "options") & 0x800000) != 0)
            {
              objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterUSDZBuilder());
              v8 = a4;
              v9 = a2;
              v10 = a1;
              v11 = a3;
              v12 = sub_1007BF980((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v10, v11, a4);
              goto LABEL_34;
            }
            if ((objc_msgSend(a1, "options") & 0x4000) == 0)
            {
              objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterBuilder());
              v8 = a4;
              v9 = a2;
              v10 = a1;
              v11 = a3;
              v12 = sub_1004CA6E8((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v10, v11, a4);
LABEL_34:
              v18 = v12;

              return (char *)v18;
            }
            v38 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterArrangeBuilder());
            v39 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterArrangeDataProvider());
            *(_QWORD *)&v39[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a3;
            v40.receiver = v39;
            v40.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
            v25 = a1;
            v26 = a3;
            v27 = a4;
            v28 = a2;
            v29 = (char *)v38;
            v30 = objc_msgSendSuper2(&v40, "init");
            v31 = OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider;
            goto LABEL_29;
          }
          v36 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterMediaBuilder());
          v37 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterMediaDataProvider());
          *(_QWORD *)&v37[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a3;
          v41.receiver = v37;
          v41.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
          v25 = a1;
          v26 = a3;
          v27 = a4;
          v28 = a2;
          v29 = (char *)v36;
          v30 = objc_msgSendSuper2(&v41, "init");
        }
        v31 = OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider;
      }
LABEL_29:
      *(_QWORD *)&v29[v31] = v30;

      v18 = sub_1004CA6E8((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v25, v26, a4);
      return (char *)v18;
    }
    objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
    v13 = a4;
    v22 = a2;
    v14 = a1;
    v15 = a3;
    v18 = sub_1004FFFB0((uint64_t)a2, (uint64_t)&off_1012706E0, (uint64_t)&off_10126F768, v14, v15, a4, 0, 0, 0.0, 0, 0, 0, 0);

  }
  return (char *)v18;
}

id sub_1004CB2D0()
{
  uint64_t v0;
  id result;

  result = (id)sub_1004C9AD8();
  if (!result)
  {
    result = (id)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_crlaxPopoverContainerViewController);
    if (!result)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"viewController(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2, 599, "No view controller for UILargeContentViewerInteraction. Returning a placeholder.", 80, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewController(for:)", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterBuilder.swift", 101, 2u, 599, (uint64_t)"No view controller for UILargeContentViewerInteraction. Returning a placeholder.", 80, 2u);
      return objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
    }
  }
  return result;
}

void sub_1004CB3D0()
{
  void *v0;
  void *v1;
  char v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = (void *)sub_10094E67C();
  if (v1 != (void *)1)
  {
    v3 = v1;
    if ((v2 & 1) == 0)
    {
      if (!v1)
        return;
      v4 = objc_msgSend(v1, "referenceColor");
      if (v4)
      {
        v5 = v4;
        v6 = objc_msgSend(v4, "UIColor");

        if (v6)
        {
          objc_msgSend(v0, "crl_ifVisuallyDifferentSetSelectedColor:preservingColorSpaceIfPossible:", v6, 1);

        }
      }
    }
    sub_1004CB49C(v3);
  }
}

void sub_1004CB49C(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_1004CB4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004CB4BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1004CB4C4()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004CB500(void *a1)
{
  void **v1;

  return sub_1004C93A4(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1004CB510()
{
  uint64_t v0;

  return swift_deallocObject(v0, 18, 7);
}

uint64_t sub_1004CB520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004C8D70(a1, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17), a2);
}

void sub_1004CB52C()
{
  AttributeScopes.UIKitAttributes.font.getter();
  __break(1u);
}

unint64_t sub_1004CB548()
{
  unint64_t result;

  result = qword_1013E10B0;
  if (!qword_1013E10B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.FontAttribute, &type metadata for AttributeScopes.UIKitAttributes.FontAttribute);
    atomic_store(result, (unint64_t *)&qword_1013E10B0);
  }
  return result;
}

void sub_1004CB58C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1004CB548();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_1004CB5B0()
{
  return 8;
}

uint64_t sub_1004CB5BC(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1004CB5C4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1004CB5D4()
{
  uint64_t v0;

  v0 = sub_1004B804C((uint64_t *)&unk_1013DFBE0);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1004CB618(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004CB624()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_1004CB648()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setHighlighted:", *(unsigned __int8 *)(v0 + 24));
}

unint64_t sub_1004CB65C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1D20;
  if (!qword_1013E1D20)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1013E1D20);
  }
  return result;
}

uint64_t sub_1004CB6A4(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1004CB6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1004CB724()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004CB748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004C840C(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1004CB750()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  if (v1 != (void *)1)

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004CB77C(Swift::Int a1, void *a2)
{
  uint64_t v2;

  sub_1004C7170(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_BYTE *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1004CB7BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1004B804C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004CB800(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1004B804C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004CB83C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_1004B804C(&qword_1013E10A0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 17) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for IndexSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v3 + v4) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((v7 + 31) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_release(*(_QWORD *)(v7 + v0 + 16));
  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_1004CB8F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1004B804C(&qword_1013E10A0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  return sub_1004C77A0(a1, *(_BYTE *)(v1 + 16), v1 + v4, *(_BYTE *)(v1 + v5), *(void (**)(_BYTE *, Swift::Int))((v5 & 0xFFFFFFFFFFFFFFF8) + v1 + 8), *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + v1 + 16), *(_QWORD *)(v1 + (((v5 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + (((v5 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

id sub_1004CB968(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1004CB978()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1004CB9A4(void *a1)
{
  uint64_t v1;

  return sub_1004C7108(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1004CB9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1004CB9D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004CB9F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004CBA24(uint64_t a1)
{
  uint64_t *v1;

  sub_1004C6BB8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1004CBA30(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004CBA70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

id sub_1004CBA9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1004C61E4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1004CBAA8(void **a1)
{
  uint64_t v1;

  sub_1004C5F68(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1004CBAB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004CBAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

void sub_1004CBB04(void *a1)
{
  uint64_t v1;

  sub_1004C562C(a1, v1);
}

uint64_t sub_1004CBB0C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);
  return a1;
}

uint64_t sub_1004CBB64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v1[40] = v0;
  v2 = type metadata accessor for CocoaError.Code(0);
  v1[41] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[42] = v3;
  v1[43] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  v1[44] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[45] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[46] = swift_task_alloc(v6);
  v1[47] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1700) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[48] = swift_task_alloc(v7);
  v1[49] = swift_task_alloc(v7);
  v1[50] = swift_task_alloc(v7);
  v1[51] = swift_task_alloc(v7);
  v8 = sub_1004B804C(&qword_1013F13B0);
  v1[52] = v8;
  v1[53] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v1[54] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[55] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[56] = swift_task_alloc(v11);
  v1[57] = swift_task_alloc(v11);
  v12 = sub_1004B804C(&qword_1013E04D0);
  v1[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v1[59] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v1[60] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[61] = swift_task_alloc(v15);
  v1[62] = swift_task_alloc(v15);
  v1[63] = swift_task_alloc(v15);
  v1[64] = swift_task_alloc(v15);
  v16 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v1[65] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004CBD44, v0, 0);
}

uint64_t sub_1004CBD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  char *v34;
  id v35;
  void *v36;
  os_unfair_lock_s *v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper__assetUUIDsNeedingDownload;
  *(_QWORD *)(v0 + 528) = OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper__assetUUIDsNeedingDownload;
  v3 = *(_QWORD *)(v1 + v2);
  if (v3)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + v2));
LABEL_34:
    v47 = *(_QWORD *)(v0 + 504);
    v46 = *(_QWORD *)(v0 + 512);
    v49 = *(_QWORD *)(v0 + 488);
    v48 = *(_QWORD *)(v0 + 496);
    v51 = *(_QWORD *)(v0 + 456);
    v50 = *(_QWORD *)(v0 + 464);
    v52 = *(_QWORD *)(v0 + 448);
    v53 = *(_QWORD *)(v0 + 424);
    v54 = *(_QWORD *)(v0 + 408);
    v55 = *(_QWORD *)(v0 + 400);
    v56 = *(_QWORD *)(v0 + 392);
    v57 = *(_QWORD *)(v0 + 384);
    v58 = *(_QWORD *)(v0 + 376);
    v59 = *(_QWORD *)(v0 + 368);
    v60 = *(_QWORD *)(v0 + 344);
    swift_task_dealloc(*(_QWORD *)(v0 + 520));
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
  v4 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v0 + 536) = v5;
  v6 = *(_QWORD *)(v5 + 16);
  v7 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  *(_QWORD *)(v0 + 296) = Set.init(minimumCapacity:)(v6, v4, v7);
  v8 = *(_BYTE *)(v5 + 32);
  *(_BYTE *)(v0 + 648) = v8;
  v9 = -1;
  v10 = -1 << v8;
  if (-(-1 << v8) < 64)
    v9 = ~(-1 << -(char)v10);
  v11 = v9 & *(_QWORD *)(v5 + 56);
  *(_QWORD *)(v0 + 544) = 0;
  v12 = swift_bridgeObjectRetain(v5);
  if (v11)
  {
    v13 = 0;
    v14 = __clz(__rbit64(v11));
    v15 = (v11 - 1) & v11;
    v16 = *(_QWORD **)(v0 + 536);
    goto LABEL_7;
  }
  v31 = 63 - v10;
  v16 = *(_QWORD **)(v0 + 536);
  if (v31 <= 0x7F)
    goto LABEL_32;
  v32 = v16[8];
  if (!v32)
  {
    if (v31 >= 0xC0)
    {
      v32 = v16[9];
      if (v32)
      {
        v13 = 2;
        goto LABEL_14;
      }
      if (v31 >= 0x100)
      {
        v32 = v16[10];
        if (v32)
        {
          v13 = 3;
          goto LABEL_14;
        }
        if (v31 >= 0x140)
        {
          v32 = v16[11];
          if (v32)
          {
            v13 = 4;
            goto LABEL_14;
          }
          v40 = 0;
          v41 = v31 >> 6;
          if (v41 <= 5)
            v41 = 5;
          v42 = v41 - 5;
          while (v42 != v40)
          {
            v32 = v16[v40++ + 12];
            if (v32)
            {
              v13 = v40 + 4;
              goto LABEL_14;
            }
          }
        }
      }
    }
LABEL_32:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 480) + 56))(*(_QWORD *)(v0 + 520), 1, 1, *(_QWORD *)(v0 + 472), v12);
    v24 = v16;
    goto LABEL_33;
  }
  v13 = 1;
LABEL_14:
  v15 = (v32 - 1) & v32;
  v14 = __clz(__rbit64(v32)) + (v13 << 6);
LABEL_7:
  *(_QWORD *)(v0 + 560) = v15;
  *(_QWORD *)(v0 + 552) = v13;
  v17 = *(_QWORD *)(v0 + 520);
  v18 = *(_QWORD *)(v0 + 472);
  v19 = *(_QWORD *)(v0 + 480);
  v20 = v16[6];
  v21 = *(_QWORD *)(v19 + 72);
  *(_QWORD *)(v0 + 568) = v21;
  v22 = v20 + v21 * v14;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v19 + 16);
  *(_QWORD *)(v0 + 576) = v23;
  v23(v17, v22, v18, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    v24 = *(_QWORD **)(v0 + 536);
LABEL_33:
    swift_release(v24);
    v43 = *(_QWORD *)(v0 + 528);
    v44 = *(_QWORD *)(v0 + 320);
    v3 = *(_QWORD *)(v0 + 296);
    v45 = *(_QWORD *)(v44 + v43);
    *(_QWORD *)(v44 + v43) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v45);
    goto LABEL_34;
  }
  v25 = *(_QWORD *)(v0 + 320);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 32))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 472));
  v26 = *(char **)(v25 + 112);
  v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 16));
  v28 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v29 = *(void **)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v29)
  {
    v30 = *(id *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v33 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v34 = v26;
    v35 = sub_100C7EE84((uint64_t)v34);

    v36 = *(void **)&v26[v28];
    *(_QWORD *)&v26[v28] = v35;
    v30 = v35;

    v29 = 0;
  }
  *(_QWORD *)(v0 + 584) = v30;
  v37 = *(os_unfair_lock_s **)(v27 + 16);
  v38 = v29;
  os_unfair_lock_unlock(v37);
  return swift_task_switch(sub_1004CC138, 0, 0);
}

uint64_t sub_1004CC138()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t **v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  int v49;
  Swift::Bool v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __n128 v64;
  int v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  __n128 v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v92;
  void (*v93)(uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(unint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t inited;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  os_unfair_lock_s *v128;
  Swift::Bool v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v136)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v137;

  v1 = v0[73];
  v2 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
  v0[74] = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
  v3 = *(_QWORD *)(v1 + v2);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  v4 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache;
  v0[75] = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache;
  v5 = (_QWORD *)(v1 + v4);
  v6 = swift_beginAccess(v1 + v4, v0 + 24, 0, 0);
  v7 = *v5;
  if (*(_QWORD *)(*v5 + 16))
  {
    v8 = v0[64];
    swift_bridgeObjectRetain(*v5);
    v9 = sub_100842EFC(v8);
    v10 = v0[51];
    v11 = v0[44];
    v12 = v0[45];
    if ((v13 & 1) != 0)
    {
      sub_1004CFCB8(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v12 + 72) * v9, v0[51]);
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v14(v10, 0, 1, v11);
    }
    else
    {
      v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v14(v0[51], 1, 1, v11);
    }
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[45] + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v14)(v0[51], 1, 1, v0[44], v6);
  }
  v0[76] = (uint64_t)v14;
  v15 = v0[51];
  v16 = v0[44];
  v17 = v0[45];
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  v0[77] = (uint64_t)v18;
  if (v18(v15, 1, v16) == 1)
  {
    sub_1004CB800(v0[51], (uint64_t *)&unk_1013E1700);
    goto LABEL_11;
  }
  v132 = v2;
  v134 = v1;
  v136 = v14;
  v19 = v0[57];
  v20 = v0[54];
  v22 = v0[52];
  v21 = v0[53];
  v23 = *(_DWORD *)(v0[51] + *(int *)(v0[44] + 48));
  v24 = *(int *)(v22 + 48);
  v25 = *(void (**)(uint64_t))(v0[55] + 32);
  v25(v21);
  *(_DWORD *)(v21 + v24) = v23;
  v26 = *(_DWORD *)(v21 + *(int *)(v22 + 48));
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v19, v21, v20);
  if ((v26 & 2) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v0[55] + 8))(v0[57], v0[54]);
    v1 = v134;
    v14 = v136;
    v2 = v132;
LABEL_11:
    v27 = *(_QWORD *)(v1 + v2);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 16));
    v28 = *v5;
    if (*(_QWORD *)(*v5 + 16))
    {
      v29 = v0[64];
      swift_bridgeObjectRetain(v28);
      v30 = sub_100842EFC(v29);
      v31 = v0[50];
      if ((v32 & 1) != 0)
      {
        v33 = v0[44];
        sub_1004CFCB8(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v0[45] + 72) * v30, v0[50]);
        v34 = v31;
        v35 = 0;
        v36 = v33;
      }
      else
      {
        v36 = v0[44];
        v34 = v0[50];
        v35 = 1;
      }
      v14(v34, v35, 1, v36);
      swift_bridgeObjectRelease(v28);
    }
    else
    {
      v14(v0[50], 1, 1, v0[44]);
    }
    v38 = v0[50];
    v39 = v0[44];
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
    if (v18(v38, 1, v39) == 1)
    {
      sub_1004CB800(v0[50], (uint64_t *)&unk_1013E1700);
      v40 = (uint64_t **)swift_task_alloc(dword_10140C614);
      v0[79] = (uint64_t)v40;
      *v40 = v0;
      v40[1] = (uint64_t *)sub_1004CCDEC;
      return sub_100C780D0(v0[64]);
    }
    v42 = v0[56];
    v43 = v0[54];
    v44 = v0[50];
    v46 = v0[46];
    v45 = v0[47];
    v47 = *(int *)(v0[44] + 48);
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[55] + 32);
    v48(v45, v44, v43);
    v49 = *(_DWORD *)(v44 + v47);
    v48(v46, v45, v43);
    v48(v42, v46, v43);
    v50 = URL.checkResourceIsReachable()();
    if (v51)
    {
      v52 = v51;
      v54 = v0[42];
      v53 = v0[43];
      v55 = v0[41];
      v56 = swift_errorRetain(v52);
      static CocoaError.fileNoSuchFile.getter(v56);
      v57 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
      v58 = static _ErrorCodeProtocol.~= infix(_:_:)(v53, v52, v55, v57);
      swift_errorRelease(v52);
      v59 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v59(v53, v55);
      if ((v58 & 1) == 0)
      {
        v60 = v0[43];
        v61 = v0[41];
        v62 = swift_errorRetain(v52);
        static CocoaError.fileReadNoSuchFile.getter(v62);
        v63 = static _ErrorCodeProtocol.~= infix(_:_:)(v60, v52, v61, v57);
        swift_errorRelease(v52);
        v59(v60, v61);
        if ((v63 & 1) == 0)
        {
          swift_willThrow(v64);
          if (qword_1013DD858 != -1)
            swift_once(&qword_1013DD858, sub_100A05554);
          swift_beginAccess(&static OS_os_log.boardStore, v0 + 27, 0, 0);
          v112 = (void *)static OS_os_log.boardStore;
          v113 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v113, v0 + 2);
          *(_OWORD *)(inited + 16) = xmmword_100EF5550;
          v115 = v112;
          v116 = URL.path.getter(v115);
          v118 = v117;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          v119 = sub_1004CFC2C();
          *(_QWORD *)(inited + 64) = v119;
          *(_QWORD *)(inited + 32) = v116;
          *(_QWORD *)(inited + 40) = v118;
          swift_getErrorValue(v52, v0 + 38, v0 + 21);
          v120 = Error.publicDescription.getter(v0[22], v0[23]);
          *(_QWORD *)(inited + 96) = &type metadata for String;
          *(_QWORD *)(inited + 104) = v119;
          *(_QWORD *)(inited + 72) = v120;
          *(_QWORD *)(inited + 80) = v121;
          swift_getErrorValue(v52, v0 + 36, v0 + 33);
          v122 = Error.fullDescription.getter(v0[34]);
          *(_QWORD *)(inited + 136) = &type metadata for String;
          *(_QWORD *)(inited + 144) = v119;
          *(_QWORD *)(inited + 112) = v122;
          *(_QWORD *)(inited + 120) = v123;
          v124 = static os_log_type_t.error.getter(v122);
          sub_100A06EBC((uint64_t)v115, &_mh_execute_header, v124, "Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
          swift_errorRelease(v52);
          swift_setDeallocating(inited);
          v125 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 3, v125);

LABEL_45:
          (*(void (**)(uint64_t, uint64_t))(v0[55] + 8))(v0[56], v0[54]);
          v37 = 0;
          goto LABEL_46;
        }
      }
      swift_errorRelease(v52);
      v129 = 0;
      v65 = 2;
      if ((v49 & 1) != 0)
        goto LABEL_25;
    }
    else
    {
      v129 = v50;
      if (v50)
        v65 = 6;
      else
        v65 = 2;
      if ((v49 & 1) != 0)
LABEL_25:
        v65 |= 1u;
    }
    v130 = v65;
    v135 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v0[77];
    v66 = v0[73];
    v67 = (void (*)(uint64_t, uint64_t, uint64_t))v0[72];
    v69 = v0[63];
    v68 = v0[64];
    v70 = v0[59];
    v71 = v0[55];
    v72 = v0[56];
    v73 = v0[54];
    v74 = v0[49];
    v75 = v0[44];
    v131 = v66 + v0[75];
    v133 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[76];
    v128 = *(os_unfair_lock_s **)(*(_QWORD *)(v66 + v0[74]) + 16);
    os_unfair_lock_lock(v128);
    v67(v69, v68, v70);
    v76 = *(int *)(v75 + 48);
    v77 = v73;
    v78 = v0 + 30;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v74, v72, v77);
    *(_DWORD *)(v74 + v76) = v130;
    v133(v74, 0, 1, v75);
    v79 = swift_beginAccess(v131, v0 + 30, 33, 0);
    v80 = v135(v74, 1, v75, v79);
    v81 = v0[75];
    v82 = v0[73];
    v83 = v0[63];
    if (v80 == 1)
    {
      sub_1004CB800(v0[49], (uint64_t *)&unk_1013E1700);
      v84 = *(_QWORD *)(v82 + v81);
      swift_bridgeObjectRetain(v84);
      v85 = sub_100842EFC(v83);
      v87 = v86;
      v88 = swift_bridgeObjectRelease(v84);
      if ((v87 & 1) != 0)
      {
        v89 = v0[75];
        v90 = v0[73];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v90 + v89));
        v92 = *(_QWORD *)(v90 + v89);
        v0[39] = v92;
        *(_QWORD *)(v90 + v89) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10082CC74();
          v92 = v0[39];
        }
        v93 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v0[76];
        v94 = v0[75];
        v95 = v0[73];
        v96 = v0[48];
        v97 = v0[44];
        v98 = v0[45];
        v99 = *(void (**)(unint64_t, uint64_t))(v0[60] + 8);
        v99(*(_QWORD *)(v92 + 48) + v0[71] * v85, v0[59]);
        v100 = v0[39];
        sub_1004CFC70(*(_QWORD *)(v100 + 56) + *(_QWORD *)(v98 + 72) * v85, v96);
        sub_10051A120(v85, v100);
        v101 = *(_QWORD *)(v95 + v94);
        *(_QWORD *)(v95 + v94) = v100;
        v102 = swift_bridgeObjectRelease(v101);
        v93(v96, 0, 1, v97, v102);
        v78 = v0 + 30;
      }
      else
      {
        v110 = v0[60];
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v0[76])(v0[48], 1, 1, v0[44], v88);
        v99 = *(void (**)(unint64_t, uint64_t))(v110 + 8);
      }
      v111 = v0[48];
      v99(v0[63], v0[59]);
      sub_1004CB800(v111, (uint64_t *)&unk_1013E1700);
    }
    else
    {
      v103 = v0[59];
      v104 = v0[60];
      v105 = v0[46];
      sub_1004CFC70(v0[49], v105);
      v106 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v82 + v81));
      v137 = *(_QWORD *)(v82 + v81);
      *(_QWORD *)(v82 + v81) = 0x8000000000000000;
      sub_100825B60(v105, v83, v106);
      v107 = *(_QWORD *)(v82 + v81);
      *(_QWORD *)(v82 + v81) = v137;
      v108 = swift_bridgeObjectRelease(v107);
      (*(void (**)(uint64_t, uint64_t, __n128))(v104 + 8))(v83, v103, v108);
    }
    swift_endAccess(v78);
    os_unfair_lock_unlock(v128);
    if (v129)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[55] + 32))(v0[58], v0[56], v0[54]);
      v37 = 0;
      v109 = 0;
      goto LABEL_47;
    }
    goto LABEL_45;
  }
  if ((v26 & 4) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v0[55] + 8))(v0[57], v0[54]);
    v37 = v0[68];
LABEL_46:
    v109 = 1;
    goto LABEL_47;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v0[58], v0[57], v0[54]);
  v109 = 0;
  v37 = v0[68];
LABEL_47:
  v0[78] = v37;
  v126 = (void *)v0[73];
  v127 = v0[40];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[55] + 56))(v0[58], v109, 1, v0[54]);

  return swift_task_switch(sub_1004CC9F8, v127, 0);
}

uint64_t sub_1004CC9F8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  int64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  char *v33;
  id v34;
  void *v35;
  os_unfair_lock_s *v36;
  id v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 440) + 48))(v1, 1, *(_QWORD *)(v0 + 432));
  sub_1004CB800(v1, &qword_1013E04D0);
  if (v2 == 1)
  {
    v4 = *(_QWORD *)(v0 + 488);
    v3 = *(_QWORD *)(v0 + 496);
    v5 = *(_QWORD *)(v0 + 472);
    v6 = *(_QWORD *)(v0 + 480);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 576))(v4, *(_QWORD *)(v0 + 512), v5);
    sub_100AD569C(v3, v4);
    v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 480) + 8);
  }
  result = ((uint64_t (*)(_QWORD, _QWORD))v7)(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 472));
  v9 = *(_QWORD *)(v0 + 560);
  v10 = *(_QWORD *)(v0 + 552);
  *(_QWORD *)(v0 + 544) = *(_QWORD *)(v0 + 624);
  if (!v9)
  {
    v28 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
    }
    else
    {
      v29 = (unint64_t)((1 << *(_BYTE *)(v0 + 648)) + 63) >> 6;
      v13 = *(_QWORD *)(v0 + 536);
      if (v28 >= v29)
        goto LABEL_26;
      v30 = v13 + 56;
      v31 = *(_QWORD *)(v13 + 56 + 8 * v28);
      ++v10;
      if (v31)
      {
LABEL_13:
        v11 = (v31 - 1) & v31;
        v12 = __clz(__rbit64(v31)) + (v10 << 6);
        goto LABEL_6;
      }
      v10 = v28 + 1;
      if (v28 + 1 >= v29)
        goto LABEL_26;
      v31 = *(_QWORD *)(v30 + 8 * v10);
      if (v31)
        goto LABEL_13;
      v10 = v28 + 2;
      if (v28 + 2 >= v29)
        goto LABEL_26;
      v31 = *(_QWORD *)(v30 + 8 * v10);
      if (v31)
        goto LABEL_13;
      v38 = v28 + 3;
      if (v38 >= v29)
      {
LABEL_26:
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 480) + 56))(*(_QWORD *)(v0 + 520), 1, 1, *(_QWORD *)(v0 + 472));
        v21 = v13;
        goto LABEL_27;
      }
      v31 = *(_QWORD *)(v30 + 8 * v38);
      if (v31)
      {
        v10 = v38;
        goto LABEL_13;
      }
      while (1)
      {
        v10 = v38 + 1;
        if (__OFADD__(v38, 1))
          break;
        if (v10 >= v29)
          goto LABEL_26;
        v31 = *(_QWORD *)(v30 + 8 * v10);
        ++v38;
        if (v31)
          goto LABEL_13;
      }
    }
    __break(1u);
    return result;
  }
  v11 = (v9 - 1) & v9;
  v12 = __clz(__rbit64(v9)) | (v10 << 6);
  v13 = *(_QWORD *)(v0 + 536);
LABEL_6:
  *(_QWORD *)(v0 + 560) = v11;
  *(_QWORD *)(v0 + 552) = v10;
  v14 = *(_QWORD *)(v0 + 520);
  v15 = *(_QWORD *)(v0 + 472);
  v16 = *(_QWORD *)(v0 + 480);
  v17 = *(_QWORD *)(v13 + 48);
  v18 = *(_QWORD *)(v16 + 72);
  *(_QWORD *)(v0 + 568) = v18;
  v19 = v17 + v18 * v12;
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v0 + 576) = v20;
  v20(v14, v19, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v21 = *(_QWORD *)(v0 + 536);
LABEL_27:
    swift_release(v21);
    v39 = *(_QWORD *)(v0 + 528);
    v40 = *(_QWORD *)(v0 + 320);
    v41 = *(_QWORD *)(v0 + 296);
    v42 = *(_QWORD *)(v40 + v39);
    *(_QWORD *)(v40 + v39) = v41;
    swift_bridgeObjectRetain(v41);
    swift_bridgeObjectRelease(v42);
    v44 = *(_QWORD *)(v0 + 504);
    v43 = *(_QWORD *)(v0 + 512);
    v46 = *(_QWORD *)(v0 + 488);
    v45 = *(_QWORD *)(v0 + 496);
    v48 = *(_QWORD *)(v0 + 456);
    v47 = *(_QWORD *)(v0 + 464);
    v49 = *(_QWORD *)(v0 + 448);
    v50 = *(_QWORD *)(v0 + 424);
    v51 = *(_QWORD *)(v0 + 408);
    v52 = *(_QWORD *)(v0 + 400);
    v53 = *(_QWORD *)(v0 + 392);
    v54 = *(_QWORD *)(v0 + 384);
    v55 = *(_QWORD *)(v0 + 376);
    v56 = *(_QWORD *)(v0 + 368);
    v57 = *(_QWORD *)(v0 + 344);
    swift_task_dealloc(*(_QWORD *)(v0 + 520));
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v41);
  }
  v22 = *(_QWORD *)(v0 + 320);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 480) + 32))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 520), *(_QWORD *)(v0 + 472));
  v23 = *(char **)(v22 + 112);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 16));
  v25 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v26 = *(void **)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v26)
  {
    v27 = *(id *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v32 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v33 = v23;
    v34 = sub_100C7EE84((uint64_t)v33);

    v35 = *(void **)&v23[v25];
    *(_QWORD *)&v23[v25] = v34;
    v27 = v34;

    v26 = 0;
  }
  *(_QWORD *)(v0 + 584) = v27;
  v36 = *(os_unfair_lock_s **)(v24 + 16);
  v37 = v26;
  os_unfair_lock_unlock(v36);
  return swift_task_switch(sub_1004CC138, 0, 0);
}

uint64_t sub_1004CCDEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 632);
  *(_QWORD *)(*(_QWORD *)v1 + 640) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1004CCE48, 0, 0);
}

uint64_t sub_1004CCE48()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Bool v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __n128 v24;
  int v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __n128 v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD, uint64_t, uint64_t, __n128);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(unint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t inited;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  os_unfair_lock_s *v89;
  Swift::Bool v90;
  int v91;
  uint64_t v92;
  void (*v93)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t (*v94)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v95;

  v1 = v0[80];
  if (v1)
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain(v2);
    v4 = 1;
  }
  else
  {
    v4 = 0;
    v3 = 0;
    v2 = 0;
  }
  v5 = v0[64];
  v6 = v0[56];
  v7 = sub_100C7F2B8(v5, v3, v2);
  v9 = v8;
  URL.appendingPathComponent(_:)(v7, v8);
  swift_bridgeObjectRelease(v9);
  sub_100C76E78(v5, v6, v4);
  swift_release(v1);
  swift_bridgeObjectRelease(v2);
  v10 = URL.checkResourceIsReachable()();
  if (v11)
  {
    v12 = v11;
    v14 = v0[42];
    v13 = v0[43];
    v15 = v0[41];
    v16 = swift_errorRetain(v12);
    static CocoaError.fileNoSuchFile.getter(v16);
    v17 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    v18 = static _ErrorCodeProtocol.~= infix(_:_:)(v13, v12, v15, v17);
    swift_errorRelease(v12);
    v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v19(v13, v15);
    if ((v18 & 1) == 0)
    {
      v20 = v0[43];
      v21 = v0[41];
      v22 = swift_errorRetain(v12);
      static CocoaError.fileReadNoSuchFile.getter(v22);
      v23 = static _ErrorCodeProtocol.~= infix(_:_:)(v20, v12, v21, v17);
      swift_errorRelease(v12);
      v19(v20, v21);
      if ((v23 & 1) == 0)
      {
        swift_willThrow(v24);
        if (qword_1013DD858 != -1)
          swift_once(&qword_1013DD858, sub_100A05554);
        swift_beginAccess(&static OS_os_log.boardStore, v0 + 27, 0, 0);
        v72 = (void *)static OS_os_log.boardStore;
        v73 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v73, v0 + 2);
        *(_OWORD *)(inited + 16) = xmmword_100EF5550;
        v75 = v72;
        v76 = URL.path.getter(v75);
        v78 = v77;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v79 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v79;
        *(_QWORD *)(inited + 32) = v76;
        *(_QWORD *)(inited + 40) = v78;
        swift_getErrorValue(v12, v0 + 38, v0 + 21);
        v80 = Error.publicDescription.getter(v0[22], v0[23]);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v79;
        *(_QWORD *)(inited + 72) = v80;
        *(_QWORD *)(inited + 80) = v81;
        swift_getErrorValue(v12, v0 + 36, v0 + 33);
        v82 = Error.fullDescription.getter(v0[34]);
        *(_QWORD *)(inited + 136) = &type metadata for String;
        *(_QWORD *)(inited + 144) = v79;
        *(_QWORD *)(inited + 112) = v82;
        *(_QWORD *)(inited + 120) = v83;
        v84 = static os_log_type_t.error.getter(v82);
        sub_100A06EBC((uint64_t)v75, &_mh_execute_header, v84, "Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
        swift_errorRelease(v12);
        swift_setDeallocating(inited);
        v85 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 3, v85);

        goto LABEL_27;
      }
    }
    swift_errorRelease(v12);
    v90 = 0;
    v25 = 2;
    if (v1)
      goto LABEL_8;
  }
  else
  {
    v90 = v10;
    if (v10)
      v25 = 6;
    else
      v25 = 2;
    if (v1)
LABEL_8:
      v25 |= 1u;
  }
  v91 = v25;
  v94 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v0[77];
  v26 = v0[73];
  v27 = (void (*)(uint64_t, uint64_t, uint64_t))v0[72];
  v29 = v0[63];
  v28 = v0[64];
  v30 = v0[59];
  v31 = v0[55];
  v32 = v0[56];
  v33 = v0[54];
  v34 = v0[49];
  v35 = v0[44];
  v92 = v26 + v0[75];
  v93 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v0[76];
  v89 = *(os_unfair_lock_s **)(*(_QWORD *)(v26 + v0[74]) + 16);
  os_unfair_lock_lock(v89);
  v27(v29, v28, v30);
  v36 = *(int *)(v35 + 48);
  v37 = v33;
  v38 = v0 + 30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v32, v37);
  *(_DWORD *)(v34 + v36) = v91;
  v93(v34, 0, 1, v35);
  v39 = swift_beginAccess(v92, v0 + 30, 33, 0);
  v40 = v94(v34, 1, v35, v39);
  v41 = v0[75];
  v42 = v0[73];
  v43 = v0[63];
  if (v40 == 1)
  {
    sub_1004CB800(v0[49], (uint64_t *)&unk_1013E1700);
    v44 = *(_QWORD *)(v42 + v41);
    swift_bridgeObjectRetain(v44);
    v45 = sub_100842EFC(v43);
    v47 = v46;
    v48 = swift_bridgeObjectRelease(v44);
    if ((v47 & 1) != 0)
    {
      v49 = v0[75];
      v50 = v0[73];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v50 + v49));
      v52 = *(_QWORD *)(v50 + v49);
      v0[39] = v52;
      *(_QWORD *)(v50 + v49) = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10082CC74();
        v52 = v0[39];
      }
      v53 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v0[76];
      v54 = v0[75];
      v55 = v0[73];
      v56 = v0[48];
      v57 = v0[44];
      v58 = v0[45];
      v59 = *(void (**)(unint64_t, uint64_t))(v0[60] + 8);
      v59(*(_QWORD *)(v52 + 48) + v0[71] * v45, v0[59]);
      v60 = v0[39];
      sub_1004CFC70(*(_QWORD *)(v60 + 56) + *(_QWORD *)(v58 + 72) * v45, v56);
      sub_10051A120(v45, v60);
      v61 = *(_QWORD *)(v55 + v54);
      *(_QWORD *)(v55 + v54) = v60;
      v62 = swift_bridgeObjectRelease(v61);
      v53(v56, 0, 1, v57, v62);
      v38 = v0 + 30;
    }
    else
    {
      v69 = v0[60];
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v0[76])(v0[48], 1, 1, v0[44], v48);
      v59 = *(void (**)(unint64_t, uint64_t))(v69 + 8);
    }
    v70 = v0[48];
    v59(v0[63], v0[59]);
    sub_1004CB800(v70, (uint64_t *)&unk_1013E1700);
  }
  else
  {
    v63 = v0[59];
    v64 = v0[60];
    v65 = v0[46];
    sub_1004CFC70(v0[49], v65);
    v66 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v42 + v41));
    v95 = *(_QWORD *)(v42 + v41);
    *(_QWORD *)(v42 + v41) = 0x8000000000000000;
    sub_100825B60(v65, v43, v66);
    v67 = *(_QWORD *)(v42 + v41);
    *(_QWORD *)(v42 + v41) = v95;
    v68 = swift_bridgeObjectRelease(v67);
    (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v43, v63, v68);
  }
  swift_endAccess(v38);
  os_unfair_lock_unlock(v89);
  if (!v90)
  {
LABEL_27:
    (*(void (**)(uint64_t, uint64_t))(v0[55] + 8))(v0[56], v0[54]);
    v71 = 1;
    goto LABEL_28;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[55] + 32))(v0[58], v0[56], v0[54]);
  v71 = 0;
LABEL_28:
  v0[78] = 0;
  v86 = (void *)v0[73];
  v87 = v0[40];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[55] + 56))(v0[58], v71, 1, v0[54]);

  return swift_task_switch(sub_1004CC9F8, v87, 0);
}

uint64_t sub_1004CD474()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch(sub_1004CD48C, v0, 0);
}

uint64_t sub_1004CD48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_isDownloading;
  *(_QWORD *)(v0 + 48) = OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_isDownloading;
  if ((*(_BYTE *)(v1 + v2) & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = (_QWORD *)swift_task_alloc(dword_1013DFD14);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1004CD504;
  return sub_1004CBB64();
}

uint64_t sub_1004CD504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1004CD564, v3, 0);
}

uint64_t sub_1004CD564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 64);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 40);
    *(_BYTE *)(v2 + *(_QWORD *)(v0 + 48)) = 1;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_downloadWasCancelled) = 0;
    v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_assetUUIDsBeingDownloaded);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_assetUUIDsBeingDownloaded, v0 + 16, 1, 0);
    *v3 = v1;
    swift_bridgeObjectRetain(v1);
    swift_bridgeObjectRelease();
    v4 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 72) = v4;
    *(_QWORD *)(v4 + 16) = v1;
    *(_QWORD *)(v4 + 24) = v2;
    if (sub_100DE6FA0(2, 18, 0, 0))
    {
      v5 = (_QWORD *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
      *(_QWORD *)(v0 + 80) = v5;
      *v5 = v0;
      v5[1] = sub_1004CD6B0;
      return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_1013DFE98, v4, sub_1004CF98C, *(_QWORD *)(v0 + 40), 0, 0, (char *)&type metadata for () + 8);
    }
    else
    {
      return swift_task_switch(sub_1004CD72C, 0, 0);
    }
  }
  else
  {
    v7 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
  }
}

uint64_t sub_1004CD6B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 80));
  if (v0)
  {
    v2[15] = v0;
    v3 = v2[5];
    v4 = sub_1004CD988;
  }
  else
  {
    v5 = v2[9];
    v6 = v2[5];
    swift_bridgeObjectRelease();
    swift_task_dealloc(v5);
    v4 = sub_1004CD97C;
    v3 = v6;
  }
  return swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004CD72C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 88) = swift_task_addCancellationHandler(sub_1004CF98C, v1);
  return swift_task_switch(sub_1004CD778, v1, 0);
}

uint64_t sub_1004CD778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[8];
  v2 = v0[5];
  v3 = sub_1004B7878(&qword_1013DFEA0, type metadata accessor for CRLAssetDownloadHelper, (uint64_t)&unk_100EF5BD0);
  v4 = swift_task_alloc(32);
  v0[12] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_1004CD83C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, v2, v3, 0x64616F6C6E776F64, 0xEA00000000002928, sub_1004CFA04, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1004CD83C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 40);
    v5 = sub_1004CD8FC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 96));
    v5 = sub_1004CD8AC;
    v4 = 0;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1004CD8AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_task_removeCancellationHandler(v0[11]);
  v1 = v0[9];
  v2 = v0[5];
  swift_bridgeObjectRelease();
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1004CD97C, v2, 0);
}

uint64_t sub_1004CD8FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  return swift_task_switch(sub_1004CD938, 0, 0);
}

uint64_t sub_1004CD938()
{
  _QWORD *v0;

  swift_task_removeCancellationHandler(v0[11]);
  v0[15] = v0[14];
  return swift_task_switch(sub_1004CD988, v0[5], 0);
}

uint64_t sub_1004CD97C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004CD988()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1004CD9C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  _QWORD v23[4];

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_101268468, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = a1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = swift_retain(a1);
  if (v9 == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E01F0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_101268490, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1013DFEC0;
  *(_QWORD *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, (char *)&type metadata for () + 8, &unk_1013DFEC8);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1004CDB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1004CDBB0, a4, 0);
}

uint64_t sub_1004CDBB0()
{
  uint64_t v0;

  sub_1004CE3E4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004CDBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1004CDBFC, a3, 0);
}

uint64_t sub_1004CDBFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = sub_1004B7878(&qword_1013DFEA0, type metadata accessor for CRLAssetDownloadHelper, (uint64_t)&unk_100EF5BD0);
  v4 = swift_task_alloc(32);
  v0[5] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1004CDCC4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0[2], v1, v3, 0x64616F6C6E776F64, 0xEA00000000002928, sub_1004CFD0C, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_1004CDCC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1004CDD38, *(_QWORD *)(v3 + 32), 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1004CDD38()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1004CDD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double result;
  uint64_t v20;

  v6 = sub_1004B804C(&qword_1013EB680);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v14 = sub_1004B7878(&qword_1013DFEA0, type metadata accessor for CRLAssetDownloadHelper, (uint64_t)&unk_100EF5BD0);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = (v15 + 48) & ~v15;
  v17 = (char *)swift_allocObject(&unk_101268440, v16 + v8, v15 | 7);
  *((_QWORD *)v17 + 2) = a3;
  *((_QWORD *)v17 + 3) = v14;
  *((_QWORD *)v17 + 4) = a2;
  *((_QWORD *)v17 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v16], v9, v6);
  swift_retain_n(a3, 2);
  swift_bridgeObjectRetain(a2);
  v18 = sub_100521B98((uint64_t)v12, (uint64_t)&unk_1013DFEB0, (uint64_t)v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1004CDEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v8 = type metadata accessor for UUID(0);
  v6[5] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[6] = v9;
  v6[7] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v6[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1004CDF78, a5, 0);
}

uint64_t sub_1004CDF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 96) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-(-1 << v3) < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 56);
  v7 = swift_bridgeObjectRetain(v2);
  if (!v6)
  {
    v15 = 63 - v5;
    if ((unint64_t)(63 - v5) > 0x7F)
    {
      v16 = *(_QWORD *)(v2 + 64);
      if (v16)
      {
        v8 = 1;
LABEL_11:
        v10 = (v16 - 1) & v16;
        v9 = __clz(__rbit64(v16)) + (v8 << 6);
        goto LABEL_5;
      }
      if (v15 >= 0xC0)
      {
        v16 = *(_QWORD *)(v2 + 72);
        if (v16)
        {
          v8 = 2;
          goto LABEL_11;
        }
        if (v15 >= 0x100)
        {
          v16 = *(_QWORD *)(v2 + 80);
          if (v16)
          {
            v8 = 3;
            goto LABEL_11;
          }
          if (v15 >= 0x140)
          {
            v16 = *(_QWORD *)(v2 + 88);
            if (v16)
            {
              v8 = 4;
              goto LABEL_11;
            }
            v17 = 0;
            v18 = v15 >> 6;
            if (v18 <= 5)
              v18 = 5;
            v19 = v18 - 5;
            while (v19 != v17)
            {
              v16 = *(_QWORD *)(v2 + 96 + 8 * v17++);
              if (v16)
              {
                v8 = v17 + 4;
                goto LABEL_11;
              }
            }
          }
        }
      }
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v1 + 56))(*(_QWORD *)(v0 + 64), 1, 1, *(_QWORD *)(v0 + 40), v7);
    goto LABEL_28;
  }
  v8 = 0;
  v9 = __clz(__rbit64(v6));
  v10 = (v6 - 1) & v6;
LABEL_5:
  *(_QWORD *)(v0 + 72) = v8;
  *(_QWORD *)(v0 + 80) = v10;
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v1 + 16))(v11, *(_QWORD *)(v2 + 48) + *(_QWORD *)(v1 + 72) * v9, v12, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v11, 1, v12) != 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 32))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
    v13 = (_QWORD *)swift_task_alloc(dword_1013DFD24);
    *(_QWORD *)(v0 + 88) = v13;
    *v13 = v0;
    v13[1] = sub_1004CE190;
    return sub_1004CE904(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
  }
  v2 = *(_QWORD *)(v0 + 16);
LABEL_28:
  swift_release(v2);
  v20 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004CE190()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_task_switch(sub_1004CE1E8, v1, 0);
}

uint64_t sub_1004CE1E8()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  if (v3)
  {
    v4 = (v3 - 1) & v3;
    v5 = __clz(__rbit64(v3)) | (v2 << 6);
    v6 = *(_QWORD *)(v0 + 16);
LABEL_3:
    *(_QWORD *)(v0 + 72) = v2;
    *(_QWORD *)(v0 + 80) = v4;
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v7, *(_QWORD *)(v6 + 48) + *(_QWORD *)(v9 + 72) * v5, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 32))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
      v11 = (_QWORD *)swift_task_alloc(dword_1013DFD24);
      *(_QWORD *)(v0 + 88) = v11;
      *v11 = v0;
      v11[1] = sub_1004CE190;
      return sub_1004CE904(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 32));
    }
    v10 = *(_QWORD *)(v0 + 16);
    goto LABEL_21;
  }
  v12 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v13 = (unint64_t)((1 << *(_BYTE *)(v0 + 96)) + 63) >> 6;
    v6 = *(_QWORD *)(v0 + 16);
    if (v12 >= v13)
      goto LABEL_20;
    v14 = v6 + 56;
    v15 = *(_QWORD *)(v6 + 56 + 8 * v12);
    ++v2;
    if (v15)
    {
LABEL_9:
      v4 = (v15 - 1) & v15;
      v5 = __clz(__rbit64(v15)) + (v2 << 6);
      goto LABEL_3;
    }
    v2 = v12 + 1;
    if (v12 + 1 >= v13)
      goto LABEL_20;
    v15 = *(_QWORD *)(v14 + 8 * v2);
    if (v15)
      goto LABEL_9;
    v2 = v12 + 2;
    if (v12 + 2 >= v13)
      goto LABEL_20;
    v15 = *(_QWORD *)(v14 + 8 * v2);
    if (v15)
      goto LABEL_9;
    v16 = v12 + 3;
    if (v16 >= v13)
    {
LABEL_20:
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 64), 1, 1, *(_QWORD *)(v0 + 40));
      v10 = v6;
LABEL_21:
      swift_release(v10);
      v17 = *(_QWORD *)(v0 + 56);
      swift_task_dealloc(*(_QWORD *)(v0 + 64));
      swift_task_dealloc(v17);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v15 = *(_QWORD *)(v14 + 8 * v16);
    if (v15)
    {
      v2 = v16;
      goto LABEL_9;
    }
    while (1)
    {
      v2 = v16 + 1;
      if (__OFADD__(v16, 1))
        break;
      if (v2 >= v13)
        goto LABEL_20;
      v15 = *(_QWORD *)(v14 + 8 * v2);
      ++v16;
      if (v15)
        goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

void sub_1004CE3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  int64_t v29;
  _QWORD *v30;
  uint64_t v31;
  __n128 v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  void (*v39)(char *, unint64_t, uint64_t, __n128);
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int64_t v71;
  uint64_t v72;
  _QWORD v73[4];
  char v74[32];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v72 - 8);
  v5 = __chkstk_darwin(v72);
  v66 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v61 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0;
  v13 = *(char **)(v0 + 112);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  v15 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  v16 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager];
  if (v16)
  {
    v68 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager];
  }
  else
  {
    v17 = v13;
    v18 = sub_1005D2858(v17);

    v19 = *(_QWORD *)&v13[v15];
    *(_QWORD *)&v13[v15] = v18;
    v68 = v18;
    swift_retain(v18);
    swift_release(v19);
    v16 = 0;
  }
  v20 = v72;
  v21 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain(v16);
  os_unfair_lock_unlock(v21);
  v22 = (uint64_t *)(v12 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_assetUUIDsBeingDownloaded);
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_assetUUIDsBeingDownloaded, v74, 0, 0);
  v23 = *v22;
  v24 = *(_QWORD *)(*v22 + 56);
  v61 = *v22 + 56;
  v25 = 1 << *(_BYTE *)(v23 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v62 = (unint64_t)(v25 + 63) >> 6;
  v69 = v23;
  v28 = swift_bridgeObjectRetain(v23);
  v29 = 0;
  v64 = v8;
  v65 = (char *)&type metadata for () + 8;
  v63 = v11;
  while (1)
  {
    if (v27)
    {
      v33 = __clz(__rbit64(v27));
      v34 = (v27 - 1) & v27;
      v35 = v33 | (v29 << 6);
      goto LABEL_25;
    }
    v36 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v36 >= v62)
      goto LABEL_33;
    v37 = *(_QWORD *)(v61 + 8 * v36);
    ++v29;
    if (!v37)
    {
      v29 = v36 + 1;
      if (v36 + 1 >= v62)
        goto LABEL_33;
      v37 = *(_QWORD *)(v61 + 8 * v29);
      if (!v37)
      {
        v29 = v36 + 2;
        if (v36 + 2 >= v62)
          goto LABEL_33;
        v37 = *(_QWORD *)(v61 + 8 * v29);
        if (!v37)
          break;
      }
    }
LABEL_24:
    v34 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v29 << 6);
LABEL_25:
    v39 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v4 + 16);
    v39(v11, *(_QWORD *)(v69 + 48) + *(_QWORD *)(v4 + 72) * v35, v20, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v11, 0, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v20) == 1)
      goto LABEL_34;
    v70 = v34;
    v71 = v29;
    v40 = (uint64_t)v3;
    v41 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v41(v8, v11, v20);
    v42 = type metadata accessor for TaskPriority(0);
    v43 = *(_QWORD *)(v42 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v40, 1, 1, v42);
    v44 = v66;
    ((void (*)(char *, char *, uint64_t))v39)(v66, v8, v72);
    v45 = *(unsigned __int8 *)(v4 + 80);
    v46 = (v45 + 40) & ~v45;
    v47 = (_QWORD *)swift_allocObject(&unk_1012683F0, v46 + v67, v45 | 7);
    v47[2] = 0;
    v48 = v47 + 2;
    v49 = v68;
    v47[3] = 0;
    v47[4] = v49;
    v50 = v44;
    v20 = v72;
    v41((char *)v47 + v46, v50, v72);
    v3 = (char *)v40;
    LODWORD(v46) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v42);
    v51 = swift_retain(v49);
    if ((_DWORD)v46 == 1)
    {
      sub_1004CB800(v40, &qword_1013E01F0);
      v52 = 0;
      v53 = *v48;
      if (*v48)
        goto LABEL_28;
    }
    else
    {
      v59 = TaskPriority.rawValue.getter(v51);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v40, v42);
      v52 = v59;
      v53 = *v48;
      if (*v48)
      {
LABEL_28:
        v54 = v47[3];
        ObjectType = swift_getObjectType(v53);
        swift_unknownObjectRetain(v53);
        v56 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v54);
        v58 = v57;
        swift_unknownObjectRelease(v53);
        goto LABEL_31;
      }
    }
    v56 = 0;
    v58 = 0;
LABEL_31:
    v60 = swift_allocObject(&unk_101268418, 32, 7);
    *(_QWORD *)(v60 + 16) = &unk_1013DFE88;
    *(_QWORD *)(v60 + 24) = v47;
    if (v58 | v56)
    {
      v73[0] = 0;
      v73[1] = 0;
      v30 = v73;
      v73[2] = v56;
      v73[3] = v58;
    }
    else
    {
      v30 = 0;
    }
    v11 = v63;
    v8 = v64;
    v27 = v70;
    v29 = v71;
    v31 = swift_task_create(v52 | 0x1C00, v30, v65, &unk_1013FE730);
    v32 = swift_release(v31);
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v8, v20, v32);
  }
  v38 = v36 + 3;
  if (v38 >= v62)
  {
LABEL_33:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v11, 1, 1, v20, v28);
LABEL_34:
    swift_release(v68);
    swift_release(v69);
    return;
  }
  v37 = *(_QWORD *)(v61 + 8 * v38);
  if (v37)
  {
    v29 = v38;
    goto LABEL_24;
  }
  while (1)
  {
    v29 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v29 >= v62)
      goto LABEL_33;
    v37 = *(_QWORD *)(v61 + 8 * v29);
    ++v38;
    if (v37)
      goto LABEL_24;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1004CE904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E04D0);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013EB680);
  v3[13] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[14] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[15] = v8;
  v3[16] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v3[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[18] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v3[19] = v11;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[20] = swift_task_alloc(v12);
  v3[21] = swift_task_alloc(v12);
  return swift_task_switch(sub_1004CE9F4, v2, 0);
}

uint64_t sub_1004CE9F4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(char **)(*(_QWORD *)(v0 + 80) + 112);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager];
  if (v4)
  {
    v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager];
  }
  else
  {
    v6 = v1;
    v4 = sub_1005D2858(v6);

    v7 = *(_QWORD *)&v1[v3];
    *(_QWORD *)&v1[v3] = v4;
    swift_retain(v4);
    swift_release(v7);
    v5 = 0;
  }
  *(_QWORD *)(v0 + 176) = v4;
  *(_QWORD *)(v0 + 184) = v4;
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 136);
  v25 = v8;
  v12 = *(_QWORD *)(v0 + 112);
  v26 = *(_QWORD *)(v0 + 120);
  v27 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  v15 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain(v5);
  os_unfair_lock_unlock(v15);
  *(_QWORD *)(v0 + 192) = OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_downloadObserverIdentifier;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  *(_QWORD *)(v0 + 200) = v16;
  v16(v8, v14, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v24, v13);
  LODWORD(v17) = *(_DWORD *)(v9 + 80);
  *(_DWORD *)(v0 + 232) = v17;
  v17 = v17;
  v18 = (v17 + 24) & ~v17;
  v19 = *(unsigned __int8 *)(v12 + 80);
  v20 = (v27 + v19 + v18) & ~v19;
  v21 = swift_allocObject(&unk_101268328, v20 + v26, v17 | v19 | 7);
  *(_QWORD *)(v0 + 208) = v21;
  *(_QWORD *)(v21 + 16) = v28;
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  *(_QWORD *)(v0 + 216) = v22;
  v22(v21 + v18, v25, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v21 + v20, v11, v13);
  swift_retain(v28);
  return swift_task_switch(sub_1004CEBA8, v4, 0);
}

uint64_t sub_1004CEBA8()
{
  uint64_t *v0;
  uint64_t **v1;

  v1 = (uint64_t **)swift_task_alloc(dword_10140C61C);
  v0[28] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_1004CEC0C;
  return sub_100C78DC8(v0[12], v0[8], 0, 0, 3);
}

uint64_t sub_1004CEC0C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  return swift_task_switch(sub_1004CEC5C, *(_QWORD *)(v1 + 176), 0);
}

uint64_t sub_1004CEC5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void (**v11)(_QWORD);
  id v12;
  id v13;

  v1 = v0[12];
  v2 = type metadata accessor for URL(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = v0[26];
    v4 = v0[8];
    v5 = v0[10] + v0[24];
    sub_1004CB800(v1, &qword_1013E04D0);
    v6 = sub_1005CFF38(v4);
    sub_1005D010C(v5, 10, (uint64_t)sub_1004CF550, v3);
    swift_release(v6);
  }
  else
  {
    v7 = v0[26];
    sub_1004CB800(v1, &qword_1013E04D0);
    v8 = swift_allocObject(&unk_101268378, 32, 7);
    v0[2] = _NSConcreteStackBlock;
    *(_QWORD *)(v8 + 16) = sub_1004CF550;
    *(_QWORD *)(v8 + 24) = v7;
    v0[6] = sub_1004CF658;
    v0[7] = v8;
    v0[3] = *(_QWORD *)"";
    v0[4] = sub_1005D2FC0;
    v0[5] = &unk_101268390;
    v9 = _Block_copy(v0 + 2);
    v10 = v0[7];
    swift_retain(v7);
    swift_release(v10);
    v11 = v9;
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      v11[2](v11);
    }
    else
    {
      v12 = &_dispatch_main_q;
      v13 = &_dispatch_main_q;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

    }
    v3 = v0[26];

    _Block_release(v11);
  }
  swift_release(v3);
  return swift_task_switch(sub_1004CEE18, v0[10], 0);
}

uint64_t sub_1004CEE18()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(unsigned __int8 *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 216);
  v16 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = v1 | 7;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v2(v4, v8, v6);
  v11 = (v1 + 40) & ~v1;
  v12 = (char *)swift_allocObject(&unk_101268350, v5 + v11, v9);
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = v3;
  v15(&v12[v11], v4, v6);
  swift_retain(v3);
  v13 = sub_100521B98(v7, (uint64_t)&unk_1013DFE70, (uint64_t)v12);
  swift_release(v13);
  swift_release(v3);
  swift_task_dealloc(v16);
  swift_task_dealloc(v4);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1004CEF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a4;
  v29 = a2;
  v30 = a1;
  v5 = sub_1004B804C(&qword_1013EB680);
  v6 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v27 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v5);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = (v16 + 40) & ~v16;
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(unsigned __int8 *)(v6 + 80);
  v20 = (v19 + v18 + 8) & ~v19;
  v21 = (char *)swift_allocObject(&unk_1012683C8, v20 + v7, v16 | v19 | 7);
  *((_QWORD *)v21 + 2) = 0;
  *((_QWORD *)v21 + 3) = 0;
  v22 = v29;
  *((_QWORD *)v21 + 4) = v29;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v21[v17], v11, v8);
  *(_QWORD *)&v21[v18] = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v21[v20], v27, v26);
  swift_retain(v22);
  v23 = sub_100521B98((uint64_t)v14, (uint64_t)&unk_1013DFE80, (uint64_t)v21);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_1004CF138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch(sub_1004CF154, a4, 0);
}

uint64_t sub_1004CF154()
{
  uint64_t v0;

  sub_1004CF190(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32) == 3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004CF190(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_assetUUIDsBeingDownloaded;
  swift_beginAccess(v9, v17, 33, 0);
  sub_100B26E60(a1, (uint64_t)v8);
  sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  result = swift_endAccess(v17);
  if ((a2 & 1) != 0)
    *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_downloadWasCancelled) = 1;
  if (!*(_QWORD *)(*(_QWORD *)v9 + 16))
  {
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_downloadWasCancelled) == 1)
    {
      v11 = type metadata accessor for CancellationError(0);
      v12 = sub_1004B7878(&qword_1013DFE68, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
      v13 = swift_allocError(v11, v12, 0, 0);
      CancellationError.init()();
      v17[0] = v13;
      v14 = sub_1004B804C(&qword_1013EB680);
      result = CheckedContinuation.resume(throwing:)(v17, v14);
    }
    else
    {
      v15 = sub_1004B804C(&qword_1013EB680);
      result = CheckedContinuation.resume(returning:)(v15, v15);
    }
    *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_isDownloading) = 0;
  }
  return result;
}

uint64_t sub_1004CF318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_downloadObserverIdentifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper__assetUUIDsNeedingDownload));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_assetUUIDsBeingDownloaded));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_1004CF394()
{
  return type metadata accessor for CRLAssetDownloadHelper(0);
}

uint64_t type metadata accessor for CRLAssetDownloadHelper(uint64_t a1)
{
  uint64_t result;

  result = qword_1013DFD00;
  if (!qword_1013DFD00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAssetDownloadHelper);
  return result;
}

uint64_t sub_1004CF3D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_100EF5BA0;
    v4[5] = &unk_100EF5BB8;
    v4[6] = &unk_100EF5BB8;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 8, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1004CF484()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1004CF490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_1004B804C(&qword_1013EB680);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  v12 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

double sub_1004CF550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013EB680) - 8) + 80);
  return sub_1004CEF50(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v5 + v6) & ~v6));
}

uint64_t sub_1004CF5C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013E60B4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1005CCBD4(a1, v5, v6, v7, v8);
}

uint64_t sub_1004CF658()
{
  uint64_t v0;

  return sub_1005CCA54(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1004CF660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004CF670(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1004CF678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = sub_1004B804C(&qword_1013EB680);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1004CF74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013EB680) - 8) + 80);
  v6 = v4 + v5 + 8;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = v0 + v3;
  v9 = *(_QWORD *)(v0 + v4);
  v10 = v0 + (v6 & ~v5);
  v11 = (_QWORD *)swift_task_alloc(dword_1013DFE7C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_1004CF80C;
  v11[4] = v9;
  v11[5] = v10;
  v11[2] = v7;
  v11[3] = v8;
  return swift_task_switch(sub_1004CF154, v7, 0);
}

uint64_t sub_1004CF80C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1004CF858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004CF8D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013E60AC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1005CECB8(a1, v5, v6, v7, v8);
}

uint64_t sub_1004CF968()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1004CF98C()
{
  uint64_t v0;

  return sub_1004CD9C4(v0);
}

uint64_t sub_1004CF994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1013DFE94);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1004CF80C;
  v6[3] = v5;
  v6[4] = v4;
  v6[2] = a1;
  return swift_task_switch(sub_1004CDBFC, v4, 0);
}

double sub_1004CFA04(uint64_t a1)
{
  uint64_t v1;

  return sub_1004CDD6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1004CFA0C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 4));
  v7 = swift_release(*((_QWORD *)v0 + 5));
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(&v0[v4], v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004CFA94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013EB680) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1013DFEAC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1004CDEEC(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1004CFB30()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004CFB5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1013DFEBC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  v3[2] = v2;
  return swift_task_switch(sub_1004CDBB0, v2, 0);
}

uint64_t sub_1004CFBBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E1904);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1013E1900 + dword_1013E1900))(a1, v4);
}

unint64_t sub_1004CFC2C()
{
  unint64_t result;

  result = qword_1013E0500;
  if (!qword_1013E0500)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1013E0500);
  }
  return result;
}

uint64_t sub_1004CFC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004CFCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004CFD10(uint64_t a1, unsigned __int8 a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t result;
  double v43;
  uint64_t v44;
  double v45;

  v11 = sub_1004D0054(a1, a3, a4, a5, a6);
  v12 = sub_1004D02BC(v11);
  swift_bridgeObjectRelease(v11);
  v13 = sub_1004D0374(v12);
  swift_bridgeObjectRelease(v12);
  sub_1004D2460(v13, a2, a3, a4, a5, a6);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease(v13);
  if (v17)
    return v15;
  v18 = (void *)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v18, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = objc_msgSend(v18, "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  v33 = a2;
  if (a2 == 2)
    v34 = v25;
  else
    v34 = v32;
  if (a2 == 2)
    v35 = v32;
  else
    v35 = v25;
  if (v33 == 2)
    v23 = v30;
  swift_bridgeObjectRelease(v34);
  v36 = sub_100061400(a3, a4, a5, a6);
  v38 = sub_1000630C4(v36, v37);
  v40 = v39;
  v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  result = swift_allocObject(v41, 112, 7);
  *(_OWORD *)(result + 16) = xmmword_100EF5A10;
  v43 = round(v38);
  if ((~*(_QWORD *)&v43 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v43 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v43 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v44 = result;
  *(_QWORD *)(result + 56) = &type metadata for Int;
  *(_QWORD *)(result + 64) = &protocol witness table for Int;
  *(_QWORD *)(result + 32) = (uint64_t)v43;
  v45 = round(v40);
  if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v45 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v45 < 9.22337204e18)
  {
    *(_QWORD *)(result + 96) = &type metadata for Int;
    *(_QWORD *)(result + 104) = &protocol witness table for Int;
    *(_QWORD *)(result + 72) = (uint64_t)v45;
    v15 = static String.localizedStringWithFormat(_:_:)(v23, v35, result);
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v35);
    return v15;
  }
LABEL_23:
  __break(1u);
  return result;
}

Swift::Int sub_1004D0054(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int result;
  id v16;
  id v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  CGRect v33;
  CGRect v34;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = &_swiftEmptySetSingleton;
    v32 = &_swiftEmptySetSingleton;
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = __CocoaSet.Iterator.next()(v11);
    if (v12)
    {
      v13 = v12;
      v14 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      do
      {
        v30 = v13;
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v14, 7);
        v16 = v31;
        if ((objc_msgSend(v31, "hasBeenRemoved") & 1) != 0
          || (objc_msgSend(v16, "frameInUnscaledCanvas"),
              v34.origin.x = a2,
              v34.origin.y = a3,
              v34.size.width = a4,
              v34.size.height = a5,
              !CGRectIntersectsRect(v33, v34)))
        {

        }
        else
        {
          v17 = v31;
          v18 = v32;
          v19 = v32[2];
          if (v32[3] <= v19)
          {
            sub_100ADE28C(v19 + 1);
            v18 = v32;
          }
          result = NSObject._rawHashValue(seed:)(v18[5]);
          v20 = v18 + 7;
          v21 = -1 << *((_BYTE *)v18 + 32);
          v22 = result & ~v21;
          v23 = v22 >> 6;
          if (((-1 << v22) & ~v18[(v22 >> 6) + 7]) != 0)
          {
            v24 = __clz(__rbit64((-1 << v22) & ~v18[(v22 >> 6) + 7])) | v22 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v25 = 0;
            v26 = (unint64_t)(63 - v21) >> 6;
            do
            {
              if (++v23 == v26 && (v25 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v27 = v23 == v26;
              if (v23 == v26)
                v23 = 0;
              v25 |= v27;
              v28 = v20[v23];
            }
            while (v28 == -1);
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          }
          *(_QWORD *)((char *)v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
          *(_QWORD *)(v18[6] + 8 * v24) = v17;
          ++v18[2];
        }
        v13 = __CocoaSet.Iterator.next()(result);
      }
      while (v13);
      v9 = v32;
    }
    swift_release(v11);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    return sub_1004D0DE0(v29, a2, a3, a4, a5);
  }
  return (Swift::Int)v9;
}

uint64_t sub_1004D02BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;

  v2 = v1;
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = __CocoaSet.count.getter(a1);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 16);
  }
  swift_bridgeObjectRetain(v3);
  if (v4)
  {
    v5 = sub_1004D0B18(v3);
    if (!v2)
    {
      v6 = v5;
      if ((v5 & 0xC000000000000001) != 0)
      {
        if (__CocoaSet.count.getter(v5))
          return v6;
      }
      else if (*(_QWORD *)(v5 + 16))
      {
        return v6;
      }
      swift_release(v6);
      swift_bridgeObjectRetain(v3);
    }
  }
  return v3;
}

uint64_t sub_1004D0374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;

  v2 = v1;
  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = __CocoaSet.count.getter(a1);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 16);
  }
  swift_bridgeObjectRetain(v3);
  if (v4)
  {
    v5 = sub_1004D0850(v3);
    if (!v2)
    {
      v6 = v5;
      if ((v5 & 0xC000000000000001) != 0)
      {
        if (__CocoaSet.count.getter(v5))
          return v6;
      }
      else if (*(_QWORD *)(v5 + 16))
      {
        return v6;
      }
      swift_release(v6);
      swift_bridgeObjectRetain(v3);
    }
  }
  return v3;
}

uint64_t sub_1004D0424()
{
  void *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;

  objc_msgSend(v0, "frameInUnscaledCanvas");
  v5 = sub_100061400(v1, v2, v3, v4);
  v7 = sub_1000630C4(v5, v6);
  v9 = v8;
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  result = swift_allocObject(v17, 112, 7);
  *(_OWORD *)(result + 16) = xmmword_100EF5A10;
  v19 = round(v7);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v20 = result;
  *(_QWORD *)(result + 56) = &type metadata for Int;
  *(_QWORD *)(result + 64) = &protocol witness table for Int;
  *(_QWORD *)(result + 32) = (uint64_t)v19;
  v21 = round(v9);
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v21 < 9.22337204e18)
  {
    *(_QWORD *)(result + 96) = &type metadata for Int;
    *(_QWORD *)(result + 104) = &protocol witness table for Int;
    *(_QWORD *)(result + 72) = (uint64_t)v21;
    v22 = static String.localizedStringWithFormat(_:_:)(v14, v16, result);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v20);
    return v22;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1004D0618(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (!objc_msgSend(a1, "respondsToSelector:", Selector.init(_:)(0xD000000000000022, 0x8000000100FADA70)))goto LABEL_13;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(a1, "valueForKey:", v6);

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)(v16, v7);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1004D28A4((uint64_t)v16, (uint64_t)&v17);
  if (!v19)
  {
    sub_1004D28EC((uint64_t)&v17);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v15, &v17, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_13:
    swift_bridgeObjectRetain(a3);
    return a2;
  }
  v8 = *((_QWORD *)&v15 + 1);
  v9 = HIBYTE(*((_QWORD *)&v15 + 1)) & 0xFLL;
  if ((*((_QWORD *)&v15 + 1) & 0x2000000000000000) == 0)
    v9 = v15 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease(*((_QWORD *)&v15 + 1));
    goto LABEL_13;
  }
  v17 = a2;
  v18 = a3;
  v16[0] = v15;
  *(_QWORD *)&v15 = 0;
  *((_QWORD *)&v15 + 1) = 0xE000000000000000;
  v10 = sub_1004D292C();
  v11 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v16, &v15, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v10, v10, v10);
  v13 = v12;
  swift_bridgeObjectRelease(v8);
  v17 = v11;
  v18 = v13;
  *(_QWORD *)&v16[0] = 539762732;
  *((_QWORD *)&v16[0] + 1) = 0xE400000000000000;
  *(_QWORD *)&v15 = 8236;
  *((_QWORD *)&v15 + 1) = 0xE200000000000000;
  a2 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v16, &v15, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v10, v10, v10);
  swift_bridgeObjectRelease(v13);
  return a2;
}

uint64_t CRLAccessibilityUtil.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for CRLAccessibilitySceneDescriptionHelper()
{
  return objc_opt_self(_TtC8Freeform38CRLAccessibilitySceneDescriptionHelper);
}

Swift::Int sub_1004D0850(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t *v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unint64_t *v31;

  if ((a1 & 0xC000000000000001) == 0)
    return sub_1004D0F7C(a1);
  v1 = (unint64_t *)&_swiftEmptySetSingleton;
  v31 = (unint64_t *)&_swiftEmptySetSingleton;
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = __CocoaSet.makeIterator()(a1);
  v3 = __CocoaSet.Iterator.next()(v2);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    while (1)
    {
      v29 = v4;
      swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
      v12 = v30;
      v13 = sub_1004B8930(0, (unint64_t *)&unk_1013F6300, off_101229880);
      if (!objc_msgSend(v12, "isKindOfClass:", swift_getObjCClassFromMetadata(v13, v14)))
        break;
      v15 = objc_msgSend(v12, "info");
      v16 = type metadata accessor for CRLBoardItem(0);
      v17 = (_QWORD *)swift_dynamicCastClass(v15, v16);
      if (v17)
      {
        v18 = (*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x130))();
        v20 = v19;
        swift_unknownObjectRelease(v15);
        swift_bridgeObjectRelease(v20);
        v21 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0)
          v21 = v18 & 0xFFFFFFFFFFFFLL;
        if (v21)
          break;
      }
      else
      {
        swift_unknownObjectRelease(v15);
      }

LABEL_9:
      v4 = __CocoaSet.Iterator.next()(result);
      if (!v4)
      {
        v1 = v31;
        goto LABEL_29;
      }
    }
    v22 = v30;
    v23 = v31;
    v24 = v31[2];
    if (v31[3] <= v24)
    {
      sub_100ADE28C(v24 + 1);
      v23 = v31;
    }
    result = NSObject._rawHashValue(seed:)(v23[5]);
    v7 = (char *)(v23 + 7);
    v8 = -1 << *((_BYTE *)v23 + 32);
    v9 = result & ~v8;
    v10 = v9 >> 6;
    if (((-1 << v9) & ~v23[(v9 >> 6) + 7]) != 0)
    {
      v11 = __clz(__rbit64((-1 << v9) & ~v23[(v9 >> 6) + 7])) | v9 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v8) >> 6;
      do
      {
        if (++v10 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v27 = v10 == v26;
        if (v10 == v26)
          v10 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)&v7[8 * v10];
      }
      while (v28 == -1);
      v11 = __clz(__rbit64(~v28)) + (v10 << 6);
    }
    *(_QWORD *)&v7[(v11 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v11;
    *(_QWORD *)(v23[6] + 8 * v11) = v22;
    ++v23[2];
    goto LABEL_9;
  }
LABEL_29:
  swift_release(v2);
  return (Swift::Int)v1;
}

Swift::Int sub_1004D0B18(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  void *v37;
  _QWORD *v38;

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v36[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = &_swiftEmptySetSingleton;
    v38 = &_swiftEmptySetSingleton;
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    v9 = __CocoaSet.makeIterator()(v8);
    v10 = __CocoaSet.Iterator.next()(v9);
    if (v10)
    {
      v11 = v10;
      v35 = v1;
      v12 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
      do
      {
        v36[0] = v11;
        swift_dynamicCast(&v37, v36, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v14 = sub_1004D212C(v37);
        if (!v15)
          goto LABEL_7;
        v16 = v15;
        v36[0] = v14;
        v36[1] = v15;
        static CharacterSet.whitespaces.getter(v14);
        v17 = sub_1004D292C();
        v18 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v17);
        v20 = v19;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v20);
        v21 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0)
          v21 = v18 & 0xFFFFFFFFFFFFLL;
        if (v21)
        {
          v22 = v37;
          v23 = v38;
          v24 = v38[2];
          if (v38[3] <= v24)
          {
            sub_100ADE28C(v24 + 1);
            v23 = v38;
          }
          result = NSObject._rawHashValue(seed:)(v23[5]);
          v25 = v23 + 7;
          v26 = -1 << *((_BYTE *)v23 + 32);
          v27 = result & ~v26;
          v28 = v27 >> 6;
          if (((-1 << v27) & ~v23[(v27 >> 6) + 7]) != 0)
          {
            v29 = __clz(__rbit64((-1 << v27) & ~v23[(v27 >> 6) + 7])) | v27 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v30 = 0;
            v31 = (unint64_t)(63 - v26) >> 6;
            do
            {
              if (++v28 == v31 && (v30 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v32 = v28 == v31;
              if (v28 == v31)
                v28 = 0;
              v30 |= v32;
              v33 = v25[v28];
            }
            while (v33 == -1);
            v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          }
          *(_QWORD *)((char *)v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
          *(_QWORD *)(v23[6] + 8 * v29) = v22;
          ++v23[2];
        }
        else
        {
LABEL_7:

        }
        v11 = __CocoaSet.Iterator.next()(result);
      }
      while (v11);
      v2 = v38;
    }
    swift_release(v9);
  }
  else
  {
    v34 = sub_1004D10D8(a1);
    if (!v1)
      return v34;
  }
  return (Swift::Int)v2;
}

uint64_t sub_1004D0DE0(uint64_t isStackAllocationSafe, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;

  v10 = isStackAllocationSafe;
  v11 = *(_BYTE *)(isStackAllocationSafe + 32);
  v12 = v11 & 0x3F;
  v13 = (1 << v11) + 63;
  v14 = v13 >> 6;
  v15 = 8 * (v13 >> 6);
  if (v12 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v13 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v22 - ((v15 + 15) & 0x3FFFFFFFFFFFFFF0), v15);
    sub_1004D1248((unint64_t *)((char *)&v22 - ((v15 + 15) & 0x3FFFFFFFFFFFFFF0)), v14, v10, a2, a3, a4, a5);
    v17 = v16;
    v18 = swift_release(v10);
    if (v5)
      swift_willThrow(v18);
  }
  else
  {
    v19 = (void *)swift_slowAlloc(v15, -1);
    bzero(v19, v15);
    sub_1004D1248((unint64_t *)v19, v14, v10, a2, a3, a4, a5);
    v17 = v20;
    swift_release(v10);
    swift_slowDealloc(v19, -1, -1);
  }
  return v17;
}

uint64_t sub_1004D0F7C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_1004D1448((unint64_t *)((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    v9 = v8;
    v10 = swift_release(v2);
    if (v1)
      swift_willThrow(v10);
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v7, -1);
    bzero(v11, v7);
    sub_1004D1448((unint64_t *)v11, v6, v2);
    v9 = v12;
    swift_release(v2);
    swift_slowDealloc(v11, -1, -1);
  }
  return v9;
}

uint64_t sub_1004D10D8(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_1004D16C4((unint64_t *)((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    v9 = v8;
    v10 = swift_release(v2);
    if (v1)
      swift_willThrow(v10);
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v7, -1);
    bzero(v11, v7);
    sub_1004D16C4((unint64_t *)v11, v6, v2);
    v9 = v12;
    swift_release(v2);
    swift_slowDealloc(v11, -1, -1);
  }
  return v9;
}

void sub_1004D1248(unint64_t *a1, uint64_t a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  id v23;
  BOOL v24;
  uint64_t v27;
  CGRect v28;
  CGRect v29;

  v12 = 0;
  v13 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a3 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (v16)
  {
    v18 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v19 = v18 | (v12 << 6);
LABEL_18:
    v23 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v19);
    if ((objc_msgSend(v23, "hasBeenRemoved") & 1) != 0)
    {

    }
    else
    {
      objc_msgSend(v23, "frameInUnscaledCanvas");
      v29.origin.x = a4;
      v29.origin.y = a5;
      v29.size.width = a6;
      v29.size.height = a7;
      v24 = CGRectIntersectsRect(v28, v29);

      if (v24)
      {
        *(unint64_t *)((char *)a1 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        v20 = __OFADD__(v27++, 1);
        if (v20)
          goto LABEL_30;
      }
    }
  }
  v20 = __OFADD__(v12++, 1);
  if (v20)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v12 >= v17)
    goto LABEL_27;
  v21 = *(_QWORD *)(v13 + 8 * v12);
  if (v21)
  {
LABEL_17:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v12 << 6);
    goto LABEL_18;
  }
  v22 = v12 + 1;
  if (v12 + 1 >= v17)
    goto LABEL_27;
  v21 = *(_QWORD *)(v13 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v12 + 2;
  if (v12 + 2 >= v17)
    goto LABEL_27;
  v21 = *(_QWORD *)(v13 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v12 + 3;
  if (v12 + 3 >= v17)
  {
LABEL_27:
    swift_retain(a3);
    sub_100CD7E7C(a1, a2, v27, a3);
    return;
  }
  v21 = *(_QWORD *)(v13 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v12 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v17)
      goto LABEL_27;
    v21 = *(_QWORD *)(v13 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1004D1448(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  int64_t v30;

  v27 = a2;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v30 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v4 << 6);
LABEL_21:
    v14 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v10);
    v15 = sub_1004B8930(0, (unint64_t *)&unk_1013F6300, off_101229880);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15, v16);
    v18 = v14;
    if (objc_msgSend(v18, "isKindOfClass:", ObjCClassFromMetadata, v27))
    {
      v19 = objc_msgSend(v18, "info");
      v20 = type metadata accessor for CRLBoardItem(0);
      v21 = (_QWORD *)swift_dynamicCastClass(v19, v20);
      if (v21)
      {
        v22 = (*(uint64_t (**)(void))((swift_isaMask & *v21) + 0x130))();
        v24 = v23;

        swift_unknownObjectRelease(v19);
        swift_bridgeObjectRelease(v24);
        v25 = HIBYTE(v24) & 0xF;
        if ((v24 & 0x2000000000000000) == 0)
          v25 = v22 & 0xFFFFFFFFFFFFLL;
        if (v25)
          goto LABEL_28;
      }
      else
      {

        swift_unknownObjectRelease(v19);
      }
    }
    else
    {

LABEL_28:
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v29++, 1))
      {
        __break(1u);
LABEL_31:
        swift_retain(a3);
        sub_100CD7E7C(a1, v27, v29, a3);
        return;
      }
    }
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v11 >= v30)
    goto LABEL_31;
  v12 = *(_QWORD *)(v5 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_20;
  v4 = v11 + 1;
  if (v11 + 1 >= v30)
    goto LABEL_31;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
    goto LABEL_20;
  v4 = v11 + 2;
  if (v11 + 2 >= v30)
    goto LABEL_31;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_20:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v30)
    goto LABEL_31;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v30)
      goto LABEL_31;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_33:
  __break(1u);
}

void sub_1004D16C4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  BOOL v37;
  unint64_t v38;
  int64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;

  v60 = a2;
  v61 = a1;
  v4 = type metadata accessor for CharacterSet(0);
  v72 = *(_QWORD *)(v4 - 8);
  v73 = v4;
  __chkstk_darwin(v4);
  v71 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  __chkstk_darwin(v6);
  v68 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v67);
  v66 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v9);
  v65 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v74 = a3;
  v12 = *(_QWORD *)(a3 + 56);
  v62 = 0;
  v63 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v64 = (unint64_t)(v13 + 63) >> 6;
  v16 = &selRef_imageWithSystemImageNamed_pointSize_;
  while (1)
  {
    if (v15)
    {
      v35 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v36 = v35 | (v11 << 6);
      goto LABEL_22;
    }
    v37 = __OFADD__(v11++, 1);
    if (v37)
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v64)
      goto LABEL_37;
    v38 = *(_QWORD *)(v63 + 8 * v11);
    if (!v38)
      break;
LABEL_21:
    v15 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (v11 << 6);
LABEL_22:
    v40 = *(id *)(*(_QWORD *)(v74 + 48) + 8 * v36);
    v41 = objc_msgSend(v40, v16[61]);
    v42 = type metadata accessor for CRLWPShapeItem(0);
    v43 = swift_dynamicCastClass(v41, v42);
    if (v43)
    {
      v44 = *(void **)(v43 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      v45 = v44;
      swift_unknownObjectRelease(v41);
      if (v44)
      {
        v77 = v11;
        v17 = *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
        if (!v17)
          goto LABEL_40;
        v18 = (uint64_t)v66;
        (*(void (**)(void))(*(_QWORD *)v17 + 760))();
        v19 = v65;
        sub_1004D29BC(v18 + *(int *)(v67 + 20), v65);
        sub_1004B84A4(v18, type metadata accessor for CRLWPShapeItemCRDTData);
        v20 = v68;
        v21 = v69;
        v22 = v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v19, v70);
        sub_1004B84A4(v19, type metadata accessor for CRLWPStorageCRDTData);
        v23 = (void *)CRAttributedString.attributedString.getter(v22);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
        v24 = objc_msgSend(v23, "string");

        v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v27 = v26;

        goto LABEL_6;
      }
    }
    else
    {
      swift_unknownObjectRelease(v41);
    }
    v46 = objc_msgSend(v40, v16[61], v60);
    v47 = type metadata accessor for CRLWPStorage();
    v48 = swift_dynamicCastClass(v46, v47);
    if (v48)
    {
      v77 = v11;
      v49 = *(_QWORD *)(v48 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
      if (!v49)
        goto LABEL_41;
      v50 = (uint64_t)v66;
      (*(void (**)(void))(*(_QWORD *)v49 + 760))();
      v51 = v65;
      sub_1004D29BC(v50 + *(int *)(v67 + 20), v65);
      sub_1004B84A4(v50, type metadata accessor for CRLWPShapeItemCRDTData);
      v52 = v68;
      v53 = v69;
      v54 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v51, v70);
      sub_1004B84A4(v51, type metadata accessor for CRLWPStorageCRDTData);
      v55 = (void *)CRAttributedString.attributedString.getter(v54);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
      v24 = objc_msgSend(v55, "string");

      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v56;
      swift_unknownObjectRelease(v46);
LABEL_6:

      v75 = v25;
      v76 = v27;
      v28 = v71;
      static CharacterSet.whitespaces.getter(v29);
      v30 = sub_1004D292C();
      v31 = StringProtocol.trimmingCharacters(in:)(v28, &type metadata for String, v30);
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v73);
      swift_bridgeObjectRelease(v27);

      swift_bridgeObjectRelease(v33);
      v34 = HIBYTE(v33) & 0xF;
      if ((v33 & 0x2000000000000000) == 0)
        v34 = v31 & 0xFFFFFFFFFFFFLL;
      v16 = &selRef_imageWithSystemImageNamed_pointSize_;
      v11 = v77;
      if (v34)
      {
        *(unint64_t *)((char *)v61 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
        v37 = __OFADD__(v62++, 1);
        if (v37)
        {
          __break(1u);
LABEL_37:
          v57 = v60;
          v58 = v62;
          v59 = v74;
          swift_retain(v74);
          sub_100CD7E7C(v61, v57, v58, v59);
          return;
        }
      }
    }
    else
    {

      swift_unknownObjectRelease(v46);
    }
  }
  v39 = v11 + 1;
  if (v11 + 1 >= v64)
    goto LABEL_37;
  v38 = *(_QWORD *)(v63 + 8 * v39);
  if (v38)
    goto LABEL_20;
  v39 = v11 + 2;
  if (v11 + 2 >= v64)
    goto LABEL_37;
  v38 = *(_QWORD *)(v63 + 8 * v39);
  if (v38)
    goto LABEL_20;
  v39 = v11 + 3;
  if (v11 + 3 >= v64)
    goto LABEL_37;
  v38 = *(_QWORD *)(v63 + 8 * v39);
  if (v38)
  {
LABEL_20:
    v11 = v39;
    goto LABEL_21;
  }
  while (1)
  {
    v11 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v11 >= v64)
      goto LABEL_37;
    v38 = *(_QWORD *)(v63 + 8 * v11);
    ++v39;
    if (v38)
      goto LABEL_21;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_1004D1C54(void *a1, unsigned __int8 a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  unsigned int v9;
  uint64_t v10;
  NSString v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t inited;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v51;
  unint64_t v52;
  _OWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58[112];

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "sharedInstance");
  v9 = objc_msgSend(v8, "accessibilitySupportLoaded");

  v10 = 0;
  if (!v9)
    return v10;
  if (!objc_msgSend(a1, "respondsToSelector:", Selector.init(_:)(0xD00000000000001ELL, 0x8000000100FADA10)))
  {
    if (qword_1013DD7C8 != -1)
      swift_once(&qword_1013DD7C8, sub_100A03AC0);
    swift_beginAccess(&static OS_os_log.crlFollow, &v54, 0, 0);
    v13 = (void *)static OS_os_log.crlFollow;
    v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v14, v58);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = 0xD00000000000001ELL;
    *(_QWORD *)(inited + 40) = 0x8000000100FADA10;
    *(_QWORD *)(inited + 96) = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    *(_QWORD *)(inited + 104) = sub_1004D2854(&qword_1013DFF68, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 72) = a1;
    v16 = v13;
    v17 = a1;
    v19 = static os_log_type_t.default.getter(v18);
    sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v19, "The AX experience coordinator was unable to call %@ on %@", 57, 2, inited);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v20);

    return 0;
  }
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(a1, "valueForKey:", v11);

  if (v12)
  {
    _bridgeAnyObjectToAny(_:)(v53, v12);
    swift_unknownObjectRelease(v12);
  }
  else
  {
    memset(v53, 0, sizeof(v53));
  }
  sub_1004D28A4((uint64_t)v53, (uint64_t)&v54);
  if (!v57)
  {
    sub_1004D28EC((uint64_t)&v54);
    return 0;
  }
  v21 = swift_dynamicCast(&v51, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((v21 & 1) == 0)
    return 0;
  v22 = v52;
  v23 = HIBYTE(v52) & 0xF;
  if ((v52 & 0x2000000000000000) == 0)
    v23 = v51 & 0xFFFFFFFFFFFFLL;
  if (!v23)
  {
    v49 = v52;
    goto LABEL_31;
  }
  v24 = a2;
  v54 = v51;
  v55 = v52;
  static CharacterSet.whitespacesAndNewlines.getter(v21);
  v25 = sub_1004D292C();
  v26 = StringProtocol.components(separatedBy:)(v7, &type metadata for String, v25);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 >= 6)
    v27 = 6;
  v54 = v26;
  v55 = v26 + 32;
  v56 = 0;
  v57 = (2 * v27) | 1;
  v28 = sub_1004B804C(&qword_1013DFF70);
  v29 = sub_1004D2970();
  v30 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v28, v29);
  v32 = v31;
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v26);
  v33 = sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
  v35 = v33[2];
  v34 = v33[3];
  if (v35 >= v34 >> 1)
    v33 = sub_100D0EF94((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
  v33[2] = v35 + 1;
  v36 = &v33[2 * v35];
  v36[4] = v30;
  v36[5] = v32;
  if (v24 != 2)
  {
    v37 = sub_1004D0424();
    v39 = v38;
    v41 = v33[2];
    v40 = v33[3];
    if (v41 >= v40 >> 1)
      v33 = sub_100D0EF94((_QWORD *)(v40 > 1), v41 + 1, 1, v33);
    v33[2] = v41 + 1;
    v42 = &v33[2 * v41];
    v42[4] = v37;
    v42[5] = v39;
  }
  v43 = sub_100520824((uint64_t)v33);
  swift_bridgeObjectRelease(v33);
  v10 = sub_1008858E4((uint64_t)v43);
  v45 = v44;
  swift_bridgeObjectRelease(v43);
  if (v24 == 2 || (v24 & 1) != 0)
  {
    v10 = sub_1004D0618(a1, v10, v45);
    v47 = v46;
    swift_bridgeObjectRelease(v45);
    v45 = v47;
  }
  v48 = HIBYTE(v45) & 0xF;
  if ((v45 & 0x2000000000000000) == 0)
    v48 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v48)
  {
    v49 = v45;
LABEL_31:
    swift_bridgeObjectRelease(v49);
    return 0;
  }
  return v10;
}

uint64_t sub_1004D212C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "info");
  v12 = type metadata accessor for CRLWPShapeItem(0);
  v13 = swift_dynamicCastClass(v11, v12);
  if (v13)
  {
    v14 = *(void **)(v13 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    v15 = v14;
    result = swift_unknownObjectRelease(v11);
    if (v14)
    {
      v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
      if (v17)
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 760))(result);
        sub_1004D29BC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10);
        sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
        v18 = v29;
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v4, v10, v2);
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPStorageCRDTData);
        v19 = (void *)CRAttributedString.attributedString.getter(v2);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
        v20 = objc_msgSend(v19, "string");

        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        return v21;
      }
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {
    swift_unknownObjectRelease(v11);
  }
  v22 = objc_msgSend(a1, "info");
  v23 = type metadata accessor for CRLWPStorage();
  result = swift_dynamicCastClass(v22, v23);
  if (!result)
  {
    swift_unknownObjectRelease(v22);
    return 0;
  }
  v24 = *(_QWORD *)(result + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v24)
  {
    (*(void (**)(void))(*(_QWORD *)v24 + 760))();
    sub_1004D29BC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
    v25 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v4, v10, v2);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPStorageCRDTData);
    v26 = (void *)CRAttributedString.attributedString.getter(v2);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
    v27 = objc_msgSend(v26, "string");

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    swift_unknownObjectRelease(v22);

    return v21;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_1004D2460(uint64_t a1, unsigned __int8 a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  double v8;
  double v9;
  CGFloat v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  double v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  id v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _QWORD v57[5];

  v8 = sub_100061400(a3, a4, a5, a6);
  v10 = v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = __CocoaSet.makeIterator()(v11);
    v13 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v14 = sub_1004D2854((unint64_t *)&qword_1013E8770, (uint64_t)&protocol conformance descriptor for NSObject);
    v15 = Set.Iterator.init(_cocoa:)(v57, v12, v13, v14);
    a1 = v57[0];
    v54 = v57[1];
    v16 = v57[2];
    v17 = v57[3];
    v18 = v57[4];
  }
  else
  {
    v19 = -1 << *(_BYTE *)(a1 + 32);
    v54 = a1 + 56;
    v16 = ~v19;
    v20 = -v19;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v18 = v21 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v17 = 0;
  }
  v22 = 0;
  v53 = (unint64_t)(v16 + 64) >> 6;
  while (1)
  {
    v23 = v17;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    v26 = __CocoaSet.Iterator.next()(v15);
    if (!v26)
      goto LABEL_41;
    v27 = v26;
    v55 = v26;
    v28 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    swift_unknownObjectRetain(v27);
    swift_dynamicCast(&v56, &v55, (char *)&type metadata for Swift.AnyObject + 8, v28, 7);
    v29 = v56;
    swift_unknownObjectRelease(v27);
    v17 = v23;
    if (!v29)
      goto LABEL_41;
LABEL_33:
    v33 = sub_1004D1C54(v29, a2);
    if (!v34)
      goto LABEL_11;
    v35 = v33;
    v36 = v34;
    swift_bridgeObjectRelease(v34);
    v37 = HIBYTE(v36) & 0xF;
    if ((v36 & 0x2000000000000000) == 0)
      v37 = v35 & 0xFFFFFFFFFFFFLL;
    if (!v37)
      goto LABEL_11;
    if (!v22)
      goto LABEL_40;
    v38 = v22;
    objc_msgSend(v29, "frameInUnscaledCanvas");
    v43 = sub_1000610A4(v8, v10, v39, v40, v41, v42);
    objc_msgSend(v38, "frameInUnscaledCanvas");
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v51 = v50;

    if (v43 < sub_1000610A4(v8, v10, v45, v47, v49, v51))
    {

LABEL_40:
      v22 = v29;
    }
    else
    {
LABEL_11:

    }
  }
  if (v18)
  {
    v24 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v25 = v24 | (v17 << 6);
    goto LABEL_32;
  }
  v30 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    return;
  }
  if (v30 >= v53)
    goto LABEL_41;
  v31 = *(_QWORD *)(v54 + 8 * v30);
  ++v17;
  if (v31)
    goto LABEL_31;
  v17 = v23 + 2;
  if (v23 + 2 >= v53)
    goto LABEL_41;
  v31 = *(_QWORD *)(v54 + 8 * v17);
  if (v31)
    goto LABEL_31;
  v17 = v23 + 3;
  if (v23 + 3 >= v53)
    goto LABEL_41;
  v31 = *(_QWORD *)(v54 + 8 * v17);
  if (v31)
    goto LABEL_31;
  v17 = v23 + 4;
  if (v23 + 4 >= v53)
    goto LABEL_41;
  v31 = *(_QWORD *)(v54 + 8 * v17);
  if (v31)
  {
LABEL_31:
    v18 = (v31 - 1) & v31;
    v25 = __clz(__rbit64(v31)) + (v17 << 6);
LABEL_32:
    v29 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v25);
    if (!v29)
      goto LABEL_41;
    goto LABEL_33;
  }
  v32 = v23 + 5;
  while (v53 != v32)
  {
    v31 = *(_QWORD *)(v54 + 8 * v32++);
    if (v31)
    {
      v17 = v32 - 1;
      goto LABEL_31;
    }
  }
LABEL_41:
  sub_1004D284C(a1);
  if (v22)
  {
    v52 = v22;
    sub_1004D1C54(v52, a2);

  }
}

uint64_t sub_1004D284C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_1004D2854(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004B8930(255, (unint64_t *)&qword_1013E56B0, off_101229828);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004D28A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E0230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D28EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E0230);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004D292C()
{
  unint64_t result;

  result = qword_1013E1750;
  if (!qword_1013E1750)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1013E1750);
  }
  return result;
}

unint64_t sub_1004D2970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DFF78;
  if (!qword_1013DFF78)
  {
    v1 = sub_1004CB6A4(&qword_1013DFF70);
    result = swift_getWitnessTable(&protocol conformance descriptor for ArraySlice<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013DFF78);
  }
  return result;
}

uint64_t sub_1004D29BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingLassoTypeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004D2A4C + 4 * byte_100EF5C35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004D2A80 + 4 * asc_100EF5C30[v4]))();
}

uint64_t sub_1004D2A80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004D2A88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004D2A90);
  return result;
}

uint64_t sub_1004D2A9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004D2AA4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004D2AA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004D2AB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingLassoTypeData()
{
  return &type metadata for CRLFreehandDrawingLassoTypeData;
}

_QWORD *sub_1004D2ACC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1004D2AEC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1004D2AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004D2DF8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1004D2B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1004D2DF8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_1004D2BA0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1004D2BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1004D2E3C();
  v7 = sub_1004D2DB4();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1004D2C0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1004D2E3C();
  v5 = sub_1004D2DF8();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_1004D2C74(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1004D2E3C();
  v5 = sub_1004D2DF8();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_1004D2CD0(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_1004D2E3C();
  v3 = sub_1004D2DF8();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_1004D2D24()
{
  unint64_t result;

  result = qword_1013DFF80;
  if (!qword_1013DFF80)
  {
    result = swift_getWitnessTable(&unk_100EF5C60, &type metadata for CRLFreehandDrawingLassoTypeData);
    atomic_store(result, (unint64_t *)&qword_1013DFF80);
  }
  return result;
}

unint64_t sub_1004D2D6C()
{
  unint64_t result;

  result = qword_1013DFF88;
  if (!qword_1013DFF88)
  {
    result = swift_getWitnessTable(&unk_100EF5CA8, &type metadata for CRLFreehandDrawingLassoTypeData);
    atomic_store(result, (unint64_t *)&qword_1013DFF88);
  }
  return result;
}

unint64_t sub_1004D2DB4()
{
  unint64_t result;

  result = qword_1013DFF90;
  if (!qword_1013DFF90)
  {
    result = swift_getWitnessTable(&unk_100EF5E08, &type metadata for CRLFreehandDrawingLassoTypeData);
    atomic_store(result, (unint64_t *)&qword_1013DFF90);
  }
  return result;
}

unint64_t sub_1004D2DF8()
{
  unint64_t result;

  result = qword_1013DFF98;
  if (!qword_1013DFF98)
  {
    result = swift_getWitnessTable(&unk_100EF5D90, &type metadata for CRLFreehandDrawingLassoTypeData);
    atomic_store(result, (unint64_t *)&qword_1013DFF98);
  }
  return result;
}

unint64_t sub_1004D2E3C()
{
  unint64_t result;

  result = qword_1013DFFA0;
  if (!qword_1013DFFA0)
  {
    result = swift_getWitnessTable(&unk_100EF5D58, &type metadata for CRLFreehandDrawingLassoTypeData);
    atomic_store(result, (unint64_t *)&qword_1013DFFA0);
  }
  return result;
}

void sub_1004D2E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  __n128 v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(void);
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __n128 v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  char *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  char *v202;
  __n128 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t ObjectType;
  void (*v223)(_QWORD, _QWORD);
  void (*v224)(_QWORD, uint64_t);
  char *v225;
  void (*v226)(_QWORD, _QWORD);
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  void *v230;
  uint64_t v231;
  uint64_t inited;
  uint64_t (*v233)(void);
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  void (*v241)(_QWORD, _QWORD);
  id v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t *v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  __n128 v262;
  uint64_t v263;
  id v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  uint64_t v271;
  __n128 v272;
  void *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t v286;
  void (*v287)(_QWORD, _QWORD);
  uint64_t v288;
  id v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  char *v299;
  char *v300;
  __int128 v301;
  char *v302;
  _QWORD *v303;
  uint64_t v304;
  id v305;
  char *v306;
  __int128 v307;
  char *v308;
  uint64_t v309;
  __int128 v310;
  id v311;
  uint64_t v312;
  id v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  char *v318;
  void (*v319)(_QWORD, _QWORD);
  uint64_t v320;
  uint64_t v321;
  void (*v322)(char *, uint64_t);
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  _QWORD v336[2];
  uint64_t v337;
  char v338[24];
  _QWORD v339[3];
  _QWORD v340[3];
  _QWORD v341[5];
  _QWORD v342[6];
  uint64_t v343;

  v3 = sub_1004B804C(&qword_1013E00B0);
  v4 = __chkstk_darwin(v3);
  v308 = (char *)&v293 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v316 = (char *)&v293 - v6;
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7);
  v309 = (uint64_t)&v293 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v10 = __chkstk_darwin(v9);
  v297 = (char *)&v293 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v300 = (char *)&v293 - v13;
  __chkstk_darwin(v12);
  *(_QWORD *)&v307 = (char *)&v293 - v14;
  v15 = type metadata accessor for UUID(0);
  v323 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v296 = (char *)&v293 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v299 = (char *)&v293 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v293 - v21;
  v23 = __chkstk_darwin(v20);
  v317 = (char *)&v293 - v24;
  __chkstk_darwin(v23);
  v306 = (char *)&v293 - v25;
  v295 = v1;
  v26 = *(_QWORD *)(v1 + 32);
  if ((v26 & 0xC000000000000001) != 0)
  {
    if (v26 < 0)
      v27 = *(_QWORD *)(v1 + 32);
    else
      v27 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 32));
    v28 = __CocoaSet.makeIterator()(v27);
    v29 = type metadata accessor for CRLTransactableHashableWrapper();
    v30 = sub_1004D4838();
    v31 = Set.Iterator.init(_cocoa:)(v341, v28, v29, v30);
    v26 = v341[0];
    v304 = v341[1];
    v32 = v341[2];
    v33 = v341[3];
    v34 = v341[4];
  }
  else
  {
    v35 = -1 << *(_BYTE *)(v26 + 32);
    v36 = *(_QWORD *)(v26 + 56);
    v304 = v26 + 56;
    v37 = ~v35;
    v38 = -v35;
    if (v38 < 64)
      v39 = ~(-1 << v38);
    else
      v39 = -1;
    v34 = v39 & v36;
    swift_bridgeObjectRetain(v26);
    v32 = v37;
    v33 = 0;
  }
  v298 = v32;
  v302 = (char *)(v26 & 0x7FFFFFFFFFFFFFFFLL);
  v303 = (_QWORD *)((unint64_t)(v32 + 64) >> 6);
  v310 = xmmword_100EF5E30;
  *(_QWORD *)&v301 = (char *)&type metadata for Swift.AnyObject + 8;
  v321 = a1;
  v324 = v15;
  v318 = v22;
  v305 = (id)v26;
  while (v26 < 0)
  {
    v44 = __CocoaSet.Iterator.next()(v31);
    if (!v44)
      goto LABEL_48;
    v45 = v44;
    v339[0] = v44;
    v46 = type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain(v45);
    swift_dynamicCast(v340, v339, v301, v46, 7);
    v47 = v340[0];
    swift_unknownObjectRelease(v45);
    v48 = v47;
    v43 = v33;
    v41 = v34;
    if (!v48)
    {
LABEL_48:
      sub_1004D284C(v26);
      v303 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
      v103 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
      v313 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
      v104 = v295;
      swift_beginAccess(v295 + 16, v340, 0, 0);
      v105 = *(_QWORD *)(v104 + 16);
      v106 = *(_QWORD *)(v105 + 64);
      v298 = v105 + 64;
      v107 = 1 << *(_BYTE *)(v105 + 32);
      v108 = -1;
      if (v107 < 64)
        v108 = ~(-1 << v107);
      v302 = (char *)((unint64_t)(v107 + 63) >> 6);
      v294 = v302 - 1;
      v314 = v103;
      v109 = v103;
      v110 = v108 & v106;
      swift_unknownObjectRetain(v109);
      v312 = v105;
      swift_bridgeObjectRetain(v105);
      v111 = 0;
      v301 = xmmword_100EF5E40;
      v112 = v320;
      v113 = (uint64_t)v308;
      v114 = (uint64_t)v316;
      while (2)
      {
        if (v110)
        {
          v322 = (void (*)(char *, uint64_t))((v110 - 1) & v110);
          v319 = (void (*)(_QWORD, _QWORD))v111;
          v126 = __clz(__rbit64(v110)) | (v111 << 6);
          goto LABEL_57;
        }
        v131 = v111 + 1;
        if (__OFADD__(v111, 1))
        {
          __break(1u);
          goto LABEL_154;
        }
        if (v131 >= (uint64_t)v302)
          goto LABEL_68;
        v132 = *(_QWORD *)(v298 + 8 * v131);
        if (v132)
        {
LABEL_61:
          v322 = (void (*)(char *, uint64_t))((v132 - 1) & v132);
          v126 = __clz(__rbit64(v132)) + (v131 << 6);
          v319 = (void (*)(_QWORD, _QWORD))v131;
LABEL_57:
          v127 = v312;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v323 + 16))(v113, *(_QWORD *)(v312 + 48) + *(_QWORD *)(v323 + 72) * v126, v15);
          v128 = *(_QWORD *)(v127 + 56);
          v129 = sub_1004B804C(&qword_1013E00B8);
          v130 = *(_QWORD *)(v128 + 8 * v126);
          *(_QWORD *)(v113 + *(int *)(v129 + 48)) = v130;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v113, 0, 1, v129);
          swift_retain(v130);
          v114 = (uint64_t)v316;
LABEL_70:
          sub_1004D4880(v113, v114);
          v134 = sub_1004B804C(&qword_1013E00B8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 48))(v114, 1, v134) == 1)
          {
            swift_release(v312);
            v192 = v295;
            swift_beginAccess(v295 + 24, v339, 0, 0);
            v193 = *(_QWORD *)(v192 + 24);
            if ((v193 & 0xC000000000000001) != 0)
            {
              if (v193 < 0)
                v194 = *(_QWORD *)(v192 + 24);
              else
                v194 = v193 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*(_QWORD *)(v192 + 24));
              v195 = __CocoaSet.makeIterator()(v194);
              v196 = type metadata accessor for CRLTransactableHashableWrapper();
              v197 = sub_1004D4838();
              v198 = Set.Iterator.init(_cocoa:)(v342, v195, v196, v197);
              v193 = v342[0];
              v306 = (char *)v342[1];
              v199 = v342[2];
              v200 = v342[3];
              v201 = v342[4];
            }
            else
            {
              v204 = -1 << *(_BYTE *)(v193 + 32);
              v205 = *(_QWORD *)(v193 + 56);
              v306 = (char *)(v193 + 56);
              v206 = ~v204;
              v207 = -v204;
              if (v207 < 64)
                v208 = ~(-1 << v207);
              else
                v208 = -1;
              v201 = v208 & v205;
              swift_bridgeObjectRetain(v193);
              v199 = v206;
              v200 = 0;
            }
            *(_QWORD *)&v301 = v199;
            v304 = v193 & 0x7FFFFFFFFFFFFFFFLL;
            v305 = (id)((unint64_t)(v199 + 64) >> 6);
            v307 = xmmword_100EF5A10;
            v302 = (char *)&type metadata for Swift.AnyObject + 8;
            v312 = v193;
            if ((v193 & 0x8000000000000000) == 0)
              goto LABEL_113;
            while (2)
            {
              while (2)
              {
                v209 = __CocoaSet.Iterator.next()(v198);
                if (!v209)
                  goto LABEL_152;
                v210 = v209;
                v320 = v112;
                v343 = v209;
                v211 = type metadata accessor for CRLTransactableHashableWrapper();
                swift_unknownObjectRetain(v210);
                swift_dynamicCast(v336, &v343, v302, v211, 7);
                v212 = (char *)v336[0];
                swift_unknownObjectRelease(v210);
                v213 = v200;
                v214 = v201;
                if (!v212)
                {
LABEL_152:
                  sub_1004D284C(v193);
                  swift_unknownObjectRelease(v314);
                  return;
                }
LABEL_125:
                v318 = (char *)v214;
                v315 = v213;
                v316 = v212;
                v219 = (id)*((_QWORD *)v212 + 2);
                v218 = *((_QWORD *)v212 + 3);
                v221 = *v303;
                v220 = v303[1];
                ObjectType = swift_getObjectType(*v303);
                v223 = (void (*)(_QWORD, _QWORD))swift_getObjectType(v219);
                v224 = *(void (**)(_QWORD, uint64_t))(v218 + 32);
                swift_unknownObjectRetain(v219);
                swift_unknownObjectRetain(v221);
                v225 = v317;
                v319 = v223;
                v224(v223, v218);
                v226 = (void (*)(_QWORD, _QWORD))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v220 + 16))(v225, ObjectType, v220);
                swift_unknownObjectRelease(v221);
                v322 = *(void (**)(char *, uint64_t))(v323 + 8);
                v322(v225, v324);
                if (v226)
                {
                  v227 = type metadata accessor for CRLBoardItem(0);
                  v228 = swift_dynamicCastClass(v226, v227);
                  if (v228)
                  {
                    v229 = (_QWORD *)v228;
                    v319 = v226;
                    v313 = v219;
                    if (qword_1013DD8B8 != -1)
                      swift_once(&qword_1013DD8B8, sub_100A06704);
                    swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v335, 0, 0);
                    v230 = (void *)static OS_os_log.boardItemLifecycle;
                    v231 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                    inited = swift_initStackObject(v231, &v334);
                    *(_OWORD *)(inited + 16) = v310;
                    v233 = *(uint64_t (**)(void))((swift_isaMask & *v229) + 0x88);
                    v311 = v230;
                    v234 = v296;
                    v235 = v233();
                    v236 = UUID.uuidString.getter(v235);
                    v238 = v237;
                    v239 = v324;
                    v322(v234, v324);
                    *(_QWORD *)(inited + 56) = &type metadata for String;
                    v240 = sub_1004CFC2C();
                    *(_QWORD *)(inited + 32) = v236;
                    v308 = (char *)(inited + 32);
                    *(_QWORD *)(inited + 64) = v240;
                    *(_QWORD *)(inited + 40) = v238;
                    v241 = v319;
                    swift_unknownObjectRetain(v319);
                    v242 = objc_msgSend(v229, "description");
                    v243 = static String._unconditionallyBridgeFromObjectiveC(_:)(v242);
                    v245 = v244;
                    swift_unknownObjectRelease(v241);

                    *(_QWORD *)(inited + 96) = &type metadata for String;
                    *(_QWORD *)(inited + 104) = v240;
                    *(_QWORD *)(inited + 72) = v243;
                    *(_QWORD *)(inited + 80) = v245;
                    v246 = (uint64_t)v297;
                    (*(void (**)(void))((swift_isaMask & *v229) + 0xB8))();
                    v247 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v323 + 48))(v246, 1, v239);
                    if ((_DWORD)v247 == 1)
                    {
                      v248 = sub_1004C1F2C(v246);
                      v249 = (uint64_t *)(inited + 112);
                      *(_QWORD *)(inited + 136) = &type metadata for String;
                      *(_QWORD *)(inited + 144) = v240;
                      goto LABEL_138;
                    }
                    v267 = v246;
                    v268 = UUID.uuidString.getter(v247);
                    v270 = v269;
                    v248 = ((uint64_t (*)(uint64_t, uint64_t))v322)(v267, v239);
                    v249 = (uint64_t *)(inited + 112);
                    *(_QWORD *)(inited + 136) = &type metadata for String;
                    *(_QWORD *)(inited + 144) = v240;
                    if (v270)
                    {
                      *v249 = v268;
                    }
                    else
                    {
LABEL_138:
                      *v249 = 7104878;
                      v270 = 0xE300000000000000;
                    }
                    *(_QWORD *)(inited + 120) = v270;
                    v271 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v229) + 0x2E8))(v248);
                    if (v271)
                    {
                      v273 = (void *)v271;
                      v274 = *(_QWORD *)(v271 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
                      v275 = v274 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                      swift_beginAccess(v274 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v333, 0, 0);
                      v276 = v275;
                      v277 = v309;
                      sub_1004D48C8(v276, v309);
                      swift_retain(v274);
                      v278 = sub_1004B804C(&qword_1013E1A80);
                      v279 = v317;
                      CRRegister.wrappedValue.getter(v278);
                      sub_1004D490C(v277);

                      swift_release(v274);
                      v281 = UUID.uuidString.getter(v280);
                      v283 = v282;
                      v322(v279, v324);
                      v284 = (uint64_t *)(inited + 152);
                      *(_QWORD *)(inited + 176) = &type metadata for String;
                      *(_QWORD *)(inited + 184) = v240;
                      if (v283)
                      {
                        *v284 = v281;
                        v285 = v321;
                        v193 = v312;
                        v286 = v315;
                        v287 = v319;
LABEL_144:
                        *(_QWORD *)(inited + 160) = v283;
                        v288 = static os_log_type_t.default.getter(v272);
                        v289 = v311;
                        sub_100A06EBC((uint64_t)v311, &_mh_execute_header, v288, "➡️⭕ CRLUndoingAction undo() un-create %{public}@%{public}@ with parentID %{public}@. Board: %{public}@", 108, 0, inited);
                        swift_setDeallocating(inited);
                        v290 = *(_QWORD *)(inited + 16);
                        v291 = sub_1004B804C(&qword_1013E0190);
                        swift_arrayDestroy(v308, v290, v291);

                        swift_unknownObjectRetain(v287);
                        sub_100DBC500(v229, 0, 0, v285);
                        swift_unknownObjectRelease_n(v287, 2);
                        swift_release(v316);
                        v198 = (_QWORD *)swift_unknownObjectRelease(v313);
                        v200 = v286;
                        v201 = (unint64_t)v318;
                        v112 = v320;
                        if (v193 < 0)
                          continue;
LABEL_113:
                        if (v201)
                        {
                          v214 = (v201 - 1) & v201;
                          v215 = __clz(__rbit64(v201)) | (v200 << 6);
                          v213 = v200;
                        }
                        else
                        {
                          v213 = v200 + 1;
                          if (__OFADD__(v200, 1))
                            goto LABEL_155;
                          if (v213 >= (uint64_t)v305)
                            goto LABEL_152;
                          v216 = *(_QWORD *)&v306[8 * v213];
                          if (!v216)
                          {
                            v217 = v200 + 2;
                            if (v200 + 2 >= (uint64_t)v305)
                              goto LABEL_152;
                            v216 = *(_QWORD *)&v306[8 * v217];
                            if (v216)
                              goto LABEL_122;
                            v217 = v200 + 3;
                            if (v200 + 3 >= (uint64_t)v305)
                              goto LABEL_152;
                            v216 = *(_QWORD *)&v306[8 * v217];
                            if (v216)
                            {
LABEL_122:
                              v213 = v217;
                            }
                            else
                            {
                              v213 = v200 + 4;
                              if (v200 + 4 >= (uint64_t)v305)
                                goto LABEL_152;
                              v216 = *(_QWORD *)&v306[8 * v213];
                              if (!v216)
                              {
                                v292 = v200 + 5;
                                while (v305 != (id)v292)
                                {
                                  v216 = *(_QWORD *)&v306[8 * v292++];
                                  if (v216)
                                  {
                                    v213 = v292 - 1;
                                    goto LABEL_123;
                                  }
                                }
                                goto LABEL_152;
                              }
                            }
                          }
LABEL_123:
                          v214 = (v216 - 1) & v216;
                          v215 = __clz(__rbit64(v216)) + (v213 << 6);
                        }
                        v320 = v112;
                        v212 = *(char **)(*(_QWORD *)(v193 + 48) + 8 * v215);
                        swift_retain(v212);
                        if (!v212)
                          goto LABEL_152;
                        goto LABEL_125;
                      }
                    }
                    else
                    {
                      v284 = (uint64_t *)(inited + 152);
                      *(_QWORD *)(inited + 176) = &type metadata for String;
                      *(_QWORD *)(inited + 184) = v240;
                    }
                    v285 = v321;
                    v193 = v312;
                    v286 = v315;
                    v287 = v319;
                    *v284 = 7104878;
                    v283 = 0xE300000000000000;
                    goto LABEL_144;
                  }
                  swift_unknownObjectRelease(v226);
                }
                break;
              }
              if (qword_1013DD8B8 != -1)
                swift_once(&qword_1013DD8B8, sub_100A06704);
              swift_beginAccess(&static OS_os_log.boardItemLifecycle, v338, 0, 0);
              v250 = (void *)static OS_os_log.boardItemLifecycle;
              v251 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              v252 = swift_initStackObject(v251, &v337);
              *(_OWORD *)(v252 + 16) = v307;
              v313 = v250;
              v253 = v317;
              v254 = ((uint64_t (*)(_QWORD, uint64_t))v224)(v319, v218);
              v255 = UUID.uuidString.getter(v254);
              v257 = v256;
              v322(v253, v324);
              *(_QWORD *)(v252 + 56) = &type metadata for String;
              v258 = sub_1004CFC2C();
              *(_QWORD *)(v252 + 64) = v258;
              *(_QWORD *)(v252 + 32) = v255;
              *(_QWORD *)(v252 + 40) = v257;
              v336[0] = v219;
              v336[1] = v218;
              swift_unknownObjectRetain(v219);
              v259 = sub_1004B804C(&qword_1013E00C0);
              v260 = String.init<A>(describing:)(v336, v259);
              *(_QWORD *)(v252 + 96) = &type metadata for String;
              *(_QWORD *)(v252 + 104) = v258;
              *(_QWORD *)(v252 + 72) = v260;
              *(_QWORD *)(v252 + 80) = v261;
              v263 = static os_log_type_t.default.getter(v262);
              v264 = v313;
              sub_100A06EBC((uint64_t)v313, &_mh_execute_header, v263, "➡️⭕ CRLUndoingAction undo() un-create %{public}@%{public}@ from old snapshot.", 83, 0, v252);
              swift_setDeallocating(v252);
              v265 = *(_QWORD *)(v252 + 16);
              v266 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(v252 + 32, v265, v266);

              sub_100DBDC14((uint64_t)v219, 0, 0, v321, (uint64_t)v319, v218);
              swift_unknownObjectRelease(v219);
              swift_release(v316);
              v200 = v315;
              v201 = (unint64_t)v318;
              v112 = v320;
              v193 = v312;
              if (v312 < 0)
                continue;
              goto LABEL_113;
            }
          }
          v135 = *(char **)(v114 + *(int *)(v134 + 48));
          (*(void (**)(char *, uint64_t, uint64_t))(v323 + 32))(v22, v114, v15);
          v136 = swift_getObjectType(v314);
          v137 = (*((uint64_t (**)(char *, uint64_t))v313 + 2))(v22, v136);
          v315 = v138;
          if (v137)
          {
            v139 = v137;
            v140 = type metadata accessor for CRLBoardItem(0);
            v141 = swift_dynamicCastClass(v139, v140);
            if (v141)
            {
              v142 = (_QWORD *)v141;
              v306 = v135;
              v320 = v112;
              v143 = qword_1013DD8B8;
              swift_unknownObjectRetain(v139);
              if (v143 != -1)
                swift_once(&qword_1013DD8B8, sub_100A06704);
              swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v330, 0, 0);
              v144 = (void *)static OS_os_log.boardItemLifecycle;
              v145 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              v146 = swift_initStackObject(v145, &v329);
              *(_OWORD *)(v146 + 16) = v310;
              v147 = *(uint64_t (**)(void))((swift_isaMask & *v142) + 0x88);
              v305 = v144;
              v148 = v299;
              v149 = v147();
              v150 = UUID.uuidString.getter(v149);
              v152 = v151;
              v153 = v324;
              v311 = *(id *)(v323 + 8);
              ((void (*)(char *, uint64_t))v311)(v148, v324);
              *(_QWORD *)(v146 + 56) = &type metadata for String;
              v154 = sub_1004CFC2C();
              *(_QWORD *)(v146 + 32) = v150;
              v304 = v146 + 32;
              *(_QWORD *)(v146 + 64) = v154;
              *(_QWORD *)(v146 + 40) = v152;
              swift_unknownObjectRetain(v139);
              v155 = objc_msgSend(v142, "description");
              v156 = static String._unconditionallyBridgeFromObjectiveC(_:)(v155);
              v158 = v157;
              swift_unknownObjectRelease(v139);

              *(_QWORD *)(v146 + 96) = &type metadata for String;
              *(_QWORD *)(v146 + 104) = v154;
              *(_QWORD *)(v146 + 72) = v156;
              *(_QWORD *)(v146 + 80) = v158;
              v159 = (uint64_t)v300;
              (*(void (**)(void))((swift_isaMask & *v142) + 0xB8))();
              v160 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v323 + 48))(v159, 1, v153);
              *(_QWORD *)&v307 = v154;
              if ((_DWORD)v160 == 1)
              {
                v161 = sub_1004C1F2C(v159);
                v162 = (uint64_t *)(v146 + 112);
                *(_QWORD *)(v146 + 136) = &type metadata for String;
                *(_QWORD *)(v146 + 144) = v154;
                a1 = v321;
                v163 = (void (*)(char *, uint64_t))v311;
                goto LABEL_80;
              }
              v164 = UUID.uuidString.getter(v160);
              v166 = v165;
              v167 = v153;
              v163 = (void (*)(char *, uint64_t))v311;
              v161 = ((uint64_t (*)(uint64_t, uint64_t))v311)(v159, v167);
              v162 = (uint64_t *)(v146 + 112);
              *(_QWORD *)(v146 + 136) = &type metadata for String;
              *(_QWORD *)(v146 + 144) = v154;
              if (v166)
              {
                *v162 = v164;
                a1 = v321;
              }
              else
              {
                a1 = v321;
LABEL_80:
                *v162 = 7104878;
                v166 = 0xE300000000000000;
              }
              *(_QWORD *)(v146 + 120) = v166;
              v168 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v142) + 0x2E8))(v161);
              if (v168)
              {
                v170 = (void *)v168;
                v171 = *(_QWORD *)(v168 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
                v172 = v171 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                swift_beginAccess(v171 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v328, 0, 0);
                v173 = v172;
                v174 = v309;
                sub_1004D48C8(v173, v309);
                swift_retain(v171);
                v175 = sub_1004B804C(&qword_1013E1A80);
                v176 = v163;
                v177 = v317;
                CRRegister.wrappedValue.getter(v175);
                sub_1004D490C(v174);

                swift_release(v171);
                v179 = UUID.uuidString.getter(v178);
                v181 = v180;
                v176(v177, v324);
                v182 = (uint64_t *)(v146 + 152);
                v183 = v307;
                *(_QWORD *)(v146 + 176) = &type metadata for String;
                *(_QWORD *)(v146 + 184) = v183;
                if (v181)
                {
                  *v182 = v179;
                  v114 = (uint64_t)v316;
                  v184 = v305;
                  v135 = v306;
                  v185 = v304;
                  a1 = v321;
                  goto LABEL_87;
                }
                v114 = (uint64_t)v316;
                v184 = v305;
                v135 = v306;
                v185 = v304;
                a1 = v321;
              }
              else
              {
                v182 = (uint64_t *)(v146 + 152);
                v186 = v307;
                *(_QWORD *)(v146 + 176) = &type metadata for String;
                *(_QWORD *)(v146 + 184) = v186;
                v114 = (uint64_t)v316;
                v184 = v305;
                v135 = v306;
                v185 = v304;
              }
              *v182 = 7104878;
              v181 = 0xE300000000000000;
LABEL_87:
              *(_QWORD *)(v146 + 160) = v181;
              v187 = static os_log_type_t.default.getter(v169);
              sub_100A06EBC((uint64_t)v184, &_mh_execute_header, v187, "➡️ CRLUndoingAction undo() undo mutation of %{public}@%{public}@ with parentID %{public}@. Board: %{public}@", 112, 0, v146);
              swift_setDeallocating(v146);
              v188 = *(_QWORD *)(v146 + 16);
              v189 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(v185, v188, v189);
              swift_unknownObjectRelease(v139);

              v112 = v320;
              v113 = (uint64_t)v308;
            }
            v190 = v315;
            sub_100DBEE64(v139, v315);
            if (v112)
            {
              swift_unknownObjectRelease(v139);
              swift_unknownObjectRelease(v314);
              v202 = v318;
              v203 = swift_release(v135);
              (*(void (**)(char *, uint64_t, __n128))(v323 + 8))(v202, v324, v203);
              swift_release(v312);
              return;
            }
            v191 = swift_getObjectType(v139);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 72))(v135, a1, v191, v190);
            v22 = v318;
            swift_unknownObjectRelease(v139);
            swift_release(v135);
          }
          else
          {
            v115 = v112;
            if (qword_1013DD6D0 != -1)
              swift_once(&qword_1013DD6D0, sub_100A00E84);
            swift_beginAccess(&static OS_os_log.crlWarning, &v332, 0, 0);
            v116 = (void *)static OS_os_log.crlWarning;
            v117 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v118 = swift_initStackObject(v117, &v331);
            *(_OWORD *)(v118 + 16) = v301;
            v119 = v116;
            v120 = UUID.uuidString.getter(v119);
            v122 = v121;
            *(_QWORD *)(v118 + 56) = &type metadata for String;
            *(_QWORD *)(v118 + 64) = sub_1004CFC2C();
            *(_QWORD *)(v118 + 32) = v120;
            *(_QWORD *)(v118 + 40) = v122;
            v124 = static os_log_type_t.default.getter(v123);
            sub_100A06EBC((uint64_t)v119, &_mh_execute_header, v124, "Unable to find transactable to apply undoingMutations for %{public}@", 68, 2, v118);
            swift_release(v135);
            swift_setDeallocating(v118);
            v125 = sub_1004B804C(&qword_1013E0190);
            swift_arrayDestroy(v118 + 32, 1, v125);

            v112 = v115;
            a1 = v321;
            v113 = (uint64_t)v308;
            v114 = (uint64_t)v316;
          }
          v15 = v324;
          (*(void (**)(char *, uint64_t))(v323 + 8))(v22, v324);
          v111 = (uint64_t)v319;
          v110 = (unint64_t)v322;
          continue;
        }
        break;
      }
      v111 += 2;
      if (v131 + 1 >= (uint64_t)v302)
        goto LABEL_98;
      v132 = *(_QWORD *)(v298 + 8 * v111);
      if (v132)
      {
LABEL_64:
        v131 = v111;
        goto LABEL_61;
      }
      if (v131 + 2 >= (uint64_t)v302)
      {
LABEL_68:
        v319 = (void (*)(_QWORD, _QWORD))v111;
      }
      else
      {
        v132 = *(_QWORD *)(v298 + 8 * (v131 + 2));
        if (v132)
        {
          v131 += 2;
          goto LABEL_61;
        }
        v111 = v131 + 3;
        if (v131 + 3 >= (uint64_t)v302)
        {
          v319 = (void (*)(_QWORD, _QWORD))(v131 + 2);
        }
        else
        {
          v132 = *(_QWORD *)(v298 + 8 * v111);
          if (v132)
            goto LABEL_64;
          while (1)
          {
            v131 = v111 + 1;
            if (__OFADD__(v111, 1))
              goto LABEL_156;
            if (v131 >= (uint64_t)v302)
              break;
            v132 = *(_QWORD *)(v298 + 8 * v131);
            ++v111;
            if (v132)
              goto LABEL_61;
          }
          v131 = (uint64_t)v294;
LABEL_98:
          v319 = (void (*)(_QWORD, _QWORD))v131;
        }
      }
      v133 = sub_1004B804C(&qword_1013E00B8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56))(v113, 1, 1, v133);
      v322 = 0;
      goto LABEL_70;
    }
LABEL_34:
    v52 = *(_QWORD *)(v48 + 16);
    v53 = *(id *)(v48 + 24);
    v322 = (void (*)(char *, uint64_t))v48;
    v54 = type metadata accessor for CRLBoardItem(0);
    v55 = swift_dynamicCastClass(v52, v54);
    if (!v55)
    {
      swift_unknownObjectRetain(v52);
      v22 = v318;
      goto LABEL_12;
    }
    v56 = (_QWORD *)v55;
    v311 = v53;
    v314 = v41;
    v315 = v43;
    v57 = qword_1013DD8B8;
    swift_unknownObjectRetain_n(v52, 2);
    if (v57 != -1)
      swift_once(&qword_1013DD8B8, sub_100A06704);
    swift_beginAccess(&static OS_os_log.boardItemLifecycle, &v327, 0, 0);
    v58 = (void *)static OS_os_log.boardItemLifecycle;
    v59 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v60 = swift_initStackObject(v59, &v326);
    *(_OWORD *)(v60 + 16) = v310;
    v61 = *(uint64_t (**)(void))((swift_isaMask & *v56) + 0x88);
    v313 = v58;
    v62 = v306;
    v63 = v61();
    v64 = UUID.uuidString.getter(v63);
    v66 = v65;
    v67 = v323;
    v319 = *(void (**)(_QWORD, _QWORD))(v323 + 8);
    v319(v62, v324);
    *(_QWORD *)(v60 + 56) = &type metadata for String;
    v68 = sub_1004CFC2C();
    *(_QWORD *)(v60 + 32) = v64;
    v312 = v60 + 32;
    *(_QWORD *)(v60 + 64) = v68;
    *(_QWORD *)(v60 + 40) = v66;
    swift_unknownObjectRetain(v52);
    v69 = objc_msgSend(v56, "description");
    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v72 = v71;
    swift_unknownObjectRelease(v52);

    *(_QWORD *)(v60 + 96) = &type metadata for String;
    *(_QWORD *)(v60 + 104) = v68;
    *(_QWORD *)(v60 + 72) = v70;
    *(_QWORD *)(v60 + 80) = v72;
    v73 = v324;
    v74 = v307;
    (*(void (**)(void))((swift_isaMask & *v56) + 0xB8))();
    v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v74, 1, v73);
    if ((_DWORD)v75 == 1)
    {
      v76 = sub_1004C1F2C(v74);
      v77 = (uint64_t *)(v60 + 112);
      *(_QWORD *)(v60 + 136) = &type metadata for String;
      *(_QWORD *)(v60 + 144) = v68;
    }
    else
    {
      v78 = UUID.uuidString.getter(v75);
      v79 = v74;
      v80 = v78;
      v82 = v81;
      v76 = ((uint64_t (*)(uint64_t, uint64_t))v319)(v79, v73);
      v77 = (uint64_t *)(v60 + 112);
      *(_QWORD *)(v60 + 136) = &type metadata for String;
      *(_QWORD *)(v60 + 144) = v68;
      if (v82)
      {
        *v77 = v80;
        goto LABEL_42;
      }
    }
    *v77 = 7104878;
    v82 = 0xE300000000000000;
LABEL_42:
    *(_QWORD *)(v60 + 120) = v82;
    v83 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v56) + 0x2E8))(v76);
    if (!v83)
    {
      v96 = (uint64_t *)(v60 + 152);
      *(_QWORD *)(v60 + 176) = &type metadata for String;
      *(_QWORD *)(v60 + 184) = v68;
LABEL_46:
      v98 = v318;
      v26 = (uint64_t)v305;
      v53 = v311;
      *v96 = 7104878;
      v95 = 0xE300000000000000;
      v97 = v321;
      goto LABEL_47;
    }
    v85 = (void *)v83;
    v86 = *(_QWORD *)(v83 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    v87 = v86 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v86 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v325, 0, 0);
    v88 = v87;
    v89 = v309;
    sub_1004D48C8(v88, v309);
    swift_retain(v86);
    v90 = sub_1004B804C(&qword_1013E1A80);
    v91 = v317;
    CRRegister.wrappedValue.getter(v90);
    sub_1004D490C(v89);

    swift_release(v86);
    v93 = UUID.uuidString.getter(v92);
    v95 = v94;
    v319(v91, v73);
    v96 = (uint64_t *)(v60 + 152);
    *(_QWORD *)(v60 + 176) = &type metadata for String;
    *(_QWORD *)(v60 + 184) = v68;
    if (!v95)
      goto LABEL_46;
    *v96 = v93;
    v97 = v321;
    v98 = v318;
    v26 = (uint64_t)v305;
    v53 = v311;
LABEL_47:
    *(_QWORD *)(v60 + 160) = v95;
    v99 = static os_log_type_t.default.getter(v84);
    v100 = v313;
    sub_100A06EBC((uint64_t)v313, &_mh_execute_header, v99, "➡️🟢 CRLUndoingAction undo() un-delete %{public}@%{public}@ with parentID %{public}@. Board: %{public}@", 109, 0, v60);
    swift_setDeallocating(v60);
    v101 = *(_QWORD *)(v60 + 16);
    v102 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v312, v101, v102);
    swift_unknownObjectRelease(v52);

    v41 = v314;
    v43 = v315;
    a1 = v97;
    v22 = v98;
    v15 = v324;
LABEL_12:
    v40 = swift_getObjectType(v52);
    sub_100DBE8D0(v52, 2, a1, v40, (uint64_t)v53);
    swift_release(v322);
    v31 = (_QWORD *)swift_unknownObjectRelease(v52);
    v33 = v43;
    v34 = v41;
  }
  if (v34)
  {
    v41 = (v34 - 1) & v34;
    v42 = __clz(__rbit64(v34)) | (v33 << 6);
    v43 = v33;
    goto LABEL_33;
  }
  v49 = v33 + 1;
  if (!__OFADD__(v33, 1))
  {
    if (v49 >= (uint64_t)v303)
      goto LABEL_48;
    v50 = *(_QWORD *)(v304 + 8 * v49);
    v43 = v33 + 1;
    if (!v50)
    {
      v43 = v33 + 2;
      if (v33 + 2 >= (uint64_t)v303)
        goto LABEL_48;
      v50 = *(_QWORD *)(v304 + 8 * v43);
      if (!v50)
      {
        v43 = v33 + 3;
        if (v33 + 3 >= (uint64_t)v303)
          goto LABEL_48;
        v50 = *(_QWORD *)(v304 + 8 * v43);
        if (!v50)
        {
          v43 = v33 + 4;
          if (v33 + 4 >= (uint64_t)v303)
            goto LABEL_48;
          v50 = *(_QWORD *)(v304 + 8 * v43);
          if (!v50)
          {
            v51 = (_QWORD *)(v33 + 5);
            do
            {
              if (v303 == v51)
                goto LABEL_48;
              v50 = *(_QWORD *)(v304 + 8 * (_QWORD)v51);
              v51 = (_QWORD *)((char *)v51 + 1);
            }
            while (!v50);
            v43 = (uint64_t)v51 - 1;
          }
        }
      }
    }
    v41 = (v50 - 1) & v50;
    v42 = __clz(__rbit64(v50)) + (v43 << 6);
LABEL_33:
    swift_retain(*(_QWORD *)(*(_QWORD *)(v26 + 48) + 8 * v42));
    if (!v48)
      goto LABEL_48;
    goto LABEL_34;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
}

uint64_t sub_1004D47E4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLUndoingAction()
{
  return objc_opt_self(_TtC8Freeform16CRLUndoingAction);
}

unint64_t sub_1004D4838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101405D90;
  if (!qword_101405D90)
  {
    v1 = type metadata accessor for CRLTransactableHashableWrapper();
    result = swift_getWitnessTable(&unk_100F393F8, v1);
    atomic_store(result, (unint64_t *)&qword_101405D90);
  }
  return result;
}

uint64_t sub_1004D4880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E00B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D48C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D490C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1004D4990(uint64_t a1, id a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  unint64_t v14;
  char *v15;
  id v16;
  uint64_t v18;
  _QWORD v19[4];
  objc_super v20;

  v4 = v3;
  v8 = (char *)objc_allocWithZone(v4);
  v9 = &v8[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_id];
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  if (a2)
  {
    v12 = v8;
    a2 = a2;
    v13 = objc_msgSend(a2, "copy");
    _bridgeAnyObjectToAny(_:)(v19, v13);

    swift_unknownObjectRelease(v13);
    v14 = sub_1004D524C();
    swift_dynamicCast(&v18, v19, (char *)&type metadata for Any + 8, v14, 7);
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = v18;
  }
  else
  {
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = 0;
    v15 = v8;
  }
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_chirality] = a3;

  v20.receiver = v8;
  v20.super_class = v4;
  v16 = objc_msgSendSuper2(&v20, "init");
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);

  return v16;
}

void sub_1004D4C98(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  CKRecordID v20;
  Swift::String v21;
  uint64_t v22;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_11;
  v10 = type metadata accessor for CRLShapeItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_11:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLineEnd.swift", 92, 2, 41, "Unable to retrieve shape item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve shape item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLineEnd.swift", 92, 2u, 41, (uint64_t)"Unable to retrieve shape item.", 30, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    goto LABEL_12;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

    return;
  }
  v14 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_chirality);
  if (!v14)
  {
    v15 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd);
    v16 = v15;
    sub_100924148(v15);
LABEL_9:
    v19 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

    return;
  }
  if (v14 == 1)
  {
    v17 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd);
    v18 = v17;
    sub_100924698(v17);
    goto LABEL_9;
  }
LABEL_12:
  v22 = v14;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLCommandSetLineEndChirality, &v22, &type metadata for CRLCommandSetLineEndChirality, &type metadata for Int);
  __break(1u);
}

void sub_1004D4F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_1004D4F6C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetLineEnd(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004D4FF0()
{
  return type metadata accessor for CRLCommandSetLineEnd(0);
}

uint64_t type metadata accessor for CRLCommandSetLineEnd(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E00F0;
  if (!qword_1013E00F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetLineEnd);
  return result;
}

uint64_t sub_1004D5034(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandSetLineEndChirality()
{
  return &type metadata for CRLCommandSetLineEndChirality;
}

unint64_t sub_1004D50CC()
{
  unint64_t result;

  result = qword_1013E0100;
  if (!qword_1013E0100)
  {
    result = swift_getWitnessTable(&unk_100EF5F58, &type metadata for CRLCommandSetLineEndChirality);
    atomic_store(result, (unint64_t *)&qword_1013E0100);
  }
  return result;
}

id sub_1004D5110(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  unint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  uint64_t v18;
  _QWORD v19[4];
  objc_super v20;

  v7 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_id];
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if (a2)
  {
    v10 = v3;
    v11 = a2;
    v12 = objc_msgSend(v11, "copy");
    _bridgeAnyObjectToAny(_:)(v19, v12);

    swift_unknownObjectRelease(v12);
    v13 = sub_1004D524C();
    swift_dynamicCast(&v18, v19, (char *)&type metadata for Any + 8, v13, 7);
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = v18;
  }
  else
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_lineEnd] = 0;
    v14 = v3;
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandSetLineEnd_chirality] = a3;

  v15 = (objc_class *)type metadata accessor for CRLCommandSetLineEnd(0);
  v20.receiver = v3;
  v20.super_class = v15;
  v16 = objc_msgSendSuper2(&v20, "init");
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v16;
}

unint64_t sub_1004D524C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0108;
  if (!qword_1013E0108)
  {
    v1 = objc_opt_self(CRLLineEnd);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E0108);
  }
  return result;
}

uint64_t sub_1004D5288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[40] = a4;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v4[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v4[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v4[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[44] = v8;
  v4[45] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[46] = v9;
  v4[47] = v10;
  return swift_task_switch(sub_1004D5358, v9, v10);
}

uint64_t sub_1004D5358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 320) + 16;
  swift_beginAccess(v1, v0 + 272, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 384) = Strong;
  if (!Strong)
  {
    swift_release(*(_QWORD *)(v0 + 360));
LABEL_11:
    v7 = *(_QWORD *)(v0 + 336);
    v8 = *(_QWORD *)(v0 + 328);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = (char *)Strong;
  v4 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  *(_QWORD *)(v0 + 392) = v4;
  if (!v4)
  {
    swift_release(*(_QWORD *)(v0 + 360));
LABEL_10:

    goto LABEL_11;
  }
  v5 = (_BYTE *)v4;
  objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "endEditing");
  if ((v5[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable] & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 360));
    sub_1004D74F4();
    goto LABEL_9;
  }
  v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask;
  *(_QWORD *)(v0 + 400) = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask;
  if (*(_QWORD *)&v3[v6 + 8])
  {
    swift_release(*(_QWORD *)(v0 + 360));
LABEL_9:

    goto LABEL_10;
  }
  v10 = *(_QWORD *)(v0 + 352);
  v25 = *(_QWORD *)(v0 + 344);
  v12 = *(_QWORD *)(v0 + 328);
  v11 = *(_QWORD *)(v0 + 336);
  v13 = *(char **)(*(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v16 = v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 248, 0, 0);
  sub_1004B8460(v16, v12, type metadata accessor for CRLBoardCRDTData);
  v17 = v13;
  swift_retain(v15);
  v18 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v18);
  sub_1004B84A4(v12, type metadata accessor for CRLBoardCRDTData);
  swift_release(v15);
  v19 = (uint64_t *)(*(_QWORD *)&v13[v14] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v20 = *v19;
  v21 = v19[1];
  swift_bridgeObjectRetain(v21);
  sub_10067AFD0(v11, v20, v21, v25);

  *(_QWORD *)(v0 + 408) = static MainActor.shared.getter(v22);
  v23 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 416) = v23;
  *(_QWORD *)(v0 + 424) = v24;
  return swift_task_switch(sub_1004D55D4, v23, v24);
}

uint64_t sub_1004D55D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v3 = v2[1];
  if (*v2)
    v4 = 0;
  else
    v4 = v3 == 0xE000000000000000;
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v2, v3, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v5 = (_QWORD *)swift_task_alloc(dword_10140DFCC);
    *(_QWORD *)(v0 + 432) = v5;
    *v5 = v0;
    v5[1] = sub_1004D56A4;
    return sub_100C9F48C(*(_QWORD *)(v0 + 344));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 408));
    *(_BYTE *)(v0 + 505) = 1;
    *(_QWORD *)(v0 + 440) = swift_allocObject(&unk_101268738, 17, 7);
    return swift_task_switch(sub_1004D5754, *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376));
  }
}

uint64_t sub_1004D56A4(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 432);
  *(_BYTE *)(*v1 + 504) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1004D56FC, *(_QWORD *)(v2 + 416), *(_QWORD *)(v2 + 424));
}

uint64_t sub_1004D56FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 408));
  *(_BYTE *)(v0 + 505) = *(_BYTE *)(v0 + 504);
  *(_QWORD *)(v0 + 440) = swift_allocObject(&unk_101268738, 17, 7);
  return swift_task_switch(sub_1004D5754, *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376));
}

uint64_t sub_1004D5754()
{
  uint64_t v0;
  id v1;
  id v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  Class v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v22)(double, uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(*(_QWORD *)(v0 + 440) + 16) = *(_BYTE *)(v0 + 505);
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = *(_BYTE *)(v0 + 505);
  v4 = type metadata accessor for CRLiOSAppDelegate();
  v5 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v2, v4, 0, 0, 0)
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
  swift_retain(v5);
  swift_unknownObjectRelease(v2);
  v6 = sub_1009446C0();
  swift_release(v5);
  if ((v3 & 1) != 0 || v6 != 1)
    __asm { BR              X10 }
  v7 = *(_QWORD *)(v0 + 440);
  v8 = (uint64_t *)(*(_QWORD *)(v0 + 384) + *(_QWORD *)(v0 + 400));
  v9 = sub_100B4AD90(*(_QWORD *)(v0 + 344));
  *(_QWORD *)(v0 + 448) = v9;
  v10 = swift_allocObject(&unk_1012687B0, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v7;
  v11 = *v8;
  v12 = v8[1];
  v13 = v8[2];
  *v8 = 0x4008000000000000;
  v8[1] = (uint64_t)&unk_1013E01A0;
  v8[2] = v10;
  v14 = v9;
  swift_retain(v7);
  sub_1004DAD0C(v11, v12, v13);
  v15 = *(double *)v8;
  *(_QWORD *)(v0 + 456) = *v8;
  v16 = v8[1];
  *(_QWORD *)(v0 + 464) = v16;
  v17 = v8[2];
  *(_QWORD *)(v0 + 472) = v17;
  if (!v16)
  {
LABEL_8:
    __break(1u);
    JUMPOUT(0x1004D6748);
  }
  v18 = v15;
  v19 = unk_1013E01AC;
  v22 = (uint64_t (*)(double, uint64_t, uint64_t, uint64_t))((char *)&dword_1013E01A8 + dword_1013E01A8);
  swift_retain(v17);
  v20 = (_QWORD *)swift_task_alloc(v19);
  *(_QWORD *)(v0 + 480) = v20;
  *v20 = v0;
  v20[1] = sub_1004D6758;
  return v22(v18, (uint64_t)v22, v16, v17);
}

uint64_t sub_1004D6758()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 480));
  v4 = v2[58];
  v3 = v2[59];
  v5 = v2[57];
  if (v0)
  {
    swift_errorRelease(v0);
    sub_1004DAD0C(v5, v4, v3);
    v6 = v2[46];
    v7 = v2[47];
    v8 = sub_1004D6EBC;
  }
  else
  {
    sub_1004DAD0C(v2[57], v2[58], v2[59]);
    v6 = v2[46];
    v7 = v2[47];
    v8 = sub_1004D67F8;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1004D67F8()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  id v35;
  NSString v36;
  NSString v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t inited;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(void **)(v0 + 448);
  v2 = (uint64_t *)(*(_QWORD *)(v0 + 384) + *(_QWORD *)(v0 + 400));
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  *v2 = 0;
  v2[1] = 0;
  v2[2] = 0;
  sub_1004DAD0C(v3, v4, v5);

  v6 = *(_QWORD *)(v0 + 440);
  swift_beginAccess(v6 + 16, v0 + 296, 0, 0);
  if (*(_BYTE *)(v6 + 16) == 1)
  {
    v7 = sub_100C1CAE8();
    v8 = objc_msgSend(v7, "mode");

    LODWORD(v7) = objc_msgSend(v8, "wantsToEndForNonPopoverPresentations");
    if ((_DWORD)v7)
    {
      v9 = sub_100C1CAE8();
      objc_msgSend(v9, "resetToDefaultModeAnimated:", 1);

    }
    v10 = (_QWORD *)swift_task_alloc(dword_10140DEFC);
    *(_QWORD *)(v0 + 488) = v10;
    *v10 = v0;
    v10[1] = sub_1004D6D70;
    return sub_100C9C704(*(_QWORD *)(v0 + 344), 1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 360));
    v12 = (void *)objc_opt_self(NSBundle);
    v13 = objc_msgSend(v12, "mainBundle");
    v14 = String._bridgeToObjectiveC()();
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v20 = objc_msgSend(v12, "mainBundle");
    v21 = String._bridgeToObjectiveC()();
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = objc_msgSend(v12, "mainBundle");
    v28 = String._bridgeToObjectiveC()();
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v32 = v31;

    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    v34 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v33, 0, 0);

    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v19);
    v35 = v34;
    v53 = v24;
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v54 = v17;
    v37 = String._bridgeToObjectiveC()();
    v38 = v19;
    swift_bridgeObjectRelease(v19);
    v39 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v36, v37, 1);

    objc_msgSend(v39, "addAction:", v35);
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    v40 = *(void **)(v0 + 384);
    v50 = *(void **)(v0 + 392);
    v51 = *(_QWORD *)(v0 + 344);
    v52 = *(_QWORD *)(v0 + 440);
    swift_beginAccess(&static OS_os_log.shareState, v0 + 224, 0, 0);
    v41 = (void *)static OS_os_log.shareState;
    v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v42, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v44 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v53;
    *(_QWORD *)(inited + 40) = v26;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v44;
    *(_QWORD *)(inited + 64) = v44;
    *(_QWORD *)(inited + 72) = v54;
    *(_QWORD *)(inited + 80) = v38;
    v45 = v41;
    v46 = static os_log_type_t.error.getter(v45);
    sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v46, "Presenting alert: %@ %@", 23, 2, inited);
    swift_setDeallocating(inited);
    v47 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v47);

    objc_msgSend(v40, "presentViewController:animated:completion:", v39, 1, 0);
    sub_1004B84A4(v51, type metadata accessor for CRLBoardIdentifier);
    swift_release(v52);
    v48 = *(_QWORD *)(v0 + 336);
    v49 = *(_QWORD *)(v0 + 328);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004D6D70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v4 = *(_QWORD **)v2;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v2 + 488));
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = v4[46];
    v6 = v4[47];
    v7 = sub_1004D7428;
  }
  else
  {
    v4[62] = a1;
    v5 = v4[46];
    v6 = v4[47];
    v7 = sub_1004D6DE8;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1004D6DE8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(char **)(v0 + 384);
  v4 = *(void **)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 344);
  swift_release(*(_QWORD *)(v0 + 360));
  v6 = *(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider];
  v7 = sub_100C1CDC4();
  sub_1005A9E90((uint64_t)v7, v3, v1);

  sub_1004B84A4(v5, type metadata accessor for CRLBoardIdentifier);
  swift_release(v2);
  v8 = *(_QWORD *)(v0 + 336);
  v9 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004D6EBC()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  id v35;
  NSString v36;
  NSString v37;
  id v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t inited;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v1 = *(void **)(v0 + 448);
  v2 = (uint64_t *)(*(_QWORD *)(v0 + 384) + *(_QWORD *)(v0 + 400));
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  *v2 = 0;
  v2[1] = 0;
  v2[2] = 0;
  sub_1004DAD0C(v3, v4, v5);

  v6 = *(_QWORD *)(v0 + 440);
  swift_beginAccess(v6 + 16, v0 + 296, 0, 0);
  if (*(_BYTE *)(v6 + 16) == 1)
  {
    v7 = sub_100C1CAE8();
    v8 = objc_msgSend(v7, "mode");

    LODWORD(v7) = objc_msgSend(v8, "wantsToEndForNonPopoverPresentations");
    if ((_DWORD)v7)
    {
      v9 = sub_100C1CAE8();
      objc_msgSend(v9, "resetToDefaultModeAnimated:", 1);

    }
    v10 = (_QWORD *)swift_task_alloc(dword_10140DEFC);
    *(_QWORD *)(v0 + 488) = v10;
    *v10 = v0;
    v10[1] = sub_1004D6D70;
    return sub_100C9C704(*(_QWORD *)(v0 + 344), 1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 360));
    v12 = (void *)objc_opt_self(NSBundle);
    v13 = objc_msgSend(v12, "mainBundle");
    v14 = String._bridgeToObjectiveC()();
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v20 = objc_msgSend(v12, "mainBundle");
    v21 = String._bridgeToObjectiveC()();
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = objc_msgSend(v12, "mainBundle");
    v28 = String._bridgeToObjectiveC()();
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v32 = v31;

    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
    v34 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v33, 0, 0);

    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v19);
    v35 = v34;
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v52 = v17;
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    v38 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v36, v37, 1);

    objc_msgSend(v38, "addAction:", v35);
    if (qword_1013DD8C8 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    v40 = *(void **)(v0 + 384);
    v39 = *(void **)(v0 + 392);
    v50 = *(_QWORD *)(v0 + 344);
    v51 = *(_QWORD *)(v0 + 440);
    swift_beginAccess(&static OS_os_log.shareState, v0 + 224, 0, 0);
    v41 = (void *)static OS_os_log.shareState;
    v42 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v42, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v44 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v24;
    *(_QWORD *)(inited + 40) = v26;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v44;
    *(_QWORD *)(inited + 64) = v44;
    *(_QWORD *)(inited + 72) = v52;
    *(_QWORD *)(inited + 80) = v19;
    v45 = v41;
    v46 = static os_log_type_t.error.getter(v45);
    sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v46, "Presenting alert: %@ %@", 23, 2, inited);
    swift_setDeallocating(inited);
    v47 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v47);

    objc_msgSend(v40, "presentViewController:animated:completion:", v38, 1, 0);
    sub_1004B84A4(v50, type metadata accessor for CRLBoardIdentifier);
    swift_release(v51);
    v48 = *(_QWORD *)(v0 + 336);
    v49 = *(_QWORD *)(v0 + 328);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004D7428()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(char **)(v0 + 384);
  v3 = *(void **)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 344);
  swift_release(*(_QWORD *)(v0 + 360));
  v5 = *(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider];
  v6 = sub_100C1CDC4();
  sub_1005A9E90((uint64_t)v6, v2, 0);

  sub_1004B84A4(v4, type metadata accessor for CRLBoardIdentifier);
  swift_release(v1);
  v7 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 328);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004D74F4()
{
  void *v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t inited;
  unint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _BYTE v34[112];
  _BYTE v35[24];

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = objc_msgSend(v0, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v14);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v17 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v15, v16, 1);

  v18 = objc_msgSend(v0, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v25 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v24, 1, 0);

  objc_msgSend(v17, "addAction:", v25);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v35, 0, 0);
  v26 = (void *)static OS_os_log.shareState;
  v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v27, v34);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v29 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v29;
  *(_QWORD *)(inited + 64) = v29;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v14;
  v30 = v26;
  v31 = static os_log_type_t.error.getter(v30);
  sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v31, "Presenting alert: %@ %@", 23, 2, inited);
  swift_setDeallocating(inited);
  v32 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v32);

  objc_msgSend(v33, "presentViewController:animated:completion:", v17, 1, 0);
}

uint64_t sub_1004D78E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[18] = a2;
  v3[19] = a3;
  v4 = type metadata accessor for Notification(0, a2);
  v3[20] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[21] = v5;
  v3[22] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E0220);
  v3[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v3[24] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[25] = v8;
  v3[26] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v3[27] = v9;
  v3[28] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v3[29] = v10;
  v3[30] = v11;
  return swift_task_switch(sub_1004D79C8, v10, v11);
}

uint64_t sub_1004D79C8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DD110 != -1)
    swift_once(&qword_1013DD110, sub_1007920EC);
  NSNotificationCenter.notifications(named:object:)(qword_10147F5C0, 0);

  v2 = NSNotificationCenter.Notifications.makeAsyncIterator()();
  v0[31] = static MainActor.shared.getter(v2);
  v3 = sub_1004B7878(&qword_1013E0228, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[32] = v4;
  *v4 = v0;
  v4[1] = sub_1004D7AC8;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[23], v0[24], v3);
}

uint64_t sub_1004D7AC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 248);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType(v4);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1004D7E5C;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType(v4);
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1004D7B8C;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_1004D7B8C()
{
  _QWORD *v0;

  swift_release(v0[31]);
  return swift_task_switch(sub_1004D7BC4, v0[29], v0[30]);
}

uint64_t sub_1004D7BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 224);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    swift_release(v4);
LABEL_3:
    v5 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = (_OWORD *)(v0 + 56);
  v9 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 176), v1, v2);
  v10 = Notification.userInfo.getter(v9);
  if (!v10)
  {
    *v8 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_14:
    sub_1004CB800(v0 + 56, &qword_1013E0230);
    goto LABEL_15;
  }
  v11 = v10;
  *(_QWORD *)(v0 + 112) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 120) = 0x8000000100FADF90;
  AnyHashable.init<A>(_:)(v0 + 112, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_1008432BC(v0 + 16), (v13 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v11 + 56) + 32 * v12, v0 + 56);
  }
  else
  {
    *v8 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease(v11);
  sub_1004B89A4(v0 + 16);
  if (!*(_QWORD *)(v0 + 80))
    goto LABEL_14;
  v14 = sub_1004B804C(&qword_1013E0238);
  if ((swift_dynamicCast(v0 + 136, v0 + 56, (char *)&type metadata for Any + 8, v14, 6) & 1) == 0)
  {
LABEL_15:
    v21 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    goto LABEL_16;
  }
  v16 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 136);
  v19 = sub_10062219C(*(void **)(v0 + 144), v18);
  v20 = swift_bridgeObjectRelease(v18);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v16 + 8))(v15, v17, v20);
  if ((v19 & 1) != 0)
  {
    v22 = *(_QWORD *)(v0 + 224);
    v23 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    swift_release(v22);
    swift_beginAccess(v23 + 16, v0 + 88, 1, 0);
    *(_BYTE *)(v23 + 16) = 1;
    goto LABEL_3;
  }
LABEL_16:
  *(_QWORD *)(v0 + 248) = static MainActor.shared.getter(v21);
  v24 = sub_1004B7878(&qword_1013E0228, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v25 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 256) = v25;
  *v25 = v0;
  v25[1] = sub_1004D7AC8;
  return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v24);
}

uint64_t sub_1004D7E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 264);
  v1 = sub_1004B804C(&qword_1013E0210);
  v2 = swift_dynamicCast(v1, v0 + 128, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1004D7EBC(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 88) = a3;
  *(_QWORD *)(v4 + 96) = a4;
  *(double *)(v4 + 80) = a1;
  return swift_task_switch(sub_1004D7ED8, 0, 0);
}

uint64_t sub_1004D7ED8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[10];
  v4 = sub_1004B804C(&qword_1013E01B0);
  inited = swift_initStackObject(v4, v0 + 2);
  v0[13] = inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  v6 = swift_allocObject(&unk_1012687D8, 24, 7);
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(inited + 48) = &unk_1013E01C0;
  *(_QWORD *)(inited + 56) = v6;
  swift_retain(v1);
  v7 = swift_task_alloc(32);
  v0[14] = v7;
  *(_QWORD *)(v7 + 16) = inited;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E18E0);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[15] = v9;
  *v9 = v0;
  v9[1] = sub_1004D7FF0;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 17, (char *)&type metadata for () + 8, v8, 0, 0, &unk_1013E01D0, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1004D7FF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1004D80B4;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 104);
    v6 = *(_QWORD *)(v2 + 112);
    v7 = v5 + 32;
    swift_setDeallocating(v5);
    v8 = *(_QWORD *)(v5 + 16);
    v9 = sub_1004B804C(&qword_1013E01E0);
    swift_arrayDestroy(v7, v8, v9);
    swift_task_dealloc(v6);
    *(_BYTE *)(v2 + 137) = *(_BYTE *)(v2 + 136);
    v4 = sub_1004D809C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004D809C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 137) & 1) == 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  __break(1u);
  return result;
}

uint64_t sub_1004D80B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = v1 + 32;
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_setDeallocating(v1);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_1004B804C(&qword_1013E01E0);
  swift_arrayDestroy(v2, v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1004D8114()
{
  return objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "crl_openICloudPreferencePane");
}

uint64_t sub_1004D8138()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[31] = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  v1[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v1[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v1[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[35] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v1[36] = v6;
  v1[37] = v7;
  return swift_task_switch(sub_1004D8204, v6, v7);
}

uint64_t sub_1004D8204()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 248) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  *(_QWORD *)(v0 + 304) = Strong;
  if (Strong)
  {
    v2 = Strong;
    v4 = *(_QWORD *)(v0 + 264);
    v3 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(*(_QWORD *)(v0 + 248) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    *(_QWORD *)(v0 + 312) = v6;
    v7 = *(char **)(v6 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v8 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v10 = v9 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v9 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 168, 0, 0);
    sub_1004B8460(v10, v5, type metadata accessor for CRLBoardCRDTData);
    v11 = v7;
    swift_retain(v9);
    v12 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v12);
    sub_1004B84A4(v5, type metadata accessor for CRLBoardCRDTData);
    swift_release(v9);
    v13 = (uint64_t *)(*(_QWORD *)&v7[v8] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain(v15);
    sub_10067AFD0(v4, v14, v15, v3);

    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController);
    *(_QWORD *)(v0 + 320) = v16;
    v17 = *(void **)(*(_QWORD *)(v16 + 112) + 112);
    *(_QWORD *)(v0 + 328) = v17;
    v18 = dword_10140DEFC;
    swift_retain(v16);
    v19 = v17;
    v20 = (_QWORD *)swift_task_alloc(v18);
    *(_QWORD *)(v0 + 336) = v20;
    *v20 = v0;
    v20[1] = sub_1004D8488;
    return sub_100C9C704(*(_QWORD *)(v0 + 272), 0);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 280);
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentCloudShareOptionsViewController()", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-SharingAdditions.swift", 112, 2, 141, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentCloudShareOptionsViewController()", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-SharingAdditions.swift", 112, 2u, 141, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_release(v22);
    v23 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 256);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004D8488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 336);
  v3[43] = a1;
  v3[44] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1004D88CC;
  else
    v5 = sub_1004D84F0;
  return swift_task_switch(v5, v3[36], v3[37]);
}

uint64_t sub_1004D84F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t KeyPath;
  uint64_t v23;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;

  swift_release(*(_QWORD *)(v0 + 280));
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  v1 = *(_QWORD *)(v0 + 344);
  swift_beginAccess(&static OS_os_log.shareState, v0 + 192, 0, 0);
  v2 = (void *)static OS_os_log.shareState;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  v5 = (_QWORD *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v6 = inited + 32;
  if (v1)
  {
    v7 = *(void **)(v0 + 344);
    *(_QWORD *)(v0 + 112) = sub_1004DAF40();
    *(_QWORD *)(v0 + 120) = sub_1004B7878((unint64_t *)&qword_1013EF500, (uint64_t (*)(uint64_t))sub_1004DAF40, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(v0 + 88) = v7;
    sub_1004DB728((__int128 *)(v0 + 88), v6);
  }
  else
  {
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v7 = 0;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    v5[4] = 0;
    v5[5] = 0xE000000000000000;
  }
  v8 = v2;
  v9 = v7;
  v11 = static os_log_type_t.default.getter(v10);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v11, "Presenting manage share UI for share: %@", 40, 2, (uint64_t)v5);
  swift_setDeallocating(v5);
  v12 = v5[2];
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v6, v12, v13);

  v14 = *(void **)(v0 + 328);
  if (v1)
  {
    v15 = *(_QWORD *)(v0 + 312);
    v16 = *(_QWORD *)(v0 + 248);
    v17 = objc_allocWithZone((Class)UICloudSharingController);
    v18 = v9;
    v19 = objc_msgSend(v17, "initWithShare:container:", v18, v14);
    objc_msgSend(v19, "setDelegate:", v16);
    objc_msgSend(v19, "setModalPresentationStyle:", 2);
    v20 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    *(_QWORD *)(v0 + 152) = &type metadata for CRLFeatureFlags;
    *(_QWORD *)(v0 + 160) = sub_1004DB6DC();
    *(_BYTE *)(v0 + 128) = 11;
    v21 = v20;
    LOBYTE(v16) = isFeatureEnabled(_:)(v0 + 128);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 128));
    if ((v16 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_100EF5FA8);
      v23 = swift_getKeyPath(&unk_100EF5FD0);
      static Published.subscript.getter((_QWORD *)(v0 + 240), v21, KeyPath, v23);
      swift_release(v23);
      swift_release(KeyPath);
      if (*(_QWORD *)(v0 + 240))
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v0 + 216, 0, 0);
        v24 = (id)static OS_os_log.crlFollow;
        v26 = static os_log_type_t.default.getter(v25);
        sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(0);
      }
    }
    v27 = *(_QWORD *)(v0 + 320);
    v28 = *(void **)(v0 + 328);
    v29 = *(void **)(v0 + 304);
    v30 = *(_QWORD *)(v0 + 272);
    v31 = *(void **)(v0 + 248);

    objc_msgSend(v31, "presentViewController:animated:completion:", v19, 1, 0);
    swift_release(v27);

    sub_1004B84A4(v30, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 320);
    v33 = *(void **)(v0 + 304);
    sub_1004B84A4(*(_QWORD *)(v0 + 272), type metadata accessor for CRLBoardIdentifier);

    swift_release(v32);
  }
  v34 = *(_QWORD *)(v0 + 264);
  v35 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004D88CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(void **)(v0 + 328);
  v3 = *(void **)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 264);
  swift_release(*(_QWORD *)(v0 + 280));
  swift_release(v1);

  sub_1004B84A4(v4, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004D89F4(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char v51[24];

  v3 = v2;
  v47 = a1;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v48 = (uint64_t)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v49 = (uint64_t)&v46 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v46 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)&v46 - v23;
  v50 = v3;
  v25 = objc_msgSend(v3, "view");
  if (!v25)
  {
    __break(1u);
    return;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "window");

  if (v27)
  {
    v28 = objc_msgSend(a2, "zoneID");
    sub_100B38068((uint64_t)v13);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1004CB800((uint64_t)v13, &qword_1013E0270);
      return;
    }
    sub_1004DB5FC((uint64_t)v13, (uint64_t)v24);
    v29 = *(char **)(*(_QWORD *)&v50[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v30 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v32 = v31 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v31 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v51, 0, 0);
    sub_1004B8460(v32, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
    v33 = v29;
    swift_retain(v31);
    v34 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v34);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
    swift_release(v31);
    v35 = (uint64_t *)(*(_QWORD *)&v29[v30] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v36 = *v35;
    v37 = v35[1];
    swift_bridgeObjectRetain(v37);
    sub_10067AFD0((uint64_t)v10, v36, v37, (uint64_t)v22);

    LOBYTE(v36) = static UUID.== infix(_:_:)(v22);
    v38 = v49;
    sub_1004B8460((uint64_t)v22, v49, type metadata accessor for CRLBoardIdentifier);
    v39 = v48;
    sub_1004B8460((uint64_t)v24, v48, type metadata accessor for CRLBoardIdentifier);
    if ((v36 & 1) != 0)
    {
      v40 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      v41 = *(_QWORD *)(v38 + v40);
      v42 = *(_QWORD *)(v38 + v40 + 8);
      v43 = (_QWORD *)(v39 + v40);
      v44 = v43[1];
      if (v41 == *v43 && v42 == v44)
      {
        sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4(v38, type metadata accessor for CRLBoardIdentifier);
        sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
LABEL_11:
        sub_100BB23B4(v47, v50);
        goto LABEL_12;
      }
      v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, *v43, v44, 0);
      sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v38, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      if ((v45 & 1) != 0)
        goto LABEL_11;
    }
    else
    {
      sub_1004B84A4(v39, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v38, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
    }
LABEL_12:
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
  }
}

void sub_1004D8F80(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t inited;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  char *Strong;
  char *v40;
  char *v41;
  void *v42;
  id v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  id *v49;
  char *v50;
  void *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  id *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[24];
  unsigned __int8 v73[48];

  v65 = a1;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v66 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v72, 0, 0);
  v10 = (void *)static OS_os_log.shareState;
  v61 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v61, &v71);
  v60 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v12 = *(char **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v64 = v1;
  v14 = v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, &v70, 0, 0);
  sub_1004B8460(v14, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  v15 = v10;
  v16 = v12;
  swift_retain(v13);
  v17 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v17);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);

  v18 = swift_release(v13);
  v19 = UUID.description.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v63);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v19;
  *(_QWORD *)(inited + 40) = v21;
  v23 = static os_log_type_t.default.getter(v22);
  sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v23, "Share completed or updated for board %@", 39, 2, inited);
  swift_setDeallocating(inited);
  v24 = *(_QWORD *)(inited + 16);
  v25 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v24, v25);

  v26 = type metadata accessor for TaskPriority(0);
  v27 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v66, 1, 1, v26);
  type metadata accessor for MainActor(0);
  v28 = (char *)v64;
  v29 = v65;
  v30 = static MainActor.shared.getter(v29);
  v31 = (_QWORD *)swift_allocObject(&unk_101268850, 48, 7);
  v31[2] = v30;
  v31[3] = &protocol witness table for MainActor;
  v31[4] = v28;
  v31[5] = v29;
  v32 = sub_100618930(v27, (uint64_t)&unk_1013E0260, (uint64_t)v31);
  swift_release(v32);
  v33 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController;
  v34 = *(void **)&v28[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  if (v34)
  {
    v35 = (id)static OS_os_log.shareState;
    v36 = v34;
    v38 = static os_log_type_t.default.getter(v37);
    sub_100A06EBC((uint64_t)v35, &_mh_execute_header, v38, "Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

    Strong = (char *)swift_unknownObjectWeakLoadStrong(&v36[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController]);
    if (Strong)
    {
      v40 = Strong;
      v41 = (char *)objc_msgSend(Strong, "traitCollection");
      sub_1005221A4(v41, (int)objc_msgSend(*(id *)&v40[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v73);
      sub_100522548(v73, 0);
      sub_1004DB520((uint64_t)v73);

      v36 = v41;
    }

    v42 = *(void **)&v28[v33];
    if (v42)
    {
      v43 = (id)static OS_os_log.shareState;
      v44 = v42;
      v46 = static os_log_type_t.default.getter(v45);
      sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v46, "Updating collaboration button with new item provider.", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

      v47 = (char *)sub_100BDCA78();
      if (v47)
      {
        v48 = v47;
        v49 = (id *)&v44[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
        swift_beginAccess(&v44[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], &v67, 0, 0);
        if (*v49)
        {
          v50 = (char *)*v49;
          objc_msgSend(v50, "setItemProvider:", v48);

          v44 = v50;
        }

        v44 = v48;
      }

      v51 = *(void **)&v28[v33];
      if (v51)
      {
        v52 = v51;
        sub_100BDC55C();
        v53 = sub_100BDC288();
        v54 = (void *)static OS_os_log.shareState;
        v55 = swift_initStackObject(v61, &v69);
        *(_OWORD *)(v55 + 16) = v60;
        *(_QWORD *)(v55 + 56) = &type metadata for Int;
        *(_QWORD *)(v55 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v55 + 32) = v53;
        v56 = v54;
        v58 = static os_log_type_t.default.getter(v57);
        sub_100A06EBC((uint64_t)v56, &_mh_execute_header, v58, "Updating active participant count to: %d.", 41, 2, v55);
        swift_setDeallocating(v55);
        swift_arrayDestroy(v55 + 32, 1, v25);

        v59 = (id *)&v52[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
        swift_beginAccess(&v52[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], &v68, 0, 0);
        if (*v59)
          objc_msgSend(*v59, "setActiveParticipantCount:", v53);

      }
    }
  }
}

uint64_t sub_1004D9540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v5[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[11] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[12] = v10;
  v5[13] = v11;
  return swift_task_switch(sub_1004D9610, v10, v11);
}

uint64_t sub_1004D9610()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  *(_QWORD *)(v0 + 112) = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 64);
    v20 = *(id *)(v0 + 56);
    v5 = *(char **)(*(_QWORD *)(*(_QWORD *)(v0 + 48)
                              + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 16, 0, 0);
    sub_1004B8460(v8, v4, type metadata accessor for CRLBoardCRDTData);
    v9 = v5;
    swift_retain(v7);
    v10 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v10);
    sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
    swift_release(v7);
    v11 = (uint64_t *)(*(_QWORD *)&v5[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    sub_10067AFD0(v3, v12, v13, v2);

    v14 = objc_msgSend(v20, "share");
    *(_QWORD *)(v0 + 120) = v14;
    v15 = (_QWORD *)swift_task_alloc(dword_10140DF04);
    *(_QWORD *)(v0 + 128) = v15;
    *v15 = v0;
    v15[1] = sub_1004D9818;
    return sub_100C9CCDC(*(_QWORD *)(v0 + 80), (uint64_t)v14, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 88));
    v18 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 80);
    v19 = *(_QWORD *)(v0 + 64);
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 112) == 0;
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004D9818()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 120);
  v3 = *(_QWORD *)(*v1 + 128);
  v5 = *(void **)(*v1 + 112);
  v6 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  sub_1004B84A4(v6, type metadata accessor for CRLBoardIdentifier);

  if (v0)
    v7 = sub_1004D990C;
  else
    v7 = sub_1004D98A8;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_1004D98A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 88));
  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 112) == 0;
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004D990C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004D99B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[5] = a1;
  v4[6] = a4;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v4[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[10] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v4[11] = v9;
  v4[12] = v10;
  return swift_task_switch(sub_1004D9A84, v9, v10);
}

uint64_t sub_1004D9A84()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  *(_QWORD *)(v0 + 104) = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 56);
    v5 = *(char **)(*(_QWORD *)(*(_QWORD *)(v0 + 48)
                              + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
    v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 16, 0, 0);
    sub_1004B8460(v8, v4, type metadata accessor for CRLBoardCRDTData);
    v9 = v5;
    swift_retain(v7);
    v10 = sub_1004B804C(&qword_1013E1A80);
    CRRegister.wrappedValue.getter(v10);
    sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
    swift_release(v7);
    v11 = (uint64_t *)(*(_QWORD *)&v5[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    sub_10067AFD0(v3, v12, v13, v2);

    v14 = (_QWORD *)swift_task_alloc(dword_10140DF04);
    *(_QWORD *)(v0 + 112) = v14;
    *v14 = v0;
    v14[1] = sub_1004D9C64;
    return sub_100C9CCDC(*(_QWORD *)(v0 + 72), 0, 1);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 80));
    v17 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 56);
    **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 104) == 0;
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1004D9C64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 104);
  v3 = *(_QWORD *)(*v1 + 112);
  v5 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  sub_1004B84A4(v5, type metadata accessor for CRLBoardIdentifier);

  if (v0)
    v6 = sub_1004D9D48;
  else
    v6 = sub_1004D9CE4;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
}

uint64_t sub_1004D9CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 80));
  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 104) == 0;
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004D9D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1004D9EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  id *v9;
  double v10;
  uint64_t v11;
  _BYTE v12[24];

  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "scrollToCollaborator:withSelectionPath:", a1, a2);
  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
  if (v3)
  {
    v4 = qword_1013DD8C8;
    v5 = v3;
    if (v4 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v12, 0, 0);
    v6 = (id)static OS_os_log.shareState;
    v8 = static os_log_type_t.default.getter(v7);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v8, "Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    v9 = (id *)&v5[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    *(_QWORD *)&v10 = swift_beginAccess(&v5[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], &v11, 0, 0).n128_u64[0];
    if (*v9)
      objc_msgSend(*v9, "dismissPopoverAnimated:completion:", 1, 0, v10);

  }
}

void sub_1004DA008()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char *v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  id *v7;
  double v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController);
  if (v1)
  {
    v2 = qword_1013DD8C8;
    v3 = v1;
    if (v2 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v10, 0, 0);
    v4 = (id)static OS_os_log.shareState;
    v6 = static os_log_type_t.default.getter(v5);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    v7 = (id *)&v3[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    *(_QWORD *)&v8 = swift_beginAccess(&v3[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], &v9, 0, 0).n128_u64[0];
    if (*v7)
      objc_msgSend(*v7, "dismissPopoverAnimated:completion:", 1, 0, v8);

  }
  sub_10066401C(v0, (uint64_t)sub_1004DA128, 0);
}

void sub_1004DA128()
{
  id v0;
  __n128 v1;
  uint64_t v2;
  _BYTE v3[24];

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v3, 0, 0);
  v0 = (id)static OS_os_log.crlDefault;
  v2 = static os_log_type_t.default.getter(v1);
  sub_100A06EBC((uint64_t)v0, &_mh_execute_header, v2, "Finished upgrading security.", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

}

id sub_1004DA1CC(int a1, id a2)
{
  return objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_1004DA1E4(void *a1, void *a2, void *a3)
{
  id v6;
  id v7;

  v6 = objc_allocWithZone((Class)type metadata accessor for CRLiOSParticipantContactViewController());
  v7 = CRLiOSParticipantContactViewController.init(contact:doneAction:)(a1, a2);
  objc_msgSend(v7, "setModalPresentationStyle:", 2);
  objc_msgSend(a3, "presentViewController:animated:completion:", v7, 1, 0);

}

double sub_1004DA278()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  id *v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double result;
  _BYTE v18[24];
  char v19[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  if (v4)
  {
    v5 = qword_1013DD8C8;
    v6 = v4;
    if (v5 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v19, 0, 0);
    v7 = (id)static OS_os_log.shareState;
    v9 = static os_log_type_t.default.getter(v8);
    sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "Dismissing Gelato Interstitial popover", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    v10 = (id *)&v6[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem];
    *(_QWORD *)&v11 = swift_beginAccess(&v6[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_collabUIItem], v18, 0, 0).n128_u64[0];
    if (*v10)
      objc_msgSend(*v10, "dismissPopoverAnimated:completion:", 1, 0, v11);

  }
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  type metadata accessor for MainActor(0);
  v13 = v0;
  v14 = static MainActor.shared.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_101268878, 40, 7);
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v13;
  v16 = sub_100521BB8((uint64_t)v3, (uint64_t)&unk_1013E0280, (uint64_t)v15);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_1004DA43C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[2] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = v2;
  v1[4] = static MainActor.shared.getter(v2);
  v3 = (_QWORD *)swift_task_alloc(dword_1013E028C);
  v1[5] = v3;
  *v3 = v1;
  v3[1] = sub_1004DA4A4;
  return sub_1004D8138();
}

uint64_t sub_1004DA4A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 24);
  if (v0)
  {
    swift_errorRelease(v0);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    v7 = v6;
    v8 = sub_1004DB740;
  }
  else
  {
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    v7 = v9;
    v8 = sub_1004DA554;
  }
  return swift_task_switch(v8, v5, v7);
}

uint64_t sub_1004DA554()
{
  uint64_t v0;
  uint64_t v1;
  BOOL *v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(BOOL **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  *v2 = v1 != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004DA598(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
  return swift_task_switch(sub_1004DA5B0, 0, 0);
}

void sub_1004DA5B0()
{
  uint64_t v0;
  double v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (unint64_t)v1;
    v3 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
    *(_QWORD *)(v0 + 24) = v3;
    *v3 = v0;
    v3[1] = sub_1004DA64C;
    static Task<>.sleep(nanoseconds:)(v2);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1004DA64C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_1004DA6B8, 0, 0);
}

uint64_t sub_1004DA6B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  __n128 v4;

  v2 = *(_QWORD *)(v1 + 32);
  static Task<>.checkCancellation()(a1);
  if (!v2)
  {
    v3 = sub_1004DAEFC();
    swift_allocError(&type metadata for CRLTimeoutTaskError, v3, 0, 0);
    swift_willThrow(v4);
  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1004DA720(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;

  v2[9] = a1;
  v2[10] = a2;
  v3 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E01F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v3);
  v2[12] = swift_task_alloc(v3);
  return swift_task_switch(sub_1004DA78C, 0, 0);
}

uint64_t sub_1004DA78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  __int128 v29;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (__int128 *)(v1 + 32);
    v4 = type metadata accessor for TaskPriority(0);
    v5 = *(_QWORD *)(v4 - 8);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain(v1);
    v28 = v5;
    while (1)
    {
      v9 = *(_QWORD *)(v0 + 88);
      v8 = *(_QWORD *)(v0 + 96);
      v29 = *v3;
      v27(v8, 1, 1, v4);
      v10 = swift_allocObject(&unk_101268800, 48, 7);
      *(_QWORD *)(v10 + 16) = 0;
      v11 = (uint64_t *)(v10 + 16);
      *(_QWORD *)(v10 + 24) = 0;
      *(_OWORD *)(v10 + 32) = v29;
      sub_1004DAEB4(v8, v9);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4);
      swift_retain_n(*((_QWORD *)&v29 + 1), 2);
      v13 = *(_QWORD *)(v0 + 88);
      if ((_DWORD)v9 == 1)
      {
        sub_1004CB800(*(_QWORD *)(v0 + 88), &qword_1013E01F0);
        v14 = 0;
        v15 = *v11;
        if (!*v11)
          goto LABEL_8;
      }
      else
      {
        v21 = TaskPriority.rawValue.getter(v12);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
        v14 = v21;
        v15 = *v11;
        if (!*v11)
        {
LABEL_8:
          v18 = 0;
          v20 = 0;
          goto LABEL_9;
        }
      }
      v16 = *(_QWORD *)(v10 + 24);
      ObjectType = swift_getObjectType(v15);
      swift_unknownObjectRetain(v15);
      v18 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v20 = v19;
      swift_unknownObjectRelease(v15);
LABEL_9:
      v22 = **(_QWORD **)(v0 + 72);
      v23 = v20 | v18;
      if (v20 | v18)
      {
        v23 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v18;
        *(_QWORD *)(v0 + 40) = v20;
      }
      v6 = *(_QWORD *)(v0 + 96);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v23;
      *(_QWORD *)(v0 + 64) = v22;
      v7 = swift_task_create(v14 | 0x3100, v0 + 48, (char *)&type metadata for () + 8, &unk_1013E0200);
      swift_release(*((_QWORD *)&v29 + 1));
      swift_release(v7);
      sub_1004CB800(v6, &qword_1013E01F0);
      ++v3;
      --v2;
      v5 = v28;
      if (!v2)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
        break;
      }
    }
  }
  v24 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.next(isolation:)[1]);
  *(_QWORD *)(v0 + 104) = v24;
  v25 = sub_1004B804C(&qword_1013E0208);
  *v24 = v0;
  v24[1] = sub_1004DAA14;
  return ThrowingTaskGroup.next(isolation:)(v0 + 120, 0, 0, v25);
}

uint64_t sub_1004DAA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1004DAAFC;
  else
    v3 = sub_1004DAA78;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1004DAA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  sub_1004B804C(&qword_1013E0210);
  ThrowingTaskGroup.cancelAll()();
  v3 = *(unsigned __int8 *)(v0 + 120);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1004DAAFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004DAB38(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_1004CF80C;
  return v8(a1);
}

uint64_t sub_1004DAB9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1004DABAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc(dword_1013E01EC);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1004DAC04;
  return sub_1004DA720(a2, a3);
}

uint64_t sub_1004DAC04(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1 & 1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1004DAC64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004DAC74(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1004DAC7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DACA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1013E019C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1004CFD00;
  return sub_1004D78E4(a1, v5, v4);
}

uint64_t sub_1004DAD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2)
    return swift_release(a3);
  return result;
}

uint64_t sub_1004DAD1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004DAD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1013E01BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  v3[2] = v2;
  return swift_task_switch(sub_1004DA5B0, 0, 0);
}

uint64_t sub_1004DAD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1013E01CC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1013E01C8 + dword_1013E01C8))(a1, a2, v6);
}

uint64_t sub_1004DAE00()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004DAE2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v4 = *(int **)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E01FC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc(v4[1]);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_1004CF80C;
  return v8(a1);
}

uint64_t sub_1004DAEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E01F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004DAEFC()
{
  unint64_t result;

  result = qword_1013E0218;
  if (!qword_1013E0218)
  {
    result = swift_getWitnessTable(&unk_100F16F2C, &type metadata for CRLTimeoutTaskError);
    atomic_store(result, (unint64_t *)&qword_1013E0218);
  }
  return result;
}

unint64_t sub_1004DAF40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0240;
  if (!qword_1013E0240)
  {
    v1 = objc_opt_self(CKShare);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1013E0240);
  }
  return result;
}

uint64_t sub_1004DAF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v5, v11, 0, 0);
  sub_1004B8460(v5, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  v6 = v4;
  v7 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v7);
  v8 = v10[1];
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);

  return v8;
}

void sub_1004DB090()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  char *Strong;
  char *v39;
  char *v40;
  uint64_t v41;
  id v42;
  char *v43;
  char v44[24];
  char v45[72];
  char v46[24];
  unsigned __int8 v47[48];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v43 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v46, 0, 0);
  v9 = (void *)static OS_os_log.shareState;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v10, v45);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  v42 = v0;
  v13 = *(char **)(v12 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v15 = v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v14 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v44, 0, 0);
  sub_1004B8460(v15, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  v16 = v9;
  v17 = v13;
  swift_retain(v14);
  v18 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v18);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);

  v19 = swift_release(v14);
  v20 = UUID.description.getter(v19);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v41);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v22;
  v24 = static os_log_type_t.default.getter(v23);
  sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v24, "Stopped sharing for board %@", 28, 2, inited);
  swift_setDeallocating(inited);
  v25 = *(_QWORD *)(inited + 16);
  v26 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v25, v26);

  v27 = type metadata accessor for TaskPriority(0);
  v28 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v43, 1, 1, v27);
  type metadata accessor for MainActor(0);
  v29 = (char *)v42;
  v30 = static MainActor.shared.getter(v29);
  v31 = (_QWORD *)swift_allocObject(&unk_101268828, 40, 7);
  v31[2] = v30;
  v31[3] = &protocol witness table for MainActor;
  v31[4] = v29;
  v32 = sub_100618930(v28, (uint64_t)&unk_1013E0250, (uint64_t)v31);
  swift_release(v32);
  v33 = *(void **)&v29[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController];
  if (v33)
  {
    v34 = (id)static OS_os_log.shareState;
    v35 = v33;
    v37 = static os_log_type_t.default.getter(v36);
    sub_100A06EBC((uint64_t)v34, &_mh_execute_header, v37, "Updating toolbar buttons.", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

    Strong = (char *)swift_unknownObjectWeakLoadStrong(&v35[OBJC_IVAR____TtC8Freeform33CRLGelatoInterstitialUIController_boardViewController]);
    if (Strong)
    {
      v39 = Strong;
      v40 = (char *)objc_msgSend(Strong, "traitCollection");
      sub_1005221A4(v40, (int)objc_msgSend(*(id *)&v39[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v47);
      sub_100522548(v47, 0);
      sub_1004DB520((uint64_t)v47);

      v35 = v40;
    }

  }
}

uint64_t sub_1004DB4B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E024C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1004D99B8(a1, v4, v5, v6);
}

uint64_t sub_1004DB520(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);

  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1004DB550()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004DB584(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013E025C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_1004D9540(a1, v4, v5, v7, v6);
}

uint64_t sub_1004DB5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004DB644()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004DB670(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E027C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_1004DA43C(a1);
}

unint64_t sub_1004DB6DC()
{
  unint64_t result;

  result = qword_1013E0290;
  if (!qword_1013E0290)
  {
    result = swift_getWitnessTable(&unk_100F21588, &type metadata for CRLFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1013E0290);
  }
  return result;
}

uint64_t sub_1004DB728(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

UIFontTextStyle sub_1004DB750()
{
  qword_10147E6F0 = (uint64_t)UIFontTextStyleTitle2;
  return UIFontTextStyleTitle2;
}

UIFontWeight sub_1004DB768()
{
  UIFontWeight result;

  result = UIFontWeightBold;
  qword_10147E6F8 = *(_QWORD *)&UIFontWeightBold;
  return result;
}

id sub_1004DB780(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_labelColor, &qword_10147E700);
}

UIFontTextStyle sub_1004DB794()
{
  qword_10147E708 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

UIFontWeight sub_1004DB7AC()
{
  UIFontWeight result;

  result = UIFontWeightRegular;
  qword_10147E710 = *(_QWORD *)&UIFontWeightRegular;
  return result;
}

id sub_1004DB7C4(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10147E718);
}

void sub_1004DB7D8()
{
  qword_10147E720 = 0x4028000000000000;
}

void sub_1004DB7E8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  BOOL v3;
  double v4;
  unsigned int v5;
  NSString v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                          + 24);
  if ((v2 + 64) <= 0x3Du
    && (v2 == 192 ? (v3 = (*(_QWORD *)(v1 + 8) | *(_QWORD *)(v1 + 16) | *(_QWORD *)v1) == 0) : (v3 = 0), v3))
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo) = 1;
    sub_1004DD884(0, 0, 0, 0xC0u);
  }
  else
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo) = 0;
  }
  sub_1004DBCCC();
  v5 = *(unsigned __int8 *)(v1 + 24);
  if (v5 <= 0xFD)
  {
    v9 = *(void **)(v1 + 8);
    v8 = *(_QWORD *)(v1 + 16);
    v10 = *(void **)v1;
    sub_1004DD884(v10, v9, v8, v5);
    sub_1009E30F0((uint64_t)v10, (uint64_t)v9, v8, v5);
    v12 = v11;
    sub_1004DD8A4(v10, v9, v8, v5);
    v7 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel);
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v4 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v6 = 0;
    v7 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel);
  }
  objc_msgSend(v7, "setText:", v6, v4);

  *(_BYTE *)(v0
           + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle) = 0;
  sub_1004DB940();
}

void sub_1004DB940()
{
  _BYTE *v0;
  unsigned int v1;
  BOOL v2;
  int v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  NSString v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  double v19;
  double v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _BYTE *v25;
  _QWORD v26[5];
  uint64_t v27;

  v1 = v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                         + 24];
  v2 = v1 >= 0xFE;
  v3 = v1 & 0xC0;
  v6 = !v2
    && v3 == 128
    && *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier] == 0;
  v7 = *(void **)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton];
  objc_msgSend(v7, "setHidden:", v6 ^ 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint], "setActive:", v6);
  v8 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed;
  v9 = v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed];
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if (v9 == 1)
  {
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  }
  else
  {
    v14 = String._bridgeToObjectiveC()();
    v15 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v14, v15, 0);

  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setAccessibilityLabel:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v19 = 0.0;
  if (v0[v8])
    v20 = 90.0;
  else
    v20 = 0.0;
  if (sub_1003A9250())
    v20 = -v20;
  if (v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle])
    v19 = 0.2;
  v21 = (void *)objc_opt_self(UIView);
  v22 = swift_allocObject(&unk_101268978, 32, 7);
  *(_QWORD *)(v22 + 16) = v0;
  *(double *)(v22 + 24) = v20;
  v26[4] = sub_1004DDAD0;
  v27 = v22;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = *(_QWORD *)"";
  v26[2] = sub_1005D2FC0;
  v26[3] = &unk_101268990;
  v23 = _Block_copy(v26);
  v24 = v27;
  v25 = v0;
  swift_release(v24);
  objc_msgSend(v21, "animateWithDuration:animations:", v23, v19);
  _Block_release(v23);
}

void sub_1004DBC40(uint64_t a1, double a2)
{
  id v3;
  void *v4;
  double v5;
  CGAffineTransform v6;

  v3 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton), "imageView");
  if (v3)
  {
    v4 = v3;
    v5 = sub_1004DDADC(a2);
    CGAffineTransformMakeRotation(&v6, v5);
    objc_msgSend(v4, "setTransform:", &v6);

  }
}

void sub_1004DBCCC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo) == 1)
  {
    if (qword_1013DC8D0 != -1)
      swift_once(&qword_1013DC8D0, sub_1004DB794);
    v1 = qword_1013DC8D8;
    v2 = (id)qword_10147E708;
    if (v1 != -1)
      swift_once(&qword_1013DC8D8, sub_1004DB7AC);
    if (qword_1013DC8E0 != -1)
      swift_once(&qword_1013DC8E0, sub_1004DB7C4);
    v9 = (id)qword_10147E718;
    v3 = 1;
  }
  else
  {
    if (qword_1013DC8B8 != -1)
      swift_once(&qword_1013DC8B8, sub_1004DB750);
    v4 = qword_1013DC8C0;
    v2 = (id)qword_10147E6F0;
    if (v4 != -1)
      swift_once(&qword_1013DC8C0, sub_1004DB768);
    if (qword_1013DC8C8 != -1)
      swift_once(&qword_1013DC8C8, sub_1004DB780);
    v9 = (id)qword_10147E700;
    if (sub_1003A9250())
      v3 = 0;
    else
      v3 = 2;
  }
  v5 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel);
  v6 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", v2);
  v7 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v6, "pointSize");
  v8 = objc_msgSend(v7, "systemFontOfSize:weight:");

  objc_msgSend(v5, "setFont:", v8);
  objc_msgSend(v5, "setTextColor:", v9);
  objc_msgSend(v5, "setTextAlignment:", v3);

}

char *sub_1004DBF30(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  double v23;
  id v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  void *v29;
  double v30;
  void *v31;
  id v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  double v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  Class isa;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  uint64_t v92;
  int v93;
  int v94;
  objc_super v95;

  v9 = sub_1004B804C(&qword_1013F6AE0);
  __chkstk_darwin(v9);
  v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *(_QWORD *)v12 = 0;
  v12[24] = -2;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed] = 0;
  v13 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel;
  v14 = objc_allocWithZone((Class)UILabel);
  v15 = v4;
  *(_QWORD *)&v4[v13] = objc_msgSend(v14, "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint] = 0;
  v16 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle] = 0;
  v17 = &v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_delegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17, 0);

  v18 = (objc_class *)_s13SectionHeaderCMa();
  v95.receiver = v15;
  v95.super_class = v18;
  v19 = (char *)objc_msgSendSuper2(&v95, "initWithFrame:", a1, a2, a3, a4);
  v20 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel;
  v21 = *(void **)&v19[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel];
  v22 = v19;
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v21, "setNumberOfLines:", 0);
  LODWORD(v23) = 1148846080;
  objc_msgSend(v21, "setContentCompressionResistancePriority:forAxis:", 1, v23);
  sub_1004DBCCC();
  v24 = objc_msgSend(v22, "addSubview:", v21);
  v25 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton;
  static UIButton.Configuration.plain()(v24);
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v26);

  UIButton.Configuration.image.setter(v27);
  v28 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 0, 1, v28);
  UIButton.configuration.setter(v11);
  v29 = *(void **)&v22[v25];
  objc_msgSend(v29, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v30) = 1148846080;
  objc_msgSend(v29, "setContentCompressionResistancePriority:forAxis:", 0, v30);
  objc_msgSend(v29, "addTarget:action:forControlEvents:", v22, "collapseButtonTapped:", 64);
  objc_msgSend(v29, "setContentHorizontalAlignment:", 5);
  v31 = (void *)objc_opt_self(NSBundle);
  v32 = v29;
  v33 = objc_msgSend(v31, "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v38 = v37;

  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setAccessibilityLabel:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

  v40 = objc_msgSend(*(id *)&v22[v25], "imageView");
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v40, "setClipsToBounds:", 0);

  }
  v42 = objc_msgSend(*(id *)&v22[v25], "imageView");
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, "setContentMode:", 4);

  }
  objc_msgSend(v22, "addSubview:", *(_QWORD *)&v22[v25]);
  v44 = objc_msgSend(v22, "trailingAnchor");
  v45 = objc_msgSend(*(id *)&v19[v20], "trailingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  type metadata accessor for UILayoutPriority(0);
  v48 = v47;
  v93 = 1065353216;
  v94 = 1148846080;
  v49 = sub_1004DDC04();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v92, &v94, &v93, v48, v49);
  LODWORD(v50) = v92;
  objc_msgSend(v46, "setPriority:", v50);
  v51 = objc_msgSend(*(id *)&v22[v25], "leadingAnchor");
  v52 = objc_msgSend(*(id *)&v19[v20], "trailingAnchor");
  if (qword_1013DC8E8 != -1)
    swift_once(&qword_1013DC8E8, sub_1004DB7D8);
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, *(double *)&qword_10147E720);

  v54 = *(void **)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint];
  *(_QWORD *)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint] = v53;
  v91 = v53;

  v55 = objc_msgSend(*(id *)&v19[v20], "topAnchor");
  v56 = objc_msgSend(v22, "topAnchor");
  v57 = v20;
  v58 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  v59 = *(void **)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint];
  *(_QWORD *)&v22[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint] = v58;
  v60 = v58;

  v61 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v62 = swift_allocObject(v61, 96, 7);
  *(_OWORD *)(v62 + 16) = xmmword_100EF5FF0;
  *(_QWORD *)(v62 + 32) = v60;
  v63 = *(void **)&v19[v20];
  v90 = v60;
  v64 = objc_msgSend(v63, "leadingAnchor");
  v65 = objc_msgSend(v22, "leadingAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  *(_QWORD *)(v62 + 40) = v66;
  *(_QWORD *)(v62 + 48) = v46;
  v89 = v46;
  v67 = objc_msgSend(v22, "bottomAnchor");
  v68 = objc_msgSend(*(id *)&v19[v57], "bottomAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:constant:", v68, 8.0);

  *(_QWORD *)(v62 + 56) = v69;
  v70 = objc_msgSend(*(id *)&v22[v25], "centerYAnchor");
  v71 = objc_msgSend(*(id *)&v19[v57], "centerYAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v62 + 64) = v72;
  v73 = objc_msgSend(v22, "trailingAnchor");
  v74 = objc_msgSend(*(id *)&v22[v25], "trailingAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v74, *(double *)&qword_10147E720);

  *(_QWORD *)(v62 + 72) = v75;
  v76 = objc_msgSend(*(id *)&v22[v25], "heightAnchor");
  v77 = objc_msgSend(*(id *)&v19[v57], "heightAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v62 + 80) = v78;
  v79 = *(void **)&v22[v25];
  v80 = objc_msgSend(v79, "widthAnchor");
  v81 = objc_msgSend(v79, "heightAnchor");
  v82 = objc_msgSend(v80, "constraintEqualToAnchor:", v81);

  *(_QWORD *)(v62 + 88) = v82;
  v92 = v62;
  specialized Array._endMutation()(v83);
  v84 = v92;
  v85 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_1004DD8D8();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v85, "activateConstraints:", isa, swift_bridgeObjectRelease(v84).n128_f64[0]);

  return v22;
}

id sub_1004DC900()
{
  return sub_1004C3370(_s13SectionHeaderCMa);
}

uint64_t _s13SectionHeaderCMa()
{
  return objc_opt_self(_TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader);
}

id sub_1004DC9B0(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_separatorColor, &qword_10147E728);
}

id sub_1004DC9C4(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  objc_super v20;

  v20.receiver = v4;
  v20.super_class = (Class)_s13GridSeparatorCMa();
  v9 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  v10 = qword_1013DC8F0;
  v11 = v9;
  if (v10 != -1)
    swift_once(&qword_1013DC8F0, sub_1004DC9B0);
  objc_msgSend(v11, "setBackgroundColor:", qword_10147E728);
  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EEF400;
  v15 = objc_msgSend(v11, "heightAnchor");

  v16 = objc_msgSend(v15, "constraintEqualToConstant:", 0.5);
  *(_QWORD *)(v14 + 32) = v16;
  specialized Array._endMutation()(v17);
  sub_1004DD8D8();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "activateConstraints:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  return v11;
}

id sub_1004DCBC8()
{
  return sub_1004C3370(_s13GridSeparatorCMa);
}

uint64_t _s13GridSeparatorCMa()
{
  return objc_opt_self(_TtCC8Freeform30CRLiOSFolderGridViewController13GridSeparator);
}

void sub_1004DCBF4()
{
  qword_1013E0298 = 0x4038000000000000;
}

void sub_1004DCC04(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  Class isa;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  void **aBlock;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t);
  void *v63;
  double (*v64)(uint64_t);
  uint64_t v65;
  objc_super v66;

  v9 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidEndObserver] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidBeginObserver] = 0;

  v66.receiver = v11;
  v66.super_class = (Class)_s18iCloudStatusFooterCMa();
  v12 = (char *)objc_msgSendSuper2(&v66, "initWithFrame:", a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel;
  v14 = *(void **)&v12[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel];
  v15 = v12;
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setNumberOfLines:", 1);
  objc_msgSend(v14, "setTextAlignment:", 1);
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = v14;
  v18 = objc_msgSend(v16, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v25 = *(void **)&v12[v13];
  v26 = (void *)objc_opt_self(UIFont);
  v27 = v25;
  v28 = objc_msgSend(v26, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleFootnote, 0);
  objc_msgSend(v27, "setFont:", v28);

  v29 = *(void **)&v12[v13];
  objc_msgSend(v29, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v15, "addSubview:", v29);
  v30 = (void *)objc_opt_self(NSLayoutConstraint);
  v31 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v32 = swift_allocObject(v31, 48, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100EF5560;
  v33 = objc_msgSend(v15, "centerXAnchor");
  v34 = objc_msgSend(v29, "centerXAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v32 + 32) = v35;
  v36 = objc_msgSend(v15, "bottomAnchor");
  v37 = objc_msgSend(*(id *)&v12[v13], "lastBaselineAnchor");
  if (qword_1013DC8F8 != -1)
    swift_once(&qword_1013DC8F8, sub_1004DCBF4);
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v37, *(double *)&qword_1013E0298);

  *(_QWORD *)(v32 + 40) = v38;
  aBlock = (void **)v32;
  specialized Array._endMutation()(v39);
  sub_1004DD8D8();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "activateConstraints:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v41 = (void *)objc_opt_self(NSNotificationCenter);
  v42 = objc_msgSend(v41, "defaultCenter");
  if (qword_1013DDAE8 != -1)
    swift_once(&qword_1013DDAE8, sub_100B031E8);
  v43 = qword_101480AF8;
  v44 = swift_allocObject(&unk_1012688B0, 24, 7);
  swift_unknownObjectWeakInit(v44 + 16, v15);
  v64 = sub_1004DD938;
  v65 = v44;
  aBlock = _NSConcreteStackBlock;
  v61 = *(_QWORD *)"";
  v62 = sub_100568280;
  v63 = &unk_1012688C8;
  v45 = _Block_copy(&aBlock);
  v46 = objc_msgSend(v42, "addObserverForName:object:queue:usingBlock:", v43, 0, 0, v45, swift_release(v65).n128_f64[0]);
  _Block_release(v45);

  v47 = *(_QWORD *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidBeginObserver];
  *(_QWORD *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidBeginObserver] = v46;
  swift_unknownObjectRelease(v47);
  v48 = objc_msgSend(v41, "defaultCenter");
  if (qword_1013DDAE0 != -1)
    swift_once(&qword_1013DDAE0, sub_100B031B4);
  v49 = qword_101480AF0;
  v50 = swift_allocObject(&unk_1012688B0, 24, 7);
  swift_unknownObjectWeakInit(v50 + 16, v15);
  v64 = sub_1004DD978;
  v65 = v50;
  aBlock = _NSConcreteStackBlock;
  v61 = *(_QWORD *)"";
  v62 = sub_100568280;
  v63 = &unk_1012688F0;
  v51 = _Block_copy(&aBlock);
  v52 = objc_msgSend(v48, "addObserverForName:object:queue:usingBlock:", v49, 0, 0, v51, swift_release(v65).n128_f64[0]);
  _Block_release(v51);

  v53 = *(_QWORD *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidEndObserver];
  *(_QWORD *)&v15[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidEndObserver] = v52;
  swift_unknownObjectRelease(v53);
  v54 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v55 = objc_msgSend(v54, "delegate");

  if (v55)
  {
    v56 = type metadata accessor for CRLiOSAppDelegate();
    v57 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v55, v56, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
    if (v57)
    {
      if ((*(_BYTE *)(v57 + 136) & 1) != 0)
      {
        swift_unknownObjectRelease(v55);
        v58 = 0;
      }
      else
      {
        v59 = *(_BYTE *)(v57 + 137);
        swift_unknownObjectRelease(v55);
        v58 = v59 ^ 1;
      }
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 203, "Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2u, 203, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u);
      swift_unknownObjectRelease(v55);
      v58 = 1;
    }
    objc_msgSend(*(id *)&v12[v13], "setHidden:", v58 & 1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004DD374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004DD3E0, v6, v7);
}

uint64_t sub_1004DD3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel), "setHidden:", 0);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1004DD45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor(0);
  swift_retain(a2);
  v12 = static MainActor.shared.getter(v11);
  v13 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = a2;
  v14 = sub_100521B98((uint64_t)v9, a4, (uint64_t)v13);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_1004DD540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004DD5AC, v6, v7);
}

uint64_t sub_1004DD5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_iCloudStatusLabel), "setHidden:", 1);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1004DD6FC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  objc_super v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidEndObserver];
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

  }
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter_syncDidBeginObserver];
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v4);
    v6 = objc_msgSend(v5, "defaultCenter");
    objc_msgSend(v6, "removeObserver:", v4);
    swift_unknownObjectRelease(v4);

  }
  v8.receiver = v0;
  v8.super_class = (Class)_s18iCloudStatusFooterCMa();
  return objc_msgSendSuper2(&v8, "dealloc");
}

uint64_t _s18iCloudStatusFooterCMa()
{
  return objc_opt_self(_TtCC8Freeform30CRLiOSFolderGridViewController18iCloudStatusFooter);
}

id sub_1004DD884(id result, id a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 2)
    return result;
  if (!(a4 >> 6))
    return (id)swift_bridgeObjectRetain(a2);
  return result;
}

void sub_1004DD8A4(void *a1, id a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFDu)
    sub_1004DD8B8(a1, a2, a3, a4);
}

void sub_1004DD8B8(void *a1, id a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 2)
  {

  }
  else if (!(a4 >> 6))
  {
    swift_bridgeObjectRelease(a2);
  }
}

unint64_t sub_1004DD8D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1760;
  if (!qword_1013E1760)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E1760);
  }
  return result;
}

uint64_t sub_1004DD914()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1004DD938(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_101268950, (uint64_t)&unk_1013E0390);
}

uint64_t sub_1004DD960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004DD970(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_1004DD978(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_101268928, (uint64_t)&unk_1013E0380);
}

uint64_t sub_1004DD9A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E037C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_1004DD540(a1, v4, v5, v6);
}

uint64_t sub_1004DDA14()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004DDA40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E038C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1004DD374(a1, v4, v5, v6);
}

uint64_t sub_1004DDAAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004DDAD0()
{
  uint64_t v0;

  sub_1004DBC40(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

double sub_1004DDADC(double a1)
{
  return a1 * 0.0174532925;
}

void sub_1004DDAEC()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
  *((_QWORD *)v1 + 1) = 0;
  *((_QWORD *)v1 + 2) = 0;
  *(_QWORD *)v1 = 0;
  v1[24] = -2;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_showsRecentlyDeletedInfo] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed] = 0;
  v2 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_pinLabelToLeadingEdgeOfCollapseButtonConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_titleLabelTopConstraint] = 0;
  v3 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_collapseButton;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSFolderGridViewController-Cells.swift", 51, 2, 194, 0);
  __break(1u);
}

unint64_t sub_1004DDC04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0398;
  if (!qword_1013E0398)
  {
    type metadata accessor for UILayoutPriority(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UILayoutPriority, v1);
    atomic_store(result, (unint64_t *)&qword_1013E0398);
  }
  return result;
}

double sub_1004DDC5C(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32) + 8) + *(double *)(v1 + *(int *)(a1 + 32) + 16);
}

double sub_1004DDC70(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 44));
  v4 = v2[3];
  v3 = v2[4];
  sub_1004BB5A4(v2, v4);
  v5 = (*(double (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 8))(v4);
  v7 = v2[3];
  v6 = v2[4];
  sub_1004BB5A4(v2, v7);
  return v5 + (*(double (**)(uint64_t))(*(_QWORD *)(v6 + 32) + 32))(v7);
}

double sub_1004DDCF0()
{
  uint64_t v0;

  return *(double *)(v0 + 8) + *(double *)(v0 + 16);
}

double sub_1004DDCFC()
{
  uint64_t v0;
  double v1;

  v1 = *(double *)(v0 + 8);
  return v1 + sub_10060CA54(*(_QWORD *)v0);
}

double sub_1004DDD28()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(v0 + 16);
  sub_1006350C0(*(_QWORD *)(v0 + 8), *(double *)v0, v1);
  return v1 + v2;
}

double sub_1004DDD58()
{
  uint64_t v0;
  double v1;
  double v2;

  v1 = *(double *)(v0 + 8);
  sub_1006A28F4(*(_QWORD *)v0, v1);
  return v1 + v2;
}

double sub_1004DDD84()
{
  uint64_t v0;
  double v1;

  v1 = *(double *)(v0 + 8);
  return v1 + sub_1009A3A40(*(_QWORD *)v0);
}

double sub_1004DDDB0()
{
  uint64_t v0;
  double v1;

  v1 = *(double *)(v0 + 32);
  return v1 + sub_100D26FA0();
}

double sub_1004DDDD4()
{
  uint64_t v0;
  double v1;
  double v2;
  id v3;
  double v4;
  double v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(double *)(v0 + 32);
  v12 = 0;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  v2 = CACurrentMediaTime();
  v3 = sub_100D27BB0((uint64_t)&v7, v2);
  sub_1004DDE48((uint64_t)&v7);
  objc_msgSend(v3, "duration", v7, v8, v9, v10, v11, v12);
  v5 = v4;

  return v1 + v5;
}

uint64_t sub_1004DDE48(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F04B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NSString sub_1004DDE88()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147E730 = (uint64_t)result;
  return result;
}

NSString sub_1004DDEBC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147E738 = (uint64_t)result;
  return result;
}

id sub_1004DDEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _BYTE *v10;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  objc_super v28;

  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] = a1;
  v16 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareURL];
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  v19 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle];
  *v19 = a3;
  v19[1] = a4;
  sub_1004E1B3C(a5, (uint64_t)&v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier]);
  v20 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_timeStamp];
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a6, v21);
  v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted] = a7;
  v23 = &v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString];
  *v23 = a8;
  v23[1] = a9;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage] = a10;
  v28.receiver = v10;
  v28.super_class = (Class)type metadata accessor for CRLSharedHighlight(0);
  v24 = objc_msgSendSuper2(&v28, "init");
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a6, v21);
  sub_1004BBB8C(a5);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  return v24;
}

uint64_t sub_1004DE0BC()
{
  uint64_t v0;
  Swift::String v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  Swift::String v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;

  _StringGuts.grow(_:)(82);
  v1._countAndFlagsBits = 0x203A4C5255;
  v1._object = (void *)0xE500000000000000;
  String.append(_:)(v1);
  v2 = type metadata accessor for URL(0);
  v3 = sub_1004B7878(&qword_1013FA4A0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v3);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0x3A656C7469542020;
  v6._object = (void *)0xE900000000000020;
  String.append(_:)(v6);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle + 8);
  swift_bridgeObjectRetain(v8);
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v8);
  v10._countAndFlagsBits = 0x69746E6564492020;
  v10._object = (void *)0xEE00203A72656966;
  String.append(_:)(v10);
  v11._countAndFlagsBits = sub_10067AD38();
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13._countAndFlagsBits = 0x5320656D69542020;
  v13._object = (void *)0xEE00203A706D6174;
  String.append(_:)(v13);
  v14 = type metadata accessor for Date(0);
  v15 = sub_1004B7878((unint64_t *)&unk_1013E0560, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v14, v15);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 0x7470656363412020;
  v18._object = (void *)0xEC000000203A6465;
  String.append(_:)(v18);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted))
    v19 = 1702195828;
  else
    v19 = 0x65736C6166;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted))
    v20 = 0xE400000000000000;
  else
    v20 = 0xE500000000000000;
  v21 = v20;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease(v20);
  v22._object = (void *)0x8000000100FAE910;
  v22._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v22);
  v23 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString);
  v24 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString + 8);
  swift_bridgeObjectRetain(v24);
  v25._countAndFlagsBits = v23;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v24);
  return 0;
}

id sub_1004DE37C()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))type metadata accessor for CRLSharedHighlight);
}

uint64_t sub_1004DE44C()
{
  return type metadata accessor for CRLSharedHighlight(0);
}

uint64_t type metadata accessor for CRLSharedHighlight(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E03D0;
  if (!qword_1013E03D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSharedHighlight);
  return result;
}

uint64_t sub_1004DE490(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[8];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(result - 8) + 64;
    v6[2] = &unk_100EF60B8;
    result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v4 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Date(319);
      if (v5 <= 0x3F)
      {
        v6[4] = *(_QWORD *)(result - 8) + 64;
        v6[5] = &unk_100EF60D0;
        v6[6] = &unk_100EF60B8;
        v6[7] = &unk_100EF60E8;
        return swift_updateClassMetadata2(a1, 256, 8, v6, a1 + 80);
      }
    }
  }
  return result;
}

void sub_1004DE55C()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  char v27[24];
  objc_super v28;

  v1 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter;
  v2 = objc_allocWithZone((Class)SWHighlightCenter);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer] = 0;
  v3[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights] = _swiftEmptyArrayStorage;
  v4 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightObservers;
  *(_QWORD *)&v3[v4] = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");

  v28.receiver = v3;
  v28.super_class = (Class)type metadata accessor for CRLSharedHighlightController();
  v5 = (char *)objc_msgSendSuper2(&v28, "init");
  v6 = *(void **)&v5[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter];
  v7 = v5;
  objc_msgSend(v6, "setDelegate:", v7);
  v8 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v9 = objc_msgSend(v8, "delegate");

  if (v9)
  {
    v10 = type metadata accessor for CRLiOSAppDelegate();
    v11 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v9, v10, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain(v11);
    swift_unknownObjectRelease(v9);
    v12 = sub_1009446C0();
    swift_release(v11);
    if (v12 == 1)
    {
      v7[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing] = 1;
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v27, 0, 0);
      v13 = (id)static OS_os_log.crlDefault;
      v15 = static os_log_type_t.default.getter(v14);
      sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "Starting highlight initial sync timer.", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      v16 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DC908 != -1)
        swift_once(&qword_1013DC908, sub_1004DDEBC);
      objc_msgSend(v16, "postNotificationName:object:userInfo:", qword_10147E738, v7, 0);

      v17 = (void *)objc_opt_self(NSTimer);
      v18 = swift_allocObject(&unk_101268AE8, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16, v7);
      aBlock[4] = sub_1004E2B84;
      v26 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1004C6194;
      aBlock[3] = &unk_101268B00;
      v19 = _Block_copy(aBlock);
      swift_release(v26);
      v20 = objc_msgSend(v17, "scheduledTimerWithTimeInterval:repeats:block:", 0, v19, 10.0);
      _Block_release(v19);
      v21 = *(void **)&v7[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer];
      *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer] = v20;

    }
    v22 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v23 = qword_1013DD568;
    v24 = v7;
    if (v23 != -1)
      swift_once(&qword_1013DD568, sub_100946FB4);
    objc_msgSend(v22, "addObserver:selector:name:object:", v24, "iCloudStatusDidChangeWithNotification:", qword_10147FFC0, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1004DE948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v10, 0, 0);
  v3 = (id)static OS_os_log.crlDefault;
  v5 = static os_log_type_t.default.getter(v4);
  sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "Highlight initial sync timer fired.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess(v2, &v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v7 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing) = 0;
    v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_1013DC900 != -1)
      swift_once(&qword_1013DC900, sub_1004DDE88);
    objc_msgSend(v8, "postNotificationName:object:userInfo:", qword_10147E730, v7, 0);

  }
}

uint64_t sub_1004DEAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004DEB20, v6, v7);
}

void sub_1004DEB20()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightObservers), "allObjects", swift_release(*(_QWORD *)(v0 + 24)).n128_f64[0]);
  v2 = sub_1004B804C(&qword_1013E0540);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v14 = v3;
    else
      v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v3);
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  v5 = 0;
  v6 = *(_QWORD *)(v22 + 16);
  v7 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights;
  v8 = v3 & 0xC000000000000001;
  v9 = v3;
  do
  {
    if (v8)
    {
      v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
    }
    else
    {
      v10 = *(void **)(v3 + 8 * v5 + 32);
      swift_unknownObjectRetain(v10);
    }
    v11 = *(_QWORD *)(v22 + 16);
    ++v5;
    v12 = *(_QWORD *)(v6 + v7);
    type metadata accessor for CRLSharedHighlight(0);
    swift_bridgeObjectRetain(v12);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "highlightControllerHighlightsDidChange:highlights:", v11, isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

    swift_unknownObjectRelease(v10);
    v3 = v9;
  }
  while (v4 != v5);
LABEL_13:
  v15 = *(_QWORD *)(v22 + 16);
  v16 = swift_bridgeObjectRelease(v3);
  v17 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer;
  v18 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_initialSyncTimer);
  if (v18)
  {
    v19 = *(_QWORD *)(v22 + 16);
    v20 = v18;
    objc_msgSend(v20, "fire");
    v21 = *(void **)(v15 + v17);
    *(_QWORD *)(v15 + v17) = 0;

    *(_BYTE *)(v19 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing) = 0;
  }
  (*(void (**)(__n128))(v22 + 8))(v16);
}

double sub_1004DED08(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  double result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights] = a1;
  swift_bridgeObjectRetain(a1);
  v8 = sub_1005487F4(v7, v6);
  swift_bridgeObjectRelease(a1);
  if ((v8 & 1) == 0)
  {
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    type metadata accessor for MainActor(0);
    v11 = v1;
    v12 = static MainActor.shared.getter(v11);
    v13 = (_QWORD *)swift_allocObject(&unk_101268A98, 40, 7);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v11;
    v14 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013E0538, (uint64_t)v13);
    swift_release(v14);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

double sub_1004DEE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  void *v9;
  void (**v10)(_QWORD);
  uint64_t v11;
  unint64_t v12;
  double *v13;
  double result;
  uint64_t v15;
  uint64_t v16;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v16 = v1;
    v4 = 4;
    v5 = 0;
    if ((a1 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
      goto LABEL_6;
    }
    while (1)
    {
      v6 = (char *)*(id *)(a1 + 8 * v4);
LABEL_6:
      v7 = v6;
      v1 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      v8 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight], "hideContextMenu");
      if (v8)
      {
        v9 = v8;
        v10 = (void (**)(_QWORD))objc_msgSend(v8, "actionBlock");

        v10[2](v10);
        _Block_release(v10);
      }

      if (v1 == v3)
      {
        swift_bridgeObjectRelease();
        v11 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
        swift_bridgeObjectRetain(a1);
        swift_bridgeObjectRetain(v11);
        v13 = sub_100CE1CA8(v12, a1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_1004DED08((uint64_t)v13);
      }
      v5 = ++v4 - 4;
      if ((a1 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1004DEFE8(_QWORD *a1, uint64_t a2)
{
  return sub_1004DF2EC(a1, a2) & 1;
}

void sub_1004DF000(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v29;
  uint64_t v30;
  _BYTE v31[4];
  int v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights;
  v37 = v1;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  v14 = a1;
  swift_bridgeObjectRetain(v13);
  v16 = (char *)sub_1004E1B80(v15, (uint64_t)v14);
  swift_bridgeObjectRelease();

  if (v16)
  {
    v33 = *(id *)&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
    (*(void (**)(_BYTE *, char *, uint64_t))(v10 + 16))(v12, &v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareURL], v9);
    v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle + 8];
    v34 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle];
    sub_1004E1B3C((uint64_t)&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier], (uint64_t)v8);
    (*(void (**)(_BYTE *, char *, uint64_t))(v3 + 16))(v5, &v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_timeStamp], v35);
    v32 = v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted];
    v18 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString + 8];
    v35 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString];
    v19 = v37;
    v20 = *(void **)&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_previewImage];
    objc_allocWithZone((Class)type metadata accessor for CRLSharedHighlight(0));
    v21 = v20;
    v22 = (uint64_t)v33;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    v23 = sub_1004DDEF0(v22, (uint64_t)v12, v34, v17, (uint64_t)v8, (uint64_t)v5, (v32 & 1) == 0, v35, v18, (uint64_t)v20);
    v24 = *(_QWORD *)(v19 + v36);
    swift_bridgeObjectRetain_n(v24, 2);
    v25 = sub_100C1A15C((uint64_t)v16, v24);
    LOBYTE(v22) = v26;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      v27 = v23;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v24);
      v38 = v24;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v24 < 0 || (v24 & 0x4000000000000000) != 0)
      {
        v24 = sub_100D14ED8(v24);
        v38 = v24;
      }
      if ((v25 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v25 < *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        v29 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v25 + 0x20);
        *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v25 + 0x20) = v27;

        specialized Array._endMutation()(v30);
        v24 = v38;
        goto LABEL_10;
      }
      __break(1u);
      return;
    }
LABEL_10:
    sub_1004DED08(v24);

  }
}

uint64_t sub_1004DF2EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v18;
  uint64_t v20;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v20 - v8;
  v10 = *a1 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier;
  v11 = static UUID.== infix(_:_:)(v10);
  sub_1004E1B3C(v10, (uint64_t)v9);
  sub_1004E1B3C(a2, (uint64_t)v7);
  if ((v11 & 1) != 0)
  {
    v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v13 = *(_QWORD *)&v9[v12];
    v14 = *(_QWORD *)&v9[v12 + 8];
    v15 = &v7[v12];
    v16 = *((_QWORD *)v15 + 1);
    if (v13 == *(_QWORD *)v15 && v14 == v16)
      v18 = 1;
    else
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, *(_QWORD *)v15, v16, 0);
  }
  else
  {
    v18 = 0;
  }
  sub_1004BBB8C((uint64_t)v7);
  sub_1004BBB8C((uint64_t)v9);
  return v18 & 1;
}

uint64_t sub_1004DF40C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1013E04CC);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1004DF470;
  return sub_1004DF510();
}

uint64_t sub_1004DF470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004DF4E0, v2, v3);
}

uint64_t sub_1004DF4E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004DF510()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1[5] = v0;
  v2 = sub_1004B804C(&qword_1013E04D0);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v1[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[8] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v5);
  v1[10] = swift_task_alloc(v5);
  v1[11] = swift_task_alloc(v5);
  return swift_task_switch(sub_1004DF5B0, 0, 0);
}

uint64_t sub_1004DF5B0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  Class isa;
  __n128 v27;
  _QWORD *v28;
  __n128 v29;
  id v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightCenter), "highlights");
  v4 = sub_1004B8930(0, &qword_1013E0498, SWHighlight_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v3 = (_QWORD *)v5;
    else
      v3 = (_QWORD *)(v5 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v3);
    if (v6)
      goto LABEL_3;
LABEL_20:
    v3 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  if (!v6)
    goto LABEL_20;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  v7 = 0;
  v8 = *(_QWORD *)(v1 + 64);
  v38 = v5 & 0xC000000000000001;
  v3 = _swiftEmptyArrayStorage;
  v37 = v5;
  v39 = v6;
  do
  {
    if (v38)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    else
      v9 = *(id *)(v5 + 8 * v7 + 32);
    v10 = v9;
    v11 = *(_QWORD *)(v1 + 80);
    v13 = *(char **)(v1 + 48);
    v12 = *(_QWORD *)(v1 + 56);
    v14 = objc_msgSend(v9, "URL", v37);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

    v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    v15(v13, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v12);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v12) == 1)
    {
      sub_1004CB800(*(_QWORD *)(v1 + 48), &qword_1013E04D0);
      v5 = v37;
    }
    else
    {
      v16 = *(char **)(v1 + 88);
      v17 = *(char **)(v1 + 72);
      v18 = *(_QWORD *)(v1 + 56);
      v15(v16, *(_QWORD *)(v1 + 48), v18);
      v15(v17, (uint64_t)v16, v18);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = (_QWORD *)sub_100D0FAC8(0, v3[2] + 1, 1, (unint64_t)v3);
      v5 = v37;
      v20 = v3[2];
      v19 = v3[3];
      if (v20 >= v19 >> 1)
        v3 = (_QWORD *)sub_100D0FAC8(v19 > 1, v20 + 1, 1, (unint64_t)v3);
      v21 = *(_QWORD *)(v1 + 72);
      v22 = *(_QWORD *)(v1 + 56);
      v3[2] = v20 + 1;
      v15((char *)v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20, v21, v22);
    }
    ++v7;
  }
  while (v39 != v7);
LABEL_21:
  swift_bridgeObjectRelease(v5);
  if (v3[2])
  {
    v23 = *(void **)(v1 + 40);
    v6 = swift_allocObject(&unk_1012689F8, 32, 7);
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v23;
    v2 = swift_allocObject(&unk_101268A20, 24, 7);
    *(_QWORD *)(v2 + 16) = &_swiftEmptyDictionarySingleton;
    v24 = objc_allocWithZone((Class)CKFetchShareMetadataOperation);
    v25 = v23;
    swift_bridgeObjectRetain(v3);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v0 = objc_msgSend(v24, "initWithShareURLs:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    objc_msgSend(v0, "setShouldFetchRootRecord:", 1);
    v27 = swift_retain(v2);
    CKFetchShareMetadataOperation.perShareMetadataResultBlock.setter(sub_1004E1DB4, v2, v27);
    v28 = (_QWORD *)swift_allocObject(&unk_101268A48, 40, 7);
    v28[2] = sub_1004E1D84;
    v28[3] = v6;
    v28[4] = v2;
    swift_retain(v2);
    v29 = swift_retain(v6);
    CKFetchShareMetadataOperation.fetchShareMetadataResultBlock.setter(sub_1004E1DEC, v28, v29);
    objc_msgSend(v0, "setQualityOfService:", 25);
    if (qword_1013DCB60 == -1)
    {
LABEL_23:
      objc_msgSend((id)qword_10147ECC0, "addOperation:", v0);
      swift_bridgeObjectRelease(v3);
      swift_release(v6);
      swift_release(v2);

      goto LABEL_27;
    }
LABEL_29:
    swift_once(&qword_1013DCB60, sub_100637218);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v5);
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, v1 + 16, 0, 0);
  v30 = (id)static OS_os_log.shareState;
  v32 = static os_log_type_t.default.getter(v31);
  sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v32, "Highlights did not contain any URLs.", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1004DED08((uint64_t)_swiftEmptyArrayStorage);
LABEL_27:
  v33 = *(_QWORD *)(v1 + 80);
  v34 = *(_QWORD *)(v1 + 72);
  v35 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 88));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

id sub_1004DFAD8(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLSharedHighlightController);
}

id sub_1004DFAE4(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for CRLSharedHighlightController()
{
  return objc_opt_self(_TtC8Freeform28CRLSharedHighlightController);
}

double sub_1004DFB8C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = swift_allocObject(&unk_101268A70, 64, 7);
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = a1;
  *(_BYTE *)(v12 + 40) = a2 & 1;
  *(_QWORD *)(v12 + 48) = a3;
  *(_QWORD *)(v12 + 56) = a4;
  sub_1004E1EF0(a1, a2 & 1);
  swift_bridgeObjectRetain(a3);
  v13 = a4;
  v14 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013E04E0, v12);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_1004DFC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  *(_QWORD *)(v7 + 208) = a6;
  *(_QWORD *)(v7 + 216) = a7;
  *(_BYTE *)(v7 + 524) = a5;
  *(_QWORD *)(v7 + 200) = a4;
  v8 = type metadata accessor for Calendar(0);
  *(_QWORD *)(v7 + 224) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 232) = v9;
  *(_QWORD *)(v7 + 240) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DateComponents(0);
  *(_QWORD *)(v7 + 248) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v7 + 256) = v11;
  *(_QWORD *)(v7 + 264) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  *(_QWORD *)(v7 + 272) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v7 + 280) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 288) = swift_task_alloc(v14);
  *(_QWORD *)(v7 + 296) = swift_task_alloc(v14);
  v15 = sub_1004B804C(&qword_1013E0270);
  *(_QWORD *)(v7 + 304) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v7 + 312) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v7 + 320) = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 328) = swift_task_alloc(v18);
  *(_QWORD *)(v7 + 336) = swift_task_alloc(v18);
  v19 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 344) = swift_task_alloc(v19);
  *(_QWORD *)(v7 + 352) = swift_task_alloc(v19);
  v20 = type metadata accessor for URL(0);
  *(_QWORD *)(v7 + 360) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v7 + 368) = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 376) = swift_task_alloc(v22);
  *(_QWORD *)(v7 + 384) = swift_task_alloc(v22);
  v23 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04F8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v7 + 392) = swift_task_alloc(v23);
  *(_QWORD *)(v7 + 400) = swift_task_alloc(v23);
  return swift_task_switch(sub_1004DFE40, 0, 0);
}

void sub_1004DFE40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __n128 v9;
  int64_t v10;
  uint64_t *v11;
  char **v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t inited;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  id v119;
  _QWORD *v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v4 = *(_QWORD *)(v0 + 200);
  if ((*(_BYTE *)(v0 + 524) & 1) != 0)
  {
    v3 = v0 + 16;
    v11 = (uint64_t *)(v0 + 88);
    v1 = (uint64_t *)(v0 + 112);
    v2 = v0 + 168;
    swift_errorRetain(*(_QWORD *)(v0 + 200));
    sub_1004DED08((uint64_t)_swiftEmptyArrayStorage);
    if (qword_1013DD6B8 != -1)
      goto LABEL_71;
    goto LABEL_59;
  }
  v121 = (_QWORD *)(v0 + 176);
  v122 = (_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 192) = _swiftEmptyArrayStorage;
  v5 = *(_BYTE *)(v4 + 32);
  *(_BYTE *)(v0 + 525) = v5;
  v6 = 1 << v5;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v0 + 408) = CKFreeformShareType;
  *(_DWORD *)(v0 + 520) = enum case for Calendar.Component.day(_:);
  v9 = swift_bridgeObjectRetain(v4);
  v4 = 0;
  v10 = 0;
  v11 = &qword_1013E0508;
  v12 = &selRef_p_didReceiveMemoryWarning_;
  while (1)
  {
    if (v8)
    {
      v15 = (v8 - 1) & v8;
      v3 = __clz(__rbit64(v8)) | (v10 << 6);
      v16 = *(_QWORD *)(v0 + 200);
LABEL_10:
      v17 = *(_QWORD *)(v0 + 392);
      (*(void (**)(uint64_t, unint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 368) + 16))(v17, *(_QWORD *)(v16 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 368) + 72) * v3, *(_QWORD *)(v0 + 360), v9);
      v18 = *(_QWORD *)(v16 + 56);
      v19 = sub_1004B804C(v11);
      v20 = *(void **)(v18 + 8 * v3);
      *(_QWORD *)(v17 + *(int *)(v19 + 48)) = v20;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 0, 1, v19);
      v21 = v20;
      goto LABEL_29;
    }
    v22 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_70;
    v23 = (unint64_t)((1 << *(_BYTE *)(v0 + 525)) + 63) >> 6;
    if (v22 < v23)
    {
      v16 = *(_QWORD *)(v0 + 200);
      v24 = v16 + 64;
      v25 = *(_QWORD *)(v16 + 64 + 8 * v22);
      if (v25)
        goto LABEL_14;
      v26 = v10 + 2;
      ++v10;
      if (v22 + 1 < v23)
      {
        v25 = *(_QWORD *)(v24 + 8 * v26);
        if (v25)
          goto LABEL_17;
        v10 = v22 + 1;
        if (v22 + 2 < v23)
        {
          v25 = *(_QWORD *)(v24 + 8 * (v22 + 2));
          if (v25)
          {
            v22 += 2;
LABEL_14:
            v15 = (v25 - 1) & v25;
            v3 = __clz(__rbit64(v25)) + (v22 << 6);
            v10 = v22;
            goto LABEL_10;
          }
          v26 = v22 + 3;
          v10 = v22 + 2;
          if (v22 + 3 < v23)
          {
            v25 = *(_QWORD *)(v24 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                v22 = v26 + 1;
                if (__OFADD__(v26, 1))
                  break;
                if (v22 >= v23)
                {
                  v10 = v23 - 1;
                  goto LABEL_28;
                }
                v25 = *(_QWORD *)(v24 + 8 * v22);
                ++v26;
                if (v25)
                  goto LABEL_14;
              }
              __break(1u);
              return;
            }
LABEL_17:
            v22 = v26;
            goto LABEL_14;
          }
        }
      }
    }
LABEL_28:
    v27 = *(_QWORD *)(v0 + 392);
    v28 = sub_1004B804C(v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    v15 = 0;
LABEL_29:
    *(_QWORD *)(v0 + 416) = v10;
    *(_QWORD *)(v0 + 424) = v15;
    v29 = *(_QWORD *)(v0 + 400);
    sub_1004E1EFC(*(_QWORD *)(v0 + 392), v29);
    v30 = sub_1004B804C(v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30) == 1)
    {
      swift_release(*(_QWORD *)(v0 + 200));
      sub_1004DED08(*(_QWORD *)(v0 + 192));
      goto LABEL_61;
    }
    v31 = *(_QWORD *)(v0 + 384);
    v32 = *(_QWORD *)(v0 + 368);
    v1 = *(uint64_t **)(v0 + 208);
    v33 = *(void **)(*(_QWORD *)(v0 + 400) + *(int *)(v30 + 48));
    *(_QWORD *)(v0 + 432) = v33;
    (*(void (**)(uint64_t))(v32 + 32))(v31);
    v2 = swift_task_alloc(32);
    *(_QWORD *)(v2 + 16) = v31;
    swift_bridgeObjectRetain(v1);
    v34 = (uint64_t)sub_100767A40(sub_1004E1F44, (_QWORD *)v2, (unint64_t)v1);
    *(_QWORD *)(v0 + 440) = v4;
    swift_task_dealloc(v2);
    if ((unint64_t)v34 >> 62)
    {
      if (v34 < 0)
        v76 = v34;
      else
        v76 = v34 & 0xFFFFFFFFFFFFFF8;
      if (!_CocoaArrayWrapper.endIndex.getter(v76))
      {
LABEL_6:
        v13 = *(_QWORD *)(v0 + 384);
        v1 = *(uint64_t **)(v0 + 360);
        v2 = *(_QWORD *)(v0 + 368);

        v14 = swift_bridgeObjectRelease(v34);
        (*(void (**)(uint64_t, uint64_t *, __n128))(v2 + 8))(v13, v1, v14);
        goto LABEL_7;
      }
    }
    else if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    if ((v34 & 0xC000000000000001) != 0)
    {
      v35 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v34);
      goto LABEL_35;
    }
    if (!*(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    v35 = (uint64_t *)*(id *)(v34 + 32);
LABEL_35:
    v1 = v35;
    *(_QWORD *)(v0 + 448) = v35;
    v36 = *(_QWORD *)(v0 + 352);
    v37 = *(_QWORD *)(v0 + 272);
    v38 = *(_QWORD *)(v0 + 280);
    v39 = objc_msgSend(v35, "timestamp", swift_bridgeObjectRelease(v34).n128_f64[0]);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v39);

    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v37);
    v40 = objc_msgSend(v33, v12[318]);
    v41 = objc_msgSend(v40, "values");

    v3 = sub_1004B804C((uint64_t *)&unk_1013E0510);
    v42 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v41, &type metadata for String, v3, &protocol witness table for String);

    v43 = static CKShare.SystemFieldKey.shareType.getter();
    v45 = v44;
    if (!*(_QWORD *)(v42 + 16) || (v46 = sub_100842E98(v43, v44), (v47 & 1) == 0))
    {
      swift_bridgeObjectRelease(v45);
      swift_bridgeObjectRelease(v42);
LABEL_40:
      v49 = 0;
      v50 = 0xE000000000000000;
      goto LABEL_41;
    }
    v48 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v46);
    swift_unknownObjectRetain(v48);
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v42);
    *v122 = v48;
    if ((swift_dynamicCast(v0 + 136, v122, v3, &type metadata for String, 6) & 1) == 0)
      goto LABEL_40;
    v49 = *(_QWORD *)(v0 + 136);
    v50 = *(_QWORD *)(v0 + 144);
LABEL_41:
    v125 = v4;
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v0 + 408));
    v53 = v51;
    if (v49 == v52 && v50 == v51)
    {
      swift_bridgeObjectRelease_n(v50, 2);
LABEL_45:
      v55 = v11;
      v56 = *(_QWORD *)(v0 + 312);
      v57 = *(_QWORD *)(v0 + 320);
      v58 = *(_QWORD *)(v0 + 304);
      v59 = objc_msgSend(v33, v12[318]);
      v60 = objc_msgSend(v59, "recordID");

      v61 = objc_msgSend(v60, "zoneID");
      sub_100B38068(v58);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v58, 1, v56) == 1)
      {
        v62 = *(_QWORD *)(v0 + 384);
        v63 = *(_QWORD *)(v0 + 360);
        v3 = *(_QWORD *)(v0 + 368);
        v2 = *(_QWORD *)(v0 + 304);
        sub_1004CB800(*(_QWORD *)(v0 + 352), &qword_1013E04F0);

        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v62, v63);
        v64 = v2;
        v65 = &qword_1013E0270;
      }
      else
      {
        v66 = *(_QWORD *)(v0 + 344);
        v67 = *(_QWORD *)(v0 + 352);
        v68 = *(_QWORD *)(v0 + 272);
        v69 = *(_QWORD *)(v0 + 280);
        sub_1004DB5FC(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 336));
        sub_1004E1F60(v67, v66);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v66, 1, v68) != 1)
        {
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 32))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 272));
          *(_QWORD *)(v0 + 456) = objc_msgSend(v33, "participantStatus");
          v99 = objc_msgSend(v33, "share");
          v100 = objc_msgSend(v99, "values");

          v101 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v100, &type metadata for String, v3, &protocol witness table for String);
          v102 = static CKShare.SystemFieldKey.title.getter();
          v104 = v103;
          if (*(_QWORD *)(v101 + 16) && (v105 = sub_100842E98(v102, v103), (v106 & 1) != 0))
          {
            v107 = *(_QWORD *)(*(_QWORD *)(v101 + 56) + 8 * v105);
            swift_unknownObjectRetain(v107);
            swift_bridgeObjectRelease(v104);
            swift_bridgeObjectRelease(v101);
            *v121 = v107;
            if ((swift_dynamicCast(v0 + 152, v121, v3, &type metadata for String, 6) & 1) != 0)
            {
              v108 = *(_QWORD *)(v0 + 152);
              v109 = *(_QWORD *)(v0 + 160);
LABEL_68:
              *(_QWORD *)(v0 + 464) = v108;
              *(_QWORD *)(v0 + 472) = v109;
              v110 = objc_msgSend(v33, "share");
              v111 = objc_msgSend(v110, "participants");
              v112 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
              v113 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v111, v112);

              sub_1009B4804(v113);
              v115 = v114;
              v117 = v116;

              *(_QWORD *)&v118 = swift_bridgeObjectRelease(v113).n128_u64[0];
              *(_QWORD *)(v0 + 480) = v117;
              *(_QWORD *)(v0 + 488) = v115;
              v119 = objc_msgSend(v33, "share", v118);
              *(_QWORD *)(v0 + 496) = v119;
              v120 = (_QWORD *)swift_task_alloc(dword_1013E0524);
              *(_QWORD *)(v0 + 504) = v120;
              *v120 = v0;
              v120[1] = sub_1004E08C4;
              sub_1004E2350((uint64_t)v119);
              return;
            }
          }
          else
          {
            swift_bridgeObjectRelease(v104);
            swift_bridgeObjectRelease(v101);
          }
          v108 = 0;
          v109 = 0xE000000000000000;
          goto LABEL_68;
        }
        v70 = *(_QWORD *)(v0 + 384);
        v71 = *(_QWORD *)(v0 + 360);
        v72 = *(_QWORD *)(v0 + 368);
        v3 = *(_QWORD *)(v0 + 344);
        v2 = *(_QWORD *)(v0 + 352);
        v73 = *(_QWORD *)(v0 + 336);

        sub_1004BBB8C(v73);
        v1 = &qword_1013E04F0;
        sub_1004CB800(v2, &qword_1013E04F0);
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
        v64 = v3;
        v65 = &qword_1013E04F0;
      }
      sub_1004CB800(v64, v65);
      v12 = &selRef_p_didReceiveMemoryWarning_;
      v11 = v55;
      goto LABEL_51;
    }
    v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v50, v52, v51, 0);
    swift_bridgeObjectRelease(v53);
    swift_bridgeObjectRelease(v50);
    if ((v54 & 1) != 0)
      goto LABEL_45;
    v74 = *(_QWORD *)(v0 + 384);
    v75 = *(_QWORD *)(v0 + 360);
    v2 = *(_QWORD *)(v0 + 368);
    sub_1004CB800(*(_QWORD *)(v0 + 352), &qword_1013E04F0);

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v74, v75);
LABEL_51:
    v4 = v125;
LABEL_7:
    v10 = *(_QWORD *)(v0 + 416);
    v8 = *(_QWORD *)(v0 + 424);
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  swift_once(&qword_1013DD6B8, sub_100A00A6C);
LABEL_59:
  v77 = *(_QWORD *)(v0 + 200);
  swift_beginAccess(&static OS_os_log.crlDefault, v11, 0, 0);
  v78 = (void *)static OS_os_log.crlDefault;
  v79 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v79, v3);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v4, v2, v1);
  v81 = *(_QWORD *)(v0 + 120);
  v82 = *(_QWORD *)(v0 + 128);
  v83 = v78;
  v84 = Error.localizedDescription.getter(v81, v82);
  v86 = v85;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v87 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v87;
  *(_QWORD *)(inited + 32) = v84;
  *(_QWORD *)(inited + 40) = v86;
  v88 = static os_log_type_t.error.getter(v87);
  sub_100A06EBC((uint64_t)v83, &_mh_execute_header, v88, "Unable to retrieve metadata for highlights. Error: ", 51, 2, inited);
  swift_setDeallocating(inited);
  v89 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v89);

  sub_1004E1E54(v77, 1);
LABEL_61:
  v90 = *(_QWORD *)(v0 + 392);
  v92 = *(_QWORD *)(v0 + 376);
  v91 = *(_QWORD *)(v0 + 384);
  v94 = *(_QWORD *)(v0 + 344);
  v93 = *(_QWORD *)(v0 + 352);
  v96 = *(_QWORD *)(v0 + 328);
  v95 = *(_QWORD *)(v0 + 336);
  v98 = *(_QWORD *)(v0 + 296);
  v97 = *(_QWORD *)(v0 + 304);
  v123 = *(_QWORD *)(v0 + 288);
  v124 = *(_QWORD *)(v0 + 264);
  v126 = *(_QWORD *)(v0 + 240);
  swift_task_dealloc(*(_QWORD *)(v0 + 400));
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  swift_task_dealloc(v94);
  swift_task_dealloc(v95);
  swift_task_dealloc(v96);
  swift_task_dealloc(v97);
  swift_task_dealloc(v98);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v126);
  (*(void (**)(void))(v0 + 8))();
}

uint64_t sub_1004E08C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v3 = *(void **)(*(_QWORD *)v1 + 496);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  *(_QWORD *)(*(_QWORD *)v1 + 512) = a1;
  swift_task_dealloc(v2);

  return swift_task_switch(sub_1004E0924, 0, 0);
}

uint64_t sub_1004E0924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  void *v42;
  void *v43;
  unint64_t v44;
  void *v45;
  unint64_t v46;
  void *v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char **v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  int64_t v72;
  uint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  double v153;
  id v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  void *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t, __n128);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;

  v2 = *(unsigned int *)(v1 + 520);
  v3 = *(_QWORD *)(v1 + 288);
  v4 = *(_QWORD *)(v1 + 296);
  v161 = *(_QWORD *)(v1 + 280);
  v5 = *(_QWORD *)(v1 + 240);
  v164 = *(_QWORD *)(v1 + 232);
  v167 = *(_QWORD *)(v1 + 272);
  v170 = *(_QWORD *)(v1 + 224);
  static Calendar.current.getter(a1);
  v6 = sub_1004B804C(&qword_1013E0528);
  v7 = type metadata accessor for Calendar.Component(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v6, v10 + *(_QWORD *)(v8 + 72), v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  v12 = v11 + v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(v12, v2, v7);
  v13 = sub_1004B55E4(v11);
  swift_setDeallocating(v11);
  swift_arrayDestroy(v12, 1, v7);
  swift_deallocClassInstance(v11, 32, 7);
  static Date.now.getter(v14);
  Calendar.dateComponents(_:from:to:)(v13, v4, v3);
  v15 = swift_bridgeObjectRelease(v13);
  v16 = v167;
  v168 = *(void (**)(uint64_t, uint64_t, __n128))(v161 + 8);
  v168(v3, v16, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v164 + 8))(v5, v170);
  v18 = DateComponents.day.getter(v17);
  if ((v19 & 1) != 0)
  {
    v40 = *(void **)(v1 + 512);
    v41 = *(_QWORD *)(v1 + 480);
    v42 = *(void **)(v1 + 448);
    v43 = *(void **)(v1 + 432);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 472));

    if (v41)
      v44 = v41;
    else
      v44 = 0xE000000000000000;
    swift_bridgeObjectRelease(v44);
    v45 = v40;
    v36 = *(_QWORD *)(v1 + 440);
    goto LABEL_23;
  }
  v20 = *(void **)(v1 + 512);
  if (v18 > 29)
  {
    v46 = *(_QWORD *)(v1 + 480);
    v47 = *(void **)(v1 + 448);
    v48 = *(void **)(v1 + 432);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 472));

    if (v46)
      v49 = v46;
    else
      v49 = 0xE000000000000000;
    swift_bridgeObjectRelease(v49);
    v36 = *(_QWORD *)(v1 + 440);
    v45 = v20;
    goto LABEL_23;
  }
  v22 = *(_QWORD *)(v1 + 480);
  v21 = *(_QWORD *)(v1 + 488);
  v162 = *(_QWORD *)(v1 + 464);
  v165 = *(_QWORD *)(v1 + 472);
  v159 = *(void **)(v1 + 448);
  v171 = *(_QWORD *)(v1 + 440);
  v23 = *(_QWORD *)(v1 + 376);
  v25 = *(_QWORD *)(v1 + 328);
  v24 = *(_QWORD *)(v1 + 336);
  v27 = *(_QWORD *)(v1 + 288);
  v26 = *(_QWORD *)(v1 + 296);
  v158 = *(_QWORD *)(v1 + 456) == 2;
  v28 = *(_QWORD *)(v1 + 272);
  v29 = *(_QWORD *)(v1 + 280);
  if (!v22)
    v21 = 0;
  v157 = v21;
  if (v22)
    v30 = *(_QWORD *)(v1 + 480);
  else
    v30 = 0xE000000000000000;
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v1 + 368) + 16))(v23, *(_QWORD *)(v1 + 384), *(_QWORD *)(v1 + 360));
  sub_1004E1B3C(v24, v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v26, v28);
  v31 = objc_allocWithZone((Class)type metadata accessor for CRLSharedHighlight(0));
  v32 = v20;
  v33 = sub_1004DDEF0((uint64_t)v159, v23, v162, v165, v25, v27, v158, v157, v30, (uint64_t)v20);
  v34 = *(_QWORD *)(v1 + 192);
  v35 = (char *)v33;
  swift_bridgeObjectRetain(v34);
  v36 = v171;
  v38 = (uint64_t)sub_1004E1FA8(v37, v35);
  swift_bridgeObjectRelease(v34);

  if ((unint64_t)v38 >> 62)
    goto LABEL_86;
  v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
  swift_bridgeObjectRelease(v38);
  if (v39)
  {

    goto LABEL_22;
  }
  v35 = v35;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
  v51 = *(_QWORD *)((*(_QWORD *)(v1 + 192) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v50 = *(_QWORD *)((*(_QWORD *)(v1 + 192) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v51 >= v50 >> 1)
    goto LABEL_91;
  while (1)
  {
    v52 = *(void **)(v1 + 448);
    v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v35);
    specialized Array._endMutation()(v53);

LABEL_22:
    v45 = *(void **)(v1 + 432);
LABEL_23:
    v160 = (_QWORD *)(v1 + 176);
    v172 = (_QWORD *)(v1 + 184);
    v38 = *(_QWORD *)(v1 + 368);
    v163 = *(_QWORD *)(v1 + 360);
    v166 = *(_QWORD *)(v1 + 384);
    v54 = *(_QWORD *)(v1 + 352);
    v51 = *(_QWORD *)(v1 + 336);
    v55 = *(_QWORD *)(v1 + 296);
    v57 = *(_QWORD *)(v1 + 264);
    v56 = *(_QWORD *)(v1 + 272);
    v58 = *(_QWORD *)(v1 + 248);
    v32 = *(uint64_t **)(v1 + 256);

    ((void (*)(uint64_t, uint64_t))v32[1])(v57, v58);
    ((void (*)(uint64_t, uint64_t))v168)(v55, v56);
    sub_1004BBB8C(v51);
    sub_1004CB800(v54, &qword_1013E04F0);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v166, v163);
    v59 = &selRef_p_didReceiveMemoryWarning_;
    v35 = *(char **)(v1 + 416);
    v60 = *(_QWORD *)(v1 + 424);
    if (v60)
      break;
LABEL_33:
    v50 = (unint64_t)(v35 + 1);
    if (__OFADD__(v35, 1))
    {
LABEL_85:
      __break(1u);
LABEL_86:
      if (v38 < 0)
        v156 = v38;
      else
        v156 = v38 & 0xFFFFFFFFFFFFFF8;
      v39 = _CocoaArrayWrapper.endIndex.getter(v156);
      goto LABEL_10;
    }
    v72 = (unint64_t)((1 << *(_BYTE *)(v1 + 525)) + 63) >> 6;
    if ((uint64_t)v50 >= v72)
      goto LABEL_50;
    v32 = *(uint64_t **)(v1 + 200);
    v73 = v32 + 8;
    v74 = v32[v50 + 8];
    if (v74)
      goto LABEL_36;
    v75 = (unint64_t)(v35 + 2);
    ++v35;
    if ((uint64_t)(v50 + 1) >= v72)
      goto LABEL_50;
    v74 = v73[v75];
    if (v74)
    {
LABEL_39:
      v50 = v75;
LABEL_36:
      v64 = (v74 - 1) & v74;
      v65 = __clz(__rbit64(v74)) + (v50 << 6);
      v35 = (char *)v50;
      goto LABEL_27;
    }
    v35 = (char *)(v50 + 1);
    if ((uint64_t)(v50 + 2) >= v72)
      goto LABEL_50;
    v74 = v73[v50 + 2];
    if (v74)
    {
      v50 += 2;
      goto LABEL_36;
    }
    v75 = v50 + 3;
    v35 = (char *)(v50 + 2);
    if ((uint64_t)(v50 + 3) >= v72)
    {
LABEL_50:
      v76 = *(_QWORD *)(v1 + 392);
      v77 = sub_1004B804C(&qword_1013E0508);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 1, 1, v77);
      v64 = 0;
      goto LABEL_51;
    }
    v74 = v73[v75];
    if (v74)
      goto LABEL_39;
    while (1)
    {
      v50 = v75 + 1;
      if (__OFADD__(v75, 1))
        break;
      if ((uint64_t)v50 >= v72)
      {
        v35 = (char *)(v72 - 1);
        goto LABEL_50;
      }
      v74 = v73[v50];
      ++v75;
      if (v74)
        goto LABEL_36;
    }
    __break(1u);
LABEL_91:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
  }
  while (2)
  {
    while (2)
    {
      v64 = (v60 - 1) & v60;
      v65 = __clz(__rbit64(v60)) | ((_QWORD)v35 << 6);
      v32 = *(uint64_t **)(v1 + 200);
LABEL_27:
      v66 = *(_QWORD *)(v1 + 392);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v1 + 368) + 16))(v66, v32[6] + *(_QWORD *)(*(_QWORD *)(v1 + 368) + 72) * v65, *(_QWORD *)(v1 + 360));
      v67 = v32[7];
      v68 = sub_1004B804C(&qword_1013E0508);
      v69 = *(void **)(v67 + 8 * v65);
      *(_QWORD *)(v66 + *(int *)(v68 + 48)) = v69;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v66, 0, 1, v68);
      v70 = v69;
LABEL_51:
      *(_QWORD *)(v1 + 416) = v35;
      *(_QWORD *)(v1 + 424) = v64;
      v78 = *(_QWORD *)(v1 + 400);
      sub_1004E1EFC(*(_QWORD *)(v1 + 392), v78);
      v79 = sub_1004B804C(&qword_1013E0508);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v78, 1, v79) == 1)
      {
        swift_release(*(_QWORD *)(v1 + 200));
        sub_1004DED08(*(_QWORD *)(v1 + 192));
        v124 = *(_QWORD *)(v1 + 392);
        v126 = *(_QWORD *)(v1 + 376);
        v125 = *(_QWORD *)(v1 + 384);
        v128 = *(_QWORD *)(v1 + 344);
        v127 = *(_QWORD *)(v1 + 352);
        v130 = *(_QWORD *)(v1 + 328);
        v129 = *(_QWORD *)(v1 + 336);
        v132 = *(_QWORD *)(v1 + 296);
        v131 = *(_QWORD *)(v1 + 304);
        v169 = *(_QWORD *)(v1 + 288);
        v173 = *(_QWORD *)(v1 + 264);
        v174 = *(_QWORD *)(v1 + 240);
        swift_task_dealloc(*(_QWORD *)(v1 + 400));
        swift_task_dealloc(v124);
        swift_task_dealloc(v125);
        swift_task_dealloc(v126);
        swift_task_dealloc(v127);
        swift_task_dealloc(v128);
        swift_task_dealloc(v129);
        swift_task_dealloc(v130);
        swift_task_dealloc(v131);
        swift_task_dealloc(v132);
        swift_task_dealloc(v169);
        swift_task_dealloc(v173);
        swift_task_dealloc(v174);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }
      v35 = *(char **)(v1 + 384);
      v80 = *(_QWORD *)(v1 + 368);
      v81 = *(_QWORD *)(v1 + 208);
      v32 = *(uint64_t **)(*(_QWORD *)(v1 + 400) + *(int *)(v79 + 48));
      *(_QWORD *)(v1 + 432) = v32;
      (*(void (**)(char *))(v80 + 32))(v35);
      v82 = (_QWORD *)swift_task_alloc(32);
      v82[2] = v35;
      swift_bridgeObjectRetain(v81);
      v38 = (uint64_t)sub_100767A40(sub_1004E1F44, v82, v81);
      *(_QWORD *)(v1 + 440) = v36;
      swift_task_dealloc(v82);
      if ((unint64_t)v38 >> 62)
      {
        if (v38 < 0)
          v71 = v38;
        else
          v71 = v38 & 0xFFFFFFFFFFFFFF8;
        if (!_CocoaArrayWrapper.endIndex.getter(v71))
          goto LABEL_25;
      }
      else if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_25:
        v61 = *(_QWORD *)(v1 + 384);
        v51 = *(_QWORD *)(v1 + 360);
        v62 = *(_QWORD *)(v1 + 368);

        v63 = swift_bridgeObjectRelease(v38);
        (*(void (**)(uint64_t, unint64_t, __n128))(v62 + 8))(v61, v51, v63);
        v35 = *(char **)(v1 + 416);
        v60 = *(_QWORD *)(v1 + 424);
        if (!v60)
          goto LABEL_33;
        continue;
      }
      break;
    }
    if ((v38 & 0xC000000000000001) != 0)
    {
      v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
    }
    else
    {
      if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_85;
      }
      v83 = *(id *)(v38 + 32);
    }
    v84 = v83;
    *(_QWORD *)(v1 + 448) = v83;
    v85 = *(_QWORD *)(v1 + 352);
    v86 = *(_QWORD *)(v1 + 272);
    v87 = *(_QWORD *)(v1 + 280);
    v88 = objc_msgSend(v83, "timestamp", swift_bridgeObjectRelease(v38).n128_f64[0]);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v88);

    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v85, 0, 1, v86);
    v89 = objc_msgSend(v32, v59[318]);
    v90 = objc_msgSend(v89, "values");

    v91 = sub_1004B804C((uint64_t *)&unk_1013E0510);
    v92 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v90, &type metadata for String, v91, &protocol witness table for String);

    v93 = static CKShare.SystemFieldKey.shareType.getter();
    v95 = v94;
    if (!*(_QWORD *)(v92 + 16) || (v96 = sub_100842E98(v93, v94), (v97 & 1) == 0))
    {
      swift_bridgeObjectRelease(v95);
      swift_bridgeObjectRelease(v92);
      goto LABEL_62;
    }
    v98 = *(_QWORD *)(*(_QWORD *)(v92 + 56) + 8 * v96);
    swift_unknownObjectRetain(v98);
    swift_bridgeObjectRelease(v95);
    swift_bridgeObjectRelease(v92);
    *v172 = v98;
    if ((swift_dynamicCast(v1 + 136, v172, v91, &type metadata for String, 6) & 1) == 0)
    {
LABEL_62:
      v100 = 0;
      v99 = 0xE000000000000000;
      goto LABEL_63;
    }
    v100 = *(_QWORD *)(v1 + 136);
    v99 = *(_QWORD *)(v1 + 144);
LABEL_63:
    v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v1 + 408));
    v103 = v101;
    if (v100 == v102 && v99 == v101)
    {
      swift_bridgeObjectRelease_n(v99, 2);
      goto LABEL_67;
    }
    v104 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v99, v102, v101, 0);
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v99);
    if ((v104 & 1) == 0)
    {
      v38 = *(_QWORD *)(v1 + 384);
      v51 = *(_QWORD *)(v1 + 360);
      v123 = *(_QWORD *)(v1 + 368);
      sub_1004CB800(*(_QWORD *)(v1 + 352), &qword_1013E04F0);

      (*(void (**)(uint64_t, unint64_t))(v123 + 8))(v38, v51);
      goto LABEL_73;
    }
LABEL_67:
    v105 = *(_QWORD *)(v1 + 312);
    v106 = *(_QWORD *)(v1 + 320);
    v107 = *(_QWORD *)(v1 + 304);
    v108 = objc_msgSend(v32, v59[318]);
    v109 = objc_msgSend(v108, "recordID");

    v110 = objc_msgSend(v109, "zoneID");
    sub_100B38068(v107);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v107, 1, v105) == 1)
    {
      v38 = *(_QWORD *)(v1 + 384);
      v51 = *(_QWORD *)(v1 + 360);
      v111 = *(_QWORD *)(v1 + 368);
      v112 = *(_QWORD *)(v1 + 304);
      sub_1004CB800(*(_QWORD *)(v1 + 352), &qword_1013E04F0);

      (*(void (**)(uint64_t, unint64_t))(v111 + 8))(v38, v51);
      v113 = v112;
      v114 = &qword_1013E0270;
      goto LABEL_71;
    }
    v116 = *(_QWORD *)(v1 + 344);
    v115 = *(_QWORD *)(v1 + 352);
    v117 = *(_QWORD *)(v1 + 272);
    v118 = *(_QWORD *)(v1 + 280);
    sub_1004DB5FC(*(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 336));
    sub_1004E1F60(v115, v116);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117) == 1)
    {
      v38 = *(_QWORD *)(v1 + 384);
      v51 = *(_QWORD *)(v1 + 360);
      v119 = *(_QWORD *)(v1 + 368);
      v121 = *(_QWORD *)(v1 + 344);
      v120 = *(_QWORD *)(v1 + 352);
      v122 = *(_QWORD *)(v1 + 336);

      sub_1004BBB8C(v122);
      v32 = &qword_1013E04F0;
      sub_1004CB800(v120, &qword_1013E04F0);
      (*(void (**)(uint64_t, unint64_t))(v119 + 8))(v38, v51);
      v113 = v121;
      v114 = &qword_1013E04F0;
LABEL_71:
      sub_1004CB800(v113, v114);
      v59 = &selRef_p_didReceiveMemoryWarning_;
LABEL_73:
      v35 = *(char **)(v1 + 416);
      v60 = *(_QWORD *)(v1 + 424);
      if (!v60)
        goto LABEL_33;
      continue;
    }
    break;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 280) + 32))(*(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 272));
  *(_QWORD *)(v1 + 456) = objc_msgSend(v32, "participantStatus");
  v134 = objc_msgSend(v32, "share");
  v135 = objc_msgSend(v134, "values");

  v136 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v135, &type metadata for String, v91, &protocol witness table for String);
  v137 = static CKShare.SystemFieldKey.title.getter();
  v139 = v138;
  if (*(_QWORD *)(v136 + 16) && (v140 = sub_100842E98(v137, v138), (v141 & 1) != 0))
  {
    v142 = *(_QWORD *)(*(_QWORD *)(v136 + 56) + 8 * v140);
    swift_unknownObjectRetain(v142);
    swift_bridgeObjectRelease(v139);
    swift_bridgeObjectRelease(v136);
    *v160 = v142;
    if ((swift_dynamicCast(v1 + 152, v160, v91, &type metadata for String, 6) & 1) != 0)
    {
      v143 = *(_QWORD *)(v1 + 152);
      v144 = *(_QWORD *)(v1 + 160);
      goto LABEL_83;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v139);
    swift_bridgeObjectRelease(v136);
  }
  v143 = 0;
  v144 = 0xE000000000000000;
LABEL_83:
  *(_QWORD *)(v1 + 464) = v143;
  *(_QWORD *)(v1 + 472) = v144;
  v145 = objc_msgSend(v32, "share");
  v146 = objc_msgSend(v145, "participants");
  v147 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
  v148 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v146, v147);

  sub_1009B4804(v148);
  v150 = v149;
  v152 = v151;

  *(_QWORD *)&v153 = swift_bridgeObjectRelease(v148).n128_u64[0];
  *(_QWORD *)(v1 + 480) = v152;
  *(_QWORD *)(v1 + 488) = v150;
  v154 = objc_msgSend(v32, "share", v153);
  *(_QWORD *)(v1 + 496) = v154;
  v155 = (_QWORD *)swift_task_alloc(dword_1013E0524);
  *(_QWORD *)(v1 + 504) = v155;
  *v155 = v1;
  v155[1] = sub_1004E08C4;
  return sub_1004E2350((uint64_t)v154);
}

uint64_t sub_1004E1584(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*a1, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(a2) = static URL.== infix(_:_:)(v7, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return a2 & 1;
}

void sub_1004E1644(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE v17[24];

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((a3 & 1) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    swift_beginAccess(a4 + 16, v17, 33, 0);
    v12 = a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a4 + 16));
    v16 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(a4 + 16) = 0x8000000000000000;
    sub_100825FA0((uint64_t)v12, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
    v14 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(a4 + 16) = v16;
    v15 = swift_bridgeObjectRelease(v14);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v9 + 8))(v11, v8, v15);
    swift_endAccess(v17);
    sub_1004E1E08(a2, 0);
  }
}

void sub_1004E1760(uint64_t a1, char a2, void (*a3)(__n128), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  __n128 v8;
  _BYTE v10[24];

  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    ((void (*)(uint64_t, uint64_t))a3)(a1, 1);
    sub_1004E1DFC(a1, 1);
  }
  else
  {
    swift_beginAccess(a5 + 16, v10, 0, 0);
    v7 = *(_QWORD *)(a5 + 16);
    v8 = swift_bridgeObjectRetain(v7);
    a3(v8);
    swift_bridgeObjectRelease(v7);
  }
}

double sub_1004E17F8(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double result;
  _BYTE v22[72];
  _BYTE v23[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v23, 0, 0);
  v6 = (void *)static OS_os_log.crlDefault;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v7, v22);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v9 = v6;
  v10 = objc_msgSend(a1, "highlights");
  v11 = sub_1004B8930(0, &qword_1013E0498, SWHighlight_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  *(_QWORD *)(inited + 56) = sub_1004B804C(&qword_1013E04A0);
  *(_QWORD *)(inited + 64) = sub_1004E1C9C();
  *(_QWORD *)(inited + 32) = v12;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v14, "Highlights changed. New highlights: %@", 38, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  type metadata accessor for MainActor(0);
  v17 = v1;
  v18 = static MainActor.shared.getter(v17);
  v19 = (_QWORD *)swift_allocObject(&unk_1012689D0, 40, 7);
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v17;
  v20 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013E04C0, (uint64_t)v19);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_1004E1A14()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1013E04CC);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1004E1A78;
  return sub_1004DF510();
}

uint64_t sub_1004E1A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1004E2BA4, v2, v3);
}

uint64_t sub_1004E1B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1004E1B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1)
         : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if ((static NSObject.== infix(_:_:)(v6, a2) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1004E1C9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E04A8;
  if (!qword_1013E04A8)
  {
    v1 = sub_1004CB6A4(&qword_1013E04A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E04A8);
  }
  return result;
}

uint64_t sub_1004E1CEC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013E04BC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_1004E1A14();
}

uint64_t sub_1004E1D58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1004E1D84(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1004DFB8C(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1004E1D90()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004E1DB4(uint64_t a1, void *a2, char a3)
{
  uint64_t v3;

  sub_1004E1644(a1, a2, a3 & 1, v3);
}

uint64_t sub_1004E1DC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004E1DEC(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_1004E1760(a1, a2 & 1, *(void (**)(__n128))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1004E1DFC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_errorRelease();
  return result;
}

void sub_1004E1E08(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease();
  else

}

uint64_t sub_1004E1E14()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1004E1E54(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004E1E54(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease();
  else
    return swift_bridgeObjectRelease(a1);
}

uint64_t sub_1004E1E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1013E04DC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1004DFC7C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1004E1EF0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRetain();
  else
    return swift_bridgeObjectRetain(a1);
}

uint64_t sub_1004E1EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E1F44(id *a1)
{
  uint64_t v1;

  return sub_1004E1584(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1004E1F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1004E1FA8(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;

  v3 = v2;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v28 - v10;
  v32 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_24;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v12)
  {
    while (1)
    {
      v28 = v3;
      v29 = v12;
      v13 = 0;
      v14 = (uint64_t)&a2[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier];
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
      v31 = a1 & 0xC000000000000001;
      while (v31)
      {
        v15 = a1;
        v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
LABEL_10:
        v17 = v16;
        a1 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_23;
        a2 = &v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier];
        v3 = static UUID.== infix(_:_:)(&v16[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier]);
        sub_1004E1B3C((uint64_t)a2, (uint64_t)v11);
        sub_1004E1B3C(v14, (uint64_t)v9);
        if ((v3 & 1) != 0)
        {
          v18 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          v19 = *(_QWORD *)&v11[v18];
          v20 = *(_QWORD *)&v11[v18 + 8];
          v21 = &v9[v18];
          v22 = *((_QWORD *)v21 + 1);
          v23 = v19 == *(_QWORD *)v21 && v20 == v22;
          if (v23)
          {
            sub_1004BBB8C((uint64_t)v9);
            v24 = sub_1004BBB8C((uint64_t)v11);
LABEL_19:
            a2 = (char *)&v32;
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
            v3 = v32[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v3);
            v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v3, v17);
            specialized ContiguousArray._endMutation()(v25);
            goto LABEL_6;
          }
          v3 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, *(_QWORD *)v21, v22, 0);
          sub_1004BBB8C((uint64_t)v9);
          v24 = sub_1004BBB8C((uint64_t)v11);
          if ((v3 & 1) != 0)
            goto LABEL_19;
        }
        else
        {
          sub_1004BBB8C((uint64_t)v9);
          sub_1004BBB8C((uint64_t)v11);
        }

LABEL_6:
        ++v13;
        v23 = a1 == v29;
        a1 = v15;
        if (v23)
          return v32;
      }
      if (v13 < *(_QWORD *)(v30 + 16))
        break;
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      if (a1 < 0)
        v27 = a1;
      else
        v27 = a1 & 0xFFFFFFFFFFFFFF8;
      v12 = _CocoaArrayWrapper.endIndex.getter(v27);
      if (!v12)
        return _swiftEmptyArrayStorage;
    }
    v15 = a1;
    v16 = (char *)*(id *)(a1 + 8 * v13 + 32);
    goto LABEL_10;
  }
  return _swiftEmptyArrayStorage;
}

double sub_1004E21EC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  _BYTE v14[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v14, 0, 0);
  v4 = (id)static OS_os_log.crlDefault;
  v6 = static os_log_type_t.default.getter(v5);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "iCloud status changed. Updating highlights.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v0;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_101268AC0, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  v11 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013E0550, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1004E2350(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[5] = a1;
  v2 = sub_1004B804C(&qword_1013E04D0);
  v1[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v1[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[8] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v5);
  v1[10] = swift_task_alloc(v5);
  v6 = type metadata accessor for MainActor(0);
  v1[11] = v6;
  v1[12] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[13] = v7;
  v1[14] = v8;
  return swift_task_switch(sub_1004E241C, v7, v8);
}

void sub_1004E241C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  Class isa;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKSharePreviewImageAssetKey);
  v3 = v2;
  v4 = CKRecord.subscript.getter(v1);
  *(_QWORD *)(v0 + 120) = v4;
  swift_bridgeObjectRelease(v3);
  if (!v4)
  {
LABEL_9:
    v24 = swift_release(*(_QWORD *)(v0 + 96));
    v25 = static CKShare.SystemFieldKey.thumbnailImageData.getter(v24);
    v27 = v26;
    v28 = (id)CKRecord.subscript.getter(v25);
    swift_bridgeObjectRelease(v27);
    if (v28)
    {
      *(_QWORD *)(v0 + 32) = v28;
      v29 = sub_1004B804C((uint64_t *)&unk_1013E0510);
      if ((swift_dynamicCast(v0 + 16, v0 + 32, v29, &type metadata for Data, 6) & 1) == 0)
      {
LABEL_14:
        v28 = 0;
        goto LABEL_15;
      }
      v30 = *(_QWORD *)(v0 + 16);
      v31 = *(_QWORD *)(v0 + 24);
      v32 = objc_allocWithZone((Class)CRLImage);
      isa = Data._bridgeToObjectiveC()().super.isa;
      v28 = objc_msgSend(v32, "initWithData:", isa);
      sub_1004BBBC8(v30, v31);

    }
LABEL_15:
    v36 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    (*(void (**)(id))(v0 + 8))(v28);
    return;
  }
  v5 = objc_opt_self(CKAsset);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
  {
    swift_unknownObjectRelease(v4);
    goto LABEL_9;
  }
  v7 = objc_msgSend(v6, "fileURL");
  if (!v7)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 56))(*(_QWORD *)(v0 + 48), 1, 1, *(_QWORD *)(v0 + 56));
    goto LABEL_13;
  }
  v8 = v7;
  v10 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v7);

  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v13(v12, v9, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v11) == 1)
  {
LABEL_13:
    v34 = *(_QWORD *)(v0 + 96);
    v35 = *(_QWORD *)(v0 + 48);
    swift_unknownObjectRelease(v4);
    swift_release(v34);
    sub_1004CB800(v35, &qword_1013E04D0);
    goto LABEL_14;
  }
  v13(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  v14 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v15 = objc_msgSend(v14, "delegate");

  if (v15)
  {
    v16 = type metadata accessor for CRLiOSAppDelegate();
    v17 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v15, v16, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
    swift_retain(v17);
    swift_unknownObjectRelease(v15);
    if (v17)
    {
      v18 = *(_QWORD *)(v0 + 88);
      v19 = *(void **)(v17 + 16);
      *(_QWORD *)(v0 + 128) = v19;
      v20 = v19;
      swift_release(v17);
      *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v21);
      v22 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 144) = v22;
      *(_QWORD *)(v0 + 152) = v23;
      swift_task_switch(sub_1004E2738, v22, v23);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1004E2738()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = Data.init(contentsOf:options:)(v0[10], 0);
  v0[20] = v1;
  v0[21] = v2;
  v3 = v1;
  v4 = v2;
  v5 = type metadata accessor for CRLBoardPreviewImageCache.CacheEntry();
  swift_allocObject(v5, 129, 15);
  sub_1004BE310(v3, v4);
  v0[22] = sub_10058D294(v3, v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1013E43AC);
  v0[23] = v6;
  *v6 = v0;
  v6[1] = sub_1004E283C;
  return sub_10058D978();
}

uint64_t sub_1004E283C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 184);
  *(_QWORD *)(*(_QWORD *)v2 + 192) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[18];
    v7 = v4[19];
    v8 = sub_1004E2998;
  }
  else
  {
    v4[25] = a1;
    v6 = v4[18];
    v7 = v4[19];
    v8 = sub_1004E28B0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1004E28B0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = v0[21];
  v2 = v0[20];
  v4 = (void *)v0[16];
  v3 = v0[17];
  swift_release(v0[22]);
  sub_1004BBBC8(v2, v1);
  swift_release(v3);

  return swift_task_switch(sub_1004E2910, v0[13], v0[14]);
}

uint64_t sub_1004E2910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1004E2998()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = v0[21];
  v2 = v0[22];
  v3 = v0[20];
  swift_release(v0[17]);
  swift_release(v2);
  sub_1004BBBC8(v3, v1);
  v4 = (void *)v0[16];
  swift_errorRelease(v0[24]);

  return swift_task_switch(sub_1004E2A04, v0[13], v0[14]);
}

uint64_t sub_1004E2A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1004E2A84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E0534);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_1004DEAB4(a1, v4, v5, v6);
}

uint64_t sub_1004E2AF4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013E054C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return sub_1004DF40C();
}

uint64_t sub_1004E2B60()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004E2B84(uint64_t a1)
{
  uint64_t v1;

  sub_1004DE948(a1, v1);
}

uint64_t sub_1004E2B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004E2B9C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_1004E2CF8()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  void (*v3)(_QWORD, double);
  _QWORD *v4;
  objc_super v6;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  v1 = &v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *v1 = 0x3FF0000000000000;
  v1[1] = 0;
  v1[2] = 0;
  v1[3] = 0x3FF0000000000000;
  v1[4] = 0;
  v1[5] = 0;
  v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  v2 = objc_msgSendSuper2(&v6, "init");
  v3 = *(void (**)(_QWORD, double))((swift_isaMask & *v2) + 0x120);
  v4 = v2;
  v3(0, 1.0);

  return v4;
}

_QWORD *sub_1004E2DE8(_QWORD *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  _QWORD *v9;
  char *v10;
  uint64_t Strong;
  char *v13;
  _BYTE v14[32];
  objc_super v15;

  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  v3 = &v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *v3 = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v4 = a1[3];
  v5 = sub_1004BB5A4(a1, v4);
  v6 = _bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
  v7 = (objc_class *)type metadata accessor for CRLCanvasBackgroundLayer();
  v15.receiver = v1;
  v15.super_class = v7;
  v8 = objc_msgSendSuper2(&v15, "initWithLayer:", v6);
  swift_unknownObjectRelease(v6);
  sub_1004CB6E8((uint64_t)a1, (uint64_t)v14);
  v9 = v8;
  if (swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, v7, 6))
  {
    v10 = v13;
    Strong = swift_unknownObjectWeakLoadStrong(&v13[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate]);
    (*(void (**)(double))((swift_isaMask & *v9) + 0x120))(*(double *)&v10[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale]);

    swift_unknownObjectRelease(Strong);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(layer:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasBackgroundLayer.swift", 94, 2, 90, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(layer:)", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasBackgroundLayer.swift", 94, 2u, 90, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    (*(void (**)(_QWORD, double))((swift_isaMask & *v9) + 0x120))(0, 1.0);
  }

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v9;
}

_QWORD *sub_1004E3058(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  void (*v6)(_QWORD, double);
  _QWORD *v7;
  objc_super v9;

  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  v3 = &v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *v3 = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  v4 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);
  v5 = v4;
  if (v4)
  {
    v6 = *(void (**)(_QWORD, double))((swift_isaMask & *v4) + 0x120);
    v7 = v4;
    v6(0, 1.0);

  }
  return v5;
}

id sub_1004E3168(uint64_t a1, double a2)
{
  char *v2;

  swift_unknownObjectWeakAssign(&v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate], a1);
  *(double *)&v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = a2;
  if (v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] == 1)
    objc_msgSend(v2, "setNeedsLayout");
  return objc_msgSend(v2, "setMasksToBounds:", 1);
}

id sub_1004E325C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCanvasBackgroundLayer()
{
  return objc_opt_self(_TtC8Freeform24CRLCanvasBackgroundLayer);
}

_QWORD *sub_1004E32C4(uint64_t a1, double a2)
{
  _BYTE *v2;
  _QWORD *v5;
  _QWORD *v6;
  void (*v7)(uint64_t, double);
  _QWORD *v8;
  uint64_t v9;
  objc_super v11;

  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_canvasBackgroundDelegate], 0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  v5 = &v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *v5 = 0x3FF0000000000000;
  v5[1] = 0;
  v5[2] = 0;
  v5[3] = 0x3FF0000000000000;
  v5[4] = 0;
  v5[5] = 0;
  v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  v6 = objc_msgSendSuper2(&v11, "init");
  v7 = *(void (**)(uint64_t, double))((swift_isaMask & *v6) + 0x120);
  v8 = v6;
  v9 = swift_unknownObjectRetain(a1);
  v7(v9, a2);

  swift_unknownObjectRelease(a1);
  return v8;
}

void sub_1004E3478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  _QWORD *v6;
  void *v7;
  uint64_t v8;

  v1 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v2)
  {
    sub_100740DA4();
    v2 = *(_QWORD *)(v0 + v1);
  }
  if (v2)
    v3 = v2;
  else
    v3 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v4)
      goto LABEL_8;
LABEL_18:
    swift_bridgeObjectRelease(v3);
    return;
  }
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_18;
LABEL_8:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v3);
      else
        v6 = *(id *)(v3 + 8 * i + 32);
      v7 = v6;
      (*(void (**)(void))((swift_isaMask & *v6) + 0x178))();

    }
    goto LABEL_18;
  }
  __break(1u);
}

void sub_1004E36C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (uint64_t)_swiftEmptyArrayStorage;
  v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)(v0 + v2);
  }
  if (v3)
    v1 = v3;
  if (!((unint64_t)v1 >> 62))
  {
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_7;
LABEL_17:
    swift_bridgeObjectRelease(v1);
    return;
  }
  if (v1 < 0)
    v14 = v1;
  else
    v14 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v14);
  swift_bridgeObjectRelease(v1);
  if (!v4)
    goto LABEL_17;
LABEL_7:
  if (v4 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
      else
        v6 = *(id *)(v1 + 8 * v5 + 32);
      v7 = v6;
      v8 = type metadata accessor for CRLGroupItem(0);
      if (swift_dynamicCastClass(v7, v8))
      {
        v9 = sub_1004E36C0();
        sub_10061EAC8(v9);
      }
      v10 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v12 >= v11 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      ++v5;
      v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized Array._endMutation()(v13);

    }
    while (v4 != v5);
    goto LABEL_17;
  }
  __break(1u);
}

void sub_1004E3864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (uint64_t)_swiftEmptyArrayStorage;
  v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)(v0 + v2);
  }
  if (v3)
    v1 = v3;
  if (!((unint64_t)v1 >> 62))
  {
    v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_7;
LABEL_23:
    swift_bridgeObjectRelease(v1);
    return;
  }
  if (v1 < 0)
    v14 = v1;
  else
    v14 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v14);
  swift_bridgeObjectRelease(v1);
  if (!v4)
    goto LABEL_23;
LABEL_7:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
      else
        v7 = *(id *)(v1 + 8 * i + 32);
      v8 = v7;
      v9 = type metadata accessor for CRLGroupItem(0);
      if (swift_dynamicCastClass(v8, v9))
      {
        v6 = sub_1004E3864();
        sub_10061EAC8(v6);
      }
      else
      {
        v10 = v8;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
        specialized Array._endMutation()(v13);
      }

    }
    goto LABEL_23;
  }
  __break(1u);
}

Class sub_1004E3A0C(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  uint64_t v5;
  Class isa;

  v4 = a1;
  v5 = a3();

  type metadata accessor for CRLBoardItem(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  return isa;
}

void sub_1004E3A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (uint64_t)_swiftEmptyArrayStorage;
  v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)(v0 + v2);
  }
  if (v3)
    v1 = v3;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v16 = v1;
    else
      v16 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(v1);
    if (v4)
      goto LABEL_7;
LABEL_26:
    swift_bridgeObjectRelease(v1);
    return;
  }
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  if (!v4)
    goto LABEL_26;
LABEL_7:
  if (v4 >= 1)
  {
    v5 = 0;
    while (1)
    {
      v7 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1)
         : *(id *)(v1 + 8 * v5 + 32);
      v8 = v7;
      v9 = type metadata accessor for CRLGroupItem(0);
      v10 = (_QWORD *)swift_dynamicCastClass(v8, v9);
      if (!v10)
        break;
      v11 = v10;
      if (((*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x5B8))() & 1) != 0)
      {
        v12 = v8;
LABEL_18:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
        specialized Array._endMutation()(v15);
        goto LABEL_10;
      }
      v6 = sub_1004E3A60();
      sub_10061EAC8(v6);
LABEL_10:
      ++v5;

      if (v4 == v5)
        goto LABEL_26;
    }
    v12 = v8;
    v11 = v12;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1004E3C64()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  v1 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v2)
  {
    sub_100740DA4();
    v2 = *(id *)(v0 + v1);
  }
  if (v2)
    v3 = (uint64_t)v2;
  else
    v3 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  while (v4)
  {
    v5 = 4;
    while (1)
    {
      v2 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3)
         : *(id *)(v3 + 8 * v5);
      v6 = v2;
      v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v8 = type metadata accessor for CRLGroupItem(0);
      if (!swift_dynamicCastClass(v6, v8))
      {
        swift_bridgeObjectRelease(v3);

        return 0;
      }
      v9 = sub_1004E3C64();

      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRelease(v3);
        return 0;
      }
      ++v5;
      if (v7 == v4)
        goto LABEL_16;
    }
    __break(1u);
LABEL_21:
    if (v3 < 0)
      v11 = v3;
    else
      v11 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v3);
  }
LABEL_16:
  swift_bridgeObjectRelease(v3);
  return 1;
}

void sub_1004E3DD4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  void *v11;
  char v12;
  uint64_t v13;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 24);
  if (sub_1001E9730() < v1)
    return;
  sub_1004E36C0();
  v3 = v2;
  if (v2 >> 62)
  {
LABEL_19:
    if (v3 < 0)
      v13 = v3;
    else
      v13 = v3 & 0xFFFFFFFFFFFFFF8;
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    if (v4)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(v3);
    return;
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_16;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
LABEL_7:
    v6 = v5;
    v7 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x350))();

    if ((v7 & 1) != 0)
    {
      v8 = 0;
      while (v4 - 1 != v8)
      {
        v9 = v8 + 1;
        if ((v3 & 0xC000000000000001) != 0)
        {
          v10 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 + 1, v3);
        }
        else
        {
          if (v9 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_18;
          v10 = *(id *)(v3 + 8 * v8 + 40);
        }
        v11 = v10;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
        v12 = (*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x350))();

        ++v8;
        if ((v12 & 1) == 0)
          goto LABEL_16;
      }
    }
    goto LABEL_16;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1004E3F90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v2 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v2)
  {
    sub_100740DA4();
    v2 = *(_QWORD **)(v0 + v1);
  }
  if (v2)
    v3 = (uint64_t)v2;
  else
    v3 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  while (v4)
  {
    v5 = 0;
    v6 = 0;
    if ((v3 & 0xC000000000000001) != 0)
    {
LABEL_9:
      v2 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      goto LABEL_12;
    }
    while (v5 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v2 = *(id *)(v3 + 8 * v5 + 32);
LABEL_12:
      v7 = v2;
      v8 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
        break;
      }
      if ((v6 & 1) != 0)
      {

        v6 = 1;
        if (v8 == v4)
          goto LABEL_26;
      }
      else
      {
        v6 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x2E0))();

        if (v8 == v4)
          goto LABEL_26;
      }
      ++v5;
      if ((v3 & 0xC000000000000001) != 0)
        goto LABEL_9;
    }
    __break(1u);
LABEL_21:
    if (v3 < 0)
      v9 = v3;
    else
      v9 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v3);
  }
  v6 = 0;
LABEL_26:
  swift_bridgeObjectRelease(v3);
  return v6 & 1;
}

uint64_t sub_1004E411C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(__n128);
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = *(uint64_t (**)(__n128))(*(_QWORD *)v2 + 312);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  swift_release(v2);
  if ((v3 & 1) != 0 || (sub_100772DAC() & 1) != 0)
    return 1;
  v5 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v6)
  {
    sub_100740DA4();
    v6 = *(_QWORD *)(v1 + v5);
  }
  if (v6)
    v7 = v6;
  else
    v7 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v7 >> 62))
  {
    swift_bridgeObjectRetain(v6);
    v8 = swift_bridgeObjectRetain(v7);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    swift_bridgeObjectRelease(v7);
    v9 = v7;
LABEL_10:
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
  if (v7 < 0)
    v12 = v7;
  else
    v12 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v13 = sub_1004B804C(&qword_1013E0670);
  v9 = _bridgeCocoaArray<A>(_:)(v12, v13);
  swift_bridgeObjectRelease_n(v7, 2);
  v7 = v9;
  if (!((unint64_t)v9 >> 62))
    goto LABEL_10;
  if (v9 >= 0)
    v9 &= 0xFFFFFFFFFFFFFF8uLL;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v7);
LABEL_11:
  swift_bridgeObjectRelease(v7);
  if (v10)
    return sub_1004E3C64();
  return 1;
}

void sub_1004E42B8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;

  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x5B8))() & 1) != 0)
    return;
  v1 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v2 = *(_QWORD **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v2)
  {
    sub_100740DA4();
    v2 = *(_QWORD **)((char *)v0 + v1);
  }
  if (v2)
    v3 = (uint64_t)v2;
  else
    v3 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
  {
LABEL_25:
    if (v3 < 0)
      v12 = v3;
    else
      v12 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v3);
    if (v4)
      goto LABEL_9;
LABEL_29:
    swift_bridgeObjectRelease(v3);
    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  if (!v4)
    goto LABEL_29;
LABEL_9:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
LABEL_12:
    v6 = v5;
    v7 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x280))();

    if ((v7 & 1) != 0)
    {
      v8 = 0;
      while (v4 - 1 != v8)
      {
        v9 = v8 + 1;
        if ((v3 & 0xC000000000000001) != 0)
        {
          v2 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 + 1, v3);
        }
        else
        {
          if (v9 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_24;
          v2 = *(id *)(v3 + 8 * v8 + 40);
        }
        v10 = v2;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        v11 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x280))();

        ++v8;
        if ((v11 & 1) == 0)
          goto LABEL_29;
      }
    }
    goto LABEL_29;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v3 + 32);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1004E4484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  void *v7;
  Class isa;
  _QWORD *v9;
  void *v10;
  _QWORD *v11;
  uint64_t result;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _QWORD *v18;

  v2 = v1;
  v4 = swift_allocObject(&unk_101268BB0, 24, 7);
  *(_QWORD *)(v4 + 16) = 0;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v16 = sub_1004B804C(&qword_1013E0670);
    v6 = _bridgeCocoaArray<A>(_:)(v15, v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v5);
    v6 = a1;
  }
  v7 = (void *)objc_opt_self(CRLCanvasLayoutController);
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v9 = (_QWORD *)swift_allocObject(&unk_101268C28, 40, 7);
  v9[2] = v4;
  v9[3] = v2;
  v9[4] = a1;
  v17[4] = sub_1004E5F4C;
  v18 = v9;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = *(_QWORD *)"";
  v17[2] = sub_1004C6194;
  v17[3] = &unk_101268C40;
  v10 = _Block_copy(v17);
  v11 = v18;
  swift_bridgeObjectRetain(a1);
  swift_retain(v4);
  objc_msgSend(v7, "temporaryLayoutControllerForInfos:useInBlock:", isa, v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);

  result = swift_beginAccess(v4 + 16, v17, 0, 0);
  v13 = *(void **)(v4 + 16);
  if (v13)
  {
    v14 = v13;
    swift_release(v4);
    return (uint64_t)v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004E4644(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  _BYTE v7[24];

  v5 = sub_1004E5A80(a4, a1);
  swift_beginAccess(a2 + 16, v7, 1, 0);
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v5;

}

id sub_1004E4700(id result, double *a2)
{
  void *v3;
  _QWORD *v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  id v9;
  void *v10;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  CGAffineTransform v18;
  _BYTE v19[24];
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  if (result)
  {
    v3 = result;
    v4 = a2 + 2;
    swift_beginAccess(a2 + 2, v19, 0, 0);
    v5 = a2[2];
    v6 = a2[3];
    v7 = a2[4];
    v8 = a2[5];
    v9 = v3;
    result = objc_msgSend(v9, "pureGeometry");
    if (result)
    {
      v10 = result;
      objc_msgSend(result, "fullTransform");
      v16 = *(_OWORD *)&v18.c;
      v17 = *(_OWORD *)&v18.a;
      v15 = *(_OWORD *)&v18.tx;

      *(_OWORD *)&v18.a = v17;
      *(_OWORD *)&v18.c = v16;
      *(_OWORD *)&v18.tx = v15;
      v20.origin.x = 0.0;
      v20.origin.y = 0.0;
      v20.size.width = 1.0;
      v20.size.height = 1.0;
      v23 = CGRectApplyAffineTransform(v20, &v18);
      v21.origin.x = v5;
      v21.origin.y = v6;
      v21.size.width = v7;
      v21.size.height = v8;
      v22 = CGRectUnion(v21, v23);
      x = v22.origin.x;
      y = v22.origin.y;
      width = v22.size.width;
      height = v22.size.height;

      result = (id)swift_beginAccess(v4, &v18, 1, 0);
      a2[2] = x;
      a2[3] = y;
      a2[4] = width;
      a2[5] = height;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1004E4980(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  __n128 v8;
  uint64_t (*v9)(__n128);
  void *v10;
  uint64_t v11;
  uint64_t (*v12)(__n128);
  __n128 v13;
  void *v14;
  id v15;
  char *v16;
  _QWORD *v17;
  double d;
  CGFloat ty;
  CGFloat tx;
  CGFloat c;
  CGFloat b;
  double a;
  uint64_t (*v24)(void);
  char *v25;
  void *v26;
  char *Strong;
  uint64_t v28;
  void *v29;
  void *v30;
  _BOOL8 v31;
  id v32;
  CGFloat v33;
  CGFloat v34;
  uint64_t v35;
  uint64_t (*v36)(__n128);
  __n128 v37;
  void *v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  id v43;
  id v44;
  id v45;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  CGAffineTransform v62;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v2 = v1;
  v4 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v5 = *(_QWORD **)&v1[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  if (!v5)
  {
    sub_100740DA4();
    v5 = *(_QWORD **)&v1[v4];
  }
  if (v5)
    v6 = v5;
  else
    v6 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v5);
  v7 = sub_100C9D9CC((uint64_t)a1, (uint64_t)v6);
  v8 = swift_bridgeObjectRelease(v6);
  if ((v7 & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"ungroupedGeometry(forChildItem:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupItem.swift", 83, 2, 221, "Can't get ungrouped geometry for a board item which isn't a child of the group.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"ungroupedGeometry(forChildItem:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLGroupItem.swift", 83, 2u, 221, (uint64_t)"Can't get ungrouped geometry for a board item which isn't a child of the group.", 79, 2u);
  }
  v9 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xE0);
  v10 = (void *)v9(v8);
  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x2C8))() & 1) != 0
    && ((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x280))() & 1) == 0)
  {
    v16 = v2;
    v17 = v16;
    d = 1.0;
    ty = 0.0;
    tx = 0.0;
    c = 0.0;
    b = 0.0;
    a = 1.0;
    while (1)
    {
      v24 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)v16) + 0xE0);
      v25 = v16;
      v26 = (void *)v24();
      objc_msgSend(v26, "transform");
      v52 = *(_OWORD *)&t1.c;
      v57 = *(_OWORD *)&t1.a;
      v49 = *(_OWORD *)&t1.tx;

      t1.a = a;
      t1.b = b;
      t1.c = c;
      t1.d = d;
      t1.tx = tx;
      t1.ty = ty;
      *(_OWORD *)&t2.a = v57;
      *(_OWORD *)&t2.c = v52;
      *(_OWORD *)&t2.tx = v49;
      CGAffineTransformConcat(&v62, &t1, &t2);
      a = v62.a;
      b = v62.b;
      c = v62.c;
      d = v62.d;
      tx = v62.tx;
      ty = v62.ty;
      Strong = (char *)swift_unknownObjectWeakLoadStrong(&v25[OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem]);

      if (!Strong)
        break;

      v28 = type metadata accessor for CRLBoardItem(0);
      v16 = (char *)swift_dynamicCastClass(Strong, v28);
      if (!v16)
        goto LABEL_16;
    }
    Strong = v25;
LABEL_16:

    v29 = (void *)objc_opt_self(CRLCounterRotateInfo);
    v30 = (void *)((uint64_t (*)(void))v9)();
    objc_msgSend(v30, "transform");
    v53 = *(_OWORD *)&t1.c;
    v58 = *(_OWORD *)&t1.a;
    v50 = *(_OWORD *)&t1.tx;

    *(_OWORD *)&t1.a = v58;
    *(_OWORD *)&t1.c = v53;
    *(_OWORD *)&t1.tx = v50;
    v31 = sub_100079210(&t1.a);
    t1.a = a;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = tx;
    t1.ty = ty;
    v32 = objc_msgSend(v29, "infoGeometryForTransformInRoot:isChildFlipped:", &t1, v31);
    objc_msgSend(v32, "transform");
    v54 = *(_OWORD *)&t1.c;
    v59 = *(_OWORD *)&t1.a;
    v33 = t1.tx;
    v34 = t1.ty;
    v35 = *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v36 = *(uint64_t (**)(__n128))(*(_QWORD *)v35 + 288);
    v37 = swift_retain(v35);
    v38 = (void *)v36(v37);
    objc_msgSend(v38, "transform", swift_release(v35).n128_f64[0]);
    v48 = *(_OWORD *)&t1.c;
    v51 = *(_OWORD *)&t1.a;
    v47 = *(_OWORD *)&t1.tx;

    *(_OWORD *)&t1.a = v59;
    *(_OWORD *)&t1.c = v54;
    t1.tx = v33;
    t1.ty = v34;
    *(_OWORD *)&t2.a = v51;
    *(_OWORD *)&t2.c = v48;
    *(_OWORD *)&t2.tx = v47;
    CGAffineTransformConcat(&v62, &t1, &t2);
    v55 = *(_OWORD *)&v62.c;
    v60 = *(_OWORD *)&v62.a;
    v39 = v62.tx;
    v40 = v62.ty;
    objc_msgSend(v10, "fullTransform");
    *(_OWORD *)&t2.a = v60;
    *(_OWORD *)&t2.c = v55;
    t2.tx = v39;
    t2.ty = v40;
    CGAffineTransformConcat(&v62, &t1, &t2);
    v56 = *(_OWORD *)&v62.c;
    v61 = *(_OWORD *)&v62.a;
    v41 = v62.tx;
    v42 = v62.ty;
    v43 = objc_msgSend(v10, "widthValid");
    v44 = objc_msgSend(v10, "heightValid");
    v45 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    *(_OWORD *)&t1.a = v61;
    *(_OWORD *)&t1.c = v56;
    t1.tx = v41;
    t1.ty = v42;
    v15 = objc_msgSend(v45, "initWithFullTransform:widthValid:heightValid:", &t1, v43, v44);

  }
  else
  {
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v12 = *(uint64_t (**)(__n128))(*(_QWORD *)v11 + 288);
    v13 = swift_retain(v11);
    v14 = (void *)v12(v13);
    v15 = objc_msgSend(v10, "geometryWithParentGeometry:", v14, swift_release(v11).n128_f64[0]);

  }
  return v15;
}

void sub_1004E4E94()
{
  uint64_t v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  void *v8;
  Class isa;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(__n128);
  __n128 v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  _QWORD *v36;
  uint64_t v37;

  ObjectType = swift_getObjectType(v0);
  v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v37 = v0;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)(v37 + v2);
  }
  if (v3)
    v4 = v3;
  else
    v4 = (uint64_t)_swiftEmptyArrayStorage;
  v5 = swift_allocObject(&unk_101268BB0, 24, 7);
  *(_QWORD *)(v5 + 16) = 0;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v31 = v4;
    else
      v31 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v4);
    v32 = sub_1004B804C(&qword_1013E0670);
    v7 = _bridgeCocoaArray<A>(_:)(v31, v32);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    swift_bridgeObjectRetain(v3);
    v6 = swift_bridgeObjectRetain(v4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
    v7 = v4;
  }
  v8 = (void *)objc_opt_self(CRLCanvasLayoutController);
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  v10 = (_QWORD *)swift_allocObject(&unk_101268BD8, 40, 7);
  v10[2] = v5;
  v10[3] = ObjectType;
  v10[4] = v4;
  aBlock[4] = sub_1004E5F10;
  v36 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1004C6194;
  aBlock[3] = &unk_101268BF0;
  v11 = _Block_copy(aBlock);
  v12 = v36;
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  objc_msgSend(v8, "temporaryLayoutControllerForInfos:useInBlock:", isa, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);

  swift_beginAccess(v5 + 16, aBlock, 0, 0);
  v13 = *(void **)(v5 + 16);
  if (!v13)
    goto LABEL_32;
  v14 = v13;
  swift_bridgeObjectRelease(v4);
  swift_release(v5);
  v15 = v37;
  sub_100776700(v14);

  v16 = *(_QWORD *)(v15 + v2);
  if (!v16)
  {
    v17 = v37;
    sub_100740DA4();
    v16 = *(_QWORD *)(v17 + v2);
  }
  if (v16)
    v18 = v16;
  else
    v18 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v33 = v18;
    else
      v33 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v18);
    v19 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v18);
    if (v19)
      goto LABEL_16;
LABEL_30:
    swift_bridgeObjectRelease(v18);
    return;
  }
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v16);
  if (!v19)
    goto LABEL_30;
LABEL_16:
  if (v19 >= 1)
  {
    v20 = 0;
    v34 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v21 = v18 & 0xC000000000000001;
    v22 = v18;
    do
    {
      if (v21)
        v23 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
      else
        v23 = *(id *)(v18 + 8 * v20 + 32);
      v24 = v23;
      ++v20;
      v25 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v23) + 0xE0))();
      v26 = *(_QWORD *)(v37 + v34);
      v27 = *(uint64_t (**)(__n128))(*(_QWORD *)v26 + 288);
      v28 = swift_retain(v26);
      v29 = (void *)v27(v28);
      v30 = objc_msgSend(v25, "geometryRelativeToGeometry:", v29, swift_release(v26).n128_f64[0]);

      (*(void (**)(id))((swift_isaMask & *v24) + 0xE8))(v30);
      v18 = v22;
    }
    while (v19 != v20);
    goto LABEL_30;
  }
  __break(1u);
LABEL_32:
  __break(1u);
}

uint64_t sub_1004E5298()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(__n128);
  __n128 v4;
  char v5;
  __n128 v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v1 = v0;
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = *(uint64_t (**)(__n128))(*(_QWORD *)v2 + 312);
  v4 = swift_retain(v2);
  v5 = v3(v4);
  v6 = swift_release(v2);
  v7 = v5 ^ 1;
  if (((*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x5B8))(v6) & 1) == 0 && (v5 & 1) == 0)
  {
    sub_1004E36C0();
    v9 = v8;
    if (v8 >> 62)
      goto LABEL_16;
    for (i = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v16))
    {
      type metadata accessor for CRLBoardItem(0);
      v11 = 4;
      while (1)
      {
        v12 = (v9 & 0xC000000000000001) != 0
            ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v9)
            : *(id *)(v9 + 8 * v11);
        v13 = v12;
        v14 = v11 - 3;
        if (__OFADD__(v11 - 4, 1))
          break;
        if ((static NSObject.== infix(_:_:)(v12, v1) & 1) != 0)
        {

        }
        else
        {
          v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x298))();

          if ((v15 & 1) == 0)
          {
            v7 = 0;
            goto LABEL_21;
          }
        }
        ++v11;
        if (v14 == i)
          goto LABEL_20;
      }
      __break(1u);
LABEL_16:
      if (v9 < 0)
        v16 = v9;
      else
        v16 = v9 & 0xFFFFFFFFFFFFFF8;
    }
LABEL_20:
    v7 = 1;
LABEL_21:
    swift_bridgeObjectRelease(v9);
  }
  return v7 & 1;
}

void sub_1004E5440()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 288);
  v5 = swift_retain(v3);
  v6 = (void *)v4(v5);
  objc_msgSend(v6, "transform", swift_release(v3).n128_f64[0]);
  v25 = v28;
  v26 = v27;
  v24 = v29;

  v27 = v26;
  v28 = v25;
  v29 = v24;
  if (sub_100079330((double *)&v27, 0.0001))
  {
    v7 = *(_QWORD *)((char *)v1 + v2);
    v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v7 + 336);
    v9 = swift_retain(v7);
    LOBYTE(v8) = v8(v9);
    v10 = swift_release(v7);
    if ((v8 & 1) != 0)
      (*(void (**)(__n128))((swift_isaMask & *v1) + 0x290))(v10);
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x5B8))() & 1) == 0)
  {
    v11 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v12 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
    if (!v12)
    {
      sub_100740DA4();
      v12 = *(_QWORD **)((char *)v1 + v11);
    }
    if (v12)
      v13 = (uint64_t)v12;
    else
      v13 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v13 >> 62)
    {
LABEL_28:
      if (v13 < 0)
        v23 = v13;
      else
        v23 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v13);
      if (v14)
        goto LABEL_12;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v12);
      if (v14)
      {
LABEL_12:
        if ((v13 & 0xC000000000000001) != 0)
        {
          v15 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
        }
        else
        {
          if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v15 = *(id *)(v13 + 32);
        }
        v16 = v15;
        v17 = (*(uint64_t (**)(void))((swift_isaMask & *v15) + 0x298))();

        if ((v17 & 1) != 0)
        {
          v18 = 0;
          v19 = v14 - 1;
          while (v19 != v18)
          {
            v20 = v18 + 1;
            if ((v13 & 0xC000000000000001) != 0)
            {
              v12 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18 + 1, v13);
            }
            else
            {
              if (v20 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_27;
              v12 = *(id *)(v13 + 8 * v18 + 40);
            }
            v21 = v12;
            if (__OFADD__(v20, 1))
            {
              __break(1u);
LABEL_27:
              __break(1u);
              goto LABEL_28;
            }
            v22 = (*(uint64_t (**)(void))((swift_isaMask & *v12) + 0x298))();

            ++v18;
            if ((v22 & 1) == 0)
              break;
          }
        }
      }
    }
    swift_bridgeObjectRelease(v13);
  }
}

id sub_1004E574C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, __n128);
  __n128 v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  objc_super v11;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = type metadata accessor for CRLContainerItemData(0);
  v4 = *(uint64_t (**)(_QWORD, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                                                + 440);
  v5 = swift_retain(v2);
  v6 = v4(0, v5);
  swift_release(v2);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLGroupItem(0));
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = &_swiftEmptyDictionarySingleton;
  *(_DWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v7;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v6;
  v11.receiver = v8;
  v11.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v9 = v7;
  return objc_msgSendSuper2(&v11, "init");
}

id sub_1004E5880(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = &_swiftEmptyDictionarySingleton;
  *(_DWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return objc_msgSendSuper2(&v7, "init");
}

id sub_1004E5944()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLGroupItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004E5978()
{
  return type metadata accessor for CRLGroupItem(0);
}

uint64_t type metadata accessor for CRLGroupItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E05F8;
  if (!qword_1013E05F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLGroupItem);
  return result;
}

uint64_t sub_1004E59BC(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 1456);
}

id sub_1004E5A80(uint64_t a1, void *a2)
{
  uint64_t v4;
  CGSize size;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  CGFloat v11;
  uint64_t v12;
  void *v13;
  CGFloat a;
  id v15;
  Class isa;
  _QWORD *v17;
  void *v18;
  CGFloat ty;
  id v20;
  CGFloat v21;
  const void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  id result;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v37;
  id v43;
  void *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  void *v48;
  id v49[2];
  CGAffineTransform aBlock;
  _BYTE v51[32];
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v4 = swift_allocObject(&unk_101268B38, 48, 7);
  size = CGRectNull.size;
  *(CGPoint *)(v4 + 16) = CGRectNull.origin;
  v6 = (void *)(v4 + 16);
  *(CGSize *)(v4 + 32) = size;
  if ((unint64_t)a1 >> 62)
  {
LABEL_15:
    if (a1 < 0)
      v37 = a1;
    else
      v37 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v7)
    {
LABEL_3:
      v8 = a1 & 0xC000000000000001;
      v44 = v6;
      swift_beginAccess(v6, v51, 1, 0);
      v9 = 4;
      v45 = a1;
      while (1)
      {
        if (v8)
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
        else
          v23 = *(id *)(a1 + 8 * v9);
        v24 = v23;
        v25 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
        {
          __break(1u);
          goto LABEL_15;
        }
        v26 = objc_msgSend(a2, "layoutForInfo:", v23);
        if (v26)
        {
          v27 = v26;
          v28 = *(double *)(v4 + 16);
          v29 = *(double *)(v4 + 24);
          v30 = *(double *)(v4 + 32);
          v31 = *(double *)(v4 + 40);
          result = objc_msgSend(v26, "pureGeometry");
          if (!result)
          {
            __break(1u);
            return result;
          }
          v6 = result;
          objc_msgSend(result, "fullTransform");
          v47 = *(_OWORD *)&aBlock.c;
          *(_OWORD *)v49 = *(_OWORD *)&aBlock.a;
          v46 = *(_OWORD *)&aBlock.tx;

          *(_OWORD *)&aBlock.a = *(_OWORD *)v49;
          *(_OWORD *)&aBlock.c = v47;
          *(_OWORD *)&aBlock.tx = v46;
          v52.origin.x = 0.0;
          v52.origin.y = 0.0;
          v52.size.width = 1.0;
          v52.size.height = 1.0;
          v55 = CGRectApplyAffineTransform(v52, &aBlock);
          v53.origin.x = v28;
          v53.origin.y = v29;
          v53.size.width = v30;
          v53.size.height = v31;
          v54 = CGRectUnion(v53, v55);
          x = v54.origin.x;
          y = v54.origin.y;
          width = v54.size.width;
          height = v54.size.height;

          *(CGFloat *)(v4 + 16) = x;
          *(CGFloat *)(v4 + 24) = y;
          *(CGFloat *)(v4 + 32) = width;
          *(CGFloat *)(v4 + 40) = height;
        }
        else
        {
          v48 = (void *)objc_opt_self(CRLCanvasLayoutController);
          v10 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v11 = COERCE_DOUBLE(swift_allocObject(v10, 40, 7));
          *(_OWORD *)(*(_QWORD *)&v11 + 16) = xmmword_100EEF400;
          *(_QWORD *)(*(_QWORD *)&v11 + 32) = v24;
          aBlock.a = v11;
          specialized Array._endMutation()(*(_QWORD *)&v11);
          v12 = v7;
          v13 = a2;
          a = aBlock.a;
          swift_retain(v4);
          v15 = v24;
          sub_1004B804C(&qword_1013E0670);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(*(_QWORD *)&a);
          v17 = (_QWORD *)swift_allocObject(&unk_101268B60, 40, 7);
          v17[2] = sub_1004E5E90;
          v17[3] = v4;
          v17[4] = v15;
          *(_QWORD *)&aBlock.tx = sub_1004E5EC4;
          *(_QWORD *)&aBlock.ty = v17;
          *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
          aBlock.b = *(CGFloat *)"";
          *(_QWORD *)&aBlock.c = sub_1004C6194;
          *(_QWORD *)&aBlock.d = &unk_101268B78;
          v18 = _Block_copy(&aBlock);
          v6 = (void *)v8;
          ty = aBlock.ty;
          v20 = v15;
          swift_retain(v4);
          v21 = ty;
          v8 = (unint64_t)v6;
          objc_msgSend(v48, "temporaryLayoutControllerForInfos:useInBlock:", isa, v18, swift_release(*(_QWORD *)&v21).n128_f64[0]);
          v22 = v18;
          a2 = v13;
          v7 = v12;
          a1 = v45;
          _Block_release(v22);
          swift_release(v4);

        }
        ++v9;
        if (v25 == v7)
        {
          swift_bridgeObjectRelease(a1);
          v6 = v44;
          goto LABEL_20;
        }
      }
    }
  }
  swift_bridgeObjectRelease(a1);
LABEL_20:
  swift_beginAccess(v6, &aBlock, 1, 0);
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v4 + 32) = _Q0;
  v43 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:", *(double *)(v4 + 16), *(double *)(v4 + 24), 1.0, 1.0);
  swift_release(v4);
  return v43;
}

uint64_t sub_1004E5E80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_1004E5E90(void *a1)
{
  double *v1;

  return sub_1004E4700(a1, v1);
}

uint64_t sub_1004E5E98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1004E5EC4(void *a1)
{
  uint64_t v1;

  sub_10077A1A8(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1004E5ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1004E5EE0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1004E5EE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004E5F10(void *a1)
{
  uint64_t *v1;

  sub_1004E4644(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1004E5F20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1004E603C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasBackgroundView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCanvasBackgroundView()
{
  return objc_opt_self(_TtC8Freeform23CRLCanvasBackgroundView);
}

uint64_t getEnumTagSinglePayload for CRLSerializationError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLSerializationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1004E6168 + 4 * byte_100EF61A5[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1004E619C + 4 * asc_100EF61A0[v4]))();
}

uint64_t sub_1004E619C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E61A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004E61ACLL);
  return result;
}

uint64_t sub_1004E61B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004E61C0);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1004E61C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004E61CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSerializationError()
{
  return &type metadata for CRLSerializationError;
}

unint64_t sub_1004E61EC()
{
  unint64_t result;

  result = qword_1013E06B8;
  if (!qword_1013E06B8)
  {
    result = swift_getWitnessTable(&unk_100EF6208, &type metadata for CRLSerializationError);
    atomic_store(result, (unint64_t *)&qword_1013E06B8);
  }
  return result;
}

void sub_1004E6230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  char v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  _BYTE v19[72];
  _BYTE v20[32];

  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(a1 + 24);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v5, v7);
  swift_retain(a1);
  v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  swift_release(a1);
  if ((v10 & 1) != 0)
  {
    v12 = *(_QWORD *)(a1 + 16);
    v13 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v13, v20);
    *(_QWORD *)(inited + 16) = v12;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v12);
    sub_1006B6CB8();
    if (!v2)
    {
      sub_10081377C(a2);
      if ((v15 & 1) != 0)
      {
        sub_1006B70D4();
      }
      else
      {
        v16 = *(id *)(a1 + 32);
        v18 = static os_log_type_t.default.getter(v17);
        sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v18, "The block of SQL code returned false. This means we should roll back the transaction", 84, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006B7380();
      }
    }
    swift_release(inited);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E6500(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  char v16[32];

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 128;
  v8 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3, v5);
  v9 = a1;
  v10 = v8;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);

  if ((a1 & 1) != 0)
  {
    v11 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v12 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v12, v16);
    *(_QWORD *)(inited + 16) = v11;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v11);
    sub_1006B6CB8();
    if (v1)
    {
      v14 = inited;
    }
    else
    {
      sub_100A764FC(11);
      sub_1006B70D4();
      v14 = v11;
    }
    swift_release(v14);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E67A8(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, sub_100A95EE8);
}

void sub_1004E67C4(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, sub_100A985B8);
}

void sub_1004E67E0(char *a1, uint64_t a2)
{
  sub_1004E7D0C(a1, a2, sub_100A98F6C);
}

void sub_1004E67FC(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_100A9A734);
}

void sub_1004E6818(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  char v19[40];

  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 120;
  v11 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = a1;
  v13 = v11;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);

  if ((a1 & 1) != 0)
  {
    v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v15 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v15, v19);
    *(_QWORD *)(inited + 16) = v14;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v14);
    sub_1006B6CB8();
    if (v3)
    {
      v17 = inited;
    }
    else
    {
      sub_100A96CAC(0, a3);
      sub_1006B70D4();
      v17 = v14;
    }
    swift_release(v17);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E6AD0(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, sub_100AA03DC);
}

void sub_1004E6AEC(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, sub_100AA10C8);
}

void sub_1004E6B08(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, sub_100AA2C98);
}

void sub_1004E6B24(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, sub_100AA34F4);
}

void sub_1004E6B40(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, sub_100AA3D5C);
}

void sub_1004E6B5C(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E774C(a1, a2, a3, (void (*)(uint64_t))sub_100AAFC1C);
}

void sub_1004E6B78(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  char v20[40];

  v19 = a4;
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 120;
  v12 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7, v9);
  v13 = a1;
  v14 = v12;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);

  if ((a1 & 1) != 0)
  {
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v16 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v16, v20);
    *(_QWORD *)(inited + 16) = v15;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v15);
    sub_1006B6CB8();
    if (v4)
    {
      v18 = inited;
    }
    else
    {
      sub_100AB15FC(a3, v19);
      sub_1006B70D4();
      v18 = v15;
    }
    swift_release(v18);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E6E34(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E774C(a1, a2, a3, (void (*)(uint64_t))sub_100AB3B88);
}

void sub_1004E6E50(char *a1, uint64_t a2)
{
  sub_1004E7D0C(a1, a2, sub_100ABCDA4);
}

void sub_1004E6E6C(char *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  char v20[40];

  HIDWORD(v19) = a4;
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 120;
  v12 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7, v9);
  v13 = a1;
  v14 = v12;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);

  if ((a1 & 1) != 0)
  {
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v16 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v16, v20);
    *(_QWORD *)(inited + 16) = v15;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v15);
    sub_1006B6CB8();
    if (v4)
    {
      v18 = inited;
    }
    else
    {
      sub_100ACA708(a3, SBYTE4(v19));
      sub_1006B70D4();
      v18 = v15;
    }
    swift_release(v18);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E7128(char *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  char v21[40];

  v20 = a2;
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 120;
  v13 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v8, v10);
  v14 = a1;
  v15 = v13;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);

  if ((a1 & 1) != 0)
  {
    v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v17 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v17, v21);
    *(_QWORD *)(inited + 16) = v16;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v16);
    sub_1006B6CB8();
    if (v4)
    {
      v19 = inited;
    }
    else
    {
      sub_100ACBB24(a3, a4 & 1);
      sub_1006B70D4();
      v19 = v16;
    }
    swift_release(v19);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E73E4(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_100ACC7D4);
}

void sub_1004E7400(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E741C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_100ACCE60);
}

void sub_1004E741C(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  char v23[40];

  v22 = a4;
  v8 = type metadata accessor for DispatchPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 120;
  v13 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v9 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v8, v10);
  v14 = a1;
  v15 = v13;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);

  if ((a1 & 1) != 0)
  {
    v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v17 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v17, v23);
    *(_QWORD *)(inited + 16) = v16;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v16);
    sub_1006B6CB8();
    if (!v4)
    {
      if ((v22(a2, a3) & 1) != 0)
      {
        sub_1006B70D4();
      }
      else
      {
        v19 = *(id *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_logCategory];
        v21 = static os_log_type_t.default.getter(v20);
        sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v21, "The block of SQL code returned false. This means we should roll back the transaction", 84, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006B7380();
      }
    }
    swift_release(inited);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E7730(char *a1, uint64_t a2, uint64_t a3)
{
  sub_1004E774C(a1, a2, a3, (void (*)(uint64_t))sub_100ACF8C4);
}

void sub_1004E774C(char *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  void (*v19)(uint64_t);
  char v20[40];

  v19 = a4;
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 120;
  v12 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7, v9);
  v13 = a1;
  v14 = v12;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);

  if ((a1 & 1) != 0)
  {
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v16 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v16, v20);
    *(_QWORD *)(inited + 16) = v15;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v15);
    sub_1006B6CB8();
    if (v4)
    {
      v18 = inited;
    }
    else
    {
      v19(a3);
      sub_1006B70D4();
      v18 = v15;
    }
    swift_release(v18);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E7A08(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  char v16[32];

  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 128;
  v8 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3, v5);
  v9 = a1;
  v10 = v8;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);

  if ((a1 & 1) != 0)
  {
    v11 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v12 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v12, v16);
    *(_QWORD *)(inited + 16) = v11;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v11);
    sub_1006B6CB8();
    if (v1)
    {
      v14 = inited;
    }
    else
    {
      sub_100ABCAC4(1);
      sub_100ABC28C(1);
      sub_100ABC56C();
      sub_100ABCDA4();
      sub_1006B70D4();
      v14 = v11;
    }
    swift_release(v14);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E7CF0(char *a1, uint64_t a2)
{
  sub_1004E7D0C(a1, a2, (void (*)(void))sub_100A74660);
}

void sub_1004E7D0C(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  char v19[40];

  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 120;
  v11 = *(void **)&a1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  v12 = a1;
  v13 = v11;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);

  if ((a1 & 1) != 0)
  {
    v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
    v15 = type metadata accessor for SQLTransaction();
    inited = swift_initStackObject(v15, v19);
    *(_QWORD *)(inited + 16) = v14;
    *(_BYTE *)(inited + 24) = 0;
    swift_retain(v14);
    sub_1006B6CB8();
    if (v3)
    {
      v17 = inited;
    }
    else
    {
      a3();
      sub_1006B70D4();
      v17 = v14;
    }
    swift_release(v17);
  }
  else
  {
    __break(1u);
  }
}

_QWORD *initializeWithTake for CRLSyncActivityScheduleState(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLSQLSchemaVersionError()
{
  return &type metadata for CRLSQLSchemaVersionError;
}

uint64_t sub_1004E7FD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double (*v30)(uint64_t, uint64_t);
  id v31;
  double v32;
  uint64_t v33;
  CAMediaTimingFillMode v34;
  NSString *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[10];
  __int128 v62;
  uint64_t v63;
  CAMediaTimingFillMode v64;
  char v65;
  _QWORD v66[39];

  v54 = a3;
  v7 = type metadata accessor for CRLTweenLayerAnimation(0);
  v53 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (double *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (char *)v10 + *(int *)(v8 + 28);
  UUID.init()(v8);
  v12 = (uint64_t)v10 + *(int *)(v7 + 36);
  v13 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v51 = v7;
  v15 = (uint64_t)v10 + *(int *)(v7 + 40);
  v14(v15, 1, 1, v13);
  *v10 = a4;
  sub_1004E90B0((uint64_t)a1, (uint64_t)(v10 + 1));
  sub_1004CB7BC(a2, (uint64_t)(v10 + 6), &qword_1013EA650);
  v52 = a2;
  sub_1004CB7BC(a2, (uint64_t)&v62, &qword_1013EA650);
  if (v63)
  {
    sub_1004DB728(&v62, (uint64_t)v66);
    v16 = v66[3];
    v17 = v66[4];
    sub_1004BB5A4(v66, v66[3]);
    v18 = (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v17 + 24) + 8) + 8))(v16);
    v20 = a1[3];
    v19 = a1[4];
    sub_1004BB5A4(a1, v20);
    v21 = v18 - (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v19 + 24) + 8) + 40))(v20);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v66);
  }
  else
  {
    sub_1004CB800((uint64_t)&v62, &qword_1013EA650);
    v23 = a1[3];
    v22 = a1[4];
    sub_1004BB5A4(a1, v23);
    v21 = a4 - (*(double (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v22 + 24) + 8) + 40))(v23);
  }
  v10[11] = v21;
  if (v21 <= 0.0)
  {
    sub_1004CB800(v52, &qword_1013EA650);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    sub_1004E90F4((_QWORD *)v10 + 1);
    v48 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v11, v48);
    sub_1004CB800(v12, &qword_1013E06C0);
    sub_1004CB800(v15, &qword_1013E06C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v54, 1, 1, v51);
  }
  else
  {
    sub_1004E9128((uint64_t)(v10 + 1), (uint64_t)v61);
    result = sub_100717DAC((uint64_t)v66);
    if (v66[10])
    {
      sub_10071D364();
      sub_1004E9164(v66);
      sub_1004E90F4(v61);
      v25 = v52;
      if (qword_1013DD408 != -1)
        swift_once(&qword_1013DD408, sub_1008D3CF4);
      v26 = (void *)qword_10147FD68;
      sub_1004E9198(&v62, &v66[3]);
      *(_OWORD *)&v66[1] = xmmword_100EF6400;
      v66[0] = v26;
      v66[36] = 0;
      LODWORD(v66[37]) = 131586;
      v27 = a1[3];
      v28 = a1[4];
      sub_1004BB5A4(a1, v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v28 + 24) + 8);
      v30 = *(double (**)(uint64_t, uint64_t))(v29 + 40);
      v31 = v26;
      v32 = v30(v27, v29);
      sub_1004E91D4((uint64_t)v66, (uint64_t)&v62);
      *((double *)&v62 + 1) = v32;
      sub_1004E9210((uint64_t)v66);
      v33 = *((_QWORD *)v10 + 11);
      sub_1004E91D4((uint64_t)&v62, (uint64_t)v66);
      v66[2] = v33;
      sub_1004E9210((uint64_t)&v62);
      sub_1004E91D4((uint64_t)v66, (uint64_t)&v62);
      v34 = v64;
      v35 = kCAFillModeRemoved;

      v64 = kCAFillModeRemoved;
      sub_1004E9210((uint64_t)v66);
      sub_1004E91D4((uint64_t)&v62, (uint64_t)v66);
      BYTE1(v66[37]) = 0;
      sub_1004E9210((uint64_t)&v62);
      sub_1004E91D4((uint64_t)v66, (uint64_t)&v62);
      v65 = 0;
      sub_1004E9210((uint64_t)v66);
      v36 = a1[3];
      v37 = a1[4];
      sub_1004BB5A4(a1, v36);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v37 + 88))(v66, v36, v37);
      v38 = v66[3];
      v39 = v66[4];
      sub_1004BB5A4(v66, v66[3]);
      v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 184))(v38, v39);
      sub_1004CB7BC(v25, (uint64_t)v61, &qword_1013EA650);
      if ((v40 & 1) != 0)
      {
        sub_1004CB7BC((uint64_t)v61, (uint64_t)v58, &qword_1013EA650);
        v41 = v59;
        v43 = v53;
        v42 = v54;
        if (v59)
        {
          v44 = v60;
          sub_1004BB5A4(v58, v59);
          (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v44 + 88))(v55, v41, v44);
          v45 = v56;
          v46 = v57;
          sub_1004BB5A4(v55, v56);
          v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 184))(v45, v46);
          sub_1004CB800(v25, &qword_1013EA650);
          sub_1004CB800((uint64_t)v61, &qword_1013EA650);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v55);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v58);
        }
        else
        {
          sub_1004CB800(v25, &qword_1013EA650);
          sub_1004CB800((uint64_t)v61, &qword_1013EA650);
          sub_1004CB800((uint64_t)v58, &qword_1013EA650);
          v47 = 1;
        }
      }
      else
      {
        sub_1004CB800(v25, &qword_1013EA650);
        sub_1004CB800((uint64_t)v61, &qword_1013EA650);
        v47 = 0;
        v43 = v53;
        v42 = v54;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v66);
      sub_1004E91D4((uint64_t)&v62, (uint64_t)v66);
      BYTE3(v66[37]) = v47 & 1;
      sub_1004E9210((uint64_t)&v62);
      v49 = v51;
      memcpy((char *)v10 + *(int *)(v51 + 32), v66, 0x12CuLL);
      sub_1004E9244((uint64_t)v10, v42);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v42, 0, 1, v49);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
      return sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLTweenLayerAnimation);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1004E85A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v1 = v0[4];
  v2 = v0[5];
  sub_1004BB5A4(v0 + 1, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
  if (!v3)
    return (uint64_t)v3;
  sub_1004CB7BC((uint64_t)(v0 + 6), (uint64_t)&v13, &qword_1013EA650);
  if (!v14)
  {
    sub_1004CB800((uint64_t)&v13, &qword_1013EA650);
    return (uint64_t)v3;
  }
  sub_1004DB728(&v13, (uint64_t)v15);
  v4 = v16;
  v5 = v17;
  sub_1004BB5A4(v15, v16);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 64);
  v7 = v3;
  v8 = v6(v4, v5);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1004EB280();
    v10 = v7;
    v11 = static NSObject.== infix(_:_:)(v10, v9);

    if ((v11 & 1) != 0)
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
      return (uint64_t)v3;
    }
  }
  else
  {

  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000054, 0x8000000100FAF150, "Freeform/CRLTweenLayerAnimation.swift", 37, 2, 55, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004E8700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v13;
  _BYTE v16[40];

  v3 = sub_1004B804C((uint64_t *)&unk_1013F04C0);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLTweenLayerAnimation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004E90B0(a1, (uint64_t)v16);
  v10 = sub_1004B804C(&qword_1013E8700);
  v11 = swift_dynamicCast(v5, v16, v10, v6, 6);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v11)
  {
    v12(v5, 0, 1, v6);
    sub_1004EAF10((uint64_t)v5, (uint64_t)v9);
    v13 = sub_1004EAF54(v9, v1);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLTweenLayerAnimation);
  }
  else
  {
    v12(v5, 1, 1, v6);
    sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_1013F04C0);
    v13 = 0;
  }
  return v13 & 1;
}

id sub_1004E884C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[2];
  _OWORD v40[3];
  uint64_t v41;
  void *v42;
  _BYTE v43[88];

  sub_1004CB7BC(a1, (uint64_t)v43, (uint64_t *)&unk_1013F04B0);
  sub_1004CB7BC((uint64_t)v43, (uint64_t)v39, (uint64_t *)&unk_1013F04B0);
  v4 = v41;
  sub_1004CB800((uint64_t)v39, (uint64_t *)&unk_1013F04B0);
  if (!v4)
  {
    sub_100717DAC((uint64_t)v39);
    sub_1004CB800((uint64_t)v43, (uint64_t *)&unk_1013F04B0);
    sub_1004EB2BC((uint64_t)v39, (uint64_t)v43);
  }
  v5 = v2 + *(int *)(type metadata accessor for CRLTweenLayerAnimation(0) + 32);
  sub_1004E91D4(v5, (uint64_t)v39);
  sub_1008A51D4();
  sub_1008A4EC8(v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v9);

  sub_1004E9210((uint64_t)v39);
  sub_1004CB7BC((uint64_t)v43, (uint64_t)&v33, (uint64_t *)&unk_1013F04B0);
  if (v38)
  {
    v40[1] = v36;
    v40[2] = v37;
    v41 = v38;
    v39[0] = v33;
    v39[1] = v34;
    v40[0] = v35;
    sub_1004CB7BC((uint64_t)v39, (uint64_t)&v33, &qword_1013E0230);
    v11 = *((_QWORD *)&v34 + 1);
    if (*((_QWORD *)&v34 + 1))
    {
      v12 = sub_1004BB5A4(&v33, *((uint64_t *)&v34 + 1));
      v13 = *(_QWORD *)(v11 - 8);
      v14 = __chkstk_darwin(v12);
      v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v13 + 16))(v16, v14);
      v17 = _bridgeAnythingToObjectiveC<A>(_:)(v16, v11);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v33);
    }
    else
    {
      v17 = 0;
    }
    objc_msgSend(v10, "setFromValue:", v17);
    swift_unknownObjectRelease(v17);
    sub_1004CB7BC((uint64_t)v40, (uint64_t)&v33, &qword_1013E0230);
    v18 = *((_QWORD *)&v34 + 1);
    if (*((_QWORD *)&v34 + 1))
    {
      v19 = sub_1004BB5A4(&v33, *((uint64_t *)&v34 + 1));
      v20 = *(_QWORD *)(v18 - 8);
      v21 = __chkstk_darwin(v19);
      v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v20 + 16))(v23, v21);
      v24 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v18);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v33);
    }
    else
    {
      v24 = 0;
    }
    objc_msgSend(v10, "setToValue:", v24);
    swift_unknownObjectRelease(v24);
    sub_1004E9164(v39);
  }
  else
  {
    sub_1004CB800((uint64_t)&v33, (uint64_t *)&unk_1013F04B0);
  }
  objc_msgSend(v10, "setBeginTime:", *(double *)(v5 + 8) + a2);
  objc_msgSend(v10, "setDuration:", *(double *)(v5 + 16));
  v25 = qword_1013DD430;
  v26 = v10;
  if (v25 != -1)
    swift_once(&qword_1013DD430, sub_1008D3D44);
  objc_msgSend(v26, "setTimingFunction:", qword_10147FD90);

  sub_1004E91D4(v5, (uint64_t)v39);
  v27 = v42;
  if (v42)
  {
    v28 = v26;
    v29 = v27;
  }
  else
  {
    v29 = objc_msgSend(v26, "fillMode");
  }
  v30 = v27;
  sub_1004E9210((uint64_t)v39);
  objc_msgSend(v26, "setFillMode:", v29);

  sub_1004CB800((uint64_t)v43, (uint64_t *)&unk_1013F04B0);
  return v26;
}

uint64_t sub_1004E8C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1004E8C88@<X0>(uint64_t a1@<X8>)
{
  return sub_100717DAC(a1);
}

uint64_t sub_1004E8CA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  a2[3] = (uint64_t)&type metadata for CRLBasicLayerAnimation.Def;
  a2[4] = sub_1004EB138();
  v5 = swift_allocObject(&unk_101269048, 316, 7);
  *a2 = v5;
  return sub_1004E91D4(v4, v5 + 16);
}

void (*sub_1004E8D00(_QWORD *a1, uint64_t a2))(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v6 = v2 + *(int *)(a2 + 32);
  v5[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v5[4] = sub_1004EB138();
  v7 = swift_allocObject(&unk_101269048, 316, 7);
  *v5 = v7;
  sub_1004E91D4(v6, v7 + 16);
  return sub_1004E8D84;
}

void sub_1004E8D84(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  sub_100757E04(&_mh_execute_header, (uint64_t)"def", 3, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLTweenLayerAnimation.swift", 119, 2, 73, "Tried to set a property of a tween's def, but tween defs are calculated.", 72, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"def", 3, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLTweenLayerAnimation.swift", 119, 2u, 73, (uint64_t)"Tried to set a property of a tween's def, but tween defs are calculated.", 72, 2u);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
  free(v1);
}

uint64_t sub_1004E8E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004CB7BC(v2 + *(int *)(a1 + 36), a2, &qword_1013E06C0);
}

uint64_t sub_1004E8E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004CB7BC(v2 + *(int *)(a1 + 40), a2, &qword_1013E06C0);
}

Swift::Int sub_1004E8EB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_1004E8F28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_1004E8F8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

double sub_1004E9000(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32) + 8);
}

uint64_t sub_1004E9010(uint64_t result, double a2)
{
  uint64_t v2;

  *(double *)(v2 + *(int *)(result + 32) + 8) = a2;
  return result;
}

double (*sub_1004E9020(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 8) = v2;
  v3 = *(int *)(a2 + 32);
  *(_DWORD *)(a1 + 16) = v3;
  *(_QWORD *)a1 = *(_QWORD *)(v2 + v3 + 8);
  return sub_1004E904C;
}

double sub_1004E904C(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(int *)(a1 + 16) + 8) = *(_QWORD *)a1;
  return result;
}

double sub_1004E9064(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32) + 16);
}

uint64_t type metadata accessor for CRLTweenLayerAnimation(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E0720;
  if (!qword_1013E0720)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLTweenLayerAnimation);
  return result;
}

uint64_t sub_1004E90B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_1004E90F4(_QWORD *a1)
{
  destroy for CRLLayerTweenPropertyTransition(a1);
  return a1;
}

uint64_t sub_1004E9128(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLLayerTweenPropertyTransition(a2, a1);
  return a2;
}

_QWORD *sub_1004E9164(_QWORD *a1)
{
  destroy for CRLLayerConcretePropertyTransition(a1);
  return a1;
}

void *sub_1004E9198(const void *a1, void *a2)
{
  initializeWithTake for CRLLayerPropertyTransitionDescriptor(a2, a1);
  return a2;
}

uint64_t sub_1004E91D4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLBasicLayerAnimation.Def(a2, a1);
  return a2;
}

uint64_t sub_1004E9210(uint64_t a1)
{
  destroy for CRLBasicLayerAnimation.Def(a1);
  return a1;
}

uint64_t sub_1004E9244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLTweenLayerAnimation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E9288(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _OWORD *v22;
  _OWORD *v23;
  int v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  char v30;
  void *v31;
  char v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  __int128 v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  char v48;
  __int128 v49;
  id v50;
  id v51;
  id v52;
  id v53;
  __int128 v54;
  _OWORD *v55;
  _OWORD *v56;
  uint64_t v57;
  __int128 v58;
  char v59;
  __int128 v60;
  _OWORD *v61;
  _OWORD *v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  void *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v91;
  void (*v93)(uint64_t, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v12);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    v8 = (_OWORD *)(v4 + 48);
    v9 = a2 + 6;
    v10 = a2[9];
    if (v10)
    {
      v11 = a2[10];
      *(_QWORD *)(v4 + 72) = v10;
      *(_QWORD *)(v4 + 80) = v11;
      (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
    }
    else
    {
      v13 = *((_OWORD *)a2 + 4);
      *v8 = *v9;
      *(_OWORD *)(v4 + 64) = v13;
      *(_QWORD *)(v4 + 80) = a2[10];
    }
    *(_QWORD *)(v4 + 88) = a2[11];
    v14 = a3[7];
    v15 = v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = type metadata accessor for UUID(0);
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v93(v15, v16, v17);
    v18 = a3[8];
    v19 = v4 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = *(void **)((char *)a2 + v18);
    *(_QWORD *)v19 = v21;
    *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
    v22 = (_OWORD *)(v19 + 24);
    v23 = (_OWORD *)(v20 + 24);
    v24 = *(unsigned __int8 *)(v20 + 280);
    v25 = v21;
    switch(v24)
    {
      case 0:
        v26 = *(_QWORD *)(v20 + 48);
        if (v26)
        {
          *(_QWORD *)(v19 + 48) = v26;
          (**(void (***)(uint64_t, uint64_t))(v26 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          v54 = *(_OWORD *)(v20 + 40);
          *v22 = *v23;
          *(_OWORD *)(v19 + 40) = v54;
        }
        v55 = (_OWORD *)(v19 + 56);
        v56 = (_OWORD *)(v20 + 56);
        v57 = *(_QWORD *)(v20 + 80);
        if (v57)
        {
          *(_QWORD *)(v19 + 80) = v57;
          (**(void (***)(_OWORD *, _OWORD *))(v57 - 8))(v55, v56);
        }
        else
        {
          v65 = *(_OWORD *)(v20 + 72);
          *v55 = *v56;
          *(_OWORD *)(v19 + 72) = v65;
        }
        *(_BYTE *)(v19 + 280) = 0;
        break;
      case 1:
        v27 = *(_QWORD *)(v20 + 48);
        if (v27)
        {
          *(_QWORD *)(v19 + 48) = v27;
          (**(void (***)(uint64_t, uint64_t))(v27 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          v58 = *(_OWORD *)(v20 + 40);
          *v22 = *v23;
          *(_OWORD *)(v19 + 40) = v58;
        }
        v59 = 1;
        goto LABEL_50;
      case 18:
        v28 = *(void **)(v20 + 24);
        v29 = *(void **)(v20 + 32);
        *(_QWORD *)(v19 + 24) = v28;
        *(_QWORD *)(v19 + 32) = v29;
        v30 = 18;
        goto LABEL_19;
      case 19:
        v31 = *(void **)v23;
        *(_QWORD *)(v19 + 24) = *(_QWORD *)v23;
        v32 = 19;
        goto LABEL_32;
      case 20:
        v28 = *(void **)(v20 + 24);
        v29 = *(void **)(v20 + 32);
        *(_QWORD *)(v19 + 24) = v28;
        *(_QWORD *)(v19 + 32) = v29;
        v30 = 20;
        goto LABEL_19;
      case 21:
        v31 = *(void **)v23;
        *(_QWORD *)(v19 + 24) = *(_QWORD *)v23;
        v32 = 21;
        goto LABEL_32;
      case 28:
        v28 = *(void **)(v20 + 24);
        v29 = *(void **)(v20 + 32);
        *(_QWORD *)(v19 + 24) = v28;
        *(_QWORD *)(v19 + 32) = v29;
        v30 = 28;
        goto LABEL_19;
      case 29:
        v31 = *(void **)v23;
        *(_QWORD *)(v19 + 24) = *(_QWORD *)v23;
        v32 = 29;
        goto LABEL_32;
      case 30:
        v28 = *(void **)(v20 + 24);
        v29 = *(void **)(v20 + 32);
        *(_QWORD *)(v19 + 24) = v28;
        *(_QWORD *)(v19 + 32) = v29;
        v30 = 30;
LABEL_19:
        *(_BYTE *)(v19 + 280) = v30;
        v33 = v28;
        v34 = v29;
        break;
      case 31:
        v31 = *(void **)v23;
        *(_QWORD *)(v19 + 24) = *(_QWORD *)v23;
        v32 = 31;
        goto LABEL_32;
      case 32:
        v35 = *(_QWORD *)(v20 + 24);
        v36 = *(_QWORD *)(v20 + 32);
        *(_QWORD *)(v19 + 24) = v35;
        *(_QWORD *)(v19 + 32) = v36;
        v37 = 32;
        goto LABEL_28;
      case 33:
        v38 = *(_QWORD *)v23;
        *(_QWORD *)(v19 + 24) = *(_QWORD *)v23;
        v39 = 33;
        goto LABEL_30;
      case 34:
        v40 = *(_QWORD *)(v20 + 48);
        if (v40)
        {
          *(_QWORD *)(v19 + 48) = v40;
          (**(void (***)(uint64_t, uint64_t))(v40 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          v60 = *(_OWORD *)(v20 + 40);
          *v22 = *v23;
          *(_OWORD *)(v19 + 40) = v60;
        }
        v61 = (_OWORD *)(v19 + 56);
        v62 = (_OWORD *)(v20 + 56);
        v63 = *(_QWORD *)(v20 + 80);
        if (v63)
        {
          *(_QWORD *)(v19 + 80) = v63;
          (**(void (***)(_OWORD *, _OWORD *))(v63 - 8))(v61, v62);
        }
        else
        {
          v66 = *(_OWORD *)(v20 + 72);
          *v61 = *v62;
          *(_OWORD *)(v19 + 72) = v66;
        }
        v59 = 34;
        goto LABEL_50;
      case 35:
        v41 = *(_QWORD *)(v20 + 48);
        if (v41)
        {
          *(_QWORD *)(v19 + 48) = v41;
          (**(void (***)(uint64_t, uint64_t))(v41 - 8))(v19 + 24, v20 + 24);
        }
        else
        {
          v64 = *(_OWORD *)(v20 + 40);
          *v22 = *v23;
          *(_OWORD *)(v19 + 40) = v64;
        }
        v59 = 35;
LABEL_50:
        *(_BYTE *)(v19 + 280) = v59;
        break;
      case 36:
        v35 = *(_QWORD *)(v20 + 24);
        v36 = *(_QWORD *)(v20 + 32);
        *(_QWORD *)(v19 + 24) = v35;
        *(_QWORD *)(v19 + 32) = v36;
        v37 = 36;
LABEL_28:
        *(_BYTE *)(v19 + 280) = v37;
        swift_bridgeObjectRetain(v35);
        swift_bridgeObjectRetain(v36);
        break;
      case 37:
        v38 = *(_QWORD *)v23;
        *(_QWORD *)(v19 + 24) = *(_QWORD *)v23;
        v39 = 37;
LABEL_30:
        *(_BYTE *)(v19 + 280) = v39;
        swift_bridgeObjectRetain(v38);
        break;
      case 58:
        *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
        *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
        *(_BYTE *)(v19 + 56) = *(_BYTE *)(v20 + 56);
        v31 = *(void **)(v20 + 64);
        *(_QWORD *)(v19 + 64) = v31;
        *(_BYTE *)(v19 + 72) = *(_BYTE *)(v20 + 72);
        v32 = 58;
LABEL_32:
        *(_BYTE *)(v19 + 280) = v32;
        v42 = v31;
        break;
      case 63:
        v43 = *(_OWORD *)(v20 + 40);
        *v22 = *v23;
        *(_OWORD *)(v19 + 40) = v43;
        *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
        *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
        v44 = *(void **)(v20 + 88);
        v45 = *(void **)(v20 + 96);
        *(_QWORD *)(v19 + 88) = v44;
        *(_QWORD *)(v19 + 96) = v45;
        v46 = *(void **)(v20 + 104);
        v47 = *(void **)(v20 + 112);
        *(_QWORD *)(v19 + 104) = v46;
        *(_QWORD *)(v19 + 112) = v47;
        v48 = 63;
        goto LABEL_35;
      case 64:
        v49 = *(_OWORD *)(v20 + 40);
        *v22 = *v23;
        *(_OWORD *)(v19 + 40) = v49;
        v44 = *(void **)(v20 + 56);
        v45 = *(void **)(v20 + 64);
        *(_QWORD *)(v19 + 56) = v44;
        *(_QWORD *)(v19 + 64) = v45;
        v46 = *(void **)(v20 + 72);
        v47 = *(void **)(v20 + 80);
        *(_QWORD *)(v19 + 72) = v46;
        *(_QWORD *)(v19 + 80) = v47;
        v48 = 64;
LABEL_35:
        *(_BYTE *)(v19 + 280) = v48;
        v50 = v44;
        v51 = v45;
        v52 = v46;
        v53 = v47;
        break;
      default:
        memcpy((void *)(v19 + 24), (const void *)(v20 + 24), 0x101uLL);
        break;
    }
    v67 = *(void **)(v20 + 288);
    *(_QWORD *)(v19 + 288) = v67;
    *(_DWORD *)(v19 + 296) = *(_DWORD *)(v20 + 296);
    v68 = a3[9];
    v69 = (char *)(v4 + v68);
    v70 = (char *)a2 + v68;
    v71 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v72 = *(_QWORD *)(v71 - 8);
    v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
    v74 = v67;
    if (v73(v70, 1, v71))
    {
      v75 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      v93((uint64_t)v69, (uint64_t)v70, v17);
      v76 = *(int *)(v71 + 20);
      v77 = &v69[v76];
      v78 = &v70[v76];
      v79 = *((_QWORD *)v78 + 1);
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *((_QWORD *)v77 + 1) = v79;
      v80 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v72 + 56);
      v81 = swift_retain(v79);
      v80(v69, 0, 1, v71, v81);
    }
    v82 = a3[10];
    v83 = (char *)(v4 + v82);
    v84 = (char *)a2 + v82;
    if (v73(v84, 1, v71))
    {
      v85 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v93((uint64_t)v83, (uint64_t)v84, v17);
      v86 = *(int *)(v71 + 20);
      v87 = &v83[v86];
      v88 = &v84[v86];
      v89 = *((_QWORD *)v88 + 1);
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *((_QWORD *)v87 + 1) = v89;
      v90 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v72 + 56);
      v91 = swift_retain(v89);
      v90(v83, 0, 1, v71, v91);
    }
  }
  return v4;
}

double sub_1004E97E4(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  char *v7;
  _QWORD *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  __n128 v13;
  char *v14;
  double result;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 1);
  if (a1[9])
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 6);
  v4 = (char *)a1 + a2[7];
  v5 = type metadata accessor for UUID(0);
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = (char *)a1 + a2[8];

  v8 = v7 + 24;
  switch(v7[280])
  {
    case 0:
    case 34:
      if (*((_QWORD *)v7 + 6))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
      if (*((_QWORD *)v7 + 10))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)v7 + 7);
      break;
    case 1:
    case 35:
      if (*((_QWORD *)v7 + 6))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
      break;
    case 18:
    case 20:
    case 28:
    case 30:

      v9 = (void *)*((_QWORD *)v7 + 4);
      goto LABEL_6;
    case 19:
    case 21:
    case 29:
    case 31:
      v9 = (void *)*v8;
      goto LABEL_6;
    case 32:
    case 36:
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 3));
      swift_bridgeObjectRelease(*((_QWORD *)v7 + 4));
      break;
    case 33:
    case 37:
      swift_bridgeObjectRelease(*v8);
      break;
    case 58:
      v9 = (void *)*((_QWORD *)v7 + 8);
      goto LABEL_6;
    case 63:

      v9 = (void *)*((_QWORD *)v7 + 14);
      goto LABEL_6;
    case 64:

      v9 = (void *)*((_QWORD *)v7 + 10);
LABEL_6:

      break;
    default:
      break;
  }

  v10 = (char *)a1 + a2[9];
  v11 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
  if (!v12(v10, 1, v11))
  {
    v6(v10, v5);
    v13 = swift_release(*(_QWORD *)&v10[*(int *)(v11 + 20) + 8]);
  }
  v14 = (char *)a1 + a2[10];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v12)(v14, 1, v11, v13))
  {
    v6(v14, v5);
    *(_QWORD *)&result = swift_release(*(_QWORD *)&v14[*(int *)(v11 + 20) + 8]).n128_u64[0];
  }
  return result;
}

uint64_t sub_1004E99E4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _OWORD *v20;
  _OWORD *v21;
  int v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char v28;
  void *v29;
  char v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  __int128 v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char v46;
  __int128 v47;
  id v48;
  id v49;
  id v50;
  id v51;
  __int128 v52;
  __int128 v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD *v60;
  _OWORD *v61;
  uint64_t v62;
  __int128 v63;
  void *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  id v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v88;
  void (*v90)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  v7 = (_OWORD *)(a1 + 48);
  v8 = (_OWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 72);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v9;
    *(_QWORD *)(a1 + 80) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 64);
    *v7 = *v8;
    *(_OWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for UUID(0);
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v90(v13, v14, v15);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(void **)(a2 + v16);
  *(_QWORD *)v17 = v19;
  *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
  v20 = (_OWORD *)(v17 + 24);
  v21 = (_OWORD *)(v18 + 24);
  v22 = *(unsigned __int8 *)(v18 + 280);
  v23 = v19;
  switch(v22)
  {
    case 0:
      v24 = *(_QWORD *)(v18 + 48);
      if (v24)
      {
        *(_QWORD *)(v17 + 48) = v24;
        (**(void (***)(uint64_t, uint64_t))(v24 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        v59 = *(_OWORD *)(v18 + 40);
        *v20 = *v21;
        *(_OWORD *)(v17 + 40) = v59;
      }
      v60 = (_OWORD *)(v17 + 56);
      v61 = (_OWORD *)(v18 + 56);
      v62 = *(_QWORD *)(v18 + 80);
      if (v62)
      {
        *(_QWORD *)(v17 + 80) = v62;
        (**(void (***)(_OWORD *, _OWORD *))(v62 - 8))(v60, v61);
      }
      else
      {
        v63 = *(_OWORD *)(v18 + 72);
        *v60 = *v61;
        *(_OWORD *)(v17 + 72) = v63;
      }
      *(_BYTE *)(v17 + 280) = 0;
      break;
    case 1:
      v25 = *(_QWORD *)(v18 + 48);
      if (v25)
      {
        *(_QWORD *)(v17 + 48) = v25;
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        v52 = *(_OWORD *)(v18 + 40);
        *v20 = *v21;
        *(_OWORD *)(v17 + 40) = v52;
      }
      *(_BYTE *)(v17 + 280) = 1;
      break;
    case 18:
      v26 = *(void **)(v18 + 24);
      v27 = *(void **)(v18 + 32);
      *(_QWORD *)(v17 + 24) = v26;
      *(_QWORD *)(v17 + 32) = v27;
      v28 = 18;
      goto LABEL_17;
    case 19:
      v29 = *(void **)v21;
      *(_QWORD *)(v17 + 24) = *(_QWORD *)v21;
      v30 = 19;
      goto LABEL_30;
    case 20:
      v26 = *(void **)(v18 + 24);
      v27 = *(void **)(v18 + 32);
      *(_QWORD *)(v17 + 24) = v26;
      *(_QWORD *)(v17 + 32) = v27;
      v28 = 20;
      goto LABEL_17;
    case 21:
      v29 = *(void **)v21;
      *(_QWORD *)(v17 + 24) = *(_QWORD *)v21;
      v30 = 21;
      goto LABEL_30;
    case 28:
      v26 = *(void **)(v18 + 24);
      v27 = *(void **)(v18 + 32);
      *(_QWORD *)(v17 + 24) = v26;
      *(_QWORD *)(v17 + 32) = v27;
      v28 = 28;
      goto LABEL_17;
    case 29:
      v29 = *(void **)v21;
      *(_QWORD *)(v17 + 24) = *(_QWORD *)v21;
      v30 = 29;
      goto LABEL_30;
    case 30:
      v26 = *(void **)(v18 + 24);
      v27 = *(void **)(v18 + 32);
      *(_QWORD *)(v17 + 24) = v26;
      *(_QWORD *)(v17 + 32) = v27;
      v28 = 30;
LABEL_17:
      *(_BYTE *)(v17 + 280) = v28;
      v31 = v26;
      v32 = v27;
      break;
    case 31:
      v29 = *(void **)v21;
      *(_QWORD *)(v17 + 24) = *(_QWORD *)v21;
      v30 = 31;
      goto LABEL_30;
    case 32:
      v33 = *(_QWORD *)(v18 + 24);
      v34 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 24) = v33;
      *(_QWORD *)(v17 + 32) = v34;
      v35 = 32;
      goto LABEL_26;
    case 33:
      v36 = *(_QWORD *)v21;
      *(_QWORD *)(v17 + 24) = *(_QWORD *)v21;
      v37 = 33;
      goto LABEL_28;
    case 34:
      v38 = *(_QWORD *)(v18 + 48);
      if (v38)
      {
        *(_QWORD *)(v17 + 48) = v38;
        (**(void (***)(uint64_t, uint64_t))(v38 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        v53 = *(_OWORD *)(v18 + 40);
        *v20 = *v21;
        *(_OWORD *)(v17 + 40) = v53;
      }
      v54 = (_OWORD *)(v17 + 56);
      v55 = (_OWORD *)(v18 + 56);
      v56 = *(_QWORD *)(v18 + 80);
      if (v56)
      {
        *(_QWORD *)(v17 + 80) = v56;
        (**(void (***)(_OWORD *, _OWORD *))(v56 - 8))(v54, v55);
      }
      else
      {
        v58 = *(_OWORD *)(v18 + 72);
        *v54 = *v55;
        *(_OWORD *)(v17 + 72) = v58;
      }
      *(_BYTE *)(v17 + 280) = 34;
      break;
    case 35:
      v39 = *(_QWORD *)(v18 + 48);
      if (v39)
      {
        *(_QWORD *)(v17 + 48) = v39;
        (**(void (***)(uint64_t, uint64_t))(v39 - 8))(v17 + 24, v18 + 24);
      }
      else
      {
        v57 = *(_OWORD *)(v18 + 40);
        *v20 = *v21;
        *(_OWORD *)(v17 + 40) = v57;
      }
      *(_BYTE *)(v17 + 280) = 35;
      break;
    case 36:
      v33 = *(_QWORD *)(v18 + 24);
      v34 = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 24) = v33;
      *(_QWORD *)(v17 + 32) = v34;
      v35 = 36;
LABEL_26:
      *(_BYTE *)(v17 + 280) = v35;
      swift_bridgeObjectRetain(v33);
      swift_bridgeObjectRetain(v34);
      break;
    case 37:
      v36 = *(_QWORD *)v21;
      *(_QWORD *)(v17 + 24) = *(_QWORD *)v21;
      v37 = 37;
LABEL_28:
      *(_BYTE *)(v17 + 280) = v37;
      swift_bridgeObjectRetain(v36);
      break;
    case 58:
      *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 40) = *(_OWORD *)(v18 + 40);
      *(_BYTE *)(v17 + 56) = *(_BYTE *)(v18 + 56);
      v29 = *(void **)(v18 + 64);
      *(_QWORD *)(v17 + 64) = v29;
      *(_BYTE *)(v17 + 72) = *(_BYTE *)(v18 + 72);
      v30 = 58;
LABEL_30:
      *(_BYTE *)(v17 + 280) = v30;
      v40 = v29;
      break;
    case 63:
      v41 = *(_OWORD *)(v18 + 40);
      *v20 = *v21;
      *(_OWORD *)(v17 + 40) = v41;
      *(_OWORD *)(v17 + 56) = *(_OWORD *)(v18 + 56);
      *(_OWORD *)(v17 + 72) = *(_OWORD *)(v18 + 72);
      v42 = *(void **)(v18 + 88);
      v43 = *(void **)(v18 + 96);
      *(_QWORD *)(v17 + 88) = v42;
      *(_QWORD *)(v17 + 96) = v43;
      v44 = *(void **)(v18 + 104);
      v45 = *(void **)(v18 + 112);
      *(_QWORD *)(v17 + 104) = v44;
      *(_QWORD *)(v17 + 112) = v45;
      v46 = 63;
      goto LABEL_33;
    case 64:
      v47 = *(_OWORD *)(v18 + 40);
      *v20 = *v21;
      *(_OWORD *)(v17 + 40) = v47;
      v42 = *(void **)(v18 + 56);
      v43 = *(void **)(v18 + 64);
      *(_QWORD *)(v17 + 56) = v42;
      *(_QWORD *)(v17 + 64) = v43;
      v44 = *(void **)(v18 + 72);
      v45 = *(void **)(v18 + 80);
      *(_QWORD *)(v17 + 72) = v44;
      *(_QWORD *)(v17 + 80) = v45;
      v46 = 64;
LABEL_33:
      *(_BYTE *)(v17 + 280) = v46;
      v48 = v42;
      v49 = v43;
      v50 = v44;
      v51 = v45;
      break;
    default:
      memcpy((void *)(v17 + 24), (const void *)(v18 + 24), 0x101uLL);
      break;
  }
  v64 = *(void **)(v18 + 288);
  *(_QWORD *)(v17 + 288) = v64;
  *(_DWORD *)(v17 + 296) = *(_DWORD *)(v18 + 296);
  v65 = a3[9];
  v66 = (char *)(a1 + v65);
  v67 = (char *)(a2 + v65);
  v68 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  v71 = v64;
  if (v70(v67, 1, v68))
  {
    v72 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    v90((uint64_t)v66, (uint64_t)v67, v15);
    v73 = *(int *)(v68 + 20);
    v74 = &v66[v73];
    v75 = &v67[v73];
    v76 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *((_QWORD *)v74 + 1) = v76;
    v77 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v69 + 56);
    v78 = swift_retain(v76);
    v77(v66, 0, 1, v68, v78);
  }
  v79 = a3[10];
  v80 = (char *)(a1 + v79);
  v81 = (char *)(a2 + v79);
  if (v70(v81, 1, v68))
  {
    v82 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    v90((uint64_t)v80, (uint64_t)v81, v15);
    v83 = *(int *)(v68 + 20);
    v84 = &v80[v83];
    v85 = &v81[v83];
    v86 = *((_QWORD *)v85 + 1);
    *(_QWORD *)v84 = *(_QWORD *)v85;
    *((_QWORD *)v84 + 1) = v86;
    v87 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v69 + 56);
    v88 = swift_retain(v86);
    v87(v80, 0, 1, v68, v88);
  }
  return a1;
}

uint64_t sub_1004E9F10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  id v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  char v45;
  __int128 v46;
  id v47;
  id v48;
  id v49;
  id v50;
  __int128 v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  __int128 v57;
  _OWORD *v58;
  _OWORD *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  void *v64;
  void *v65;
  id v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  int v85;
  int v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v92;
  uint64_t v93;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1004EA5C8((_QWORD *)(a1 + 8), (_QWORD *)(a2 + 8));
  v6 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (v6)
    {
      sub_1004EA5C8((_QWORD *)(a1 + 48), (_QWORD *)(a2 + 48));
      goto LABEL_8;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 48));
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 72) = v6;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 48, a2 + 48);
    goto LABEL_8;
  }
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
LABEL_8:
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  v106 = *(_QWORD *)(v12 - 8);
  v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 24);
  v105(v10, v11, v12);
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(void **)(a2 + v13);
  v17 = *(void **)v14;
  *(_QWORD *)v14 = v16;
  v18 = v16;

  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  if (a1 != a2)
  {
    v19 = (_OWORD *)(v14 + 24);
    v20 = (_OWORD *)(v15 + 24);
    sub_1004EA730((_QWORD *)(v14 + 24));
    switch(*(_BYTE *)(v15 + 280))
    {
      case 0:
        v21 = *(_QWORD *)(v15 + 48);
        if (v21)
        {
          *(_QWORD *)(v14 + 48) = v21;
          (**(void (***)(uint64_t, uint64_t))(v21 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          v51 = *(_OWORD *)(v15 + 40);
          *v19 = *v20;
          *(_OWORD *)(v14 + 40) = v51;
        }
        v52 = (_OWORD *)(v14 + 56);
        v53 = (_OWORD *)(v15 + 56);
        v54 = *(_QWORD *)(v15 + 80);
        if (v54)
        {
          *(_QWORD *)(v14 + 80) = v54;
          (**(void (***)(_OWORD *, _OWORD *))(v54 - 8))(v52, v53);
        }
        else
        {
          v62 = *(_OWORD *)(v15 + 72);
          *v52 = *v53;
          *(_OWORD *)(v14 + 72) = v62;
        }
        *(_BYTE *)(v14 + 280) = 0;
        break;
      case 1:
        v22 = *(_QWORD *)(v15 + 48);
        if (v22)
        {
          *(_QWORD *)(v14 + 48) = v22;
          (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          v55 = *(_OWORD *)(v15 + 40);
          *v19 = *v20;
          *(_OWORD *)(v14 + 40) = v55;
        }
        v56 = 1;
        goto LABEL_53;
      case 0x12:
        v23 = *(void **)(v15 + 24);
        *(_QWORD *)(v14 + 24) = v23;
        v24 = *(void **)(v15 + 32);
        *(_QWORD *)(v14 + 32) = v24;
        v25 = 18;
        goto LABEL_22;
      case 0x13:
        v26 = *(void **)v20;
        *(_QWORD *)(v14 + 24) = *(_QWORD *)v20;
        v27 = 19;
        goto LABEL_35;
      case 0x14:
        v23 = *(void **)(v15 + 24);
        *(_QWORD *)(v14 + 24) = v23;
        v24 = *(void **)(v15 + 32);
        *(_QWORD *)(v14 + 32) = v24;
        v25 = 20;
        goto LABEL_22;
      case 0x15:
        v26 = *(void **)v20;
        *(_QWORD *)(v14 + 24) = *(_QWORD *)v20;
        v27 = 21;
        goto LABEL_35;
      case 0x1C:
        v23 = *(void **)(v15 + 24);
        *(_QWORD *)(v14 + 24) = v23;
        v24 = *(void **)(v15 + 32);
        *(_QWORD *)(v14 + 32) = v24;
        v25 = 28;
        goto LABEL_22;
      case 0x1D:
        v26 = *(void **)v20;
        *(_QWORD *)(v14 + 24) = *(_QWORD *)v20;
        v27 = 29;
        goto LABEL_35;
      case 0x1E:
        v23 = *(void **)(v15 + 24);
        *(_QWORD *)(v14 + 24) = v23;
        v24 = *(void **)(v15 + 32);
        *(_QWORD *)(v14 + 32) = v24;
        v25 = 30;
LABEL_22:
        *(_BYTE *)(v14 + 280) = v25;
        v28 = v23;
        v29 = v24;
        break;
      case 0x1F:
        v26 = *(void **)v20;
        *(_QWORD *)(v14 + 24) = *(_QWORD *)v20;
        v27 = 31;
        goto LABEL_35;
      case 0x20:
        v30 = *(_QWORD *)(v15 + 24);
        *(_QWORD *)(v14 + 24) = v30;
        v31 = *(_QWORD *)(v15 + 32);
        *(_QWORD *)(v14 + 32) = v31;
        v32 = 32;
        goto LABEL_31;
      case 0x21:
        v33 = *(_QWORD *)v20;
        *(_QWORD *)(v14 + 24) = *(_QWORD *)v20;
        v34 = 33;
        goto LABEL_33;
      case 0x22:
        v35 = *(_QWORD *)(v15 + 48);
        if (v35)
        {
          *(_QWORD *)(v14 + 48) = v35;
          (**(void (***)(uint64_t, uint64_t))(v35 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          v57 = *(_OWORD *)(v15 + 40);
          *v19 = *v20;
          *(_OWORD *)(v14 + 40) = v57;
        }
        v58 = (_OWORD *)(v14 + 56);
        v59 = (_OWORD *)(v15 + 56);
        v60 = *(_QWORD *)(v15 + 80);
        if (v60)
        {
          *(_QWORD *)(v14 + 80) = v60;
          (**(void (***)(_OWORD *, _OWORD *))(v60 - 8))(v58, v59);
        }
        else
        {
          v63 = *(_OWORD *)(v15 + 72);
          *v58 = *v59;
          *(_OWORD *)(v14 + 72) = v63;
        }
        v56 = 34;
        goto LABEL_53;
      case 0x23:
        v36 = *(_QWORD *)(v15 + 48);
        if (v36)
        {
          *(_QWORD *)(v14 + 48) = v36;
          (**(void (***)(uint64_t, uint64_t))(v36 - 8))(v14 + 24, v15 + 24);
        }
        else
        {
          v61 = *(_OWORD *)(v15 + 40);
          *v19 = *v20;
          *(_OWORD *)(v14 + 40) = v61;
        }
        v56 = 35;
LABEL_53:
        *(_BYTE *)(v14 + 280) = v56;
        break;
      case 0x24:
        v30 = *(_QWORD *)(v15 + 24);
        *(_QWORD *)(v14 + 24) = v30;
        v31 = *(_QWORD *)(v15 + 32);
        *(_QWORD *)(v14 + 32) = v31;
        v32 = 36;
LABEL_31:
        *(_BYTE *)(v14 + 280) = v32;
        swift_bridgeObjectRetain(v30);
        swift_bridgeObjectRetain(v31);
        break;
      case 0x25:
        v33 = *(_QWORD *)v20;
        *(_QWORD *)(v14 + 24) = *(_QWORD *)v20;
        v34 = 37;
LABEL_33:
        *(_BYTE *)(v14 + 280) = v34;
        swift_bridgeObjectRetain(v33);
        break;
      case 0x3A:
        *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
        *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
        v37 = *(_OWORD *)(v15 + 40);
        *(_BYTE *)(v14 + 56) = *(_BYTE *)(v15 + 56);
        *(_OWORD *)(v14 + 40) = v37;
        v26 = *(void **)(v15 + 64);
        *(_QWORD *)(v14 + 64) = v26;
        *(_BYTE *)(v14 + 72) = *(_BYTE *)(v15 + 72);
        v27 = 58;
LABEL_35:
        *(_BYTE *)(v14 + 280) = v27;
        v38 = v26;
        break;
      case 0x3F:
        v39 = *(_OWORD *)(v15 + 40);
        *v19 = *v20;
        *(_OWORD *)(v14 + 40) = v39;
        v40 = *(_OWORD *)(v15 + 56);
        *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
        *(_OWORD *)(v14 + 56) = v40;
        v41 = *(void **)(v15 + 88);
        *(_QWORD *)(v14 + 88) = v41;
        v42 = *(void **)(v15 + 96);
        *(_QWORD *)(v14 + 96) = v42;
        v43 = *(void **)(v15 + 104);
        *(_QWORD *)(v14 + 104) = v43;
        v44 = *(void **)(v15 + 112);
        *(_QWORD *)(v14 + 112) = v44;
        v45 = 63;
        goto LABEL_38;
      case 0x40:
        v46 = *(_OWORD *)(v15 + 40);
        *v19 = *v20;
        *(_OWORD *)(v14 + 40) = v46;
        v41 = *(void **)(v15 + 56);
        *(_QWORD *)(v14 + 56) = v41;
        v42 = *(void **)(v15 + 64);
        *(_QWORD *)(v14 + 64) = v42;
        v43 = *(void **)(v15 + 72);
        *(_QWORD *)(v14 + 72) = v43;
        v44 = *(void **)(v15 + 80);
        *(_QWORD *)(v14 + 80) = v44;
        v45 = 64;
LABEL_38:
        *(_BYTE *)(v14 + 280) = v45;
        v47 = v41;
        v48 = v42;
        v49 = v43;
        v50 = v44;
        break;
      default:
        memcpy((void *)(v14 + 24), (const void *)(v15 + 24), 0x101uLL);
        break;
    }
  }
  v64 = *(void **)(v14 + 288);
  v65 = *(void **)(v15 + 288);
  *(_QWORD *)(v14 + 288) = v65;
  v66 = v65;

  *(_BYTE *)(v14 + 296) = *(_BYTE *)(v15 + 296);
  *(_BYTE *)(v14 + 297) = *(_BYTE *)(v15 + 297);
  *(_BYTE *)(v14 + 298) = *(_BYTE *)(v15 + 298);
  *(_BYTE *)(v14 + 299) = *(_BYTE *)(v15 + 299);
  v67 = a3[9];
  v68 = (char *)(a1 + v67);
  v69 = (char *)(a2 + v67);
  v70 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v71 = *(_QWORD *)(v70 - 8);
  v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
  v73 = v72(v68, 1, v70);
  v74 = v72(v69, 1, v70);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v68, v69, v12);
      v75 = *(int *)(v70 + 20);
      v76 = &v68[v75];
      v77 = &v69[v75];
      v78 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v78;
      v79 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v71 + 56);
      v80 = swift_retain(v78);
      v79(v68, 0, 1, v70, v80);
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  if (v74)
  {
    sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_59:
    v81 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_60;
  }
  v105((uint64_t)v68, (uint64_t)v69, v12);
  v95 = *(int *)(v70 + 20);
  v96 = &v68[v95];
  v97 = &v69[v95];
  v98 = *((_QWORD *)v97 + 1);
  v99 = *((_QWORD *)v96 + 1);
  *(_QWORD *)v96 = *(_QWORD *)v97;
  *((_QWORD *)v96 + 1) = v98;
  swift_retain(v98);
  swift_release(v99);
LABEL_60:
  v82 = a3[10];
  v83 = (char *)(a1 + v82);
  v84 = (char *)(a2 + v82);
  v85 = v72((char *)(a1 + v82), 1, v70);
  v86 = v72(v84, 1, v70);
  if (!v85)
  {
    if (!v86)
    {
      v105((uint64_t)v83, (uint64_t)v84, v12);
      v100 = *(int *)(v70 + 20);
      v101 = &v83[v100];
      v102 = &v84[v100];
      v103 = *((_QWORD *)v102 + 1);
      v104 = *((_QWORD *)v101 + 1);
      *(_QWORD *)v101 = *(_QWORD *)v102;
      *((_QWORD *)v101 + 1) = v103;
      swift_retain(v103);
      swift_release(v104);
      return a1;
    }
    sub_1004B84A4((uint64_t)v83, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_65;
  }
  if (v86)
  {
LABEL_65:
    v93 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v83, v84, v12);
  v87 = *(int *)(v70 + 20);
  v88 = &v83[v87];
  v89 = &v84[v87];
  v90 = *((_QWORD *)v89 + 1);
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *((_QWORD *)v88 + 1) = v90;
  v91 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v71 + 56);
  v92 = swift_retain(v90);
  v91(v83, 0, 1, v70, v92);
  return a1;
}

_QWORD *sub_1004EA5C8(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

_QWORD *sub_1004EA730(_QWORD *a1)
{
  destroy for CRLLayerPropertyTransitionDescriptor(a1);
  return a1;
}

uint64_t sub_1004EA764(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 8) = v6;
  v10 = type metadata accessor for UUID(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  memcpy((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), 0x12CuLL);
  v12 = a3[9];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v13, (uint64_t)v14, v10);
    *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = a3[10];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  if (v17(v21, 1, v15))
  {
    v22 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v20, (uint64_t)v21, v10);
    *(_OWORD *)&v20[*(int *)(v15 + 20)] = *(_OWORD *)&v21[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1004EA92C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 72))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 48));
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  v37 = *(_QWORD *)(v10 - 8);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 40);
  v36(v8, v9, v10);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
  if (a1 != a2)
  {
    sub_1004EA730((_QWORD *)(v12 + 24));
    memcpy((void *)(v12 + 24), (const void *)(v13 + 24), 0x101uLL);
  }
  v15 = *(void **)(v12 + 288);
  *(_QWORD *)(v12 + 288) = *(_QWORD *)(v13 + 288);

  *(_BYTE *)(v12 + 296) = *(_BYTE *)(v13 + 296);
  *(_WORD *)(v12 + 297) = *(_WORD *)(v13 + 297);
  *(_BYTE *)(v12 + 299) = *(_BYTE *)(v13 + 299);
  v16 = a3[9];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v17, v18, v10);
      *(_OWORD *)&v17[*(int *)(v19 + 20)] = *(_OWORD *)&v18[*(int *)(v19 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v23)
  {
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_10:
    v24 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_11;
  }
  v36((uint64_t)v17, (uint64_t)v18, v10);
  v32 = *(int *)(v19 + 20);
  v33 = *(_QWORD *)&v17[v32 + 8];
  *(_OWORD *)&v17[v32] = *(_OWORD *)&v18[v32];
  swift_release(v33);
LABEL_11:
  v25 = a3[10];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = v21((char *)(a1 + v25), 1, v19);
  v29 = v21(v27, 1, v19);
  if (!v28)
  {
    if (!v29)
    {
      v36((uint64_t)v26, (uint64_t)v27, v10);
      v34 = *(int *)(v19 + 20);
      v35 = *(_QWORD *)&v26[v34 + 8];
      *(_OWORD *)&v26[v34] = *(_OWORD *)&v27[v34];
      swift_release(v35);
      return a1;
    }
    sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_16;
  }
  if (v29)
  {
LABEL_16:
    v30 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v26, v27, v10);
  *(_OWORD *)&v26[*(int *)(v19 + 20)] = *(_OWORD *)&v27[*(int *)(v19 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v26, 0, 1, v19);
  return a1;
}

uint64_t sub_1004EAC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004EAC5C);
}

uint64_t sub_1004EAC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013E06C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1004EAD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004EAD0C);
}

uint64_t sub_1004EAD0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013E06C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1004EADAC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t v8;

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[1] = "P";
  v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    v6[4] = &unk_100EF65A0;
    sub_1004EAE54(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 7, v6, a1 + 16);
    }
  }
}

void sub_1004EAE54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E0730)
  {
    v2 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E0730);
  }
}

uint64_t sub_1004EAEA8()
{
  return sub_1004B7878(&qword_1013E0778, type metadata accessor for CRLTweenLayerAnimation, (uint64_t)&unk_100EF6608);
}

uint64_t sub_1004EAED4(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_1013E0780, type metadata accessor for CRLTweenLayerAnimation, (uint64_t)&unk_100EF65C8);
  *(_QWORD *)(a1 + 48) = result;
  return result;
}

uint64_t sub_1004EAF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLTweenLayerAnimation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EAF54(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for CRLTweenLayerAnimation(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004CB7BC((uint64_t)(a1 + 6), (uint64_t)&v18, &qword_1013EA650);
  if (v19)
  {
    sub_1004DB728(&v18, (uint64_t)v20);
    sub_1004CB7BC(a2 + 48, (uint64_t)&v16, &qword_1013EA650);
    if (v17)
    {
      sub_1004DB728(&v16, (uint64_t)&v18);
      v7 = v21;
      v8 = v22;
      sub_1004BB5A4(v20, v21);
      v9 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v8 + 128))(&v18, v7, v8);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v18);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
      goto LABEL_9;
    }
    sub_1004CB800((uint64_t)&v16, &qword_1013EA650);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
  }
  else
  {
    sub_1004CB800((uint64_t)&v18, &qword_1013EA650);
  }
  sub_1004CB7BC((uint64_t)(a1 + 6), (uint64_t)v20, &qword_1013EA650);
  v10 = v21;
  sub_1004CB800((uint64_t)v20, &qword_1013EA650);
  sub_1004E9244(a2, (uint64_t)v6);
  if (v10)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLTweenLayerAnimation);
    v9 = 0;
  }
  else
  {
    sub_1004CB7BC((uint64_t)(v6 + 48), (uint64_t)v20, &qword_1013EA650);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLTweenLayerAnimation);
    v9 = v21 == 0;
    sub_1004CB800((uint64_t)v20, &qword_1013EA650);
  }
LABEL_9:
  v11 = a1 + 1;
  v13 = a1[4];
  v12 = a1[5];
  sub_1004BB5A4(v11, v13);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 128))(a2 + 8, v13, v12) & v9 & 1;
}

unint64_t sub_1004EB138()
{
  unint64_t result;

  result = qword_101406CA0;
  if (!qword_101406CA0)
  {
    result = swift_getWitnessTable(&unk_100EF9D48, &type metadata for CRLBasicLayerAnimation.Def);
    atomic_store(result, (unint64_t *)&qword_101406CA0);
  }
  return result;
}

uint64_t sub_1004EB17C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v1 = (_QWORD *)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = (void *)*v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease(*v1);
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

unint64_t sub_1004EB280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E7790;
  if (!qword_1013E7790)
  {
    v1 = objc_opt_self(CALayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E7790);
  }
  return result;
}

uint64_t sub_1004EB2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F04B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EB304(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1004EB33C + 4 * byte_100EF66A0[a1]))(0x7461446569766F6DLL, 0xE900000000000061);
}

uint64_t sub_1004EB33C()
{
  return 0x6D49726574736F70;
}

uint64_t sub_1004EB360()
{
  return 0x6954726574736F70;
}

uint64_t sub_1004EB37C()
{
  return 0x6D69547472617473;
}

uint64_t sub_1004EB394()
{
  return 0x656D6954646E65;
}

uint64_t sub_1004EB3AC()
{
  return 0x4F6F696475417369;
}

uint64_t sub_1004EB3CC()
{
  return 0x656C746974;
}

uint64_t sub_1004EB3E0()
{
  return 0x726F7461657263;
}

uint64_t sub_1004EB3F8()
{
  return 0x6E69706F6F4C7369;
}

unint64_t sub_1004EB410()
{
  return 0xD000000000000010;
}

BOOL sub_1004EB42C(char *a1, char *a2)
{
  return qword_100EF7210[*a1] == qword_100EF7210[*a2];
}

Swift::Int sub_1004EB450()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100EF7210[v1]);
  return Hasher._finalize()();
}

void sub_1004EB49C()
{
  char *v0;

  Hasher._combine(_:)(qword_100EF7210[*v0]);
}

Swift::Int sub_1004EB4D0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100EF7210[v2]);
  return Hasher._finalize()();
}

uint64_t sub_1004EB518@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1004F2A34(*a1);
  *a2 = result;
  return result;
}

void sub_1004EB540(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100EF7210[*v1];
}

uint64_t sub_1004EB558()
{
  unsigned __int8 *v0;

  return sub_1004EB304(*v0);
}

uint64_t sub_1004EB560@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004F2A58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004EB584()
{
  char *v0;

  return qword_100EF7210[*v0];
}

uint64_t sub_1004EB59C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1004F2A34(a1);
  *a2 = result;
  return result;
}

void sub_1004EB5C0(_QWORD *a1@<X8>)
{
  *a1 = &off_101263818;
}

uint64_t sub_1004EB5D0(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1004F0AF0, (uint64_t (*)(void))sub_1004F0B38);
}

uint64_t sub_1004EB5E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004F0B38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004EB60C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004F0B38();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1004EB634(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, __n128);
  uint64_t v27;
  __n128 v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, uint64_t, __n128);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;

  v2 = v1;
  v59 = a1;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v3);
  v58 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - v6;
  __chkstk_darwin(v8);
  v61 = (uint64_t)&v54 - v9;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLAssetData(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v57 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - v18;
  sub_1008FD5D8(v1, (uint64_t)v13);
  v55 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v55(v19, v13, v10);
  v20 = *(int *)(v14 + 20);
  v22 = *(_QWORD *)(v1 + v20);
  v21 = *(_QWORD *)(v1 + v20 + 8);
  v23 = *(_QWORD *)(v1 + *(int *)(v14 + 24));
  v24 = &v19[v20];
  *(_QWORD *)v24 = v22;
  *((_QWORD *)v24 + 1) = v21;
  v25 = *(int *)(v14 + 24);
  v60 = v19;
  *(_QWORD *)&v19[v25] = v23;
  v26 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v27 = v10;
  swift_bridgeObjectRetain(v21);
  v28 = swift_bridgeObjectRetain(v23);
  v56 = v26;
  v26(v13, v10, v28);
  v29 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  sub_1004CB7BC(v1 + v29[5], (uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
  v30 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) == 1)
  {
    sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013E9BE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v61, 1, 1, v14);
  }
  else
  {
    v31 = v57;
    sub_1004B84E0((uint64_t)v7, v57, type metadata accessor for CRLAssetData);
    sub_1008FD5D8(v31, (uint64_t)v13);
    v32 = (uint64_t)v58;
    v55(v58, v13, v27);
    v33 = *(int *)(v14 + 20);
    v35 = *(_QWORD *)(v31 + v33);
    v34 = *(_QWORD *)(v31 + v33 + 8);
    v36 = *(_QWORD *)(v31 + *(int *)(v14 + 24));
    v37 = (_QWORD *)(v32 + v33);
    *v37 = v35;
    v37[1] = v34;
    *(_QWORD *)(v32 + *(int *)(v14 + 24)) = v36;
    swift_bridgeObjectRetain(v34);
    v38 = swift_bridgeObjectRetain(v36);
    v56(v13, v27, v38);
    sub_1004B84A4(v31, type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v32, 0, 1, v14);
    sub_1004C4938(v32, v61, (uint64_t *)&unk_1013E9BE0);
  }
  v39 = *(_QWORD *)(v2 + v29[6]);
  v40 = *(_QWORD *)(v2 + v29[7]);
  v41 = *(_QWORD *)(v2 + v29[8]);
  v42 = *(_BYTE *)(v2 + v29[9]);
  v43 = (uint64_t *)(v2 + v29[10]);
  v45 = *v43;
  v44 = v43[1];
  v46 = (uint64_t *)(v2 + v29[11]);
  v48 = *v46;
  v47 = v46[1];
  v49 = *(_BYTE *)(v2 + v29[12]);
  v50 = *(_QWORD *)(v2 + v29[13]);
  v51 = v59;
  sub_1004B84E0((uint64_t)v60, v59, type metadata accessor for CRLAssetData);
  sub_1004C4938(v61, v51 + v29[5], (uint64_t *)&unk_1013E9BE0);
  *(_QWORD *)(v51 + v29[6]) = v39;
  *(_QWORD *)(v51 + v29[7]) = v40;
  *(_QWORD *)(v51 + v29[8]) = v41;
  *(_BYTE *)(v51 + v29[9]) = v42;
  v52 = (_QWORD *)(v51 + v29[10]);
  *v52 = v45;
  v52[1] = v44;
  v53 = (_QWORD *)(v51 + v29[11]);
  *v53 = v48;
  v53[1] = v47;
  *(_BYTE *)(v51 + v29[12]) = v49;
  *(_QWORD *)(v51 + v29[13]) = v50;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v50);
  swift_bridgeObjectRetain(v44);
}

uint64_t sub_1004EB9F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E0DB8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1004F0B38();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLMovieItemAssetData.CodingKeys, &type metadata for CRLMovieItemAssetData.CodingKeys, v11, v9, v10);
  LOBYTE(v32) = 0;
  v12 = type metadata accessor for CRLAssetData(0);
  v13 = sub_1004B7878(&qword_1013E0DC0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C58);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v32, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
    v15 = v3 + v14[5];
    LOBYTE(v32) = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v15, &v32, v5, v12, v13);
    v16 = *(double *)(v3 + v14[6]);
    LOBYTE(v32) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v32, v5, v16);
    v17 = *(double *)(v3 + v14[7]);
    LOBYTE(v32) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(&v32, v5, v17);
    v18 = *(double *)(v3 + v14[8]);
    LOBYTE(v32) = 4;
    KeyedEncodingContainer.encode(_:forKey:)(&v32, v5, v18);
    v19 = *(unsigned __int8 *)(v3 + v14[9]);
    LOBYTE(v32) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v19, &v32, v5);
    v20 = (uint64_t *)(v3 + v14[10]);
    v21 = *v20;
    v22 = v20[1];
    LOBYTE(v32) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, &v32, v5);
    v23 = (uint64_t *)(v3 + v14[11]);
    v24 = *v23;
    v25 = v23[1];
    LOBYTE(v32) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v24, v25, &v32, v5);
    v26 = *(unsigned __int8 *)(v3 + v14[12]);
    LOBYTE(v32) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v26, &v32, v5);
    v32 = *(_QWORD *)(v3 + v14[13]);
    v31 = 9;
    v27 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v28 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v32, &v31, v5, v27, v28);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1004EBCE4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(void);
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char v63;
  uint64_t v64;

  v52 = a2;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1004B804C(&qword_1013E0DA8);
  v9 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void (**)(void))(v7 + 56);
  v61 = &v15[*(int *)(v13 + 20)];
  v16();
  v17 = &v15[v12[10]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v60 = v17;
  v18 = &v15[v12[11]];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v59 = v18;
  v19 = v12[12];
  v15[v19] = 2;
  v56 = v12[13];
  v57 = a1;
  v62 = v15;
  *(_QWORD *)&v15[v56] = &_swiftEmptyDictionarySingleton;
  v20 = a1[3];
  v21 = a1[4];
  sub_1004BB5A4(a1, v20);
  v22 = sub_1004F0B38();
  v54 = v11;
  v23 = v58;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLMovieItemAssetData.CodingKeys, &type metadata for CRLMovieItemAssetData.CodingKeys, v22, v20, v21);
  if (v23)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v57);
    v26 = v60;
    v27 = v56;
    v28 = v59;
    v29 = (uint64_t)v62;
    sub_1004CB800((uint64_t)v61, (uint64_t *)&unk_1013E9BE0);
    swift_bridgeObjectRelease(*((_QWORD *)v26 + 1));
    swift_bridgeObjectRelease(*((_QWORD *)v28 + 1));
    swift_bridgeObjectRelease(*(_QWORD *)(v29 + v27));
  }
  else
  {
    v58 = v19;
    LOBYTE(v64) = 0;
    v24 = sub_1004B7878(&qword_1013E0DB0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C80);
    v25 = (uint64_t)v53;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v6, &v64, v55, v6, v24);
    sub_1004B84E0(v25, (uint64_t)v62, type metadata accessor for CRLAssetData);
    LOBYTE(v64) = 1;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v6, &v64, v55, v6, v24);
    sub_1004F32C0((uint64_t)v5, (uint64_t)v61);
    LOBYTE(v64) = 2;
    KeyedDecodingContainer.decode(_:forKey:)(&v64, v55);
    v30 = (uint64_t)v62;
    *(_QWORD *)&v62[v12[6]] = v31;
    LOBYTE(v64) = 3;
    KeyedDecodingContainer.decode(_:forKey:)(&v64, v55);
    *(_QWORD *)(v30 + v12[7]) = v32;
    LOBYTE(v64) = 4;
    KeyedDecodingContainer.decode(_:forKey:)(&v64, v55);
    *(_QWORD *)(v30 + v12[8]) = v33;
    LOBYTE(v64) = 5;
    *(_BYTE *)(v30 + v12[9]) = KeyedDecodingContainer.decode(_:forKey:)(&v64, v55) & 1;
    LOBYTE(v64) = 6;
    v34 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v64, v55);
    v36 = v35;
    v37 = (uint64_t *)v60;
    swift_bridgeObjectRelease(*((_QWORD *)v60 + 1));
    *v37 = v34;
    v37[1] = v36;
    LOBYTE(v64) = 7;
    v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v64, v55);
    v39 = v59;
    v40 = v38;
    v42 = v41;
    v43 = swift_bridgeObjectRelease(*((_QWORD *)v59 + 1));
    *v39 = v40;
    v39[1] = v42;
    LOBYTE(v64) = 8;
    v44 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v64, v55, v43);
    *(_BYTE *)(v30 + v58) = v44;
    v45 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v63 = 9;
    v46 = sub_1004F3130();
    v47 = v54;
    v48 = v55;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v45, &v63, v55, v45, v46);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v47, v48);
    v49 = v64;
    v50 = v56;
    v51 = (uint64_t)v62;
    swift_bridgeObjectRelease(*(_QWORD *)&v62[v56]);
    *(_QWORD *)(v51 + v50) = v49;
    sub_1004B8460(v51, v52, type metadata accessor for CRLMovieItemAssetData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v57);
    sub_1004B84A4(v51, type metadata accessor for CRLMovieItemAssetData);
  }
}

uint64_t sub_1004EC214(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 52)));
}

uint64_t sub_1004EC220(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 52);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1004EC254())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

void sub_1004EC26C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004EBCE4(a1, a2);
}

uint64_t sub_1004EC280(_QWORD *a1)
{
  return sub_1004EB9F0(a1);
}

uint64_t sub_1004EC294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0DC8, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6A20);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1004EC2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013E0B08, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6FF8);
  v7 = sub_1004B7878(&qword_1013E0DD0, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF69F8);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1004EC380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0DC8, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6A20);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1004EC3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0C98, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6878);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1004EC434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0C98, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6878);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1004EC490(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E0C98, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6878);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1004EC4E0()
{
  uint64_t result;

  qword_10147E778 = 97;
  unk_10147E780 = 0xE100000000000000;
  qword_10147E788 = swift_getKeyPath(&unk_100EF7040);
  unk_10147E790 = 98;
  qword_10147E798 = 0xE100000000000000;
  qword_10147E7A0 = swift_getKeyPath(&unk_100EF7060);
  qword_10147E7A8 = 99;
  qword_10147E7B0 = 0xE100000000000000;
  qword_10147E7B8 = swift_getKeyPath(&unk_100EF7080);
  unk_10147E7C0 = 100;
  qword_10147E7C8 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100EF70A0);
  qword_10147E7D0 = result;
  return result;
}

uint64_t sub_1004EC564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, float a13@<S3>, uint64_t a14, unsigned __int8 a15)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  int *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  float v66;
  char v67;
  void *v68;
  _BYTE v69[240];

  v55 = a7;
  v56 = a8;
  v54 = a6;
  v53 = a5;
  v59 = a4;
  v61 = a3;
  v48 = a2;
  v65 = a1;
  v52 = a15;
  v51 = a14;
  v20 = sub_1004B804C(&qword_1013DFA58);
  v63 = *(_QWORD *)(v20 - 8);
  v64 = v20;
  __chkstk_darwin(v20);
  v62 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1004B804C(&qword_1013E0A90);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v57 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004B804C(&qword_1013E0A88);
  v49 = *(_QWORD *)(v23 - 8);
  v50 = v23;
  __chkstk_darwin(v23);
  v47 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (int *)type metadata accessor for CRLMovieItemCRDTData(0);
  v46 = a9 + v28[5];
  sub_1004C39E8((uint64_t)v69);
  sub_1004C4938((uint64_t)v69, (uint64_t)&v66, (uint64_t *)&unk_1013F1530);
  v29 = sub_1004B804C((uint64_t *)&unk_1013F1530);
  v44 = v29;
  v30 = sub_1004EF8D0();
  CRRegister.init(wrappedValue:)(&v66, v29, v30);
  v45 = a9 + v28[6];
  v66 = 0.0;
  v67 = 1;
  v31 = sub_1004B804C(&qword_1013E0B30);
  v32 = sub_1004EF9DC();
  CRRegister.init(wrappedValue:)(&v66, v31, v32);
  *(_QWORD *)(a9 + v28[8]) = &_swiftEmptyDictionarySingleton;
  sub_1004B8460(v65, (uint64_t)v27, type metadata accessor for CRLAssetData);
  v33 = v48;
  sub_1004CB7BC(v48, (uint64_t)&v27[v25[5]], (uint64_t *)&unk_1013E9BE0);
  *(double *)&v27[v25[6]] = a10;
  *(double *)&v27[v25[7]] = a11;
  *(double *)&v27[v25[8]] = a12;
  v27[v25[9]] = v53;
  v34 = &v27[v25[10]];
  v35 = v55;
  *(_QWORD *)v34 = v54;
  *((_QWORD *)v34 + 1) = v35;
  v36 = &v27[v25[11]];
  v37 = v51;
  *(_QWORD *)v36 = v56;
  *((_QWORD *)v36 + 1) = v37;
  v27[v25[12]] = v52;
  *(_QWORD *)&v27[v25[13]] = &_swiftEmptyDictionarySingleton;
  v38 = sub_1004B7878(&qword_1013E0B08, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6FF8);
  CRRegister.init(_:)(v27, v25, v38);
  sub_1004C4938(v59, (uint64_t)&v66, (uint64_t *)&unk_1013F1530);
  v39 = v47;
  CRRegister.init(_:)(&v66, v44, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 40))(v46, v39, v50);
  v66 = *(float *)&v61;
  v67 = BYTE4(v61) & 1;
  v40 = v57;
  CRRegister.init(_:)(&v66, v31, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 40))(v45, v40, v60);
  v66 = a13;
  v68 = &_swiftEmptyDictionarySingleton;
  v41 = sub_1004EFA90();
  v42 = v62;
  CRRegister.init(_:)(&v66, &type metadata for CRLMovieMaskData, v41);
  sub_1004CB800(v33, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v65, type metadata accessor for CRLAssetData);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v63 + 32))(a9 + v28[7], v42, v64);
}

double sub_1004EC95C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  if (qword_1013DC910 != -1)
    swift_once(&qword_1013DC910, sub_1004EC4E0);
  v2 = unk_10147E780;
  v4 = qword_10147E788;
  v3 = unk_10147E790;
  v5 = qword_10147E798;
  v6 = qword_10147E7A0;
  v7 = qword_10147E7A8;
  v8 = qword_10147E7B0;
  v10 = qword_10147E7B8;
  v9 = unk_10147E7C0;
  v11 = qword_10147E7C8;
  v12 = qword_10147E7D0;
  *a1 = qword_10147E778;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v9;
  a1[10] = v11;
  a1[11] = v12;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  swift_retain(v10);
  swift_bridgeObjectRetain(v11);
  *(_QWORD *)&result = swift_retain(v12).n128_u64[0];
  return result;
}

uint64_t sub_1004ECA28(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return static CRStruct_4.fieldKeys.getter(a1, v2);
}

uint64_t sub_1004ECA68(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 32)));
}

uint64_t sub_1004ECA74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 32);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1004ECAA8())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1004ECABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v13[16];
  _BYTE v14[232];
  _BYTE v15[232];

  v2 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for CRLAssetData(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v9 = type metadata accessor for UUID(0);
  v10 = sub_1004F2A1C(v9, (uint64_t)qword_101481278);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v10, v9);
  v11 = &v8[*(int *)(v5 + 20)];
  *v11 = 0;
  v11[1] = 0xE000000000000000;
  *(_QWORD *)&v8[*(int *)(v5 + 24)] = &_swiftEmptyDictionarySingleton;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  sub_1004C39E8((uint64_t)v15);
  sub_1004C4938((uint64_t)v15, (uint64_t)v14, (uint64_t *)&unk_1013F1530);
  v13[12] = 1;
  return sub_1004EC564((uint64_t)v8, (uint64_t)v4, 0x100000000, (uint64_t)v14, 0, 0, 0, 0, a1, 0.0, 0.0, 0.0, 15.0, 0, 0);
}

uint64_t sub_1004ECC74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E0D10, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6DC0);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_1004ECCB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1004ECD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.apply(_:)(a1, a2, v4);
}

uint64_t sub_1004ECD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_1004ECDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_1004ECE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1004ECE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.merge(delta:)(a1, a2, v4);
}

uint64_t sub_1004ECEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1004ECF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1004ECF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1004ECFC4()
{
  sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.needToFinalizeTimestamps()();
}

uint64_t sub_1004ED004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1004ED054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.merge(_:)(a1, a2, v4);
}

uint64_t sub_1004ED0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E0D28, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6E20);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_1004ED108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E0D28, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6E20);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_1004ED17C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.init(from:)(a1, a2, v4);
}

uint64_t sub_1004ED1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.encode(to:)(a1, a2, v4);
}

uint64_t sub_1004ED23C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
  return CRStruct_4.minEncodingVersion.getter(a1, v2);
}

Swift::Int sub_1004ED28C()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = (uint64_t)((unint64_t)*v0 << 63) >> 63;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1004ED2D4()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)((uint64_t)((unint64_t)*v0 << 63) >> 63);
}

Swift::Int sub_1004ED300(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = (uint64_t)((unint64_t)*v1 << 63) >> 63;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

_QWORD *sub_1004ED344@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == -1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1004ED364(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = (uint64_t)((unint64_t)*v1 << 63) >> 63;
}

uint64_t sub_1004ED374()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x615272656E726F63;
}

uint64_t sub_1004ED3BC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1004F2EB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004ED3E0()
{
  unsigned __int8 *v0;

  return (uint64_t)((unint64_t)*v0 << 63) >> 63;
}

uint64_t sub_1004ED3F0@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == -1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

void sub_1004ED40C(_QWORD *a1@<X8>)
{
  *a1 = &off_101263848;
}

uint64_t sub_1004ED41C(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1004F0DD4, (uint64_t (*)(void))sub_1004F0E1C);
}

uint64_t sub_1004ED430(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;

  v7 = a3();
  v8 = a4();
  return static CodingKey<>.intCases.getter(a1, a2, v7, v8);
}

uint64_t sub_1004ED480(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004F0E1C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004ED4A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004F0E1C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004ED4D0(_QWORD *a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v7 = sub_1004B804C(&qword_1013E0D88);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_1004BB5A4(a1, v11);
  v13 = sub_1004F0E1C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLMovieMaskData.CodingKeys, &type metadata for CRLMovieMaskData.CodingKeys, v13, v11, v12);
  v20 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(&v20, v7, a3);
  if (!v3)
  {
    v18 = a2;
    v19 = 1;
    v14 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v15 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v19, v7, v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1004ED610()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 8));
}

uint64_t SyncEvent.FetchedDatabaseChanges.deletions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *SyncEvent.DidFetchRecordZoneChanges.error.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1004ED650(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2)
    return sub_100C9E04C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8));
  else
    return 0;
}

_QWORD *sub_1004ED674@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  int v5;

  result = sub_1004F2FB4(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v5;
    *(_QWORD *)(a2 + 8) = result;
  }
  return result;
}

uint64_t sub_1004ED6A0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1004ED4D0(a1, *(_QWORD *)(v1 + 8), *(float *)v1);
}

uint64_t sub_1004ED6BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004F3238();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1004ED6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1004EFA90();
  v7 = sub_1004F327C();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1004ED758(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004F3238();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1004ED790(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004F0F20();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1004ED7DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1004F0F20();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1004ED820(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004F0F20();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1004ED858()
{
  return 4;
}

uint64_t sub_1004ED864(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];

  v3 = type metadata accessor for CRLMovieItemCRDTData(0);
  result = __chkstk_darwin(v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_1013E07D8)
  {
    v7 = (uint64_t)a1 + qword_10147E7D8;
    swift_beginAccess((char *)a1 + qword_10147E7D8, v10, 0, 0);
    sub_1004B8460(v7, (uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    swift_beginAccess(v1 + qword_10147E7D8, v9, 33, 0);
    v8 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    swift_retain(a1);
    CRStruct_4.merge(_:)(v6, v3, v8);
    swift_endAccess(v9);
    swift_release(a1);
    return sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
  }
  return result;
}

_QWORD *sub_1004ED990(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v30[24];
  _BYTE v31[24];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v30[-v9];
  v11 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v11);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v30[-v15];
  v17 = *(_QWORD *)(v4 + 632);
  v18 = (uint64_t)v2 + v17;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v17, v30, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v19 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v11, v19);
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v20 = (uint64_t)v2 + qword_10147E7D8;
    swift_beginAccess((char *)v2 + qword_10147E7D8, v31, 0, 0);
    sub_1004B8460(v20, (uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
    v21 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    CRStruct_4.copy(renamingReferences:)(0, v5, v21);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v17, v31, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v16, (uint64_t *)&unk_1013F02C0);
    v22 = (uint64_t)v2 + qword_10147E7D8;
    swift_beginAccess((char *)v2 + qword_10147E7D8, v30, 0, 0);
    sub_1004B8460(v22, (uint64_t)v10, type metadata accessor for CRLMovieItemCRDTData);
  }
  v23 = v2[4];
  v24 = v2[5];
  v27 = v2 + 2;
  v25 = v2[2];
  v26 = v27[1];
  v28 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_1004B84E0((uint64_t)v10, v28 + qword_10147E7D8, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004C4938((uint64_t)v16, v28 + *(_QWORD *)(*(_QWORD *)v28 + 632), (uint64_t *)&unk_1013F02C0);
  return sub_1005E1000(v26, v23, v24, v25);
}

uint64_t sub_1004EDC38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v3 = type metadata accessor for CRLMovieItemCRDTData(0);
  v4 = __chkstk_darwin(v3);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v21[-v7];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  v10 = __chkstk_darwin(v9);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v14 = &v21[-v13];
  if (*(_UNKNOWN ****)a1 != &off_1013E07D8)
    goto LABEL_5;
  v15 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v15, v24, 0, 0);
  sub_1004CB7BC(v15, (uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  v16 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 632);
  swift_beginAccess(v16, v23, 0, 0);
  sub_1004CB7BC(v16, (uint64_t)v12, (uint64_t *)&unk_1013F02C0);
  swift_retain(a1);
  LOBYTE(v16) = sub_100D5ED30((uint64_t)v14, (uint64_t)v12);
  sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013F02C0);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  if ((v16 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v19 = 0;
    return v19 & 1;
  }
  v17 = v1 + qword_10147E7D8;
  swift_beginAccess(v17, v22, 0, 0);
  sub_1004B8460(v17, (uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
  v18 = a1 + qword_10147E7D8;
  swift_beginAccess(a1 + qword_10147E7D8, v21, 0, 0);
  sub_1004B8460(v18, (uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
  v19 = sub_1004F2010((uint64_t)v8, (uint64_t)v6);
  swift_release(a1);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
  return v19 & 1;
}

uint64_t sub_1004EDE70(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v5 = type metadata accessor for CRLMovieItemCRDTData(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v19[-v9 - 8];
  v11 = v2 + qword_10147E7D8;
  swift_beginAccess(v2 + qword_10147E7D8, v19, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v11, (uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
    v12 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    CRStruct_4.copy(renamingReferences:)(0, v5, v12);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
  }
  else
  {
    sub_1004B8460(v11, (uint64_t)v10, type metadata accessor for CRLMovieItemCRDTData);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_1013E0D28, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6E20);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLMovieItemCRDTData);
  return v16;
}

uint64_t sub_1004EE03C(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = type metadata accessor for CRLMovieItemCRDTData(0);
  v4 = __chkstk_darwin(v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v14[-v7];
  if (*a1 == &off_1013E07D8)
  {
    v9 = v1 + qword_10147E7D8;
    swift_beginAccess(v9, v15, 0, 0);
    sub_1004B8460(v9, (uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
    v10 = (uint64_t)a1 + qword_10147E7D8;
    swift_beginAccess((char *)a1 + qword_10147E7D8, v14, 0, 0);
    sub_1004B8460(v10, (uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    v11 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    v12 = CRStruct_4.hasDelta(from:)(v6, v3, v11);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
    return v12 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLMovieItemData.swift", 31, 2, 189, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1004EE1E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v31 = a2;
  v4 = *v2;
  v30 = type metadata accessor for CRLMovieItemCRDTData(0);
  v5 = __chkstk_darwin(v30);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_1013E0DE0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v30 - v14;
  v16 = swift_dynamicCastClass(a1, v4);
  if (v16)
  {
    v17 = v16;
    v18 = (uint64_t)v2 + qword_10147E7D8;
    swift_beginAccess(v18, v33, 0, 0);
    sub_1004B8460(v18, (uint64_t)v9, type metadata accessor for CRLMovieItemCRDTData);
    v19 = v17 + qword_10147E7D8;
    swift_beginAccess(v19, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
    v20 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    swift_retain(a1);
    v21 = v31;
    CRStruct_4.delta(_:from:)(v31, v7, v30, v20);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v13, &qword_1013E0DE0);
    v22 = sub_1004B804C(&qword_1013E0D20);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_1013E0DE0);
      swift_release(a1);
      sub_1004CB800((uint64_t)v13, &qword_1013E0DE0);
      return 0;
    }
    else
    {
      v25 = v21;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v26 = type metadata accessor for CRCodableVersion(0);
      v27 = sub_1004F2A1C(v26, (uint64_t)qword_10147EB08);
      v28 = sub_1004CBA30(&qword_1013E0D18, &qword_1013E0D20, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_4<A>);
      v24 = PartialCRDT.deltaSerializedData(_:version:)(v25, v27, v22, v28);
      swift_release(a1);
      sub_1004CB800((uint64_t)v15, &qword_1013E0DE0);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
    }
    return v24;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLMovieItemData.swift", 31, 2, 202, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1004EE558(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[112];
  _BYTE v51[32];
  uint64_t v52;

  v46 = *v2;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E0D20);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v14 = sub_1004CBA30(&qword_1013E0D18, &qword_1013E0D20, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_4<A>);
  LOBYTE(v2) = v10;
  v15 = v48;
  PartialCRDT.init(serializedData:)(a1, a2, v10, v14);
  if (!v15)
  {
    v42 = v9;
    v43 = v7;
    v48 = v11;
    v16 = v47;
    swift_beginAccess(v47 + qword_10147E7D8, v51, 33, 0);
    v17 = type metadata accessor for CRLMovieItemCRDTData(0);
    v18 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    LODWORD(v2) = CRStruct_4.merge(delta:)(v13, v17, v18);
    swift_endAccess(v51);
    if ((v2 & 1) == 0)
    {
      v39 = v13;
      v40 = v10;
      v41 = (int)v2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v51, 0, 0);
      v19 = (void *)static OS_os_log.realTimeSync;
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v20, v50);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v22 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 632);
      swift_beginAccess(v22, v49, 0, 0);
      v23 = v22;
      v24 = v44;
      sub_1004CB7BC(v23, v44, (uint64_t *)&unk_1013F02C0);
      v25 = v19;
      v26 = sub_1004B804C(&qword_1013E1A80);
      v27 = v42;
      CRRegister.wrappedValue.getter(v26);
      v28 = sub_1004CB800(v24, (uint64_t *)&unk_1013F02C0);
      v29 = UUID.uuidString.getter(v28);
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v45);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v32 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v32;
      *(_QWORD *)(inited + 32) = v29;
      *(_QWORD *)(inited + 40) = v31;
      v52 = v16;
      swift_retain(v16);
      v33 = String.init<A>(describing:)(&v52, v46);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v32;
      *(_QWORD *)(inited + 72) = v33;
      *(_QWORD *)(inited + 80) = v34;
      v35 = static os_log_type_t.error.getter(v33);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v35, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      v2 = *(uint64_t **)(inited + 16);
      v36 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v2, v36);

      LOBYTE(v2) = v41;
      v10 = v40;
      v13 = v39;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
  }
  return v2 & 1;
}

unint64_t sub_1004EE93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v36 = type metadata accessor for CRLAssetData(0);
  v35 = *(_QWORD *)(v36 - 8);
  v1 = __chkstk_darwin(v36);
  v31 = (uint64_t)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - v3;
  v33 = type metadata accessor for CRLMovieItemAssetData(0);
  v5 = __chkstk_darwin(v33);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_1013E0DD8);
  v11 = sub_1004B804C(&qword_101405DE0);
  v12 = *(_QWORD *)(v11 - 8);
  v32 = *(_QWORD *)(v12 + 72);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject(v10, v14 + 2 * v32, v13 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5A10;
  v34 = v15;
  v16 = (_QWORD *)(v15 + v14);
  v17 = (char *)v16 + *(int *)(v11 + 48);
  *v16 = 0x6569766F6DLL;
  v16[1] = 0xE500000000000000;
  v18 = v0 + qword_10147E7D8;
  swift_beginAccess(v18, v37, 32, 0);
  v19 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v37);
  sub_1004B8460((uint64_t)v9, (uint64_t)v4, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v30(v17, v4, v20);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLAssetData);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v22(v17, 0, 1, v20);
  v23 = (_QWORD *)((char *)v16 + v32);
  v24 = (char *)v16 + v32 + *(int *)(v11 + 48);
  *v23 = 0x6D49726574736F70;
  v23[1] = 0xEB00000000656761;
  swift_beginAccess(v18, v37, 32, 0);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v37);
  v25 = &v7[*(int *)(v33 + 20)];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v25, 1, v36))
  {
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMovieItemAssetData);
    v26 = 1;
  }
  else
  {
    v27 = (uint64_t)v25;
    v28 = v31;
    sub_1004B8460(v27, v31, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMovieItemAssetData);
    v30(v24, (char *)v28, v20);
    sub_1004B84A4(v28, type metadata accessor for CRLAssetData);
    v26 = 0;
  }
  v22(v24, v26, 1, v20);
  return sub_1008D5968(v34);
}

uint64_t sub_1004EEC58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _BYTE v17[24];
  _BYTE v18[24];
  uint64_t v19;

  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v17[-v8];
  __chkstk_darwin(v10);
  v12 = &v17[-v11];
  swift_beginAccess(a1 + 32, v18, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v13 = v1 + qword_10147E7D8;
    swift_beginAccess(v1 + qword_10147E7D8, v17, 32, 0);
    v14 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v14);
    swift_endAccess(v17);
    sub_1004EB634((uint64_t)v12);
    v19 = v2;
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v13, v17, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v6, v14, v15);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v17);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
  }
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 632), v17, 33, 0);
  sub_100D3D410(a1);
  return swift_endAccess(v17);
}

uint64_t sub_1004EEE40()
{
  uint64_t v0;

  return sub_1004B84A4(v0 + qword_10147E7D8, type metadata accessor for CRLMovieItemCRDTData);
}

uint64_t sub_1004EEE68()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v0 + qword_10147E7D8, type metadata accessor for CRLMovieItemCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLMovieItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E07B0, (uint64_t)&nominal type descriptor for CRLMovieItemData);
}

uint64_t sub_1004EEECC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLMovieItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 672);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLMovieItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E0AF0, (uint64_t)&nominal type descriptor for CRLMovieItemCRDTData);
}

uint64_t *sub_1004EEF4C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = sub_1004B804C(&qword_10140FCF0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1004B804C(&qword_1013E0A90);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1004B804C(&qword_1013DFA58);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = *(uint64_t *)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + v20) = v21;
    swift_bridgeObjectRetain(v21);
  }
  return a1;
}

double sub_1004EF074(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  v4 = sub_1004B804C(&qword_10140FCF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_1004B804C(&qword_1013E0A90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  v10 = sub_1004B804C(&qword_1013DFA58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8])).n128_u64[0];
  return result;
}

uint64_t sub_1004EF13C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1004B804C(&qword_10140FCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013E0A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1004B804C(&qword_1013DFA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[8];
  v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  swift_bridgeObjectRetain(v20);
  return a1;
}

uint64_t sub_1004EF238(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1004B804C(&qword_10140FCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013E0A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1004B804C(&qword_1013DFA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = a3[8];
  v20 = *(_QWORD *)(a2 + v19);
  v21 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  return a1;
}

uint64_t sub_1004EF340(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1004B804C(&qword_10140FCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013E0A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1004B804C(&qword_1013DFA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1004EF438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1004B804C(&qword_10140FCF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C(&qword_1013E0A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1004B804C(&qword_1013DFA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[8];
  v20 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_1004EF538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004EF544);
}

uint64_t sub_1004EF544(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v6 = sub_1004B804C(&qword_10140FCF0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C(&qword_1013E0A88);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1004B804C(&qword_1013E0A90);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = sub_1004B804C(&qword_1013DFA58);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[8]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_1004EF644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004EF650);
}

uint64_t sub_1004EF650(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = sub_1004B804C(&qword_10140FCF0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1004B804C(&qword_1013E0A88);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = sub_1004B804C(&qword_1013E0A90);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = sub_1004B804C(&qword_1013DFA58);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
  return result;
}

void sub_1004EF74C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  sub_1004EF844(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004EF978(319, &qword_1013E0B10, (uint64_t *)&unk_1013F1530, (uint64_t (*)(void))sub_1004EF8D0);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1004EF978(319, &qword_1013E0B28, &qword_1013E0B30, (uint64_t (*)(void))sub_1004EF9DC);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1004EFA38(319);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          v10[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
          swift_initStructMetadata(a1, 256, 5, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_1004EF844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1013E0B00)
  {
    v2 = type metadata accessor for CRLMovieItemAssetData(255);
    v3 = sub_1004B7878(&qword_1013E0B08, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6FF8);
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1013E0B00);
  }
}

uint64_t type metadata accessor for CRLMovieItemAssetData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E0BE0, (uint64_t)&nominal type descriptor for CRLMovieItemAssetData);
}

unint64_t sub_1004EF8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0B18;
  if (!qword_1013E0B18)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013F1530);
    sub_1004EF934();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013E0B18);
  }
  return result;
}

unint64_t sub_1004EF934()
{
  unint64_t result;

  result = qword_1013E0B20;
  if (!qword_1013E0B20)
  {
    result = swift_getWitnessTable(&unk_100F142A8, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013E0B20);
  }
  return result;
}

void sub_1004EF978(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = sub_1004CB6A4(a3);
    v8 = a4();
    v9 = type metadata accessor for CRRegister(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1004EF9DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0B38;
  if (!qword_1013E0B38)
  {
    v1 = sub_1004CB6A4(&qword_1013E0B30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013E0B38);
  }
  return result;
}

void sub_1004EFA38(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E0B40)
  {
    v2 = sub_1004EFA90();
    v3 = type metadata accessor for CRRegister(a1, &type metadata for CRLMovieMaskData, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E0B40);
  }
}

unint64_t sub_1004EFA90()
{
  unint64_t result;

  result = qword_1013E0B48;
  if (!qword_1013E0B48)
  {
    result = swift_getWitnessTable(&unk_100EF6FC0, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0B48);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLColorModelMonochromeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for CRLColorModelMonochromeData(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for CRLColorModelMonochromeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for CRLColorModelMonochromeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorModelMonochromeData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorModelMonochromeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMovieMaskData()
{
  return &type metadata for CRLMovieMaskData;
}

char *sub_1004EFC1C(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v44(a1, a2, v7);
    v8 = type metadata accessor for CRLAssetData(0);
    v9 = *(int *)(v8 + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *(int *)(v8 + 24);
    v14 = *(_QWORD *)&a2[v13];
    *(_QWORD *)&a1[v13] = v14;
    v15 = a3[5];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *(_QWORD *)(v8 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
    swift_bridgeObjectRetain(v12);
    v20 = swift_bridgeObjectRetain(v14);
    if (v19(v17, 1, v8, v20))
    {
      v21 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v44(v16, v17, v7);
      v23 = *(int *)(v8 + 20);
      v24 = &v16[v23];
      v25 = &v17[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = *(int *)(v8 + 24);
      v28 = *(_QWORD *)&v17[v27];
      *(_QWORD *)&v16[v27] = v28;
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v18 + 56);
      swift_bridgeObjectRetain(v26);
      v30 = swift_bridgeObjectRetain(v28);
      v29(v16, 0, 1, v8, v30);
    }
    v31 = a3[7];
    *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
    *(_QWORD *)&a1[v31] = *(_QWORD *)&a2[v31];
    v32 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
    a1[v32] = a2[v32];
    v33 = a3[10];
    v34 = a3[11];
    v35 = &a1[v33];
    v36 = &a2[v33];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = &a1[v34];
    v39 = &a2[v34];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = a3[13];
    a1[a3[12]] = a2[a3[12]];
    v42 = *(_QWORD *)&a2[v41];
    *(_QWORD *)&a1[v41] = v42;
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v42);
  }
  return a1;
}

double sub_1004EFE10(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  double result;

  v4 = type metadata accessor for UUID(0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = type metadata accessor for CRLAssetData(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v6 + 20) + 8));
  v7 = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v6 + 24)));
  v8 = a1 + a2[5];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v6 - 8) + 48))(v8, 1, v6, v7))
  {
    v5(v8, v4);
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v6 + 20) + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v6 + 24)));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11] + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[13])).n128_u64[0];
  return result;
}

uint64_t sub_1004EFEFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v42)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v42(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(int *)(v7 + 24);
  v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = a3[5];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = *(_QWORD *)(v7 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48);
  swift_bridgeObjectRetain(v11);
  v19 = swift_bridgeObjectRetain(v13);
  if (v18(v16, 1, v7, v19))
  {
    v20 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v42((uint64_t)v15, (uint64_t)v16, v6);
    v21 = *(int *)(v7 + 20);
    v22 = &v15[v21];
    v23 = &v16[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *(int *)(v7 + 24);
    v26 = *(_QWORD *)&v16[v25];
    *(_QWORD *)&v15[v25] = v26;
    v27 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v17 + 56);
    swift_bridgeObjectRetain(v24);
    v28 = swift_bridgeObjectRetain(v26);
    v27(v15, 0, 1, v7, v28);
  }
  v29 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[10];
  v32 = a3[11];
  v33 = (_QWORD *)(a1 + v31);
  v34 = (_QWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = (_QWORD *)(a1 + v32);
  v37 = (_QWORD *)(a2 + v32);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v40 = *(_QWORD *)(a2 + v39);
  *(_QWORD *)(a1 + v39) = v40;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v40);
  return a1;
}

uint64_t sub_1004F00C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, __n128);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 24);
  v56(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v12 = v9[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(v7 + 24);
  v14 = *(_QWORD *)(a2 + v13);
  v15 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_bridgeObjectRetain(v14);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = a3[5];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = *(_QWORD *)(v7 - 8);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v20 + 48);
  v22 = v21(a1 + v17, 1, v7, v16);
  v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v19, 1, v7);
  if (!v22)
  {
    if (!v23)
    {
      v56((uint64_t)v18, (uint64_t)v19, v6);
      v47 = *(int *)(v7 + 20);
      v48 = &v18[v47];
      v49 = &v19[v47];
      *(_QWORD *)v48 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v51 = *((_QWORD *)v48 + 1);
      *((_QWORD *)v48 + 1) = v50;
      swift_bridgeObjectRetain(v50);
      swift_bridgeObjectRelease(v51);
      v52 = *(int *)(v7 + 24);
      v53 = *(_QWORD *)&v19[v52];
      v54 = *(_QWORD *)&v18[v52];
      *(_QWORD *)&v18[v52] = v53;
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRelease(v54);
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v32 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v18, v19, v6);
  v24 = *(int *)(v7 + 20);
  v25 = &v18[v24];
  v26 = &v19[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *((_QWORD *)v25 + 1) = v27;
  v28 = *(int *)(v7 + 24);
  v29 = *(_QWORD *)&v19[v28];
  *(_QWORD *)&v18[v28] = v29;
  v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v20 + 56);
  swift_bridgeObjectRetain(v27);
  v31 = swift_bridgeObjectRetain(v29);
  v30(v18, 0, 1, v7, v31);
LABEL_7:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v36 = v35[1];
  v37 = v34[1];
  v34[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  v38 = a3[11];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v41 = v40[1];
  v42 = v39[1];
  v39[1] = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease(v42);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v43 = a3[13];
  v44 = *(_QWORD *)(a2 + v43);
  v45 = *(_QWORD *)(a1 + v43);
  *(_QWORD *)(a1 + v43) = v44;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRelease(v45);
  return a1;
}

uint64_t sub_1004F0380(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLAssetData(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  *(_QWORD *)(a1 + *(int *)(v8 + 24)) = *(_QWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v9, 1, v8))
  {
    v13 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(_OWORD *)&v10[*(int *)(v8 + 20)] = *(_OWORD *)&v11[*(int *)(v8 + 20)];
    *(_QWORD *)&v10[*(int *)(v8 + 24)] = *(_QWORD *)&v11[*(int *)(v8 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v8);
  }
  v14 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  v17 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  return a1;
}

uint64_t sub_1004F04EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, __n128);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 40);
  v51(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = v9[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease(v13);
  v14 = *(int *)(v7 + 24);
  v15 = *(_QWORD *)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v16 = swift_bridgeObjectRelease(v15);
  v17 = a3[5];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = *(_QWORD *)(v7 - 8);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v20 + 48);
  v22 = v21(a1 + v17, 1, v7, v16);
  v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v19, 1, v7);
  if (!v22)
  {
    if (!v23)
    {
      v51((uint64_t)v18, (uint64_t)v19, v6);
      v42 = *(int *)(v7 + 20);
      v43 = &v18[v42];
      v44 = &v19[v42];
      v46 = *(_QWORD *)v44;
      v45 = *((_QWORD *)v44 + 1);
      v47 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v43 = v46;
      *((_QWORD *)v43 + 1) = v45;
      swift_bridgeObjectRelease(v47);
      v48 = *(int *)(v7 + 24);
      v49 = *(_QWORD *)&v18[v48];
      *(_QWORD *)&v18[v48] = *(_QWORD *)&v19[v48];
      swift_bridgeObjectRelease(v49);
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLAssetData);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v18, v19, v6);
  *(_OWORD *)&v18[*(int *)(v7 + 20)] = *(_OWORD *)&v19[*(int *)(v7 + 20)];
  *(_QWORD *)&v18[*(int *)(v7 + 24)] = *(_QWORD *)&v19[*(int *)(v7 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v7);
LABEL_7:
  v25 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v26 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v27 = a3[10];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  v32 = v28[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease(v32);
  v33 = a3[11];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  v38 = v34[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease(v38);
  v39 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v40 = *(_QWORD *)(a1 + v39);
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);
  swift_bridgeObjectRelease(v40);
  return a1;
}

uint64_t sub_1004F0728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F0734);
}

uint64_t sub_1004F0734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 52));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1004F07E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F07EC);
}

uint64_t sub_1004F07EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  return result;
}

void sub_1004F0894(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v2 = type metadata accessor for CRLAssetData(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004F0958(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[5] = &unk_100EF6738;
      v6[6] = &unk_100EF6750;
      v6[7] = &unk_100EF6750;
      v6[8] = &unk_100EF6768;
      v6[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 10, v6, a1 + 16);
    }
  }
}

void sub_1004F0958(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E0BF0)
  {
    v2 = type metadata accessor for CRLAssetData(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E0BF0);
  }
}

uint64_t sub_1004F09AC()
{
  return sub_1004B7878(&qword_1013E0C40, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6780);
}

uint64_t sub_1004F09D8()
{
  return sub_1004B7878(&qword_1013E0B08, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6FF8);
}

uint64_t sub_1004F0A04()
{
  return sub_1004B7878(&qword_1013E0C48, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6850);
}

uint64_t sub_1004F0A30()
{
  return sub_1004B7878(&qword_1013E0C50, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6828);
}

unint64_t sub_1004F0A60()
{
  unint64_t result;

  result = qword_1013E0C58;
  if (!qword_1013E0C58)
  {
    result = swift_getWitnessTable(&unk_100EF68C0, &type metadata for CRLMovieItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0C58);
  }
  return result;
}

unint64_t sub_1004F0AA8()
{
  unint64_t result;

  result = qword_1013E0C60;
  if (!qword_1013E0C60)
  {
    result = swift_getWitnessTable(&unk_100EF69D0, &type metadata for CRLMovieItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0C60);
  }
  return result;
}

unint64_t sub_1004F0AF0()
{
  unint64_t result;

  result = qword_1013E0C68;
  if (!qword_1013E0C68)
  {
    result = swift_getWitnessTable(&unk_100EF6998, &type metadata for CRLMovieItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0C68);
  }
  return result;
}

unint64_t sub_1004F0B38()
{
  unint64_t result;

  result = qword_1013E0C70;
  if (!qword_1013E0C70)
  {
    result = swift_getWitnessTable(&unk_100EF68F8, &type metadata for CRLMovieItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0C70);
  }
  return result;
}

unint64_t sub_1004F0B80()
{
  unint64_t result;

  result = qword_1013E0C78;
  if (!qword_1013E0C78)
  {
    result = swift_getWitnessTable(&unk_100EF6970, &type metadata for CRLMovieItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0C78);
  }
  return result;
}

unint64_t sub_1004F0BC8()
{
  unint64_t result;

  result = qword_1013E0C80;
  if (!qword_1013E0C80)
  {
    result = swift_getWitnessTable(&unk_100EF6948, &type metadata for CRLMovieItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0C80);
  }
  return result;
}

uint64_t sub_1004F0C0C()
{
  return sub_1004CBA30(&qword_1013E0C88, &qword_1013E0C90, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_1004F0C38()
{
  return sub_1004B7878(&qword_1013E0C98, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF6878);
}

unint64_t sub_1004F0C68()
{
  unint64_t result;

  result = qword_1013E0CA0;
  if (!qword_1013E0CA0)
  {
    result = swift_getWitnessTable(&unk_100EF6A60, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0CA0);
  }
  return result;
}

unint64_t sub_1004F0CB4()
{
  unint64_t result;

  result = qword_1013E0CA8;
  if (!qword_1013E0CA8)
  {
    result = swift_getWitnessTable(&unk_100EF6B30, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0CA8);
  }
  return result;
}

unint64_t sub_1004F0CFC()
{
  unint64_t result;

  result = qword_1013E0CB0;
  if (!qword_1013E0CB0)
  {
    result = swift_getWitnessTable(&unk_100EF6B08, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0CB0);
  }
  return result;
}

unint64_t sub_1004F0D44()
{
  unint64_t result;

  result = qword_1013E0CB8;
  if (!qword_1013E0CB8)
  {
    result = swift_getWitnessTable(&unk_100EF6BA0, &type metadata for CRLMovieMaskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0CB8);
  }
  return result;
}

unint64_t sub_1004F0D8C()
{
  unint64_t result;

  result = qword_1013E0CC0;
  if (!qword_1013E0CC0)
  {
    result = swift_getWitnessTable(&unk_100EF6CB0, &type metadata for CRLMovieMaskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0CC0);
  }
  return result;
}

unint64_t sub_1004F0DD4()
{
  unint64_t result;

  result = qword_1013E0CC8;
  if (!qword_1013E0CC8)
  {
    result = swift_getWitnessTable(&unk_100EF6C78, &type metadata for CRLMovieMaskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0CC8);
  }
  return result;
}

unint64_t sub_1004F0E1C()
{
  unint64_t result;

  result = qword_1013E0CD0;
  if (!qword_1013E0CD0)
  {
    result = swift_getWitnessTable(&unk_100EF6BD8, &type metadata for CRLMovieMaskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0CD0);
  }
  return result;
}

unint64_t sub_1004F0E64()
{
  unint64_t result;

  result = qword_1013E0CD8;
  if (!qword_1013E0CD8)
  {
    result = swift_getWitnessTable(&unk_100EF6C50, &type metadata for CRLMovieMaskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0CD8);
  }
  return result;
}

unint64_t sub_1004F0EAC()
{
  unint64_t result;

  result = qword_1013E0CE0;
  if (!qword_1013E0CE0)
  {
    result = swift_getWitnessTable(&unk_100EF6C28, &type metadata for CRLMovieMaskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0CE0);
  }
  return result;
}

uint64_t sub_1004F0EF0()
{
  return sub_1004CBA30(&qword_1013E0CE8, &qword_1013E0CF0, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1004F0F20()
{
  unint64_t result;

  result = qword_1013E0CF8;
  if (!qword_1013E0CF8)
  {
    result = swift_getWitnessTable(&unk_100EF6B58, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0CF8);
  }
  return result;
}

uint64_t sub_1004F0F64()
{
  return sub_1004B7878(&qword_1013E0D00, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6D40);
}

uint64_t sub_1004F0F90()
{
  return sub_1004B7878(&qword_1013E0D08, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6D88);
}

uint64_t sub_1004F0FBC()
{
  return sub_1004B7878(&qword_1013E0D10, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6DC0);
}

uint64_t sub_1004F0FE8()
{
  return sub_1004CBA30(&qword_1013E0D18, &qword_1013E0D20, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_4<A>);
}

uint64_t sub_1004F1014()
{
  return sub_1004B7878(&qword_1013E0D28, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6E20);
}

uint64_t sub_1004F1040()
{
  return sub_1004B7878(&qword_1013E0D30, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6EA0);
}

uint64_t sub_1004F106C()
{
  return sub_1004CBA30(&qword_1013E0D38, &qword_10140FCF0, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1004F1098()
{
  return sub_1004CBA30(&qword_1013E0D40, &qword_1013E0A88, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1004F10C4()
{
  return sub_1004CBA30(&qword_1013E0D48, &qword_1013E0A90, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1004F10F0()
{
  return sub_1004CBA30(&qword_1013E0D50, &qword_1013DFA58, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1004F111C()
{
  return sub_1004B7878(&qword_1013E0D58, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F00);
}

unint64_t sub_1004F114C()
{
  unint64_t result;

  result = qword_1013E0D60;
  if (!qword_1013E0D60)
  {
    result = swift_getWitnessTable(&unk_100EF6AA8, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0D60);
  }
  return result;
}

uint64_t sub_1004F1190()
{
  return sub_1004B7878(&qword_1013E0D68, type metadata accessor for CRLMovieItemAssetData, (uint64_t)&unk_100EF67C8);
}

uint64_t sub_1004F11BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[232];
  _BYTE v6[24];
  _BYTE v7[232];

  swift_beginAccess(*v1 + qword_10147E7D8, v6, 32, 0);
  type metadata accessor for CRLMovieItemCRDTData(0);
  v3 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.getter(v3);
  sub_1004C4938((uint64_t)v5, (uint64_t)v7, (uint64_t *)&unk_1013F1530);
  swift_endAccess(v6);
  return sub_1004C4938((uint64_t)v7, a1, (uint64_t *)&unk_1013F1530);
}

uint64_t sub_1004F1260(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  __n128 v4;
  _BYTE v6[232];
  _BYTE v7[24];

  swift_beginAccess(*v1 + qword_10147E7D8, v7, 33, 0);
  sub_1004C4938(a1, (uint64_t)v6, (uint64_t *)&unk_1013F1530);
  type metadata accessor for CRLMovieItemCRDTData(0);
  v3 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.setter(v6, v3, v4);
  return swift_endAccess(v7);
}

uint64_t sub_1004F12F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  int *v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  double v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  double v76;
  double v77;
  int *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  int *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;

  v4 = type metadata accessor for CRLAssetData(0);
  v124 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v122 = (uint64_t)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v6);
  v123 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E9C00);
  __chkstk_darwin(v8);
  v125 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLMovieItemAssetData(0);
  v11 = __chkstk_darwin(v10);
  v130 = (uint64_t)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v118 - v14;
  v16 = __chkstk_darwin(v13);
  v129 = (char *)&v118 - v17;
  v18 = __chkstk_darwin(v16);
  v126 = (uint64_t)&v118 - v19;
  v20 = __chkstk_darwin(v18);
  v136 = (char *)&v118 - v21;
  v22 = __chkstk_darwin(v20);
  v128 = (uint64_t)&v118 - v23;
  v24 = __chkstk_darwin(v22);
  v135 = (char *)&v118 - v25;
  v26 = __chkstk_darwin(v24);
  v134 = (char *)&v118 - v27;
  v28 = __chkstk_darwin(v26);
  v133 = (uint64_t)&v118 - v29;
  v30 = __chkstk_darwin(v28);
  v127 = (char *)&v118 - v31;
  v32 = __chkstk_darwin(v30);
  v132 = (uint64_t)&v118 - v33;
  v34 = __chkstk_darwin(v32);
  v131 = (uint64_t)&v118 - v35;
  v36 = __chkstk_darwin(v34);
  v38 = (char *)&v118 - v37;
  v39 = __chkstk_darwin(v36);
  v41 = (char *)&v118 - v40;
  v42 = __chkstk_darwin(v39);
  v44 = (char *)&v118 - v43;
  __chkstk_darwin(v42);
  v46 = (char *)&v118 - v45;
  if ((static UUID.== infix(_:_:)(a1) & 1) == 0
    || ((v47 = *(int *)(v4 + 20),
         v48 = *(_QWORD *)(a1 + v47),
         v49 = *(_QWORD *)(a1 + v47 + 8),
         v50 = (_QWORD *)(a2 + v47),
         v51 = v50[1],
         v48 != *v50)
     || v49 != v51)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, *v50, v51, 0) & 1) == 0)
  {
    sub_1004B8460(a1, (uint64_t)v46, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460(a2, (uint64_t)v44, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_17;
  }
  v120 = (int *)v10;
  v52 = sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  v121 = v15;
  sub_1004B8460(a1, (uint64_t)v46, type metadata accessor for CRLMovieItemAssetData);
  v15 = v121;
  sub_1004B8460(a2, (uint64_t)v44, type metadata accessor for CRLMovieItemAssetData);
  if ((v52 & 1) == 0)
  {
LABEL_17:
    sub_1004B84A4((uint64_t)v44, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLMovieItemAssetData);
LABEL_18:
    v59 = (uint64_t)v129;
    v60 = (uint64_t)v127;
    sub_1004B8460(a1, (uint64_t)v41, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460(a2, (uint64_t)v38, type metadata accessor for CRLMovieItemAssetData);
LABEL_19:
    v61 = v15;
    sub_1004B84A4((uint64_t)v38, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLMovieItemAssetData);
    v65 = v131;
    sub_1004B8460(a1, v131, type metadata accessor for CRLMovieItemAssetData);
    v66 = v132;
    sub_1004B8460(a2, v132, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_20;
  }
  v53 = v120[5];
  v54 = (uint64_t)&v44[v53];
  v55 = v125;
  v56 = v125 + *(int *)(v8 + 48);
  sub_1004CB7BC((uint64_t)&v46[v53], v125, (uint64_t *)&unk_1013E9BE0);
  v119 = v56;
  sub_1004CB7BC(v54, v56, (uint64_t *)&unk_1013E9BE0);
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48);
  if (v57(v55, 1, v4) == 1)
  {
    sub_1004B84A4((uint64_t)v44, type metadata accessor for CRLMovieItemAssetData);
    v55 = v125;
    sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLMovieItemAssetData);
    v58 = v57(v119, 1, v4);
    v15 = v121;
    if (v58 == 1)
    {
      sub_1004CB800(v55, (uint64_t *)&unk_1013E9BE0);
      sub_1004B8460(a1, (uint64_t)v41, type metadata accessor for CRLMovieItemAssetData);
      sub_1004B8460(a2, (uint64_t)v38, type metadata accessor for CRLMovieItemAssetData);
      v59 = (uint64_t)v129;
      v60 = (uint64_t)v127;
      goto LABEL_9;
    }
    goto LABEL_32;
  }
  v92 = v123;
  sub_1004CB7BC(v55, v123, (uint64_t *)&unk_1013E9BE0);
  if (v57(v119, 1, v4) == 1)
  {
    sub_1004B84A4((uint64_t)v44, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v92, type metadata accessor for CRLAssetData);
    v15 = v121;
LABEL_32:
    v93 = &qword_1013E9C00;
    v94 = v55;
LABEL_40:
    sub_1004CB800(v94, v93);
    goto LABEL_18;
  }
  v95 = v122;
  sub_1004B84E0(v119, v122, type metadata accessor for CRLAssetData);
  v96 = static UUID.== infix(_:_:)(v92);
  v15 = v121;
  if ((v96 & 1) == 0
    || ((v97 = *(int *)(v4 + 20),
         v98 = *(_QWORD *)(v92 + v97),
         v99 = *(_QWORD *)(v92 + v97 + 8),
         v100 = (_QWORD *)(v95 + v97),
         v101 = v100[1],
         v98 != *v100)
     || v99 != v101)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v98, v99, *v100, v101, 0) & 1) == 0)
  {
    sub_1004B84A4(v95, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v44, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v92, type metadata accessor for CRLAssetData);
    v93 = (uint64_t *)&unk_1013E9BE0;
    v94 = v125;
    goto LABEL_40;
  }
  v102 = sub_100C9E04C(*(_QWORD *)(v92 + *(int *)(v4 + 24)), *(_QWORD *)(v95 + *(int *)(v4 + 24)));
  v103 = v92;
  v104 = v102;
  sub_1004B84A4(v95, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v44, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B84A4(v103, type metadata accessor for CRLAssetData);
  sub_1004CB800(v125, (uint64_t *)&unk_1013E9BE0);
  sub_1004B8460(a1, (uint64_t)v41, type metadata accessor for CRLMovieItemAssetData);
  v15 = v121;
  sub_1004B8460(a2, (uint64_t)v38, type metadata accessor for CRLMovieItemAssetData);
  v59 = (uint64_t)v129;
  v60 = (uint64_t)v127;
  if ((v104 & 1) == 0)
    goto LABEL_19;
LABEL_9:
  v61 = v15;
  v62 = v120;
  v63 = *(double *)&v41[v120[6]];
  sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLMovieItemAssetData);
  v64 = *(double *)&v38[v62[6]];
  sub_1004B84A4((uint64_t)v38, type metadata accessor for CRLMovieItemAssetData);
  v65 = v131;
  sub_1004B8460(a1, v131, type metadata accessor for CRLMovieItemAssetData);
  v66 = v132;
  sub_1004B8460(a2, v132, type metadata accessor for CRLMovieItemAssetData);
  if (v63 != v64)
  {
LABEL_20:
    sub_1004B84A4(v66, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v65, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460(a1, v60, type metadata accessor for CRLMovieItemAssetData);
    v70 = v60;
    v71 = v133;
    sub_1004B8460(a2, v133, type metadata accessor for CRLMovieItemAssetData);
    v72 = (uint64_t)v135;
    v73 = (uint64_t)v136;
    v74 = (uint64_t)v134;
    goto LABEL_21;
  }
  v67 = v120;
  v68 = *(double *)(v65 + v120[7]);
  sub_1004B84A4(v65, type metadata accessor for CRLMovieItemAssetData);
  v69 = *(double *)(v66 + v67[7]);
  sub_1004B84A4(v66, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B8460(a1, v60, type metadata accessor for CRLMovieItemAssetData);
  v70 = v60;
  v71 = v133;
  sub_1004B8460(a2, v133, type metadata accessor for CRLMovieItemAssetData);
  v72 = (uint64_t)v135;
  v73 = (uint64_t)v136;
  v74 = (uint64_t)v134;
  if (v68 != v69)
  {
LABEL_21:
    sub_1004B84A4(v71, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v70, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460(a1, v74, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460(a2, v72, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_22;
  }
  v75 = v120;
  v76 = *(double *)(v70 + v120[8]);
  sub_1004B84A4(v70, type metadata accessor for CRLMovieItemAssetData);
  v77 = *(double *)(v71 + v75[8]);
  sub_1004B84A4(v71, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B8460(a1, v74, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B8460(a2, v72, type metadata accessor for CRLMovieItemAssetData);
  if (v76 != v77)
  {
LABEL_22:
    sub_1004B84A4(v72, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v74, type metadata accessor for CRLMovieItemAssetData);
    v83 = v128;
    sub_1004B8460(a1, v128, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460(a2, v73, type metadata accessor for CRLMovieItemAssetData);
    v84 = (uint64_t)v61;
    goto LABEL_23;
  }
  v78 = v120;
  v79 = v74;
  v80 = *(unsigned __int8 *)(v74 + v120[9]);
  sub_1004B84A4(v79, type metadata accessor for CRLMovieItemAssetData);
  v81 = v72;
  v82 = *(unsigned __int8 *)(v72 + v78[9]);
  sub_1004B84A4(v81, type metadata accessor for CRLMovieItemAssetData);
  v83 = v128;
  sub_1004B8460(a1, v128, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B8460(a2, v73, type metadata accessor for CRLMovieItemAssetData);
  v84 = (uint64_t)v61;
  if (v80 != v82)
  {
LABEL_23:
    sub_1004B84A4(v73, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v83, type metadata accessor for CRLMovieItemAssetData);
    v88 = v126;
    goto LABEL_24;
  }
  v85 = v120;
  v86 = *(unsigned __int8 *)(v83 + v120[12]);
  sub_1004B84A4(v83, type metadata accessor for CRLMovieItemAssetData);
  v87 = *(unsigned __int8 *)(v73 + v85[12]);
  sub_1004B84A4(v73, type metadata accessor for CRLMovieItemAssetData);
  if (v86 == 2)
  {
    v88 = v126;
    if (v87 == 2)
    {
      sub_1004B8460(a1, v126, type metadata accessor for CRLMovieItemAssetData);
      sub_1004B8460(a2, v59, type metadata accessor for CRLMovieItemAssetData);
      goto LABEL_43;
    }
    goto LABEL_24;
  }
  v88 = v126;
  if (v87 == 2)
  {
LABEL_24:
    sub_1004B8460(a1, v88, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B8460(a2, v59, type metadata accessor for CRLMovieItemAssetData);
LABEL_25:
    sub_1004B84A4(v59, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v88, type metadata accessor for CRLMovieItemAssetData);
LABEL_26:
    sub_1004B8460(a1, v84, type metadata accessor for CRLMovieItemAssetData);
    v89 = v130;
    sub_1004B8460(a2, v130, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_27;
  }
  sub_1004B8460(a1, v126, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B8460(a2, v59, type metadata accessor for CRLMovieItemAssetData);
  if (((((v86 & 1) == 0) ^ v87) & 1) == 0)
    goto LABEL_25;
LABEL_43:
  v105 = v120;
  v106 = v120[10];
  v107 = (_QWORD *)(v88 + v106);
  v108 = *(_QWORD *)(v88 + v106 + 8);
  v109 = (_QWORD *)(v59 + v106);
  v110 = v109[1];
  if (!v108)
  {
    swift_bridgeObjectRetain(v109[1]);
    sub_1004B84A4(v59, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v88, type metadata accessor for CRLMovieItemAssetData);
    if (!v110)
      goto LABEL_50;
    v111 = v110;
    goto LABEL_52;
  }
  if (!v110)
  {
    swift_bridgeObjectRetain(v108);
    sub_1004B84A4(v59, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v88, type metadata accessor for CRLMovieItemAssetData);
    v111 = v108;
LABEL_52:
    swift_bridgeObjectRelease(v111);
    goto LABEL_26;
  }
  if (*v107 == *v109 && v108 == v110)
  {
    swift_bridgeObjectRetain(v108);
    sub_1004B84A4(v59, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v88, type metadata accessor for CRLMovieItemAssetData);
    swift_bridgeObjectRelease(v108);
LABEL_50:
    sub_1004B8460(a1, v84, type metadata accessor for CRLMovieItemAssetData);
    v89 = v130;
    sub_1004B8460(a2, v130, type metadata accessor for CRLMovieItemAssetData);
    goto LABEL_54;
  }
  v112 = _stringCompareWithSmolCheck(_:_:expecting:)(*v107, v108, *v109, v109[1], 0);
  swift_bridgeObjectRetain(v108);
  sub_1004B84A4(v59, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B84A4(v88, type metadata accessor for CRLMovieItemAssetData);
  swift_bridgeObjectRelease(v108);
  sub_1004B8460(a1, v84, type metadata accessor for CRLMovieItemAssetData);
  v89 = v130;
  v105 = v120;
  sub_1004B8460(a2, v130, type metadata accessor for CRLMovieItemAssetData);
  if ((v112 & 1) == 0)
  {
LABEL_27:
    sub_1004B84A4(v89, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v84, type metadata accessor for CRLMovieItemAssetData);
LABEL_28:
    v90 = 0;
    return v90 & 1;
  }
LABEL_54:
  v113 = v105[11];
  v114 = (_QWORD *)(v84 + v113);
  v115 = *(_QWORD *)(v84 + v113 + 8);
  v116 = (_QWORD *)(v89 + v113);
  v117 = v116[1];
  if (!v115)
  {
    swift_bridgeObjectRetain(v116[1]);
    sub_1004B84A4(v89, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v84, type metadata accessor for CRLMovieItemAssetData);
    if (!v117)
    {
      v90 = 1;
      return v90 & 1;
    }
    swift_bridgeObjectRelease(v117);
    goto LABEL_28;
  }
  if (!v117)
  {
    swift_bridgeObjectRetain(v115);
    sub_1004B84A4(v89, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v84, type metadata accessor for CRLMovieItemAssetData);
    swift_bridgeObjectRelease(v115);
    goto LABEL_28;
  }
  if (*v114 == *v116 && v115 == v117)
    v90 = 1;
  else
    v90 = _stringCompareWithSmolCheck(_:_:expecting:)(*v114, v115, *v116, v116[1], 0);
  swift_bridgeObjectRetain(v115);
  sub_1004B84A4(v89, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B84A4(v84, type metadata accessor for CRLMovieItemAssetData);
  swift_bridgeObjectRelease(v115);
  return v90 & 1;
}

uint64_t sub_1004F2010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  float v37;
  char v38;
  float v39;
  char v40;
  uint64_t v41;
  float v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  _OWORD v51[14];
  uint64_t v52;
  _OWORD v53[14];
  uint64_t v54;
  uint64_t v55[29];
  uint64_t v56[29];
  _OWORD v57[29];
  uint64_t v58[58];
  uint64_t v59[29];
  uint64_t v60[29];
  _BYTE v61[232];
  _OWORD v62[14];
  uint64_t v63;

  v46 = type metadata accessor for CRLMovieItemCRDTData(0);
  v4 = __chkstk_darwin(v46);
  v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v49 = (char *)&v45 - v7;
  v8 = __chkstk_darwin(v6);
  v47 = (uint64_t)&v45 - v9;
  v10 = __chkstk_darwin(v8);
  v48 = (uint64_t)&v45 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v45 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v45 - v15;
  v17 = type metadata accessor for CRLMovieItemAssetData(0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v45 - v21;
  v23 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v23);
  CRRegister.wrappedValue.getter(v23);
  v24 = sub_1004F12F4((uint64_t)v22, (uint64_t)v20);
  v25 = (uint64_t)v20;
  v26 = a2;
  sub_1004B84A4(v25, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B8460(a1, (uint64_t)v16, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004B8460(a2, (uint64_t)v14, type metadata accessor for CRLMovieItemCRDTData);
  if ((v24 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLMovieItemCRDTData);
    v31 = (uint64_t)v49;
    v30 = (uint64_t)v50;
    v29 = v47;
    v28 = v48;
LABEL_9:
    sub_1004B8460(a1, v28, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B8460(v26, v29, type metadata accessor for CRLMovieItemCRDTData);
LABEL_10:
    sub_1004B84A4(v29, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B84A4(v28, type metadata accessor for CRLMovieItemCRDTData);
    goto LABEL_11;
  }
  v27 = sub_1004B804C(&qword_1013E0A88);
  CRRegister.wrappedValue.getter(v27);
  sub_1004C4938((uint64_t)v58, (uint64_t)v59, (uint64_t *)&unk_1013F1530);
  CRRegister.wrappedValue.getter(v27);
  sub_1004C4938((uint64_t)v58, (uint64_t)v60, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v59, (uint64_t)v58, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v60, (uint64_t)&v58[29], (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v59, (uint64_t)v61, (uint64_t *)&unk_1013F1530);
  if (sub_1004F276C((uint64_t)v61) == 1)
  {
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004C4938((uint64_t)&v58[29], (uint64_t)v62, (uint64_t *)&unk_1013F1530);
    sub_1004C4938((uint64_t)v62, (uint64_t)v57, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)v57) == 1)
    {
      sub_1004C4938((uint64_t)v58, (uint64_t)v56, (uint64_t *)&unk_1013F1530);
      sub_1004F28E8(v56);
      v28 = v48;
      sub_1004B8460(a1, v48, type metadata accessor for CRLMovieItemCRDTData);
      v29 = v47;
      sub_1004B8460(v26, v47, type metadata accessor for CRLMovieItemCRDTData);
      v31 = (uint64_t)v49;
      v30 = (uint64_t)v50;
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  sub_1004C4938((uint64_t)v60, (uint64_t)v56, (uint64_t *)&unk_1013F1530);
  if (sub_1004F276C((uint64_t)v56) == 1)
  {
    sub_1004C4938((uint64_t)v59, (uint64_t)v57, (uint64_t *)&unk_1013F1530);
    sub_1004F2958(v57);
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004F28E8(v59);
LABEL_8:
    v31 = (uint64_t)v49;
    v30 = (uint64_t)v50;
    v29 = v47;
    v28 = v48;
    memcpy(v57, v58, sizeof(v57));
    sub_1004F2784((uint64_t)v57);
    goto LABEL_9;
  }
  sub_1004C4938((uint64_t)v59, (uint64_t)v51, (uint64_t *)&unk_1013F1530);
  v62[12] = v51[12];
  v62[13] = v51[13];
  v63 = v52;
  v62[8] = v51[8];
  v62[9] = v51[9];
  v62[11] = v51[11];
  v62[10] = v51[10];
  v62[4] = v51[4];
  v62[5] = v51[5];
  v62[7] = v51[7];
  v62[6] = v51[6];
  v62[0] = v51[0];
  v62[1] = v51[1];
  v62[3] = v51[3];
  v62[2] = v51[2];
  sub_1004C4938((uint64_t)v60, (uint64_t)v53, (uint64_t *)&unk_1013F1530);
  v57[12] = v53[12];
  v57[13] = v53[13];
  *(_QWORD *)&v57[14] = v54;
  v57[8] = v53[8];
  v57[9] = v53[9];
  v57[11] = v53[11];
  v57[10] = v53[10];
  v57[4] = v53[4];
  v57[5] = v53[5];
  v57[7] = v53[7];
  v57[6] = v53[6];
  v57[0] = v53[0];
  v57[1] = v53[1];
  v57[2] = v53[2];
  v57[3] = v53[3];
  sub_1004F2958(v51);
  v34 = sub_1008BD558(v62, v57);
  sub_1004F28E8(v60);
  sub_1004F28E8(v59);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004C4938((uint64_t)v58, (uint64_t)v55, (uint64_t *)&unk_1013F1530);
  sub_1004F28E8(v55);
  v28 = v48;
  sub_1004B8460(a1, v48, type metadata accessor for CRLMovieItemCRDTData);
  v29 = v47;
  sub_1004B8460(v26, v47, type metadata accessor for CRLMovieItemCRDTData);
  v31 = (uint64_t)v49;
  v30 = (uint64_t)v50;
  if ((v34 & 1) == 0)
    goto LABEL_10;
LABEL_15:
  v35 = v29;
  v36 = sub_1004B804C(&qword_1013E0A90);
  CRRegister.wrappedValue.getter(v36);
  v37 = *(float *)v58;
  v38 = BYTE4(v58[0]);
  CRRegister.wrappedValue.getter(v36);
  v39 = *(float *)v58;
  v40 = BYTE4(v58[0]);
  sub_1004B84A4(v35, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004B84A4(v28, type metadata accessor for CRLMovieItemCRDTData);
  if ((v38 & 1) == 0)
  {
    if ((v40 & 1) == 0)
    {
      sub_1004B8460(a1, v31, type metadata accessor for CRLMovieItemCRDTData);
      sub_1004B8460(v26, v30, type metadata accessor for CRLMovieItemCRDTData);
      if (v37 != v39)
        goto LABEL_12;
      goto LABEL_20;
    }
LABEL_11:
    sub_1004B8460(a1, v31, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B8460(v26, v30, type metadata accessor for CRLMovieItemCRDTData);
    goto LABEL_12;
  }
  if ((v40 & 1) == 0)
    goto LABEL_11;
  sub_1004B8460(a1, v31, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004B8460(v26, v30, type metadata accessor for CRLMovieItemCRDTData);
LABEL_20:
  v41 = sub_1004B804C(&qword_1013DFA58);
  CRRegister.wrappedValue.getter(v41);
  v42 = *(float *)v58;
  v43 = v58[1];
  CRRegister.wrappedValue.getter(v41);
  v44 = v58[1];
  if (v42 == *(float *)v58)
  {
    v32 = sub_100C9E04C(v43, v58[1]);
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v44);
    goto LABEL_13;
  }
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v44);
LABEL_12:
  v32 = 0;
LABEL_13:
  sub_1004B84A4(v30, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004B84A4(v31, type metadata accessor for CRLMovieItemCRDTData);
  return v32 & 1;
}

uint64_t sub_1004F276C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 96);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1004F2784(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v2 = *(_QWORD *)(a1 + 232);
  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 248);
  v5 = *(_QWORD *)(a1 + 256);
  v6 = *(_QWORD *)(a1 + 264);
  v7 = *(_QWORD *)(a1 + 272);
  v8 = *(_QWORD *)(a1 + 280);
  v9 = *(_QWORD *)(a1 + 288);
  v20 = *(_OWORD *)(a1 + 312);
  v21 = *(_OWORD *)(a1 + 296);
  v18 = *(_OWORD *)(a1 + 344);
  v19 = *(_OWORD *)(a1 + 328);
  v16 = *(_OWORD *)(a1 + 376);
  v17 = *(_OWORD *)(a1 + 360);
  v15 = *(_OWORD *)(a1 + 392);
  v13 = *(_OWORD *)(a1 + 424);
  v14 = *(_OWORD *)(a1 + 408);
  v12 = *(_OWORD *)(a1 + 440);
  v10 = *(_QWORD *)(a1 + 456);
  sub_1004C35DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224));
  sub_1004C35DC(v2, v3, v4, v5, v6, v7, v8, v9, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v10);
  return a1;
}

uint64_t *sub_1004F28E8(uint64_t *a1)
{
  sub_1004C35DC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28]);
  return a1;
}

_QWORD *sub_1004F2958(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[6];
  v3 = a1[9];
  v4 = a1[12];
  v5 = a1[18];
  v6 = a1[19];
  v7 = a1[20];
  v8 = a1[23];
  v9 = a1[24];
  v10 = a1[25];
  v12 = a1[27];
  v13 = a1[26];
  v14 = a1[28];
  swift_bridgeObjectRetain(a1[11]);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  sub_1004C3910(v5, v6, v7);
  swift_bridgeObjectRetain(v8);
  sub_1004C393C(v9, v10, v13, v12);
  swift_bridgeObjectRetain(v14);
  return a1;
}

uint64_t sub_1004F2A1C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1004F2A34(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 9)
    return 10;
  else
    return byte_100EF7260[a1 + 1];
}

uint64_t sub_1004F2A58(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;

  if (a1 == 0x7461446569766F6DLL && a2 == 0xE900000000000061)
  {
    v5 = 0xE900000000000061;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446569766F6DLL, 0xE900000000000061, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6D49726574736F70 && a2 == 0xEF61746144656761)
  {
    v7 = 0xEF61746144656761;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D49726574736F70, 0xEF61746144656761, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6954726574736F70 && a2 == 0xEA0000000000656DLL)
  {
    v8 = 0xEA0000000000656DLL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6954726574736F70, 0xEA0000000000656DLL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    v9 = 0xE900000000000065;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D69547472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    v10 = 0xE700000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656D6954646E65, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x4F6F696475417369 && a2 == 0xEB00000000796C6ELL)
  {
    v11 = 0xEB00000000796C6ELL;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4F6F696475417369, 0xEB00000000796C6ELL, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v12 = 0xE500000000000000;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x726F7461657263 && a2 == 0xE700000000000000)
  {
    v13 = 0xE700000000000000;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F7461657263, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0x6E69706F6F4C7369 && a2 == 0xE900000000000067)
  {
    v14 = 0xE900000000000067;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E69706F6F4C7369, 0xE900000000000067, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 9;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v15 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1004F2EB0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    v5 = 0xEC00000073756964;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x615272656E726F63, 0xEC00000073756964, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1004F2FB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;

  v3 = sub_1004B804C(&qword_1013E0D78);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_1004BB5A4(a1, v7);
  v10 = sub_1004F0E1C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLMovieMaskData.CodingKeys, &type metadata for CRLMovieMaskData.CodingKeys, v10, v7, v8);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v16 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v16, v3);
    v11 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v15 = 1;
    v12 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, &v15, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = (_QWORD *)v14[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return v9;
}

unint64_t sub_1004F3130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0D80;
  if (!qword_1013E0D80)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013F3CF0);
    sub_1004B7878(&qword_1013F3D00, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCRValue, (uint64_t)&protocol conformance descriptor for AnyCRValue);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1013E0D80);
  }
  return result;
}

unint64_t sub_1004F31B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F3D20;
  if (!qword_1013F3D20)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013F3CF0);
    sub_1004B7878(&qword_1013E0D90, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCRValue, (uint64_t)&protocol conformance descriptor for AnyCRValue);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1013F3D20);
  }
  return result;
}

unint64_t sub_1004F3238()
{
  unint64_t result;

  result = qword_1013E0D98;
  if (!qword_1013E0D98)
  {
    result = swift_getWitnessTable(&unk_100EF6D00, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0D98);
  }
  return result;
}

unint64_t sub_1004F327C()
{
  unint64_t result;

  result = qword_1013E0DA0;
  if (!qword_1013E0DA0)
  {
    result = swift_getWitnessTable(&unk_100EF6CD8, &type metadata for CRLMovieMaskData);
    atomic_store(result, (unint64_t *)&qword_1013E0DA0);
  }
  return result;
}

uint64_t sub_1004F32C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CRLMovieMaskData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1004F3354 + 4 * byte_100EF66AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1004F3388 + 4 * byte_100EF66AA[v4]))();
}

uint64_t sub_1004F3388(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F3390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004F3398);
  return result;
}

uint64_t sub_1004F33A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004F33ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1004F33B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F33B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLMovieMaskData.CodingKeys()
{
  return &type metadata for CRLMovieMaskData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLTransactablePropertyMapKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLMovieItemAssetData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1004F34B0 + 4 * byte_100EF66B9[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1004F34E4 + 4 * byte_100EF66B4[v4]))();
}

