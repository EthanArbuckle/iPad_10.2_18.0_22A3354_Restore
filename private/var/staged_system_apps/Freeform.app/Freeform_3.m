uint64_t sub_1004F34E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F34EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004F34F4);
  return result;
}

uint64_t sub_1004F3500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004F3508);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1004F350C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004F3514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLMovieItemAssetData.CodingKeys()
{
  return &type metadata for CRLMovieItemAssetData.CodingKeys;
}

unint64_t sub_1004F3534()
{
  unint64_t result;

  result = qword_1013E0DF0;
  if (!qword_1013E0DF0)
  {
    result = swift_getWitnessTable(&unk_100EF7144, &type metadata for CRLMovieItemAssetData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0DF0);
  }
  return result;
}

unint64_t sub_1004F357C()
{
  unint64_t result;

  result = qword_1013E0DF8;
  if (!qword_1013E0DF8)
  {
    result = swift_getWitnessTable(&unk_100EF71E4, &type metadata for CRLMovieMaskData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E0DF8);
  }
  return result;
}

BOOL CRLiOSDocumentModeHandwriting.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  _BYTE v9[24];
  uint64_t v10;

  ObjectType = swift_getObjectType(v1);
  sub_1004F370C(a1, (uint64_t)v9);
  if (v10)
  {
    if ((swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) != 0)
    {
      v4 = v8;
      v5 = swift_getObjectType(v1);
      v6 = swift_getObjectType(v4);

      return v5 == v6;
    }
  }
  else
  {
    sub_1004D28EC((uint64_t)v9);
  }
  return 0;
}

uint64_t sub_1004F370C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E0230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::UInt __swiftcall CRLiOSDocumentModeHandwriting.hash()()
{
  return 23;
}

char *CRLiOSDocumentModeHandwriting.toolTray.getter()
{
  void *v0;
  char *result;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  result = (char *)objc_msgSend(v0, "boardViewController");
  if (result)
  {
    v2 = result;
    v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
    v4 = *(void **)&result[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray];
    v5 = v4;
    if (!v4)
    {
      v5 = sub_100C26C7C();
      v6 = *(void **)&v2[v3];
      *(_QWORD *)&v2[v3] = v5;
      v7 = v5;

    }
    v8 = v4;

    return (char *)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.modeWillBegin(from:forced:)(CRLiOSDocumentMode from, Swift::Bool forced)
{
  char *v2;
  char boardViewController;
  Class isa;
  void *v5;
  NSString v6;
  unint64_t v7;
  Class v8;
  void *Strong;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  Class v15;
  objc_super v16;

  boardViewController = (char)from._boardViewController;
  isa = from.super.isa;
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
  objc_msgSendSuper2(&v16, "modeWillBeginFromMode:forced:", isa, boardViewController & 1);
  v5 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v6 = String._bridgeToObjectiveC()();
  v7 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v8 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "sendEventInDomain:lazily:eventPayload:", v6, 1, v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v2[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc]);
  v10 = objc_msgSend(Strong, "textInputResponder");
  if (v10)
  {
    v11 = v10;
    if (objc_msgSend(v10, "crl_textInputSource") == (id)3)
    {
      v12 = v11;
      v11 = Strong;
    }
    else
    {
      v13 = objc_msgSend(Strong, "canvasEditor");
      if (v13)
      {
        v14 = v13;
        v15 = Set._bridgeToObjectiveC()().super.isa;
        v12 = objc_msgSend(v14, "selectionPathWithInfos:", v15);

        objc_msgSend(Strong, "setSelectionPath:withSelectionFlags:", v12, 0);
        swift_unknownObjectRelease(v14);

      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"clearSelectionForBeginningModeIfNeeded()", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"clearSelectionForBeginningModeIfNeeded()", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        v12 = Strong;
      }
    }

    Strong = v11;
  }

}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.modeDidBegin(from:forced:)(CRLiOSDocumentMode from, Swift::Bool forced)
{
  void *v2;
  char boardViewController;
  Class isa;
  objc_super v5;

  boardViewController = (char)from._boardViewController;
  isa = from.super.isa;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
  objc_msgSendSuper2(&v5, "modeDidBeginFromMode:forced:", isa, boardViewController & 1);
  sub_1004F40F4();
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.modeWillEnd(for:forced:)(CRLiOSDocumentMode a1, Swift::Bool forced)
{
  char *v2;
  void *v3;
  char boardViewController;
  Class isa;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  objc_super v11;
  char v12[24];

  v3 = v2;
  boardViewController = (char)a1._boardViewController;
  isa = a1.super.isa;
  v6 = &v2[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions];
  swift_beginAccess(v6, v12, 1, 0);
  v7 = *(_QWORD *)v6;
  *(_QWORD *)v6 = &_swiftEmptySetSingleton;
  v8 = objc_msgSend(v3, "boardViewController", swift_bridgeObjectRelease(v7).n128_f64[0]);
  if (v8)
  {
    v9 = v8;
    v10 = sub_100C1CAE8();

    objc_msgSend(v10, "removeModeObserver:", v3);
    v11.receiver = v3;
    v11.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
    objc_msgSendSuper2(&v11, "modeWillEndForMode:forced:", isa, boardViewController & 1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t CRLiOSDocumentModeHandwriting.shouldSuppressKeyboard.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  void *Strong;

  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes) & 1) != 0)
    return 1;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v2 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc, a2);
  v3 = objc_msgSend(Strong, "textGesturesInFlight");

  return (uint64_t)v3;
}

Swift::Bool __swiftcall CRLiOSDocumentModeHandwriting.restrictedGestureModeShouldAllowGesture(_:)(UIGestureRecognizer a1)
{
  uint64_t v1;
  void *Strong;
  id v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  char v9;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v1 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc);
  v4 = objc_msgSend(Strong, "layerHost");

  if (!v4)
    goto LABEL_6;
  if ((objc_msgSend(v4, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v4);
LABEL_6:
    sub_100757E04(&_mh_execute_header, (uint64_t)"restrictedGestureModeShouldAllowGesture(_:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 118, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restrictedGestureModeShouldAllowGesture(_:)", 43, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2u, 118, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_7:
    v9 = 1;
    return v9 & 1;
  }
  v5 = objc_msgSend(v4, "asiOSCVC");
  swift_unknownObjectRelease(v4);
  v6 = objc_msgSend(v5, "pencilDownGestureRecognizer");
  if (!v6)
  {

    goto LABEL_7;
  }
  v7 = v6;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  v8 = static NSObject.== infix(_:_:)(a1.super.isa, v7);

  v9 = v8 ^ 1;
  return v9 & 1;
}

void sub_1004F40F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  void *Strong;
  __CFString *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, __n128);
  char *v18;
  double v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  _BYTE v43[24];

  v1 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v42 = *(_QWORD **)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v40 = (char *)&v38 - v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v38 - v6;
  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc]);
  v10 = CFSTR("CRLEditorControllerDidChangeCurrentEditors");
  v11 = objc_msgSend(Strong, "editorController");
  NSNotificationCenter.publisher(for:object:)(v10, v11);

  v12 = swift_allocObject(&unk_101269668, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  v13 = sub_1004F56BC();
  v14 = v0;
  v15 = Publisher<>.sink(receiveValue:)(sub_1004F5744, v12, v1, v13);
  v16 = swift_release(v12);
  v17 = (void (*)(char *, uint64_t, __n128))v42[1];
  v17(v7, v1, v16);
  v18 = &v14[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions];
  swift_beginAccess(&v14[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions], v43, 33, 0);
  AnyCancellable.store(in:)(v18);
  swift_endAccess(v43);
  *(_QWORD *)&v19 = swift_release(v15).n128_u64[0];
  v39 = Strong;
  v20 = objc_msgSend(Strong, "gestureDispatcher", v19);
  v21 = v40;
  v42 = v8;
  NSNotificationCenter.publisher(for:object:)(CFSTR("CRLTextGesturesDidEndNotification"), v20);

  v22 = swift_allocObject(&unk_101269690, 24, 7);
  *(_QWORD *)(v22 + 16) = v14;
  v23 = v14;
  v24 = Publisher<>.sink(receiveValue:)(sub_1004F5704, v22, v1, v13);
  v25 = swift_release(v22);
  v40 = (char *)v17;
  v17(v21, v1, v25);
  swift_beginAccess(v18, v43, 33, 0);
  AnyCancellable.store(in:)(v18);
  swift_endAccess(v43);
  swift_release(v24);
  if (qword_1013DCBA8 != -1)
    swift_once(&qword_1013DCBA8, sub_1006486B4);
  v26 = qword_10147ED20;
  v27 = v39;
  v28 = objc_msgSend(v39, "textInputResponder");
  v30 = v41;
  v29 = v42;
  NSNotificationCenter.publisher(for:object:)(v26, v28);

  v31 = swift_allocObject(&unk_1012696B8, 24, 7);
  *(_QWORD *)(v31 + 16) = v23;
  v32 = v23;
  v33 = Publisher<>.sink(receiveValue:)(sub_1004F5724, v31, v1, v13);
  v34 = swift_release(v31);
  ((void (*)(char *, uint64_t, __n128))v40)(v30, v1, v34);
  swift_beginAccess(v18, v43, 33, 0);
  AnyCancellable.store(in:)(v18);
  swift_endAccess(v43);
  v35 = objc_msgSend(v32, "boardViewController", swift_release(v33).n128_f64[0]);
  if (v35)
  {
    v36 = v35;
    v37 = sub_100C1CAE8();

    objc_msgSend(v37, "addModeObserver:", v32);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004F44F4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[3];
  uint64_t v38;
  __int128 v39;
  __int128 v40;

  v1 = v0;
  v2 = type metadata accessor for NSFastEnumerationIterator(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Notification.userInfo.getter(v4);
  if (!v7)
  {
    v39 = 0u;
    v40 = 0u;
LABEL_13:
    sub_1004D28EC((uint64_t)&v39);
    goto LABEL_14;
  }
  v8 = v7;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLTextGesturesDidEndNotificationFiredGestureKindsKey"));
  v36 = v9;
  AnyHashable.init<A>(_:)(&v35, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v8 + 16) && (v10 = sub_1008432BC((uint64_t)v37), (v11 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  swift_bridgeObjectRelease(v8);
  sub_1004B89A4((uint64_t)v37);
  if (!*((_QWORD *)&v40 + 1))
    goto LABEL_13;
  v12 = sub_1004B804C(&qword_1013E0EB0);
  if ((swift_dynamicCast(v37, &v39, (char *)&type metadata for Any + 8, v12, 6) & 1) == 0)
  {
LABEL_14:
    sub_100757E04(&_mh_execute_header, (uint64_t)"textGesturesDidEnd(_:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 169, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"textGesturesDidEnd(_:)", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2u, 169, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v13 = v37[0];
  sub_1004F49C8(v37[0]);
  v15 = v14;
  swift_bridgeObjectRelease(v13);
  v17 = Notification.userInfo.getter(v16);
  if (!v17)
  {
    v39 = 0u;
    v40 = 0u;
LABEL_25:
    sub_1004D28EC((uint64_t)&v39);
    goto LABEL_26;
  }
  v18 = v17;
  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLTextGesturesDidEndNotificationFiredGesturesKey"));
  v36 = v19;
  AnyHashable.init<A>(_:)(&v35, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v18 + 16) && (v20 = sub_1008432BC((uint64_t)v37), (v21 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v18 + 56) + 32 * v20, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  swift_bridgeObjectRelease(v18);
  sub_1004B89A4((uint64_t)v37);
  if (!*((_QWORD *)&v40 + 1))
    goto LABEL_25;
  v22 = sub_1004B8930(0, &qword_1013E0EB8, NSSet_ptr);
  if ((swift_dynamicCast(v37, &v39, (char *)&type metadata for Any + 8, v22, 6) & 1) == 0)
  {
LABEL_26:
    sub_100757E04(&_mh_execute_header, (uint64_t)"textGesturesDidEnd(_:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 177, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"textGesturesDidEnd(_:)", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2u, 177, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v34 = (id)v37[0];
  v23 = NSSet.makeIterator()();
  NSFastEnumerationIterator.next()(v37, v23);
  if (!v38)
  {
LABEL_27:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v28 = OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures;
    if (*((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures) == 1)
    {
      sub_1004F4D24();
      v29 = v34;
    }
    else
    {
      v29 = v34;
      if (!objc_msgSend(v34, "count"))
      {

        return;
      }
      if ((v15 & 1) != 0)
      {
        v30 = objc_msgSend(v1, "boardViewController");
        if (!v30)
        {
          __break(1u);
          return;
        }
        v31 = v30;
        v32 = sub_100C1CAE8();

        objc_msgSend(v32, "resetToDefaultModeAnimated:", 1);
        v29 = v32;
      }
      else
      {
        sub_1004F4D24();
      }
    }

    *((_BYTE *)v1 + v28) = 0;
    return;
  }
  while (1)
  {
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0F20);
    v25 = swift_dynamicCast(&v39, v37, (char *)&type metadata for Any + 8, v24, 6);
    if ((v25 & 1) != 0)
    {
      v26 = v39;
      v27 = objc_msgSend((id)v39, "inputType");
      v25 = swift_unknownObjectRelease(v26);
      if (v27 == (id)2)
        break;
    }
    NSFastEnumerationIterator.next()(v37, v25);
    if (!v38)
      goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

  *((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures) = 0;
}

void sub_1004F49C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  void *v34;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
    v5 = sub_1004F5640();
    v6 = Set.Iterator.init(_cocoa:)(v33, v3, v4, v5);
    v1 = v33[0];
    v31 = v33[1];
    v7 = v33[2];
    v8 = v33[3];
    v9 = v33[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v31 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v30 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v14 = v8;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v17 = __CocoaSet.Iterator.next()(v6);
    v18 = v17;
    if (!v17)
      goto LABEL_38;
    v32 = v17;
    v19 = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v34, &v32, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v34;
    swift_unknownObjectRelease(v18);
    if (!v20)
      goto LABEL_38;
LABEL_35:
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v26 = v25;
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLWPImmediatePress"));
    v29 = v27;
    if (v24 == v28 && v26 == v27)
    {

      v6 = (_QWORD *)swift_bridgeObjectRelease_n(v26, 2);
    }
    else
    {
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v28, v27, 0);

      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v29);
      if ((v13 & 1) == 0)
        goto LABEL_38;
    }
  }
  if (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v8 << 6);
LABEL_34:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_38;
    goto LABEL_35;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 >= v30)
      goto LABEL_38;
    v22 = *(_QWORD *)(v31 + 8 * v21);
    ++v8;
    if (!v22)
    {
      v8 = v14 + 2;
      if (v14 + 2 >= v30)
        goto LABEL_38;
      v22 = *(_QWORD *)(v31 + 8 * v8);
      if (!v22)
      {
        v8 = v14 + 3;
        if (v14 + 3 >= v30)
          goto LABEL_38;
        v22 = *(_QWORD *)(v31 + 8 * v8);
        if (!v22)
        {
          v8 = v14 + 4;
          if (v14 + 4 >= v30)
            goto LABEL_38;
          v22 = *(_QWORD *)(v31 + 8 * v8);
          if (!v22)
          {
            v8 = v14 + 5;
            if (v14 + 5 >= v30)
              goto LABEL_38;
            v22 = *(_QWORD *)(v31 + 8 * v8);
            if (!v22)
            {
              v23 = v14 + 6;
              while (v30 != v23)
              {
                v22 = *(_QWORD *)(v31 + 8 * v23++);
                if (v22)
                {
                  v8 = v23 - 1;
                  goto LABEL_33;
                }
              }
LABEL_38:
              sub_1004D284C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_33:
    v9 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v8 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

void sub_1004F4D24()
{
  char *v0;
  id v1;
  char v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  char *v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  unsigned int v12;
  void *v13;
  id v14;
  unsigned int v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id Strong;

  if ((v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange] & 1) == 0)
  {
    v1 = objc_msgSend(v0, "boardViewController");
    if (v1)
    {
      if (*((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing) == 1)
      {
LABEL_5:

        return;
      }
      v2 = *((_BYTE *)v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed);

      if ((v2 & 1) != 0)
        return;
      v3 = &v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc];
      Strong = (id)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_icc]);
      if ((objc_msgSend(Strong, "textGesturesInFlight") & 1) != 0)
      {

        v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures] = 1;
        return;
      }
      v4 = objc_msgSend(Strong, "layerHost");
      if (v4)
      {
        v5 = v4;
        if ((objc_msgSend(v4, "respondsToSelector:", "asiOSCVC") & 1) != 0)
        {
          v19 = objc_msgSend(v5, "asiOSCVC");
          swift_unknownObjectRelease(v5);
          if ((objc_msgSend(v19, "isHandlingScribbleWriting") & 1) != 0)
          {

LABEL_15:
            v1 = Strong;
            goto LABEL_5;
          }
          if ((objc_msgSend(v19, "isShowingRadialPalette") & 1) != 0)
            goto LABEL_17;
          v6 = Strong;
          if ((v0[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes] & 1) != 0)
            goto LABEL_19;
          v7 = (char *)objc_msgSend(Strong, "textInputResponder");
          if (!v7)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 244, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2u, 244, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_17:
            v6 = Strong;
LABEL_19:

            v1 = v19;
            goto LABEL_5;
          }
          v8 = v7;
          v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
          if (v9)
          {
            swift_unknownObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor]);
            v10 = objc_msgSend(v8, "inputView");
            if (v10)
            {
              v11 = v10;
              v12 = objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "isNullInputView:", v10);

            }
            else
            {
              v12 = 0;
            }
          }
          else
          {
            v12 = 1;
          }
          v13 = (void *)swift_unknownObjectUnownedLoadStrong(v3);
          v14 = objc_msgSend(v13, "textInputResponder");

          if (v14)
          {
            v15 = objc_msgSend(v14, "isFirstResponder");

            if ((v15 ^ 1 | v12) != 1)
            {

              goto LABEL_32;
            }
          }
          v16 = objc_msgSend(v0, "boardViewController");
          if (v16)
          {
            v17 = v16;
            v18 = sub_100C1CAE8();

            objc_msgSend(v18, "resetToDefaultModeAnimated:", 1);
LABEL_32:
            swift_unknownObjectRelease(v9);
            return;
          }
LABEL_34:
          __break(1u);
          return;
        }
        swift_unknownObjectRelease(v5);
      }
      sub_100757E04(&_mh_execute_header, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2, 230, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endModeIfNoFocusedTextEditor()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLiOSDocumentModeHandwriting.swift", 104, 2u, 230, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_34;
  }
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.didSetDocumentMode(_:from:animated:)(CRLiOSDocumentMode _, CRLiOSDocumentMode from, Swift::Bool animated)
{
  uint64_t v3;

  *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes) = 0;
}

Swift::Void __swiftcall CRLiOSDocumentModeHandwriting.willSetDocumentMode(_:from:animated:)(CRLiOSDocumentMode _, CRLiOSDocumentMode from, Swift::Bool animated)
{
  uint64_t v3;

  *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes) = 1;
}

uint64_t CRLiOSDocumentModeHandwriting.performBlockIgnoringSelectionChanges(toExitHandwritingMode:)(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange) = 1;
  result = a1();
  *(_BYTE *)(v1 + v2) = 0;
  return result;
}

id CRLiOSDocumentModeHandwriting.handleTapOnCanvasBackground(atUnscaledPoint:)()
{
  void *v0;
  id result;
  void *v2;
  id v3;

  result = objc_msgSend(v0, "boardViewController");
  if (result)
  {
    v2 = result;
    v3 = sub_100C1CAE8();

    objc_msgSend(v3, "resetToDefaultModeAnimated:", 1);
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id CRLiOSDocumentModeHandwriting.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSDocumentModeHandwriting();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1004F5394(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;

  v12 = type metadata accessor for __VaListBuilder(0);
  v13 = (_QWORD *)swift_allocObject(v12, 48, 7);
  v13[2] = 8;
  v13[3] = 0;
  v14 = v13 + 3;
  v13[4] = 0;
  v13[5] = 0;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = 0;
    v17 = a1 + 32;
    while (1)
    {
      sub_1004E90B0(v17 + 40 * v16, (uint64_t)v52);
      v18 = v53;
      v19 = v54;
      sub_1004BB5A4(v52, v53);
      v20 = dispatch thunk of CVarArg._cVarArgEncoding.getter(v18, v19);
      v21 = *v14;
      v22 = *(_QWORD *)(v20 + 16);
      v23 = __OFADD__(*v14, v22);
      v24 = *v14 + v22;
      if (v23)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return;
      }
      v25 = v20;
      v26 = v13[4];
      if (v26 >= v24)
        goto LABEL_18;
      if (v26 + 0x4000000000000000 < 0)
        goto LABEL_29;
      v27 = (char *)v13[5];
      if (2 * v26 > v24)
        v24 = 2 * v26;
      v13[4] = v24;
      if ((unint64_t)(v24 - 0x1000000000000000) >> 61 != 7)
        goto LABEL_30;
      v28 = (char *)swift_slowAlloc(8 * v24, 7);
      v13[5] = v28;
      if (v27)
        break;
LABEL_19:
      if (!v28)
        goto LABEL_32;
      v30 = *(_QWORD *)(v25 + 16);
      if (v30)
      {
        v31 = (uint64_t *)(v25 + 32);
        v32 = *v14;
        while (1)
        {
          v33 = *v31++;
          *(_QWORD *)&v28[8 * v32] = v33;
          v32 = *v14 + 1;
          if (__OFADD__(*v14, 1))
            break;
          *v14 = v32;
          if (!--v30)
            goto LABEL_3;
        }
        __break(1u);
        goto LABEL_28;
      }
LABEL_3:
      ++v16;
      swift_bridgeObjectRelease(v25);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v52);
      if (v16 == v15)
        goto LABEL_25;
    }
    if (v28 != v27 || v28 >= &v27[8 * v21])
      memmove(v28, v27, 8 * v21);
    __VaListBuilder.deallocStorage(wordCount:storage:)(v26, v27);
LABEL_18:
    v28 = (char *)v13[5];
    goto LABEL_19;
  }
LABEL_25:
  v34 = __VaListBuilder.va_list()();
  v35 = (void *)objc_opt_self(CRLAssertionHandler);
  StaticString.description.getter(a2, a3, a4);
  v37 = v36;
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  StaticString.description.getter(a5, a6, a7);
  v40 = v39;
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  if (a8 < 0)
    goto LABEL_31;
  StaticString.description.getter(a9, a10, a11);
  v43 = v42;
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "handleFailureInFunction:file:lineNumber:isFatal:format:args:", v38, v41, a8, 0, v44, v34, swift_bridgeObjectRelease(v43).n128_f64[0]);
  swift_release(v13);

}

uint64_t type metadata accessor for CRLiOSDocumentModeHandwriting()
{
  return objc_opt_self(_TtC8Freeform29CRLiOSDocumentModeHandwriting);
}

unint64_t sub_1004F5640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0F30;
  if (!qword_1013E0F30)
  {
    v1 = sub_1004B8930(255, (unint64_t *)&qword_1013E46B0, NSString_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E0F30);
  }
  return result;
}

uint64_t sub_1004F5698()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1004F56BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FE290;
  if (!qword_1013FE290)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1013FE290);
  }
  return result;
}

void sub_1004F5704()
{
  sub_1004F44F4();
}

void sub_1004F5724()
{
  sub_1004F4D24();
}

void sub_1004F57C4()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  simd_float4 v17;
  int8x16_t v18;
  float32x2_t v19;
  float32x4_t v20;
  unsigned __int32 v21;
  float32x2_t v22;
  float32x2_t v23;
  float32x4_t v24;
  objc_super v25;

  v1 = v0;
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  objc_msgSendSuper2(&v25, "beginMovingKnob");
  v2 = objc_msgSend(v0, "knob");
  v3 = type metadata accessor for CRLUSDZRotationKnob();
  v4 = swift_dynamicCastClass(v2, v3);
  if (v4)
  {
    v5 = (void *)v4;
    if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError) & 1) == 0)
    {
      v6 = *(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked);
      *(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked) = 1;
      if ((v6 & 1) == 0)
        sub_100C18F64();
      v7 = objc_msgSend(v1, "rep");
      objc_msgSend(v5, "position");
      objc_msgSend(v7, "convertNaturalPointToUnscaledCanvas:");
      v9 = v8;
      v11 = v10;

      v12 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingUnscaledCanvasPosition];
      *(_QWORD *)v12 = v9;
      *((_QWORD *)v12 + 1) = v11;
      v13 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition];
      *(_QWORD *)v13 = v9;
      *((_QWORD *)v13 + 1) = v11;
      v14 = objc_msgSend(v1, "rep");
      v15 = objc_msgSend(v14, "layout");

      v16 = type metadata accessor for CRLUSDZLayout();
      if (swift_dynamicCastClass(v15, v16))
        sub_1006CF2A8();
      else
        v17 = matrix_identity_float4x4.columns[3];
      v24 = (float32x4_t)v17;

      v18 = (int8x16_t)vmulq_f32(v24, v24);
      v19 = vadd_f32(*(float32x2_t *)v18.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL));
      if (vaddv_f32(v19) == 0.0)
      {
        v20 = (float32x4_t)xmmword_100EF72A0;
      }
      else
      {
        v21 = vadd_f32(v19, (float32x2_t)vdup_lane_s32((int32x2_t)v19, 1)).u32[0];
        v22 = vrsqrte_f32((float32x2_t)v21);
        v23 = vmul_f32(v22, vrsqrts_f32((float32x2_t)v21, vmul_f32(v22, v22)));
        v20 = vmulq_n_f32(v24, vmul_f32(v23, vrsqrts_f32((float32x2_t)v21, vmul_f32(v23, v23))).f32[0]);
      }
      *(float32x4_t *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession] = v20;
      *(float32x4_t *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession] = v20;
      sub_1004BB5A4(&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate], *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate + 24]);
      sub_1009D6FD8(v1);
    }
  }

}

void sub_1004F5A34()
{
  char *v0;
  void *v1;
  id v2;
  Class isa;
  objc_super v4;
  _QWORD v5[5];

  v1 = v0;
  if (*(double *)&v0[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession] != 0.0
    || *(double *)&v0[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession + 8] != 0.0)
  {
    sub_1004E90B0((uint64_t)&v0[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate], (uint64_t)v5);
    sub_1004BB5A4(v5, v5[3]);
    v2 = objc_msgSend(v0, "rep");
    sub_1009D1FD4(v0, (uint64_t)v2);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5);
  }
  sub_1004F6160();
  sub_1004F619C();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  objc_msgSendSuper2(&v4, "commitChangesForReps:", isa);

}

void sub_1004F5B8C(double a1, double a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double *v20;
  double v21;
  double v22;
  unsigned int v23;
  float32x4_t v24;
  float32x4_t v25;
  int32x4_t v26;
  int8x16_t v27;
  float32x4_t v28;
  float32x4_t v29;
  float32x4_t v30;
  int8x16_t v31;
  float32x2_t v32;
  float32x4_t v33;
  unsigned __int32 v34;
  float32x2_t v35;
  float32x2_t v36;
  id v37;

  v3 = (uint64_t)v2;
  v37 = objc_msgSend(v2, "knob");
  v6 = type metadata accessor for CRLUSDZRotationKnob();
  v7 = swift_dynamicCastClass(v37, v6);
  if (!v7
    || (*(_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError) & 1) != 0
    || (v8 = objc_msgSend(v2, "rep"),
        objc_msgSend(v8, "convertNaturalPointToUnscaledCanvas:", a1, a2),
        v10 = v9,
        v12 = v11,
        v8,
        v13 = (double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition],
        v14 = *(double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition],
        sub_10006108C(v10, v12, v14, *(double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition + 8]) <= 1.0))
  {

  }
  else
  {
    v15 = sub_1000603B8(v10, v12, v14);
    v17 = sub_1000603DC(v15, v16, 0.5);
    v19 = sub_1000603DC(v17, v18, 0.0174532925);
    v20 = (double *)&v2[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession];
    v21 = sub_1000603D0(*(double *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession), *(double *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession + 8), v19);
    *v20 = v21;
    v20[1] = v22;
    *(float *)&v22 = v22;
    *(float *)&v23 = v21;
    *(double *)v24.i64 = sub_1004F5DCC((float32x4_t)__PAIR64__(v23, LODWORD(v22)));
    v25 = *(float32x4_t *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession);
    v26 = (int32x4_t)vnegq_f32(v25);
    v27 = (int8x16_t)vtrn2q_s32((int32x4_t)v25, vtrn1q_s32((int32x4_t)v25, v26));
    v28 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v25, (int8x16_t)v26, 8uLL), *(float32x2_t *)v24.f32, 1), (float32x4_t)vextq_s8(v27, v27, 8uLL), v24.f32[0]);
    v29 = (float32x4_t)vrev64q_s32((int32x4_t)v25);
    v29.i32[0] = v26.i32[1];
    v29.i32[3] = v26.i32[2];
    v30 = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v25, v24, 3), v29, v24, 2), v28);
    v31 = (int8x16_t)vmulq_f32(v30, v30);
    v32 = vadd_f32(*(float32x2_t *)v31.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v31, v31, 8uLL));
    if (vaddv_f32(v32) == 0.0)
    {
      v33 = (float32x4_t)xmmword_100EF72A0;
    }
    else
    {
      v34 = vadd_f32(v32, (float32x2_t)vdup_lane_s32((int32x2_t)v32, 1)).u32[0];
      v35 = vrsqrte_f32((float32x2_t)v34);
      v36 = vmul_f32(v35, vrsqrts_f32((float32x2_t)v34, vmul_f32(v35, v35)));
      v33 = vmulq_n_f32(v30, vmul_f32(v36, vrsqrts_f32((float32x2_t)v34, vmul_f32(v36, v36))).f32[0]);
    }
    *(float32x4_t *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession) = v33;
    sub_1004BB5A4((_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate), *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate + 24));
    sub_1009D72B4(v3);

    *v13 = v10;
    v13[1] = v12;
  }
}

double sub_1004F5DCC(float32x4_t a1)
{
  __float2 v1;
  __float2 v2;
  __float2 v3;
  double v4;

  v1 = __sincosf_stret(0.5 * a1.f32[0]);
  v2 = __sincosf_stret(vmuls_lane_f32(0.5, *(float32x2_t *)a1.f32, 1));
  v3 = __sincosf_stret(vmuls_lane_f32(0.5, a1, 2));
  *(float *)&v4 = (float)(v1.__sinval * (float)(v2.__cosval * v3.__cosval))
                - (float)(v1.__cosval * (float)(v2.__sinval * v3.__sinval));
  *((float *)&v4 + 1) = (float)(v3.__cosval * (float)(v1.__cosval * v2.__sinval))
                      + (float)(v3.__sinval * (float)(v1.__sinval * v2.__cosval));
  return v4;
}

void sub_1004F5ED8()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  id v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  objc_super v12;

  v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  objc_msgSendSuper2(&v12, "endMovingKnob");
  v2 = objc_msgSend(v0, "knob");
  v3 = type metadata accessor for CRLUSDZRotationKnob();
  v4 = swift_dynamicCastClass(v2, v3);
  if (v4)
  {
    v5 = (void *)v4;
    if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isError) & 1) == 0)
    {
      v6 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked);
      *(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform19CRLUSDZRotationKnob_isBeingTracked) = 0;
      if (v6 == 1)
        sub_100C18F64();
      v7 = objc_msgSend(v5, "renderable");
      objc_msgSend(v7, "setHidden:", 0);

      v8 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingUnscaledCanvasPosition];
      *(_QWORD *)v8 = 0;
      *((_QWORD *)v8 + 1) = 0;
      v9 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition];
      *(_QWORD *)v9 = 0;
      *((_QWORD *)v9 + 1) = 0;
      v10 = &v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession];
      *(_QWORD *)v10 = 0;
      *((_QWORD *)v10 + 1) = 0;
      *(_OWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession] = xmmword_100EF72A0;
      *(_OWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession] = xmmword_100EF72A0;
      v11 = *(_QWORD *)(*(_QWORD *)(*sub_1004BB5A4(&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate], *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate+ 24])+ OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController)+ OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
      if (v11 && *(_BYTE *)(v11 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1)
        sub_1009CA490(1);
    }
  }

}

id sub_1004F6100()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDZRotationKnobTracker()
{
  return objc_opt_self(_TtC8Freeform26CRLUSDZRotationKnobTracker);
}

unint64_t sub_1004F6160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E56B0;
  if (!qword_1013E56B0)
  {
    v1 = objc_opt_self(CRLCanvasRep);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E56B0);
  }
  return result;
}

unint64_t sub_1004F619C()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1013E8770;
  if (!qword_1013E8770)
  {
    v1 = sub_1004F6160();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E8770);
  }
  return result;
}

uint64_t sub_1004F61E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  char *v12;
  id v13;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v2, "options") & 0x100000) != 0)
  {
    v7 = sub_1004FA128(1, 0, 1, 34.0, 6.0);
    v8 = type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
    if (!swift_dynamicCastClass(v7, v8))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterTextBuilder.swift", 105, 2, 38, "There is no situation where this should not be a CRLiOSMiniFormatterBaseLayerButton", 83, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeBaseLayerButton()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterTextBuilder.swift", 105, 2u, 38, (uint64_t)"There is no situation where this should not be a CRLiOSMiniFormatterBaseLayerButton", 83, 2u);
    }
    return swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
  }
  else if ((objc_msgSend(v2, "options") & 0x100000) != 0)
  {
    v9 = objc_msgSend(v2, "tintColor");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "UIColor");

    }
    else
    {
      v11 = 0;
    }
    v12 = sub_1004C57EC(0, v11, 0, 0);

    v13 = objc_msgSend(v2, "action");
    if (v13)
      objc_msgSend(v12, "addTarget:action:forControlEvents:", *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController), v13, 64);
    return (uint64_t)v12;
  }
  else
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v3 = swift_allocObject(&unk_1012697E8, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16, v0);
    v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004CBB04, v3);
    v5 = sub_1004C57EC(v4, 0, 0, 0);

    return (uint64_t)v5;
  }
}

id sub_1004F6490()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  double v18;
  void *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  Class isa;
  id v27;
  uint64_t v29;

  if (qword_1013DC8A8 != -1)
    swift_once(&qword_1013DC8A8, sub_1004C5434);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedStackView) == 1)
  {
    v1 = sub_1004F68CC();
    v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v3 = swift_allocObject(v2, 48, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100EF5560;
    v4 = v1;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    *(_QWORD *)(v3 + 32) = v4;
    v5 = sub_1004F6D58();
    *(_QWORD *)(v3 + 40) = v5;
    v29 = v3;
    specialized Array._endMutation()(v5);
    v6 = sub_1004F6F0C(1, 0x4030000000000000, 0);
    v7 = sub_10094C664();

    v8 = 16.0;
    if (!v7)
      goto LABEL_18;
    v9 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
    v11 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v10 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v11 >= v10 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
    v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
    specialized Array._endMutation()(v12);

    goto LABEL_17;
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedLandscapeStackView) == 1)
  {
    v1 = sub_1004F68CC();
    v13 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v3 = swift_allocObject(v13, 56, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100EF7300;
    v14 = v1;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    *(_QWORD *)(v3 + 32) = v14;
    *(_QWORD *)(v3 + 40) = sub_1004F6D68();
    v15 = (char *)sub_1004F6F0C(0, 0, 1);
    v16 = sub_10094D254(*(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette], *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette + 8], *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette + 16]);

    *(_QWORD *)(v3 + 48) = v16;
    specialized Array._endMutation()(v17);
    v8 = 16.0;
    goto LABEL_18;
  }
  v8 = *(double *)&qword_10147E6C8;
  *(_QWORD *)&v18 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
  v19 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((objc_msgSend(v19, "options", v18) & 0x2000) != 0)
  {
    v24 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v22 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v22 + 32) = sub_1004FE070();
    v23 = sub_1004FE280();
LABEL_15:
    *(_QWORD *)(v22 + 40) = v23;
    goto LABEL_16;
  }
  v20 = objc_msgSend(v19, "options");
  v21 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  if ((v20 & 0x20000) != 0)
  {
    v22 = swift_allocObject(v21, 48, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v22 + 32) = sub_1004FE49C();
    v23 = sub_1004FE688();
    goto LABEL_15;
  }
  v22 = swift_allocObject(v21, 56, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EF7300;
  *(_QWORD *)(v22 + 32) = sub_1004F70E8();
  *(_QWORD *)(v22 + 40) = sub_1004F9448();
  v23 = sub_1004FB110();
  *(_QWORD *)(v22 + 48) = v23;
LABEL_16:
  v29 = v22;
  specialized Array._endMutation()(v23);
  v1 = 0;
LABEL_17:
  v3 = v29;
LABEL_18:
  v25 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v25, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  objc_msgSend(v27, "setAxis:", 1);
  objc_msgSend(v27, "setSpacing:", v8);
  objc_msgSend(v27, "setAlignment:", 0);
  if (v1)
  {
    objc_msgSend(v27, "setCustomSpacing:afterView:", v1, 0.0);

  }
  return v27;
}

BOOL sub_1004F6888()
{
  uint64_t v0;

  return ((unint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element), "options") & 0x100000) == 0;
}

uint64_t sub_1004F68BC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_isEditingText);
}

id sub_1004F68CC()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _BYTE *v21;
  objc_class *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  id v29;
  Class isa;
  id v31;
  id v32;
  id v33;
  uint64_t v35;
  UIAction_optional v36;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v10 = sub_1003A91F4();
  v11 = 2;
  if (!v10)
    v11 = 0;
  v12 = v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton];
  if (v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton])
    v13 = v11;
  else
    v13 = 1;
  if (v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton])
    v14 = 20.0;
  else
    v14 = 17.0;
  objc_msgSend(v2, "setTextAlignment:", v13);
  v15 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", v14, UIFontWeightSemibold);
  objc_msgSend(v2, "setFont:", v15);

  objc_msgSend(v2, "sizeToFit");
  v16 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v17 = swift_allocObject(v16, 40, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v17 + 32) = v2;
  v35 = v17;
  specialized Array._endMutation()(v17);
  v18 = v35;
  if (v12 == 1)
  {
    sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v19 = swift_allocObject(&unk_101269BC8, 24, 7);
    *(_QWORD *)(v19 + 16) = v1;
    v20 = v2;
    v21 = v1;
    v36.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1005005A8, v19);
    v22 = UIButton.init(type:primaryAction:)(UIButtonTypeClose, v36).super.super.super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
    v24 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v24 >= v23 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
    v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
    specialized Array._endMutation()(v25);

    v18 = v35;
  }
  else
  {
    v26 = v2;
  }
  v27 = *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_headerViewHeight];
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v28 = *(double *)&qword_10147E6C0;
  v29 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v18);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend(v29, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  objc_msgSend(v31, "setAxis:", 0);
  objc_msgSend(v31, "setAlignment:", 3);
  objc_msgSend(v31, "setDistribution:", 0);
  objc_msgSend(v31, "setSpacing:", v28);
  v32 = objc_msgSend(v31, "heightAnchor");
  v33 = objc_msgSend(v32, "constraintGreaterThanOrEqualToConstant:", v27);

  objc_msgSend(v33, "setActive:", 1);
  swift_bridgeObjectRelease(v18);

  return v31;
}

id sub_1004F6D58()
{
  return sub_1004F6D74(90.0);
}

id sub_1004F6D68()
{
  return sub_1004F6D74(160.0);
}

id sub_1004F6D74(double a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  Class isa;
  id v7;
  id v8;
  id v9;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v3 + 32) = sub_1004F9B74();
  v4 = sub_1004FA128(0, 1, 0, a1, 8.0);
  *(_QWORD *)(v3 + 40) = v4;
  specialized Array._endMutation()(v4);
  v5 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithArrangedSubviews:", isa);

  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setAlignment:", 0);
  objc_msgSend(v7, "setDistribution:", 0);
  objc_msgSend(v7, "setSpacing:", 8.0);
  v8 = objc_msgSend(v7, "heightAnchor");
  v9 = objc_msgSend(v8, "constraintGreaterThanOrEqualToConstant:", 46.0);

  objc_msgSend(v9, "setActive:", 1);
  swift_bridgeObjectRelease(v3);

  return v7;
}

id sub_1004F6F0C(char a1, uint64_t a2, char a3)
{
  uint64_t v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v23;
  char v24;

  v24 = a3 & 1;
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter);
  v13 = *(_QWORD *)(v10 + 8);
  v12 = *(_QWORD *)(v10 + 16);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  v15 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_editorController);
  v16 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_interactiveCanvasController);
  LOBYTE(v5) = *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_isEditingText);
  v17 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder());
  v18 = v16;
  v19 = v14;
  v20 = v15;
  v21 = sub_1009505DC(Strong, v13, v12, v19, v20, v16, a1, 0, v23, v9, a2, v24, (char)v5);
  swift_unknownObjectRelease(Strong);

  return v21;
}

id sub_1004F70E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class v3;
  objc_class *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  Class isa;
  id v11;
  double v12;
  id v13;
  id v14;
  uint64_t v16;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EEF400;
  sub_1004F7340();
  *(_QWORD *)(v1 + 32) = v2;
  v16 = v1;
  specialized Array._endMutation()(v2);
  v3 = sub_1004F8D58();
  if (v3)
  {
    v4 = v3;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
    v6 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v5 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v6 >= v5 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
    v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
    specialized Array._endMutation()(v7);

    v1 = v16;
  }
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v8 = *(double *)&qword_10147E6C0;
  v9 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v11, "setAxis:", 0);
  objc_msgSend(v11, "setAlignment:", 0);
  objc_msgSend(v11, "setDistribution:", 0);
  objc_msgSend(v11, "setSpacing:", v8);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v12 = *(double *)&qword_10147E6D0;
  v13 = objc_msgSend(v11, "heightAnchor");
  v14 = objc_msgSend(v13, "constraintGreaterThanOrEqualToConstant:", v12);

  objc_msgSend(v14, "setActive:", 1);
  swift_bridgeObjectRelease(v1);

  return v11;
}

void sub_1004F7340()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSString v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  __int16 v41;
  __int16 v42;
  __int16 v43;
  __int16 v44;
  __int16 v45;
  __int16 v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char v60[80];
  uint64_t v61;
  char v62[64];

  v0 = sub_1004B804C(&qword_1013E10A0);
  __chkstk_darwin(v0);
  v2 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for IndexSet(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = String._bridgeToObjectiveC()();
  v8 = (void *)objc_opt_self(UIImage);
  v9 = objc_msgSend(v8, "systemImageNamed:", v7);

  if (!v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "systemImageNamed:", v10);

  if (!v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v57 = v4;
  v58 = v3;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v8, "systemImageNamed:", v12);

  if (!v13)
  {
LABEL_16:
    __break(1u);
    return;
  }
  v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v14, v62);
  *(_OWORD *)(inited + 16) = xmmword_100EF7300;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 48) = v13;
  v61 = inited;
  specialized Array._endMutation()(inited);
  v56 = v61;
  v16 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v17 = swift_initStackObject(v16, v60);
  *(_OWORD *)(v17 + 16) = xmmword_100EF5550;
  v18 = (void *)objc_opt_self(NSBundle);
  v55 = v13;
  v54 = v11;
  v53 = v9;
  v19 = objc_msgSend(v18, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  *(_QWORD *)(v17 + 32) = v23;
  *(_QWORD *)(v17 + 40) = v25;
  v26 = objc_msgSend(v18, "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  *(_QWORD *)(v17 + 48) = v30;
  *(_QWORD *)(v17 + 56) = v32;
  v33 = objc_msgSend(v18, "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  *(_QWORD *)(v17 + 64) = v37;
  *(_QWORD *)(v17 + 72) = v39;
  IndexSet.init()(v40);
  v41 = sub_100852B68();
  if (v41 != 2)
  {
    v42 = v41;
    v43 = sub_100852C9C();
    if (v43 != 2)
    {
      v44 = v43;
      v45 = sub_100852DD0();
      if (v45 != 2)
      {
        v46 = v45;
        if ((v42 & 0x101) == 1)
          IndexSet.insert(_:)(0);
        if ((v44 & 0x101) == 1)
          IndexSet.insert(_:)(1);
        if ((v46 & 0x101) == 1)
          IndexSet.insert(_:)(2);
      }
    }
  }
  v47 = swift_allocObject(&unk_101269BA0, 24, 7);
  v49 = v58;
  v48 = v59;
  *(_QWORD *)(v47 + 16) = v59;
  v50 = v57;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v2, v6, v49);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v2, 0, 1, v49);
  v51 = v48;
  v52 = v56;
  sub_1004C6DDC(v56);

  swift_bridgeObjectRelease(v52);
  swift_release(v47);
  swift_bridgeObjectRelease(v17);
  sub_1004CB800((uint64_t)v2, &qword_1013E10A0);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v49);
}

void sub_1004F78BC()
{
  uint64_t v0;
  char *v1;
  __int16 v2;
  __int16 v3;
  __int16 v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  _BOOL4 v8;
  BOOL v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  _BOOL4 v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  BOOL v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38[24];
  char v39[24];
  void **aBlock;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  void *v43;
  uint64_t (*v44)(uint64_t, _BYTE *);
  uint64_t v45;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  v2 = sub_100852B68();
  if (v2 != 2)
  {
    v3 = v2;
    v4 = sub_100852C9C();
    if (v4 != 2)
    {
      v5 = v4;
      v6 = sub_100852DD0();
      if (v6 != 2)
      {
        v7 = v6;
        v8 = IndexSet.contains(_:)(0);
        v9 = v8;
        if ((v3 & 0x100) != 0 || ((((v3 & 1) == 0) ^ v8) & 1) == 0)
        {
          v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
          v11 = swift_allocObject(&unk_101269798, 32, 7);
          *(_QWORD *)(v11 + 16) = 0;
          *(_QWORD *)(v11 + 24) = 0;
          v44 = sub_100500184;
          v45 = v11;
          aBlock = _NSConcreteStackBlock;
          v41 = *(_QWORD *)"";
          v42 = sub_100541BD8;
          v43 = &unk_101269B18;
          v12 = _Block_copy(&aBlock);
          v13 = v45;
          v37 = v1;
          swift_retain(v11);
          objc_msgSend(v10, "enumerateEditorsOnStackUsingBlock:", v12, swift_release(v13).n128_f64[0]);
          _Block_release(v12);
          swift_beginAccess(v11 + 16, v39, 0, 0);
          v14 = *(_QWORD *)(v11 + 16);
          v15 = *(_QWORD *)(v11 + 24);
          swift_unknownObjectRetain(v14);
          swift_release(v11);
          if (v14)
          {
            ObjectType = swift_getObjectType(v14);
            (*(void (**)(BOOL, uint64_t, uint64_t))(v15 + 80))(v9, ObjectType, v15);

            swift_unknownObjectRelease(v14);
          }
          else
          {

          }
        }
        v17 = IndexSet.contains(_:)(1);
        v18 = v17;
        if ((v5 & 0x100) != 0 || ((((v5 & 1) == 0) ^ v17) & 1) == 0)
        {
          v19 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
          v20 = swift_allocObject(&unk_101269798, 32, 7);
          *(_QWORD *)(v20 + 16) = 0;
          *(_QWORD *)(v20 + 24) = 0;
          v44 = sub_100500184;
          v45 = v20;
          aBlock = _NSConcreteStackBlock;
          v41 = *(_QWORD *)"";
          v42 = sub_100541BD8;
          v43 = &unk_101269B40;
          v21 = _Block_copy(&aBlock);
          v22 = v45;
          v23 = v1;
          swift_retain(v20);
          objc_msgSend(v19, "enumerateEditorsOnStackUsingBlock:", v21, swift_release(v22).n128_f64[0]);
          _Block_release(v21);
          swift_beginAccess(v20 + 16, v38, 0, 0);
          v24 = *(_QWORD *)(v20 + 16);
          v25 = *(_QWORD *)(v20 + 24);
          swift_unknownObjectRetain(v24);
          swift_release(v20);
          if (v24)
          {
            v26 = swift_getObjectType(v24);
            (*(void (**)(BOOL, uint64_t, uint64_t))(v25 + 96))(v18, v26, v25);

            swift_unknownObjectRelease(v24);
          }
          else
          {

          }
        }
        v27 = IndexSet.contains(_:)(2);
        v28 = v27;
        if ((v7 & 0x100) != 0 || ((((v7 & 1) == 0) ^ v27) & 1) == 0)
        {
          v29 = *(void **)&v1[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
          v30 = swift_allocObject(&unk_101269798, 32, 7);
          *(_QWORD *)(v30 + 16) = 0;
          *(_QWORD *)(v30 + 24) = 0;
          v44 = sub_100500184;
          v45 = v30;
          aBlock = _NSConcreteStackBlock;
          v41 = *(_QWORD *)"";
          v42 = sub_100541BD8;
          v43 = &unk_101269B68;
          v31 = _Block_copy(&aBlock);
          v32 = v45;
          v33 = v1;
          swift_retain(v30);
          objc_msgSend(v29, "enumerateEditorsOnStackUsingBlock:", v31, swift_release(v32).n128_f64[0]);
          _Block_release(v31);
          swift_beginAccess(v30 + 16, &aBlock, 0, 0);
          v34 = *(_QWORD *)(v30 + 16);
          v35 = *(_QWORD *)(v30 + 24);
          swift_unknownObjectRetain(v34);
          swift_release(v30);
          if (v34)
          {
            v36 = swift_getObjectType(v34);
            (*(void (**)(BOOL, uint64_t, uint64_t))(v35 + 112))(v28, v36, v35);

            swift_unknownObjectRelease(v34);
          }
          else
          {

          }
        }
      }
    }
  }
}

void *sub_1004F7D04(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v19;

  swift_getObjectType(v1);
  v3 = type metadata accessor for UIButton.Configuration(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - v8;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

  if ((a1 & 1) != 0)
  {
    sub_1004C9754(v11);
    sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    v12 = (void *)UIButton.init(configuration:primaryAction:)(v6, 0);
    objc_msgSend(v12, "setPointerInteractionEnabled:", 1);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    v13 = (void *)objc_opt_self(UIColor);
    v14 = objc_msgSend(v13, "labelColor");
    v15 = objc_msgSend(v13, "labelColor");
    v12 = sub_1004C8F18(v11, 0, 0, 0, 0, 0, v14, v15, 6.0, 0);

  }
  objc_msgSend(v12, "setShowsMenuAsPrimaryAction:", 1);
  sub_1004F7F2C(1);
  v17 = v16;
  objc_msgSend(v12, "setMenu:", v16);

  return v12;
}

void sub_1004F7F2C(char a1)
{
  void *v1;
  void *v2;
  __int16 v4;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  NSString v11;
  id v12;
  unsigned int v13;
  int v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  id v31;
  char v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  NSString v61;
  id v62;
  id v63;
  NSString v64;
  NSString v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  void *v77;
  __n128 v78;
  UIMenuElementSize preferredElementSize;
  Swift::String v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  Swift::OpaquePointer v86;
  __int16 v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  id v100;
  id v101;
  char v102;
  char v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  void *v108;
  uint64_t v109;
  UIImage_optional v110;

  v2 = v1;
  v4 = sub_100852B68();
  if (v4 == 2)
    return;
  v5 = v4;
  v6 = sub_100852C9C();
  if (v6 == 2)
    return;
  v7 = v6;
  v8 = sub_100852DD0();
  if (v8 == 2)
    return;
  v9 = v8;
  v10 = sub_100852F04();
  if (v10 == 2)
    return;
  v87 = v10;
  v11 = String._bridgeToObjectiveC()();
  v108 = (void *)objc_opt_self(UIImage);
  v12 = objc_msgSend(v108, "systemImageNamed:", v11);

  v105 = v12;
  if (!v12)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v13 = v5 & 1;
  v14 = v5 & 0x100;
  v107 = (void *)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v107, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, v17, 0);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v97 = v20;
  v99 = v19;

  v102 = BYTE1(v14);
  v103 = v13;
  if (v14)
    v21 = 2;
  else
    v21 = v13;
  v95 = v21;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v108, "systemImageNamed:", v22);

  if (!v23)
    goto LABEL_40;
  v24 = objc_msgSend(v107, "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v93 = v29;
  v94 = v28;

  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v108, "systemImageNamed:", v30);

  v92 = v31;
  if (!v31)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v32 = v7 & 1;
  v90 = HIBYTE(v7) & 1;
  v33 = v9 & 1;
  v34 = v9 & 0x100;
  if ((v7 & 0x100) != 0)
    v35 = 2;
  else
    v35 = v7 & 1;
  v91 = v35;
  v36 = objc_msgSend(v107, "mainBundle");
  v37 = String._bridgeToObjectiveC()();
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, v38, 0);

  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v88 = v41;
  v89 = v40;

  v42 = BYTE1(v34);
  if (v34)
    v43 = 2;
  else
    v43 = v33;
  v44 = v33;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v45 = swift_allocObject(&unk_1012699E8, 26, 7);
  *(_QWORD *)(v45 + 16) = v2;
  *(_BYTE *)(v45 + 24) = v103;
  *(_BYTE *)(v45 + 25) = v102;
  v104 = v105;
  v46 = v2;
  v47 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v99, v97, 0, 0, v105, 0, 0, 0, 0, 0, v95, sub_100500524, v45);
  v48 = swift_allocObject(&unk_101269A10, 26, 7);
  *(_QWORD *)(v48 + 16) = v46;
  *(_BYTE *)(v48 + 24) = v32;
  *(_BYTE *)(v48 + 25) = v90;
  v49 = v46;
  v106 = v23;
  v50 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v94, v93, 0, 0, v23, 0, 0, 0, 0, 0, v91, sub_100500534, v48);
  v51 = swift_allocObject(&unk_101269A38, 26, 7);
  *(_QWORD *)(v51 + 16) = v49;
  *(_BYTE *)(v51 + 24) = v44;
  *(_BYTE *)(v51 + 25) = v42;
  v52 = v49;
  v101 = v92;
  v53 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v89, v88, 0, 0, v92, 0, 0, 0, 0, 0, v43, sub_100500544, v51);
  v54 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v55 = swift_allocObject(v54, 56, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100EF7300;
  *(_QWORD *)(v55 + 32) = v53;
  *(_QWORD *)(v55 + 40) = v50;
  *(_QWORD *)(v55 + 48) = v47;
  v109 = v55;
  specialized Array._endMutation()(v55);
  v56 = v109;
  v57 = v53;
  v58 = v50;
  v59 = v47;
  v60 = v59;
  if ((a1 & 1) == 0)
  {
    v77 = v106;
    goto LABEL_27;
  }
  v96 = v59;
  v98 = v58;
  v100 = v57;
  v61 = String._bridgeToObjectiveC()();
  v62 = objc_msgSend(v108, "systemImageNamed:", v61);

  if (!v62)
  {
LABEL_42:
    __break(1u);
    return;
  }
  v63 = objc_msgSend(v107, "mainBundle");
  v64 = String._bridgeToObjectiveC()();
  v65 = String._bridgeToObjectiveC()();
  v66 = objc_msgSend(v63, "localizedStringForKey:value:table:", v64, v65, 0);

  v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
  v69 = v68;

  if ((v87 & 0x100) != 0)
    v70 = 2;
  else
    v70 = v87 & 1;
  v71 = swift_allocObject(&unk_101269A60, 26, 7);
  *(_QWORD *)(v71 + 16) = v52;
  *(_BYTE *)(v71 + 24) = v87 & 1;
  *(_BYTE *)(v71 + 25) = HIBYTE(v87) & 1;
  v72 = v52;
  v73 = v62;
  v74 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v67, v69, 0, 0, v62, 0, 0, 0, 0, 0, v70, sub_100500554, v71);
  v75 = v74;
  if ((unint64_t)v109 >> 62)
  {
    if (v109 < 0)
      v83 = v109;
    else
      v83 = v109 & 0xFFFFFFFFFFFFFF8;
    v84 = v74;
    swift_bridgeObjectRetain(v109);
    v85 = _CocoaArrayWrapper.endIndex.getter(v83);
    swift_bridgeObjectRelease(v109);
    if ((v85 & 0x8000000000000000) == 0)
      goto LABEL_25;
    __break(1u);
    goto LABEL_39;
  }
  v76 = v74;
LABEL_25:
  sub_100CFBF60(0, 0, (uint64_t)v75);

  v56 = v109;
  v77 = v106;
  v58 = v98;
  v57 = v100;
  v60 = v96;
LABEL_27:
  if ((unint64_t)v56 >> 62)
  {
    if (v56 < 0)
      v81 = v56;
    else
      v81 = v56 & 0xFFFFFFFFFFFFFF8;
    v82 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v56);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v81, v82);
    swift_bridgeObjectRelease(v56);
  }
  else
  {
    v78 = swift_bridgeObjectRetain(v56);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v78);
    sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    preferredElementSize = v56;
  }
  swift_bridgeObjectRelease(v56);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v80._countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  v110.value.super.isa = 0;
  v110.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v80, (Swift::String_optional)0, v110, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v86);

}

void sub_1004F87D8(uint64_t a1, uint64_t a2, char a3)
{
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD v13[5];
  uint64_t v14;

  v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  v6 = swift_allocObject(&unk_101269798, 32, 7);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  v13[4] = sub_100500184;
  v14 = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = *(_QWORD *)"";
  v13[2] = sub_100541BD8;
  v13[3] = &unk_101269AF0;
  v7 = _Block_copy(v13);
  v8 = v14;
  v9 = v4;
  swift_retain(v6);
  objc_msgSend(v5, "enumerateEditorsOnStackUsingBlock:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  swift_beginAccess(v6 + 16, v13, 0, 0);
  v10 = *(_QWORD *)(v6 + 16);
  v11 = *(_QWORD *)(v6 + 24);
  swift_unknownObjectRetain(v10);
  swift_release(v6);
  if (v10)
  {
    ObjectType = swift_getObjectType(v10);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v11 + 80))((a3 & 1) == 0, ObjectType, v11);

    swift_unknownObjectRelease(v10);
  }
  else
  {

  }
}

void sub_1004F8938(uint64_t a1, uint64_t a2, char a3)
{
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD v13[5];
  uint64_t v14;

  v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  v6 = swift_allocObject(&unk_101269798, 32, 7);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  v13[4] = sub_100500184;
  v14 = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = *(_QWORD *)"";
  v13[2] = sub_100541BD8;
  v13[3] = &unk_101269AC8;
  v7 = _Block_copy(v13);
  v8 = v14;
  v9 = v4;
  swift_retain(v6);
  objc_msgSend(v5, "enumerateEditorsOnStackUsingBlock:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  swift_beginAccess(v6 + 16, v13, 0, 0);
  v10 = *(_QWORD *)(v6 + 16);
  v11 = *(_QWORD *)(v6 + 24);
  swift_unknownObjectRetain(v10);
  swift_release(v6);
  if (v10)
  {
    ObjectType = swift_getObjectType(v10);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v11 + 96))((a3 & 1) == 0, ObjectType, v11);

    swift_unknownObjectRelease(v10);
  }
  else
  {

  }
}

void sub_1004F8A98(uint64_t a1, uint64_t a2, char a3)
{
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD v13[5];
  uint64_t v14;

  v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  v6 = swift_allocObject(&unk_101269798, 32, 7);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  v13[4] = sub_100500184;
  v14 = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = *(_QWORD *)"";
  v13[2] = sub_100541BD8;
  v13[3] = &unk_101269AA0;
  v7 = _Block_copy(v13);
  v8 = v14;
  v9 = v4;
  swift_retain(v6);
  objc_msgSend(v5, "enumerateEditorsOnStackUsingBlock:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  swift_beginAccess(v6 + 16, v13, 0, 0);
  v10 = *(_QWORD *)(v6 + 16);
  v11 = *(_QWORD *)(v6 + 24);
  swift_unknownObjectRetain(v10);
  swift_release(v6);
  if (v10)
  {
    ObjectType = swift_getObjectType(v10);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v11 + 112))((a3 & 1) == 0, ObjectType, v11);

    swift_unknownObjectRelease(v10);
  }
  else
  {

  }
}

void sub_1004F8BF8(uint64_t a1, uint64_t a2, char a3)
{
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD v13[5];
  uint64_t v14;

  v4 = *(char **)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  v6 = swift_allocObject(&unk_101269798, 32, 7);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  v13[4] = sub_100500184;
  v14 = v6;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = *(_QWORD *)"";
  v13[2] = sub_100541BD8;
  v13[3] = &unk_101269A78;
  v7 = _Block_copy(v13);
  v8 = v14;
  v9 = v4;
  swift_retain(v6);
  objc_msgSend(v5, "enumerateEditorsOnStackUsingBlock:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  swift_beginAccess(v6 + 16, v13, 0, 0);
  v10 = *(_QWORD *)(v6 + 16);
  v11 = *(_QWORD *)(v6 + 24);
  swift_unknownObjectRetain(v10);
  swift_release(v6);
  if (v10)
  {
    ObjectType = swift_getObjectType(v10);
    (*(void (**)(BOOL, uint64_t, uint64_t))(v11 + 144))((a3 & 1) == 0, ObjectType, v11);

    swift_unknownObjectRelease(v10);
  }
  else
  {

  }
}

Class sub_1004F8D58()
{
  void *v0;
  char v1;
  void *v2;
  char v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class v15;
  NSString v17;

  v0 = (void *)sub_1008533EC();
  if (!v0)
    return 0;
  v2 = v0;
  v3 = v1;
  v4 = objc_msgSend(v0, "referenceColor");
  if (!v4 || (v5 = v4, v6 = objc_msgSend(v4, "UIColor"), v5, !v6))
  {

    return 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  if ((v3 & 1) != 0)
  {
    v17 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v17);

    v15 = sub_1004C6348(0, v14, v11, v13, 65.0);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = v6;
    v15 = sub_1004C6348(v6, 0, v11, v13, 65.0);

    swift_bridgeObjectRelease(v13);
  }

  return v15;
}

uint64_t sub_1004F8F74(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  char **v32;
  id v33;
  char *v34;
  uint64_t (*v35)(_BYTE *, _QWORD);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[32];

  v6 = type metadata accessor for UIButton.Configuration.CornerStyle(0);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  v38 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for UIButton.Configuration.Size(0);
  v8 = *(_QWORD *)(v37 - 8);
  v9 = __chkstk_darwin(v37);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration.TitleAlignment(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  __chkstk_darwin(v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.filled()(v19);
  v20 = swift_bridgeObjectRetain(a2);
  UIButton.Configuration.title.setter(a1, a2, v20);
  v21 = swift_allocObject(&unk_1012699A0, 24, 7);
  *(_QWORD *)(v21 + 16) = a3;
  v22 = a3;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_1005004B8, v21);
  v23 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 0, 1, v23);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v12);
  UIButton.Configuration.titleAlignment.setter(v15);
  UIButton.Configuration.titleLineBreakMode.setter(5);
  UIButton.Configuration.contentInsets.setter(0.0, 16.0, 0.0, 12.0);
  v24 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 4, 17.0);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v24);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v25);

  if (v26)
  {
    v27 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v28 = objc_msgSend(v26, "imageWithTintColor:", v27);

  }
  else
  {
    v28 = 0;
  }
  UIButton.Configuration.image.setter(v28);
  UIButton.Configuration.imagePlacement.setter(8);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for UIButton.Configuration.Size.medium(_:), v37);
  UIButton.Configuration.buttonSize.setter(v11);
  v29 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v30 = objc_msgSend(v29, "traitCollection");

  LODWORD(v29) = objc_msgSend(v30, "crl_isUserInterfaceStyleDark");
  v31 = (void *)objc_opt_self(UIColor);
  v32 = &selRef_tertiarySystemBackgroundColor;
  if (!(_DWORD)v29)
    v32 = &selRef_secondarySystemBackgroundColor;
  UIButton.Configuration.baseBackgroundColor.setter(objc_msgSend(v31, *v32));
  v33 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  UIButton.Configuration.baseForegroundColor.setter(v33);
  v34 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v38, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v40);
  UIButton.Configuration.cornerStyle.setter(v34);
  v35 = (uint64_t (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v41);
  UIBackgroundConfiguration.cornerRadius.setter(8.0);
  return v35(v41, 0);
}

uint64_t sub_1004F9364@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t KeyPath;
  id v12;

  v6 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  KeyPath = swift_getKeyPath(&unk_100EF73A0);
  v7 = swift_getKeyPath(&unk_100EF73D0);
  if (!a2 || (v8 = objc_msgSend(a2, "fontWithSize:", 17.0, KeyPath)) == 0)
    v8 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 17.0, UIFontWeightRegular);
  v12 = v8;
  v9 = sub_1004CB548();
  return AttributeContainer.subscript.setter(&v12, v7, v9);
}

id sub_1004F9448()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  double v3;
  id v4;
  Class isa;
  id v6;
  double v7;
  id v8;
  id v9;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF7300;
  *(_QWORD *)(v1 + 32) = sub_1004FA128(0, 1, 0, 91.0, 6.0);
  *(_QWORD *)(v1 + 40) = sub_1004F9F64();
  v2 = sub_1004F9658();
  *(_QWORD *)(v1 + 48) = v2;
  specialized Array._endMutation()(v2);
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v3 = *(double *)&qword_10147E6C0;
  v4 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v6, "setAxis:", 0);
  objc_msgSend(v6, "setAlignment:", 0);
  objc_msgSend(v6, "setDistribution:", 0);
  objc_msgSend(v6, "setSpacing:", v3);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v7 = *(double *)&qword_10147E6D0;
  v8 = objc_msgSend(v6, "heightAnchor");
  v9 = objc_msgSend(v8, "constraintGreaterThanOrEqualToConstant:", v7);

  objc_msgSend(v9, "setActive:", 1);
  swift_bridgeObjectRelease(v1);

  return v6;
}

id sub_1004F9658()
{
  uint64_t v0;
  NSString v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;

  swift_getObjectType(v0);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v3 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1005004B0, v3);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "labelColor");
  v7 = objc_msgSend(v5, "labelColor");
  v8 = sub_1004C8F18(v2, 0, 0, v4, 0, 0, v6, v7, 6.0, 0);

  v9 = objc_msgSend(v8, "widthAnchor");
  v10 = objc_msgSend(v9, "constraintEqualToConstant:", 65.0);

  objc_msgSend(v10, "setActive:", 1);
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = v8;
  v13 = objc_msgSend(v11, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setAccessibilityLabel:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = v12;
  v21 = objc_msgSend(v20, "accessibilityLabel");
  objc_msgSend(v20, "setLargeContentTitle:", v21);

  return v20;
}

void sub_1004F9980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t ObjectType;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  char v17;
  char v18;
  id v19;
  id v20;
  id v21;
  char v22[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)(v5 + 16);
      v9 = objc_msgSend(objc_allocWithZone((Class)UIFontPickerViewControllerConfiguration), "init");
      objc_msgSend(v9, "set_includeDefaultFont:", 1);
      objc_msgSend(v9, "setIncludeFaces:", 1);
      v10 = type metadata accessor for CRLiOSMiniFormatterFontPickerViewController();
      ObjectType = swift_getObjectType(v7);
      v12 = v9;
      swift_unknownObjectRetain(v7);
      v14 = sub_100500338(v13, (uint64_t)v12, v10, ObjectType, v8);
      swift_unknownObjectRelease(v7);

      v15 = *(id *)&v4[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider];
      v16 = (void *)sub_100852A28();
      v18 = v17;

      if (v16)
      {
        if ((v18 & 1) == 0)
        {
          v19 = v14;
          v20 = objc_msgSend(v16, "platformFont");
          v21 = objc_msgSend(v20, "fontDescriptor");

          objc_msgSend(v19, "setSelectedFontDescriptor:", v21);
          v16 = v21;
        }

      }
      objc_msgSend(v14, "setDelegate:", v4);
      (*(void (**)(id, char *, uint64_t, uint64_t))(v8 + 32))(v14, v4, ObjectType, v8);

      swift_unknownObjectRelease(v7);
    }
    else
    {
      v14 = v4;
    }

  }
}

void *sub_1004F9B74()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char v11;
  char v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  char v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  id v30;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36[2];

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v36 - v7;
  v9 = sub_100852A28();
  if (!v9)
    goto LABEL_5;
  v10 = (void *)v9;
  v11 = sub_100852C9C();
  if (v11 == 2 || (v12 = v11, v13 = sub_100852B68(), v13 == 2))
  {

LABEL_5:
    v14 = 0;
    v15 = 0;
    v16 = 0xE000000000000000;
    goto LABEL_6;
  }
  v25 = v13;
  v26 = objc_msgSend(v10, "postScriptName");
  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v28 = v27;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
  }
  v29 = objc_msgSend((id)objc_opt_self(CRLWPFont), "isSystemFontName:", v26);

  v36[1] = v1;
  if (v29)
  {
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v36[0] = v30;
    v31 = String._bridgeToObjectiveC()();
    v32 = String._bridgeToObjectiveC()();
    v33 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, v32, 0);

  }
  else
  {
    v33 = objc_msgSend(v10, "displayName");
  }
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v16 = v34;

  v35 = objc_msgSend(v10, "copyWithSize:bold:italic:", v25 & 1, v12 & 1, 17.0);
  v14 = objc_msgSend(v35, "platformFont");

LABEL_6:
  sub_1004F8F74(v15, v16, v14);
  swift_bridgeObjectRelease(v16);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v17 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1005004B0, v17);
  v19 = (void *)UIButton.init(configuration:primaryAction:)(v5, v18);
  objc_msgSend(v19, "setContentHorizontalAlignment:", 3);
  v20 = objc_msgSend(v19, "titleLabel");
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "setMinimumScaleFactor:", 0.5);

  }
  v22 = objc_msgSend(v19, "titleLabel");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, "setAdjustsFontSizeToFitWidth:", 1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);

  }
  return v19;
}

id sub_1004F9F64()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  Class isa;
  id v5;
  double v6;
  id v7;
  id v8;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v1 + 32) = sub_1004FA914();
  v2 = sub_1004FACC0();
  *(_QWORD *)(v1 + 40) = v2;
  specialized Array._endMutation()(v2);
  v3 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithArrangedSubviews:", isa);

  objc_msgSend(v5, "setAxis:", 0);
  objc_msgSend(v5, "setAlignment:", 0);
  objc_msgSend(v5, "setDistribution:", 0);
  objc_msgSend(v5, "setSpacing:", 1.0);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v6 = *(double *)&qword_10147E6D0;
  v7 = objc_msgSend(v5, "heightAnchor");
  v8 = objc_msgSend(v7, "constraintGreaterThanOrEqualToConstant:", v6);

  objc_msgSend(v8, "setActive:", 1);
  swift_bridgeObjectRelease(v1);

  objc_msgSend(v5, "setDistribution:", 1);
  return v5;
}

id sub_1004FA128(char a1, char a2, char a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  float v13;
  float v14;
  int v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  char **v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  Swift::String v48;
  Class isa;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  id v68;
  id v69;
  id v70;
  id v71;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  id v80;
  NSString v81;
  NSString v82;
  id v83;
  unint64_t v84;
  _QWORD *preferredElementSize;
  Swift::OpaquePointer v86;
  void *v87;
  void *v88;
  UIImage_optional v90;

  v6 = v5;
  swift_getObjectType(v5);
  v11 = sub_100852680();
  v12 = v11 & 0xFF00000000;
  v13 = *(float *)&v11;
  if (*(float *)&v11 > 999.0)
    v13 = 999.0;
  if (v12 == 0x200000000)
    v14 = 0.0;
  else
    v14 = v13;
  if (v12 == 0x200000000)
    v15 = 0;
  else
    v15 = BYTE4(v11) & 1;
  v16 = 1714433573;
  v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v18 = objc_msgSend(v17, "preferredContentSizeCategory");

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  v24 = v19 == v22 && v21 == v23;
  v88 = v18;
  if (v24)
    goto LABEL_16;
  v25 = v23;
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v22, v23, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) != 0)
  {
LABEL_17:
    v32 = 0xE400000000000000;
    goto LABEL_18;
  }
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v28;
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v31 = v29;
  if (v27 == v30 && v21 == v29)
    goto LABEL_16;
  v73 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v21, v30, v29, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v31);
  if ((v73 & 1) != 0)
    goto LABEL_17;
  v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v75;
  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  v78 = v76;
  if (v74 == v77 && v21 == v76)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v21, 2);
    goto LABEL_17;
  }
  v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v21, v77, v76, 0);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v78);
  v32 = 0xE400000000000000;
  if ((v79 & 1) == 0 && (a2 & 1) != 0)
  {
    v80 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v81 = String._bridgeToObjectiveC()();
    v82 = String._bridgeToObjectiveC()();
    v83 = objc_msgSend(v80, "localizedStringForKey:value:table:", v81, v82, 0);

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
    v32 = v84;

  }
LABEL_18:
  v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v34 = swift_allocObject(v33, 72, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v34 + 56) = &type metadata for Float;
  *(_QWORD *)(v34 + 64) = &protocol witness table for Float;
  *(float *)(v34 + 32) = v14;
  v35 = static String.localizedStringWithFormat(_:_:)(v16, v32, v34);
  v37 = v36;
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v32);
  if ((a1 & 1) != 0)
  {
    v38 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    if ((a3 & 1) == 0)
    {
LABEL_20:
      v39 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      goto LABEL_25;
    }
  }
  else
  {
    v38 = 0;
    if ((a3 & 1) == 0)
      goto LABEL_20;
  }
  if (qword_1013DC890 != -1)
    swift_once(&qword_1013DC890, sub_1004C53D8);
  v39 = (id)qword_10147E6A8;
LABEL_25:
  v40 = v39;
  v41 = (void *)objc_opt_self(UIColor);
  v42 = &selRef_secondaryLabelColor;
  if (!v15)
    v42 = &selRef_labelColor;
  v43 = objc_msgSend(v41, *v42);
  swift_bridgeObjectRetain(v37);
  v87 = v40;
  if ((a3 & 1) != 0)
    v44 = sub_1004C9080(0, v35, v37, 0, v38, v38, v43, v40, a5, v15);
  else
    v44 = sub_1004C8F18(0, v35, v37, 0, v38, v38, v43, v40, a5, v15);
  v45 = v44;
  objc_msgSend(v44, "setShowsMenuAsPrimaryAction:", 1, swift_bridgeObjectRelease(v37).n128_f64[0]);
  v46 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager);
  v47 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  preferredElementSize = sub_1004FEFFC(v46, v47);
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v90.value.super.isa = 0;
  v90.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v48, (Swift::String_optional)0, v90, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v86).super.super.isa;
  objc_msgSend(v45, "setMenu:", isa);

  objc_msgSend(v45, "setPreferredMenuElementOrder:", 2);
  v50 = objc_msgSend(v45, "widthAnchor");
  v51 = objc_msgSend(v50, "constraintEqualToConstant:", a4);

  objc_msgSend(v51, "setActive:", 1);
  v52 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v53 = swift_allocObject(v52, 64, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100EF5A10;
  v54 = (void *)objc_opt_self(NSBundle);
  v55 = v45;
  v56 = objc_msgSend(v54, "mainBundle");
  v57 = String._bridgeToObjectiveC()();
  v58 = String._bridgeToObjectiveC()();
  v59 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
  v62 = v61;

  *(_QWORD *)(v53 + 32) = v60;
  *(_QWORD *)(v53 + 40) = v62;
  *(_QWORD *)(v53 + 48) = v35;
  *(_QWORD *)(v53 + 56) = v37;
  v63 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v64 = sub_100500464();
  BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v63, v64);
  v66 = v65;
  swift_bridgeObjectRelease(v53);
  v67 = String._bridgeToObjectiveC()();
  objc_msgSend(v55, "setAccessibilityLabel:", v67, swift_bridgeObjectRelease(v66).n128_f64[0]);

  v68 = v55;
  v69 = objc_msgSend(v68, "accessibilityLabel");
  objc_msgSend(v68, "setLargeContentTitle:", v69);

  if ((a3 & 1) != 0)
  {
    v70 = objc_msgSend(v68, "heightAnchor");
    if (qword_1013DC898 != -1)
      swift_once(&qword_1013DC898, sub_1004C5410);
    v71 = objc_retainAutoreleasedReturnValue(objc_msgSend(v70, "constraintEqualToConstant:", *((double *)&xmmword_10147E6B0
                                                                                             + 1)));

    objc_msgSend(v71, "setActive:", 1);
  }

  return v68;
}

id sub_1004FA914()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;

  v1 = v0;
  swift_getObjectType(v0);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v2);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v4 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100500444, v4);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "labelColor");
  v8 = objc_msgSend(v6, "labelColor");
  v9 = sub_1004C7A58(v3, 0, 0, v5, 0, 0, v7, v8, 6.0, 0, 5, 0, 0, 0, 0);

  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
  v11 = sub_100852680();
  if ((v11 & 0xFF00000000) == 0x200000000 || !*(_QWORD *)(v10 + 16) || *(float *)(v10 + 32) >= *(float *)&v11)
    objc_msgSend(v9, "setEnabled:", 0);
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = v9;
  v14 = objc_msgSend(v12, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setAccessibilityLabel:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v21 = v13;
  v22 = objc_msgSend(v21, "accessibilityLabel");
  objc_msgSend(v21, "setLargeContentTitle:", v22);

  return v21;
}

void sub_1004FAC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  float v4;
  uint64_t v5;
  char v6;
  BOOL v7;
  unint64_t v8;

  v3 = sub_100852680();
  if ((v3 & 0xFF00000000) != 0x200000000)
  {
    v4 = *(float *)&v3;
    v5 = sub_100C1A490(a2, *(float *)&v3);
    if ((v6 & 1) == 0)
    {
      v7 = v5 < 1;
      v8 = v5 - 1;
      if (v7)
        return;
      if (v8 < *(_QWORD *)(a2 + 16))
      {
LABEL_8:
        sub_1008527B4(*(float *)(a2 + 4 * v8 + 32));
        return;
      }
      __break(1u);
    }
    v8 = sub_1005003AC(a2, v4);
    if ((v8 & 0x8000000000000000) != 0)
      return;
    if (v8 >= *(_QWORD *)(a2 + 16))
    {
      __break(1u);
      return;
    }
    goto LABEL_8;
  }
}

id sub_1004FACC0()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  id v23;

  v1 = v0;
  swift_getObjectType(v0);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v2);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v4 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100500318, v4);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "labelColor");
  v8 = objc_msgSend(v6, "labelColor");
  v9 = sub_1004C7A58(v3, 0, 0, v5, 0, 0, v7, v8, 6.0, 0, 10, 0, 0, 0, 0);

  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
  v11 = sub_100852680();
  if ((v11 & 0xFF00000000) == 0x200000000
    || (v12 = *(_QWORD *)(v10 + 16)) == 0
    || *(float *)(v10 + 4 * v12 + 28) <= *(float *)&v11)
  {
    objc_msgSend(v9, "setEnabled:", 0);
  }
  v13 = (void *)objc_opt_self(NSBundle);
  v14 = v9;
  v15 = objc_msgSend(v13, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, v17, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccessibilityLabel:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v22 = v14;
  v23 = objc_msgSend(v22, "accessibilityLabel");
  objc_msgSend(v22, "setLargeContentTitle:", v23);

  return v22;
}

void sub_1004FAFD8(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  id v8;
  _BYTE v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8);
    v8 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager);
    swift_bridgeObjectRetain(v7);
    a3(v8, v7);

    swift_bridgeObjectRelease(v7);
  }
}

void sub_1004FB068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  float v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = sub_100852680();
  if ((v3 & 0xFF00000000) != 0x200000000)
  {
    v4 = *(float *)&v3;
    v5 = sub_100C1A490(a2, *(float *)&v3);
    if ((v6 & 1) == 0)
    {
      v7 = *(_QWORD *)(a2 + 16);
      if (v5 >= (uint64_t)(v7 - 1))
        return;
      v8 = v5 + 1;
      if (v5 + 1 < v7)
      {
LABEL_8:
        sub_1008527B4(*(float *)(a2 + 4 * v8 + 32));
        return;
      }
      __break(1u);
    }
    v9 = sub_1005003AC(a2, v4);
    v10 = *(_QWORD *)(a2 + 16);
    if (v9 >= (uint64_t)(v10 - 1))
      return;
    v8 = v9 + 1;
    if (v9 + 1 >= v10)
    {
      __break(1u);
      return;
    }
    goto LABEL_8;
  }
}

id sub_1004FB110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  id v4;
  Class isa;
  id v6;
  double v7;
  id v8;
  id v9;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF7300;
  *(_QWORD *)(v1 + 32) = sub_1004FB330(0, 0x4056C00000000000, 0);
  *(_QWORD *)(v1 + 40) = sub_1004FC614(0x4056800000000000, 0);
  sub_1004FCD10(0, 0x4056C00000000000, 0);
  *(_QWORD *)(v1 + 48) = v2;
  specialized Array._endMutation()(v2);
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v3 = *(double *)&qword_10147E6C0;
  v4 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v6, "setAxis:", 0);
  objc_msgSend(v6, "setAlignment:", 0);
  objc_msgSend(v6, "setDistribution:", 0);
  objc_msgSend(v6, "setSpacing:", v3);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v7 = *(double *)&qword_10147E6D0;
  v8 = objc_msgSend(v6, "heightAnchor");
  v9 = objc_msgSend(v8, "constraintGreaterThanOrEqualToConstant:", v7);

  objc_msgSend(v9, "setActive:", 1);
  swift_bridgeObjectRelease(v1);

  return v6;
}

uint64_t sub_1004FB330(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  void *v39;
  void *v40;
  id v41;
  id v42;
  Class v43;
  double v44;
  id v45;
  id v46;
  id v47;
  id v48;
  NSString v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  id v56;
  id v57;
  double v58;
  NSString v59;
  _QWORD v60[2];
  double v61;
  uint64_t v62;
  int v63;
  id v64;
  int v65;
  id v66;

  v65 = a3;
  v61 = *(double *)&a2;
  v63 = a1;
  v60[1] = swift_getObjectType(v3);
  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v60 - v9;
  sub_1004FF884();
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  v66 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v13);

  v64 = (id)objc_opt_self(NSBundle);
  v14 = objc_msgSend(v64, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

  v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v19 = v18;

  result = sub_100853038();
  if (v21 == 2)
    goto LABEL_15;
  if ((v21 & 1) != 0)
    goto LABEL_15;
  v22 = *(_QWORD *)(v12 + 16);
  if (!v22)
    goto LABEL_15;
  v23 = result;
  if (*(_QWORD *)(v12 + 32) == result)
  {
    v24 = (void **)(v12 + 48);
    v25 = (void **)(v12 + 56);
LABEL_13:
    v28 = *v24;
    v29 = *v25;
    swift_bridgeObjectRetain(*v24);
    v30 = v29;

    swift_bridgeObjectRelease(v19);
    v31 = (void *)objc_opt_self(NSString);
    v32 = v30;
    v33 = objc_msgSend(v31, "crlwpax_descriptionForParagraphAlignment:", v23);
    v66 = v32;
    if (!v33)
    {

      swift_bridgeObjectRelease(v28);
      v62 = 0;
      v19 = 0;
      if ((v63 & 1) != 0)
        goto LABEL_16;
      goto LABEL_18;
    }
    v34 = v33;
    v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v19 = v35;

    swift_bridgeObjectRelease(v28);
LABEL_15:
    if ((v63 & 1) != 0)
    {
LABEL_16:
      v36 = v66;
      sub_1004C9754(v66);
      sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
      v37 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
      objc_msgSend(v37, "setPointerInteractionEnabled:", 1);
      v38 = *(void (**)(char *, uint64_t))(v5 + 8);
      v39 = v36;
      v38(v10, v4);
LABEL_19:
      objc_msgSend(v37, "setShowsMenuAsPrimaryAction:", 1);
      v43 = sub_1004FB928(v12);
      objc_msgSend(v37, "setMenu:", v43, swift_bridgeObjectRelease(v12).n128_f64[0]);

      if ((v65 & 1) == 0)
      {
        v44 = v61;
        v45 = objc_msgSend(v37, "widthAnchor");
        v46 = objc_msgSend(v45, "constraintEqualToConstant:", v44);

        objc_msgSend(v46, "setActive:", 1);
      }
      v47 = v37;
      v48 = objc_msgSend(v64, "mainBundle");
      v49 = String._bridgeToObjectiveC()();
      v50 = String._bridgeToObjectiveC()();
      v51 = objc_msgSend(v48, "localizedStringForKey:value:table:", v49, v50, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v53 = v52;

      v54 = String._bridgeToObjectiveC()();
      objc_msgSend(v47, "setAccessibilityLabel:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

      v55 = v47;
      v56 = objc_msgSend(v55, "accessibilityLabel");
      objc_msgSend(v55, "setLargeContentTitle:", v56);

      v57 = v55;
      if (v19)
      {
        v59 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v58 = swift_bridgeObjectRelease(v19).n128_u64[0];
      }
      else
      {
        v59 = 0;
      }
      objc_msgSend(v55, "setAccessibilityValue:", v59, v58);

      return (uint64_t)v55;
    }
LABEL_18:
    v40 = (void *)objc_opt_self(UIColor);
    v41 = objc_msgSend(v40, "labelColor");
    v42 = objc_msgSend(v40, "labelColor");
    v39 = v66;
    v37 = sub_1004C8F18(v66, 0, 0, 0, 0, 0, v41, v42, 6.0, 0);

    goto LABEL_19;
  }
  if (v22 == 1)
    goto LABEL_15;
  v25 = (void **)(v12 + 88);
  v26 = 1;
  while (1)
  {
    v27 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (*(v25 - 3) == (void *)result)
    {
      v24 = v25 - 1;
      goto LABEL_13;
    }
    v25 += 4;
    ++v26;
    if (v27 == v22)
      goto LABEL_15;
  }
  __break(1u);
  return result;
}

Class sub_1004FB928(uint64_t a1)
{
  void *v1;
  char v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void **v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  UIMenuElementSize preferredElementSize;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::OpaquePointer v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  UIImage_optional v47;

  v44 = sub_100853038();
  if (v3 == 2)
    return 0;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = (uint64_t)_swiftEmptyArrayStorage;
  if (v5)
  {
    v7 = v3;
    v45 = v1;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v8 = (void **)(a1 + 56);
    do
    {
      v12 = (uint64_t)*(v8 - 3);
      v13 = (uint64_t)*(v8 - 2);
      v15 = (uint64_t)*(v8 - 1);
      v14 = *v8;
      v16 = swift_allocObject(&unk_101269838, 24, 7);
      swift_unknownObjectWeakInit(v16 + 16);
      v17 = (_QWORD *)swift_allocObject(&unk_101269950, 56, 7);
      v17[2] = v16;
      v17[3] = v12;
      v17[4] = v13;
      v17[5] = v15;
      v17[6] = v14;
      swift_bridgeObjectRetain_n(v15, 3);
      v18 = v14;
      v19 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v13, v15, 0, 0, v14, 0, 0, 0, 0, 0, 0, sub_1005002F8, v17);
      v20 = v19;
      if ((v7 & 1) == 0 && v44 == v12)
        objc_msgSend(v19, "setState:", 1);

      swift_bridgeObjectRelease(v15);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v10 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v10);
      v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v10, v20);
      specialized ContiguousArray._endMutation()(v11);
      v8 += 4;
      --v5;
    }
    while (v5);
    v6 = (uint64_t)_swiftEmptyArrayStorage;

  }
  v46 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_40;
  v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v21)
  {
    v22 = v21 - 1;
    while (!__OFSUB__(v21, 1))
    {
      if (v22 < 1)
        goto LABEL_32;
      v23 = 0;
      v24 = v21 + 0x7FFFFFFFFFFFFFFFLL;
      while (1)
      {
        v25 = v21 - 1;
        v26 = v46;
        if ((v46 & 0xC000000000000001) != 0)
        {
          v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v46);
          v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21 - 1, v46);
          goto LABEL_19;
        }
        v6 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v23 >= v6)
          break;
        v27 = *(id *)(v46 + 8 * v23 + 32);
        if (v25 >= v6)
          goto LABEL_37;
        v28 = (uint64_t)v27;
        v29 = *(id *)(v46 + 8 * v21 + 24);
LABEL_19:
        v6 = (uint64_t)v29;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v46)
          || (v46 & 0x8000000000000000) != 0
          || (v46 & 0x4000000000000000) != 0)
        {
          v26 = sub_100D14ED8(v46);
          v46 = v26;
        }
        v30 = *(void **)((v26 & 0xFFFFFFFFFFFFFF8) + 8 * v23 + 0x20);
        *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 8 * v23 + 0x20) = v6;

        specialized Array._endMutation()(v31);
        v32 = v46;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v46)
          || (v46 & 0x8000000000000000) != 0
          || (v46 & 0x4000000000000000) != 0)
        {
          v32 = sub_100D14ED8(v46);
          v46 = v32;
        }
        if (v25 >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v33 = *(void **)((v32 & 0xFFFFFFFFFFFFFF8) + 8 * v21 + 0x18);
        *(_QWORD *)((v32 & 0xFFFFFFFFFFFFFF8) + 8 * v21 + 0x18) = v28;

        specialized Array._endMutation()(v34);
        if (v24 == v23)
          goto LABEL_39;
        ++v23;
        v35 = v21 - 2;
        --v21;
        if ((uint64_t)v23 >= v35)
        {
          v6 = v46;
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      if (v6 < 0)
        v39 = v6;
      else
        v39 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v40 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v6);
      if (!v40)
        goto LABEL_32;
      swift_bridgeObjectRetain(v6);
      v21 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v6);
      v22 = v21 - 1;
    }
    __break(1u);
    goto LABEL_47;
  }
LABEL_32:
  if ((unint64_t)v6 >> 62)
  {
LABEL_47:
    if (v6 < 0)
      v41 = v6;
    else
      v41 = v6 & 0xFFFFFFFFFFFFFF8;
    v42 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v6);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v41, v42);
    swift_bridgeObjectRelease(v6);
    goto LABEL_34;
  }
  v36 = swift_bridgeObjectRetain(v6);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v36);
  sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
  preferredElementSize = v6;
LABEL_34:
  swift_bridgeObjectRelease(v6);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v47.value.super.isa = 0;
  v47.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v38, (Swift::String_optional)0, v47, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v43).super.super.isa;
}

void sub_1004FBD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  int v12;
  BOOL v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  _QWORD aBlock[5];
  uint64_t v24;
  char v25[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider;
    v8 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
    v9 = sub_100853038();
    v11 = v10;
    v12 = v10;

    if (v12 == 2 || (v9 == a3 ? (v13 = (v11 & 1) == 0) : (v13 = 0), v13))
    {

    }
    else
    {
      v14 = *(char **)&v6[v7];
      v15 = *(void **)&v14[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
      v16 = swift_allocObject(&unk_101269798, 32, 7);
      *(_QWORD *)(v16 + 24) = 0;
      *(_QWORD *)(v16 + 16) = 0;
      aBlock[4] = sub_100500184;
      v24 = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100541BD8;
      aBlock[3] = &unk_101269968;
      v17 = _Block_copy(aBlock);
      v18 = v24;
      v19 = v14;
      swift_retain(v16);
      objc_msgSend(v15, "enumerateEditorsOnStackUsingBlock:", v17, swift_release(v18).n128_f64[0]);
      _Block_release(v17);
      swift_beginAccess(v16 + 16, aBlock, 0, 0);
      v20 = *(_QWORD *)(v16 + 16);
      v21 = *(_QWORD *)(v16 + 24);
      swift_unknownObjectRetain(v20);
      swift_release(v16);
      if (v20)
      {
        ObjectType = swift_getObjectType(v20);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 208))(a3, ObjectType, v21);

        swift_unknownObjectRelease(v20);
      }
      else
      {

      }
    }
  }
}

uint64_t sub_1004FBF60()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  double *v23;
  __n128 v24;
  double *v25;
  uint64_t v26;
  char v27;
  Swift::Int v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t result;
  uint64_t v34;
  double *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double *v40;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E10A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004FF884();
  v10 = v9;
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
    v36 = v0;
    v37 = v8;
    v38 = v6;
    v39 = v5;
    v40 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v11);
    v12 = 56;
    v13 = v11;
    do
    {
      v14 = *(id *)(v10 + v12);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = *((_QWORD *)v40 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v14);
      specialized ContiguousArray._endMutation()(v16);
      v12 += 32;
      --v13;
    }
    while (v13);
    v35 = v40;
    v40 = _swiftEmptyArrayStorage;
    sub_1006006EC(0, v11, 0);
    v17 = v40;
    v18 = (uint64_t *)(v10 + 48);
    do
    {
      v19 = *(v18 - 1);
      v20 = *v18;
      v40 = v17;
      v22 = *((_QWORD *)v17 + 2);
      v21 = *((_QWORD *)v17 + 3);
      swift_bridgeObjectRetain(v20);
      if (v22 >= v21 >> 1)
      {
        sub_1006006EC(v21 > 1, v22 + 1, 1);
        v17 = v40;
      }
      *((_QWORD *)v17 + 2) = v22 + 1;
      v23 = &v17[2 * v22];
      *((_QWORD *)v23 + 4) = v19;
      *((_QWORD *)v23 + 5) = v20;
      v18 += 4;
      --v11;
    }
    while (v11);
    v24 = swift_bridgeObjectRelease(v10);
    v6 = v38;
    v5 = v39;
    v1 = v36;
    v8 = v37;
    v25 = v35;
  }
  else
  {
    v24 = swift_bridgeObjectRelease(v9);
    v17 = _swiftEmptyArrayStorage;
    v25 = _swiftEmptyArrayStorage;
  }
  IndexSet.init()(v24);
  v26 = sub_100853038();
  if (v27 != 2 && (v27 & 1) == 0)
  {
    v29 = v26;
    switch(v26)
    {
      case 0:
        goto LABEL_18;
      case 1:
        v29 = 2;
        goto LABEL_18;
      case 2:
        v29 = 1;
LABEL_18:
        IndexSet.insert(_:)(v29);
        break;
      case 3:
      case 4:
        break;
      default:
        type metadata accessor for CRLWPParagraphAlignment(0);
        v40 = (double *)v29;
        result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v34, &v40, v34, &type metadata for Int);
        __break(1u);
        return result;
    }
  }
  v30 = swift_allocObject(&unk_101269928, 24, 7);
  *(_QWORD *)(v30 + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  v31 = v1;
  v32 = sub_1004C6DDC((uint64_t)v25);
  swift_bridgeObjectRelease(v25);
  swift_release(v30);
  swift_bridgeObjectRelease(v17);
  sub_1004CB800((uint64_t)v4, &qword_1013E10A0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (uint64_t)v32;
}

double sub_1004FC278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  double result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  _QWORD v15[5];
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
  v2 = sub_100853038();
  if (v3 != 2)
  {
    v5 = v2;
    v6 = v3;
    if (IndexSet.contains(_:)(0))
    {
      v7 = 0;
      if ((v5 != 0) | v6 & 1)
        goto LABEL_10;
    }
    if (IndexSet.contains(_:)(1) && (v5 != 2) | v6 & 1)
    {
      v7 = 2;
      goto LABEL_10;
    }
    if (IndexSet.contains(_:)(2) && (v5 != 1) | v6 & 1)
    {
      v7 = 1;
LABEL_10:
      v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v9 = swift_allocObject(&unk_101269798, 32, 7);
      *(_QWORD *)(v9 + 24) = 0;
      *(_QWORD *)(v9 + 16) = 0;
      v15[4] = sub_100500184;
      v16 = v9;
      v15[0] = _NSConcreteStackBlock;
      v15[1] = *(_QWORD *)"";
      v15[2] = sub_100541BD8;
      v15[3] = &unk_1012698F0;
      v10 = _Block_copy(v15);
      v11 = v16;
      swift_retain(v9);
      objc_msgSend(v8, "enumerateEditorsOnStackUsingBlock:", v10, swift_release(v11).n128_f64[0]);
      _Block_release(v10);
      swift_beginAccess(v9 + 16, v15, 0, 0);
      v12 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      swift_unknownObjectRetain(v12);
      *(_QWORD *)&result = swift_release(v9).n128_u64[0];
      if (v12)
      {
        ObjectType = swift_getObjectType(v12);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 208))(v7, ObjectType, v13);
        *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
      }
    }
  }
  return result;
}

void sub_1004FC444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  int v12;
  BOOL v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  _QWORD aBlock[5];
  uint64_t v24;
  char v25[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider;
    v8 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
    v9 = sub_100853178();
    v11 = v10;
    v12 = v10;

    if (v12 == 2 || (v9 == a3 ? (v13 = (v11 & 1) == 0) : (v13 = 0), v13))
    {

    }
    else
    {
      v14 = *(char **)&v6[v7];
      v15 = *(void **)&v14[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
      v16 = swift_allocObject(&unk_101269798, 32, 7);
      *(_QWORD *)(v16 + 24) = 0;
      *(_QWORD *)(v16 + 16) = 0;
      aBlock[4] = sub_100500184;
      v24 = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100541BD8;
      aBlock[3] = &unk_1012698C8;
      v17 = _Block_copy(aBlock);
      v18 = v24;
      v19 = v14;
      swift_retain(v16);
      objc_msgSend(v15, "enumerateEditorsOnStackUsingBlock:", v17, swift_release(v18).n128_f64[0]);
      _Block_release(v17);
      swift_beginAccess(v16 + 16, aBlock, 0, 0);
      v20 = *(_QWORD *)(v16 + 16);
      v21 = *(_QWORD *)(v16 + 24);
      swift_unknownObjectRetain(v20);
      swift_release(v16);
      if (v20)
      {
        ObjectType = swift_getObjectType(v20);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 224))(a3, ObjectType, v21);

        swift_unknownObjectRelease(v20);
      }
      else
      {

      }
    }
  }
}

id sub_1004FC614(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *ObjectType;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  double v25;
  Class isa;
  uint64_t v27;
  char v28;
  void **v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  void *v40;
  void *v41;
  __n128 v42;
  double *preferredElementSize;
  Swift::String v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  NSString v50;
  NSString v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  id v56;
  id v57;
  id v58;
  double v59;
  NSString v60;
  void *v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  Swift::OpaquePointer v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  UIImage_optional v79;

  v3 = v2;
  ObjectType = (void *)swift_getObjectType(v2);
  sub_1004FFC34();
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  v11 = sub_100853178();
  v13 = v12 != 2 && (v12 & 1) == 0;
  v76 = v8;
  v75 = a2;
  if (!v13 || (v14 = *(_QWORD *)(v8 + 16)) == 0)
  {
LABEL_14:
    v8 = 0;
    goto LABEL_15;
  }
  v15 = v11;
  if (*(_QWORD *)(v8 + 32) != v11)
  {
    if (v14 != 1)
    {
      v18 = (void **)(v8 + 88);
      v19 = 1;
      while (1)
      {
        v20 = v19 + 1;
        if (__OFADD__(v19, 1))
          break;
        if (*(v18 - 3) == (void *)v11)
        {
          v16 = a1;
          v17 = v18 - 1;
          goto LABEL_34;
        }
        v18 += 4;
        ++v19;
        if (v20 == v14)
          goto LABEL_14;
      }
      __break(1u);
LABEL_39:
      if (v15 < 0)
        v69 = v15;
      else
        v69 = v15 & 0xFFFFFFFFFFFFFF8;
      v70 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
      preferredElementSize = (double *)_bridgeCocoaArray<A>(_:)(v69, v70);
      goto LABEL_26;
    }
    goto LABEL_14;
  }
  v16 = a1;
  v17 = (void **)(v8 + 48);
  v18 = (void **)(v8 + 56);
LABEL_34:
  v62 = *v17;
  v63 = *v18;
  swift_bridgeObjectRetain(*v17);
  v64 = v63;

  v65 = (void *)objc_opt_self(NSString);
  v10 = v64;
  v66 = objc_msgSend(v65, "crlwpax_descriptionForVerticalAlignment:", v15);
  if (v66)
  {
    v67 = v66;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v8 = v68;

    swift_bridgeObjectRelease(v62);
  }
  else
  {

    swift_bridgeObjectRelease(v62);
    v8 = 0;
  }
  a1 = v16;
LABEL_15:
  v21 = (void *)objc_opt_self(UIColor);
  v22 = objc_msgSend(v21, "labelColor");
  v23 = objc_msgSend(v21, "labelColor");
  ObjectType = sub_1004C8F18(v10, 0, 0, 0, 0, 0, v22, v23, 6.0, 0);

  objc_msgSend(ObjectType, "setShowsMenuAsPrimaryAction:", 1);
  v77 = sub_100853178();
  if (v24 == 2)
  {
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v76).n128_u64[0];
    isa = 0;
    a2 = v75;
    goto LABEL_27;
  }
  v74 = a1;
  v27 = *(_QWORD *)(v76 + 16);
  v15 = (uint64_t)_swiftEmptyArrayStorage;
  if (v27)
  {
    v28 = v24;
    v72 = ObjectType;
    v73 = v8;
    v78 = v3;
    specialized ContiguousArray.reserveCapacity(_:)(v27);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v29 = (void **)(v76 + 56);
    do
    {
      v34 = (uint64_t)*(v29 - 3);
      v33 = (uint64_t)*(v29 - 2);
      v36 = (uint64_t)*(v29 - 1);
      v35 = *v29;
      v37 = swift_allocObject(&unk_101269838, 24, 7);
      swift_unknownObjectWeakInit(v37 + 16);
      v38 = (_QWORD *)swift_allocObject(&unk_1012698B0, 56, 7);
      v38[2] = v37;
      v38[3] = v34;
      v38[4] = v33;
      v38[5] = v36;
      v38[6] = v35;
      swift_bridgeObjectRetain_n(v36, 3);
      v39 = v35;
      v40 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v33, v36, 0, 0, v35, 0, 0, 0, 0, 0, 0, sub_100500294, v38);
      v41 = v40;
      if ((v28 & 1) == 0 && v77 == v34)
        objc_msgSend(v40, "setState:", 1);

      swift_bridgeObjectRelease(v36);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
      v31 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v31);
      v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v31, v41);
      specialized ContiguousArray._endMutation()(v32);
      v29 += 4;
      --v27;
    }
    while (v27);
    v15 = (uint64_t)_swiftEmptyArrayStorage;

    v8 = v73;
    ObjectType = v72;
  }
  a1 = v74;
  a2 = v75;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_39;
  v42 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v42);
  sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
  preferredElementSize = _swiftEmptyArrayStorage;
LABEL_26:
  swift_bridgeObjectRelease(v15);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v79.value.super.isa = 0;
  v79.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v79, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v71).super.super.isa;
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v76).n128_u64[0];
LABEL_27:
  objc_msgSend(ObjectType, "setMenu:", isa, v25);

  if ((a2 & 1) == 0)
  {
    v45 = objc_msgSend(ObjectType, "widthAnchor");
    v46 = objc_msgSend(v45, "constraintEqualToConstant:", *(double *)&a1);

    objc_msgSend(v46, "setActive:", 1);
  }
  objc_msgSend(ObjectType, "setPreferredMenuElementOrder:", 2);
  v47 = (void *)objc_opt_self(NSBundle);
  v48 = ObjectType;
  v49 = objc_msgSend(v47, "mainBundle");
  v50 = String._bridgeToObjectiveC()();
  v51 = String._bridgeToObjectiveC()();
  v52 = objc_msgSend(v49, "localizedStringForKey:value:table:", v50, v51, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v54 = v53;

  v55 = String._bridgeToObjectiveC()();
  objc_msgSend(v48, "setAccessibilityLabel:", v55, swift_bridgeObjectRelease(v54).n128_f64[0]);

  v56 = v48;
  v57 = objc_msgSend(v56, "accessibilityLabel");
  objc_msgSend(v56, "setLargeContentTitle:", v57);

  v58 = v56;
  if (v8)
  {
    v60 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  else
  {
    v60 = 0;
  }
  objc_msgSend(v56, "setAccessibilityValue:", v60, v59);

  return v56;
}

void sub_1004FCD10(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  NSString v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  char **v21;
  id v22;
  id v23;
  void *v24;
  char **v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Class v35;
  UIMenuElementSize v36;
  Swift::String v37;
  Class isa;
  double v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  id v51;
  id v52;
  Swift::OpaquePointer v53;
  uint64_t v54;
  double v55;
  uint64_t ObjectType;
  int v57;
  int v58;
  int v59;
  UIMenuElementSize v60;
  UIImage_optional v61;

  v58 = a1;
  v59 = a3;
  ObjectType = swift_getObjectType(v3);
  v5 = type metadata accessor for UIButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - v10;
  v12 = sub_1008532B8();
  if ((v12 & 0x100) != 0)
    v13 = 0;
  else
    v13 = v12;
  if ((v12 & 0xFF00) == 0x200)
    v14 = 0;
  else
    v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

  if (v16)
  {
    v55 = *(double *)&a2;
    v57 = v14;
    if ((_BYTE)v14)
    {
      if (qword_1013DC888 != -1)
        swift_once(&qword_1013DC888, sub_1004C5368);
      v17 = (void *)qword_10147E6A0;
      v18 = (void *)objc_opt_self(UIColor);
      v19 = v17;
      v20 = v17;
      v21 = &selRef_whiteColor;
    }
    else
    {
      v22 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      v23 = objc_msgSend(v22, "traitCollection");

      LODWORD(v22) = objc_msgSend(v23, "crl_isUserInterfaceStyleDark");
      v24 = (void *)objc_opt_self(UIColor);
      v25 = &selRef_tertiarySystemBackgroundColor;
      if (!(_DWORD)v22)
        v25 = &selRef_secondarySystemBackgroundColor;
      v19 = objc_msgSend(v24, *v25);
      v18 = (void *)objc_opt_self(UIColor);
      v21 = &selRef_labelColor;
    }
    v26 = objc_msgSend(v18, *v21);
    if ((v58 & 1) != 0)
    {
      v27 = v16;
      sub_1004C9754(v16);
      sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
      v28 = (void *)UIButton.init(configuration:primaryAction:)(v8, 0);
      objc_msgSend(v28, "setPointerInteractionEnabled:", 1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);

    }
    else
    {
      v29 = (void *)objc_opt_self(UIColor);
      v30 = v16;
      v31 = objc_msgSend(v29, "labelColor");
      v28 = sub_1004C8F18(v16, 0, 0, 0, v19, 0, v26, v31, 6.0, 0);

    }
    objc_msgSend(v28, "setShowsMenuAsPrimaryAction:", 1);
    v32 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v33 = swift_allocObject(v32, 48, 7);
    *(_OWORD *)(v33 + 16) = xmmword_100EF5560;
    sub_1004FD2C8(v57);
    *(_QWORD *)(v33 + 32) = v34;
    v35 = sub_1004FD9E4();
    *(_QWORD *)(v33 + 40) = v35;
    v60 = v33;
    specialized Array._endMutation()(v35);
    v36 = v60;
    sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v61.value.super.isa = 0;
    v61.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v61, 0, 0xFFFFFFFFFFFFFFFFLL, v36, v53).super.super.isa;
    objc_msgSend(v28, "setMenu:", isa);

    if ((v59 & 1) == 0)
    {
      v39 = v55;
      v40 = objc_msgSend(v28, "widthAnchor");
      v41 = objc_msgSend(v40, "constraintEqualToConstant:", v39);

      objc_msgSend(v41, "setActive:", 1);
    }
    v42 = (void *)objc_opt_self(NSBundle);
    v43 = v28;
    v44 = objc_msgSend(v42, "mainBundle");
    v45 = String._bridgeToObjectiveC()();
    v46 = String._bridgeToObjectiveC()();
    v47 = objc_msgSend(v44, "localizedStringForKey:value:table:", v45, v46, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v49 = v48;

    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(v43, "setAccessibilityLabel:", v50, swift_bridgeObjectRelease(v49).n128_f64[0]);

    v51 = v43;
    v52 = objc_msgSend(v51, "accessibilityLabel");
    objc_msgSend(v51, "setLargeContentTitle:", v52);

  }
  else
  {
    __break(1u);
  }
}

void sub_1004FD2C8(char a1)
{
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  unint64_t v51;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v49 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6, v8, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100500220, v9);
  v10 = objc_msgSend(v1, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  v18 = (void *)objc_opt_self(UIImage);
  v19 = objc_msgSend(v18, "systemImageNamed:", v17);

  v20 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v48 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14, v16, 0, 0, v19, 0, 0, 0, 0, 0, 0, sub_10050023C, v20);
  v21 = objc_msgSend(v1, "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v18, "systemImageNamed:", v28);

  v30 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16);
  v31 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v25, v27, 0, 0, v29, 0, 0, 0, 0, 0, 0, sub_100500258, v30);
  v32 = objc_msgSend(v1, "mainBundle");
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v18, "systemImageNamed:", v39);

  v41 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v41 + 16);
  v42 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v36, v38, 0, 0, v40, 0, 0, 0, 0, 0, 0, sub_100500274, v41);
  v43 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v44 = swift_allocObject(v43, 64, 7);
  *(_OWORD *)(v44 + 16) = xmmword_100EF7310;
  *(_QWORD *)(v44 + 32) = v49;
  *(_QWORD *)(v44 + 40) = v48;
  *(_QWORD *)(v44 + 48) = v31;
  *(_QWORD *)(v44 + 56) = v42;
  v51 = v44;
  specialized Array._endMutation()(v44);
  v49;
  v45 = v48;
  v46 = v31;
  v47 = v42;
  sub_100C0025C(v51);
  __asm { BR              X10 }
}

Class sub_1004FD854(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, UIMenuElementSize preferredElementSize, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  __n128 v35;
  UIMenuElementSize v36;
  Swift::String v37;
  Class isa;
  uint64_t v40;
  uint64_t v41;
  Swift::OpaquePointer v42;
  UIImage_optional v43;

  objc_msgSend(v32, "setState:", 1);
  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v40 = v34;
    else
      v40 = v34 & 0xFFFFFFFFFFFFFF8;
    v41 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v34);
    v36 = _bridgeCocoaArray<A>(_:)(v40, v41);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v35 = swift_bridgeObjectRetain(v34);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v35);
    sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    v36 = v34;
  }
  swift_bridgeObjectRelease(v34);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v43.value.super.isa = 0;
  v43.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v43, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v36, v42).super.super.isa;

  return isa;
}

void sub_1004FD98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1004FDF30(a3);

  }
}

Class sub_1004FD9E4()
{
  NSString v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  Swift::String v32;
  Class isa;
  Swift::OpaquePointer v35;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v37;

  v0 = String._bridgeToObjectiveC()();
  v1 = (void *)objc_opt_self(UIImage);
  v2 = objc_msgSend(v1, "systemImageNamed:", v0);

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "systemImageNamed:", v3);

  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  if (sub_1003A91F4())
    v13 = v4;
  else
    v13 = v2;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v14 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = v13;
  v16 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10, v12, 0, 0, v13, 0, 0, 0, 0, 0, 0, sub_1005001C8, v14);
  v17 = objc_msgSend(v5, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  if (sub_1003A91F4())
    v24 = v2;
  else
    v24 = v4;
  v25 = swift_allocObject(&unk_101269838, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = v24;
  v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v21, v23, 0, 0, v24, 0, 0, 0, 0, 0, 0, sub_1005001F4, v25);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v28 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v29 + 32) = v16;
  *(_QWORD *)(v29 + 40) = v27;
  preferredElementSize = v29;
  specialized Array._endMutation()(v29);
  v30 = v16;
  v31 = v27;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v37.value.super.isa = 0;
  v37.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v37, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v35).super.super.isa;

  return isa;
}

void sub_1004FDDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  _QWORD aBlock[5];
  uint64_t v20;
  char v21[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);

    v12 = *(void **)&v11[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    v13 = swift_allocObject(&unk_101269798, 32, 7);
    *(_QWORD *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 16) = 0;
    aBlock[4] = a3;
    v20 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100541BD8;
    aBlock[3] = a4;
    v14 = _Block_copy(aBlock);
    v15 = v20;
    swift_retain(v13);
    objc_msgSend(v12, "enumerateEditorsOnStackUsingBlock:", v14, swift_release(v15).n128_f64[0]);
    _Block_release(v14);
    swift_beginAccess(v13 + 16, aBlock, 0, 0);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = *(_QWORD *)(v13 + 24);
    swift_unknownObjectRetain(v16);
    swift_release(v13);
    if (v16)
    {
      ObjectType = swift_getObjectType(v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 288))(a5, ObjectType, v17);

      swift_unknownObjectRelease(v16);
    }
    else
    {

    }
  }
}

double sub_1004FDF30(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t ObjectType;
  _QWORD v11[5];
  uint64_t v12;

  v3 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider)
                + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v4 = swift_allocObject(&unk_101269798, 32, 7);
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  v11[4] = sub_100500184;
  v12 = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = *(_QWORD *)"";
  v11[2] = sub_100541BD8;
  v11[3] = &unk_101269800;
  v5 = _Block_copy(v11);
  v6 = v12;
  swift_retain(v4);
  objc_msgSend(v3, "enumerateEditorsOnStackUsingBlock:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  swift_beginAccess(v4 + 16, v11, 0, 0);
  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  swift_unknownObjectRetain(v7);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  if (v7)
  {
    ObjectType = swift_getObjectType(v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 280))(a1, ObjectType, v8);
    *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  return result;
}

id sub_1004FE070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  double v4;
  id v5;
  Class isa;
  id v7;
  double v8;
  id v9;
  id v10;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF7300;
  sub_1004F7340();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = sub_1004FB330(0, 0x4048800000000000, 0);
  v3 = sub_1004FC614(0x4048800000000000, 0);
  *(_QWORD *)(v1 + 48) = v3;
  specialized Array._endMutation()(v3);
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v4 = *(double *)&qword_10147E6C0;
  v5 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setAlignment:", 0);
  objc_msgSend(v7, "setDistribution:", 0);
  objc_msgSend(v7, "setSpacing:", v4);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v8 = *(double *)&qword_10147E6D0;
  v9 = objc_msgSend(v7, "heightAnchor");
  v10 = objc_msgSend(v9, "constraintGreaterThanOrEqualToConstant:", v8);

  objc_msgSend(v10, "setActive:", 1);
  swift_bridgeObjectRelease(v1);

  return v7;
}

id sub_1004FE280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  id v4;
  Class isa;
  id v6;
  double v7;
  id v8;
  id v9;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF7300;
  *(_QWORD *)(v1 + 32) = sub_1004FA128(0, 1, 0, 88.0, 6.0);
  *(_QWORD *)(v1 + 40) = sub_1004F9F64();
  sub_1004FCD10(0, 0x4048800000000000, 0);
  *(_QWORD *)(v1 + 48) = v2;
  specialized Array._endMutation()(v2);
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v3 = *(double *)&qword_10147E6C0;
  v4 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v6, "setAxis:", 0);
  objc_msgSend(v6, "setAlignment:", 0);
  objc_msgSend(v6, "setDistribution:", 0);
  objc_msgSend(v6, "setSpacing:", v3);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v7 = *(double *)&qword_10147E6D0;
  v8 = objc_msgSend(v6, "heightAnchor");
  v9 = objc_msgSend(v8, "constraintGreaterThanOrEqualToConstant:", v7);

  objc_msgSend(v9, "setActive:", 1);
  swift_bridgeObjectRelease(v1);

  return v6;
}

id sub_1004FE49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  double v4;
  id v5;
  Class isa;
  id v7;
  double v8;
  id v9;
  id v10;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF5560;
  sub_1004F7340();
  *(_QWORD *)(v1 + 32) = v2;
  v3 = sub_1004F9658();
  *(_QWORD *)(v1 + 40) = v3;
  specialized Array._endMutation()(v3);
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v4 = *(double *)&qword_10147E6C0;
  v5 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v1);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v1).n128_f64[0]);

  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setAlignment:", 0);
  objc_msgSend(v7, "setDistribution:", 0);
  objc_msgSend(v7, "setSpacing:", v4);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v8 = *(double *)&qword_10147E6D0;
  v9 = objc_msgSend(v7, "heightAnchor");
  v10 = objc_msgSend(v9, "constraintGreaterThanOrEqualToConstant:", v8);

  objc_msgSend(v10, "setActive:", 1);
  swift_bridgeObjectRelease(v1);

  return v7;
}

id sub_1004FE688()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  id v6;
  Class isa;
  id v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  Class v13;
  double v14;
  id v15;
  id v16;
  _QWORD v18[5];

  v18[3] = &type metadata for CRLFeatureFlags;
  v18[4] = sub_1004DB6DC();
  LOBYTE(v18[0]) = 22;
  v0 = isFeatureEnabled(_:)(v18);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v18);
  v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  if ((v0 & 1) != 0)
  {
    v2 = swift_allocObject(v1, 56, 7);
    *(_OWORD *)(v2 + 16) = xmmword_100EF7300;
    *(_QWORD *)(v2 + 32) = sub_1004FB330(0, 0x4056C00000000000, 0);
    *(_QWORD *)(v2 + 40) = sub_1004FC614(0x4056800000000000, 0);
    sub_1004FCD10(0, 0x4056C00000000000, 0);
    *(_QWORD *)(v2 + 48) = v3;
    v18[0] = v2;
    specialized Array._endMutation()(v3);
    v4 = v18[0];
    if (qword_1013DC8A0 != -1)
      swift_once(&qword_1013DC8A0, sub_1004C5424);
    v5 = *(double *)&qword_10147E6C0;
    v6 = objc_allocWithZone((Class)UIStackView);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    swift_bridgeObjectRetain(v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v6, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

    objc_msgSend(v8, "setAxis:", 0);
    objc_msgSend(v8, "setAlignment:", 0);
    objc_msgSend(v8, "setDistribution:", 0);
    objc_msgSend(v8, "setSpacing:", v5);
    if (qword_1013DC8B0 == -1)
      goto LABEL_9;
LABEL_10:
    swift_once(&qword_1013DC8B0, sub_1004C5444);
    goto LABEL_9;
  }
  v9 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v9 + 32) = sub_1004FBF60();
  sub_1004FCD10(0, 0x4050400000000000, 0);
  *(_QWORD *)(v9 + 40) = v10;
  v18[0] = v9;
  specialized Array._endMutation()(v10);
  v4 = v18[0];
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v11 = *(double *)&qword_10147E6C0;
  v12 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v4);
  v13 = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v12, "initWithArrangedSubviews:", v13, swift_bridgeObjectRelease(v4).n128_f64[0]);

  objc_msgSend(v8, "setAxis:", 0);
  objc_msgSend(v8, "setAlignment:", 0);
  objc_msgSend(v8, "setDistribution:", 0);
  objc_msgSend(v8, "setSpacing:", v11);
  if (qword_1013DC8B0 != -1)
    goto LABEL_10;
LABEL_9:
  v14 = *(double *)&qword_10147E6D0;
  v15 = objc_msgSend(v8, "heightAnchor");
  v16 = objc_msgSend(v15, "constraintGreaterThanOrEqualToConstant:", v14);

  objc_msgSend(v16, "setActive:", 1);
  swift_bridgeObjectRelease(v4);

  return v8;
}

void *sub_1004FEA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_100704150();
  if (v0)
    sub_100511EB8(v0);
  v1 = sub_100557658();
  if (v1)
  {
    v2 = v1;
    v3 = v1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v3 = v1;
      v7 = type metadata accessor for CRLBoardItem(0);
      v5 = _bridgeCocoaArray<A>(_:)(v3, v7);
    }
    else
    {
      v4 = swift_bridgeObjectRetain(v1);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
      type metadata accessor for CRLBoardItem(0);
      v5 = v2;
    }
    swift_bridgeObjectRelease(v2);
    sub_10051FB14(v5);
    swift_bridgeObjectRelease(v5);
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1004FEB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1004CB6E8(a2, (uint64_t)&v21);
  v4 = type metadata accessor for CRLShapeItem(0);
  if ((swift_dynamicCast(v20, &v21, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    goto LABEL_14;
  v5 = (void *)v20[0];
  v6 = sub_100557658();
  if (!v6 || (v7 = v6, v8 = sub_100C9D9C0((uint64_t)v5, v6), swift_bridgeObjectRelease(v7), (v8 & 1) == 0))
  {

LABEL_14:
    v18 = sub_1004C9944(a1, a2);
    return v18 & 1;
  }
  v9 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  v10 = &v9[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  v11 = v9;
  swift_beginAccess(v10, v20, 0, 0);
  v12 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16))
  {
    v13 = sub_100843260(25);
    if ((v14 & 1) != 0)
      goto LABEL_12;
  }
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 1;
  sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);
  v12 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16))
  {
    v13 = sub_100843260(27);
    if ((v15 & 1) != 0)
      goto LABEL_12;
  }
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 1;
  sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);
  v12 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16))
  {
    v13 = sub_100843260(29);
    if ((v16 & 1) != 0)
      goto LABEL_12;
  }
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 1;
  sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);
  v12 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16) && (v13 = sub_100843260(30), (v17 & 1) != 0))
  {
LABEL_12:
    sub_1004F370C(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v21);
    sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);

    v18 = 1;
  }
  else
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 1;
    sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);

    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1004FED54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char *v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if ((objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element), "options") & 0x100000) == 0)return 0;
  sub_1004CB6E8(a2, (uint64_t)&v21);
  v5 = type metadata accessor for CRLShapeItem(0);
  if ((swift_dynamicCast(v20, &v21, (char *)&type metadata for Any + 8, v5, 6) & 1) == 0)
    return 0;
  v6 = (void *)v20[0];
  v7 = sub_100557658();
  if (!v7)
  {

    return v7;
  }
  v8 = sub_100C9D9C0((uint64_t)v6, v7);
  swift_bridgeObjectRelease(v7);
  if ((v8 & 1) == 0)
  {

    return 0;
  }
  v9 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  v10 = &v9[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  swift_beginAccess(&v9[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data], v20, 0, 0);
  v11 = *(_QWORD *)v10;
  if (*(_QWORD *)(*(_QWORD *)v10 + 16) && (v12 = sub_100843260(25), (v13 & 1) != 0))
  {
    sub_1004F370C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v21);
    v14 = v9;
    sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);

    return 1;
  }
  else
  {
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 1;
    v16 = v9;
    sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);
    v17 = *(_QWORD *)v10;
    if (*(_QWORD *)(*(_QWORD *)v10 + 16) && (v18 = sub_100843260(27), (v19 & 1) != 0))
    {
      sub_1004F370C(*(_QWORD *)(v17 + 56) + 32 * v18, (uint64_t)&v21);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v24 = 1;
    }
    sub_1004CB800((uint64_t)&v21, (uint64_t *)&unk_1013DFC00);

  }
  return v7;
}

uint64_t sub_1004FEF2C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager
                                      + 8));

  return sub_1004C1024(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_closeButtonClosure), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_closeButtonClosure + 8));
}

id sub_1004FEF7C()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterTextBuilder);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextBuilder()
{
  return objc_opt_self(_TtC8Freeform30CRLiOSMiniFormatterTextBuilder);
}

_QWORD *sub_1004FEFFC(void *a1, uint64_t a2)
{
  uint64_t v4;
  float v5;
  void *v6;
  uint64_t v7;
  float v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v4 = sub_100852680();
  if ((v4 & 0xFF00000000) != 0x200000000)
  {
    v29 = *(_QWORD *)(a2 + 16);
    if (v29)
    {
      v28 = v4 & 0xFFFFFFFFFFLL;
      v5 = *(float *)&v4;
      swift_bridgeObjectRetain(a2);
      specialized ContiguousArray.reserveCapacity(_:)(v29);
      v6 = (void *)objc_opt_self(NSBundle);
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v7 = 0;
      do
      {
        v8 = *(float *)(a2 + 4 * v7 + 32);
        v9 = objc_msgSend(v6, "mainBundle");
        v10 = String._bridgeToObjectiveC()();
        v11 = String._bridgeToObjectiveC()();
        v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v15 = v14;

        v16 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v17 = swift_allocObject(v16, 72, 7);
        *(_OWORD *)(v17 + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v17 + 56) = &type metadata for Float;
        *(_QWORD *)(v17 + 64) = &protocol witness table for Float;
        *(float *)(v17 + 32) = v8;
        v18 = static String.localizedStringWithFormat(_:_:)(v13, v15, v17);
        v20 = v19;
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v15);
        v21 = v8 == v5 && (v28 & (unint64_t)&_mh_execute_header) == 0;
        ++v7;
        v22 = swift_allocObject(&unk_101269770, 36, 7);
        *(_QWORD *)(v22 + 16) = a1;
        *(_QWORD *)(v22 + 24) = a2;
        *(float *)(v22 + 32) = v8;
        swift_bridgeObjectRetain(a2);
        v23 = a1;
        v24 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v18, v20, 0, 0, 0, 0, 0, 0, 0, 0, v21, sub_100500138, v22);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v25 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v24);
        specialized ContiguousArray._endMutation()(v26);
      }
      while (v29 != v7);
      swift_bridgeObjectRelease(a2);
    }
  }
  return _swiftEmptyArrayStorage;
}

id sub_1004FF34C()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniFormatterFontPickerViewController);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterFontPickerViewController()
{
  return objc_opt_self(_TtC8Freeform43CRLiOSMiniFormatterFontPickerViewController);
}

void sub_1004FF388(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  float v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v2 = v1;
  v4 = objc_msgSend(a1, "selectedFontDescriptor");
  if (v4)
  {
    v22 = v4;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider);
    v6 = sub_100852680();
    if ((v6 & 0xFF00000000) == 0x200000000)
    {

    }
    else
    {
      v7 = *(float *)&v6;
      v8 = objc_msgSend((id)objc_opt_self(CRLWPFont), "baseFontWithDescriptor:", v22);
      v9 = objc_msgSend(v8, "copyWithSize:", v7);
      v10 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v11 = swift_allocObject(&unk_101269798, 32, 7);
      *(_QWORD *)(v11 + 24) = 0;
      *(_QWORD *)(v11 + 16) = 0;
      aBlock[4] = sub_100500184;
      v24 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100541BD8;
      aBlock[3] = &unk_1012697B0;
      v12 = _Block_copy(aBlock);
      v13 = v24;
      swift_retain(v11);
      objc_msgSend(v10, "enumerateEditorsOnStackUsingBlock:", v12, swift_release(v13).n128_f64[0]);
      _Block_release(v12);
      swift_beginAccess(v11 + 16, aBlock, 0, 0);
      v14 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      swift_unknownObjectRetain(v14);
      swift_release(v11);
      if (v14)
      {
        ObjectType = swift_getObjectType(v14);
        (*(void (**)(id, uint64_t, uint64_t))(v15 + 48))(v9, ObjectType, v15);
        swift_unknownObjectRelease(v14);
      }
      v17 = v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
      Strong = swift_unknownObjectWeakLoadStrong(v17);
      if (Strong)
      {
        v19 = Strong;
        v20 = *(_QWORD *)(v17 + 16);
        objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
        v21 = swift_getObjectType(v19);
        (*(void (**)(void *, uint64_t, uint64_t))(v20 + 40))(a1, v21, v20);

        swift_unknownObjectRelease(v19);
      }
      else
      {

      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TextSizeManager(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t destroy for TextSizeManager(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for TextSizeManager(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for TextSizeManager(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FixupBookkeepingData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FixupBookkeepingData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextSizeManager()
{
  return &type metadata for TextSizeManager;
}

void sub_1004FF884()
{
  void *v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  id v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = String._bridgeToObjectiveC()();
  v9 = (void *)objc_opt_self(UIImage);
  v10 = objc_msgSend(v9, "systemImageNamed:", v8);

  if (!v10)
  {
    __break(1u);
    goto LABEL_24;
  }
  v11 = objc_msgSend(v0, "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v9, "systemImageNamed:", v17);

  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v19 = objc_msgSend(v0, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v9, "systemImageNamed:", v26);

  if (!v27)
  {
LABEL_25:
    __break(1u);
    return;
  }
  v28 = sub_1003A91F4();
  v29 = sub_1004B804C(&qword_1013E10A8);
  v30 = swift_allocObject(v29, 128, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5550;
  if (v28)
    v31 = v23;
  else
    v31 = v5;
  if (v28)
    v32 = v25;
  else
    v32 = v7;
  *(_QWORD *)(v30 + 32) = v28;
  *(_QWORD *)(v30 + 40) = v31;
  if (v28)
    v33 = v27;
  else
    v33 = v10;
  if (v28)
    v34 = v5;
  else
    v34 = v23;
  if (v28)
    v35 = v7;
  else
    v35 = v25;
  *(_QWORD *)(v30 + 48) = v32;
  *(_QWORD *)(v30 + 56) = v33;
  if (v28)
    v36 = v10;
  else
    v36 = v27;
  *(_QWORD *)(v30 + 64) = 2;
  *(_QWORD *)(v30 + 72) = v37;
  *(_QWORD *)(v30 + 80) = v16;
  *(_QWORD *)(v30 + 88) = v18;
  *(_QWORD *)(v30 + 96) = v28 ^ 1;
  *(_QWORD *)(v30 + 104) = v34;
  *(_QWORD *)(v30 + 112) = v35;
  *(_QWORD *)(v30 + 120) = v36;
}

void sub_1004FFC34()
{
  void *v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  void *v8;
  id v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v31 = v6;

  v7 = String._bridgeToObjectiveC()();
  v8 = (void *)objc_opt_self(UIImage);
  v9 = objc_msgSend(v8, "systemImageNamed:", v7);

  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  v30 = v5;
  v10 = objc_msgSend(v0, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v8, "systemImageNamed:", v17);

  if (!v18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v19 = objc_msgSend(v0, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v8, "systemImageNamed:", v26);

  if (v27)
  {
    v28 = sub_1004B804C(&qword_1013E1098);
    v29 = swift_allocObject(v28, 128, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100EF5550;
    *(_QWORD *)(v29 + 32) = 0;
    *(_QWORD *)(v29 + 40) = v30;
    *(_QWORD *)(v29 + 48) = v31;
    *(_QWORD *)(v29 + 56) = v9;
    *(_QWORD *)(v29 + 64) = 1;
    *(_QWORD *)(v29 + 72) = v14;
    *(_QWORD *)(v29 + 80) = v16;
    *(_QWORD *)(v29 + 88) = v18;
    *(_QWORD *)(v29 + 96) = 2;
    *(_QWORD *)(v29 + 104) = v23;
    *(_QWORD *)(v29 + 112) = v25;
    *(_QWORD *)(v29 + 120) = v27;
    return;
  }
LABEL_7:
  __break(1u);
}

id sub_1004FFFB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, char a7, char a8, double a9, char a10, uint64_t a11, uint64_t a12, char a13)
{
  void *v13;
  char *v18;
  _BYTE *v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t *v23;
  id v24;
  objc_super v31;

  v18 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterTextDataProvider());
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v31.receiver = v18;
  v31.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
  v19 = v13;
  v20 = a5;
  v21 = objc_msgSendSuper2(&v31, "init");
  *(_QWORD *)&v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_dataProvider] = v21;
  v22 = &v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager];
  *v22 = v21;
  v22[1] = &off_101263390;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedStackView] = a7;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaySimplifiedLandscapeStackView] = a8;
  *(double *)&v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_headerViewHeight] = a9;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_displaysCloseButton] = a10;
  v23 = (uint64_t *)&v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_closeButtonClosure];
  *v23 = a11;
  v23[1] = a12;
  v19[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_isEditingText] = a13;
  v24 = v21;
  sub_1004C0F54(a11, a12);

  return sub_1004CA6E8(a1, a2, a3, a4, v20, a6);
}

uint64_t sub_10050010C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 36, 7);
}

void sub_100500138()
{
  uint64_t v0;

  sub_1008527B4(*(float *)(v0 + 32));
}

uint64_t sub_100500160()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100500184(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_10094A57C(a1, a2, v2);
}

uint64_t sub_10050018C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10050019C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1005001A4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005001C8(uint64_t a1)
{
  uint64_t v1;

  sub_1004FDDB4(a1, v1, (uint64_t)sub_100500184, (uint64_t)&unk_101269878, -1);
}

void sub_1005001F4(uint64_t a1)
{
  uint64_t v1;

  sub_1004FDDB4(a1, v1, (uint64_t)sub_100500184, (uint64_t)&unk_101269850, 1);
}

void sub_100500220(uint64_t a1)
{
  uint64_t v1;

  sub_1004FD98C(a1, v1, 0);
}

void sub_10050023C(uint64_t a1)
{
  uint64_t v1;

  sub_1004FD98C(a1, v1, 3);
}

void sub_100500258(uint64_t a1)
{
  uint64_t v1;

  sub_1004FD98C(a1, v1, 1);
}

void sub_100500274(uint64_t a1)
{
  uint64_t v1;

  sub_1004FD98C(a1, v1, 2);
}

uint64_t sub_100500294(uint64_t a1)
{
  return sub_100500304(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FC444);
}

double sub_1005002A0()
{
  return sub_1004FC278();
}

uint64_t sub_1005002C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005002F8(uint64_t a1)
{
  return sub_100500304(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FBD90);
}

uint64_t sub_100500304(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

void sub_100500318(uint64_t a1)
{
  uint64_t v1;

  sub_1004FAFD8(a1, v1, (void (*)(id, uint64_t))sub_1004FB068);
}

id sub_100500338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v8;
  char *v9;
  char *v10;
  double v11;
  objc_super v13;

  v8 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterFontPickerViewController();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = &v9[OBJC_IVAR____TtC8Freeform43CRLiOSMiniFormatterFontPickerViewController_popoverDelegate];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a5;
  v13.receiver = v9;
  v13.super_class = v8;
  *(_QWORD *)&v11 = swift_unknownObjectRetain(a1).n128_u64[0];
  return objc_msgSendSuper2(&v13, "initWithConfiguration:", a2, v11);
}

uint64_t sub_1005003AC(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v2 = 0;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = v3 - 1;
  v5 = a1 + 32;
  result = v3 - 1;
  do
  {
    if (v4 >= 0)
      v7 = v4;
    else
      v7 = v4 + 1;
    if (v4 < -1)
      goto LABEL_10;
    v8 = v7 >> 1;
    if (v7 >> 1 >= v3)
      goto LABEL_10;
    if (*(float *)(v5 + 4 * v8) > a2)
    {
      result = v8 - 1;
LABEL_10:
      if (v2 < 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    v2 = v8 + 1;
    if (v8 + 1 < 0)
      goto LABEL_13;
LABEL_11:
    if (v2 < v3 && *(float *)(v5 + 4 * v2) > a2)
      return v2 - 1;
LABEL_13:
    if ((result & 0x8000000000000000) == 0 && result < v3 && *(float *)(v5 + 4 * result) < a2)
      return result;
    v4 = v2 + result;
  }
  while (!__OFADD__(v2, result));
  __break(1u);
  return result;
}

void sub_100500444(uint64_t a1)
{
  uint64_t v1;

  sub_1004FAFD8(a1, v1, (void (*)(id, uint64_t))sub_1004FAC2C);
}

unint64_t sub_100500464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DFC40;
  if (!qword_1013DFC40)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013E4970);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013DFC40);
  }
  return result;
}

void sub_1005004B0(uint64_t a1)
{
  uint64_t v1;

  sub_1004F9980(a1, v1);
}

uint64_t sub_1005004B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004F9364(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1005004CC()
{
  return 8;
}

uint64_t sub_1005004D8(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1005004E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_1005004F4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100500500()
{
  uint64_t v0;

  return swift_deallocObject(v0, 26, 7);
}

void sub_100500524(uint64_t a1)
{
  uint64_t v1;

  sub_1004F87D8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_100500534(uint64_t a1)
{
  uint64_t v1;

  sub_1004F8938(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_100500544(uint64_t a1)
{
  uint64_t v1;

  sub_1004F8A98(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_100500554(uint64_t a1)
{
  uint64_t v1;

  sub_1004F8BF8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_100500564()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100500588()
{
  sub_1004F78BC();
}

uint64_t sub_1005005A8()
{
  uint64_t v0;
  uint64_t (**v1)(void);
  uint64_t result;

  v1 = (uint64_t (**)(void))(*(_QWORD *)(v0 + 16)
                          + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_closeButtonClosure);
  if (*v1)
    return (*v1)();
  return result;
}

unint64_t sub_10050066C()
{
  unint64_t result;

  result = qword_1013E10C0;
  if (!qword_1013E10C0)
  {
    result = swift_getWitnessTable(&unk_100EF746C, &type metadata for CRLResizeSelectionFontIntent);
    atomic_store(result, (unint64_t *)&qword_1013E10C0);
  }
  return result;
}

uint64_t sub_1005006B0()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1005006D0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1005006F0()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100500710@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  char *v63;
  char *v64;
  unsigned int v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  unsigned int v68;
  char *v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  void (*v71)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t *v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD v86[7];

  v83 = a1;
  v1 = sub_1004B804C(&qword_1013E1108);
  __chkstk_darwin(v1);
  v78 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for InputConnectionBehavior(0);
  v77 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v81 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v4);
  v80 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v79 = (char *)&v62 - v7;
  v8 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v10;
  v11 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v11);
  v64 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocalizedStringResource(0);
  v24 = *(_QWORD *)(v23 - 8);
  v72 = v23;
  __chkstk_darwin(v23);
  v69 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v68 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v66 = v13;
  v28(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  v67 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter title for a board", 34, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x8000000100FAFCC0);
  static Locale.current.getter(v29);
  v28(v16, v27, v13);
  v30 = v64;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter description for a board", 40, 2);
  v71 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v71(v30, 0, 1, v23);
  v31 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v70 = v33;
  v34 = v79;
  v33(v79, 1, 1, v32);
  v35 = v80;
  v33(v80, 1, 1, v32);
  v75 = sub_1004B804C(&qword_1013E1128);
  v76 = 0x8000000100FAFD20;
  v84 = 0xD00000000000001FLL;
  v85 = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(&v84, &type metadata for String, &protocol witness table for String);
  v74 = type metadata accessor for AppDependencyManager(0);
  v36 = ((uint64_t (*)(void))static AppDependencyManager.shared.getter)();
  v86[0] = AppDependency.__allocating_init(key:manager:)(v86, v36);
  v65 = enum case for InputConnectionBehavior.default(_:);
  v77 = *(_QWORD *)(v77 + 104);
  v37 = v81;
  ((void (*)(char *))v77)(v81);
  v38 = sub_100501D10();
  v39 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v40 = v69;
  v41 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v69, v30, v63, v34, v35, v37, v86, &type metadata for CRLOpenBoardsOptionsProvider, v38, v39);
  *v83 = v41;
  v73 = sub_1004B804C(&qword_1013E1140);
  v42 = String.LocalizationValue.init(stringLiteral:)(0x65676E616843, 0xE600000000000000);
  static Locale.current.getter(v42);
  v43 = v68;
  v44 = v66;
  v45 = v67;
  v67(v16, v68, v66);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter title for a text resize mode", 45, 2);
  v46 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003ELL, 0x8000000100FAFD70);
  static Locale.current.getter(v46);
  v45(v16, v43, v44);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter description for a text resize mode", 51, 2);
  v47 = v30;
  v71(v30, 0, 1, v72);
  v48 = type metadata accessor for ResizeBehavior(0);
  v49 = v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v78, 1, 1, v48);
  v50 = v79;
  v51 = v70;
  v70(v79, 1, 1, v32);
  v52 = v80;
  v51(v80, 1, 1, v32);
  v53 = v81;
  ((void (*)(char *, _QWORD, uint64_t))v77)(v81, v65, v82);
  v54 = sub_1004B7878(&qword_1013E1148, (uint64_t (*)(uint64_t))&type metadata accessor for ResizeBehavior, (uint64_t)&protocol conformance descriptor for ResizeBehavior);
  dispatch thunk of static CaseIterable.allCases.getter(v86, v48, v54);
  v55 = v86[0];
  v56 = sub_1004B7878(&qword_1013E1150, (uint64_t (*)(uint64_t))&type metadata accessor for ResizeBehavior, (uint64_t)&protocol conformance descriptor for ResizeBehavior);
  v57 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v40, v47, v49, v50, v52, v53, v55, v56);
  v58 = v83;
  v83[1] = v57;
  v84 = 0xD00000000000001FLL;
  v85 = v76;
  v59 = AnyHashable.init<A>(_:)(&v84, &type metadata for String, &protocol witness table for String);
  v60 = static AppDependencyManager.shared.getter(v59);
  result = AppDependency.__allocating_init(key:manager:)(v86, v60);
  v58[2] = result;
  v58[6] = (uint64_t)&type metadata for CRLChangeSelectionFontSizeIntentPerformer;
  v58[7] = (uint64_t)&off_101289B00;
  return result;
}

uint64_t sub_100500EF8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for ResizeBehavior(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardEntity(0);
  v2[13] = v6;
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[15] = v7;
  v2[16] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[17] = v8;
  v2[18] = v9;
  return swift_task_switch(sub_100500FD4, v8, v9);
}

uint64_t sub_100500FD4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v2 = v0[13];
  v1 = (_QWORD *)v0[14];
  v3 = v0[12];
  IntentParameter.wrappedValue.getter(v1);
  sub_1004E1B3C((uint64_t)v1 + *(int *)(v2 + 40), v3);
  v4 = sub_1004B84A4((uint64_t)v1, type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter(v4);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v7 = (char *)&dword_1014118E0 + dword_1014118E0;
  v5 = (_QWORD *)swift_task_alloc(unk_1014118E4);
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_1005010AC;
  return ((uint64_t (*)(_QWORD, _QWORD *))v7)(v0[12], v0 + 2);
}

uint64_t sub_1005010AC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 152);
  v5[20] = a2;
  v5[21] = v2;
  swift_task_dealloc(v6);
  sub_1004B84A4(v5[12], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    v7 = v5[17];
    v8 = v5[18];
    v9 = sub_10050135C;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5 + 2);

    v7 = v5[17];
    v8 = v5[18];
    v9 = sub_10050114C;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_10050114C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_100501D54();
  if (v1)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v1, v2);
  else
    ObjCClassFromMetadata = 0;
  v4 = objc_msgSend(*(id *)(v0 + 160), "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  *(_QWORD *)(v0 + 176) = v4;
  v5 = objc_opt_self(CRLWPShapeEditor);
  v6 = swift_dynamicCastObjCClass(v4, v5);
  *(_QWORD *)(v0 + 184) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 120);
    v8 = IntentParameter.wrappedValue.getter(*(_QWORD **)(v0 + 88));
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v8);
    v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
    return swift_task_switch(sub_100501280, v9, v10);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 128);
    swift_unknownObjectRelease(v4);
    swift_release(v12);
    v13 = *(void **)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    static IntentResult.result<>()(v17);

    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100501280()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v1 = (void *)v0[23];
  v3 = v0[10];
  v2 = v0[11];
  v4 = v0[9];
  swift_release(v0[24]);
  v5 = sub_1009411E0(v2, v1);
  (*(void (**)(uint64_t, uint64_t, double))(v3 + 8))(v2, v4, v5);
  return swift_task_switch(sub_1005012E4, v0[17], v0[18]);
}

uint64_t sub_1005012E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 128));
  v2 = swift_unknownObjectRelease(v1);
  v3 = *(void **)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  static IntentResult.result<>()(v2);

  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050135C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 128));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005013C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147E7E0);
  sub_1004F2A1C(v10, (uint64_t)qword_10147E7E0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x5420657A69736552, 0xEB00000000747865);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100501554()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013E1160);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E1168);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100501854();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 2, &type metadata for CRLResizeSelectionFontIntent, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EF7590);
  v9 = sub_1004B804C(&qword_1013E1170);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0x697320746E6F6620;
  v10._object = (void *)0xEE00206E6F20657ALL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100EF75B8);
  v12 = sub_1004B804C(qword_1013E1178);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLResizeSelectionFontIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLResizeSelectionFontIntent, v6);
}

uint64_t sub_100501720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for ResizeBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1005017B8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100501800;
}

void sub_100501800(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_100501830(uint64_t a1)
{
  unint64_t result;

  result = sub_100501854();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100501854()
{
  unint64_t result;

  result = qword_1013E10C8;
  if (!qword_1013E10C8)
  {
    result = swift_getWitnessTable(&unk_100EF7494, &type metadata for CRLResizeSelectionFontIntent);
    atomic_store(result, (unint64_t *)&qword_1013E10C8);
  }
  return result;
}

unint64_t sub_1005018A0()
{
  unint64_t result;

  result = qword_1013E10D0;
  if (!qword_1013E10D0)
  {
    result = swift_getWitnessTable(&unk_100EF7524, &type metadata for CRLResizeSelectionFontIntent);
    atomic_store(result, (unint64_t *)&qword_1013E10D0);
  }
  return result;
}

unint64_t sub_1005018E8()
{
  unint64_t result;

  result = qword_1013E10D8;
  if (!qword_1013E10D8)
  {
    result = swift_getWitnessTable(&unk_100EF754C, &type metadata for CRLResizeSelectionFontIntent);
    atomic_store(result, (unint64_t *)&qword_1013E10D8);
  }
  return result;
}

uint64_t sub_10050192C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101115D68, 1);
}

uint64_t sub_10050193C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101115D40, 1);
}

uint64_t sub_10050194C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DC918 != -1)
    swift_once(&qword_1013DC918, sub_1005013C4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147E7E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1005019CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E115C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100500EF8(a1);
}

uint64_t sub_100501A20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100501854();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for CRLRenameBoardIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 3);
}

uint64_t initializeWithCopy for CRLRenameBoardIntent(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t *, uint64_t);

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2 + 3;
  v7 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v7 - 8);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  v9(a1 + 24, v6, v8);
  return a1;
}

uint64_t *assignWithCopy for CRLRenameBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  sub_1004EA5C8(a1 + 3, a2 + 3);
  return a1;
}

__n128 initializeWithTake for CRLRenameBoardIntent(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for CRLRenameBoardIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_release(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_release(v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 3);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  a1[7] = a2[7];
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLRenameBoardIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLRenameBoardIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLResizeSelectionFontIntent()
{
  return &type metadata for CRLResizeSelectionFontIntent;
}

uint64_t sub_100501CB8()
{
  return sub_1004CBA30(&qword_1013E10E8, &qword_1013E10F0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100501CE4()
{
  return sub_1004CBA30(&qword_1013E10F8, &qword_1013E1100, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

unint64_t sub_100501D10()
{
  unint64_t result;

  result = qword_1013E1130;
  if (!qword_1013E1130)
  {
    result = swift_getWitnessTable(&unk_100F15EE0, &type metadata for CRLOpenBoardsOptionsProvider);
    atomic_store(result, (unint64_t *)&qword_1013E1130);
  }
  return result;
}

unint64_t sub_100501D54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F5610;
  if (!qword_1013F5610)
  {
    v1 = objc_opt_self(CRLWPShapeEditor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F5610);
  }
  return result;
}

uint64_t sub_100501D90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100501DB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t *sub_100501DE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_100501E24(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = &unk_100EF7698;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 104);
}

void sub_100501E78()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000024, 0x8000000100FAFEC0, "Freeform/CRLGroupSessionManager.swift", 37, 2, 94, 0);
  __break(1u);
}

uint64_t sub_100501ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100501F38, v2, v3);
}

uint64_t sub_100501F38()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100501F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter();
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10050206C, v2, v3);
}

_QWORD *sub_100501FD0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  sub_1004CBB0C((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return v0;
}

uint64_t sub_10050200C()
{
  uint64_t v0;

  sub_100501FD0();
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for CRLGroupSessionManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLGroupSessionManager);
}

uint64_t sub_100502038(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_100502040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

id sub_100502168(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t inited;
  NSString v7;
  uint64_t v8;
  uint64_t v10;
  char *v11;
  objc_super v12;
  char v13[72];

  if ((a1 & 0xC000000000000001) == 0)
  {
    v10 = *(_QWORD *)(a1 + 16);
    v11 = v1;
    if (v10 > 0)
      goto LABEL_7;
    goto LABEL_6;
  }
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  v4 = v1;
  if (__CocoaSet.count.getter(v3) <= 0)
  {
LABEL_6:
    v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v5, v13);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v7 = String._bridgeToObjectiveC()();
    *(_QWORD *)(inited + 56) = sub_10050312C();
    *(_QWORD *)(inited + 64) = sub_1005034A0((unint64_t *)&qword_1013EE6B0, 255, (uint64_t (*)(uint64_t))sub_10050312C, (uint64_t)&protocol conformance descriptor for NSObject);
    *(_QWORD *)(inited + 32) = v7;
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemSelection.swift", 91, 2, 18, "Invalid parameter not satisfied: %{public}@", 43, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"init(_:)", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemSelection.swift", 91, 2u, 18, (uint64_t)"Invalid parameter not satisfied: %{public}@", 43, 2u);
    swift_setDeallocating(inited);
    v8 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v8);
  }
LABEL_7:
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems] = a1;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for CRLBoardItemSelection();
  return objc_msgSendSuper2(&v12, "init");
}

uint64_t sub_10050239C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char *v11;
  _BYTE v12[24];
  uint64_t v13;

  sub_1004F370C(a1, (uint64_t)v12);
  if (!v13)
  {
    sub_1004D28EC((uint64_t)v12);
    goto LABEL_7;
  }
  v2 = type metadata accessor for CRLBoardItemSelection();
  if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_7:
    v9 = 0;
    return v9 & 1;
  }
  v3 = v11;
  ObjectType = swift_getObjectType(v1);
  if (!objc_msgSend(v3, "isMemberOfClass:", swift_getObjCClassFromMetadata(ObjectType, v5)))
  {

    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  sub_1008D8A00(v6, v7);
  v9 = v8;

  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  return v9 & 1;
}

uint64_t sub_100502528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  void (*v32)(_BYTE *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[32];
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  _QWORD *v46;

  v41 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  v5 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = __CocoaSet.count.getter(v6);
    if (v7)
      goto LABEL_6;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    v12 = _swiftEmptyArrayStorage;
LABEL_30:
    v34 = sub_1005034A0((unint64_t *)&qword_1013DE630, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v35 = Array<A>.hashValue.getter(v12, v41, v34);
    swift_bridgeObjectRelease(v12);
    return v35;
  }
  v7 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems));
  if (!v7)
    goto LABEL_12;
LABEL_6:
  v46 = _swiftEmptyArrayStorage;
  sub_100600724(0, v7 & ~(v7 >> 63), 0);
  if (v5)
  {
    if (v4 < 0)
      v8 = v4;
    else
      v8 = v4 & 0xFFFFFFFFFFFFFF8;
    result = __CocoaSet.startIndex.getter(v8);
    v11 = 1;
  }
  else
  {
    result = sub_1005C461C(v4);
    v11 = v13 & 1;
  }
  v43 = result;
  v44 = v10;
  v45 = v11;
  if ((v7 & 0x8000000000000000) == 0)
  {
    v14 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v4 < 0)
      v14 = v4;
    v40 = v14;
    v38 = v4 & 0xC000000000000001;
    v39 = v1;
    v37 = v3;
    do
    {
      while (1)
      {
        sub_1005C3C98(v43, v44, v45, v4);
        v25 = v24;
        (*(void (**)(void))((swift_isaMask & *v24) + 0x88))();

        v26 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
        {
          sub_100600724(0, v26[2] + 1, 1);
          v26 = v46;
        }
        v28 = v26[2];
        v27 = v26[3];
        if (v28 >= v27 >> 1)
        {
          sub_100600724(v27 > 1, v28 + 1, 1);
          v26 = v46;
        }
        v26[2] = v28 + 1;
        result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))((unint64_t)v26+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v28, v3, v41);
        v46 = v26;
        if (v5)
          break;
        v15 = v43;
        v16 = v44;
        v17 = v45;
        v18 = sub_1005C3B08(v43, v44, v45, v4);
        v20 = v19;
        v22 = v21;
        v23 = v17;
        v5 = v38;
        sub_100503494(v15, v16, v23);
        v43 = v18;
        v44 = v20;
        v3 = v37;
        v1 = v39;
        v45 = v22 & 1;
        if (!--v7)
          goto LABEL_29;
      }
      if ((v45 & 1) == 0)
        goto LABEL_32;
      v29 = __CocoaSet.Index.handleBitPattern.getter(v43, v44);
      if (v29)
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
      else
        isUniquelyReferenced_nonNull_native = 1;
      v31 = sub_1004B804C(&qword_1013E56C0);
      v32 = (void (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify(v42, v31);
      __CocoaSet.formIndex(after:isUnique:)(v33, isUniquelyReferenced_nonNull_native, v40);
      v32(v42, 0);
      --v7;
    }
    while (v7);
LABEL_29:
    sub_100503494(v43, v44, v45);
    swift_bridgeObjectRelease(v4);
    v12 = v46;
    goto LABEL_30;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

Swift::Int sub_1005028D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  unsigned __int8 v12;
  id v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = &_swiftEmptySetSingleton;
    v28 = &_swiftEmptySetSingleton;
    if (v3 < 0)
      v5 = v3;
    else
      v5 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v6 = __CocoaSet.makeIterator()(v5);
    v7 = __CocoaSet.Iterator.next()(v6);
    if (v7)
    {
      v8 = v7;
      v9 = type metadata accessor for CRLBoardItem(0);
      do
      {
        v26 = v8;
        swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
        v12 = objc_msgSend(v27, "isKindOfClass:", swift_getObjCClassFromMetadata(a1, v11));
        v13 = v27;
        if ((v12 & 1) != 0)
        {
          v14 = v28;
          v15 = v28[2];
          if (v28[3] <= v15)
          {
            sub_100ADE280(v15 + 1);
            v14 = v28;
          }
          result = NSObject._rawHashValue(seed:)(v14[5]);
          v16 = v14 + 7;
          v17 = -1 << *((_BYTE *)v14 + 32);
          v18 = result & ~v17;
          v19 = v18 >> 6;
          if (((-1 << v18) & ~v14[(v18 >> 6) + 7]) != 0)
          {
            v20 = __clz(__rbit64((-1 << v18) & ~v14[(v18 >> 6) + 7])) | v18 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v21 = 0;
            v22 = (unint64_t)(63 - v17) >> 6;
            do
            {
              if (++v19 == v22 && (v21 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v23 = v19 == v22;
              if (v19 == v22)
                v19 = 0;
              v21 |= v23;
              v24 = v16[v19];
            }
            while (v24 == -1);
            v20 = __clz(__rbit64(~v24)) + (v19 << 6);
          }
          *(_QWORD *)((char *)v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
          *(_QWORD *)(v14[6] + 8 * v20) = v13;
          ++v14[2];
        }
        else
        {

        }
        v8 = __CocoaSet.Iterator.next()(result);
      }
      while (v8);
      v4 = v28;
    }
    swift_release(v6);
  }
  else
  {
    swift_bridgeObjectRetain(v3);
    return (Swift::Int)sub_100503168(v25, a1);
  }
  return (Swift::Int)v4;
}

void sub_100502B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD v31[5];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  if ((v3 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for CRLBoardItem(0);
    v7 = sub_1005034A0((unint64_t *)&qword_1013E4190, 255, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v31, v5, v6, v7);
    v3 = v31[0];
    v28 = v31[1];
    v9 = v31[2];
    v10 = v31[3];
    v11 = v31[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v3 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v3 + 56);
    swift_bridgeObjectRetain(v3);
    v10 = 0;
  }
  v27 = (unint64_t)(v9 + 64) >> 6;
  while (1)
  {
    v20 = v10;
    if ((v3 & 0x8000000000000000) == 0)
      break;
    v24 = __CocoaSet.Iterator.next()(v8);
    if (!v24)
      goto LABEL_32;
    v25 = v24;
    v29 = v24;
    v26 = type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain(v25);
    swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
    v18 = v30;
    swift_unknownObjectRelease(v25);
    if (!v18)
      goto LABEL_32;
LABEL_13:
    v19 = objc_msgSend(v18, "isKindOfClass:", swift_getObjCClassFromMetadata(a1, v17));

    if (v19)
      goto LABEL_32;
  }
  if (v11)
  {
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v16 = v15 | (v10 << 6);
LABEL_12:
    v18 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v18)
      goto LABEL_32;
    goto LABEL_13;
  }
  v21 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v21 >= v27)
      goto LABEL_32;
    v22 = *(_QWORD *)(v28 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v20 + 2;
      if (v20 + 2 >= v27)
        goto LABEL_32;
      v22 = *(_QWORD *)(v28 + 8 * v10);
      if (!v22)
      {
        v10 = v20 + 3;
        if (v20 + 3 >= v27)
          goto LABEL_32;
        v22 = *(_QWORD *)(v28 + 8 * v10);
        if (!v22)
        {
          v10 = v20 + 4;
          if (v20 + 4 >= v27)
            goto LABEL_32;
          v22 = *(_QWORD *)(v28 + 8 * v10);
          if (!v22)
          {
            v23 = v20 + 5;
            while (v27 != v23)
            {
              v22 = *(_QWORD *)(v28 + 8 * v23++);
              if (v22)
              {
                v10 = v23 - 1;
                goto LABEL_29;
              }
            }
LABEL_32:
            sub_1004D284C(v3);
            return;
          }
        }
      }
    }
LABEL_29:
    v11 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_100502EF0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  sub_10050312C();
  v1 = (void *)NSString.init(stringLiteral:)("<CRLBoardItemSelection: %p %tu %@>", 34, 2);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v3 = swift_allocObject(v2, 152, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100EF5550;
  *(_QWORD *)(v3 + 56) = type metadata accessor for CRLBoardItemSelection();
  *(_QWORD *)(v3 + 64) = sub_1005034A0(&qword_1013E1260, v4, (uint64_t (*)(uint64_t))type metadata accessor for CRLBoardItemSelection, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(v3 + 32) = v0;
  v5 = OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems;
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems];
  if ((v6 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems];
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    v8 = v0;
    swift_bridgeObjectRetain(v6);
    v9 = __CocoaSet.count.getter(v7);
    swift_bridgeObjectRelease(v6);
    v6 = *(_QWORD *)&v0[v5];
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 16);
    v10 = v0;
  }
  *(_QWORD *)(v3 + 96) = &type metadata for Int;
  *(_QWORD *)(v3 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v3 + 72) = v9;
  type metadata accessor for CRLBoardItem(0);
  sub_1005034A0((unint64_t *)&qword_1013E4190, 255, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
  v11 = swift_bridgeObjectRetain(v6);
  v12 = Set.description.getter(v11);
  v14 = v13;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(v3 + 136) = &type metadata for String;
  *(_QWORD *)(v3 + 144) = sub_1004CFC2C();
  *(_QWORD *)(v3 + 112) = v12;
  *(_QWORD *)(v3 + 120) = v14;
  v15 = (void *)NSString.init(format:_:)(v1, v3);

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  return v16;
}

id sub_1005030CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardItemSelection();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLBoardItemSelection()
{
  return objc_opt_self(_TtC8Freeform21CRLBoardItemSelection);
}

unint64_t sub_10050312C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E46B0;
  if (!qword_1013E46B0)
  {
    v1 = objc_opt_self(NSString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E46B0);
  }
  return result;
}

unint64_t *sub_100503168(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;
  unint64_t *v10;
  __n128 v11;
  void *v12;
  uint64_t v14;

  v4 = isStackAllocationSafe;
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = v5 & 0x3F;
  v7 = (1 << v5) + 63;
  v8 = v7 >> 6;
  v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1005032D8((unint64_t *)((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v4, a2);
    v11 = swift_release(v4);
    if (v2)
      swift_willThrow(v11);
  }
  else
  {
    v12 = (void *)swift_slowAlloc(v9, -1);
    bzero(v12, v9);
    v10 = sub_1005032D8((unint64_t *)v12, v8, v4, a2);
    swift_release(v4);
    swift_slowDealloc(v12, -1, -1);
  }
  return v10;
}

unint64_t *sub_1005032D8(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t *v19;
  uint64_t v20;

  v19 = result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (2)
  {
    v20 = v6;
    do
    {
      if (v11)
      {
        v13 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v14 = v13 | (v7 << 6);
      }
      else
      {
        v15 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
        if (v15 >= v12)
          goto LABEL_23;
        v16 = *(_QWORD *)(v8 + 8 * v15);
        ++v7;
        if (!v16)
        {
          v7 = v15 + 1;
          if (v15 + 1 >= v12)
            goto LABEL_23;
          v16 = *(_QWORD *)(v8 + 8 * v7);
          if (!v16)
          {
            v7 = v15 + 2;
            if (v15 + 2 >= v12)
              goto LABEL_23;
            v16 = *(_QWORD *)(v8 + 8 * v7);
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v12)
              {
LABEL_23:
                swift_retain(a3);
                return (unint64_t *)sub_100CD8140(v19, a2, v20, a3);
              }
              v16 = *(_QWORD *)(v8 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  v7 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_25;
                  if (v7 >= v12)
                    goto LABEL_23;
                  v16 = *(_QWORD *)(v8 + 8 * v7);
                  ++v17;
                  if (v16)
                    goto LABEL_22;
                }
              }
              v7 = v17;
            }
          }
        }
LABEL_22:
        v11 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v7 << 6);
      }
      result = (unint64_t *)objc_msgSend(*(id *)(*(_QWORD *)(a3 + 48) + 8 * v14), "isKindOfClass:", swift_getObjCClassFromMetadata(a4, a2));
    }
    while (!(_DWORD)result);
    *(unint64_t *)((char *)v19 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v6 = v20 + 1;
    if (!__OFADD__(v20, 1))
      continue;
    break;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100503494(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t sub_1005034A0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005034E0(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  CKRecordID v18;
  uint64_t v19;

  if ((uint64_t)objc_msgSend(v1, "characterCount") < a1)
    goto LABEL_14;
  v3 = v1;
  v4 = objc_msgSend(v3, "characterCount");
  if ((uint64_t)v4 < a1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = (uint64_t)v4;
  if ((uint64_t)objc_msgSend(v3, "characterCount") < (uint64_t)v4)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(storage:range:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 31, "Bad range when initializing CRLWPStorage.Paragraphs", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(storage:range:)", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2u, 31, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs", 51, 2u);
    goto LABEL_16;
  }
  v6 = (void *)sub_1005037A0(v3, a1, v5);
  v8 = v7;
  v10 = v9;

  if (v8 < v10)
  {

    return 0;
  }
  v12 = (char *)objc_msgSend(v6, "charIndexForParagraphAtIndex:", v10);
  v13 = (char *)objc_msgSend(v6, "characterCount");
  if ((uint64_t)v13 < (uint64_t)v12)
    goto LABEL_11;
  NSNotFound.getter(v13);
  v11 = objc_msgSend(v6, "paragraphIndexAtCharIndex:", v12);
  v14 = (char *)objc_msgSend(v6, "textRangeForParagraphAtIndex:", v10);
  v16 = v15;

  if (!__OFADD__(v14, v16))
  {
    if ((uint64_t)&v14[v16] >= (uint64_t)v12)
      return (uint64_t)v11;
    goto LABEL_13;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  sub_100757E04(&_mh_execute_header, (uint64_t)"paragraphInfo(at:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 60, "Bad charIndex when getting paragraphInfo", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bad charIndex when getting paragraphInfo");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"paragraphInfo(at:)", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2u, 60, (uint64_t)"Bad charIndex when getting paragraphInfo", 40, 2u);
LABEL_16:
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, *(Swift::String *)&v19);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

uint64_t sub_1005037A0(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t result;
  CKRecordID v8;
  Swift::String v9;

  if ((uint64_t)objc_msgSend(a1, "characterCount") < a3)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(with:charRange:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 81, "Bad charRange in CRLWPParagraphIterator", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bad charRange in CRLWPParagraphIterator");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(with:charRange:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2u, 81, (uint64_t)"Bad charRange in CRLWPParagraphIterator", 39, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, v9);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v6 = a1;
    objc_msgSend(v6, "paragraphIndexAtCharIndex:", a2);
    objc_msgSend(v6, "paragraphIndexAtCharIndex:", a3);
    return (uint64_t)v6;
  }
  return result;
}

uint64_t type metadata accessor for CRLAccountUtilities()
{
  return objc_opt_self(_TtC8Freeform19CRLAccountUtilities);
}

id sub_10050391C()
{
  id result;
  void *v1;
  id v2;
  id v3;

  result = objc_msgSend((id)objc_opt_self(ACAccountStore), "defaultStore");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "aa_primaryAppleAccount");

    if (v2)
    {
      if ((objc_msgSend(v2, "isEnabledForDataclass:", ACAccountDataclassFreeform) & 1) != 0)
      {
        v3 = v2;
        v2 = (id)sub_1007BE674();

      }
      else
      {

        return 0;
      }
    }
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1005039E0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  double result;
  id v30;
  void *v31;
  void *v32;
  __n128 v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  void **aBlock;
  uint64_t v49;
  double (*v50)(uint64_t);
  void *v51;
  uint64_t (*v52)();
  uint64_t v53;

  v46 = a3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  __chkstk_darwin(v5);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  v8 = __chkstk_darwin(v7);
  v40 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0, v8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E1320);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  v18 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, a1, v14, v17);
  v19 = *(unsigned __int8 *)(v15 + 80);
  v20 = (v19 + 24) & ~v19;
  v21 = v20 + v16;
  v22 = a2;
  v23 = v46;
  v24 = swift_allocObject(&unk_101269EB0, v21, v19 | 7);
  *(_QWORD *)(v24 + 16) = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v24 + v20, v18, v14);
  if (v23)
  {
    v52 = sub_100503DC8;
    v53 = v24;
    aBlock = _NSConcreteStackBlock;
    v49 = *(_QWORD *)"";
    v50 = sub_1005D2FC0;
    v51 = &unk_101269EF0;
    v25 = _Block_copy(&aBlock);
    v26 = v53;
    v27 = v22;
    swift_retain(v24);
    v28 = v23;
    objc_msgSend(v28, "performAsync:", v25, swift_release(v26).n128_f64[0]);
    swift_release(v24);
    _Block_release(v25);

  }
  else
  {
    sub_100503E34();
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.default(_:), v10);
    v30 = v22;
    v31 = (void *)static OS_dispatch_queue.global(qos:)(v13);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v52 = sub_100503DC8;
    v53 = v24;
    aBlock = _NSConcreteStackBlock;
    v49 = *(_QWORD *)"";
    v50 = sub_1005D2FC0;
    v51 = &unk_101269EC8;
    v32 = _Block_copy(&aBlock);
    v33 = swift_retain(v24);
    v34 = v40;
    static DispatchQoS.unspecified.getter(v33);
    v47 = _swiftEmptyArrayStorage;
    v35 = sub_1004CB65C();
    v36 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
    v37 = sub_100503E88();
    v38 = v43;
    v39 = v45;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v47, v36, v37, v45, v35);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v34, v38, v32);
    _Block_release(v32);
    swift_release(v24);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
    *(_QWORD *)&result = swift_release(v53).n128_u64[0];
  }
  return result;
}

uint64_t sub_100503D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013E1320);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100503DC8()
{
  uint64_t v0;
  uint64_t v1;
  id v3;

  sub_1004B804C(&qword_1013E1320);
  v3 = objc_msgSend(*(id *)(v0 + 16), "newImage");
  v1 = sub_1004B804C(&qword_1013E1320);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

unint64_t sub_100503E34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DE090;
  if (!qword_1013DE090)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013DE090);
  }
  return result;
}

uint64_t sub_100503E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100503E80(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100503E88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1D30;
  if (!qword_1013E1D30)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013DFBF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E1D30);
  }
  return result;
}

void sub_100503EDC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;

  v1 = objc_msgSend(v0, "collectionView");
  if (!v1)
    goto LABEL_16;
  v2 = v1;
  v3 = objc_msgSend(v1, "visibleCells");

  v4 = sub_1004B8930(0, (unint64_t *)&qword_1013E3840, UICollectionViewCell_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (v6)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(v5, 2);
    return;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v5);
  if (!v6)
    goto LABEL_14;
LABEL_4:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "setNeedsUpdateConfiguration");

    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

id sub_100504038()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  objc_super v8;

  objc_msgSend((id)objc_opt_self(CRLiOSKeyboardMonitor), "removeKeyboardObserver:", v0);
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver];
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

  }
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver];
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v4);
    v6 = objc_msgSend(v5, "defaultCenter");
    objc_msgSend(v6, "removeObserver:", v4);
    swift_unknownObjectRelease(v4);

  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CRLiOSSidebarViewController(0);
  return objc_msgSendSuper2(&v8, "dealloc");
}

void sub_100504218()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  NSString *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSString v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  uint64_t v77;
  int v78;
  int v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;
  uint64_t v97;
  id v98;
  void **aBlock;
  uint64_t v100;
  void *v101;
  void *v102;
  void *v103;
  uint64_t v104;
  objc_super v105;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v3 = (_QWORD *)sub_1004B804C(&qword_1013E1438);
  v4 = *(v3 - 1);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v3);
  v7 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v97 - v8;
  v10 = (objc_class *)type metadata accessor for CRLiOSSidebarViewController(0);
  v105.receiver = v1;
  v105.super_class = v10;
  objc_msgSendSuper2(&v105, "viewDidLoad");
  v11 = objc_msgSend(v1, "collectionView");
  if (!v11)
  {
    __break(1u);
    goto LABEL_27;
  }
  v12 = v11;
  v97 = ObjectType;
  v98 = v3;
  objc_msgSend(v11, "setAllowsMultipleSelection:", 0);

  v13 = objc_msgSend(v1, "collectionView");
  if (!v13)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v14 = v13;
  v15 = type metadata accessor for iCloudStatusFooter();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15, v16);
  aBlock = (void **)v15;
  v18 = UICollectionElementKindSectionFooter;
  v19 = sub_1004B804C(&qword_1013E1440);
  String.init<A>(describing:)(&aBlock, v19);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:", ObjCClassFromMetadata, v18, v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = objc_msgSend(v1, "collectionView");
  if (!v23)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v24 = v23;
  v25 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v1);
  v26 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v103 = sub_10050CC44;
  v104 = v25;
  aBlock = _NSConcreteStackBlock;
  v100 = *(_QWORD *)"";
  v101 = sub_1005B8810;
  v102 = &unk_10126A108;
  v27 = _Block_copy(&aBlock);
  v28 = objc_msgSend(v26, "initWithSectionProvider:", v27, swift_retain(v25).n128_f64[0]);
  _Block_release(v27);
  v29 = v104;
  swift_release(v25);
  objc_msgSend(v24, "setCollectionViewLayout:animated:", v28, 0, swift_release(v29).n128_f64[0]);

  v30 = objc_msgSend(v1, "collectionView");
  if (!v30)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v31 = v30;
  v32 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16, v1);
  v33 = sub_1004B8930(0, &qword_1013E1448, UICollectionViewListCell_ptr);
  v34 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  UICollectionView.CellRegistration.init(handler:)(sub_10050CC4C, v32, v33, v34);
  v35 = v98;
  (*(void (**)(char *, char *, id))(v4 + 16))(v7, v9, v98);
  v36 = *(unsigned __int8 *)(v4 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = swift_allocObject(&unk_10126A140, v37 + v5, v36 | 7);
  (*(void (**)(uint64_t, char *, id))(v4 + 32))(v38 + v37, v7, v35);
  v39 = objc_allocWithZone((Class)sub_1004B804C(&qword_1013E1450));
  v40 = v31;
  v41 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v40, sub_10050CCB8, v38);
  (*(void (**)(char *, id))(v4 + 8))(v9, v35);

  v42 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16, v1);
  v43 = swift_retain(v42);
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_10050CD10, v42, v43);
  swift_release(v42);
  v45 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_libraryProvider];
  v44 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_libraryProvider + 8];
  v46 = type metadata accessor for CRLiOSBoardLibraryViewModelController();
  swift_allocObject(v46, 80, 7);
  v47 = v41;
  swift_unknownObjectRetain(v45);
  v48 = sub_10069579C(v47, v45, v44);
  v49 = OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController;
  v50 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController] = v48;
  swift_release(v50);
  v51 = *(_QWORD *)&v1[v49];
  if (!v51)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)(v51 + 24) = &off_101269F18;
  swift_unknownObjectWeakAssign(v51 + 16, v1);
  sub_100504EE8();
  v52 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v53 = String._bridgeToObjectiveC()();
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v52, "localizedStringForKey:value:table:", v53, v54, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v57 = v56;

  v58 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v58, swift_bridgeObjectRelease(v57).n128_f64[0]);

  v59 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v60 = objc_msgSend(v59, "delegate");

  if (!v60)
  {
LABEL_31:
    __break(1u);
    return;
  }
  v61 = type metadata accessor for CRLiOSAppDelegate();
  v62 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v60, v61, 0, 0, 0)
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  v98 = v47;
  if (v62)
  {
    if ((*(_BYTE *)(v62 + 136) & 1) != 0)
    {
      swift_unknownObjectRelease(v60);
      v63 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges];
      v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 1;
      if ((v63 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      v95 = *(unsigned __int8 *)(v62 + 137);
      swift_unknownObjectRelease(v60);
      v96 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges];
      v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = v95;
      if (v95 == v96)
        goto LABEL_13;
    }
    goto LABEL_12;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 203, "Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2u, 203, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u);
  swift_unknownObjectRelease(v60);
  v64 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges];
  v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 0;
  if ((v64 & 1) != 0)
LABEL_12:
    sub_100503EDC();
LABEL_13:
  v65 = (void *)objc_opt_self(NSNotificationCenter);
  v66 = objc_msgSend(v65, "defaultCenter");
  if (qword_1013DDAE8 != -1)
    swift_once(&qword_1013DDAE8, sub_100B031E8);
  v67 = qword_101480AF8;
  v68 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v68 + 16, v1);
  v103 = sub_10050CD18;
  v104 = v68;
  aBlock = _NSConcreteStackBlock;
  v100 = *(_QWORD *)"";
  v101 = sub_100568280;
  v102 = &unk_10126A158;
  v69 = _Block_copy(&aBlock);
  v70 = objc_msgSend(v66, "addObserverForName:object:queue:usingBlock:", v67, 0, 0, v69, swift_release(v104).n128_f64[0]);
  _Block_release(v69);

  v71 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver] = v70;
  swift_unknownObjectRelease(v71);
  v72 = objc_msgSend(v65, "defaultCenter");
  if (qword_1013DDAE0 != -1)
    swift_once(&qword_1013DDAE0, sub_100B031B4);
  v73 = qword_101480AF0;
  v74 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v74 + 16, v1);
  v103 = sub_10050CD40;
  v104 = v74;
  aBlock = _NSConcreteStackBlock;
  v100 = *(_QWORD *)"";
  v101 = sub_100568280;
  v102 = &unk_10126A180;
  v75 = _Block_copy(&aBlock);
  v76 = objc_msgSend(v72, "addObserverForName:object:queue:usingBlock:", v73, 0, 0, v75, swift_release(v104).n128_f64[0]);
  _Block_release(v75);

  v77 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver] = v76;
  swift_unknownObjectRelease(v77);
  v78 = *(unsigned __int8 *)(*(_QWORD *)(v45 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                           + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_isSyncing);
  v79 = v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights];
  v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights] = v78;
  if (v78 != v79)
    sub_100503EDC();
  v80 = objc_msgSend(v65, "defaultCenter");
  if (qword_1013DC900 != -1)
    swift_once(&qword_1013DC900, sub_1004DDE88);
  v81 = qword_10147E730;
  v82 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v82 + 16, v1);
  v103 = sub_10050CD68;
  v104 = v82;
  aBlock = _NSConcreteStackBlock;
  v100 = *(_QWORD *)"";
  v101 = sub_100568280;
  v102 = &unk_10126A1A8;
  v83 = _Block_copy(&aBlock);
  v84 = objc_msgSend(v80, "addObserverForName:object:queue:usingBlock:", v81, 0, 0, v83, swift_release(v104).n128_f64[0]);
  _Block_release(v83);

  v85 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidEndObserver];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidEndObserver] = v84;
  swift_unknownObjectRelease(v85);
  v86 = objc_msgSend(v65, "defaultCenter");
  if (qword_1013DC908 != -1)
    swift_once(&qword_1013DC908, sub_1004DDEBC);
  v87 = qword_10147E738;
  v88 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v88 + 16, v1);
  v103 = sub_10050CD90;
  v104 = v88;
  aBlock = _NSConcreteStackBlock;
  v100 = *(_QWORD *)"";
  v101 = sub_100568280;
  v102 = &unk_10126A1D0;
  v89 = _Block_copy(&aBlock);
  v90 = objc_msgSend(v86, "addObserverForName:object:queue:usingBlock:", v87, 0, 0, v89, swift_release(v104).n128_f64[0]);
  _Block_release(v89);

  v91 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidBeginObserver];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidBeginObserver] = v90;
  swift_unknownObjectRelease(v91);
  v92 = sub_1004B804C((uint64_t *)&unk_1013F9B80);
  v93 = swift_allocObject(v92, 64, 7);
  *(_OWORD *)(v93 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v93 + 32) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v93 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  *(_QWORD *)(v93 + 48) = type metadata accessor for UITraitVerticalSizeClass(0);
  *(_QWORD *)(v93 + 56) = &protocol witness table for UITraitVerticalSizeClass;
  v94 = UIViewController.registerForTraitChanges<A>(_:handler:)(v93, sub_10050ADA0, 0, v97);

  swift_bridgeObjectRelease(v93);
  swift_unknownObjectRelease(v94);
}

uint64_t sub_100504D8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  Class isa;
  id v22;
  uint64_t result;
  uint64_t v24;
  _BYTE v25[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v25, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);

  if (!Strong)
    return 0;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
  if (v10 == a2 && v11 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v10, v11, 0);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
      return 0;
  }
  v15 = String._bridgeToObjectiveC()();
  v16 = type metadata accessor for iCloudStatusFooter();
  v24 = v16;
  v17 = sub_1004B804C(&qword_1013E1440);
  String.init<A>(describing:)(&v24, v17);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:", v15, v20, isa, v24);

  result = swift_dynamicCastClass(v22, v16);
  if (result)
    return result;

  return 0;
}

void sub_100504EE8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  Class v12;
  objc_class *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  objc_class *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  Class isa;
  uint64_t v32;
  unint64_t v33;
  UIImage_optional v34;
  UIAction_optional v35;
  UIMenu_optional v36;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - v10;
  v33 = (unint64_t)_swiftEmptyArrayStorage;
  if (qword_1013DD260 != -1)
    swift_once(&qword_1013DD260, sub_100851D38);
  if (byte_10147F899 == 1)
  {
    v12 = sub_10065C8B8(v0);
    if (v12)
    {
      v13 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v15 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v14 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v15 >= v14 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized Array._endMutation()(v16);

    }
  }
  if (qword_1013DD258 != -1)
    swift_once(&qword_1013DD258, sub_100851C7C);
  if (byte_10147F898 == 1)
  {
    sub_100851D68(0, 0, 0, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1004CB800((uint64_t)v4, &qword_1013E04D0);
    }
    else
    {
      v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v17(v11, v4, v5);
      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v18);

      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      v20 = *(unsigned __int8 *)(v6 + 80);
      v21 = (v20 + 16) & ~v20;
      v22 = swift_allocObject(&unk_10126A2A8, v21 + v7, v20 | 7);
      v17((char *)(v22 + v21), v9, v5);
      v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x522D6F742D706154, 0xEC00000072616461, 0, 0, v19, 0, 0, 0, 0, 0, 0, sub_10050CFD8, v22);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      v24 = v23;
      v34.value.super.isa = 0;
      v34.is_nil = (char)v23;
      v35.value.super.super.isa = 0;
      v25 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v34, v35, v36).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v27 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v26 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v27 >= v26 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
      v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
      specialized Array._endMutation()(v28);

    }
  }
  v29 = objc_msgSend(v1, "navigationItem");
  v30 = v33;
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(v30).n128_f64[0]);

}

uint64_t sub_1005052F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10050535C, v6, v7);
}

uint64_t sub_10050535C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges) = 1;
    if ((v4 & 1) == 0)
      sub_100503EDC();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005053D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100505444, v6, v7);
}

uint64_t sub_100505444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  int v4;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges) = 0;
    if (v4 == 1)
      sub_100503EDC();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005054C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10050552C, v6, v7);
}

uint64_t sub_10050552C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  int v4;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights) = 0;
    if (v4 == 1)
      sub_100503EDC();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005055A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100505614, v6, v7);
}

uint64_t sub_100505614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char v4;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights) = 1;
    if ((v4 & 1) == 0)
      sub_100503EDC();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100505690()
{
  char *v0;
  void *v1;
  uint64_t Strong;
  uint64_t v3;
  id v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  Class isa;
  id v12;
  id v13;
  id v14;

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate]);
  if (Strong)
  {
    v3 = Strong;
    v4 = sub_1009038CC();
    v5 = objc_msgSend(v4, "isCollapsed");
    swift_unknownObjectRelease(v3);

    if (v5)
    {
      v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v7 = swift_allocObject(v6, 56, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100EF7300;
      v8 = (void *)objc_opt_self(UIBarButtonItem);
      *(_QWORD *)(v7 + 32) = objc_msgSend(v8, "flexibleSpaceItem");
      *(_QWORD *)(v7 + 40) = sub_1005094B0();
      v9 = objc_msgSend(v8, "flexibleSpaceItem");
      *(_QWORD *)(v7 + 48) = v9;
      specialized Array._endMutation()(v9);
      v10 = v7;
      sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v1, "setToolbarItems:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

      v12 = objc_msgSend(v1, "navigationController");
      if (v12)
      {
        v14 = v12;
        objc_msgSend(v12, "setToolbarHidden:animated:", 0, 0);
LABEL_8:

        return;
      }
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 596, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToolbarButtons()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 596, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      return;
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 592, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToolbarButtons()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 592, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  objc_msgSend(v1, "setToolbarItems:", 0);
  v13 = objc_msgSend(v1, "navigationController");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "setToolbarHidden:animated:", 1, 0);
    goto LABEL_8;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"updateToolbarButtons()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 599, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToolbarButtons()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 599, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
}

uint64_t sub_100505AEC(uint64_t a1, int a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  Class isa;
  unsigned int v50;
  void *v51;
  char *v52;
  Class v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  int v70;
  char v71[72];
  char v72[72];
  _BYTE v73[24];
  char v74[48];

  v70 = a2;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v4);
  v69 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_101407260);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v66 - v10;
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a1, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload(v19, v16) == 2)
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)&v19[*(int *)(v21 + 48) + 8]);
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    if (qword_1013DD7A8 != -1)
      swift_once(&qword_1013DD7A8, sub_100A03518);
    swift_beginAccess(&static OS_os_log.crlSidebar, v73, 0, 0);
    v22 = (void *)static OS_os_log.crlSidebar;
    v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v23, v71);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v25 = v22;
    v26 = sub_100BCCD38();
    v28 = v27;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(inited + 40) = v28;
    v30 = static os_log_type_t.default.getter(v29);
    sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v30, "Ignoring board selection: %@", 28, 2, inited);
    swift_setDeallocating(inited);
    v31 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v31);

    return 0;
  }
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
  result = (uint64_t)objc_msgSend(v2, "isViewLoaded");
  if (!(_DWORD)result)
    return 1;
  v68 = v15;
  v66 = v2;
  v34 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController];
  if (!v34)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v35 = swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController]);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1, v35);
  v36 = v13;
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v38 = v37(v9, 1, v12);
  v67 = v36;
  if (v38 == 1)
  {
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101407260);
    sub_100695224(a1, v70 & 1);
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(a1, v39);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v11, v9, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v12);
  }
  v40 = swift_release(v34);
  if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v37)(v11, 1, v12, v40) == 1)
  {
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_101407260);
    v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v42 = swift_initStackObject(v41, v74);
    *(_OWORD *)(v42 + 16) = xmmword_100EF5E40;
    v43 = sub_100BCCD38();
    v45 = v44;
    *(_QWORD *)(v42 + 56) = &type metadata for String;
    *(_QWORD *)(v42 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v42 + 32) = v43;
    *(_QWORD *)(v42 + 40) = v45;
    sub_100757E04(&_mh_execute_header, (uint64_t)"select(_:animated:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 212, "Unknown item: %@", 16, 2u, v42);
    sub_1004F5394(v42, (uint64_t)"select(_:animated:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 212, (uint64_t)"Unknown item: %@", 16, 2u);
    swift_setDeallocating(v42);
    v46 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v42 + 32, 1, v46);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v68, v11, v12);
  v47 = v66;
  result = (uint64_t)objc_msgSend(v66, "collectionView");
  if (!result)
    goto LABEL_23;
  v48 = (void *)result;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v50 = objc_msgSend(v47, "collectionView:shouldSelectItemAtIndexPath:", v48, isa);

  if (!v50)
  {
    if (qword_1013DD7A8 != -1)
      swift_once(&qword_1013DD7A8, sub_100A03518);
    swift_beginAccess(&static OS_os_log.crlSidebar, v73, 0, 0);
    v56 = (void *)static OS_os_log.crlSidebar;
    v57 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v58 = swift_initStackObject(v57, v72);
    *(_OWORD *)(v58 + 16) = xmmword_100EF5E40;
    v59 = v56;
    v60 = sub_100BCCD38();
    v62 = v61;
    *(_QWORD *)(v58 + 56) = &type metadata for String;
    *(_QWORD *)(v58 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v58 + 32) = v60;
    *(_QWORD *)(v58 + 40) = v62;
    v64 = static os_log_type_t.default.getter(v63);
    sub_100A06EBC((uint64_t)v59, &_mh_execute_header, v64, "Ignoring request to select unselectable item: %@", 48, 2, v58);
    swift_setDeallocating(v58);
    v65 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v58 + 32, 1, v65);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v12);
    return 0;
  }
  result = (uint64_t)objc_msgSend(v47, "collectionView");
  if (result)
  {
    v51 = (void *)result;
    v52 = v68;
    v53 = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v51, "selectItemAtIndexPath:animated:scrollPosition:", v53, v70 & 1, 2);

    v54 = v69;
    sub_1004B8460(a1, v69, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v32 = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v54, 0, 1, v16);
    v55 = (uint64_t)&v47[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem];
    swift_beginAccess(&v47[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem], v73, 33, 0);
    sub_10050BDB0(v54, v55);
    swift_endAccess(v73);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v12);
    return v32;
  }
LABEL_24:
  __break(1u);
  return result;
}

_OWORD *sub_100506248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char *v3;
  void *v4;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  objc_super v21;
  __int128 v22;
  __int128 v23;

  v4 = v3;
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate]);
  if (Strong)
  {
    v9 = Strong;
    v10 = sub_100903140();
    if (v10)
    {
      v11 = v10;
      *((_QWORD *)&v23 + 1) = type metadata accessor for CRLiOSFolderGridViewController(0);
      *(_QWORD *)&v22 = v11;
      swift_unknownObjectRelease(v9);
      if (*((_QWORD *)&v23 + 1))
        return sub_10050CB14(&v22, a3);
    }
    else
    {
      v22 = 0u;
      v23 = 0u;
      swift_unknownObjectRelease(v9);
    }
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_1004CB800((uint64_t)&v22, &qword_1013E0230);
  sub_1004CB7BC(a2, (uint64_t)&v22, &qword_1013E0230);
  v13 = *((_QWORD *)&v23 + 1);
  if (*((_QWORD *)&v23 + 1))
  {
    v14 = sub_1004BB5A4(&v22, *((uint64_t *)&v23 + 1));
    v15 = *(_QWORD *)(v13 - 8);
    __chkstk_darwin(v14);
    v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v13);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v22);
  }
  else
  {
    v18 = 0;
  }
  v19 = (objc_class *)type metadata accessor for CRLiOSSidebarViewController(0);
  v21.receiver = v4;
  v21.super_class = v19;
  v20 = objc_msgSendSuper2(&v21, "targetForAction:withSender:", a1, v18);
  swift_unknownObjectRelease(v18);
  if (v20)
  {
    _bridgeAnyObjectToAny(_:)(&v22, v20);
    swift_unknownObjectRelease(v20);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  return (_OWORD *)sub_1004D28A4((uint64_t)&v22, (uint64_t)a3);
}

id sub_100506728()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  __int128 v18;
  __int128 v19;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "window");

    if (v3)
    {
      v4 = objc_msgSend(v3, "windowScene");

      if (v4)
      {
        v5 = objc_msgSend(v4, "delegate");

        if (v5)
        {
          v6 = type metadata accessor for CRLiOSSceneDelegate(0);
          v7 = (void *)swift_dynamicCastClass(v5, v6);
          if (v7)
          {
            v8 = v7;
            v9 = v7;
            v10 = sub_100903140();
            if (v10)
            {
              v11 = v10;
              v12 = type metadata accessor for CRLiOSFolderGridViewController(0);
              *((_QWORD *)&v19 + 1) = v12;
              *(_QWORD *)&v18 = v11;

              if (v12)
              {
                v13 = swift_dynamicCast(&v17, &v18, (char *)&type metadata for Any + 8, v12, 6);
                v14 = v17;
                if (!v13)
                  v14 = 0;
                goto LABEL_14;
              }
            }
            else
            {
              v18 = 0u;
              v19 = 0u;

            }
LABEL_13:
            sub_1004CB800((uint64_t)&v18, &qword_1013E0230);
            v14 = 0;
LABEL_14:
            v15 = v14;
            v16 = objc_msgSend(v15, "undoManager");

            return v16;
          }
          swift_unknownObjectRelease(v5);
        }
      }
    }
    v8 = 0;
    v18 = 0u;
    v19 = 0u;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_10050692C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD v14[4];
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;

  v2 = v1;
  v3 = Notification.userInfo.getter(a1);
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = v3;
  v14[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v14[1] = v5;
  AnyHashable.init<A>(_:)(v14, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_1008432BC((uint64_t)v15), (v7 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  swift_bridgeObjectRelease(v4);
  sub_1004B89A4((uint64_t)v15);
  if (*((_QWORD *)&v17 + 1))
  {
    type metadata accessor for CGRect(0);
    if ((swift_dynamicCast(v14, &v16, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
    {
      v9 = *(double *)&v14[3];
      v10 = objc_msgSend(v2, "collectionView");
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v10, "setContentInset:", 0.0, 0.0, v9, 0.0);

        v12 = objc_msgSend(v2, "collectionView");
        if (v12)
        {
          v13 = v12;
          objc_msgSend(v12, "setScrollIndicatorInsets:", 0.0, 0.0, v9, 0.0);

          return;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
    }
  }
  else
  {
    sub_1004CB800((uint64_t)&v16, &qword_1013E0230);
  }
}

id sub_100506C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  Class v23;
  id result;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  BOOL v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  Class isa;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[24];

  v61 = a1;
  v62 = a2;
  v63 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  v4 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICollectionLayoutListConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v65, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (!Strong)
    return 0;
  v59 = v11;
  v60 = v8;
  v55 = v7;
  v56 = v4;
  v58 = v12;
  v16 = (objc_class *)Strong;
  v17 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate);
  if (v17)
  {
    v18 = v17;
    v19 = sub_1009038CC();
    v20 = objc_msgSend(v19, "traitCollection");

    v21 = objc_msgSend(v20, "horizontalSizeClass");
    swift_unknownObjectRelease(v18);

    v57 = v21 == (id)1;
  }
  else
  {
    v57 = 0;
  }
  v23 = v16;
  result = -[objc_class view](v16, "view");
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend(result, "window");

    if (!v26
      || (v27 = objc_msgSend(v26, "traitCollection"),
          v26,
          v28 = objc_msgSend(v27, "horizontalSizeClass"),
          v27,
          v28 != (id)2))
    {
      v34 = 0;
      v35 = v61;
      v36 = v62;
      v29 = v60;
LABEL_15:
      (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v10, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v55);
      UICollectionLayoutListConfiguration.init(appearance:)(v10);
      v37 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
      if (v35)
        v37 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.firstItemInSection(_:);
      (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v6, *v37, v63);
      UICollectionLayoutListConfiguration.headerMode.setter(v6);
      v38 = v57;
      UICollectionLayoutListConfiguration.showsSeparators.setter(v57 | v34);
      sub_1004B8930(0, &qword_1013E14D0, NSCollectionLayoutSection_ptr);
      v39 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v14, v36);
      v22 = v39;
      if (v34)
      {
        objc_msgSend(v39, "contentInsets");
        objc_msgSend(v22, "setContentInsets:", 0.0);
      }
      else if (v38)
      {
        v40 = (void *)objc_opt_self(NSCollectionLayoutDimension);
        v41 = objc_msgSend(v40, "fractionalWidthDimension:", 1.0);
        v42 = objc_msgSend(v40, "absoluteDimension:", 102.0);
        v43 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v41, v42);

        static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionFooter);
        v45 = v44;
        v46 = v43;
        v47 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v45);
        v48 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v46, v47, 5);

        v49 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v50 = swift_allocObject(v49, 40, 7);
        *(_OWORD *)(v50 + 16) = xmmword_100EEF400;
        *(_QWORD *)(v50 + 32) = v48;
        v64 = v50;
        specialized Array._endMutation()(v50);
        v51 = v64;
        sub_1004B8930(0, &qword_101407380, NSCollectionLayoutBoundarySupplementaryItem_ptr);
        v52 = v48;
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v22, "setBoundarySupplementaryItems:", isa, swift_bridgeObjectRelease(v51).n128_f64[0]);

        v23 = isa;
      }
      else
      {
        objc_msgSend(v39, "setInterGroupSpacing:", 5.0);
      }

      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v59);
      return v22;
    }
    result = -[objc_class view](v16, "view");
    v29 = v60;
    if (result)
    {
      v30 = result;
      v31 = objc_msgSend(result, "window");

      if (v31)
      {
        v32 = objc_msgSend(v31, "traitCollection");

        v33 = objc_msgSend(v32, "verticalSizeClass");
        v34 = v33 == (id)1;
      }
      else
      {
        v34 = 0;
      }
      v35 = v61;
      v36 = v62;
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005071DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, _QWORD *a4@<X8>)
{
  double v8;
  double v9;
  __n128 v10;
  id v11;
  void (*v12)(_BYTE *, _QWORD);
  void (*v13)(_BYTE *, _QWORD);
  id v14;
  uint64_t (*v15)(_BYTE *, _QWORD);
  _BYTE v17[32];

  v8 = static UIListContentConfiguration.ImageProperties.standardDimension.getter();
  v9 = static UIListContentConfiguration.ImageProperties.standardDimension.getter();
  a4[3] = type metadata accessor for UIListContentConfiguration(0);
  a4[4] = &protocol witness table for UIListContentConfiguration;
  sub_10050D1B0(a4);
  UICollectionViewListCell.defaultContentConfiguration()();
  v10 = swift_bridgeObjectRetain(a2);
  UIListContentConfiguration.text.setter(a1, a2, v10);
  v11 = a3;
  UIListContentConfiguration.image.setter(a3);
  v12 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v17);
  UIListContentConfiguration.ImageProperties.cornerRadius.setter(5.0);
  v12(v17, 0);
  v13 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.imageProperties.modify(v17);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(v8, v9);
  v13(v17, 0);
  v14 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v15 = (uint64_t (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify(v17);
  UIListContentConfiguration.TextProperties.font.setter(v14);
  return v15(v17, 0);
}

void sub_10050732C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t Strong;
  void *v32;
  int EnumCaseMultiPayload;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  void *v43;
  uint64_t v44;
  uint64_t *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  __n128 v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t inited;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  __n128 v110;
  void *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t);
  uint64_t v120;
  uint64_t v121;
  NSString v122;
  NSString v123;
  double v124;
  void *v125;
  id v126;
  Swift::String v127;
  Swift::String v128;
  Swift::String v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  char v153[24];
  char v154[24];
  char v155[24];
  char v156[16];
  char v157[8];
  _QWORD v158[5];
  Swift::String v159;

  v152 = a1;
  v138 = type metadata accessor for UICellAccessory.LabelOptions(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v136 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E1498);
  __chkstk_darwin(v7);
  v145 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E14A0);
  __chkstk_darwin(v9);
  v140 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v139 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v146 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v144 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v134 = (uint64_t)&v133 - v18;
  v19 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  v22 = __chkstk_darwin(v19);
  v135 = (uint64_t)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v133 - v24;
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v133 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v133 - v29;
  *(_QWORD *)&v149 = a4;
  a4 += 16;
  swift_beginAccess(a4, v157, 0, 0);
  v143 = a4;
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  v151 = a3;
  v148 = v17;
  v147 = v12;
  v150 = v19;
  if (Strong)
  {
    v32 = (void *)Strong;
    sub_1004B8460(a3, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v30, v19);
    if (EnumCaseMultiPayload)
    {
      v34 = v152;
      if (EnumCaseMultiPayload == 1)
      {
        v35 = (uint64_t)v30;
        v36 = v134;
        sub_1004B84E0(v35, v134, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100BCAD68();
        v38 = v37;
        v40 = v39;
        v41 = v36;
        v42 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        v45 = (uint64_t *)&v30[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
        v38 = *v45;
        v40 = v45[1];
        v42 = type metadata accessor for CRLBoardIdentifier;
        v41 = (uint64_t)v30;
      }
      sub_1004B84A4(v41, v42);
    }
    else
    {
      v34 = v152;
      v38 = sub_100BCE3AC();
      v40 = v44;
    }
    v46 = sub_100BCAA68();
    sub_1005071DC(v38, v40, v46, v158);

    v43 = v34;
    swift_bridgeObjectRelease(v40);

    a3 = v151;
  }
  else
  {
    memset(v158, 0, sizeof(v158));
    v43 = v152;
  }
  UICollectionViewCell.contentConfiguration.setter(v158);
  v47 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray4Color");
  objc_msgSend(v43, "setTintColor:", v47);

  v48 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleTitle1, -1);
  sub_1004B8460(a3, (uint64_t)v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v49 = *(unsigned __int8 *)(v20 + 80);
  v50 = (v49 + 24) & ~v49;
  v51 = v49 | 7;
  v52 = v21 + v50 + 7;
  v53 = a3;
  v54 = v52 & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_10126A2D0, (v52 & 0xFFFFFFFFFFFFFFF8) + 8, v51);
  v56 = v149;
  *(_QWORD *)(v55 + 16) = v149;
  sub_1004B84E0((uint64_t)v28, v55 + v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
  *(_QWORD *)(v55 + v54) = v48;
  v57 = v48;
  v58 = swift_retain(v56);
  UICollectionViewCell.configurationUpdateHandler.setter(sub_10050D14C, v55, v58);
  sub_1004B8460(v53, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v59 = swift_getEnumCaseMultiPayload(v25, v150);
  if (!v59)
  {
    v68 = sub_1004B804C(&qword_1013E14A8);
    v69 = *(_QWORD *)(type metadata accessor for UICellAccessory(0) - 8);
    v70 = swift_allocObject(v68, ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(_QWORD *)(v69 + 72), *(unsigned __int8 *)(v69 + 80) | 7);
    *(_OWORD *)(v70 + 16) = xmmword_100EF5E40;
    v71 = v146;
    v72 = v144;
    v73 = v147;
    (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v144, enum case for UICellAccessory.DisplayedState.always(_:), v147);
    v74 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style(0);
    v75 = v140;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v140, 1, 1, v74);
    v76 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v77 = v145;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v145, 1, 1, v76);
    v78 = v139;
    UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)(v75, 2, v77, 0);
    static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)(v72, v78, 0, 0);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v78, v142);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
    UICollectionViewListCell.accessories.setter(v70);

    return;
  }
  if (v59 != 1)
  {
    v79 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)&v25[*(int *)(v79 + 48) + 8]);
    v80 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v80, v156);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v82 = sub_100BCCD38();
    v84 = v83;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v82;
    *(_QWORD *)(inited + 40) = v84;
    sub_100757E04(&_mh_execute_header, (uint64_t)"newCollectionViewDataSource(for:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 528, "Unexpected sidebar item: %@", 27, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"newCollectionViewDataSource(for:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 528, (uint64_t)"Unexpected sidebar item: %@", 27, 2u);
    swift_setDeallocating(inited);
    v85 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v85);
    UICollectionViewListCell.accessories.setter(_swiftEmptyArrayStorage);

    v86 = type metadata accessor for CRLBoardIdentifier;
    v87 = (uint64_t)v25;
LABEL_40:
    sub_1004B84A4(v87, v86);
    return;
  }
  v60 = (uint64_t)v148;
  sub_1004B84E0((uint64_t)v25, (uint64_t)v148, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v61 = v143;
  swift_beginAccess(v143, v158, 0, 0);
  v62 = swift_unknownObjectWeakLoadStrong(v61);
  if (!v62)
    goto LABEL_20;
  v63 = (void *)v62;
  v64 = *(_QWORD *)(v62 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController);
  swift_retain(v64);

  if (!v64)
  {
    __break(1u);
    goto LABEL_42;
  }
  v65 = *(_QWORD *)(v64 + 40);
  swift_bridgeObjectRetain(v65);
  swift_release(v64);
  if (!*(_QWORD *)(v65 + 16))
  {
    swift_bridgeObjectRelease(v65);
    goto LABEL_20;
  }
  sub_1008436B8(v60);
  v67 = v66;
  swift_bridgeObjectRelease(v65);
  if ((v67 & 1) == 0)
  {
LABEL_20:
    if (qword_1013DD7A8 != -1)
      swift_once(&qword_1013DD7A8, sub_100A03518);
    swift_beginAccess(&static OS_os_log.crlSidebar, v155, 0, 0);
    v88 = (id)static OS_os_log.crlSidebar;
    v89 = static os_log_type_t.error.getter(v88);
    sub_100A06EBC((uint64_t)v88, &_mh_execute_header, v89, "self?.viewModelController.cachedFolderBoardCount[folder] nil", 60, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  swift_beginAccess(v61, v154, 0, 0);
  v90 = swift_unknownObjectWeakLoadStrong(v61);
  v133 = v57;
  if (!v90)
  {
    v96 = 0;
LABEL_31:
    v142 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v97 = swift_allocObject(v142, 72, 7);
    v149 = xmmword_100EF5E40;
    *(_OWORD *)(v97 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v97 + 56) = &type metadata for Int;
    *(_QWORD *)(v97 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v97 + 32) = v96;
    v98 = static String.localizedStringWithFormat(_:_:)(25637, 0xE200000000000000, v97);
    v100 = v99;
    swift_bridgeObjectRelease(v97);
    v101 = sub_1004B804C(&qword_1013E14A8);
    v102 = type metadata accessor for UICellAccessory(0);
    v103 = swift_allocObject(v101, ((*(unsigned __int8 *)(*(_QWORD *)(v102 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v102 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v102 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v102 - 8) + 80) | 7);
    *(_OWORD *)(v103 + 16) = v149;
    v104 = v146;
    v105 = v144;
    v106 = v147;
    (*(void (**)(char *, _QWORD, uint64_t))(v146 + 104))(v144, enum case for UICellAccessory.DisplayedState.always(_:), v147);
    v107 = type metadata accessor for UICellAccessory.LayoutDimension(0);
    v108 = v145;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v145, 1, 1, v107);
    v109 = v136;
    UICellAccessory.LabelOptions.init(isHidden:reservedLayoutWidth:tintColor:font:adjustsFontForContentSizeCategory:)(2, v108, 0, 0, 2);
    static UICellAccessory.label(text:displayed:options:)(v98, v100, v105, v109);
    v110 = swift_bridgeObjectRelease(v100);
    (*(void (**)(char *, uint64_t, __n128))(v137 + 8))(v109, v138, v110);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v106);
    v111 = v152;
    UICollectionViewListCell.accessories.setter(v103);
    v112 = v135;
    sub_1004B8460(v151, v135, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v113 = swift_getEnumCaseMultiPayload(v112, v150);
    if (v113)
    {
      if (v113 == 1)
      {
        v114 = v112;
        v115 = v134;
        sub_1004B84E0(v114, v134, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100BCAD68();
        v117 = v116;
        v118 = v115;
        v119 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        v111 = v152;
      }
      else
      {
        v117 = *(_QWORD *)(v112 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48) + 8);
        v119 = type metadata accessor for CRLBoardIdentifier;
        v118 = v112;
      }
      sub_1004B84A4(v118, v119);
    }
    else
    {
      sub_100BCE3AC();
      v117 = v120;
    }
    v121 = v143;
    v122 = String._bridgeToObjectiveC()();
    objc_msgSend(v111, "setAccessibilityLabel:", v122, swift_bridgeObjectRelease(v117).n128_f64[0]);

    swift_beginAccess(v121, v153, 0, 0);
    v123 = (NSString)swift_unknownObjectWeakLoadStrong(v121);
    if (v123)
    {
      v125 = (void *)objc_opt_self(NSBundle);
      v126 = objc_msgSend(v125, "mainBundle", v133);
      v159._object = (void *)0x8000000100FB0870;
      v127._countAndFlagsBits = 0x72616F6220756C25;
      v127._object = (void *)0xEC00000029732864;
      v128._countAndFlagsBits = 0;
      v128._object = (void *)0xE000000000000000;
      v159._countAndFlagsBits = 0xD00000000000001BLL;
      v129 = NSLocalizedString(_:tableName:bundle:value:comment:)(v127, (Swift::String_optional)0, (NSBundle)v126, v128, v159);

      v130 = swift_allocObject(v142, 72, 7);
      *(_OWORD *)(v130 + 16) = v149;
      *(_QWORD *)(v130 + 56) = &type metadata for Int;
      *(_QWORD *)(v130 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v130 + 32) = v96;
      static String.localizedStringWithFormat(_:_:)(v129._countAndFlagsBits, v129._object, v130);
      v132 = v131;

      v111 = v152;
      swift_bridgeObjectRelease(v129._object);
      swift_bridgeObjectRelease(v130);
      v123 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v124 = swift_bridgeObjectRelease(v132).n128_u64[0];
    }
    objc_msgSend(v111, "setAccessibilityValue:", v123, v124, v133);

    v86 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    v87 = (uint64_t)v148;
    goto LABEL_40;
  }
  v91 = (void *)v90;
  v92 = *(_QWORD *)(v90 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController);
  swift_retain(v92);

  if (v92)
  {
    v93 = *(_QWORD *)(v92 + 40);
    swift_bridgeObjectRetain(v93);
    swift_release(v92);
    if (*(_QWORD *)(v93 + 16) && (v94 = sub_1008436B8(v60), (v95 & 1) != 0))
      v96 = *(_QWORD *)(*(_QWORD *)(v93 + 56) + 8 * v94);
    else
      v96 = 0;
    swift_bridgeObjectRelease(v93);
    goto LABEL_31;
  }
LABEL_42:
  __break(1u);
}

char *sub_1005080E0(void *a1, void (*a2)(char *, _QWORD, uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *result;
  uint64_t Strong;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  _BOOL4 v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  id v87;
  Class isa;
  id v89;
  id v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  unsigned int (*v100)(uint64_t, uint64_t, uint64_t);
  id v101;
  void (*v102)(__int128 *, _QWORD);
  id v103;
  id v104;
  void (*v105)(__int128 *, _QWORD);
  id v106;
  id v107;
  _QWORD *v108;
  id v109;
  char *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  void *v123;
  uint64_t v124;
  uint64_t inited;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  char v138;
  uint64_t *v139;
  id v140;
  uint64_t v141;
  char *v142;
  uint64_t (**v143)();
  void (*v144)(_QWORD);
  uint64_t v145;
  id v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(_QWORD);
  uint64_t v161;
  char *v162;
  id v163;
  char *v164;
  char *v165;
  __n128 v166;
  void (*v167)(unint64_t, uint64_t);
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  id v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  id v182;
  __int128 v183;
  id v184;
  uint64_t v185;
  id v186;
  _BOOL4 v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  void (*v213)(char *, _QWORD, uint64_t);
  uint64_t v214;
  uint64_t v215;
  __int128 v216;
  uint64_t v217;
  char *v218;
  id v219;
  _QWORD v220[5];
  _QWORD v221[3];
  uint64_t v222;
  void *v223;
  uint64_t v224;
  _QWORD v225[5];
  __int128 v226;
  __int128 v227;
  void *v228;
  char v229[32];

  v208 = a5;
  v217 = a4;
  v213 = a2;
  v7 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0);
  v196 = *(_QWORD *)(v7 - 8);
  v197 = v7;
  __chkstk_darwin(v7);
  v195 = (char *)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICellAccessory(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v179 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UICellAccessory.LabelOptions(0);
  v199 = *(_QWORD *)(v13 - 8);
  v200 = v13;
  __chkstk_darwin(v13);
  v198 = (char *)&v179 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v204 = *(_QWORD *)(v15 - 8);
  v205 = v15;
  __chkstk_darwin(v15);
  v202 = (char *)&v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013E1498);
  __chkstk_darwin(v17);
  v203 = (char *)&v179 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UICellAccessory.Placement(0);
  v189 = *(_QWORD *)(v19 - 8);
  v190 = v19;
  __chkstk_darwin(v19);
  v191 = (char *)&v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for UICellAccessory.CustomViewConfiguration(0);
  v193 = *(_QWORD *)(v21 - 8);
  v194 = v21;
  __chkstk_darwin(v21);
  v192 = (char *)&v179 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004B804C(&qword_1013E14B0);
  v24 = __chkstk_darwin(v23);
  v209 = (char *)&v179 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v212 = (char *)&v179 - v26;
  v27 = sub_1004B804C(&qword_1014073C0);
  __chkstk_darwin(v27);
  v29 = (char *)&v179 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v31 = __chkstk_darwin(v30);
  v201 = (uint64_t)&v179 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v206 = (uint64_t)&v179 - v34;
  __chkstk_darwin(v33);
  v207 = (uint64_t)&v179 - v35;
  *(_QWORD *)&v216 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v36 = __chkstk_darwin(v216);
  v210 = (uint64_t)&v179 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&v179 - v39;
  __chkstk_darwin(v38);
  v42 = (char *)&v179 - v41;
  v43 = type metadata accessor for UIBackgroundConfiguration(0);
  v214 = *(_QWORD *)(v43 - 8);
  v215 = v43;
  __chkstk_darwin(v43);
  v218 = (char *)&v179 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = objc_opt_self(UICollectionViewListCell);
  result = (char *)swift_dynamicCastObjCClass(a1, v45);
  v219 = result;
  if (result)
  {
    swift_beginAccess(a3 + 16, v229, 0, 0);
    result = (char *)swift_unknownObjectWeakLoadStrong(a3 + 16);
    if (result)
    {
      v181 = v12;
      v185 = v10;
      v211 = result;
      Strong = swift_unknownObjectWeakLoadStrong(&result[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate]);
      v186 = a1;
      if (Strong)
      {
        v48 = sub_1009038CC();
        v49 = objc_msgSend(v48, "traitCollection");

        v50 = objc_msgSend(v49, "horizontalSizeClass");
        swift_unknownObjectRelease(Strong);

        v187 = v50 == (id)1;
      }
      else
      {
        v187 = 0;
      }
      v180 = v9;
      result = (char *)objc_msgSend(v211, "view");
      if (result)
      {
        v51 = result;
        v52 = objc_msgSend(result, "window");

        if (!v52)
          goto LABEL_12;
        v53 = objc_msgSend(v52, "traitCollection");

        v54 = objc_msgSend(v53, "horizontalSizeClass");
        if (v54 != (id)2)
          goto LABEL_12;
        result = (char *)objc_msgSend(v211, "view");
        if (!result)
        {
LABEL_70:
          __break(1u);
          goto LABEL_71;
        }
        v55 = result;
        v56 = objc_msgSend(result, "window");

        if (v56)
        {
          v57 = objc_msgSend(v56, "traitCollection");

          v58 = objc_msgSend(v57, "verticalSizeClass");
          v59 = v58 == (id)1;
        }
        else
        {
LABEL_12:
          v59 = 0;
        }
        v60 = (uint64_t)v212;
        v61 = v219;
        v62 = objc_msgSend(v219, "traitCollection");
        v63 = objc_msgSend(v61, "traitCollection");
        v64 = objc_msgSend(v63, "accessibilityContrast");

        v65 = (uint64_t)v62;
        if (v64 == (id)1)
        {
          v65 = UITraitCollection.modifyingTraits(_:)(sub_1004C70CC, 0);

        }
        sub_1004B8460(v217, (uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload(v42, v216) == 1)
        {
          v66 = (uint64_t)v42;
          v67 = v207;
          sub_1004B84E0(v66, v207, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100BCE1AC();
          v69 = v68;
          sub_1004B84A4(v67, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          goto LABEL_18;
        }
        sub_1004B84A4((uint64_t)v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
        result = (char *)objc_msgSend(v219, "tintColor");
        v69 = result;
        if (result)
        {
LABEL_18:
          v188 = (void *)v65;
          v70 = objc_msgSend(v69, "resolvedColorWithTraitCollection:", v65);

          v71 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v72 = swift_allocObject(v71, 48, 7);
          v183 = xmmword_100EF5560;
          *(_OWORD *)(v72 + 16) = xmmword_100EF5560;
          v182 = (id)objc_opt_self(UIColor);
          v73 = objc_msgSend(v182, "whiteColor");
          *(_QWORD *)(v72 + 32) = v73;
          *(_QWORD *)(v72 + 40) = v70;
          *(_QWORD *)&v226 = v72;
          specialized Array._endMutation()(v73);
          v74 = v226;
          LODWORD(v72) = v187 || v59;
          v184 = v70;
          if ((_DWORD)v72 == 1)
          {
            v75 = v218;
            static UIBackgroundConfiguration.listGroupedCell()();
            v76 = v185;
          }
          else
          {
            v77 = static UIBackgroundConfiguration.listSidebarCell()();
            v78 = UICellConfigurationState.isHighlighted.getter(v77);
            v76 = v185;
            if ((v78 & 1) != 0)
            {
              swift_bridgeObjectRelease(v74);
              sub_1004B8460(v217, (uint64_t)v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
              if (swift_getEnumCaseMultiPayload(v40, v216) == 1)
              {
                v79 = v207;
                sub_1004B84E0((uint64_t)v40, v207, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                sub_100BCE1AC();
                v81 = v80;
                sub_1004B84A4(v79, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              }
              else
              {
                sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
                result = (char *)objc_msgSend(v219, "tintColor");
                v81 = result;
                if (!result)
                {
LABEL_71:
                  __break(1u);
                  return result;
                }
              }
              v82 = swift_allocObject(v71, 48, 7);
              *(_OWORD *)(v82 + 16) = v183;
              *(_QWORD *)(v82 + 32) = objc_msgSend(v182, "whiteColor");
              v83 = objc_msgSend(v81, "crl_withReducedAlpha:", 0.3);
              *(_QWORD *)(v82 + 40) = v83;
              *(_QWORD *)&v226 = v82;
              specialized Array._endMutation()(v83);
              v74 = v226;

            }
            v75 = v218;
          }
          v84 = v214;
          v85 = v75;
          v86 = v215;
          (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v29, v85, v215);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v29, 0, 1, v86);
          v87 = v186;
          UICollectionViewCell.backgroundConfiguration.setter(v29);

          sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v74);
          v89 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPaletteColors:", isa);

          *(_QWORD *)&v183 = v89;
          v186 = objc_msgSend(v208, "configurationByApplyingConfiguration:", v89);
          v90 = v87;
          UICollectionViewCell.contentConfiguration.getter(v225);
          v208 = v90;

          if (v225[3])
          {
            sub_1004E90B0((uint64_t)v225, (uint64_t)v221);
            sub_1004CB800((uint64_t)v225, &qword_1013E14B8);
            v91 = v222;
            v92 = v223;
            sub_1004BB5A4(v221, v222);
            v93 = type metadata accessor for UICellConfigurationState(0);
            v220[3] = v93;
            v220[4] = &protocol witness table for UICellConfigurationState;
            v94 = sub_10050D1B0(v220);
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v94, v213, v93);
            *((_QWORD *)&v227 + 1) = v91;
            v228 = v92;
            sub_10050D1B0(&v226);
            dispatch thunk of UIContentConfiguration.updated(for:)(v220, v91, v92);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v220);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v221);
            v95 = (uint64_t)v209;
            if (*((_QWORD *)&v227 + 1))
            {
              v96 = sub_1004B804C(&qword_1013E14C8);
              v97 = type metadata accessor for UIListContentConfiguration(0);
              v98 = swift_dynamicCast(v60, &v226, v96, v97, 6);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v60, v98 ^ 1u, 1, v97);
              goto LABEL_31;
            }
          }
          else
          {
            sub_1004CB800((uint64_t)v225, &qword_1013E14B8);
            v226 = 0u;
            v227 = 0u;
            v228 = 0;
            v95 = (uint64_t)v209;
          }
          sub_1004CB800((uint64_t)&v226, &qword_1013E14B8);
          v97 = type metadata accessor for UIListContentConfiguration(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v60, 1, 1, v97);
LABEL_31:
          type metadata accessor for UIListContentConfiguration(0);
          v99 = *(_QWORD *)(v97 - 8);
          v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
          if (!v100(v60, 1, v97))
          {
            v101 = objc_msgSend(v182, "labelColor");
            v102 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.textProperties.modify(&v226);
            UIListContentConfiguration.TextProperties.color.setter(v101);
            v102(&v226, 0);
          }
          if (!v100(v60, 1, v97))
          {
            v103 = v186;
            v104 = v186;
            v105 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.imageProperties.modify(&v226);
            UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter(v103);
            v105(&v226, 0);
          }
          sub_1004CB7BC(v60, v95, &qword_1013E14B0);
          if (v100(v95, 1, v97) == 1)
          {
            v106 = v208;
            v107 = v208;
            sub_1004CB800(v95, &qword_1013E14B0);
            v226 = 0u;
            v227 = 0u;
            v228 = 0;
          }
          else
          {
            *((_QWORD *)&v227 + 1) = v97;
            v228 = &protocol witness table for UIListContentConfiguration;
            v108 = sub_10050D1B0(&v226);
            (*(void (**)(_QWORD *, uint64_t, uint64_t))(v99 + 32))(v108, v95, v97);
            v106 = v208;
            v109 = v208;
          }
          v110 = v211;
          v111 = v188;
          UICollectionViewCell.contentConfiguration.setter(&v226);

          v112 = v210;
          sub_1004B8460(v217, v210, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload(v112, v216) != 1)
          {

            (*(void (**)(char *, uint64_t))(v214 + 8))(v218, v215);
            sub_1004B84A4(v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
            return (char *)sub_1004CB800(v60, &qword_1013E14B0);
          }
          v113 = v206;
          result = (char *)sub_1004B84E0(v112, v206, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          v114 = *(_QWORD *)&v110[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController];
          if (v114)
          {
            v115 = *(_QWORD *)(v114 + 40);
            if (*(_QWORD *)(v115 + 16))
            {
              swift_bridgeObjectRetain(v115);
              v116 = sub_1008436B8(v113);
              if ((v117 & 1) != 0)
              {
                v118 = *(_QWORD *)(*(_QWORD *)(v115 + 56) + 8 * v116);
                swift_bridgeObjectRelease(v115);
                goto LABEL_50;
              }
              swift_bridgeObjectRelease(v115);
            }
            v119 = sub_1004B804C(&qword_1013E1790);
            v120 = v207;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v207, 5, 5, v119);
            sub_100BD0ED4(v113, v120);
            v122 = v121;
            sub_1004B84A4(v120, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            if ((v122 & 1) != 0)
            {
              v118 = 0;
            }
            else
            {
              if (qword_1013DD7A8 != -1)
                swift_once(&qword_1013DD7A8, sub_100A03518);
              swift_beginAccess(&static OS_os_log.crlSidebar, &v226, 0, 0);
              v123 = (void *)static OS_os_log.crlSidebar;
              v124 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              inited = swift_initStackObject(v124, &v224);
              *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
              v126 = v123;
              sub_100BCAD68();
              v128 = v127;
              v130 = v129;
              *(_QWORD *)(inited + 56) = &type metadata for String;
              v131 = sub_1004CFC2C();
              *(_QWORD *)(inited + 64) = v131;
              *(_QWORD *)(inited + 32) = v128;
              *(_QWORD *)(inited + 40) = v130;
              v132 = static os_log_type_t.error.getter(v131);
              sub_100A06EBC((uint64_t)v126, &_mh_execute_header, v132, "Cached board count not found for %@", 35, 2, inited);
              swift_setDeallocating(inited);
              v133 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(inited + 32, 1, v133);

              v118 = 0;
              v110 = v211;
            }
LABEL_50:
            v134 = v201;
            sub_1004B8460(v113, v201, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            v135 = sub_1004B804C(&qword_1013E1790);
            v136 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 48))(v134, 5, v135);
            v137 = sub_1004B84A4(v134, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            v138 = UICellConfigurationState.isSelected.getter(v137);
            if (v136 == 4)
            {
              if ((v138 & 1) != 0
                && (v110[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] & 1) != 0)
              {
                goto LABEL_57;
              }
              v139 = &OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights;
            }
            else
            {
              if ((v138 & 1) == 0)
                goto LABEL_58;
              v139 = &OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges;
            }
            if (v110[*v139] == 1)
            {
LABEL_57:
              v140 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
              objc_msgSend(v140, "startAnimating");
              v141 = sub_1004B804C(&qword_1013E14C0);
              v142 = v191;
              v143 = (uint64_t (**)())&v191[*(int *)(v141 + 48)];
              v144 = *(void (**)(_QWORD))(v204 + 104);
              LODWORD(v216) = enum case for UICellAccessory.DisplayedState.always(_:);
              v213 = (void (*)(char *, _QWORD, uint64_t))v144;
              v144(v191);
              *v143 = CRLWPShapeLayout.instructionalTextCharacterFill.getter;
              v143[1] = 0;
              (*(void (**)(char *, _QWORD, uint64_t))(v189 + 104))(v142, enum case for UICellAccessory.Placement.trailing(_:), v190);
              v145 = type metadata accessor for UICellAccessory.LayoutDimension(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v203, 1, 1, v145);
              v146 = v140;
              v147 = v192;
              UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
              v148 = sub_1004B804C(&qword_1013E14A8);
              v149 = *(unsigned __int8 *)(v76 + 80);
              v217 = *(_QWORD *)(v76 + 72);
              v150 = swift_allocObject(v148, ((v149 + 32) & ~v149) + v217, v149 | 7);
              *(_OWORD *)(v150 + 16) = xmmword_100EF5E40;
              static UICellAccessory.customView(configuration:)(v147);

              (*(void (**)(char *, uint64_t))(v193 + 8))(v147, v194);
LABEL_59:
              v168 = v181;
              if (v187)
              {
                v169 = v202;
                v170 = v205;
                v213(v202, v216, v205);
                v171 = type metadata accessor for UICellAccessory.LayoutDimension(0);
                v172 = v203;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v203, 1, 1, v171);
                v173 = v195;
                UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v172, 0);
                static UICellAccessory.disclosureIndicator(displayed:options:)(v169, v173);
                (*(void (**)(char *, uint64_t))(v196 + 8))(v173, v197);
                (*(void (**)(char *, uint64_t))(v204 + 8))(v169, v170);
                v175 = *(_QWORD *)(v150 + 16);
                v174 = *(_QWORD *)(v150 + 24);
                if (v175 >= v174 >> 1)
                  v150 = sub_100D1045C(v174 > 1, v175 + 1, 1, v150);
                v177 = v184;
                v176 = v185;
                v111 = v188;
                *(_QWORD *)(v150 + 16) = v175 + 1;
                (*(void (**)(unint64_t, char *, uint64_t))(v176 + 32))(v150 + ((v149 + 32) & ~(unint64_t)v149) + v217 * v175, v168, v180);
              }
              else
              {
                v177 = v184;
              }
              v178 = v208;
              UICollectionViewListCell.accessories.setter(v150);

              sub_1004B84A4(v113, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              (*(void (**)(char *, uint64_t))(v214 + 8))(v218, v215);
              v60 = (uint64_t)v212;
              return (char *)sub_1004CB800(v60, &qword_1013E14B0);
            }
LABEL_58:
            v151 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v152 = swift_allocObject(v151, 72, 7);
            v216 = xmmword_100EF5E40;
            *(_OWORD *)(v152 + 16) = xmmword_100EF5E40;
            *(_QWORD *)(v152 + 56) = &type metadata for Int;
            *(_QWORD *)(v152 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v152 + 32) = v118;
            v210 = static String.localizedStringWithFormat(_:_:)(25637, 0xE200000000000000, v152);
            v154 = v153;
            swift_bridgeObjectRelease(v152);
            v155 = sub_1004B804C(&qword_1013E14A8);
            v156 = *(_QWORD *)(v76 + 72);
            v157 = *(unsigned __int8 *)(v76 + 80);
            v217 = v156;
            v150 = swift_allocObject(v155, ((v157 + 32) & ~v157) + v156, v157 | 7);
            *(_OWORD *)(v150 + 16) = v216;
            v159 = v204;
            v158 = v205;
            v160 = *(void (**)(_QWORD))(v204 + 104);
            v149 = (unint64_t)v202;
            LODWORD(v216) = enum case for UICellAccessory.DisplayedState.always(_:);
            v213 = (void (*)(char *, _QWORD, uint64_t))v160;
            v160(v202);
            v161 = type metadata accessor for UICellAccessory.LayoutDimension(0);
            v162 = v203;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v203, 1, 1, v161);
            v163 = objc_msgSend(v182, "secondaryLabelColor");
            v164 = v198;
            v165 = v162;
            v111 = v188;
            UICellAccessory.LabelOptions.init(isHidden:reservedLayoutWidth:tintColor:font:adjustsFontForContentSizeCategory:)(2, v165, v163, 0, 2);
            static UICellAccessory.label(text:displayed:options:)(v210, v154, v149, v164);
            v166 = swift_bridgeObjectRelease(v154);
            (*(void (**)(char *, uint64_t, __n128))(v199 + 8))(v164, v200, v166);
            v167 = *(void (**)(unint64_t, uint64_t))(v159 + 8);
            v113 = v206;
            v167(v149, v158);
            LODWORD(v149) = v157;
            goto LABEL_59;
          }
          goto LABEL_69;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
  }
  return result;
}

uint64_t sub_1005093B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a3, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = sub_1004B8930(0, &qword_1013E1448, UICollectionViewListCell_ptr);
  v12 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a4, a2, v9, v11, v10);
  sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E3830);
  return v12;
}

id sub_1005094B0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  NSString v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v33;

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v33 - v11;
  static UIButton.Configuration.plain()(v10);
  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  UIButton.Configuration.title.setter(v17, v19, v20);
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v21);

  UIButton.Configuration.image.setter(v22);
  UIButton.Configuration.imagePlacement.setter(2);
  v23 = sub_10050984C(v1);
  v24 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v23, -1);
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v24);
  v25 = swift_allocObject(&unk_10126A080, 24, 7);
  *(_QWORD *)(v25 + 16) = v23;
  v26 = v23;
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10050CB48, v25);
  v27 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v4, 0, 1, v27);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v4);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v28 = swift_allocObject(&unk_10126A0A8, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16, v1);
  v29 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10050CB50, v28);
  v30 = (void *)UIButton.init(configuration:primaryAction:)(v9, v29);
  objc_msgSend(v30, "setShowsLargeContentViewer:", 1);
  v31 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v30);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return v31;
}

id sub_10050984C(void *a1)
{
  unsigned int v2;
  id v3;
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  Class isa;
  id v15;
  id v16;
  void *v17;
  id v18;

  if (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI"))
    v2 = objc_msgSend((id)objc_opt_self(UIScreen), "crl_deviceIsLandscape");
  else
    v2 = 0;
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = objc_msgSend(a1, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  if (v2)
  {
    v6 = static UIContentSizeCategory.> infix(_:_:)(v5, UIContentSizeCategoryAccessibilityMedium);

    if ((v6 & 1) != 0)
    {
      v7 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v8 = swift_allocObject(v7, 48, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100EF5560;
      *(_QWORD *)(v8 + 32) = objc_msgSend(a1, "traitCollection");
      v9 = (void *)objc_opt_self(UITraitCollection);
      v10 = objc_msgSend(v9, "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
LABEL_9:
      v13 = v10;
      *(_QWORD *)(v8 + 40) = v13;
      specialized Array._endMutation()(v13);
      sub_1004B8930(0, &qword_1013E1430, UITraitCollection_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      v15 = objc_msgSend(v9, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

      v3 = v15;
    }
  }
  else
  {
    v11 = static UIContentSizeCategory.> infix(_:_:)(v5, UIContentSizeCategoryAccessibilityExtraLarge);

    if ((v11 & 1) != 0)
    {
      v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v8 = swift_allocObject(v12, 48, 7);
      *(_OWORD *)(v8 + 16) = xmmword_100EF5560;
      *(_QWORD *)(v8 + 32) = objc_msgSend(a1, "traitCollection");
      v9 = (void *)objc_opt_self(UITraitCollection);
      v10 = objc_msgSend(v9, "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraLarge);
      goto LABEL_9;
    }
  }
  v16 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", UIFontTextStyleBody, v3);
  v17 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v16, "pointSize");
  v18 = objc_msgSend(v17, "systemFontOfSize:weight:");

  return v18;
}

uint64_t sub_100509B24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  id v9;
  void *v11;

  v6 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath(&unk_100EF7848);
  KeyPath = swift_getKeyPath(&unk_100EF7878);
  v11 = a2;
  v8 = sub_1004CB548();
  v9 = a2;
  return AttributeContainer.subscript.setter(&v11, KeyPath, v8);
}

void sub_100509BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSString v13;
  unint64_t v14;
  Class isa;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate);
    if (v8)
    {
      v9 = v8;
      v10 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      v11 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v11 && (objc_msgSend(v11, "isUserInteractionEnabled") & 1) != 0)
      {
        v12 = (void *)objc_opt_self(CRLAnalyticsLogger);
        v13 = String._bridgeToObjectiveC()();
        v14 = _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(4);
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v12, "sendEventInDomain:lazily:eventPayload:", v13, 1, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

        v16 = *(void **)(v9 + v10);
        if (!v16
          || (v17 = objc_msgSend(v16, "rootViewController")) == 0
          || (v18 = v17,
              v19 = objc_msgSend(v17, "crl_windowWrapper"),
              v18,
              !v19)
          || (v20 = objc_msgSend(v19, "newWrapperBeginningIgnoringUserInteractionSafely"), v19, !v20))
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v29, 0, 0);
          v21 = (id)static OS_os_log.crlError;
          v22 = static os_log_type_t.error.getter(v21);
          sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v22, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          v20 = 0;
        }
        v23 = type metadata accessor for TaskPriority(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
        type metadata accessor for MainActor(0);
        v24 = v20;
        v25 = swift_unknownObjectRetain(v9);
        v26 = static MainActor.shared.getter(v25);
        v27 = (_QWORD *)swift_allocObject(&unk_10126A0D0, 48, 7);
        v27[2] = v26;
        v27[3] = &protocol witness table for MainActor;
        v27[4] = v9;
        v27[5] = v20;
        v28 = sub_100521B98((uint64_t)v5, (uint64_t)&unk_1013E1428, (uint64_t)v27);

        swift_unknownObjectRelease(v9);
        swift_release(v28);

      }
      else
      {

        swift_unknownObjectRelease(v9);
      }
    }
    else
    {

    }
  }
}

void sub_100509ED8()
{
  qword_1013E1328 = 0;
}

void sub_100509EE4(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  Class isa;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  void **aBlock;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  void *v66;
  double (*v67)(uint64_t);
  uint64_t v68;
  objc_super v69;

  v9 = OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidEndObserver] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidBeginObserver] = 0;

  v69.receiver = v11;
  v69.super_class = (Class)type metadata accessor for iCloudStatusFooter();
  v12 = (char *)objc_msgSendSuper2(&v69, "initWithFrame:", a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel;
  v14 = *(void **)&v12[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel];
  v15 = v12;
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setNumberOfLines:", 1);
  objc_msgSend(v14, "setTextAlignment:", 1);
  v16 = (void *)objc_opt_self(NSBundle);
  v17 = v14;
  v18 = objc_msgSend(v16, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v23 = v22;

  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v25 = *(void **)&v12[v13];
  v26 = (void *)objc_opt_self(UIFont);
  v27 = v25;
  v28 = objc_msgSend(v26, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleFootnote, 0);
  objc_msgSend(v27, "setFont:", v28);

  v29 = *(void **)&v12[v13];
  objc_msgSend(v29, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v29, "setAdjustsFontSizeToFitWidth:", 1);
  objc_msgSend(v15, "addSubview:", v29);
  v30 = (void *)objc_opt_self(NSLayoutConstraint);
  v31 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v32 = swift_allocObject(v31, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100EF7300;
  v33 = objc_msgSend(v15, "centerXAnchor");
  v34 = objc_msgSend(v29, "centerXAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v32 + 32) = v35;
  v36 = objc_msgSend(v15, "leadingAnchor");
  v37 = objc_msgSend(*(id *)&v12[v13], "leadingAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v32 + 40) = v38;
  v39 = objc_msgSend(*(id *)&v12[v13], "topAnchor");
  v40 = objc_msgSend(v15, "topAnchor");
  if (qword_1013DC920 != -1)
    swift_once(&qword_1013DC920, sub_100509ED8);
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, *(double *)&qword_1013E1328);

  *(_QWORD *)(v32 + 48) = v41;
  aBlock = (void **)v32;
  specialized Array._endMutation()(v42);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "activateConstraints:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

  v44 = (void *)objc_opt_self(NSNotificationCenter);
  v45 = objc_msgSend(v44, "defaultCenter");
  if (qword_1013DDAE8 != -1)
    swift_once(&qword_1013DDAE8, sub_100B031E8);
  v46 = qword_101480AF8;
  v47 = swift_allocObject(&unk_101269F40, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16, v15);
  v67 = sub_10050AC58;
  v68 = v47;
  aBlock = _NSConcreteStackBlock;
  v64 = *(_QWORD *)"";
  v65 = sub_100568280;
  v66 = &unk_101269F58;
  v48 = _Block_copy(&aBlock);
  v49 = objc_msgSend(v45, "addObserverForName:object:queue:usingBlock:", v46, 0, 0, v48, swift_release(v68).n128_f64[0]);
  _Block_release(v48);

  v50 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidBeginObserver];
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidBeginObserver] = v49;
  swift_unknownObjectRelease(v50);
  v51 = objc_msgSend(v44, "defaultCenter");
  if (qword_1013DDAE0 != -1)
    swift_once(&qword_1013DDAE0, sub_100B031B4);
  v52 = qword_101480AF0;
  v53 = swift_allocObject(&unk_101269F40, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16, v15);
  v67 = sub_10050AC98;
  v68 = v53;
  aBlock = _NSConcreteStackBlock;
  v64 = *(_QWORD *)"";
  v65 = sub_100568280;
  v66 = &unk_101269F80;
  v54 = _Block_copy(&aBlock);
  v55 = objc_msgSend(v51, "addObserverForName:object:queue:usingBlock:", v52, 0, 0, v54, swift_release(v68).n128_f64[0]);
  _Block_release(v54);

  v56 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidEndObserver];
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidEndObserver] = v55;
  swift_unknownObjectRelease(v56);
  v57 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v58 = objc_msgSend(v57, "delegate");

  if (v58)
  {
    v59 = type metadata accessor for CRLiOSAppDelegate();
    v60 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v58, v59, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
    if (v60)
    {
      if ((*(_BYTE *)(v60 + 136) & 1) != 0)
      {
        swift_unknownObjectRelease(v58);
        v61 = 0;
      }
      else
      {
        v62 = *(_BYTE *)(v60 + 137);
        swift_unknownObjectRelease(v58);
        v61 = v62 ^ 1;
      }
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 203, "Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2u, 203, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u);
      swift_unknownObjectRelease(v58);
      v61 = 1;
    }
    objc_msgSend(*(id *)&v12[v13], "setHidden:", v61 & 1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10050A6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10050A73C, v6, v7);
}

uint64_t sub_10050A73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel), "setHidden:", 0);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10050A7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10050A824, v6, v7);
}

uint64_t sub_10050A824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_iCloudStatusLabel), "setHidden:", 1);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id iCloudStatusFooter.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  objc_super v8;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidEndObserver];
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

  }
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform18iCloudStatusFooter_syncDidBeginObserver];
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v4);
    v6 = objc_msgSend(v5, "defaultCenter");
    objc_msgSend(v6, "removeObserver:", v4);
    swift_unknownObjectRelease(v4);

  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for iCloudStatusFooter();
  return objc_msgSendSuper2(&v8, "dealloc");
}

uint64_t type metadata accessor for iCloudStatusFooter()
{
  return objc_opt_self(_TtC8Freeform18iCloudStatusFooter);
}

uint64_t sub_10050AA90()
{
  return type metadata accessor for CRLiOSSidebarViewController(0);
}

uint64_t type metadata accessor for CRLiOSSidebarViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E13A8;
  if (!qword_1013E13A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSSidebarViewController);
  return result;
}

void sub_10050AAD4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_100EF77B0;
  v4[1] = &unk_100EF77C8;
  v4[2] = &unk_100EF77E0;
  sub_10050AB74(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100EF77C8;
    v4[5] = &unk_100EF77C8;
    v4[6] = &unk_100EF77C8;
    v4[7] = &unk_100EF77C8;
    v4[8] = &unk_100EF77F8;
    v4[9] = &unk_100EF77F8;
    swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
  }
}

void sub_10050AB74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E13B8)
  {
    v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E13B8);
  }
}

uint64_t sub_10050AC34()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10050AC58(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_101269FE0, (uint64_t)&unk_1013E1408);
}

uint64_t sub_10050AC80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10050AC90(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_10050AC98(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_101269FB8, (uint64_t)&unk_1013E13F8);
}

uint64_t sub_10050ACC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E13F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_10050A7B8(a1, v4, v5, v6);
}

uint64_t sub_10050AD34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1404);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10050A6D0(a1, v4, v5, v6);
}

void sub_10050ADA0()
{
  sub_100505690();
  sub_100504EE8();
}

void sub_10050ADC4()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController] = 0;
  v2 = &v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem];
  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidEndObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidBeginObserver] = 0;
  v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 0;
  v0[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSSidebarViewController.swift", 42, 2, 78, 0);
  __break(1u);
}

void sub_10050AEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  unint64_t v27;
  uint64_t *v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37[24];
  char v38[72];
  char v39[24];

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = &v37[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v37[-v9 - 8];
  v11 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v11);
  v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1013DD7A8 != -1)
    swift_once(&qword_1013DD7A8, sub_100A03518);
  swift_beginAccess(&static OS_os_log.crlSidebar, v39, 0, 0);
  v14 = (void *)static OS_os_log.crlSidebar;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v15, v38);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v17 = v0 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem;
  swift_beginAccess(v17, v37, 0, 0);
  sub_1004CB7BC(v17, (uint64_t)v13, (uint64_t *)&unk_1013E3830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
  {
    v18 = v14;
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E3830);
    v19 = 0;
    v20 = 0;
  }
  else
  {
    sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v21 = v14;
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E3830);
    sub_1004B8460((uint64_t)v10, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v4);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_1004B84E0((uint64_t)v8, (uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100BCAD68();
        v19 = v23;
        v20 = v24;
        v25 = (uint64_t)v3;
        v26 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        v28 = (uint64_t *)&v8[*(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48)];
        v19 = *v28;
        v20 = v28[1];
        v26 = type metadata accessor for CRLBoardIdentifier;
        v25 = (uint64_t)v8;
      }
      sub_1004B84A4(v25, v26);
    }
    else
    {
      v19 = sub_100BCE3AC();
      v20 = v27;
    }
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  v30 = 1162760014;
  if (v20)
    v30 = v19;
  v31 = 0xE400000000000000;
  if (v20)
    v31 = v20;
  *(_QWORD *)(inited + 32) = v30;
  v32 = inited + 32;
  *(_QWORD *)(inited + 40) = v31;
  v33 = static os_log_type_t.default.getter(v29);
  sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v33, "selectedItem before view model update: %@", 41, 2, inited);
  swift_setDeallocating(inited);
  v34 = *(_QWORD *)(inited + 16);
  v35 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v32, v34, v35);

}

uint64_t sub_10050B1FC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t inited;
  NSString *v14;
  id v15;
  unint64_t v16;
  Class isa;
  uint64_t Strong;
  uint64_t v19;
  id v20;
  unsigned int v21;
  char v24[72];

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = objc_msgSend(v0, "navigationController");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "navigationBar");

    if (v11)
    {
      objc_msgSend(v11, "setPrefersLargeTitles:", 1);
      v12 = sub_1004B804C((uint64_t *)&unk_1013F4250);
      inited = swift_initStackObject(v12, v24);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
      v14 = NSForegroundColorAttributeName;
      v15 = objc_msgSend(v11, "tintColor");
      *(_QWORD *)(inited + 64) = sub_1004B804C(&qword_1013E1420);
      *(_QWORD *)(inited + 40) = v15;
      v16 = sub_1008D4FE0(inited);
      type metadata accessor for Key(0);
      sub_1004B7878((unint64_t *)&qword_1013DE6D0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100EF1874);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v11, "setLargeTitleTextAttributes:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    }
  }
  sub_100505690();
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate]);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E3830);
  }
  v19 = Strong;
  v20 = sub_1009038CC();
  v21 = objc_msgSend(v20, "isCollapsed");

  if (v21)
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  else
    sub_100903288((uint64_t)v4);
  swift_unknownObjectRelease(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E3830);
  sub_1004B84E0((uint64_t)v4, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100505AEC((uint64_t)v8, 0);
  return sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_10050B4C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  int EnumCaseMultiPayload;
  _BYTE v28[72];

  v3 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  result = __chkstk_darwin(v8);
  v13 = &v28[-v12 - 8];
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController);
  if (v14)
  {
    v15 = swift_retain(v14);
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1, v15);
    v16 = swift_release(v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v16) == 1)
    {
      sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_1013E3830);
      v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v17, v28);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v19 = type metadata accessor for IndexPath(0);
      v20 = sub_1004B7878(&qword_101407410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v21 = dispatch thunk of CustomStringConvertible.description.getter(v19, v20);
      v23 = v22;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v21;
      *(_QWORD *)(inited + 40) = v23;
      sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 242, "Bad index path: %@", 18, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 242, (uint64_t)"Bad index path: %@", 18, 2u);
      swift_setDeallocating(inited);
      v24 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v24);
      return 0;
    }
    else
    {
      sub_1004B84E0((uint64_t)v5, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B8460((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v6);
      v25 = EnumCaseMultiPayload != 0;
      if (EnumCaseMultiPayload)
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10050B794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t Strong;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _BYTE v61[72];
  _BYTE v62[24];
  _BYTE v63[80];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v57 - v9;
  v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v58 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v57 - v16;
  result = __chkstk_darwin(v15);
  v20 = (char *)&v57 - v19;
  v60 = v1;
  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController);
  if (!v21)
  {
    __break(1u);
    return result;
  }
  v22 = swift_retain(v21);
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(a1, v22);
  v23 = swift_release(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48))(v10, 1, v11, v23) == 1)
  {
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E3830);
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v24, v63);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v26 = type metadata accessor for IndexPath(0);
    v27 = sub_1004B7878(&qword_101407410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v28 = dispatch thunk of CustomStringConvertible.description.getter(v26, v27);
    v30 = v29;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v28;
    *(_QWORD *)(inited + 40) = v30;
    sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 251, "Bad index path: %@", 18, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 251, (uint64_t)"Bad index path: %@", 18, 2u);
    swift_setDeallocating(inited);
    v31 = sub_1004B804C(&qword_1013E0190);
    return swift_arrayDestroy(inited + 32, 1, v31);
  }
  v57 = a1;
  v32 = (uint64_t)v10;
  v33 = (uint64_t)v20;
  sub_1004B84E0(v32, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1004B8460((uint64_t)v20, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (!swift_getEnumCaseMultiPayload(v17, v11))
    goto LABEL_8;
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_1004B8460((uint64_t)v20, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  v34 = v60;
  v35 = v60 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem;
  swift_beginAccess(v60 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem, v62, 33, 0);
  sub_10050BDB0((uint64_t)v8, v35);
  swift_endAccess(v62);
  Strong = swift_unknownObjectWeakLoadStrong(v34 + OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate);
  if (!Strong)
  {
    v49 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v50 = swift_initStackObject(v49, v61);
    *(_OWORD *)(v50 + 16) = xmmword_100EF5E40;
    v51 = type metadata accessor for IndexPath(0);
    v52 = sub_1004B7878(&qword_101407410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v53 = dispatch thunk of CustomStringConvertible.description.getter(v51, v52);
    v55 = v54;
    *(_QWORD *)(v50 + 56) = &type metadata for String;
    *(_QWORD *)(v50 + 64) = sub_1004CFC2C();
    *(_QWORD *)(v50 + 32) = v53;
    *(_QWORD *)(v50 + 40) = v55;
    sub_100757E04(&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 263, "No delegate. Ignoring selection of index path: %@", 49, 2u, v50);
    sub_1004F5394(v50, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 263, (uint64_t)"No delegate. Ignoring selection of index path: %@", 49, 2u);
    swift_setDeallocating(v50);
    v56 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v50 + 32, 1, v56);
LABEL_8:
    v48 = v33;
    return sub_1004B84A4(v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  v37 = Strong;
  v38 = type metadata accessor for TaskPriority(0);
  v39 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v59, 1, 1, v38);
  v40 = swift_allocObject(&unk_10126A008, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16, v37);
  v41 = v58;
  sub_1004B8460(v33, v58, type metadata accessor for CRLBoardLibraryViewModel.Item);
  type metadata accessor for MainActor(0);
  swift_retain(v40);
  v43 = static MainActor.shared.getter(v42);
  v44 = *(unsigned __int8 *)(v12 + 80);
  v45 = (v44 + 40) & ~v44;
  v46 = (_QWORD *)swift_allocObject(&unk_10126A030, v45 + v13, v44 | 7);
  v46[2] = v43;
  v46[3] = &protocol witness table for MainActor;
  v46[4] = v40;
  sub_1004B84E0(v41, (uint64_t)v46 + v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_release(v40);
  v47 = sub_100521B98(v39, (uint64_t)&unk_1013E1410, (uint64_t)v46);
  swift_unknownObjectRelease(v37);
  swift_release(v47);
  v48 = v33;
  return sub_1004B84A4(v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_10050BDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050BDFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA62C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100910CA4(a1, v5, v6, v7, v8);
}

void sub_10050BE90()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  id v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t inited;
  int EnumCaseMultiPayload;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t);
  id v79;
  uint64_t v80;
  uint64_t *v81;
  id v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  double v96;
  id v97;
  void *v98;
  Class isa;
  __n128 v100;
  uint64_t Strong;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[3];
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE v131[24];
  char v132[72];
  _BYTE v133[24];
  char v134[8];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v118 = (char *)&v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4);
  v120 = (uint64_t)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_101407260);
  v7 = __chkstk_darwin(v6);
  v127 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v121 = (char *)&v115 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v115 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v115 - v14;
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  v129 = v16;
  v130 = v17;
  __chkstk_darwin(v16);
  v128 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  v20 = __chkstk_darwin(v19);
  v125 = (uint64_t)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v115 - v22;
  v24 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v117 = (uint64_t)&v115 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v123 = (char *)&v115 - v29;
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v115 - v31;
  v116 = v33;
  __chkstk_darwin(v30);
  v35 = (char *)&v115 - v34;
  v36 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem], v134, 0, 0);
  v124 = v36;
  sub_1004CB7BC(v36, (uint64_t)v23, (uint64_t *)&unk_1013E3830);
  v126 = v25;
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v38 = v24;
  if (v37(v23, 1, v24) != 1)
  {
    v122 = v32;
    sub_1004B84E0((uint64_t)v23, (uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v42 = OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController;
    v119 = v1;
    v43 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController];
    if (v43)
    {
      v44 = swift_retain(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController]);
      v115 = v35;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v35, v44);
      v45 = v129;
      v46 = v130;
      v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 48);
      v48 = v47(v13, 1, v129);
      v49 = (uint64_t)v127;
      if (v48 == 1)
      {
        sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_101407260);
        v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
        v50(v15, 1, 1, v45);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v15, v13, v45);
        v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
        v50(v15, 0, 1, v45);
      }
      v51 = swift_release(v43);
      v52 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v47)(v15, 1, v45, v51);
      v53 = (uint64_t)v122;
      if (v52 == 1)
      {
        sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_101407260);
        v54 = sub_1004B804C(&qword_1013E1790);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 1, 5, v54);
        swift_storeEnumTagMultiPayload(v53, v38, 1);
        v55 = *(_QWORD *)&v119[v42];
        if (!v55)
        {
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        v56 = swift_retain(*(_QWORD *)&v119[v42]);
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v53, v56);
        v57 = v129;
        v58 = v47((char *)v49, 1, v129);
        v59 = (uint64_t)v121;
        if (v58 == 1)
        {
          sub_1004CB800(v49, (uint64_t *)&unk_101407260);
          v60 = 1;
          v61 = v130;
        }
        else
        {
          v61 = v130;
          (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v121, v49, v57);
          v60 = 0;
        }
        v50((char *)v59, v60, 1, v57);
        v63 = swift_release(v55);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v47)(v59, 1, v57, v63) == 1)
        {
          sub_1004CB800(v59, (uint64_t *)&unk_101407260);
          sub_100757E04(&_mh_execute_header, (uint64_t)"libraryViewModelControllerDidApplyUpdate(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2, 305, "No index path for All Boards", 28, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"libraryViewModelControllerDidApplyUpdate(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSSidebarViewController.swift", 97, 2u, 305, (uint64_t)"No index path for All Boards", 28, 2u);
          sub_1004B84A4(v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v64 = (uint64_t)v115;
LABEL_35:
          sub_1004B84A4(v64, type metadata accessor for CRLBoardLibraryViewModel.Item);
          return;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v128, v59, v57);
        v62 = (uint64_t)v115;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v128, v15, v45);
        v62 = (uint64_t)v115;
        sub_1004B8460((uint64_t)v115, v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v65 = (uint64_t)v123;
      if (qword_1013DD7A8 != -1)
        swift_once(&qword_1013DD7A8, sub_100A03518);
      swift_beginAccess(&static OS_os_log.crlSidebar, v133, 0, 0);
      v66 = (void *)static OS_os_log.crlSidebar;
      v67 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v67, v132);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      sub_1004B8460(v53, v65, type metadata accessor for CRLBoardLibraryViewModel.Item);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v65, v38);
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v70 = v65;
          v71 = v120;
          sub_1004B84E0(v70, v120, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          v72 = v66;
          sub_100BCAD68();
          v74 = v73;
          v76 = v75;
          v77 = v71;
          v78 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
          v53 = (uint64_t)v122;
        }
        else
        {
          v81 = (uint64_t *)(v65 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48));
          v74 = *v81;
          v76 = v81[1];
          v82 = v66;
          v78 = type metadata accessor for CRLBoardIdentifier;
          v77 = v65;
        }
        sub_1004B84A4(v77, v78);
      }
      else
      {
        v79 = v66;
        v74 = sub_100BCE3AC();
        v76 = v80;
      }
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v74;
      *(_QWORD *)(inited + 40) = v76;
      v84 = static os_log_type_t.default.getter(v83);
      sub_100A06EBC((uint64_t)v66, &_mh_execute_header, v84, "selectedItem after view model update: %@", 40, 2, inited);
      swift_setDeallocating(inited);
      v85 = *(_QWORD *)(inited + 16);
      v86 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v85, v86);

      v87 = v125;
      sub_1004B8460(v53, v125, type metadata accessor for CRLBoardLibraryViewModel.Item);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v87, 0, 1, v38);
      v88 = v124;
      swift_beginAccess(v124, v131, 33, 0);
      sub_10050BDB0(v87, v88);
      swift_endAccess(v131);
      v89 = v119;
      v90 = objc_msgSend(v119, "collectionView");
      if (v90)
      {
        v91 = v90;
        v92 = objc_msgSend(v90, "indexPathsForSelectedItems");

        if (!v92)
          goto LABEL_31;
        v93 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v92, v129);

        __chkstk_darwin(v94);
        v114[2] = v128;
        v95 = sub_100DAFC08((uint64_t (*)(char *))sub_10050CAF8, (_BOOL8)v114, v93);
        *(_QWORD *)&v96 = swift_bridgeObjectRelease(v93).n128_u64[0];
        if (v95)
          goto LABEL_31;
        v97 = objc_msgSend(v89, "collectionView", v96);
        if (v97)
        {
          v98 = v97;
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v98, "selectItemAtIndexPath:animated:scrollPosition:", isa, 1, 0);

LABEL_31:
          if ((sub_100BD121C(v62, v53) & 1) == 0)
          {
            Strong = swift_unknownObjectWeakLoadStrong(&v89[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate]);
            if (Strong)
            {
              v102 = Strong;
              v103 = type metadata accessor for TaskPriority(0);
              v104 = v118;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v118, 1, 1, v103);
              v105 = swift_allocObject(&unk_10126A008, 24, 7);
              swift_unknownObjectWeakInit(v105 + 16, v102);
              v106 = v117;
              sub_1004B8460((uint64_t)v122, v117, type metadata accessor for CRLBoardLibraryViewModel.Item);
              type metadata accessor for MainActor(0);
              swift_retain(v105);
              v108 = static MainActor.shared.getter(v107);
              v109 = *(unsigned __int8 *)(v126 + 80);
              v110 = (v109 + 40) & ~v109;
              v111 = (_QWORD *)swift_allocObject(&unk_10126A058, v110 + v116, v109 | 7);
              v111[2] = v108;
              v111[3] = &protocol witness table for MainActor;
              v111[4] = v105;
              sub_1004B84E0(v106, (uint64_t)v111 + v110, type metadata accessor for CRLBoardLibraryViewModel.Item);
              swift_release(v105);
              v112 = (uint64_t)v104;
              v53 = (uint64_t)v122;
              v113 = sub_100521B98(v112, (uint64_t)&unk_1013E1418, (uint64_t)v111);
              swift_unknownObjectRelease(v102);
              v100 = swift_release(v113);
            }
          }
          (*(void (**)(char *, uint64_t, __n128))(v130 + 8))(v128, v129, v100);
          sub_1004B84A4(v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v64 = v62;
          goto LABEL_35;
        }
LABEL_39:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_38;
  }
  sub_1004CB800((uint64_t)v23, (uint64_t *)&unk_1013E3830);
  if (qword_1013DD7A8 != -1)
    swift_once(&qword_1013DD7A8, sub_100A03518);
  swift_beginAccess(&static OS_os_log.crlSidebar, v133, 0, 0);
  v39 = (id)static OS_os_log.crlSidebar;
  v41 = static os_log_type_t.default.getter(v40);
  sub_100A06EBC((uint64_t)v39, &_mh_execute_header, v41, "No selectedItem after view model update, so nothing to change", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

}

uint64_t sub_10050C9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v6 = v0 + v4;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v4, v10);
    v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v11 + 20) + 8));
    v8 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v0 + v4, 5, v8))
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
LABEL_6:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 48) + 8));
    }
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10050CAF8(uint64_t a1)
{
  uint64_t v1;

  return sub_100DB607C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

_OWORD *sub_10050CB14(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10050CB24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050CB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100509B24(a1, *(void **)(v2 + 16), a2);
}

void sub_10050CB50(uint64_t a1)
{
  uint64_t v1;

  sub_100509BC0(a1, v1);
}

uint64_t sub_10050CB58()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10050CB8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013FA634);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_100910FDC(a1, v4, v5, v7, v6);
}

uint64_t sub_10050CC10()
{
  return 8;
}

uint64_t sub_10050CC1C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10050CC24(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_10050CC38(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

id sub_10050CC44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100506C84(a1, a2, v2);
}

void sub_10050CC4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10050732C(a1, a2, a3, v3);
}

uint64_t sub_10050CC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_1013E1438);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10050CCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013E1438) - 8) + 80);
  return sub_1005093B4(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

uint64_t sub_10050CD10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100504D8C(a1, a2, a3, a4, v4);
}

double sub_10050CD18(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_10126A280, (uint64_t)&unk_1013E1490);
}

double sub_10050CD40(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_10126A258, (uint64_t)&unk_1013E1480);
}

double sub_10050CD68(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_10126A230, (uint64_t)&unk_1013E1470);
}

double sub_10050CD90(uint64_t a1)
{
  uint64_t v1;

  return sub_1004DD45C(a1, v1, (uint64_t)&unk_10126A208, (uint64_t)&unk_1013E1460);
}

uint64_t sub_10050CDBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E145C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1005055A8(a1, v4, v5, v6);
}

uint64_t sub_10050CE2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E146C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1005054C0(a1, v4, v5, v6);
}

uint64_t sub_10050CE9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E147C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1005053D8(a1, v4, v5, v6);
}

uint64_t sub_10050CF0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E148C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1005052F0(a1, v4, v5, v6);
}

uint64_t sub_10050CF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10050CFD8()
{
  type metadata accessor for URL(0);
  sub_1008522BC();
}

uint64_t sub_10050D014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v0 + v4, v1);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v4, v10);
    v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v11 + 20) + 8));
    v8 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1004B804C(&qword_1013E1790);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v0 + v4, 5, v8))
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
LABEL_6:
      swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 48) + 8));
    }
  }
  v12 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;

  return swift_deallocObject(v0, v13, v3 | 7);
}

char *sub_10050D14C(void *a1, void (*a2)(char *, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1005080E0(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

_QWORD *sub_10050D1B0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

void sub_10050D2A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *Strong;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t inited;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD v117[2];
  __int128 v118;
  char *v119;
  __int128 v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  __int128 v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  char *v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE v201[88];

  v173 = a1;
  v146 = type metadata accessor for CRLProto_BoardItemIdentifier(0);
  __chkstk_darwin(v146);
  v156 = (char *)v117 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLServerSyncedPeerAddedItemEvent(0);
  __chkstk_darwin(v3);
  v121 = (char *)v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v117 - v6;
  v8 = type metadata accessor for CRLRefuseOrEndFollow(0);
  __chkstk_darwin(v8);
  v10 = (char *)v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v142);
  v157 = (char *)v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v12);
  v131 = (char *)v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v165 = (char *)v117 - v15;
  __chkstk_darwin(v16);
  v169 = (char *)v117 - v17;
  v18 = type metadata accessor for CRLFollowViewportState(0);
  __chkstk_darwin(v18);
  v20 = (char *)v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for CRLStartOrEndFollow(0);
  __chkstk_darwin(v141);
  v175 = (char *)v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v145 = (char *)v117 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)v117 - v25;
  v27 = sub_1004B804C(&qword_1013E1518);
  __chkstk_darwin(v27);
  v159 = (char *)v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_1004B804C(&qword_1013E1520);
  __chkstk_darwin(v153);
  v152 = (char *)v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = type metadata accessor for CRLCollaboratorCursorColor(0);
  __chkstk_darwin(v178);
  v151 = (char *)v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v179 = (char *)v117 - v32;
  v33 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v33);
  v128 = (char *)v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v164 = (char *)v117 - v36;
  v37 = type metadata accessor for CRLProto_Data(0);
  v171 = *(_QWORD *)(v37 - 8);
  v172 = v37;
  __chkstk_darwin(v37);
  v127 = (char *)v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v39);
  v163 = (char *)v117 - v41;
  v42 = type metadata accessor for BinaryDecodingOptions(0, v40);
  __chkstk_darwin(v42);
  v144 = (char *)v117 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v168 = (char *)v117 - v45;
  v167 = type metadata accessor for CRLProto_RealTimeLeave(0);
  __chkstk_darwin(v167);
  v195 = (char *)v117 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for CRLRealTimeLeave(0);
  __chkstk_darwin(v47);
  v181 = (char *)v117 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1004B804C(&qword_1013E1528);
  __chkstk_darwin(v49);
  v129 = (char *)v117 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v137 = (char *)v117 - v52;
  __chkstk_darwin(v53);
  v125 = (char *)v117 - v54;
  __chkstk_darwin(v55);
  v133 = (char *)v117 - v56;
  __chkstk_darwin(v57);
  v130 = (char *)v117 - v58;
  __chkstk_darwin(v59);
  v138 = (char *)v117 - v60;
  v180 = type metadata accessor for CRLRealTimeEnter(0);
  v170 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v150 = (char *)v117 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  v184 = (char *)v117 - v63;
  v64 = type metadata accessor for Date(0);
  v135 = *(_QWORD *)(v64 - 8);
  v136 = v64;
  __chkstk_darwin(v64);
  v66 = (char *)v117 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  v123 = (char *)v117 - v68;
  v190 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v187 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v183 = (char *)v117 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1004B804C((uint64_t *)&unk_101405E90);
  __chkstk_darwin(v70);
  v134 = (char *)v117 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v72);
  v147 = (char *)v117 - v73;
  __chkstk_darwin(v74);
  v162 = (char *)v117 - v75;
  __chkstk_darwin(v76);
  v158 = (char *)v117 - v77;
  __chkstk_darwin(v78);
  v161 = (char *)v117 - v79;
  __chkstk_darwin(v80);
  v140 = (char *)v117 - v81;
  v194 = type metadata accessor for UUID(0);
  v82 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v126 = (char *)v117 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v84);
  v124 = (char *)v117 - v85;
  __chkstk_darwin(v86);
  v177 = (char *)v117 - v87;
  __chkstk_darwin(v88);
  v160 = (char *)v117 - v89;
  __chkstk_darwin(v90);
  v154 = (char *)v117 - v91;
  __chkstk_darwin(v92);
  v132 = (char *)v117 - v93;
  __chkstk_darwin(v94);
  v143 = (char *)v117 - v95;
  __chkstk_darwin(v96);
  v155 = (char *)v117 - v97;
  v149 = type metadata accessor for CRLCollaboratorCursor(0);
  __chkstk_darwin(v149);
  v174 = (char *)v117 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_editingCoordinator);
  if (Strong)
  {
    v100 = Strong;
    v119 = v66;
    objc_msgSend(Strong, "willProcessAuxiliaryRealTimeChanges");
    v200 = (uint64_t)_swiftEmptyArrayStorage;
    v101 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_legacyUpdates);
    v102 = *(_QWORD *)(v101 + 16);
    v117[1] = v7;
    v189 = v10;
    v196 = v100;
    v176 = v20;
    v122 = v26;
    v198 = v82;
    v192 = v102;
    if (v102)
    {
      v117[0] = v1;
      v182 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
      v166 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator;
      v139 = OBJC_IVAR____TtC8Freeform8CRLBoard_shareState;
      *(_QWORD *)&v193 = v101 + 32;
      swift_bridgeObjectRetain(v101);
      v148 = xmmword_100EF5A10;
      v118 = xmmword_100EF5550;
      v120 = xmmword_100EF78C0;
      v185 = v103;
      if (*(_QWORD *)(v103 + 16))
        __asm { BR              X9 }
      __break(1u);
      JUMPOUT(0x100510C18);
    }
    v109 = v100;
    v112 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_updates);
    if (*(_QWORD *)(v112 + 16))
    {
      v186 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
      v197 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
      swift_bridgeObjectRetain(v112);
      v191 = v113;
      v188 = xmmword_100EF78C0;
      v193 = xmmword_100EF5E40;
      __asm { BR              X9 }
    }
    v114 = v200;
    if ((unint64_t)v200 >> 62)
    {
      if (v200 < 0)
        v115 = v200;
      else
        v115 = v200 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v200);
      v116 = _CocoaArrayWrapper.endIndex.getter(v115);
      swift_bridgeObjectRelease(v114);
      if (!v116)
        goto LABEL_13;
    }
    else if (!*(_QWORD *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_13:
      objc_msgSend(v100, "didProcessAuxiliaryRealTimeChanges", swift_bridgeObjectRelease(v114).n128_f64[0]);
      goto LABEL_14;
    }
    sub_1005F7574(v114);
    goto LABEL_13;
  }
  v104 = v1;
  sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyBoardAuxiliaryPeerSyncUpdates.swift", 116, 2, 44, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyBoardAuxiliaryPeerSyncUpdates.swift", 116, 2u, 44, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, &v199, 0, 0);
  v105 = (void *)static OS_os_log.realTimeSync;
  v106 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v106, v201);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v108 = *(_QWORD *)(*(_QWORD *)(v104 + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_updates)
                   + 16);
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v108;
  v109 = v105;
  v110 = static os_log_type_t.error.getter(v109);
  sub_100A06EBC((uint64_t)v109, &_mh_execute_header, v110, "No editing coordinator. Ignoring %d update(s).", 46, 2, inited);
  swift_setDeallocating(inited);
  v111 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v111);
LABEL_14:

}

uint64_t sub_100510CD8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_editingCoordinator);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_updates));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_legacyUpdates));
}

id sub_100510D14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates()
{
  return objc_opt_self(_TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates);
}

unint64_t sub_100510DAC()
{
  unint64_t result;

  result = qword_1013E1530;
  if (!qword_1013E1530)
  {
    result = swift_getWitnessTable(&unk_100F079C4, &type metadata for CRLEditingCoordinator.CollaborationAccessError);
    atomic_store(result, (unint64_t *)&qword_1013E1530);
  }
  return result;
}

void sub_100510E00(void *a1, void *a2, void *a3)
{
  if (a1)
  {

  }
}

void sub_100510E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  void *v18;
  _QWORD v19[2];

  v7 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardEntity(0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v3, "isViewLoaded", v11))
  {
    v14 = objc_msgSend(v3, "view");
    if (v14)
    {
      v15 = v14;
      sub_1005112BC(a1, (uint64_t)v13);
      v19[1] = v3;
      (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
      v16 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
      v17 = sub_100511300();
      v18 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v13, v9, v10, v17);
      UIView.annotate(with:)();

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100510F88(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  _QWORD v11[2];

  v5 = type metadata accessor for AppEntityVisualState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
  {
    result = objc_msgSend(v2, "view");
    if (result)
    {
      v10 = result;
      v11[1] = v2;
      (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
      UIView.updateAppEntityAnnotation(with:)(v8);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100511074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  unint64_t v15;
  void *v16;
  _QWORD v17[2];

  v4 = v3;
  v8 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardEntity(0);
  __chkstk_darwin(v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005112BC(a1, (uint64_t)v13);
  v17[1] = v4;
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  v14 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  v15 = sub_100511300();
  v16 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v13, v10, v11, v15);
  UIView.annotate(with:)();

}

uint64_t sub_100511188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for AppEntityVisualState(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2;
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  UIView.updateAppEntityAnnotation(with:)(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10051123C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100511074(a1, a2, a3);
}

uint64_t sub_10051125C(uint64_t a1, uint64_t a2)
{
  return sub_100511188(a1, a2);
}

void sub_10051127C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100510E3C(a1, a2, a3);
}

id sub_10051129C(uint64_t a1, uint64_t a2)
{
  return sub_100510F88(a1, a2);
}

uint64_t sub_1005112BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100511300()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1138;
  if (!qword_1013E1138)
  {
    v1 = type metadata accessor for CRLBoardEntity(255);
    result = swift_getWitnessTable(&unk_100F062EC, v1);
    atomic_store(result, (unint64_t *)&qword_1013E1138);
  }
  return result;
}

uint64_t sub_100511410()
{
  return type metadata accessor for CRLCanvasBackgroundView();
}

id sub_100511510()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasBackground();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCanvasBackground()
{
  return objc_opt_self(_TtC8Freeform19CRLCanvasBackground);
}

void sub_100511598()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform42CRLMiniFormatterDynamicOperationViewHelper_view);
  if (Strong)
  {
    v7 = (id)Strong;
    v2 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform42CRLMiniFormatterDynamicOperationViewHelper_delegate);
    if (!v2)
    {
      v6 = v7;
      goto LABEL_7;
    }
    v3 = v2;
    v4 = objc_msgSend(v2, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setUserInteractionEnabled:", 0);

      swift_unknownObjectRelease(v3);
      v6 = v5;
LABEL_7:

      return;
    }
    __break(1u);
  }
}

void sub_100511678()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform42CRLMiniFormatterDynamicOperationViewHelper_view);
  if (Strong)
  {
    v7 = (id)Strong;
    v2 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform42CRLMiniFormatterDynamicOperationViewHelper_delegate);
    if (!v2)
    {
      v6 = v7;
      goto LABEL_7;
    }
    v3 = v2;
    v4 = objc_msgSend(v2, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setUserInteractionEnabled:", 1);

      swift_unknownObjectRelease(v3);
      v6 = v5;
LABEL_7:

      return;
    }
    __break(1u);
  }
}

id sub_100511784()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterDynamicOperationViewHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterDynamicOperationViewHelper()
{
  return objc_opt_self(_TtC8Freeform42CRLMiniFormatterDynamicOperationViewHelper);
}

id sub_100511890()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsShapeInserted();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLAnalyticsShapeInserted()
{
  return objc_opt_self(_TtC8Freeform25CRLAnalyticsShapeInserted);
}

void sub_1005118E4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4;
  NSString v5;
  char isUniquelyReferenced_nonNull_native;
  id v7;
  char v8;
  void *v9;
  NSString v10;
  Class isa;

  if (a2)
  {
    v4 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
    v5 = String._bridgeToObjectiveC()();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
    sub_100826868((uint64_t)v5, 0x6564496570616873, 0xEF7265696669746ELL, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a3 & 1);
    v8 = swift_isUniquelyReferenced_nonNull_native(v4);
    sub_100826868((uint64_t)v7, 0xD000000000000011, 0x8000000100FB0E90, v8);
    swift_bridgeObjectRelease(0x8000000000000000);
    v9 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v10 = String._bridgeToObjectiveC()();
    sub_100511A70();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "sendEventInDomain:lazily:eventPayload:", v10, 1, isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  }
}

unint64_t sub_100511A70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0490;
  if (!qword_1013E0490)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E0490);
  }
  return result;
}

void sub_100511AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v42 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v37 = (char *)&v36 - v7;
  v8 = sub_1004B804C((uint64_t *)&unk_1013F13C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v36 - v12);
  v14 = *(_QWORD *)(a1 + 64);
  v40 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v41 = (unint64_t)(v15 + 63) >> 6;
  v43 = a1;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  v39 = (char *)_swiftEmptyArrayStorage;
  if (!v17)
    goto LABEL_7;
LABEL_4:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v25)) + (v18 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * i);
    v22 = *v21;
    v23 = v21[1];
    sub_1004CB7BC(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v42 + 72) * i, (uint64_t)v13 + *(int *)(v8 + 48), (uint64_t *)&unk_1013E1A50);
    *v13 = v22;
    v13[1] = v23;
    sub_1004C4938((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1013F13C0);
    sub_1004CB7BC((uint64_t)&v10[*(int *)(v8 + 48)], (uint64_t)v4, (uint64_t *)&unk_1013E1A50);
    swift_bridgeObjectRetain(v23);
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F13C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v4, 1, v45) == 1)
    {
      sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E1A50);
      if (v17)
        goto LABEL_4;
    }
    else
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
      v28 = v37;
      v29 = v45;
      v27(v37, v4, v45);
      v30 = v29;
      v31 = v27;
      v27(v38, v28, v30);
      if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
        v39 = (char *)sub_100D0EC28(0, *((_QWORD *)v39 + 2) + 1, 1, (unint64_t)v39);
      v33 = *((_QWORD *)v39 + 2);
      v32 = *((_QWORD *)v39 + 3);
      if (v33 >= v32 >> 1)
        v39 = (char *)sub_100D0EC28(v32 > 1, v33 + 1, 1, (unint64_t)v39);
      v34 = v38;
      v35 = v39;
      *((_QWORD *)v39 + 2) = v33 + 1;
      v31(&v35[((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v33], v34, v45);
      if (v17)
        goto LABEL_4;
    }
LABEL_7:
    v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v41)
      goto LABEL_29;
    v25 = *(_QWORD *)(v40 + 8 * v24);
    ++v18;
    if (!v25)
    {
      v18 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_29;
      v25 = *(_QWORD *)(v40 + 8 * v18);
      if (!v25)
      {
        v18 = v24 + 2;
        if (v24 + 2 >= v41)
          goto LABEL_29;
        v25 = *(_QWORD *)(v40 + 8 * v18);
        if (!v25)
        {
          v18 = v24 + 3;
          if (v24 + 3 >= v41)
            goto LABEL_29;
          v25 = *(_QWORD *)(v40 + 8 * v18);
          if (!v25)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v25 - 1) & v25;
  }
  v26 = v24 + 4;
  if (v26 >= v41)
  {
LABEL_29:
    swift_release(v43);
    return;
  }
  v25 = *(_QWORD *)(v40 + 8 * v26);
  if (v25)
  {
    v18 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v18 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v18 >= v41)
      goto LABEL_29;
    v25 = *(_QWORD *)(v40 + 8 * v18);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_100511EB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v25[5];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = __CocoaSet.makeIterator()(a1);
    v3 = type metadata accessor for CRLBoardItem(0);
    v4 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    a1 = (uint64_t)Set.Iterator.init(_cocoa:)(v25, v2, v3, v4);
    v1 = v25[0];
    v22 = v25[1];
    v5 = v25[2];
    v6 = v25[3];
    v7 = v25[4];
  }
  else
  {
    v6 = 0;
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v22 = a1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a1 + 56);
  }
  v11 = (unint64_t)(v5 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v7)
    {
      v12 = (v7 - 1) & v7;
      v13 = __clz(__rbit64(v7)) | (v6 << 6);
      v14 = v6;
      goto LABEL_31;
    }
    v19 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v19 >= v11)
      goto LABEL_34;
    v20 = *(_QWORD *)(v22 + 8 * v19);
    v14 = v6 + 1;
    if (!v20)
    {
      v14 = v6 + 2;
      if (v6 + 2 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v22 + 8 * v14);
      if (!v20)
      {
        v14 = v6 + 3;
        if (v6 + 3 >= v11)
          goto LABEL_34;
        v20 = *(_QWORD *)(v22 + 8 * v14);
        if (!v20)
        {
          v14 = v6 + 4;
          if (v6 + 4 >= v11)
            goto LABEL_34;
          v20 = *(_QWORD *)(v22 + 8 * v14);
          if (!v20)
          {
            v14 = v6 + 5;
            if (v6 + 5 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v22 + 8 * v14);
            if (!v20)
            {
              v21 = v6 + 6;
              while (v11 != v21)
              {
                v20 = *(_QWORD *)(v22 + 8 * v21++);
                if (v20)
                {
                  v14 = v21 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1004D284C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v12 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_31:
    v18 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v13);
    if (!v18)
      goto LABEL_34;
    while (1)
    {
      sub_100AD7814((Swift::Int *)&v24, v18);

      v6 = v14;
      v7 = v12;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v15 = __CocoaSet.Iterator.next()(a1);
      if (v15)
      {
        v16 = v15;
        v23 = v15;
        v17 = type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain(v16);
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v17, 7);
        v18 = v24;
        swift_unknownObjectRelease(v16);
        v14 = v6;
        v12 = v7;
        if (v18)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

void sub_100512150(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  _QWORD v37[5];
  uint64_t v38;
  _OWORD v39[2];
  Swift::UInt64 v40[2];
  _OWORD v41[3];

  v2 = v1;
  v4 = 0;
  v32 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v33 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
    }
    else
    {
      v10 = v4 + 1;
      if (__OFADD__(v4, 1))
        goto LABEL_46;
      if (v10 >= v33)
      {
LABEL_44:
        swift_release(a1);
        return;
      }
      v11 = *(_QWORD *)(v32 + 8 * v10);
      ++v4;
      if (!v11)
      {
        v4 = v10 + 1;
        if (v10 + 1 >= v33)
          goto LABEL_44;
        v11 = *(_QWORD *)(v32 + 8 * v4);
        if (!v11)
        {
          v4 = v10 + 2;
          if (v10 + 2 >= v33)
            goto LABEL_44;
          v11 = *(_QWORD *)(v32 + 8 * v4);
          if (!v11)
          {
            v4 = v10 + 3;
            if (v10 + 3 >= v33)
              goto LABEL_44;
            v11 = *(_QWORD *)(v32 + 8 * v4);
            if (!v11)
            {
              v12 = v10 + 4;
              if (v12 >= v33)
                goto LABEL_44;
              v11 = *(_QWORD *)(v32 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  v4 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    break;
                  if (v4 >= v33)
                    goto LABEL_44;
                  v11 = *(_QWORD *)(v32 + 8 * v4);
                  ++v12;
                  if (v11)
                    goto LABEL_23;
                }
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
              v4 = v12;
            }
          }
        }
      }
LABEL_23:
      v7 = (v11 - 1) & v11;
      v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    sub_10051FDDC(*(_QWORD *)(a1 + 48) + 48 * v9, (uint64_t)v41);
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_OWORD *)v40 = v41[2];
    v13 = *v2;
    Hasher.init(_seed:)(v37, *(_QWORD *)(*v2 + 40));
    swift_bridgeObjectRetain(v13);
    AnyHashable.hash(into:)(v37);
    Hasher._combine(_:)(v40[1]);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v13 + 32);
    v16 = v14 & ~v15;
    if (((*(_QWORD *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      v17 = ~v15;
      while (1)
      {
        sub_10051FDDC(*(_QWORD *)(v13 + 48) + 48 * v16, (uint64_t)v37);
        if ((static AnyHashable.== infix(_:_:)(v37, v39) & 1) != 0 && v38 == v40[1])
          break;
        sub_10051FE18(v37);
        v16 = (v16 + 1) & v17;
        if (((*(_QWORD *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          goto LABEL_30;
      }
      sub_10051FE18(v37);
      v18 = v13;
      goto LABEL_5;
    }
LABEL_30:
    swift_bridgeObjectRelease(v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    sub_10051FDDC((uint64_t)v39, (uint64_t)v35);
    v34 = *v2;
    v20 = (_QWORD *)*v2;
    *v2 = 0x8000000000000000;
    v21 = v20[2];
    if (v20[3] <= v21)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100AEAA5C();
      v20 = (_QWORD *)v34;
    }
LABEL_42:
    *(_QWORD *)((char *)v20 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v16;
    v26 = (_OWORD *)(v20[6] + 48 * v16);
    v27 = v35[0];
    v28 = v36;
    v26[1] = v35[1];
    v26[2] = v28;
    *v26 = v27;
    v29 = v20[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v20[2] = v31;
    v18 = *v2;
    *v2 = v20;
LABEL_5:
    swift_bridgeObjectRelease(v18);
    sub_10051FE18(v39);
  }
  v22 = v21 + 1;
  if (isUniquelyReferenced_nonNull_native)
    sub_100ADE574(v22);
  else
    sub_100AED934(v22);
  v20 = (_QWORD *)v34;
  Hasher.init(_seed:)(v37, *(_QWORD *)(v34 + 40));
  AnyHashable.hash(into:)(v37);
  Hasher._combine(_:)(*((Swift::UInt64 *)&v36 + 1));
  v23 = Hasher._finalize()();
  v24 = -1 << *(_BYTE *)(v34 + 32);
  v16 = v23 & ~v24;
  if (((*(_QWORD *)(v34 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
    goto LABEL_42;
  v25 = ~v24;
  while (1)
  {
    sub_10051FDDC(*(_QWORD *)(v34 + 48) + 48 * v16, (uint64_t)v37);
    if ((static AnyHashable.== infix(_:_:)(v37, v35) & 1) != 0 && v38 == *((_QWORD *)&v36 + 1))
      break;
    sub_10051FE18(v37);
    v16 = (v16 + 1) & v25;
    if (((*(_QWORD *)(v34 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      goto LABEL_42;
  }
LABEL_48:
  sub_10051FE18(v37);
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyCRLCommandChangeContext);
  __break(1u);
}

void sub_100512568(uint64_t a1)
{
  sub_100512968(a1, type metadata accessor for CRLBoardIdentifier, (void (*)(char *, char *))sub_100AD7844);
}

void sub_10051257C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v22 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a1 + 56);
  v23 = (unint64_t)(v14 + 63) >> 6;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v17 | (v12 << 6); ; i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_100AD569C((uint64_t)v8, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v16)
      goto LABEL_4;
LABEL_5:
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v23)
      goto LABEL_24;
    v20 = *(_QWORD *)(v13 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v23)
        goto LABEL_24;
      v20 = *(_QWORD *)(v13 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v23)
          goto LABEL_24;
        v20 = *(_QWORD *)(v13 + 8 * v12);
        if (!v20)
        {
          v12 = v19 + 3;
          if (v19 + 3 >= v23)
            goto LABEL_24;
          v20 = *(_QWORD *)(v13 + 8 * v12);
          if (!v20)
            break;
        }
      }
    }
LABEL_20:
    v16 = (v20 - 1) & v20;
  }
  v21 = v19 + 4;
  if (v21 >= v23)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
LABEL_25:
    swift_release(a1);
    return;
  }
  v20 = *(_QWORD *)(v13 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v23)
      goto LABEL_24;
    v20 = *(_QWORD *)(v13 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void sub_10051280C(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  unsigned __int8 v13;

  v2 = 0;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_100AD8850(&v13, *(_BYTE *)(*(_QWORD *)(a1 + 48) + v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_100512954(uint64_t a1)
{
  sub_100512968(a1, type metadata accessor for CRLBoardLibraryViewModel.Item, (void (*)(char *, char *))sub_100AD896C);
}

void sub_100512968(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *, char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;

  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v26 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v26 - v14;
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v27 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_5;
    }
    v23 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v27)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v16;
    if (!v24)
    {
      v16 = v23 + 1;
      if (v23 + 1 >= v27)
        goto LABEL_23;
      v24 = *(_QWORD *)(v26 + 8 * v16);
      if (!v24)
      {
        v16 = v23 + 2;
        if (v23 + 2 >= v27)
          goto LABEL_23;
        v24 = *(_QWORD *)(v26 + 8 * v16);
        if (!v24)
        {
          v16 = v23 + 3;
          if (v23 + 3 >= v27)
            goto LABEL_23;
          v24 = *(_QWORD *)(v26 + 8 * v16);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v20 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_5:
    sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v22, (uint64_t)v15, a2);
    sub_1004B84E0((uint64_t)v15, (uint64_t)v10, a2);
    a3(v13, v10);
    sub_1004B84A4((uint64_t)v13, a2);
  }
  v25 = v23 + 4;
  if (v25 >= v27)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v16 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v27)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v16);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_100512BA0(uint64_t a1)
{
  sub_100512BC4(a1, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (unint64_t *)&qword_1013E1778, (void (*)(id *, id, __n128))sub_100ADA730);
}

void sub_100512BC4(uint64_t a1, unint64_t *a2, _QWORD *a3, unint64_t *a4, void (*a5)(id *, id, __n128))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD v36[5];

  v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v10 = __CocoaSet.makeIterator()(a1);
    v11 = sub_1004B8930(0, a2, a3);
    v12 = sub_10051FD9C(a4, a2, a3);
    a1 = (uint64_t)Set.Iterator.init(_cocoa:)(v36, v10, v11, v12);
    v6 = v36[0];
    v33 = v36[1];
    v13 = v36[2];
    v14 = v36[3];
    v15 = v36[4];
  }
  else
  {
    v14 = 0;
    v16 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v13 = ~v16;
    v17 = -v16;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v15 = v18 & *(_QWORD *)(a1 + 56);
  }
  v19 = (unint64_t)(v13 + 64) >> 6;
  if (v6 < 0)
    goto LABEL_12;
  while (1)
  {
    if (v15)
    {
      v20 = (v15 - 1) & v15;
      v21 = __clz(__rbit64(v15)) | (v14 << 6);
      v22 = v14;
      goto LABEL_31;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v28 >= v19)
      goto LABEL_34;
    v29 = *(_QWORD *)(v33 + 8 * v28);
    v22 = v14 + 1;
    if (!v29)
    {
      v22 = v14 + 2;
      if (v14 + 2 >= v19)
        goto LABEL_34;
      v29 = *(_QWORD *)(v33 + 8 * v22);
      if (!v29)
      {
        v22 = v14 + 3;
        if (v14 + 3 >= v19)
          goto LABEL_34;
        v29 = *(_QWORD *)(v33 + 8 * v22);
        if (!v29)
        {
          v22 = v14 + 4;
          if (v14 + 4 >= v19)
            goto LABEL_34;
          v29 = *(_QWORD *)(v33 + 8 * v22);
          if (!v29)
          {
            v22 = v14 + 5;
            if (v14 + 5 >= v19)
              goto LABEL_34;
            v29 = *(_QWORD *)(v33 + 8 * v22);
            if (!v29)
            {
              v30 = v14 + 6;
              while (v19 != v30)
              {
                v29 = *(_QWORD *)(v33 + 8 * v30++);
                if (v29)
                {
                  v22 = v30 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1004D284C(v6);
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v20 = (v29 - 1) & v29;
    v21 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_31:
    v26 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v21);
    if (!v26)
      goto LABEL_34;
    while (1)
    {
      a5(&v35, v26, v27);

      v14 = v22;
      v15 = v20;
      if ((v6 & 0x8000000000000000) == 0)
        break;
LABEL_12:
      v23 = __CocoaSet.Iterator.next()(a1);
      if (v23)
      {
        v24 = v23;
        v34 = v23;
        v25 = sub_1004B8930(0, a2, a3);
        swift_unknownObjectRetain(v24);
        swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v25, 7);
        v26 = v35;
        v27 = swift_unknownObjectRelease(v24);
        v22 = v14;
        v20 = v15;
        if (v26)
          continue;
      }
      goto LABEL_34;
    }
  }
  __break(1u);
}

void sub_100512E74(uint64_t a1)
{
  sub_100512BC4(a1, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr, (unint64_t *)&qword_1013E1768, (void (*)(id *, id, __n128))sub_100ADAA30);
}

_QWORD *sub_100512E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 *v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t __src;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  _QWORD *v114;

  v3 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v3);
  v80 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLProto_Data(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (__int128 *)((char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v97 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v96 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v95 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1004B804C((uint64_t *)&unk_1013F13C0);
  __chkstk_darwin(v94);
  v14 = (uint64_t *)((char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v93 = (uint64_t *)((char *)&v76 - v16);
  __chkstk_darwin(v17);
  v92 = (char *)&v76 - v18;
  v19 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
  v90 = *(_QWORD *)(v19 - 8);
  v91 = v19;
  __chkstk_darwin(v19);
  v104 = (uint64_t *)((char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(_QWORD *)(a1 + 16);
  v22 = _swiftEmptyArrayStorage;
  if (v21)
  {
    v98 = v11;
    v79 = v8;
    v99 = v6;
    v88 = v5;
    v76 = v1;
    v114 = _swiftEmptyArrayStorage;
    sub_100600954(0, v21, 0);
    v23 = sub_10051FA48(a1);
    v25 = 0;
    v26 = a1 + 64;
    v27 = *(_BYTE *)(a1 + 32);
    v77 = a1 + 80;
    v78 = xmmword_100EF78C0;
    v89 = a1;
    v87 = v14;
    v84 = v21;
    v85 = v24;
    v86 = a1 + 64;
    while ((v23 & 0x8000000000000000) == 0 && (uint64_t)v23 < 1 << v27)
    {
      v29 = v23 >> 6;
      if ((*(_QWORD *)(v26 + 8 * (v23 >> 6)) & (1 << v23)) == 0)
        goto LABEL_31;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v24)
        goto LABEL_32;
      v101 = v25;
      v102 = 1 << v23;
      v30 = v94;
      v31 = v92;
      v32 = (uint64_t)&v92[*(int *)(v94 + 48)];
      v33 = *(_QWORD *)(a1 + 56);
      v34 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v23);
      v36 = *v34;
      v35 = v34[1];
      v37 = *(_QWORD *)(v97 + 72);
      v103 = v23;
      sub_1004CB7BC(v33 + v37 * v23, v32, (uint64_t *)&unk_1013E1A50);
      *v31 = v36;
      v31[1] = v35;
      v38 = (uint64_t)v93;
      *v93 = v36;
      *(_QWORD *)(v38 + 8) = v35;
      sub_1004CB7BC(v32, v38 + *(int *)(v30 + 48), (uint64_t *)&unk_1013E1A50);
      sub_1004C4938(v38, (uint64_t)v14, (uint64_t *)&unk_1013F13C0);
      swift_bridgeObjectRetain_n(v35, 2);
      v39 = sub_1004CB800((uint64_t)v31, (uint64_t *)&unk_1013F13C0);
      v41 = *v14;
      v40 = v14[1];
      v42 = (char *)v14 + *(int *)(v30 + 48);
      v43 = v91;
      v44 = v104;
      UnknownStorage.init()(v39);
      v45 = (uint64_t)v44 + *(int *)(v43 + 24);
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
      v47 = v88;
      v46(v45, 1, 1, v88);
      *v44 = v41;
      v44[1] = v40;
      v48 = (uint64_t)v42;
      v49 = v100;
      v50 = v96;
      sub_1004CB7BC(v48, v96, (uint64_t *)&unk_1013E1A50);
      v51 = v98;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v50, 1, v49) == 1)
      {
        swift_bridgeObjectRetain(v40);
        sub_1004CB800(v50, (uint64_t *)&unk_1013E1A50);
        a1 = v89;
        v14 = v87;
      }
      else
      {
        v83 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v95, v50, v49);
        swift_bridgeObjectRetain(v40);
        __src = UUID.uuid.getter(v52);
        v106 = v53;
        v107 = v54;
        v108 = v55;
        v109 = v56;
        v110 = v57;
        v111 = v58;
        v112 = v59;
        v113 = v60;
        UUID.uuid.getter(__src);
        v82 = sub_1005CB82C(&__src, 16);
        v81 = v61;
        v62 = v80;
        sub_1004CB7BC(v45, v80, (uint64_t *)&unk_1013E16F0);
        v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v62, 1, v47);
        v64 = v47;
        v65 = v79;
        if ((_DWORD)v63 == 1)
        {
          *v79 = v78;
          UnknownStorage.init()(v63);
          sub_1004CB800(v62, (uint64_t *)&unk_1013E16F0);
        }
        else
        {
          sub_1004B84E0(v62, (uint64_t)v79, type metadata accessor for CRLProto_Data);
        }
        a1 = v89;
        v66 = v87;
        sub_1004BBBC8(*(_QWORD *)v65, *((_QWORD *)v65 + 1));
        v67 = v81;
        *(_QWORD *)v65 = v82;
        *((_QWORD *)v65 + 1) = v67;
        sub_1004CB800(v45, (uint64_t *)&unk_1013E16F0);
        sub_1004B84E0((uint64_t)v65, v45, type metadata accessor for CRLProto_Data);
        v83(v45, 0, 1, v64);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v95, v100);
        v14 = v66;
      }
      sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F13C0);
      v22 = v114;
      if ((swift_isUniquelyReferenced_nonNull_native(v114) & 1) == 0)
      {
        sub_100600954(0, v22[2] + 1, 1);
        v22 = v114;
      }
      v69 = v22[2];
      v68 = v22[3];
      if (v69 >= v68 >> 1)
      {
        sub_100600954(v68 > 1, v69 + 1, 1);
        v22 = v114;
      }
      v22[2] = v69 + 1;
      sub_1004B84E0((uint64_t)v104, (uint64_t)v22+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(_QWORD *)(v90 + 72) * v69, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
      v27 = *(_BYTE *)(a1 + 32);
      v28 = 1 << v27;
      if (v103 >= 1 << v27)
        goto LABEL_33;
      v26 = v86;
      v70 = *(_QWORD *)(v86 + 8 * v29);
      if ((v70 & v102) == 0)
        goto LABEL_34;
      LODWORD(v24) = v85;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v85)
        goto LABEL_35;
      v71 = v70 & (-2 << (v103 & 0x3F));
      if (v71)
      {
        v28 = __clz(__rbit64(v71)) | v103 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v72 = v29 + 1;
        v73 = (v28 + 63) >> 6;
        if (v29 + 1 < v73)
        {
          v74 = *(_QWORD *)(v86 + 8 * v72);
          if (v74)
          {
LABEL_28:
            v28 = __clz(__rbit64(v74)) + (v72 << 6);
          }
          else
          {
            while (v73 - 2 != v29)
            {
              v74 = *(_QWORD *)(v77 + 8 * v29++);
              if (v74)
              {
                v72 = v29 + 1;
                goto LABEL_28;
              }
            }
          }
        }
      }
      v25 = v101 + 1;
      v23 = v28;
      if (v101 + 1 == v84)
        return v22;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  return v22;
}

_QWORD *sub_100513650(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v2 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  __chkstk_darwin(v2);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_100600938(0, v3, 0);
    v4 = sub_10051FA48(a1);
    if (v4 < 0 || v4 >= 1 << *(_BYTE *)(a1 + 32))
    {
      __break(1u);
    }
    else if ((*(_QWORD *)(a1 + 64 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) != 0)
    {
      if (*(_DWORD *)(a1 + 36) == v5)
      {
        v6 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v4);
        v7 = sub_1004BE310(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v4), *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v4 + 8));
        UnknownStorage.init()(v7);
        __asm { BR              X10 }
      }
LABEL_10:
      __break(1u);
      JUMPOUT(0x100513A0CLL);
    }
    __break(1u);
    goto LABEL_10;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100513A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v13;

  v6[8] = 0x1000000000000;
  v6[9] = &_swiftEmptySetSingleton;
  v6[10] = &_swiftEmptySetSingleton;
  v13 = type metadata accessor for CRLRootContainerItem(0);
  if (swift_dynamicCastClass(a1, v13))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(rootObject:store:context:channel:options:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 40, "You should not provide a CRLRootContainerItem. Pass a CRLBoard instead.", 71, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(rootObject:store:context:channel:options:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2u, 40, (uint64_t)"You should not provide a CRLRootContainerItem. Pass a CRLBoard instead.", 71, 2u);
  }
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t sub_100513BC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v2[47] = a1;
  v2[48] = v1;
  v3 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v2[49] = v3;
  v2[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[51] = swift_task_alloc(v4);
  v2[52] = swift_task_alloc(v4);
  v5 = type metadata accessor for CRLProto_Data(0);
  v2[53] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[54] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[55] = swift_task_alloc(v7);
  v2[56] = swift_task_alloc(v7);
  v8 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  v2[57] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[58] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[59] = swift_task_alloc(v10);
  v2[60] = swift_task_alloc(v10);
  v11 = type metadata accessor for CocoaError.Code(0);
  v2[61] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[62] = v12;
  v2[63] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  v2[64] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[65] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[66] = swift_task_alloc(v15);
  v2[67] = swift_task_alloc(v15);
  v16 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E1700) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[68] = swift_task_alloc(v16);
  v2[69] = swift_task_alloc(v16);
  v2[70] = swift_task_alloc(v16);
  v2[71] = swift_task_alloc(v16);
  v17 = sub_1004B804C(&qword_1013F13B0);
  v2[72] = v17;
  v2[73] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[74] = swift_task_alloc(v18);
  v2[75] = swift_task_alloc(v18);
  v2[76] = swift_task_alloc(v18);
  v19 = type metadata accessor for URL(0);
  v2[77] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v2[78] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[79] = swift_task_alloc(v21);
  v2[80] = swift_task_alloc(v21);
  v2[81] = swift_task_alloc(v21);
  v2[82] = swift_task_alloc(v21);
  v22 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v2[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for UUID(0);
  v2[84] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[85] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[86] = swift_task_alloc(v25);
  v2[87] = swift_task_alloc(v25);
  v2[88] = swift_task_alloc(v25);
  v2[89] = swift_task_alloc(v25);
  v2[90] = swift_task_alloc(v25);
  v2[91] = swift_task_alloc(v25);
  return swift_task_switch(sub_100513EE4, 0, 0);
}

uint64_t sub_100513EE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[91];
  v2 = v0[89];
  v3 = v0[85];
  v16 = v0[84];
  v17 = v0[90];
  v4 = v0[48];
  v5 = *(_QWORD *)(v4 + 16);
  v0[92] = v5;
  v6 = *(_QWORD *)(v4 + 24);
  v0[93] = v6;
  v0[94] = swift_getObjectType(v5);
  v7 = *(uint64_t (**)(void))(v6 + 16);
  v0[95] = v7;
  v8 = v7();
  v10 = v9;
  ObjectType = swift_getObjectType(v8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(ObjectType, v10);
  swift_unknownObjectRelease(v8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[96] = v12;
  v12(v2, v1, v16);
  swift_beginAccess(v4 + 80, v0 + 33, 33, 0);
  sub_100AD569C(v17, v2);
  swift_endAccess(v0 + 33);
  v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[97] = v13;
  v13(v17, v16);
  v14 = (_QWORD *)swift_task_alloc(dword_1013E1714);
  v0[98] = v14;
  *v14 = v0;
  v14[1] = sub_100514054;
  return sub_100516E20(v5, v6);
}

uint64_t sub_100514054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 784);
  *(_QWORD *)(*(_QWORD *)v1 + 792) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100516C14;
  else
    v3 = sub_1005140FC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005140FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  char *v16;
  id v17;
  void *v18;
  os_unfair_lock_s *v19;
  id v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  void (*v38)(uint64_t, unint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  void (*v66)(uint64_t);
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  int v93;
  Swift::Bool v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  __n128 v108;
  int v109;
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t, __n128);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  __n128 v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t inited;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t, uint64_t, uint64_t);
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _OWORD *v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  __n128 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  NSURL *v203;
  void *v204;
  void *v205;
  id v206;
  unint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  char v222;
  char v223;
  __n128 v224;
  uint64_t v225;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void (*v234)(uint64_t, uint64_t, __n128);
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  __n128 v239;
  void (*v240)(uint64_t, uint64_t);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(uint64_t, uint64_t);
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void *v250;
  _QWORD *v251;
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t ObjectType;
  unint64_t v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _OWORD *v270;
  uint64_t v271;
  void (*v272)(uint64_t, uint64_t, double);
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  _QWORD *v277;
  uint64_t v278;
  double v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  void (*v291)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v292;
  uint64_t (*v293)(uint64_t, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void *__src;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  Swift::Bool v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  int v314;
  uint64_t v315;
  void (*v316)(uint64_t, uint64_t, uint64_t);
  uint64_t v317;
  void (*v318)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t (*v325)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v326)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v327;
  uint64_t v328;
  os_unfair_lock_s *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;

  v1 = *(_QWORD *)(v0 + 672);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = (uint64_t *)(v3 + 72);
  swift_beginAccess(v3 + 72, v0 + 168, 0, 0);
  v5 = sub_100D10498(0, *(_QWORD *)(*(_QWORD *)(v3 + 72) + 16), 0, (unint64_t)_swiftEmptyArrayStorage);
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + 16);
  v7 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v8 = Dictionary.init(minimumCapacity:)(v6, v1, v2, v7);
  v9 = v8;
  if ((*(_BYTE *)(v3 + 56) & 2) != 0)
  {
    v333 = v0 + 192;
    v10 = *(char **)(*(_QWORD *)(v0 + 384) + 32);
    v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
    v12 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
    v13 = *(void **)&v10[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
    if (v13)
    {
      v14 = *(char **)&v10[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
    }
    else
    {
      v15 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
      v16 = v10;
      v17 = sub_100C7EE84((uint64_t)v16);

      v18 = *(void **)&v10[v12];
      *(_QWORD *)&v10[v12] = v17;
      v14 = (char *)v17;

      v13 = 0;
    }
    *(_QWORD *)(v0 + 800) = v14;
    v19 = *(os_unfair_lock_s **)(v11 + 16);
    v20 = v13;
    os_unfair_lock_unlock(v19);
    v21 = *v4;
    *(_QWORD *)(v0 + 808) = *v4;
    v22 = *(_BYTE *)(v21 + 32);
    *(_BYTE *)(v0 + 936) = v22;
    v23 = 1 << v22;
    if (v23 < 64)
      v24 = ~(-1 << v23);
    else
      v24 = -1;
    v25 = v24 & *(_QWORD *)(v21 + 56);
    *(_QWORD *)(v0 + 816) = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
    v26 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache;
    *(_QWORD *)(v0 + 824) = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache;
    v27 = &v14[v26];
    *(_QWORD *)(v0 + 832) = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL;
    swift_bridgeObjectRetain(v21);
    swift_beginAccess(v27, v0 + 216, 0, 0);
    v28 = 0;
    v29 = *(_QWORD *)(v0 + 792);
LABEL_10:
    *(_QWORD *)(v0 + 848) = v5;
    *(_QWORD *)(v0 + 840) = v9;
    *(_QWORD *)(v0 + 856) = v29;
    if (v25)
    {
LABEL_11:
      v30 = (v25 - 1) & v25;
      v31 = __clz(__rbit64(v25)) | (v28 << 6);
      v32 = *(_QWORD *)(v0 + 808);
      goto LABEL_23;
    }
    while (1)
    {
      if (__OFADD__(v28++, 1))
      {
        __break(1u);
        goto LABEL_104;
      }
      v34 = (unint64_t)((1 << *(_BYTE *)(v0 + 936)) + 63) >> 6;
      v32 = *(_QWORD *)(v0 + 808);
      if (v28 >= v34)
        goto LABEL_94;
      v35 = v32 + 56;
      v36 = *(_QWORD *)(v32 + 56 + 8 * v28);
      if (!v36)
      {
        v37 = v28 + 1;
        if (v28 + 1 >= v34)
          goto LABEL_94;
        v36 = *(_QWORD *)(v35 + 8 * v37);
        if (!v36)
        {
          v37 = v28 + 2;
          if (v28 + 2 >= v34)
            goto LABEL_94;
          v36 = *(_QWORD *)(v35 + 8 * v37);
          if (!v36)
          {
            v37 = v28 + 3;
            if (v28 + 3 >= v34)
            {
LABEL_94:
              v250 = *(void **)(v0 + 800);
              (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 680) + 56))(*(_QWORD *)(v0 + 664), 1, 1, *(_QWORD *)(v0 + 672));
              v249 = v32;
LABEL_95:
              swift_release(v249);

              v324 = *(_QWORD *)(v0 + 848);
              v332 = *(_QWORD *)(v0 + 840);
              goto LABEL_96;
            }
            v36 = *(_QWORD *)(v35 + 8 * v37);
            if (!v36)
            {
              while (1)
              {
                v28 = v37 + 1;
                if (__OFADD__(v37, 1))
                  break;
                if (v28 >= v34)
                  goto LABEL_94;
                v36 = *(_QWORD *)(v35 + 8 * v28);
                ++v37;
                if (v36)
                  goto LABEL_22;
              }
LABEL_104:
              __break(1u);
            }
          }
        }
        v28 = v37;
      }
LABEL_22:
      v30 = (v36 - 1) & v36;
      v31 = __clz(__rbit64(v36)) + (v28 << 6);
LABEL_23:
      *(_QWORD *)(v0 + 872) = v30;
      *(_QWORD *)(v0 + 864) = v28;
      v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 768);
      v39 = *(_QWORD *)(v0 + 680);
      v40 = *(_QWORD *)(v0 + 672);
      v41 = *(_QWORD *)(v0 + 664);
      v42 = *(_QWORD *)(v32 + 48);
      v43 = *(_QWORD *)(v39 + 72);
      *(_QWORD *)(v0 + 880) = v43;
      v38(v41, v42 + v43 * v31, v40);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v40);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v41, 1, v40) == 1)
      {
        v249 = *(_QWORD *)(v0 + 808);
        v250 = *(void **)(v0 + 800);
        goto LABEL_95;
      }
      v44 = *(_QWORD *)(v0 + 824);
      v45 = *(_QWORD *)(v0 + 816);
      v46 = *(_QWORD *)(v0 + 800);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 680) + 32))(*(_QWORD *)(v0 + 704), *(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 672));
      v47 = *(_QWORD *)(v46 + v45);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v47 + 16));
      v48 = *(_QWORD *)(v46 + v44);
      if (*(_QWORD *)(v48 + 16))
      {
        v49 = *(_QWORD *)(v0 + 704);
        swift_bridgeObjectRetain(v48);
        v50 = sub_100842EFC(v49);
        v51 = *(_QWORD *)(v0 + 568);
        v52 = *(_QWORD *)(v0 + 520);
        v53 = *(_QWORD *)(v0 + 512);
        if ((v54 & 1) != 0)
        {
          sub_1004CB7BC(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v52 + 72) * v50, *(_QWORD *)(v0 + 568), (uint64_t *)&unk_1013F13A0);
          v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
          v55(v51, 0, 1, v53);
        }
        else
        {
          v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
          v55(*(_QWORD *)(v0 + 568), 1, 1, v53);
        }
        swift_bridgeObjectRelease(v48);
      }
      else
      {
        v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 520) + 56);
        v55(*(_QWORD *)(v0 + 568), 1, 1, *(_QWORD *)(v0 + 512));
      }
      *(_QWORD *)(v0 + 888) = v55;
      v56 = *(_QWORD *)(v0 + 568);
      v57 = *(_QWORD *)(v0 + 520);
      v58 = *(_QWORD *)(v0 + 512);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v47 + 16));
      v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
      *(_QWORD *)(v0 + 896) = v59;
      if (v59(v56, 1, v58) == 1)
      {
        sub_1004CB800(*(_QWORD *)(v0 + 568), (uint64_t *)&unk_1013E1700);
        goto LABEL_34;
      }
      v328 = v29;
      v60 = *(_QWORD *)(v0 + 648);
      v61 = *(_QWORD *)(v0 + 616);
      v62 = *(_QWORD *)(v0 + 584);
      v63 = *(_QWORD *)(v0 + 576);
      v64 = *(_DWORD *)(*(_QWORD *)(v0 + 568) + *(int *)(*(_QWORD *)(v0 + 512) + 48));
      v65 = *(int *)(v63 + 48);
      v66 = *(void (**)(uint64_t))(*(_QWORD *)(v0 + 624) + 32);
      v66(v62);
      *(_DWORD *)(v62 + v65) = v64;
      v67 = *(_DWORD *)(v62 + *(int *)(v63 + 48));
      ((void (*)(uint64_t, uint64_t, uint64_t))v66)(v60, v62, v61);
      if ((v67 & 2) == 0)
        break;
      v80 = *(_QWORD *)(v0 + 624);
      v81 = *(_QWORD *)(v0 + 616);
      v82 = *(_QWORD *)(v0 + 608);
      if ((v67 & 4) != 0)
      {
        ((void (*)(_QWORD, _QWORD, _QWORD))v66)(*(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 616));
        v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
        v83(v82, 0, 1, v81);
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v80 + 8))(*(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 616));
        v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56);
        v83(v82, 1, 1, v81);
      }
      v29 = v328;
LABEL_70:
      v171 = *(_QWORD *)(v0 + 624);
      v172 = *(_QWORD *)(v0 + 616);
      v173 = *(_QWORD *)(v0 + 608);
      v174 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
      if (v174(v173, 1, v172) != 1)
      {
        v330 = v29;
        v175 = *(_QWORD **)(v0 + 480);
        v176 = *(_QWORD *)(v0 + 456);
        v177 = *(_QWORD *)(v0 + 424);
        v178 = *(_QWORD *)(v0 + 432);
        v319 = *(_QWORD *)(v0 + 416);
        v293 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 32);
        v179 = v293(*(_QWORD *)(v0 + 656), v173, v172);
        *v175 = 0;
        v175[1] = 0xE000000000000000;
        v175[2] = 0;
        UnknownStorage.init()(v179);
        v180 = (uint64_t)v175 + *(int *)(v176 + 28);
        v326 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v178 + 56);
        v181 = v326(v180, 1, 1, v177);
        v182 = UUID.uuid.getter(v181);
        *(_QWORD *)(v0 + 920) = v182;
        *(_BYTE *)(v0 + 928) = v183;
        *(_BYTE *)(v0 + 929) = v184;
        *(_BYTE *)(v0 + 930) = v185;
        *(_BYTE *)(v0 + 931) = v186;
        *(_BYTE *)(v0 + 932) = v187;
        *(_BYTE *)(v0 + 933) = v188;
        *(_BYTE *)(v0 + 934) = v189;
        *(_BYTE *)(v0 + 935) = v190;
        UUID.uuid.getter(v182);
        v191 = sub_1005CB82C((_BYTE *)(v0 + 920), 16);
        v312 = v192;
        v315 = v191;
        sub_1004CB7BC(v180, v319, (uint64_t *)&unk_1013E16F0);
        v193 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v319, 1, v177);
        v194 = *(_OWORD **)(v0 + 448);
        if ((_DWORD)v193 == 1)
        {
          v195 = *(_QWORD *)(v0 + 416);
          *v194 = xmmword_100EF78C0;
          UnknownStorage.init()(v193);
          sub_1004CB800(v195, (uint64_t *)&unk_1013E16F0);
        }
        else
        {
          sub_1004B84E0(*(_QWORD *)(v0 + 416), (uint64_t)v194, type metadata accessor for CRLProto_Data);
        }
        v320 = *(_QWORD *)(v0 + 848);
        v196 = *(uint64_t **)(v0 + 480);
        v309 = *(_QWORD *)(v0 + 472);
        v197 = *(_QWORD *)(v0 + 448);
        v198 = *(_QWORD *)(v0 + 424);
        sub_1004BBBC8(*(_QWORD *)v197, *(_QWORD *)(v197 + 8));
        *(_QWORD *)v197 = v315;
        *(_QWORD *)(v197 + 8) = v312;
        sub_1004CB800(v180, (uint64_t *)&unk_1013E16F0);
        sub_1004B84E0(v197, v180, type metadata accessor for CRLProto_Data);
        v199.n128_f64[0] = ((double (*)(uint64_t, _QWORD, uint64_t, uint64_t))v326)(v180, 0, 1, v198);
        v200 = URL.lastPathComponent.getter(v199);
        v202 = v201;
        swift_bridgeObjectRelease(v196[1]);
        *v196 = v200;
        v196[1] = v202;
        URL._bridgeToObjectiveC()(v203);
        v205 = v204;
        v206 = objc_msgSend(v204, "crl_fileSize");

        v196[2] = (uint64_t)v206;
        sub_1004B8460((uint64_t)v196, v309, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        v208 = *(_QWORD *)(v320 + 16);
        v207 = *(_QWORD *)(v320 + 24);
        v209 = v208 + 1;
        if (v208 >= v207 >> 1)
        {
          v248 = sub_100D10498(v207 > 1, v208 + 1, 1, *(_QWORD *)(v0 + 848));
          v209 = v208 + 1;
          v327 = v248;
        }
        else
        {
          v327 = *(_QWORD *)(v0 + 848);
        }
        v210 = *(_QWORD *)(v0 + 704);
        v211 = *(_QWORD *)(v0 + 688);
        v212 = *(_QWORD *)(v0 + 672);
        v316 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
        v321 = *(_QWORD *)(v0 + 656);
        v213 = *(_QWORD *)(v0 + 624);
        v214 = *(_QWORD *)(v0 + 616);
        v215 = *(_QWORD *)(v0 + 600);
        v217 = *(_QWORD *)(v0 + 464);
        v216 = *(_QWORD *)(v0 + 472);
        *(_QWORD *)(v327 + 16) = v209;
        sub_1004B84E0(v216, v327+ ((*(unsigned __int8 *)(v217 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v217 + 80))+ *(_QWORD *)(v217 + 72) * v208, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        v316(v211, v210, v212);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v215, v321, v214);
        v83(v215, 0, 1, v214);
        v218 = v174(v215, 1, v214);
        v219 = *(_QWORD *)(v0 + 840);
        if (v218 == 1)
        {
          v220 = *(_QWORD *)(v0 + 688);
          sub_1004CB800(*(_QWORD *)(v0 + 600), &qword_1013E04D0);
          swift_bridgeObjectRetain(v219);
          v221 = sub_100842EFC(v220);
          v223 = v222;
          v224 = swift_bridgeObjectRelease(v219);
          v225 = *(_QWORD *)(v0 + 840);
          v5 = v327;
          if ((v223 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 840));
            *(_QWORD *)(v0 + 352) = v225;
            v227 = v0 + 840;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_10082DFB4();
              v227 = v0 + 352;
            }
            v228 = *(_QWORD *)(v0 + 624);
            v229 = *(_QWORD *)(v0 + 616);
            v230 = *(_QWORD *)(v0 + 592);
            (*(void (**)(unint64_t, _QWORD))(v0 + 776))(*(_QWORD *)(*(_QWORD *)v227 + 48) + *(_QWORD *)(v0 + 880) * v221, *(_QWORD *)(v0 + 672));
            v231 = *(_QWORD *)(v0 + 352);
            v293(v230, *(_QWORD *)(v231 + 56) + *(_QWORD *)(v228 + 72) * v221, v229);
            v232 = v231;
            sub_10051DB94(v221, v231, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
            v224 = swift_bridgeObjectRelease(0x8000000000000000);
            v233 = 0;
          }
          else
          {
            v232 = *(_QWORD *)(v0 + 840);
            v233 = 1;
          }
          v29 = v330;
          v240 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
          v241 = *(_QWORD *)(v0 + 688);
          v242 = *(_QWORD *)(v0 + 672);
          v243 = *(_QWORD *)(v0 + 592);
          ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))v83)(v243, v233, 1, *(_QWORD *)(v0 + 616), v224);
          v240(v241, v242);
          sub_1004CB800(v243, &qword_1013E04D0);
          v9 = v232;
        }
        else
        {
          v234 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 776);
          v235 = *(_QWORD *)(v0 + 688);
          v236 = *(_QWORD *)(v0 + 672);
          v237 = *(_QWORD *)(v0 + 632);
          v293(v237, *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 616));
          v238 = swift_isUniquelyReferenced_nonNull_native(v219);
          sub_100826B40(v237, v235, v238);
          v9 = v219;
          v239 = swift_bridgeObjectRelease(0x8000000000000000);
          v234(v235, v236, v239);
          v5 = v327;
          v29 = v330;
        }
        v244 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
        v245 = *(_QWORD *)(v0 + 704);
        v246 = *(_QWORD *)(v0 + 672);
        v247 = *(_QWORD *)(v0 + 480);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 8))(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 616));
        v244(v245, v246);
        sub_1004B84A4(v247, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        v25 = *(_QWORD *)(v0 + 872);
        v28 = *(_QWORD *)(v0 + 864);
        goto LABEL_10;
      }
      (*(void (**)(_QWORD, _QWORD))(v0 + 776))(*(_QWORD *)(v0 + 704), *(_QWORD *)(v0 + 672));
      sub_1004CB800(v173, &qword_1013E04D0);
      v25 = *(_QWORD *)(v0 + 872);
      v28 = *(_QWORD *)(v0 + 864);
      *(_QWORD *)(v0 + 856) = v29;
      if (v25)
        goto LABEL_11;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 8))(*(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 616));
LABEL_34:
    v68 = *(_QWORD *)(v0 + 824);
    v69 = *(_QWORD *)(v0 + 800);
    v70 = *(_QWORD *)(v69 + *(_QWORD *)(v0 + 816));
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v70 + 16));
    v71 = *(_QWORD *)(v69 + v68);
    if (*(_QWORD *)(v71 + 16))
    {
      v72 = *(_QWORD *)(v0 + 704);
      swift_bridgeObjectRetain(v71);
      v73 = sub_100842EFC(v72);
      v74 = *(_QWORD *)(v0 + 560);
      if ((v75 & 1) != 0)
      {
        v76 = *(_QWORD *)(v0 + 512);
        sub_1004CB7BC(*(_QWORD *)(v71 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 520) + 72) * v73, *(_QWORD *)(v0 + 560), (uint64_t *)&unk_1013F13A0);
        v77 = v74;
        v78 = 0;
        v79 = v76;
      }
      else
      {
        v79 = *(_QWORD *)(v0 + 512);
        v77 = *(_QWORD *)(v0 + 560);
        v78 = 1;
      }
      v55(v77, v78, 1, v79);
      swift_bridgeObjectRelease(v71);
    }
    else
    {
      v55(*(_QWORD *)(v0 + 560), 1, 1, *(_QWORD *)(v0 + 512));
    }
    v84 = *(_QWORD *)(v0 + 560);
    v85 = *(_QWORD *)(v0 + 512);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v70 + 16));
    if (v59(v84, 1, v85) == 1)
    {
      sub_1004CB800(*(_QWORD *)(v0 + 560), (uint64_t *)&unk_1013E1700);
      v251 = (_QWORD *)swift_task_alloc(dword_10140C614);
      *(_QWORD *)(v0 + 904) = v251;
      *v251 = v0;
      v251[1] = sub_1005156B4;
      return sub_100C780D0(*(_QWORD *)(v0 + 704));
    }
    v86 = *(_QWORD *)(v0 + 640);
    v87 = *(_QWORD *)(v0 + 616);
    v88 = *(_QWORD *)(v0 + 560);
    v89 = *(_QWORD *)(v0 + 536);
    v90 = *(_QWORD *)(v0 + 528);
    v91 = *(int *)(*(_QWORD *)(v0 + 512) + 48);
    v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 624) + 32);
    v92(v89, v88, v87);
    v93 = *(_DWORD *)(v88 + v91);
    v92(v90, v89, v87);
    v92(v86, v90, v87);
    v94 = URL.checkResourceIsReachable()();
    v96 = v95;
    if (v95)
    {
      v98 = *(_QWORD *)(v0 + 496);
      v97 = *(_QWORD *)(v0 + 504);
      v99 = *(_QWORD *)(v0 + 488);
      v100 = swift_errorRetain(v96);
      static CocoaError.fileNoSuchFile.getter(v100);
      v101 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
      v102 = static _ErrorCodeProtocol.~= infix(_:_:)(v97, v96, v99, v101);
      swift_errorRelease(v96);
      v103 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      v103(v97, v99);
      if ((v102 & 1) == 0)
      {
        v104 = *(_QWORD *)(v0 + 504);
        v105 = *(_QWORD *)(v0 + 488);
        v106 = swift_errorRetain(v96);
        static CocoaError.fileReadNoSuchFile.getter(v106);
        v107 = static _ErrorCodeProtocol.~= infix(_:_:)(v104, v96, v105, v101);
        swift_errorRelease(v96);
        v103(v104, v105);
        if ((v107 & 1) == 0)
        {
          swift_willThrow(v108);
          if (qword_1013DD858 != -1)
            swift_once(&qword_1013DD858, sub_100A05554);
          swift_beginAccess(&static OS_os_log.boardStore, v0 + 240, 0, 0);
          v154 = (void *)static OS_os_log.boardStore;
          v155 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v155, v0 + 16);
          *(_OWORD *)(inited + 16) = xmmword_100EF5550;
          v157 = v154;
          v158 = URL.path.getter(v157);
          v160 = v159;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          v161 = sub_1004CFC2C();
          *(_QWORD *)(inited + 64) = v161;
          *(_QWORD *)(inited + 32) = v158;
          *(_QWORD *)(inited + 40) = v160;
          swift_getErrorValue(v96, v0 + 344, v0 + 312);
          v162 = Error.publicDescription.getter(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 328));
          *(_QWORD *)(inited + 96) = &type metadata for String;
          *(_QWORD *)(inited + 104) = v161;
          *(_QWORD *)(inited + 72) = v162;
          *(_QWORD *)(inited + 80) = v163;
          swift_getErrorValue(v96, v0 + 336, v0 + 288);
          v164 = Error.fullDescription.getter(*(_QWORD *)(v0 + 296));
          *(_QWORD *)(inited + 136) = &type metadata for String;
          *(_QWORD *)(inited + 144) = v161;
          *(_QWORD *)(inited + 112) = v164;
          *(_QWORD *)(inited + 120) = v165;
          v166 = static os_log_type_t.error.getter(v164);
          sub_100A06EBC((uint64_t)v157, &_mh_execute_header, v166, "Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
          swift_errorRelease(v96);
          swift_setDeallocating(inited);
          v167 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 3, v167);

          goto LABEL_68;
        }
      }
      swift_errorRelease(v96);
      v308 = 0;
      v109 = 2;
      if ((v93 & 1) != 0)
        goto LABEL_47;
    }
    else
    {
      v308 = v94;
      if (v94)
        v109 = 6;
      else
        v109 = 2;
      if ((v93 & 1) != 0)
LABEL_47:
        v109 |= 1u;
    }
    v314 = v109;
    v318 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 888);
    v325 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 896);
    v110 = *(_QWORD *)(v0 + 800);
    v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
    v112 = *(_QWORD *)(v0 + 704);
    v113 = *(_QWORD *)(v0 + 696);
    v114 = *(_QWORD *)(v0 + 672);
    v115 = *(_QWORD *)(v0 + 640);
    v116 = *(_QWORD *)(v0 + 624);
    v117 = *(_QWORD *)(v0 + 616);
    v118 = *(_QWORD *)(v0 + 552);
    v119 = *(_QWORD *)(v0 + 512);
    v311 = v110 + *(_QWORD *)(v0 + 824);
    v329 = *(os_unfair_lock_s **)(*(_QWORD *)(v110 + *(_QWORD *)(v0 + 816)) + 16);
    os_unfair_lock_lock(v329);
    v111(v113, v112, v114);
    v120 = *(int *)(v119 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16))(v118, v115, v117);
    *(_DWORD *)(v118 + v120) = v314;
    v318(v118, 0, 1, v119);
    swift_beginAccess(v311, v333, 33, 0);
    v121 = v325(v118, 1, v119);
    v122 = *(_QWORD *)(v0 + 824);
    v123 = *(_QWORD *)(v0 + 800);
    if (v121 == 1)
    {
      v124 = *(_QWORD *)(v0 + 696);
      sub_1004CB800(*(_QWORD *)(v0 + 552), (uint64_t *)&unk_1013E1700);
      v125 = *(_QWORD *)(v123 + v122);
      swift_bridgeObjectRetain(v125);
      v126 = sub_100842EFC(v124);
      LOBYTE(v124) = v127;
      v128 = swift_bridgeObjectRelease(v125);
      if ((v124 & 1) != 0)
      {
        v129 = *(_QWORD *)(v0 + 824);
        v130 = *(_QWORD *)(v0 + 800);
        v131 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v130 + v129));
        v132 = *(_QWORD *)(v130 + v129);
        *(_QWORD *)(v0 + 368) = v132;
        *(_QWORD *)(v130 + v129) = 0x8000000000000000;
        if ((v131 & 1) == 0)
        {
          sub_10082CC74();
          v132 = *(_QWORD *)(v0 + 368);
        }
        v133 = *(_QWORD *)(v0 + 824);
        v134 = *(_QWORD *)(v0 + 800);
        v135 = *(_QWORD *)(v0 + 544);
        v136 = *(_QWORD *)(v0 + 520);
        (*(void (**)(unint64_t, _QWORD))(v0 + 776))(*(_QWORD *)(v132 + 48) + *(_QWORD *)(v0 + 880) * v126, *(_QWORD *)(v0 + 672));
        v137 = *(_QWORD *)(v0 + 368);
        sub_1004C4938(*(_QWORD *)(v137 + 56) + *(_QWORD *)(v136 + 72) * v126, v135, (uint64_t *)&unk_1013F13A0);
        sub_10051A120(v126, v137);
        v138 = *(_QWORD *)(v134 + v133);
        *(_QWORD *)(v134 + v133) = v137;
        v128 = swift_bridgeObjectRelease(v138);
        v139 = 0;
      }
      else
      {
        v139 = 1;
      }
      v147 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
      v148 = *(_QWORD *)(v0 + 696);
      v149 = *(_QWORD *)(v0 + 672);
      v150 = *(_QWORD *)(v0 + 544);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))(v0 + 888))(v150, v139, 1, *(_QWORD *)(v0 + 512), v128);
      v147(v148, v149);
      sub_1004CB800(v150, (uint64_t *)&unk_1013E1700);
    }
    else
    {
      v140 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 776);
      v141 = *(_QWORD *)(v0 + 696);
      v142 = *(_QWORD *)(v0 + 672);
      v143 = *(_QWORD *)(v0 + 528);
      sub_1004C4938(*(_QWORD *)(v0 + 552), v143, (uint64_t *)&unk_1013F13A0);
      v144 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v123 + v122));
      v334 = *(_QWORD *)(v123 + v122);
      *(_QWORD *)(v123 + v122) = 0x8000000000000000;
      sub_100825B60(v143, v141, v144);
      v145 = *(_QWORD *)(v123 + v122);
      *(_QWORD *)(v123 + v122) = v334;
      v146 = swift_bridgeObjectRelease(v145);
      v140(v141, v142, v146);
    }
    swift_endAccess(v333);
    os_unfair_lock_unlock(v329);
    if (v308)
    {
      v151 = *(_QWORD *)(v0 + 624);
      v152 = *(_QWORD *)(v0 + 616);
      v153 = *(_QWORD *)(v0 + 608);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v151 + 32))(v153, *(_QWORD *)(v0 + 640), v152);
      v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v151 + 56);
      v83(v153, 0, 1, v152);
LABEL_69:
      v29 = 0;
      goto LABEL_70;
    }
LABEL_68:
    v168 = *(_QWORD *)(v0 + 624);
    v169 = *(_QWORD *)(v0 + 616);
    v170 = *(_QWORD *)(v0 + 608);
    (*(void (**)(_QWORD, uint64_t))(v168 + 8))(*(_QWORD *)(v0 + 640), v169);
    v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v168 + 56);
    v83(v170, 1, 1, v169);
    goto LABEL_69;
  }
  v332 = v8;
  v324 = v5;
LABEL_96:
  v253 = *(_QWORD *)(v0 + 432);
  v322 = *(_QWORD *)(v0 + 424);
  v255 = *(_QWORD **)(v0 + 400);
  v254 = *(_QWORD *)(v0 + 408);
  v256 = *(_QWORD *)(v0 + 384);
  v257 = *(_QWORD *)(v0 + 392);
  v258 = *(_QWORD *)(v256 + 64);
  v259 = (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 760))(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 744));
  v261 = v260;
  ObjectType = swift_getObjectType(v259);
  *(_QWORD *)(v0 + 360) = v259;
  v263 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v261 + 8) + 8) + 8))(ObjectType);
  v264 = swift_unknownObjectRelease(v259);
  if (v263 <= v258)
    v265 = v258;
  else
    v265 = v263;
  v313 = v256;
  *(_QWORD *)(v256 + 64) = v265;
  *v255 = _swiftEmptyArrayStorage;
  v255[1] = _swiftEmptyArrayStorage;
  UnknownStorage.init()(v264);
  v266 = (uint64_t)v255 + *(int *)(v257 + 28);
  v291 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v253 + 56);
  v291(v266, 1, 1, v322);
  v267 = UUID.crl_data()();
  v282 = v268;
  v283 = v267;
  sub_1004CB7BC(v266, v254, (uint64_t *)&unk_1013E16F0);
  v269 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v253 + 48))(v254, 1, v322);
  v270 = *(_OWORD **)(v0 + 440);
  if ((_DWORD)v269 == 1)
  {
    v271 = *(_QWORD *)(v0 + 408);
    *v270 = xmmword_100EF78C0;
    UnknownStorage.init()(v269);
    sub_1004CB800(v271, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 408), (uint64_t)v270, type metadata accessor for CRLProto_Data);
  }
  v272 = *(void (**)(uint64_t, uint64_t, double))(v0 + 776);
  v273 = *(_QWORD *)(v0 + 728);
  v284 = *(_QWORD *)(v0 + 720);
  v285 = *(_QWORD *)(v0 + 712);
  v286 = *(_QWORD *)(v0 + 704);
  v287 = *(_QWORD *)(v0 + 696);
  v274 = *(_QWORD *)(v0 + 672);
  v288 = *(_QWORD *)(v0 + 688);
  v289 = *(_QWORD *)(v0 + 664);
  v290 = *(_QWORD *)(v0 + 656);
  v292 = *(_QWORD *)(v0 + 648);
  v294 = *(_QWORD *)(v0 + 640);
  v295 = *(_QWORD *)(v0 + 632);
  v296 = *(_QWORD *)(v0 + 608);
  v297 = *(_QWORD *)(v0 + 600);
  v298 = *(_QWORD *)(v0 + 592);
  __src = *(void **)(v0 + 584);
  v300 = *(_QWORD *)(v0 + 568);
  v301 = *(_QWORD *)(v0 + 560);
  v302 = *(_QWORD *)(v0 + 552);
  v303 = *(_QWORD *)(v0 + 544);
  v304 = *(_QWORD *)(v0 + 536);
  v305 = *(_QWORD *)(v0 + 528);
  v306 = *(_QWORD *)(v0 + 504);
  v307 = *(_QWORD *)(v0 + 480);
  v310 = *(_QWORD *)(v0 + 472);
  v275 = *(_QWORD *)(v0 + 440);
  v276 = *(_QWORD *)(v0 + 424);
  v317 = *(_QWORD *)(v0 + 448);
  v323 = *(_QWORD *)(v0 + 416);
  v277 = *(_QWORD **)(v0 + 400);
  v331 = *(_QWORD *)(v0 + 408);
  v278 = *(_QWORD *)(v0 + 376);
  sub_1004BBBC8(*(_QWORD *)v275, *(_QWORD *)(v275 + 8));
  *(_QWORD *)v275 = v283;
  *(_QWORD *)(v275 + 8) = v282;
  sub_1004CB800(v266, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0(v275, v266, type metadata accessor for CRLProto_Data);
  v291(v266, 0, 1, v276);
  v279 = sub_100D6B5C8(*(_QWORD *)(v313 + 64));
  v281 = v280;
  v272(v273, v274, v279);
  swift_bridgeObjectRelease(*v277);
  *v277 = v281;
  swift_bridgeObjectRelease(v255[1]);
  v255[1] = v324;
  sub_1004B8460((uint64_t)v277, v278, type metadata accessor for CRLProto_ObjectMetadata);
  *(_QWORD *)(v278 + *(int *)(type metadata accessor for CRLArchivedObjectMetadataRepresentation(0) + 20)) = v332;
  sub_1004B84A4((uint64_t)v277, type metadata accessor for CRLProto_ObjectMetadata);
  swift_task_dealloc(v273);
  swift_task_dealloc(v284);
  swift_task_dealloc(v285);
  swift_task_dealloc(v286);
  swift_task_dealloc(v287);
  swift_task_dealloc(v288);
  swift_task_dealloc(v289);
  swift_task_dealloc(v290);
  swift_task_dealloc(v292);
  swift_task_dealloc(v294);
  swift_task_dealloc(v295);
  swift_task_dealloc(v296);
  swift_task_dealloc(v297);
  swift_task_dealloc(v298);
  swift_task_dealloc(__src);
  swift_task_dealloc(v300);
  swift_task_dealloc(v301);
  swift_task_dealloc(v302);
  swift_task_dealloc(v303);
  swift_task_dealloc(v304);
  swift_task_dealloc(v305);
  swift_task_dealloc(v306);
  swift_task_dealloc(v307);
  swift_task_dealloc(v310);
  swift_task_dealloc(v317);
  swift_task_dealloc(v275);
  swift_task_dealloc(v323);
  swift_task_dealloc(v331);
  swift_task_dealloc(v277);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005156B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 904);
  *(_QWORD *)(*(_QWORD *)v1 + 912) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10051573C, 0, 0);
}

uint64_t sub_10051573C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  Swift::Bool v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  int v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, __n128);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  __n128 v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t inited;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  int64_t v99;
  uint64_t v100;
  unint64_t v101;
  int64_t v102;
  void (*v103)(uint64_t, unint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  void (*v120)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  void (*v131)(uint64_t);
  int v132;
  void (*v133)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(uint64_t, uint64_t, uint64_t);
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _OWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  NSURL *v170;
  void *v171;
  void *v172;
  id v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  void (*v178)(uint64_t, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  char v192;
  char v193;
  __n128 v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(uint64_t, uint64_t, __n128);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  __n128 v206;
  void (*v207)(uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t, uint64_t);
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void (*v235)(uint64_t, uint64_t, uint64_t);
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t ObjectType;
  unint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _OWORD *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  uint64_t v264;
  double v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v269;
  void (*v270)(uint64_t, uint64_t, double);
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  void (*v279)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t (*v298)(uint64_t, uint64_t, uint64_t);
  uint64_t v299;
  int v300;
  uint64_t v301;
  uint64_t v302;
  void (*v303)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v304;
  uint64_t v305;
  uint64_t (*v306)(uint64_t, uint64_t, uint64_t);
  unint64_t v307;
  uint64_t v308;
  os_unfair_lock_s *v309;
  uint64_t (*v310)(uint64_t, uint64_t, uint64_t);
  uint64_t v311;
  Swift::Bool v312;
  void (*v313)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v314;
  uint64_t v315;

  v292 = v1 + 192;
  v2 = *(_QWORD *)(v1 + 912);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain(v4);
    v6 = UUID.uuidString.getter(v5);
    v8 = v7;
    if (v4)
    {
      v9 = HIBYTE(v4) & 0xF;
      if ((v4 & 0x2000000000000000) == 0)
        v9 = v3 & 0xFFFFFFFFFFFFLL;
      if (v9)
      {
        v10 = String._bridgeToObjectiveC()();
        v11 = String._bridgeToObjectiveC()();
        v12 = objc_msgSend(v10, "stringByAppendingPathExtension:", v11);

        if (v12)
        {
          swift_bridgeObjectRelease(v8);
          v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v8 = v13;

        }
      }
    }
    v14 = 1;
  }
  else
  {
    v6 = UUID.uuidString.getter(a1);
    v8 = v15;
    v4 = 0;
    v14 = 0;
  }
  v16 = *(_QWORD *)(v1 + 704);
  v17 = *(_QWORD *)(v1 + 640);
  URL.appendingPathComponent(_:)(v6, v8);
  swift_bridgeObjectRelease(v8);
  sub_100C76E78(v16, v17, v14);
  swift_release(v2);
  swift_bridgeObjectRelease(v4);
  LOBYTE(v18) = v14;
  while (2)
  {
    v19 = URL.checkResourceIsReachable()();
    if (!v20)
    {
      v312 = v19;
      if (v19)
        v34 = 6;
      else
        v34 = 2;
      if ((v18 & 1) == 0)
      {
LABEL_16:
        v300 = v34;
        v303 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 888);
        v306 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 896);
        v35 = *(_QWORD *)(v1 + 800);
        v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 768);
        v37 = *(_QWORD *)(v1 + 704);
        v38 = *(_QWORD *)(v1 + 696);
        v39 = *(_QWORD *)(v1 + 672);
        v40 = *(_QWORD *)(v1 + 640);
        v41 = *(_QWORD *)(v1 + 624);
        v42 = *(_QWORD *)(v1 + 616);
        v43 = *(_QWORD *)(v1 + 552);
        v44 = *(_QWORD *)(v1 + 512);
        v297 = v35 + *(_QWORD *)(v1 + 824);
        v309 = *(os_unfair_lock_s **)(*(_QWORD *)(v35 + *(_QWORD *)(v1 + 816)) + 16);
        os_unfair_lock_lock(v309);
        v36(v38, v37, v39);
        v45 = *(int *)(v44 + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v43, v40, v42);
        *(_DWORD *)(v43 + v45) = v300;
        v303(v43, 0, 1, v44);
        swift_beginAccess(v297, v292, 33, 0);
        v46 = v306(v43, 1, v44);
        v47 = *(_QWORD *)(v1 + 824);
        v48 = *(_QWORD *)(v1 + 800);
        if (v46 == 1)
        {
          v49 = *(_QWORD *)(v1 + 696);
          sub_1004CB800(*(_QWORD *)(v1 + 552), (uint64_t *)&unk_1013E1700);
          v50 = *(_QWORD *)(v48 + v47);
          swift_bridgeObjectRetain(v50);
          v51 = sub_100842EFC(v49);
          LOBYTE(v49) = v52;
          v53 = swift_bridgeObjectRelease(v50);
          if ((v49 & 1) != 0)
          {
            v54 = *(_QWORD *)(v1 + 824);
            v55 = *(_QWORD *)(v1 + 800);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v55 + v54));
            v57 = *(_QWORD *)(v55 + v54);
            *(_QWORD *)(v1 + 368) = v57;
            *(_QWORD *)(v55 + v54) = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10082CC74();
              v57 = *(_QWORD *)(v1 + 368);
            }
            v58 = *(_QWORD *)(v1 + 824);
            v59 = *(_QWORD *)(v1 + 800);
            v60 = *(_QWORD *)(v1 + 544);
            v61 = *(_QWORD *)(v1 + 520);
            (*(void (**)(unint64_t, _QWORD))(v1 + 776))(*(_QWORD *)(v57 + 48) + *(_QWORD *)(v1 + 880) * v51, *(_QWORD *)(v1 + 672));
            v62 = *(_QWORD *)(v1 + 368);
            sub_1004C4938(*(_QWORD *)(v62 + 56) + *(_QWORD *)(v61 + 72) * v51, v60, (uint64_t *)&unk_1013F13A0);
            sub_10051A120(v51, v62);
            v63 = *(_QWORD *)(v59 + v58);
            *(_QWORD *)(v59 + v58) = v62;
            v53 = swift_bridgeObjectRelease(v63);
            v64 = 0;
          }
          else
          {
            v64 = 1;
          }
          v72 = *(void (**)(uint64_t, uint64_t))(v1 + 776);
          v73 = *(_QWORD *)(v1 + 696);
          v74 = *(_QWORD *)(v1 + 672);
          v75 = *(_QWORD *)(v1 + 544);
          (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))(v1 + 888))(v75, v64, 1, *(_QWORD *)(v1 + 512), v53);
          v72(v73, v74);
          sub_1004CB800(v75, (uint64_t *)&unk_1013E1700);
        }
        else
        {
          v65 = *(void (**)(uint64_t, uint64_t, __n128))(v1 + 776);
          v66 = *(_QWORD *)(v1 + 696);
          v67 = *(_QWORD *)(v1 + 672);
          v68 = *(_QWORD *)(v1 + 528);
          sub_1004C4938(*(_QWORD *)(v1 + 552), v68, (uint64_t *)&unk_1013F13A0);
          v69 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v48 + v47));
          v315 = *(_QWORD *)(v48 + v47);
          *(_QWORD *)(v48 + v47) = 0x8000000000000000;
          sub_100825B60(v68, v66, v69);
          v70 = *(_QWORD *)(v48 + v47);
          *(_QWORD *)(v48 + v47) = v315;
          v71 = swift_bridgeObjectRelease(v70);
          v65(v66, v67, v71);
        }
        swift_endAccess(v292);
        os_unfair_lock_unlock(v309);
        if (v312)
        {
          v76 = *(_QWORD *)(v1 + 624);
          v77 = *(_QWORD *)(v1 + 616);
          v78 = *(_QWORD *)(v1 + 608);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v76 + 32))(v78, *(_QWORD *)(v1 + 640), v77);
LABEL_61:
          v133 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
          v133(v78, 0, 1, v77);
          goto LABEL_62;
        }
        goto LABEL_34;
      }
LABEL_15:
      v34 |= 1u;
      goto LABEL_16;
    }
    v21 = v20;
    v22 = *(_QWORD *)(v1 + 496);
    v23 = *(_QWORD *)(v1 + 504);
    v24 = *(_QWORD *)(v1 + 488);
    v25 = swift_errorRetain(v20);
    static CocoaError.fileNoSuchFile.getter(v25);
    v26 = sub_1004B7878((unint64_t *)&unk_1013E1720, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    v27 = static _ErrorCodeProtocol.~= infix(_:_:)(v23, v21, v24, v26);
    swift_errorRelease(v21);
    v28 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v28(v23, v24);
    if ((v27 & 1) != 0
      || (v29 = *(_QWORD *)(v1 + 504),
          v30 = *(_QWORD *)(v1 + 488),
          v31 = swift_errorRetain(v21),
          static CocoaError.fileReadNoSuchFile.getter(v31),
          v32 = static _ErrorCodeProtocol.~= infix(_:_:)(v29, v21, v30, v26),
          swift_errorRelease(v21),
          v28(v29, v30),
          (v32 & 1) != 0))
    {
      swift_errorRelease(v21);
      v312 = 0;
      v34 = 2;
      if ((v18 & 1) == 0)
        goto LABEL_16;
      goto LABEL_15;
    }
    swift_willThrow(v33);
    if (qword_1013DD858 != -1)
      swift_once(&qword_1013DD858, sub_100A05554);
    swift_beginAccess(&static OS_os_log.boardStore, v1 + 240, 0, 0);
    v79 = (void *)static OS_os_log.boardStore;
    v80 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v80, v1 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5550;
    v82 = v79;
    v83 = URL.path.getter(v82);
    v85 = v84;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v86 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v86;
    *(_QWORD *)(inited + 32) = v83;
    *(_QWORD *)(inited + 40) = v85;
    swift_getErrorValue(v21, v1 + 344, v1 + 312);
    v87 = Error.publicDescription.getter(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 328));
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v86;
    *(_QWORD *)(inited + 72) = v87;
    *(_QWORD *)(inited + 80) = v88;
    swift_getErrorValue(v21, v1 + 336, v1 + 288);
    v89 = Error.fullDescription.getter(*(_QWORD *)(v1 + 296));
    *(_QWORD *)(inited + 136) = &type metadata for String;
    *(_QWORD *)(inited + 144) = v86;
    *(_QWORD *)(inited + 112) = v89;
    *(_QWORD *)(inited + 120) = v90;
    v91 = static os_log_type_t.error.getter(v89);
    sub_100A06EBC((uint64_t)v82, &_mh_execute_header, v91, "Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
    swift_errorRelease(v21);
    swift_setDeallocating(inited);
    v92 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 3, v92);

LABEL_34:
    v76 = *(_QWORD *)(v1 + 624);
    v77 = *(_QWORD *)(v1 + 616);
    v78 = *(_QWORD *)(v1 + 608);
    (*(void (**)(_QWORD, uint64_t))(v76 + 8))(*(_QWORD *)(v1 + 640), v77);
    while (1)
    {
      v133 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
      v133(v78, 1, 1, v77);
LABEL_62:
      v134 = *(_QWORD *)(v1 + 624);
      v135 = *(_QWORD *)(v1 + 616);
      v136 = *(_QWORD *)(v1 + 608);
      v137 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
      if (v137(v136, 1, v135) == 1)
      {
        (*(void (**)(_QWORD, _QWORD))(v1 + 776))(*(_QWORD *)(v1 + 704), *(_QWORD *)(v1 + 672));
        sub_1004CB800(v136, &qword_1013E04D0);
        v93 = *(_QWORD *)(v1 + 872);
        v94 = *(_QWORD *)(v1 + 864);
        *(_QWORD *)(v1 + 856) = 0;
        if (v93)
          goto LABEL_36;
      }
      else
      {
        v310 = v137;
        v313 = v133;
        v138 = *(_QWORD **)(v1 + 480);
        v139 = *(_QWORD *)(v1 + 456);
        v140 = *(_QWORD *)(v1 + 424);
        v141 = *(_QWORD *)(v1 + 432);
        v142 = *(_QWORD *)(v1 + 416);
        v298 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 32);
        v143 = v298(*(_QWORD *)(v1 + 656), v136, v135);
        *v138 = 0;
        v138[1] = 0xE000000000000000;
        v138[2] = 0;
        UnknownStorage.init()(v143);
        v144 = (uint64_t)v138 + *(int *)(v139 + 28);
        v145 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56);
        v146 = v145(v144, 1, 1, v140);
        v147 = UUID.uuid.getter(v146);
        *(_QWORD *)(v1 + 920) = v147;
        *(_BYTE *)(v1 + 928) = v148;
        *(_BYTE *)(v1 + 929) = v149;
        *(_BYTE *)(v1 + 930) = v150;
        *(_BYTE *)(v1 + 931) = v151;
        *(_BYTE *)(v1 + 932) = v152;
        *(_BYTE *)(v1 + 933) = v153;
        *(_BYTE *)(v1 + 934) = v154;
        *(_BYTE *)(v1 + 935) = v155;
        UUID.uuid.getter(v147);
        v156 = sub_1005CB82C((_BYTE *)(v1 + 920), 16);
        v158 = v157;
        sub_1004CB7BC(v144, v142, (uint64_t *)&unk_1013E16F0);
        v159 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v142, 1, v140);
        v160 = *(_OWORD **)(v1 + 448);
        v304 = v158;
        if ((_DWORD)v159 == 1)
        {
          v161 = *(_QWORD *)(v1 + 416);
          *v160 = xmmword_100EF78C0;
          UnknownStorage.init()(v159);
          sub_1004CB800(v161, (uint64_t *)&unk_1013E16F0);
        }
        else
        {
          sub_1004B84E0(*(_QWORD *)(v1 + 416), (uint64_t)v160, type metadata accessor for CRLProto_Data);
        }
        v162 = *(_QWORD *)(v1 + 848);
        v163 = *(uint64_t **)(v1 + 480);
        v301 = *(_QWORD *)(v1 + 472);
        v164 = *(_QWORD *)(v1 + 448);
        v165 = *(_QWORD *)(v1 + 424);
        sub_1004BBBC8(*(_QWORD *)v164, *(_QWORD *)(v164 + 8));
        *(_QWORD *)v164 = v156;
        *(_QWORD *)(v164 + 8) = v304;
        sub_1004CB800(v144, (uint64_t *)&unk_1013E16F0);
        sub_1004B84E0(v164, v144, type metadata accessor for CRLProto_Data);
        v166.n128_f64[0] = ((double (*)(uint64_t, _QWORD, uint64_t, uint64_t))v145)(v144, 0, 1, v165);
        v167 = URL.lastPathComponent.getter(v166);
        v169 = v168;
        swift_bridgeObjectRelease(v163[1]);
        *v163 = v167;
        v163[1] = v169;
        URL._bridgeToObjectiveC()(v170);
        v172 = v171;
        v173 = objc_msgSend(v171, "crl_fileSize");

        v163[2] = (uint64_t)v173;
        sub_1004B8460((uint64_t)v163, v301, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        v175 = *(_QWORD *)(v162 + 16);
        v174 = *(_QWORD *)(v162 + 24);
        v176 = v175 + 1;
        v177 = *(_QWORD *)(v1 + 848);
        if (v175 >= v174 >> 1)
        {
          v236 = sub_100D10498(v174 > 1, v175 + 1, 1, v177);
          v176 = v175 + 1;
          v177 = v236;
        }
        v178 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 768);
        v179 = *(_QWORD *)(v1 + 704);
        v180 = *(_QWORD *)(v1 + 688);
        v181 = *(_QWORD *)(v1 + 672);
        v182 = *(_QWORD *)(v1 + 656);
        v183 = *(_QWORD *)(v1 + 624);
        v184 = *(_QWORD *)(v1 + 616);
        v185 = *(_QWORD *)(v1 + 600);
        v187 = *(_QWORD *)(v1 + 464);
        v186 = *(_QWORD *)(v1 + 472);
        *(_QWORD *)(v177 + 16) = v176;
        v307 = v177;
        sub_1004B84E0(v186, v177+ ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80))+ *(_QWORD *)(v187 + 72) * v175, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        v178(v180, v179, v181);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 16))(v185, v182, v184);
        v313(v185, 0, 1, v184);
        v188 = v310(v185, 1, v184);
        v189 = *(_QWORD *)(v1 + 840);
        if (v188 == 1)
        {
          v190 = *(_QWORD *)(v1 + 688);
          sub_1004CB800(*(_QWORD *)(v1 + 600), &qword_1013E04D0);
          swift_bridgeObjectRetain(v189);
          v191 = sub_100842EFC(v190);
          v193 = v192;
          v194 = swift_bridgeObjectRelease(v189);
          v189 = *(_QWORD *)(v1 + 840);
          if ((v193 & 1) != 0)
          {
            v195 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + 840));
            *(_QWORD *)(v1 + 352) = v189;
            v196 = v1 + 840;
            if (!v195)
            {
              sub_10082DFB4();
              v196 = v1 + 352;
            }
            v197 = *(_QWORD *)(v1 + 624);
            v198 = *(_QWORD *)(v1 + 616);
            v199 = *(_QWORD *)(v1 + 592);
            (*(void (**)(unint64_t, _QWORD))(v1 + 776))(*(_QWORD *)(*(_QWORD *)v196 + 48) + *(_QWORD *)(v1 + 880) * v191, *(_QWORD *)(v1 + 672));
            v189 = *(_QWORD *)(v1 + 352);
            v298(v199, *(_QWORD *)(v189 + 56) + *(_QWORD *)(v197 + 72) * v191, v198);
            sub_10051DB94(v191, v189, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
            v194 = swift_bridgeObjectRelease(0x8000000000000000);
            v200 = 0;
          }
          else
          {
            v200 = 1;
          }
          v207 = *(void (**)(uint64_t, uint64_t))(v1 + 776);
          v208 = *(_QWORD *)(v1 + 688);
          v209 = *(_QWORD *)(v1 + 672);
          v210 = *(_QWORD *)(v1 + 592);
          ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))v313)(v210, v200, 1, *(_QWORD *)(v1 + 616), v194);
          v207(v208, v209);
          sub_1004CB800(v210, &qword_1013E04D0);
        }
        else
        {
          v201 = *(void (**)(uint64_t, uint64_t, __n128))(v1 + 776);
          v202 = *(_QWORD *)(v1 + 688);
          v203 = *(_QWORD *)(v1 + 672);
          v204 = *(_QWORD *)(v1 + 632);
          v298(v204, *(_QWORD *)(v1 + 600), *(_QWORD *)(v1 + 616));
          v205 = swift_isUniquelyReferenced_nonNull_native(v189);
          sub_100826B40(v204, v202, v205);
          v206 = swift_bridgeObjectRelease(0x8000000000000000);
          v201(v202, v203, v206);
        }
        v211 = *(void (**)(uint64_t, uint64_t))(v1 + 776);
        v212 = *(_QWORD *)(v1 + 704);
        v213 = *(_QWORD *)(v1 + 672);
        v214 = *(_QWORD *)(v1 + 480);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 624) + 8))(*(_QWORD *)(v1 + 656), *(_QWORD *)(v1 + 616));
        v211(v212, v213);
        sub_1004B84A4(v214, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
        v93 = *(_QWORD *)(v1 + 872);
        v94 = *(_QWORD *)(v1 + 864);
        *(_QWORD *)(v1 + 848) = v307;
        *(_QWORD *)(v1 + 840) = v189;
        *(_QWORD *)(v1 + 856) = 0;
        if (v93)
        {
LABEL_36:
          v95 = (v93 - 1) & v93;
          v96 = __clz(__rbit64(v93)) | (v94 << 6);
          v97 = *(_QWORD *)(v1 + 808);
          goto LABEL_48;
        }
      }
      if (__OFADD__(v94++, 1))
      {
        __break(1u);
        goto LABEL_103;
      }
      v99 = (unint64_t)((1 << *(_BYTE *)(v1 + 936)) + 63) >> 6;
      v97 = *(_QWORD *)(v1 + 808);
      if (v94 >= v99)
        goto LABEL_93;
      v100 = v97 + 56;
      v101 = *(_QWORD *)(v97 + 56 + 8 * v94);
      if (!v101)
      {
        v102 = v94 + 1;
        if (v94 + 1 >= v99)
          goto LABEL_93;
        v101 = *(_QWORD *)(v100 + 8 * v102);
        if (!v101)
        {
          v102 = v94 + 2;
          if (v94 + 2 >= v99)
            goto LABEL_93;
          v101 = *(_QWORD *)(v100 + 8 * v102);
          if (!v101)
          {
            v102 = v94 + 3;
            if (v94 + 3 >= v99)
            {
LABEL_93:
              v238 = *(void **)(v1 + 800);
              (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v1 + 680) + 56))(*(_QWORD *)(v1 + 664), 1, 1, *(_QWORD *)(v1 + 672));
              v237 = v97;
              goto LABEL_94;
            }
            v101 = *(_QWORD *)(v100 + 8 * v102);
            if (!v101)
            {
              while (1)
              {
                v94 = v102 + 1;
                if (__OFADD__(v102, 1))
                  break;
                if (v94 >= v99)
                  goto LABEL_93;
                v101 = *(_QWORD *)(v100 + 8 * v94);
                ++v102;
                if (v101)
                  goto LABEL_47;
              }
LABEL_103:
              __break(1u);
            }
          }
        }
        v94 = v102;
      }
LABEL_47:
      v95 = (v101 - 1) & v101;
      v96 = __clz(__rbit64(v101)) + (v94 << 6);
LABEL_48:
      *(_QWORD *)(v1 + 872) = v95;
      *(_QWORD *)(v1 + 864) = v94;
      v103 = *(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 768);
      v104 = *(_QWORD *)(v1 + 680);
      v105 = *(_QWORD *)(v1 + 672);
      v106 = *(_QWORD *)(v1 + 664);
      v107 = *(_QWORD *)(v97 + 48);
      v108 = *(_QWORD *)(v104 + 72);
      *(_QWORD *)(v1 + 880) = v108;
      v103(v106, v107 + v108 * v96, v105);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v104 + 56))(v106, 0, 1, v105);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v106, 1, v105) == 1)
      {
        v237 = *(_QWORD *)(v1 + 808);
        v238 = *(void **)(v1 + 800);
LABEL_94:
        swift_release(v237);

        v311 = *(_QWORD *)(v1 + 848);
        v314 = *(_QWORD *)(v1 + 840);
        v239 = *(_QWORD *)(v1 + 424);
        v240 = *(_QWORD *)(v1 + 432);
        v242 = *(_QWORD **)(v1 + 400);
        v241 = *(_QWORD *)(v1 + 408);
        v243 = *(_QWORD *)(v1 + 384);
        v244 = *(_QWORD *)(v1 + 392);
        v245 = *(_QWORD *)(v243 + 64);
        v246 = (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 760))(*(_QWORD *)(v1 + 752), *(_QWORD *)(v1 + 744));
        v248 = v247;
        ObjectType = swift_getObjectType(v246);
        *(_QWORD *)(v1 + 360) = v246;
        v250 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v248 + 8) + 8) + 8))(ObjectType);
        v251 = swift_unknownObjectRelease(v246);
        if (v250 <= v245)
          v252 = v245;
        else
          v252 = v250;
        v299 = v243;
        *(_QWORD *)(v243 + 64) = v252;
        *v242 = _swiftEmptyArrayStorage;
        v242[1] = _swiftEmptyArrayStorage;
        UnknownStorage.init()(v251);
        v253 = (uint64_t)v242 + *(int *)(v244 + 28);
        v279 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v240 + 56);
        v279(v253, 1, 1, v239);
        v254 = UUID.crl_data()();
        v271 = v255;
        sub_1004CB7BC(v253, v241, (uint64_t *)&unk_1013E16F0);
        v256 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v240 + 48))(v241, 1, v239);
        v257 = *(_OWORD **)(v1 + 440);
        if ((_DWORD)v256 == 1)
        {
          v258 = *(_QWORD *)(v1 + 408);
          *v257 = xmmword_100EF78C0;
          UnknownStorage.init()(v256);
          sub_1004CB800(v258, (uint64_t *)&unk_1013E16F0);
        }
        else
        {
          sub_1004B84E0(*(_QWORD *)(v1 + 408), (uint64_t)v257, type metadata accessor for CRLProto_Data);
        }
        v270 = *(void (**)(uint64_t, uint64_t, double))(v1 + 776);
        v259 = *(_QWORD *)(v1 + 728);
        v272 = *(_QWORD *)(v1 + 720);
        v273 = *(_QWORD *)(v1 + 712);
        v274 = *(_QWORD *)(v1 + 704);
        v275 = *(_QWORD *)(v1 + 696);
        v260 = *(_QWORD *)(v1 + 672);
        v276 = *(_QWORD *)(v1 + 688);
        v277 = *(_QWORD *)(v1 + 664);
        v278 = *(_QWORD *)(v1 + 656);
        v280 = *(_QWORD *)(v1 + 648);
        v281 = *(_QWORD *)(v1 + 640);
        v282 = *(_QWORD *)(v1 + 632);
        v283 = *(_QWORD *)(v1 + 608);
        v284 = *(_QWORD *)(v1 + 600);
        v285 = *(_QWORD *)(v1 + 592);
        v286 = *(_QWORD *)(v1 + 584);
        v287 = *(_QWORD *)(v1 + 568);
        v288 = *(_QWORD *)(v1 + 560);
        v289 = *(_QWORD *)(v1 + 552);
        v290 = *(_QWORD *)(v1 + 544);
        v291 = *(_QWORD *)(v1 + 536);
        v293 = *(_QWORD *)(v1 + 528);
        v294 = *(_QWORD *)(v1 + 504);
        v295 = *(_QWORD *)(v1 + 480);
        v296 = *(_QWORD *)(v1 + 472);
        v261 = *(_QWORD *)(v1 + 440);
        v262 = *(_QWORD *)(v1 + 424);
        v302 = *(_QWORD *)(v1 + 448);
        v305 = *(_QWORD *)(v1 + 416);
        v263 = *(_QWORD **)(v1 + 400);
        v308 = *(_QWORD *)(v1 + 408);
        v264 = *(_QWORD *)(v1 + 376);
        sub_1004BBBC8(*(_QWORD *)v261, *(_QWORD *)(v261 + 8));
        *(_QWORD *)v261 = v254;
        *(_QWORD *)(v261 + 8) = v271;
        sub_1004CB800(v253, (uint64_t *)&unk_1013E16F0);
        sub_1004B84E0(v261, v253, type metadata accessor for CRLProto_Data);
        v279(v253, 0, 1, v262);
        v265 = sub_100D6B5C8(*(_QWORD *)(v299 + 64));
        v267 = v266;
        v270(v259, v260, v265);
        swift_bridgeObjectRelease(*v263);
        *v263 = v267;
        swift_bridgeObjectRelease(v242[1]);
        v242[1] = v311;
        sub_1004B8460((uint64_t)v263, v264, type metadata accessor for CRLProto_ObjectMetadata);
        *(_QWORD *)(v264 + *(int *)(type metadata accessor for CRLArchivedObjectMetadataRepresentation(0) + 20)) = v314;
        sub_1004B84A4((uint64_t)v263, type metadata accessor for CRLProto_ObjectMetadata);
        swift_task_dealloc(v259);
        swift_task_dealloc(v272);
        swift_task_dealloc(v273);
        swift_task_dealloc(v274);
        swift_task_dealloc(v275);
        swift_task_dealloc(v276);
        swift_task_dealloc(v277);
        swift_task_dealloc(v278);
        swift_task_dealloc(v280);
        swift_task_dealloc(v281);
        swift_task_dealloc(v282);
        swift_task_dealloc(v283);
        swift_task_dealloc(v284);
        swift_task_dealloc(v285);
        swift_task_dealloc(v286);
        swift_task_dealloc(v287);
        swift_task_dealloc(v288);
        swift_task_dealloc(v289);
        swift_task_dealloc(v290);
        swift_task_dealloc(v291);
        swift_task_dealloc(v293);
        swift_task_dealloc(v294);
        swift_task_dealloc(v295);
        swift_task_dealloc(v296);
        swift_task_dealloc(v302);
        swift_task_dealloc(v261);
        swift_task_dealloc(v305);
        swift_task_dealloc(v308);
        swift_task_dealloc(v263);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }
      v109 = *(_QWORD *)(v1 + 824);
      v110 = *(_QWORD *)(v1 + 816);
      v111 = *(_QWORD *)(v1 + 800);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 680) + 32))(*(_QWORD *)(v1 + 704), *(_QWORD *)(v1 + 664), *(_QWORD *)(v1 + 672));
      v112 = *(_QWORD *)(v111 + v110);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v112 + 16));
      v113 = *(_QWORD *)(v111 + v109);
      if (*(_QWORD *)(v113 + 16))
      {
        v114 = *(_QWORD *)(v1 + 704);
        swift_bridgeObjectRetain(v113);
        v115 = sub_100842EFC(v114);
        v116 = *(_QWORD *)(v1 + 568);
        v117 = *(_QWORD *)(v1 + 520);
        v118 = *(_QWORD *)(v1 + 512);
        if ((v119 & 1) != 0)
        {
          sub_1004CB7BC(*(_QWORD *)(v113 + 56) + *(_QWORD *)(v117 + 72) * v115, *(_QWORD *)(v1 + 568), (uint64_t *)&unk_1013F13A0);
          v120 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
          v120(v116, 0, 1, v118);
        }
        else
        {
          v120 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
          v120(*(_QWORD *)(v1 + 568), 1, 1, v118);
        }
        swift_bridgeObjectRelease(v113);
      }
      else
      {
        v120 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 520) + 56);
        v120(*(_QWORD *)(v1 + 568), 1, 1, *(_QWORD *)(v1 + 512));
      }
      *(_QWORD *)(v1 + 888) = v120;
      v121 = *(_QWORD *)(v1 + 568);
      v122 = *(_QWORD *)(v1 + 520);
      v123 = *(_QWORD *)(v1 + 512);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v112 + 16));
      v124 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
      *(_QWORD *)(v1 + 896) = v124;
      if (v124(v121, 1, v123) == 1)
      {
        sub_1004CB800(*(_QWORD *)(v1 + 568), (uint64_t *)&unk_1013E1700);
        goto LABEL_84;
      }
      v125 = *(_QWORD *)(v1 + 648);
      v126 = *(_QWORD *)(v1 + 616);
      v127 = *(_QWORD *)(v1 + 584);
      v128 = *(_QWORD *)(v1 + 576);
      v129 = *(_DWORD *)(*(_QWORD *)(v1 + 568) + *(int *)(*(_QWORD *)(v1 + 512) + 48));
      v130 = *(int *)(v128 + 48);
      v131 = *(void (**)(uint64_t))(*(_QWORD *)(v1 + 624) + 32);
      v131(v127);
      *(_DWORD *)(v127 + v130) = v129;
      v132 = *(_DWORD *)(v127 + *(int *)(v128 + 48));
      ((void (*)(uint64_t, uint64_t, uint64_t))v131)(v125, v127, v126);
      if ((v132 & 2) == 0)
        break;
      v76 = *(_QWORD *)(v1 + 624);
      v77 = *(_QWORD *)(v1 + 616);
      v78 = *(_QWORD *)(v1 + 608);
      if ((v132 & 4) != 0)
      {
        ((void (*)(_QWORD, _QWORD, _QWORD))v131)(*(_QWORD *)(v1 + 608), *(_QWORD *)(v1 + 648), *(_QWORD *)(v1 + 616));
        goto LABEL_61;
      }
      (*(void (**)(_QWORD, uint64_t))(v76 + 8))(*(_QWORD *)(v1 + 648), v77);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 624) + 8))(*(_QWORD *)(v1 + 648), *(_QWORD *)(v1 + 616));
LABEL_84:
    v215 = *(_QWORD *)(v1 + 824);
    v216 = *(_QWORD *)(v1 + 800);
    v217 = *(_QWORD *)(v216 + *(_QWORD *)(v1 + 816));
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v217 + 16));
    v218 = *(_QWORD *)(v216 + v215);
    if (*(_QWORD *)(v218 + 16))
    {
      v219 = *(_QWORD *)(v1 + 704);
      swift_bridgeObjectRetain(v218);
      v220 = sub_100842EFC(v219);
      v221 = *(_QWORD *)(v1 + 560);
      if ((v222 & 1) != 0)
      {
        v223 = *(_QWORD *)(v1 + 512);
        sub_1004CB7BC(*(_QWORD *)(v218 + 56) + *(_QWORD *)(*(_QWORD *)(v1 + 520) + 72) * v220, *(_QWORD *)(v1 + 560), (uint64_t *)&unk_1013F13A0);
        v224 = v221;
        v225 = 0;
        v226 = v223;
      }
      else
      {
        v226 = *(_QWORD *)(v1 + 512);
        v224 = *(_QWORD *)(v1 + 560);
        v225 = 1;
      }
      v120(v224, v225, 1, v226);
      swift_bridgeObjectRelease(v218);
    }
    else
    {
      v120(*(_QWORD *)(v1 + 560), 1, 1, *(_QWORD *)(v1 + 512));
    }
    v227 = *(_QWORD *)(v1 + 560);
    v228 = *(_QWORD *)(v1 + 512);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v217 + 16));
    if (v124(v227, 1, v228) != 1)
    {
      v229 = *(_QWORD *)(v1 + 640);
      v230 = *(_QWORD *)(v1 + 616);
      v231 = *(_QWORD *)(v1 + 560);
      v232 = *(_QWORD *)(v1 + 536);
      v233 = *(_QWORD *)(v1 + 528);
      v234 = *(int *)(*(_QWORD *)(v1 + 512) + 48);
      v235 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 624) + 32);
      v235(v232, v231, v230);
      v18 = *(_DWORD *)(v231 + v234);
      v235(v233, v232, v230);
      v235(v229, v233, v230);
      continue;
    }
    break;
  }
  sub_1004CB800(*(_QWORD *)(v1 + 560), (uint64_t *)&unk_1013E1700);
  v269 = (_QWORD *)swift_task_alloc(dword_10140C614);
  *(_QWORD *)(v1 + 904) = v269;
  *v269 = v1;
  v269[1] = sub_1005156B4;
  return sub_100C780D0(*(_QWORD *)(v1 + 704));
}

uint64_t sub_100516C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 696);
  v6 = *(_QWORD *)(v0 + 688);
  v7 = *(_QWORD *)(v0 + 664);
  v8 = *(_QWORD *)(v0 + 656);
  v9 = *(_QWORD *)(v0 + 648);
  v11 = *(_QWORD *)(v0 + 640);
  v12 = *(_QWORD *)(v0 + 632);
  v13 = *(_QWORD *)(v0 + 608);
  v14 = *(_QWORD *)(v0 + 600);
  v15 = *(_QWORD *)(v0 + 592);
  v16 = *(_QWORD *)(v0 + 584);
  v17 = *(_QWORD *)(v0 + 568);
  v18 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 544);
  v21 = *(_QWORD *)(v0 + 536);
  v22 = *(_QWORD *)(v0 + 528);
  v23 = *(_QWORD *)(v0 + 504);
  v24 = *(_QWORD *)(v0 + 480);
  v25 = *(_QWORD *)(v0 + 472);
  v26 = *(_QWORD *)(v0 + 448);
  v27 = *(_QWORD *)(v0 + 440);
  v28 = *(_QWORD *)(v0 + 416);
  v29 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 400);
  (*(void (**)(uint64_t, _QWORD))(v0 + 776))(v1, *(_QWORD *)(v0 + 672));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100516E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[20] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[21] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v6);
  v3[23] = swift_task_alloc(v6);
  return swift_task_switch(sub_100516E94, 0, 0);
}

uint64_t sub_100516E94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[18];
  v1 = v0[19];
  ObjectType = swift_getObjectType(v0[17]);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v2 + 24))(*(_QWORD *)(v1 + 40), (*(_QWORD *)(v1 + 56) >> 2) & 1, ObjectType, v2);
  v4 = *(_QWORD *)(v0[19] + 48);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E1734);
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_100516F64;
  return sub_1005174B0(v4);
}

uint64_t sub_100516F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100517428;
  else
    v3 = sub_100516FC8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100516FC8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(v4);
  sub_100511AAC(v5);
  v7 = v6;
  swift_bridgeObjectRelease(v4);
  swift_beginAccess(v2 + 72, v0 + 80, 33, 0);
  sub_10051FBE0(v7);
  swift_endAccess(v0 + 80);
  swift_bridgeObjectRelease(v7);
  if ((v3 & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v8 + 64);
    if (v1 > v9)
      v9 = v1;
    *(_QWORD *)(v8 + 64) = v9;
  }
  v10 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 208) = v10;
  *(_QWORD *)(v0 + 128) = v10;
  swift_bridgeObjectRetain(v10);
  sub_10051FAD0((_QWORD *)(v0 + 16));
  v11 = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v0 + 216) = v11;
  if (v11)
  {
    v12 = 0;
    v30 = v0 + 104;
    while (1)
    {
      *(_QWORD *)(v0 + 224) = v12;
      v14 = *(_QWORD *)(v0 + 176);
      v13 = *(_QWORD *)(v0 + 184);
      v15 = *(_QWORD *)(v0 + 168);
      v31 = *(_QWORD *)(v0 + 160);
      v16 = *(_QWORD *)(v0 + 208) + 16 * v12;
      v17 = *(_QWORD *)(v0 + 152) + 80;
      v18 = *(_QWORD *)(v16 + 32);
      *(_QWORD *)(v0 + 232) = v18;
      v19 = *(_QWORD *)(v16 + 40);
      ObjectType = swift_getObjectType(v18);
      v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 16);
      swift_unknownObjectRetain(v18);
      v22 = v21(ObjectType, v19);
      v24 = v23;
      v25 = swift_getObjectType(v22);
      (*(void (**)(uint64_t, uint64_t))(v24 + 40))(v25, v24);
      swift_unknownObjectRelease(v22);
      swift_beginAccess(v17, v30, 33, 0);
      LOBYTE(v22) = sub_100AD569C(v13, v14);
      swift_endAccess(v30);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v31);
      if ((v22 & 1) != 0)
        break;
      swift_unknownObjectRelease(v18);
      v12 = *(_QWORD *)(v0 + 224) + 1;
      if (v12 == *(_QWORD *)(v0 + 216))
        goto LABEL_9;
    }
    v29 = (_QWORD *)swift_task_alloc(dword_1013E1714);
    *(_QWORD *)(v0 + 240) = v29;
    *v29 = v0;
    v29[1] = sub_100517210;
    return sub_100516E20(v18, v19);
  }
  else
  {
LABEL_9:
    v26 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 184);
    sub_10051FD74((_QWORD *)(v0 + 128));
    swift_task_dealloc(v27);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100517210()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_10051FD74((_QWORD *)(v2 + 128));
    v4 = sub_10051746C;
  }
  else
  {
    v4 = sub_10051727C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10051727C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 232));
  v1 = *(_QWORD *)(v0 + 224) + 1;
  if (v1 == *(_QWORD *)(v0 + 216))
  {
LABEL_5:
    v15 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    sub_10051FD74((_QWORD *)(v0 + 128));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = v0 + 104;
    while (1)
    {
      *(_QWORD *)(v0 + 224) = v1;
      v3 = *(_QWORD *)(v0 + 176);
      v2 = *(_QWORD *)(v0 + 184);
      v4 = *(_QWORD *)(v0 + 168);
      v20 = *(_QWORD *)(v0 + 160);
      v5 = *(_QWORD *)(v0 + 208) + 16 * v1;
      v6 = *(_QWORD *)(v0 + 152) + 80;
      v7 = *(_QWORD *)(v5 + 32);
      *(_QWORD *)(v0 + 232) = v7;
      v8 = *(_QWORD *)(v5 + 40);
      ObjectType = swift_getObjectType(v7);
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
      swift_unknownObjectRetain(v7);
      v11 = v10(ObjectType, v8);
      v13 = v12;
      v14 = swift_getObjectType(v11);
      (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v14, v13);
      swift_unknownObjectRelease(v11);
      swift_beginAccess(v6, v19, 33, 0);
      LOBYTE(v11) = sub_100AD569C(v2, v3);
      swift_endAccess(v19);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v20);
      if ((v11 & 1) != 0)
        break;
      swift_unknownObjectRelease(v7);
      v1 = *(_QWORD *)(v0 + 224) + 1;
      if (v1 == *(_QWORD *)(v0 + 216))
        goto LABEL_5;
    }
    v18 = (_QWORD *)swift_task_alloc(dword_1013E1714);
    *(_QWORD *)(v0 + 240) = v18;
    *v18 = v0;
    v18[1] = sub_100517210;
    return sub_100516E20(v7, v8);
  }
}

uint64_t sub_100517428()
{
  uint64_t v0;
  uint64_t v1;

  sub_10051FAD0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051746C()
{
  uint64_t v0;
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 232));
  v1 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005174B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[22] = a1;
  v2[23] = v1;
  v3 = *(_QWORD *)(type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0) - 8);
  v2[24] = v3;
  v2[25] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLProto_ObjectInfo(0);
  v2[26] = v4;
  v2[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10051755C, 0, 0);
}

void sub_10051755C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[26];
  sub_100518964(v0[27]);
  v2 = sub_1004B7878(&qword_1013E1740, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25158);
  v0[28] = Message.serializedData(partial:)(0, v1, v2);
  v0[29] = v3;
  __asm { BR              X11 }
}

uint64_t sub_10051779C(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t **v6;

  v3 = (*v2)[33];
  v4 = *v2;
  v4[34] = a1;
  v4[35] = v1;
  swift_task_dealloc(v3);
  if (v1)
    return swift_task_switch(sub_1005185B4, 0, 0);
  v6 = (uint64_t **)swift_task_alloc(dword_1013EB66C);
  v4[36] = (uint64_t)v6;
  *v6 = v4;
  v6[1] = (uint64_t *)sub_10051788C;
  return sub_100696E20(v4[28], v4[29], v4[32]);
}

uint64_t sub_10051788C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 288);
  *(_QWORD *)(*v2 + 296) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_100518654;
  }
  else
  {
    *(_QWORD *)(v4 + 304) = a1;
    v6 = sub_100517944;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100517944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  CKRecordID v32;
  uint64_t v33;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
    __break(1u);
    JUMPOUT(0x100517F10);
  }
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v0 + 312) = v5;
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v0 + 320) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 192);
    v8 = *(_DWORD *)(v7 + 80);
    *(_DWORD *)(v0 + 392) = v8;
    v9 = *(_QWORD *)(v7 + 72);
    *(_QWORD *)(v0 + 328) = v9;
    swift_bridgeObjectRetain(v5);
    v10 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 336) = v3;
      *(_QWORD *)(v0 + 344) = v10;
      v11 = *(uint64_t **)(v0 + 200);
      sub_1004B8460(v5 + ((v8 + 32) & ~(unint64_t)v8) + v9 * v10, (uint64_t)v11, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v13 = *v11;
      v12 = (void *)v11[1];
      swift_bridgeObjectRetain(v12);
      v14._countAndFlagsBits = v13;
      v14._object = v12;
      v15 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012645D8, v14);
      swift_bridgeObjectRelease(v12);
      if (v15 > 4)
      {
        v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v30, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v13;
        *(_QWORD *)(inited + 40) = v12;
        swift_bridgeObjectRetain(v12);
        sub_100757E04(&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 180, "Unexpected data dictionary key value: %@", 40, 2u, inited);
        sub_100518FC0(inited, (uint64_t)"Unexpected data dictionary key value: %@");
        sub_100519194(inited, (uint64_t)"write(to:)", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2u, 180, (uint64_t)"Unexpected data dictionary key value: %@", 40, 2u);
        goto LABEL_16;
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 40);
      if (*(_QWORD *)(v16 + 16))
      {
        sub_10084342C(v15);
        if ((v18 & 1) != 0)
        {
          v39 = (_QWORD *)(*(_QWORD *)(v16 + 56) + 16 * v17);
          *(_QWORD *)(v0 + 352) = *v39;
          v40 = v39[1];
          *(_QWORD *)(v0 + 360) = v40;
          __asm { BR              X10 }
        }
      }
      v19 = *(_QWORD *)(v0 + 200);
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v21 = swift_initStackObject(v20, v0 + 88);
      *(_OWORD *)(v21 + 16) = xmmword_100EF5E40;
      v22 = *(_QWORD *)(v19 + 16);
      *(_QWORD *)(v0 + 168) = v22;
      v23 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v25 = v24;
      *(_QWORD *)(v21 + 56) = &type metadata for String;
      v26 = sub_1004CFC2C();
      *(_QWORD *)(v21 + 32) = v23;
      *(_QWORD *)(v21 + 64) = v26;
      *(_QWORD *)(v21 + 40) = v25;
      if (v22)
        break;
      swift_setDeallocating(v21);
      v27 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v21 + 32, 1, v27);
      v28 = *(_QWORD *)(v0 + 320);
      v29 = *(_QWORD *)(v0 + 344) + 1;
      sub_1004B84A4(*(_QWORD *)(v0 + 200), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      if (v29 == v28)
      {
        v5 = *(_QWORD *)(v0 + 312);
        v4 = *(_QWORD *)(v0 + 216);
        goto LABEL_14;
      }
      v10 = *(_QWORD *)(v0 + 344) + 1;
      v9 = *(_QWORD *)(v0 + 328);
      LOBYTE(v8) = *(_BYTE *)(v0 + 392);
      v5 = *(_QWORD *)(v0 + 312);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 184, "Expected entry size for missing entry: %@", 41, 2u, v21);
    sub_100518FC0(v21, (uint64_t)"Expected entry size for missing entry: %@");
    sub_100519194(v21, (uint64_t)"write(to:)", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2u, 184, (uint64_t)"Expected entry size for missing entry: %@", 41, 2u);
LABEL_16:
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v32, *(Swift::String *)&v33);
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  }
  else
  {
    swift_bridgeObjectRetain(v5);
LABEL_14:
    v36 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 232);
    v37 = *(_QWORD *)(v0 + 200);
    sub_1004BBBC8(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
    sub_1004BBBC8(v36, v35);
    swift_bridgeObjectRelease(v5);
    sub_1004B84A4(v4, type metadata accessor for CRLProto_ObjectInfo);
    swift_task_dealloc(v4);
    swift_task_dealloc(v37);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
}

uint64_t sub_100517F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 368);
  *(_QWORD *)(*v2 + 376) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 312));
    v6 = sub_1005186F4;
  }
  else
  {
    *(_QWORD *)(v4 + 384) = a1;
    v6 = sub_100517FEC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100517FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  Swift::String v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t inited;
  CKRecordID v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 336);
  sub_1004BBBC8(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360));
  v3 = __OFADD__(v2, v1);
  v4 = v2 + v1;
  if (v3)
  {
    __break(1u);
    JUMPOUT(0x100518598);
  }
  v5 = *(_QWORD *)(v0 + 320);
  v6 = *(_QWORD *)(v0 + 344) + 1;
  sub_1004B84A4(*(_QWORD *)(v0 + 200), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  if (v6 == v5)
  {
LABEL_8:
    v27 = *(_QWORD *)(v0 + 312);
    v29 = *(_QWORD *)(v0 + 224);
    v28 = *(_QWORD *)(v0 + 232);
    v30 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 200);
    sub_1004BBBC8(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
    sub_1004BBBC8(v29, v28);
    swift_bridgeObjectRelease(v27);
    sub_1004B84A4(v30, type metadata accessor for CRLProto_ObjectInfo);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
  }
  else
  {
    while (1)
    {
      v7 = *(_QWORD *)(v0 + 344) + 1;
      *(_QWORD *)(v0 + 336) = v4;
      *(_QWORD *)(v0 + 344) = v7;
      v8 = *(uint64_t **)(v0 + 200);
      sub_1004B8460(*(_QWORD *)(v0 + 312)+ ((*(unsigned __int8 *)(v0 + 392) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392))+ *(_QWORD *)(v0 + 328) * v7, (uint64_t)v8, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v10 = *v8;
      v9 = (void *)v8[1];
      swift_bridgeObjectRetain(v9);
      v11._countAndFlagsBits = v10;
      v11._object = v9;
      v12 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012645D8, v11);
      swift_bridgeObjectRelease(v9);
      if (v12 >= 5)
      {
        v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v33, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v10;
        *(_QWORD *)(inited + 40) = v9;
        swift_bridgeObjectRetain(v9);
        sub_100757E04(&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 180, "Unexpected data dictionary key value: %@", 40, 2u, inited);
        sub_100518FC0(inited, (uint64_t)"Unexpected data dictionary key value: %@");
        sub_100519194(inited, (uint64_t)"write(to:)", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2u, 180, (uint64_t)"Unexpected data dictionary key value: %@", 40, 2u);
        goto LABEL_12;
      }
      v13 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 40);
      if (*(_QWORD *)(v13 + 16))
      {
        sub_10084342C(v12);
        if ((v15 & 1) != 0)
        {
          v38 = (_QWORD *)(*(_QWORD *)(v13 + 56) + 16 * v14);
          *(_QWORD *)(v0 + 352) = *v38;
          v39 = v38[1];
          *(_QWORD *)(v0 + 360) = v39;
          __asm { BR              X10 }
        }
      }
      v16 = *(_QWORD *)(v0 + 200);
      v17 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v18 = swift_initStackObject(v17, v0 + 88);
      *(_OWORD *)(v18 + 16) = xmmword_100EF5E40;
      v19 = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v0 + 168) = v19;
      v20 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v22 = v21;
      *(_QWORD *)(v18 + 56) = &type metadata for String;
      v23 = sub_1004CFC2C();
      *(_QWORD *)(v18 + 32) = v20;
      *(_QWORD *)(v18 + 64) = v23;
      *(_QWORD *)(v18 + 40) = v22;
      if (v19)
        break;
      swift_setDeallocating(v18);
      v24 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v18 + 32, 1, v24);
      v25 = *(_QWORD *)(v0 + 320);
      v26 = *(_QWORD *)(v0 + 344) + 1;
      sub_1004B84A4(*(_QWORD *)(v0 + 200), type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      if (v26 == v25)
        goto LABEL_8;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"write(to:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2, 184, "Expected entry size for missing entry: %@", 41, 2u, v18);
    sub_100518FC0(v18, (uint64_t)"Expected entry size for missing entry: %@");
    sub_100519194(v18, (uint64_t)"write(to:)", 10, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriter.swift", 99, 2u, 184, (uint64_t)"Expected entry size for missing entry: %@", 41, 2u);
LABEL_12:
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v35, *(Swift::String *)&v36);
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  }
}

uint64_t sub_1005185B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  sub_1004BBBC8(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  sub_1004BBBC8(v1, v2);
  sub_1004B84A4(v3, type metadata accessor for CRLProto_ObjectInfo);
  v4 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100518654()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 216);
  sub_1004BBBC8(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  sub_1004BBBC8(v1, v2);
  sub_1004B84A4(v3, type metadata accessor for CRLProto_ObjectInfo);
  v4 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005186F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 200);
  sub_1004BBBC8(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 360));
  sub_1004BBBC8(v1, v2);
  sub_1004BBBC8(v4, v3);
  sub_1004B84A4(v5, type metadata accessor for CRLProto_ObjectInfo);
  sub_1004B84A4(v6, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  v7 = *(_QWORD *)(v0 + 200);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005187C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for CRLSerializableObjectWriter()
{
  return objc_opt_self(_TtC8Freeform27CRLSerializableObjectWriter);
}

ValueMetadata *type metadata accessor for CRLSerializableObjectWriterOptions()
{
  return &type metadata for CRLSerializableObjectWriterOptions;
}

unint64_t sub_100518848()
{
  unint64_t result;

  result = qword_1013E16C8;
  if (!qword_1013E16C8)
  {
    result = swift_getWitnessTable(&unk_100EF7B44, &type metadata for CRLSerializableObjectWriterOptions);
    atomic_store(result, (unint64_t *)&qword_1013E16C8);
  }
  return result;
}

unint64_t sub_100518890()
{
  unint64_t result;

  result = qword_1013E16D0;
  if (!qword_1013E16D0)
  {
    result = swift_getWitnessTable("=(7", &type metadata for CRLSerializableObjectWriterOptions);
    atomic_store(result, (unint64_t *)&qword_1013E16D0);
  }
  return result;
}

unint64_t sub_1005188D8()
{
  unint64_t result;

  result = qword_1013E16D8;
  if (!qword_1013E16D8)
  {
    result = swift_getWitnessTable(&unk_100EF7B6C, &type metadata for CRLSerializableObjectWriterOptions);
    atomic_store(result, (unint64_t *)&qword_1013E16D8);
  }
  return result;
}

unint64_t sub_100518920()
{
  unint64_t result;

  result = qword_1013E16E0;
  if (!qword_1013E16E0)
  {
    result = swift_getWitnessTable(&unk_100EF7BA4, &type metadata for CRLSerializableObjectWriterOptions);
    atomic_store(result, &qword_1013E16E0);
  }
  return result;
}

void sub_100518964(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  char *v67;
  char *v68;
  uint64_t v69;
  __int128 *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  _QWORD *v88;
  uint64_t v89;

  v3 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v3);
  v77 = (uint64_t)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLProto_Data(0);
  v76 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v70 = (__int128 *)((char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for UUID(0);
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  __chkstk_darwin(v7);
  v73 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
  v71 = *(_QWORD *)(v9 - 8);
  v72 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - v13;
  *(_QWORD *)(a1 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 56) = _swiftEmptyArrayStorage;
  v15 = type metadata accessor for CRLProto_ObjectInfo(0);
  UnknownStorage.init()(v15);
  v16 = v1[4];
  if ((v16 & 0x8000000000000000) != 0)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
LABEL_17:
    __break(1u);
    swift_release(v79);
    __break(1u);
    return;
  }
  if (HIDWORD(v16))
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Not enough bits to represent the passed value", 45, 2, "Swift/Integers.swift", 20, 2, 3455, 0);
    goto LABEL_17;
  }
  v17 = *v1;
  v18 = v1[1];
  v19 = v1[3];
  v65 = v1[5];
  v64 = v1[6];
  *(_DWORD *)a1 = v16;
  sub_100D6B5C8(v17);
  *(_QWORD *)(a1 + 8) = v20;
  sub_100D6B5C8(v18);
  *(_QWORD *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v21;
  v22 = v1[7];
  v89 = v22;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = _swiftEmptyArrayStorage;
  if (v23)
  {
    v69 = v5;
    v63 = a1;
    v88 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v22);
    sub_100600970(0, v23, 0);
    v25 = (uint64_t *)(v22 + 40);
    v66 = xmmword_100EF78C0;
    v67 = v14;
    v68 = v11;
    do
    {
      v27 = *(v25 - 1);
      v26 = *v25;
      v28 = swift_unknownObjectRetain(v27);
      UnknownStorage.init()(v28);
      v29 = (uint64_t)&v11[*(int *)(v72 + 20)];
      v30 = v76;
      v31 = v69;
      v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
      v78(v29, 1, 1, v69);
      ObjectType = swift_getObjectType(v27);
      v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(ObjectType, v26);
      v35 = v34;
      v36 = swift_getObjectType(v33);
      v37 = v73;
      (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v36, v35);
      v38 = swift_unknownObjectRelease(v33);
      v79 = UUID.uuid.getter(v38);
      v80 = v39;
      v81 = v40;
      v82 = v41;
      v83 = v42;
      v84 = v43;
      v85 = v44;
      v86 = v45;
      v87 = v46;
      UUID.uuid.getter(v79);
      v47 = type metadata accessor for __DataStorage(0);
      swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
      v48 = __DataStorage.init(bytes:length:)(&v79, 16);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v75);
      v49 = v77;
      sub_1004CB7BC(v29, v77, (uint64_t *)&unk_1013E16F0);
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v49, 1, v31);
      v51 = v70;
      if ((_DWORD)v50 == 1)
      {
        *v70 = v66;
        UnknownStorage.init()(v50);
        sub_1004CB800(v49, (uint64_t *)&unk_1013E16F0);
      }
      else
      {
        sub_1004B84E0(v49, (uint64_t)v70, type metadata accessor for CRLProto_Data);
      }
      v52 = (uint64_t)v67;
      sub_1004BBBC8(*(_QWORD *)v51, *((_QWORD *)v51 + 1));
      *(_QWORD *)v51 = 0x1000000000;
      *((_QWORD *)v51 + 1) = v48 | 0x4000000000000000;
      sub_1004CB800(v29, (uint64_t *)&unk_1013E16F0);
      sub_1004B84E0((uint64_t)v51, v29, type metadata accessor for CRLProto_Data);
      v78(v29, 0, 1, v31);
      v11 = v68;
      sub_1004B84E0((uint64_t)v68, v52, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      swift_unknownObjectRelease(v27);
      v24 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0)
      {
        sub_100600970(0, v24[2] + 1, 1);
        v24 = v88;
      }
      v54 = v24[2];
      v53 = v24[3];
      if (v54 >= v53 >> 1)
      {
        sub_100600970(v53 > 1, v54 + 1, 1);
        v24 = v88;
      }
      v24[2] = v54 + 1;
      sub_1004B84E0(v52, (uint64_t)v24+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v54, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      v25 += 2;
      --v23;
    }
    while (v23);
    sub_10051FD74(&v89);
    a1 = v63;
  }
  v55 = v65;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  *(_QWORD *)(a1 + 16) = v24;
  v56 = v64;
  swift_bridgeObjectRetain(v64);
  v58 = sub_100512E98(v57);
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  *(_QWORD *)(a1 + 24) = v58;
  swift_bridgeObjectRetain(v55);
  v60 = sub_100513650(v59);
  swift_bridgeObjectRelease(v55);
  v79 = (uint64_t)v60;
  swift_bridgeObjectRetain(v60);
  sub_10051E5AC(&v79);
  swift_bridgeObjectRelease(v60);
  v61 = v79;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  *(_QWORD *)(a1 + 32) = v61;
}

void sub_100518FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for __VaListBuilder(0);
  v4 = (_QWORD *)swift_allocObject(v3, 48, 7);
  v4[2] = 8;
  v4[3] = 0;
  v5 = v4 + 3;
  v4[4] = 0;
  v4[5] = 0;
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_25:
    v25 = __VaListBuilder.va_list()();
    sub_1001BC744(a2, v25);
    swift_release(v4);
    return;
  }
  v7 = 0;
  v8 = a1 + 32;
  while (1)
  {
    sub_1004E90B0(v8 + 40 * v7, (uint64_t)v27);
    v9 = v28;
    v10 = v29;
    sub_1004BB5A4(v27, v28);
    v11 = dispatch thunk of CVarArg._cVarArgEncoding.getter(v9, v10);
    v12 = *v5;
    v13 = *(_QWORD *)(v11 + 16);
    v14 = __OFADD__(*v5, v13);
    v15 = *v5 + v13;
    if (v14)
      break;
    v16 = v11;
    v17 = v4[4];
    if (v17 >= v15)
      goto LABEL_18;
    if (v17 + 0x4000000000000000 < 0)
      goto LABEL_28;
    v18 = (char *)v4[5];
    if (2 * v17 > v15)
      v15 = 2 * v17;
    v4[4] = v15;
    if ((unint64_t)(v15 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_29;
    v19 = (char *)swift_slowAlloc(8 * v15, 7);
    v4[5] = v19;
    if (v18)
    {
      if (v19 != v18 || v19 >= &v18[8 * v12])
        memmove(v19, v18, 8 * v12);
      __VaListBuilder.deallocStorage(wordCount:storage:)(v17, v18);
LABEL_18:
      v19 = (char *)v4[5];
    }
    if (!v19)
      goto LABEL_30;
    v21 = *(_QWORD *)(v16 + 16);
    if (v21)
    {
      v22 = (uint64_t *)(v16 + 32);
      v23 = *v5;
      while (1)
      {
        v24 = *v22++;
        *(_QWORD *)&v19[8 * v23] = v24;
        v23 = *v5 + 1;
        if (__OFADD__(*v5, 1))
          break;
        *v5 = v23;
        if (!--v21)
          goto LABEL_3;
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v7;
    swift_bridgeObjectRelease(v16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
    if (v7 == v6)
      goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_100519194(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  uint64_t v42;
  uint64_t v43;
  NSString v44;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;

  v12 = type metadata accessor for __VaListBuilder(0);
  v13 = (_QWORD *)swift_allocObject(v12, 48, 7);
  v13[2] = 8;
  v13[3] = 0;
  v14 = v13 + 3;
  v13[4] = 0;
  v13[5] = 0;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = 0;
    v17 = a1 + 32;
    while (1)
    {
      sub_1004E90B0(v17 + 40 * v16, (uint64_t)v52);
      v18 = v53;
      v19 = v54;
      sub_1004BB5A4(v52, v53);
      v20 = dispatch thunk of CVarArg._cVarArgEncoding.getter(v18, v19);
      v21 = *v14;
      v22 = *(_QWORD *)(v20 + 16);
      v23 = __OFADD__(*v14, v22);
      v24 = *v14 + v22;
      if (v23)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        return;
      }
      v25 = v20;
      v26 = v13[4];
      if (v26 >= v24)
        goto LABEL_18;
      if (v26 + 0x4000000000000000 < 0)
        goto LABEL_29;
      v27 = (char *)v13[5];
      if (2 * v26 > v24)
        v24 = 2 * v26;
      v13[4] = v24;
      if ((unint64_t)(v24 - 0x1000000000000000) >> 61 != 7)
        goto LABEL_30;
      v28 = (char *)swift_slowAlloc(8 * v24, 7);
      v13[5] = v28;
      if (v27)
        break;
LABEL_19:
      if (!v28)
        goto LABEL_32;
      v30 = *(_QWORD *)(v25 + 16);
      if (v30)
      {
        v31 = (uint64_t *)(v25 + 32);
        v32 = *v14;
        while (1)
        {
          v33 = *v31++;
          *(_QWORD *)&v28[8 * v32] = v33;
          v32 = *v14 + 1;
          if (__OFADD__(*v14, 1))
            break;
          *v14 = v32;
          if (!--v30)
            goto LABEL_3;
        }
        __break(1u);
        goto LABEL_28;
      }
LABEL_3:
      ++v16;
      swift_bridgeObjectRelease(v25);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v52);
      if (v16 == v15)
        goto LABEL_25;
    }
    if (v28 != v27 || v28 >= &v27[8 * v21])
      memmove(v28, v27, 8 * v21);
    __VaListBuilder.deallocStorage(wordCount:storage:)(v26, v27);
LABEL_18:
    v28 = (char *)v13[5];
    goto LABEL_19;
  }
LABEL_25:
  v34 = __VaListBuilder.va_list()();
  v35 = (void *)objc_opt_self(CRLAssertionHandler);
  StaticString.description.getter(a2, a3, a4);
  v37 = v36;
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  StaticString.description.getter(a5, a6, a7);
  v40 = v39;
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  if (a8 < 0)
    goto LABEL_31;
  StaticString.description.getter(a9, a10, a11);
  v43 = v42;
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "handleFailureInFunction:file:lineNumber:isFatal:format:args:", v38, v41, a8, 1, v44, v34, swift_bridgeObjectRelease(v43).n128_f64[0]);
  swift_release(v13);

}

uint64_t type metadata accessor for CRLArchivedObjectMetadataRepresentation(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E17F8;
  if (!qword_1013E17F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLArchivedObjectMetadataRepresentation);
  return result;
}

unint64_t sub_10051945C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for UUID(0);
  v38 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v37 = (result + 1) & v11;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v36(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            result = v24 + v15 * a1;
            v25 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v25 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v25, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront(result);
              goto LABEL_21;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = (_OWORD *)(v26 + 16 * a1);
            v28 = (_OWORD *)(v26 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v27 >= v28 + 1))
            {
              *v27 = *v28;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1005196FC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[9];

  v4 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  __chkstk_darwin(v4);
  v41 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a2 + 64;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(a2 + 64 + 8 * (v8 >> 6))) != 0)
  {
    v9 = ~v7;
    v10 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v7);
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v11 = (v10 + 1) & v9;
      v39 = a2;
      v40 = a2 + 64;
      v12 = v41;
      do
      {
        v13 = *(_QWORD *)(a2 + 40);
        v14 = *(_QWORD *)(a2 + 48);
        v15 = v9;
        v16 = *(_QWORD *)(v14 + 8 * v8);
        v17 = v11;
        Hasher.init(_seed:)(v44, v13);
        v18 = *(_QWORD *)(v16 + 24);
        ObjectType = swift_getObjectType(*(_QWORD *)(v16 + 16));
        v20 = *(void (**)(uint64_t, uint64_t, __n128))(v18 + 32);
        v21 = swift_retain(v16);
        v20(ObjectType, v18, v21);
        v22 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v23 = v43;
        dispatch thunk of Hashable.hash(into:)(v44, v43, v22);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v23);
        v24 = Hasher._finalize()();
        v25 = v16;
        v9 = v15;
        swift_release(v25);
        v11 = v17;
        v26 = v24 & v15;
        if (a1 >= (uint64_t)v17)
        {
          if (v26 < v17)
          {
            a2 = v39;
            v6 = v40;
          }
          else
          {
            a2 = v39;
            v6 = v40;
            if (a1 >= v26)
              goto LABEL_12;
          }
        }
        else
        {
          a2 = v39;
          v6 = v40;
          if (v26 >= v17 || a1 >= v26)
          {
LABEL_12:
            v27 = *(_QWORD *)(a2 + 48);
            v28 = (_QWORD *)(v27 + 8 * a1);
            v29 = (_QWORD *)(v27 + 8 * v8);
            if (a1 != v8 || v28 >= v29 + 1)
              *v28 = *v29;
            v30 = *(_QWORD *)(a2 + 56);
            v31 = (_OWORD *)(v30 + 16 * a1);
            v32 = (_OWORD *)(v30 + 16 * v8);
            if (a1 != v8 || (a1 = v8, v31 >= v32 + 1))
            {
              *v31 = *v32;
              a1 = v8;
            }
          }
        }
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    v33 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v33;
    v35 = (-1 << a1) - 1;
  }
  else
  {
    v33 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v35 = *v33;
    v34 = (-1 << a1) - 1;
  }
  *v33 = v35 & v34;
  v36 = *(_QWORD *)(a2 + 16);
  v37 = __OFSUB__(v36, 1);
  v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v38;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10051999C(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD v14[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
      Hasher.init(_seed:)(v14, *(_QWORD *)(a2 + 40));
      __asm { BR              X8 }
    }
    v8 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v9 = *v8;
    v10 = (-1 << v3) - 1;
  }
  else
  {
    v8 = (uint64_t *)(v4 + 8 * (result >> 6));
    v10 = *v8;
    v9 = (-1 << result) - 1;
  }
  *v8 = v10 & v9;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = __OFSUB__(v11, 1);
  v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x100519C58);
  }
  *(_QWORD *)(a2 + 16) = v13;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_100519C80(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD v14[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
      Hasher.init(_seed:)(v14, *(_QWORD *)(a2 + 40));
      __asm { BR              X8 }
    }
    v8 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v9 = *v8;
    v10 = (-1 << v3) - 1;
  }
  else
  {
    v8 = (uint64_t *)(v4 + 8 * (result >> 6));
    v10 = *v8;
    v9 = (-1 << result) - 1;
  }
  *v8 = v10 & v9;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = __OFSUB__(v11, 1);
  v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x100519F3CLL);
  }
  *(_QWORD *)(a2 + 16) = v13;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_100519F64(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  Swift::UInt v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)(v24, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v10);
        result = Hasher._finalize()();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_QWORD *)(v12 + 8 * v3);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10051A120(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v43 = (result + 1) & v11;
      v12 = *(_QWORD *)(v44 + 72);
      v42 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v42(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v43)
        {
          if (v21 >= v43 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            result = v27 + v29 * a1;
            v31 = v29 * v10;
            v32 = v27 + v29 * v10;
            v33 = v32 + v29;
            if (v30 < v31 || result >= v33)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v32, 1, v28);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v30 != v31)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v43 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v35;
    v37 = (-1 << a1) - 1;
  }
  else
  {
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v35;
    v36 = (-1 << a1) - 1;
  }
  *v35 = v37 & v36;
  v38 = *(_QWORD *)(a2 + 16);
  v39 = __OFSUB__(v38, 1);
  v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v40;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10051A3F8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10051A58C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  unint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for UUID(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v39 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v40 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12 * v9;
        v16 = v13;
        v38(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v17 = *(_QWORD *)(a2 + 40);
        v18 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v19 = dispatch thunk of Hashable._rawHashValue(seed:)(v17, v4, v18);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
        v13 = v16;
        v20 = v19 & v16;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            v23 = *(_QWORD *)(a2 + 48);
            v24 = v12 * a1;
            v25 = v23 + v12 * a1;
            v26 = v23 + v15;
            if (v12 * a1 < v15 || v25 >= v26 + v12)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v24 != v15)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = v27 + v24;
            v29 = v27 + v15;
            if (v24 < v15 || v28 >= v29 + v12)
            {
              swift_arrayInitWithTakeFrontToBack(v28, v29, 1, v4);
              a1 = v9;
              v7 = v14;
              v13 = v16;
            }
            else
            {
              a1 = v9;
              v30 = v24 == v15;
              v7 = v14;
              v13 = v16;
              if (!v30)
              {
                swift_arrayInitWithTakeBackToFront(v28);
                v13 = v16;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v31 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v31;
    v33 = (-1 << a1) - 1;
  }
  else
  {
    v31 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v31;
    v32 = (-1 << a1) - 1;
  }
  *v31 = v33 & v32;
  v34 = *(_QWORD *)(a2 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10051A848(int64_t a1, uint64_t a2)
{
  sub_10051DB94(a1, a2, type metadata accessor for CRLRealTimeEnter);
}

unint64_t sub_10051A854(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v28, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_BYTE *)(v11 + v3);
        v13 = (_BYTE *)(v11 + v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = sub_1004B804C(&qword_1013E1798);
        v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72);
        v17 = v16 * v3;
        result = v14 + v16 * v3;
        v18 = v16 * v6;
        v19 = v14 + v16 * v6;
        v20 = v19 + v16;
        if (v17 < v18 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack(result, v19, 1, v15);
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront(result);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10051AA48(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __int128 *v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  unint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for UUID(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v39 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v40 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v38(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v39)
        {
          if (v21 >= v39 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || (v12 = v15, v25 >= v26 + v15))
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
              goto LABEL_21;
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = v27 + 24 * a1;
            v29 = (__int128 *)(v27 + 24 * v9);
            if (a1 != v9 || (a1 = v9, v28 >= (unint64_t)v29 + 24))
            {
              v30 = *v29;
              *(_QWORD *)(v28 + 16) = *((_QWORD *)v29 + 2);
              *(_OWORD *)v28 = v30;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v39 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v31 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v31;
    v33 = (-1 << a1) - 1;
  }
  else
  {
    v31 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v31;
    v32 = (-1 << a1) - 1;
  }
  *v31 = v33 & v32;
  v34 = *(_QWORD *)(a2 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10051ACF4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for CodingUserInfoKey(0);
  v37 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin();
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = dispatch thunk of Hashable._rawHashValue(seed:)(*(_QWORD *)(a2 + 40), v4, &protocol witness table for CodingUserInfoKey);
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v23 = v22 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v23 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v23, 1, v4);
LABEL_21:
              v12 = v15;
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v24 = *(_QWORD *)(a2 + 56);
            v25 = (_OWORD *)(v24 + 32 * a1);
            v26 = (_OWORD *)(v24 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v25 >= v26 + 2))
            {
              v27 = v26[1];
              *v25 = *v26;
              v25[1] = v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10051AF78(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  Swift::UInt *v11;
  uint64_t v12;
  Swift::UInt v13;
  Swift::UInt v14;
  void *v15;
  Swift::UInt v16;
  Swift::UInt v17;
  id v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  __int128 *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[9];

  v2 = a2;
  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v35 = v2;
      v36 = v4;
      do
      {
        v10 = *(_QWORD *)(v2 + 40);
        v11 = (Swift::UInt *)(*(_QWORD *)(v2 + 48) + 40 * v6);
        v12 = v7;
        v13 = *v11;
        v14 = v11[1];
        v16 = v11[2];
        v15 = (void *)v11[3];
        v17 = v11[4];
        Hasher.init(_seed:)(v37, v10);
        Hasher._combine(_:)(v13);
        Hasher._combine(_:)(v14);
        Hasher._combine(_:)(v16);
        v18 = v15;
        NSObject.hash(into:)(v37);
        Selector.hash(into:)(v37, v17);
        v19 = Hasher._finalize()();

        v7 = v12;
        v20 = v19 & v12;
        if (v3 >= (uint64_t)v9)
        {
          if (v20 < v9)
          {
            v2 = v35;
            v4 = v36;
          }
          else
          {
            v2 = v35;
            v4 = v36;
            if (v3 >= v20)
              goto LABEL_12;
          }
        }
        else
        {
          v2 = v35;
          v4 = v36;
          if (v20 >= v9 || v3 >= v20)
          {
LABEL_12:
            v21 = *(_QWORD *)(v2 + 48);
            v22 = v21 + 40 * v3;
            v23 = (__int128 *)(v21 + 40 * v6);
            if (v3 != v6 || v22 >= (unint64_t)v23 + 40)
            {
              v24 = *v23;
              v25 = v23[1];
              *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
              *(_OWORD *)v22 = v24;
              *(_OWORD *)(v22 + 16) = v25;
            }
            v26 = *(_QWORD *)(v2 + 56);
            v27 = (_QWORD *)(v26 + 8 * v3);
            v28 = (_QWORD *)(v26 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v27 >= v28 + 1))
            {
              *v27 = *v28;
              v3 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v29 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v30 = *v29;
    v31 = (-1 << v3) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(v2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v34;
    ++*(_DWORD *)(v2 + 36);
  }
}

void sub_10051B1B8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD v40[9];

  v36 = type metadata accessor for CRLBoardIdentifier(0);
  v4 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a2 + 64;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(a2 + 64 + 8 * (v8 >> 6))) != 0)
  {
    v9 = ~v7;
    v10 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v7);
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v37 = (v10 + 1) & v9;
      v11 = *(_QWORD *)(v4 + 72);
      v39 = v9;
      v12 = (uint64_t)v38;
      do
      {
        v13 = v11;
        v14 = v11 * v8;
        sub_1004B8460(*(_QWORD *)(a2 + 48) + v11 * v8, v12, type metadata accessor for CRLBoardIdentifier);
        Hasher.init(_seed:)(v40, *(_QWORD *)(a2 + 40));
        v15 = type metadata accessor for UUID(0);
        v16 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        dispatch thunk of Hashable.hash(into:)(v40, v15, v16);
        v17 = (uint64_t *)(v12 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
        v18 = *v17;
        v19 = v17[1];
        swift_bridgeObjectRetain(v19);
        String.hash(into:)(v40, v18, v19);
        swift_bridgeObjectRelease();
        v20 = Hasher._finalize()();
        sub_1004B84A4(v12, type metadata accessor for CRLBoardIdentifier);
        v21 = v39;
        v22 = v20 & v39;
        if (a1 >= (uint64_t)v37)
        {
          if (v22 < v37)
          {
            v11 = v13;
          }
          else
          {
            v11 = v13;
            if (a1 >= v22)
              goto LABEL_12;
          }
        }
        else
        {
          v11 = v13;
          if (v22 >= v37 || a1 >= v22)
          {
LABEL_12:
            v23 = *(_QWORD *)(a2 + 48);
            v24 = v23 + v11 * a1;
            v25 = v23 + v14;
            if (v11 * a1 < v14 || v24 >= v25 + v11)
            {
              swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v36);
LABEL_17:
              v21 = v39;
            }
            else if (v11 * a1 != v14)
            {
              swift_arrayInitWithTakeBackToFront(v24);
              goto LABEL_17;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = (_QWORD *)(v26 + 8 * a1);
            v28 = (_QWORD *)(v26 + 8 * v8);
            if (a1 != v8 || (a1 = v8, v27 >= v28 + 1))
            {
              *v27 = *v28;
              a1 = v8;
            }
          }
        }
        v8 = (v8 + 1) & v21;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    v29 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10051B4A4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v38 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v39 + 72);
      v37 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v37(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v38)
        {
          if (v21 >= v38 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || (v12 = v15, v25 >= v26 + v15))
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
              goto LABEL_21;
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = (_QWORD *)(v27 + 8 * a1);
            v29 = (_QWORD *)(v27 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v28 >= v29 + 1))
            {
              *v28 = *v29;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v38 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10051B744(unint64_t a1, uint64_t a2)
{
  return sub_10051D6A8(a1, a2, type metadata accessor for CRLBoardIdentifier);
}

unint64_t sub_10051B750(int64_t a1, uint64_t a2)
{
  return sub_10051E080(a1, a2, type metadata accessor for CRLBoardEntity);
}

void sub_10051B75C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  Swift::Int v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[10];

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for UUID(0);
  v65 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v64 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v8);
  v63 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v68 = (uint64_t)&v61 - v11;
  v12 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v74 = (uint64_t)&v61 - v17;
  v18 = a2 + 64;
  v19 = -1 << *(_BYTE *)(a2 + 32);
  v20 = (a1 + 1) & ~v19;
  if (((1 << v20) & *(_QWORD *)(a2 + 64 + 8 * (v20 >> 6))) != 0)
  {
    v73 = ~v19;
    v21 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v19);
    if ((*(_QWORD *)(v18 + 8 * (v20 >> 6)) & (1 << v20)) != 0)
    {
      v70 = (v21 + 1) & v73;
      v22 = *(_QWORD *)(v13 + 72);
      v23 = v62;
      v67 = v12;
      v71 = v15;
      v72 = v22;
      v69 = a2 + 64;
      do
      {
        v24 = v22 * v20;
        v25 = v74;
        sub_1004B8460(*(_QWORD *)(a2 + 48) + v22 * v20, v74, type metadata accessor for CRLBoardPreviewImageCache.Item);
        Hasher.init(_seed:)(v75, *(_QWORD *)(a2 + 40));
        sub_1004B8460(v25, (uint64_t)v15, type metadata accessor for CRLBoardPreviewImageCache.Item);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v12);
        if (!EnumCaseMultiPayload)
        {
          v31 = v68;
          sub_1004B84E0((uint64_t)v15, v68, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          v32 = v63;
          sub_1004B8460(v31, v63, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          v33 = sub_1004B804C(&qword_1013E1790);
          v34 = (char *)&loc_10051BA8C
              + dword_10051BDCC[(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 5, v33)];
          __asm { BR              X9 }
        }
        if (EnumCaseMultiPayload == 1)
        {
          sub_1004B84E0((uint64_t)v15, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
          v27 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          dispatch thunk of Hashable.hash(into:)(v75, v23, v27);
          v28 = &v6[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
          v29 = *(_QWORD *)v28;
          v30 = *((_QWORD *)v28 + 1);
          swift_bridgeObjectRetain(v30);
          String.hash(into:)(v75, v29, v30);
          swift_bridgeObjectRelease(v30);
        }
        else
        {
          v35 = &v15[*(int *)(sub_1004B804C((uint64_t *)&unk_1013DE640) + 48)];
          sub_1004B84E0((uint64_t)v15, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
          v36 = a2;
          v38 = v64;
          v37 = v65;
          v39 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
          v66 = a1;
          v39(v64, v35, v23);
          v40 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          dispatch thunk of Hashable.hash(into:)(v75, v23, v40);
          v41 = &v6[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
          v42 = *(_QWORD *)v41;
          v43 = *((_QWORD *)v41 + 1);
          swift_bridgeObjectRetain(v43);
          String.hash(into:)(v75, v42, v43);
          v44 = v43;
          v23 = v62;
          swift_bridgeObjectRelease(v44);
          dispatch thunk of Hashable.hash(into:)(v75, v23, v40);
          v45 = *(void (**)(char *, uint64_t))(v37 + 8);
          a2 = v36;
          a1 = v66;
          v12 = v67;
          v45(v38, v23);
        }
        sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
        v46 = Hasher._finalize()();
        sub_1004B84A4(v74, type metadata accessor for CRLBoardPreviewImageCache.Item);
        v47 = v73;
        v48 = v46 & v73;
        if (a1 >= (uint64_t)v70)
        {
          v15 = v71;
          v22 = v72;
          if (v48 >= v70 && a1 >= v48)
          {
LABEL_17:
            v49 = *(_QWORD *)(a2 + 48);
            v50 = v49 + v22 * a1;
            v51 = v49 + v24;
            if (v22 * a1 < v24 || v50 >= v51 + v22)
            {
              swift_arrayInitWithTakeFrontToBack(v50, v51, 1, v12);
              v22 = v72;
              v47 = v73;
              v18 = v69;
            }
            else
            {
              v18 = v69;
              if (v22 * a1 != v24)
              {
                swift_arrayInitWithTakeBackToFront(v50);
                v22 = v72;
                v47 = v73;
              }
            }
            v52 = *(_QWORD *)(a2 + 56);
            v53 = (_QWORD *)(v52 + 8 * a1);
            v54 = (_QWORD *)(v52 + 8 * v20);
            if (a1 != v20 || (a1 = v20, v53 >= v54 + 1))
            {
              *v53 = *v54;
              a1 = v20;
            }
            goto LABEL_5;
          }
        }
        else
        {
          v15 = v71;
          v22 = v72;
          if (v48 >= v70 || a1 >= v48)
            goto LABEL_17;
        }
        v18 = v69;
LABEL_5:
        v20 = (v20 + 1) & v47;
      }
      while (((*(_QWORD *)(v18 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0);
    }
    v55 = (uint64_t *)(v18 + 8 * ((unint64_t)a1 >> 6));
    v56 = *v55;
    v57 = (-1 << a1) - 1;
  }
  else
  {
    v55 = (uint64_t *)(v18 + 8 * ((unint64_t)a1 >> 6));
    v57 = *v55;
    v56 = (-1 << a1) - 1;
  }
  *v55 = v57 & v56;
  v58 = *(_QWORD *)(a2 + 16);
  v59 = __OFSUB__(v58, 1);
  v60 = v58 - 1;
  if (v59)
  {
    __break(1u);
    JUMPOUT(0x10051BDCCLL);
  }
  *(_QWORD *)(a2 + 16) = v60;
  ++*(_DWORD *)(a2 + 36);
}

unint64_t sub_10051BDE4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10051BFB8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v11);
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v3);
            if (v3 != v6 || v15 >= v11 + 1)
              *v15 = *v11;
            v16 = *(_QWORD *)(a2 + 56);
            v17 = v16 + 24 * v3;
            v18 = (__int128 *)(v16 + 24 * v6);
            if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              v9 = *v18;
              *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
              *(_OWORD *)v17 = v9;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10051C160(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  unint64_t v40;
  uint64_t v41;

  v4 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v40 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v41 + 72);
      v39 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v39(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || (v12 = v15, v25 >= v26 + v15))
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
              goto LABEL_21;
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = (__int128 *)(v27 + 48 * a1);
            v29 = (__int128 *)(v27 + 48 * v9);
            if (a1 != v9 || (a1 = v9, v28 >= v29 + 3))
            {
              v30 = *v29;
              v31 = v29[2];
              v28[1] = v29[1];
              v28[2] = v31;
              *v28 = v30;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v32 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10051C40C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * v3);
            v21 = (_QWORD *)(v19 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10051C5BC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  unint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for UUID(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v39 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v40 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v38(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v39)
        {
          if (v21 >= v39 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v7 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = v27 + 56 * a1;
            v29 = v27 + 56 * v9;
            if (a1 < (uint64_t)v9 || v28 >= v29 + 56)
            {
              swift_arrayInitWithTakeFrontToBack(v28, v29, 1, &type metadata for CRLMathCalculationControllerExpression);
              a1 = v9;
              v12 = v15;
              v13 = v17;
            }
            else
            {
              v30 = a1 == v9;
              a1 = v9;
              v12 = v15;
              v13 = v17;
              if (!v30)
              {
                swift_arrayInitWithTakeBackToFront(v28);
                v13 = v17;
                v12 = v15;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v39 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v31 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v31;
    v33 = (-1 << a1) - 1;
  }
  else
  {
    v31 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v31;
    v32 = (-1 << a1) - 1;
  }
  *v31 = v33 & v32;
  v34 = *(_QWORD *)(a2 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v36;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10051C898(unint64_t a1, uint64_t a2)
{
  sub_10051C8BC(a1, a2, type metadata accessor for CRLThrottleInfo);
}

unint64_t sub_10051C8A4(unint64_t a1, uint64_t a2)
{
  return sub_10051DE48(a1, a2, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
}

void sub_10051C8B0(unint64_t a1, uint64_t a2)
{
  sub_10051C8BC(a1, a2, type metadata accessor for CRLZoneSyncResultScenarios);
}

void sub_10051C8BC(unint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  id v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;

  v4 = a1;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (a1 + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    v10 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v6);
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v11 = (v10 + 1) & v9;
      do
      {
        v12 = *(_QWORD *)(a2 + 40);
        v13 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v7);
        v14 = NSObject._rawHashValue(seed:)(v12);

        v15 = v14 & v9;
        if (v4 >= (uint64_t)v11)
        {
          if (v15 < v11 || v4 < v15)
            goto LABEL_6;
        }
        else if (v15 < v11 && v4 < v15)
        {
          goto LABEL_6;
        }
        v18 = *(_QWORD *)(a2 + 48);
        v19 = (_QWORD *)(v18 + 8 * v4);
        v20 = (_QWORD *)(v18 + 8 * v7);
        if (v4 != v7 || v19 >= v20 + 1)
          *v19 = *v20;
        v21 = *(_QWORD *)(a2 + 56);
        v22 = a3(0);
        v23 = *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72);
        v24 = v23 * v4;
        v25 = v21 + v23 * v4;
        v26 = v23 * v7;
        v27 = v21 + v23 * v7;
        v28 = v27 + v23;
        if (v24 < v26 || v25 >= v28)
        {
          swift_arrayInitWithTakeFrontToBack(v25, v27, 1, v22);
        }
        else
        {
          v4 = v7;
          if (v24 == v26)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v30 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v31 = *v30;
    v32 = (-1 << v4) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v5 + 8 * (a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10051CAA0(int64_t a1, uint64_t a2)
{
  sub_10051DB94(a1, a2, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
}

unint64_t sub_10051CAAC(int64_t a1, uint64_t a2)
{
  return sub_10051E080(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

unint64_t sub_10051CAB8(unint64_t a1, uint64_t a2)
{
  return sub_10051D6A8(a1, a2, type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

void sub_10051CAC4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD v40[9];

  v36 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v4 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a2 + 64;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(a2 + 64 + 8 * (v8 >> 6))) != 0)
  {
    v9 = ~v7;
    v10 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v7);
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v37 = (v10 + 1) & v9;
      v11 = *(_QWORD *)(v4 + 72);
      v39 = v9;
      v12 = (uint64_t)v38;
      do
      {
        v13 = v11;
        v14 = v11 * v8;
        sub_1004B8460(*(_QWORD *)(a2 + 48) + v11 * v8, v12, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        Hasher.init(_seed:)(v40, *(_QWORD *)(a2 + 40));
        v15 = type metadata accessor for UUID(0);
        v16 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        dispatch thunk of Hashable.hash(into:)(v40, v15, v16);
        v17 = (uint64_t *)(v12 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
        v18 = *v17;
        v19 = v17[1];
        swift_bridgeObjectRetain(v19);
        String.hash(into:)(v40, v18, v19);
        swift_bridgeObjectRelease();
        v20 = Hasher._finalize()();
        sub_1004B84A4(v12, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        v21 = v39;
        v22 = v20 & v39;
        if (a1 >= (uint64_t)v37)
        {
          if (v22 < v37)
          {
            v11 = v13;
          }
          else
          {
            v11 = v13;
            if (a1 >= v22)
              goto LABEL_12;
          }
        }
        else
        {
          v11 = v13;
          if (v22 >= v37 || a1 >= v22)
          {
LABEL_12:
            v23 = *(_QWORD *)(a2 + 48);
            v24 = v23 + v11 * a1;
            v25 = v23 + v14;
            if (v11 * a1 < v14 || v24 >= v25 + v11)
            {
              swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v36);
LABEL_17:
              v21 = v39;
            }
            else if (v11 * a1 != v14)
            {
              swift_arrayInitWithTakeBackToFront(v24);
              goto LABEL_17;
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = (_BYTE *)(v26 + a1);
            v28 = (_BYTE *)(v26 + v8);
            if (a1 != v8 || (a1 = v8, v27 >= v28 + 1))
            {
              *v27 = *v28;
              a1 = v8;
            }
          }
        }
        v8 = (v8 + 1) & v21;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    v29 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10051CDB0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v23, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10051CF68(unint64_t a1, uint64_t a2)
{
  return sub_10051CF80(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

unint64_t sub_10051CF74(unint64_t a1, uint64_t a2)
{
  return sub_10051CF80(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

unint64_t sub_10051CF80(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD v33[9];

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v6);
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        v11 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v7);
        v12 = *v11;
        v13 = v11[1];
        Hasher.init(_seed:)(v33, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v13);
        String.hash(into:)(v33, v12, v13);
        v14 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v13);
        v15 = v14 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v15 < v10)
          goto LABEL_11;
LABEL_12:
        v16 = *(_QWORD *)(a2 + 48);
        v17 = (_OWORD *)(v16 + 16 * v4);
        v18 = (_OWORD *)(v16 + 16 * v7);
        if (v4 != v7 || v17 >= v18 + 1)
          *v17 = *v18;
        v19 = *(_QWORD *)(a2 + 56);
        v20 = a3(0);
        v21 = *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72);
        v22 = v21 * v4;
        result = v19 + v21 * v4;
        v23 = v21 * v7;
        v24 = v19 + v21 * v7;
        v25 = v24 + v21;
        if (v22 < v23 || result >= v25)
        {
          result = swift_arrayInitWithTakeFrontToBack(result, v24, 1, v20);
        }
        else
        {
          v4 = v7;
          if (v22 == v23)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v15 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v15)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v27 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v28 = *v27;
    v29 = (-1 << v4) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v5 + 8 * (result >> 6));
    v29 = *v27;
    v28 = (-1 << result) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10051D188(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[10];

  v69 = type metadata accessor for UUID(0);
  v62 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v61 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for CRLBoardIdentifier(0);
  v60 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v68 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v57 - v11;
  v13 = -1 << *(_BYTE *)(a2 + 32);
  v14 = (a1 + 1) & ~v13;
  v70 = a2 + 64;
  if (((1 << v14) & *(_QWORD *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    v64 = v10;
    v15 = ~v13;
    v16 = v70;
    v17 = _HashTable.previousHole(before:)(a1, v70, ~v13);
    if ((*(_QWORD *)(v16 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v65 = (v17 + 1) & v15;
      v18 = v15;
      v19 = *(_QWORD *)(v64 + 72);
      v59 = a2;
      v66 = v18;
      v67 = v12;
      v64 = v19;
      while (1)
      {
        v20 = v19 * v14;
        sub_1004B8460(*(_QWORD *)(a2 + 48) + v19 * v14, (uint64_t)v12, type metadata accessor for CRLAssetReferrerIdentifier);
        Hasher.init(_seed:)(v71, *(_QWORD *)(a2 + 40));
        sub_1004B8460((uint64_t)v12, (uint64_t)v8, type metadata accessor for CRLAssetReferrerIdentifier);
        if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
        {
          v21 = (uint64_t)&v8[*(int *)(sub_1004B804C((uint64_t *)&unk_1013E1780) + 48)];
          v63 = a1;
          v23 = v61;
          v22 = v62;
          v24 = v6;
          v25 = v69;
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v8, v69);
          v26 = v8;
          v27 = v68;
          sub_1004B84E0(v21, v68, type metadata accessor for CRLBoardIdentifier);
          Hasher._combine(_:)(1uLL);
          v28 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          dispatch thunk of Hashable.hash(into:)(v71, v25, v28);
          dispatch thunk of Hashable.hash(into:)(v71, v25, v28);
          v29 = (uint64_t *)(v27 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
          v30 = *v29;
          v31 = v29[1];
          swift_bridgeObjectRetain(v31);
          String.hash(into:)(v71, v30, v31);
          swift_bridgeObjectRelease(v31);
          v32 = v27;
          v8 = v26;
          sub_1004B84A4(v32, type metadata accessor for CRLBoardIdentifier);
          v33 = *(void (**)(char *, uint64_t))(v22 + 8);
          a1 = v63;
          v34 = v25;
          a2 = v59;
          v6 = v24;
          v33(v23, v34);
        }
        else
        {
          v35 = v68;
          sub_1004B84E0((uint64_t)v8, v68, type metadata accessor for CRLBoardIdentifier);
          Hasher._combine(_:)(0);
          v36 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          dispatch thunk of Hashable.hash(into:)(v71, v69, v36);
          v37 = (uint64_t *)(v35 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
          v38 = *v37;
          v39 = v37[1];
          swift_bridgeObjectRetain(v39);
          String.hash(into:)(v71, v38, v39);
          swift_bridgeObjectRelease(v39);
          sub_1004B84A4(v35, type metadata accessor for CRLBoardIdentifier);
        }
        v40 = Hasher._finalize()();
        v12 = v67;
        sub_1004B84A4((uint64_t)v67, type metadata accessor for CRLAssetReferrerIdentifier);
        v41 = v66;
        v42 = v40 & v66;
        if ((uint64_t)a1 >= (uint64_t)v65)
          break;
        v19 = v64;
        if (v42 < v65)
          goto LABEL_14;
LABEL_15:
        v43 = *(_QWORD *)(a2 + 48);
        v44 = v43 + v19 * a1;
        v45 = v43 + v20;
        if ((uint64_t)(v19 * a1) < v20 || v44 >= v45 + v19)
        {
          swift_arrayInitWithTakeFrontToBack(v44, v45, 1, v6);
        }
        else if (v19 * a1 != v20)
        {
          swift_arrayInitWithTakeBackToFront(v44);
        }
        v46 = *(_QWORD *)(a2 + 56);
        v47 = *(_QWORD *)(v60 + 72);
        v48 = v47 * a1;
        v49 = v46 + v47 * a1;
        v50 = v46 + v47 * v14;
        if ((uint64_t)(v47 * a1) < (uint64_t)(v47 * v14) || v49 >= v50 + v47)
        {
          swift_arrayInitWithTakeFrontToBack(v49, v50, 1, v58);
        }
        else
        {
          a1 = v14;
          if (v48 == v47 * v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v49);
        }
        a1 = v14;
LABEL_6:
        v14 = (v14 + 1) & v41;
        if (((*(_QWORD *)(v70 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          goto LABEL_24;
      }
      v19 = v64;
      if (v42 < v65)
        goto LABEL_6;
LABEL_14:
      if ((uint64_t)a1 < (uint64_t)v42)
        goto LABEL_6;
      goto LABEL_15;
    }
LABEL_24:
    v51 = (uint64_t *)(v70 + 8 * (a1 >> 6));
    v52 = *v51;
    v53 = (-1 << a1) - 1;
  }
  else
  {
    v51 = (uint64_t *)(v70 + 8 * (a1 >> 6));
    v53 = *v51;
    v52 = (-1 << a1) - 1;
  }
  *v51 = v53 & v52;
  v54 = *(_QWORD *)(a2 + 16);
  v55 = __OFSUB__(v54, 1);
  v56 = v54 - 1;
  if (v55)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v56;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10051D6A8(unint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(_QWORD);
  _QWORD v45[9];

  v44 = a3;
  v40 = a3(0);
  v5 = *(_QWORD *)(v40 - 8);
  result = __chkstk_darwin(v40);
  v43 = (char *)&v40 - v7;
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v12 = a1;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (result + 1) & v11;
      v14 = *(_QWORD *)(v5 + 72);
      v41 = v14;
      v42 = a2 + 64;
      v15 = (uint64_t)v43;
      do
      {
        v16 = v14 * v10;
        v17 = v44;
        sub_1004B8460(*(_QWORD *)(a2 + 48) + v14 * v10, v15, v44);
        v18 = a2;
        Hasher.init(_seed:)(v45, *(_QWORD *)(a2 + 40));
        v19 = v13;
        v20 = v11;
        v21 = type metadata accessor for UUID(0);
        v22 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        dispatch thunk of Hashable.hash(into:)(v45, v21, v22);
        v23 = (uint64_t *)(v15 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
        v24 = *v23;
        v25 = v23[1];
        swift_bridgeObjectRetain(v25);
        String.hash(into:)(v45, v24, v25);
        v26 = v25;
        v11 = v20;
        v13 = v19;
        swift_bridgeObjectRelease(v26);
        v27 = Hasher._finalize()();
        result = sub_1004B84A4(v15, v17);
        v28 = v27 & v11;
        if (v12 >= (uint64_t)v19)
        {
          if (v28 < v19)
          {
            v14 = v41;
            v8 = v42;
            a2 = v18;
          }
          else
          {
            v14 = v41;
            v8 = v42;
            a2 = v18;
            if (v12 >= v28)
              goto LABEL_12;
          }
        }
        else
        {
          v14 = v41;
          v8 = v42;
          a2 = v18;
          if (v28 >= v13 || v12 >= v28)
          {
LABEL_12:
            v29 = *(_QWORD *)(a2 + 48);
            result = v29 + v14 * v12;
            v30 = v29 + v16;
            if (v14 * v12 < v16 || result >= v30 + v14)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v30, 1, v40);
            }
            else if (v14 * v12 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront(result);
            }
            v31 = *(_QWORD *)(a2 + 56);
            v32 = (_QWORD *)(v31 + 8 * v12);
            v33 = (_QWORD *)(v31 + 8 * v10);
            if (v12 != v10 || (v12 = v10, v32 >= v33 + 1))
            {
              *v32 = *v33;
              v12 = v10;
            }
          }
        }
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v34 = (uint64_t *)(v8 + 8 * ((unint64_t)v12 >> 6));
    v35 = *v34;
    v36 = (-1 << v12) - 1;
  }
  else
  {
    v34 = (uint64_t *)(v8 + 8 * (a1 >> 6));
    v36 = *v34;
    v35 = (-1 << a1) - 1;
  }
  *v34 = v36 & v35;
  v37 = *(_QWORD *)(a2 + 16);
  v38 = __OFSUB__(v37, 1);
  v39 = v37 - 1;
  if (v38)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v39;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10051D998(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::Int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;
        Hasher.init(_seed:)(v30, v10);
        v15 = v11;
        String.hash(into:)(v30, v12, v14);
        v16 = Hasher._finalize()();

        result = swift_bridgeObjectRelease(v14);
        v17 = v16 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v17 < v8)
            goto LABEL_5;
        }
        else if (v17 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v17)
        {
LABEL_11:
          v18 = *(_QWORD *)(a2 + 48);
          v19 = (_QWORD *)(v18 + 8 * v3);
          v20 = (_QWORD *)(v18 + 8 * v6);
          if (v3 != v6 || v19 >= v20 + 1)
            *v19 = *v20;
          v21 = *(_QWORD *)(a2 + 56);
          v22 = (_OWORD *)(v21 + 32 * v3);
          v23 = (_OWORD *)(v21 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 2))
          {
            v9 = v23[1];
            *v22 = *v23;
            v22[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (result >> 6));
    v26 = *v24;
    v25 = (-1 << result) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10051DB88(int64_t a1, uint64_t a2)
{
  sub_10051DB94(a1, a2, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

void sub_10051DB94(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD);
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;

  v40 = a3;
  v5 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v43 = a2 + 64;
    v11 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v8);
    v12 = v43;
    if ((*(_QWORD *)(v43 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v13 = (v11 + 1) & v10;
      v14 = *(_QWORD *)(v42 + 72);
      v41 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
      do
      {
        v15 = v14 * v9;
        v41(v7, *(_QWORD *)(a2 + 48) + v14 * v9, v5);
        v16 = *(_QWORD *)(a2 + 40);
        v17 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v18 = dispatch thunk of Hashable._rawHashValue(seed:)(v16, v5, v17);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v5);
        v19 = v18 & v10;
        if (a1 >= (uint64_t)v13)
        {
          if (v19 < v13 || a1 < (uint64_t)v19)
            goto LABEL_6;
        }
        else if (v19 < v13 && a1 < (uint64_t)v19)
        {
          goto LABEL_6;
        }
        v22 = *(_QWORD *)(a2 + 48);
        v23 = v22 + v14 * a1;
        v24 = v22 + v15;
        if (v14 * a1 < v15 || v23 >= v24 + v14)
        {
          swift_arrayInitWithTakeFrontToBack(v23, v24, 1, v5);
        }
        else if (v14 * a1 != v15)
        {
          swift_arrayInitWithTakeBackToFront(v23);
        }
        v25 = *(_QWORD *)(a2 + 56);
        v26 = v40(0);
        v27 = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72);
        v28 = v27 * a1;
        v29 = v25 + v27 * a1;
        v30 = v27 * v9;
        v31 = v25 + v27 * v9;
        v32 = v31 + v27;
        if (v28 < v30 || v29 >= v32)
        {
          swift_arrayInitWithTakeFrontToBack(v29, v31, 1, v26);
        }
        else
        {
          a1 = v9;
          if (v28 == v30)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v29);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
        v12 = v43;
      }
      while (((*(_QWORD *)(v43 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v34 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v35 = *v34;
    v36 = (-1 << a1) - 1;
  }
  else
  {
    v34 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v34;
    v35 = (-1 << a1) - 1;
  }
  *v34 = v36 & v35;
  v37 = *(_QWORD *)(a2 + 16);
  v38 = __OFSUB__(v37, 1);
  v39 = v37 - 1;
  if (v38)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v39;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10051DE3C(unint64_t a1, uint64_t a2)
{
  return sub_10051DE48(a1, a2, type metadata accessor for CRLSyncScheduledActivity);
}

unint64_t sub_10051DE48(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD v32[9];

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v8 = ~v6;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v6);
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v9 = (result + 1) & v8;
      while (1)
      {
        v10 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7);
        Hasher.init(_seed:)(v32, *(_QWORD *)(a2 + 40));
        v11 = v10 ? 0x6863746566 : 1702257011;
        v12 = v10 ? 0xE500000000000000 : 0xE400000000000000;
        String.hash(into:)(v32, v11, v12);
        swift_bridgeObjectRelease(v12);
        result = Hasher._finalize()();
        v13 = result & v8;
        if (v4 >= (uint64_t)v9)
          break;
        if (v13 < v9)
          goto LABEL_17;
LABEL_18:
        v14 = *(_QWORD *)(a2 + 48);
        v15 = (_BYTE *)(v14 + v4);
        v16 = (_BYTE *)(v14 + v7);
        if (v4 != v7 || v15 >= v16 + 1)
          *v15 = *v16;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = a3(0);
        v19 = *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72);
        v20 = v19 * v4;
        result = v17 + v19 * v4;
        v21 = v19 * v7;
        v22 = v17 + v19 * v7;
        v23 = v22 + v19;
        if (v20 < v21 || result >= v23)
        {
          result = swift_arrayInitWithTakeFrontToBack(result, v22, 1, v18);
        }
        else
        {
          v4 = v7;
          if (v20 == v21)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v8;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_27;
      }
      if (v13 < v9)
        goto LABEL_6;
LABEL_17:
      if (v4 < (uint64_t)v13)
        goto LABEL_6;
      goto LABEL_18;
    }
LABEL_27:
    v25 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v26 = *v25;
    v27 = (-1 << v4) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v5 + 8 * (result >> 6));
    v27 = *v25;
    v26 = (-1 << result) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10051E068(int64_t a1, uint64_t a2)
{
  return sub_10051E080(a1, a2, type metadata accessor for CRLBoardViewModelMetadata);
}

unint64_t sub_10051E074(int64_t a1, uint64_t a2)
{
  return sub_10051E080(a1, a2, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
}

unint64_t sub_10051E080(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[9];

  v41 = a3;
  v40 = type metadata accessor for CRLBoardIdentifier(0);
  v5 = *(_QWORD *)(v40 - 8);
  result = __chkstk_darwin(v40);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v10);
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v13 = *(_QWORD *)(v5 + 72);
      v42 = (result + 1) & v12;
      v43 = v13;
      do
      {
        v14 = v13 * v11;
        sub_1004B8460(*(_QWORD *)(a2 + 48) + v13 * v11, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
        Hasher.init(_seed:)(v44, *(_QWORD *)(a2 + 40));
        v15 = type metadata accessor for UUID(0);
        v16 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        dispatch thunk of Hashable.hash(into:)(v44, v15, v16);
        v17 = &v8[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
        v18 = *(_QWORD *)v17;
        v19 = *((_QWORD *)v17 + 1);
        swift_bridgeObjectRetain(v19);
        String.hash(into:)(v44, v18, v19);
        swift_bridgeObjectRelease(v19);
        v20 = Hasher._finalize()();
        result = sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
        v21 = v20 & v12;
        if (a1 >= (uint64_t)v42)
        {
          if (v21 < v42)
          {
            v13 = v43;
          }
          else
          {
            v13 = v43;
            if (a1 >= v21)
              goto LABEL_12;
          }
        }
        else
        {
          v13 = v43;
          if (v21 >= v42 || a1 >= v21)
          {
LABEL_12:
            v22 = *(_QWORD *)(a2 + 48);
            v23 = v22 + v13 * a1;
            v24 = v22 + v14;
            if (v13 * a1 < v14 || v23 >= v24 + v13)
            {
              swift_arrayInitWithTakeFrontToBack(v23, v24, 1, v40);
            }
            else if (v13 * a1 != v14)
            {
              swift_arrayInitWithTakeBackToFront(v23);
            }
            v25 = *(_QWORD *)(a2 + 56);
            v26 = v41(0);
            v27 = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72);
            v28 = v27 * a1;
            result = v25 + v27 * a1;
            v29 = v27 * v11;
            v30 = v25 + v27 * v11;
            v31 = v30 + v27;
            if (v28 < v29 || result >= v31)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v30, 1, v26);
              a1 = v11;
              v13 = v43;
            }
            else
            {
              a1 = v11;
              v13 = v43;
              if (v28 != v29)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                a1 = v11;
              }
            }
          }
        }
        v11 = (v11 + 1) & v12;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v33 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v33;
    v35 = (-1 << a1) - 1;
  }
  else
  {
    v33 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v35 = *v33;
    v34 = (-1 << a1) - 1;
  }
  *v33 = v35 & v34;
  v36 = *(_QWORD *)(a2 + 16);
  v37 = __OFSUB__(v36, 1);
  v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v38;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10051E3A0(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD v33[9];

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      while (1)
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v33, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v33, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
          break;
        if (v14 < v9)
          goto LABEL_11;
LABEL_12:
        v15 = *(_QWORD *)(a2 + 48);
        v16 = (_OWORD *)(v15 + 16 * v3);
        v17 = (_OWORD *)(v15 + 16 * v6);
        if (v3 != v6 || v16 >= v17 + 1)
          *v16 = *v17;
        v18 = *(_QWORD *)(a2 + 56);
        v19 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
        v20 = *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72);
        v21 = v20 * v3;
        v22 = v18 + v20 * v3;
        v23 = v20 * v6;
        v24 = v18 + v20 * v6;
        v25 = v24 + v20;
        if (v21 < v23 || v22 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack(v22, v24, 1, v19);
        }
        else
        {
          v3 = v6;
          if (v21 == v23)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v22);
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v14 < v9)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v14)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v27 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v28 = *v27;
    v29 = (-1 << v3) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10051E5AC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(_QWORD *)(type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100D166F0(v3);
  v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10051E62C(v5);
  *a1 = v3;
}

void sub_10051E62C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t v16;
  Swift::Int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  BOOL v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  __n128 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  void (*v175)(_QWORD, _QWORD, _QWORD);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t *v183;
  char *v184;
  Swift::Int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;

  v2 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v2);
  v184 = (char *)&v165 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  v4 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin(v180);
  v185 = (Swift::Int)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v169 = (uint64_t)&v165 - v7;
  __chkstk_darwin(v8);
  v181 = (uint64_t)&v165 - v9;
  __chkstk_darwin(v10);
  v183 = (uint64_t *)((char *)&v165 - v11);
  __chkstk_darwin(v12);
  v182 = (uint64_t *)((char *)&v165 - v13);
  v14 = a1[1];
  v15 = _minimumMergeRunLength(_:)(v14);
  v190 = a1;
  if (v15 >= v14)
  {
    if (v14 < 0)
      goto LABEL_146;
    if ((unint64_t)v14 >= 2)
    {
      v175 = (void (*)(_QWORD, _QWORD, _QWORD))v14;
      v135 = 0;
      v136 = *(_QWORD *)(v4 + 72);
      v137 = -1;
      v138 = 1;
      v181 = v136;
      v139 = v183;
      do
      {
        v177 = v138;
        v178 = v137;
        v179 = v135;
        do
        {
          v141 = *a1 + v135;
          v142 = v141 + v136;
          v143 = v182;
          sub_1004B8460(v142, (uint64_t)v182, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_1004B8460(v141, (uint64_t)v139, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v144 = v143[1];
          v188 = *v143;
          v189 = v144;
          v145 = a1;
          v146 = v139[1];
          v186 = *v139;
          v187 = v146;
          v147 = type metadata accessor for Locale(0);
          v148 = (uint64_t)v184;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v184, 1, 1, v147);
          v149 = sub_1004D292C();
          swift_bridgeObjectRetain(v144);
          v150 = v146;
          a1 = v145;
          v151 = swift_bridgeObjectRetain(v150);
          v152 = StringProtocol.compare<A>(_:options:range:locale:)(&v186, 0, 0, 0, 1, v148, &type metadata for String, &type metadata for String, v151, v149, v149);
          sub_1004CB800(v148, &qword_1013E1748);
          swift_bridgeObjectRelease(v187);
          swift_bridgeObjectRelease(v189);
          sub_1004B84A4((uint64_t)v139, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v153 = (uint64_t)v143;
          v136 = v181;
          sub_1004B84A4(v153, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v152 != -1)
            break;
          v154 = *v145;
          if (!*v145)
            goto LABEL_149;
          v155 = v154 + v135;
          v156 = v154 + v135 + v136;
          sub_1004B84E0(v156, v185, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          swift_arrayInitWithTakeFrontToBack(v156, v155, 1, v180);
          sub_1004B84E0(v185, v155, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v135 -= v136;
          v140 = __CFADD__(v137++, 1);
          a1 = v190;
        }
        while (!v140);
        v138 = v177 + 1;
        v135 = v179 + v136;
        v137 = v178 - 1;
      }
      while ((void (*)(_QWORD, _QWORD, _QWORD))(v177 + 1) != v175);
    }
    return;
  }
  if (v14 >= 0)
    v16 = v14;
  else
    v16 = v14 + 1;
  if (v14 < -1)
    goto LABEL_155;
  v17 = v15;
  v174 = v4;
  if (v14 < 2)
  {
    v21 = (char *)_swiftEmptyArrayStorage;
    v173 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v165 = _swiftEmptyArrayStorage;
    if (v14 != 1)
    {
      v23 = _swiftEmptyArrayStorage[2];
LABEL_113:
      v157 = v176;
      if (v23 >= 2)
      {
        v158 = *a1;
        do
        {
          v159 = v23 - 2;
          if (v23 < 2)
            goto LABEL_141;
          if (!v158)
            goto LABEL_154;
          v160 = *(_QWORD *)&v21[16 * v159 + 32];
          v161 = *(_QWORD *)&v21[16 * v23 + 24];
          sub_10051F3E8(v158 + *(_QWORD *)(v174 + 72) * v160, v158 + *(_QWORD *)(v174 + 72) * *(_QWORD *)&v21[16 * v23 + 16], v158 + *(_QWORD *)(v174 + 72) * v161, v173);
          if (v157)
            break;
          if (v161 < v160)
            goto LABEL_142;
          if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
            v21 = sub_100D1664C((uint64_t)v21);
          if (v159 >= *((_QWORD *)v21 + 2))
            goto LABEL_143;
          v162 = &v21[16 * v159 + 32];
          *(_QWORD *)v162 = v160;
          *((_QWORD *)v162 + 1) = v161;
          v163 = *((_QWORD *)v21 + 2);
          if (v23 > v163)
            goto LABEL_144;
          memmove(&v21[16 * v23 + 16], &v21[16 * v23 + 32], 16 * (v163 - v23));
          *((_QWORD *)v21 + 2) = v163 - 1;
          v23 = v163 - 1;
        }
        while (v163 > 2);
      }
LABEL_124:
      swift_bridgeObjectRelease(v21);
      v164 = v165;
      v165[2] = 0;
      swift_bridgeObjectRelease(v164);
      return;
    }
  }
  else
  {
    v18 = v16 >> 1;
    v19 = static Array._allocateBufferUninitialized(minimumCapacity:)(v16 >> 1, v180);
    *(_QWORD *)(v19 + 16) = v18;
    v20 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v165 = (_QWORD *)v19;
    v173 = v19 + v20;
  }
  v22 = 0;
  v21 = (char *)_swiftEmptyArrayStorage;
  v166 = v17;
  while (1)
  {
    v24 = v22 + 1;
    v172 = v22;
    if (v22 + 1 >= v14)
    {
      v38 = v22 + 1;
    }
    else
    {
      v167 = v21;
      v168 = *a1;
      v25 = v168;
      v26 = *(_QWORD *)(v4 + 72);
      v185 = v26;
      v27 = v182;
      sub_1004B8460(v168 + v26 * v24, (uint64_t)v182, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v28 = v25 + v26 * v22;
      v29 = v183;
      sub_1004B8460(v28, (uint64_t)v183, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v30 = v27[1];
      v188 = *v27;
      v189 = v30;
      v31 = v29[1];
      v186 = *v29;
      v187 = v31;
      v32 = type metadata accessor for Locale(0);
      v33 = (uint64_t)v184;
      v177 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 56);
      v178 = v32;
      ((void (*)(char *, uint64_t, uint64_t))v177)(v184, 1, 1);
      v34 = sub_1004D292C();
      swift_bridgeObjectRetain(v30);
      v35 = swift_bridgeObjectRetain(v31);
      v171 = v34;
      v179 = StringProtocol.compare<A>(_:options:range:locale:)(&v186, 0, 0, 0, 1, v33, &type metadata for String, &type metadata for String, v35, v34, v34);
      sub_1004CB800(v33, &qword_1013E1748);
      swift_bridgeObjectRelease(v187);
      swift_bridgeObjectRelease(v189);
      v36 = (uint64_t)v29;
      v37 = v168;
      sub_1004B84A4(v36, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v38 = v22 + 2;
      v175 = (void (*)(_QWORD, _QWORD, _QWORD))v14;
      if (v22 + 2 >= v14)
      {
        a1 = v190;
      }
      else
      {
        v170 = v185 * v24;
        v39 = v185 * v38;
        while (1)
        {
          v40 = v38;
          v41 = v179 == -1;
          v42 = v182;
          sub_1004B8460(v37 + v39, (uint64_t)v182, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v43 = v183;
          sub_1004B8460(v37 + v170, (uint64_t)v183, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v44 = v42[1];
          v188 = *v42;
          v189 = v44;
          v45 = v43[1];
          v186 = *v43;
          v187 = v45;
          v46 = (uint64_t)v184;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v177)(v184, 1, 1, v178);
          swift_bridgeObjectRetain(v44);
          v47 = swift_bridgeObjectRetain(v45);
          v48 = StringProtocol.compare<A>(_:options:range:locale:)(&v186, 0, 0, 0, 1, v46, &type metadata for String, &type metadata for String, v47, v171, v171);
          sub_1004CB800(v46, &qword_1013E1748);
          swift_bridgeObjectRelease(v187);
          swift_bridgeObjectRelease(v189);
          sub_1004B84A4((uint64_t)v43, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_1004B84A4((uint64_t)v42, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v41 == (v48 != -1))
            break;
          v38 = v40 + 1;
          v37 += v185;
          if (v175 == (void (*)(_QWORD, _QWORD, _QWORD))(v40 + 1))
          {
            v4 = v174;
            v14 = (Swift::Int)v175;
            v38 = (uint64_t)v175;
            a1 = v190;
            v22 = v172;
            goto LABEL_25;
          }
        }
        a1 = v190;
        v38 = v40;
        v22 = v172;
      }
      v4 = v174;
      v14 = (Swift::Int)v175;
LABEL_25:
      v21 = v167;
      if (v179 == -1)
      {
        if (v38 < v22)
          goto LABEL_150;
        if (v22 < v38)
        {
          v49 = 0;
          v50 = v185;
          v51 = v185 * (v38 - 1);
          v52 = v38 * v185;
          v53 = v22;
          v54 = v22 * v185;
          do
          {
            if (v53 != v38 + v49 - 1)
            {
              v57 = v38;
              v58 = v168;
              if (!v168)
                goto LABEL_153;
              v59 = v168 + v54;
              v179 = v168 + v51;
              sub_1004B84E0(v168 + v54, v169, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
              if (v54 < v51 || v59 >= v58 + v52)
              {
                v55 = v58 + v54;
                v56 = v179;
                swift_arrayInitWithTakeFrontToBack(v55, v179, 1, v180);
              }
              else
              {
                v56 = v179;
                if (v54 != v51)
                  swift_arrayInitWithTakeBackToFront(v59);
              }
              sub_1004B84E0(v169, v56, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
              v38 = v57;
              v50 = v185;
            }
            ++v53;
            --v49;
            v51 -= v50;
            v52 -= v50;
            v54 += v50;
          }
          while (v53 < v38 + v49);
          a1 = v190;
          v21 = v167;
          v4 = v174;
          v14 = (Swift::Int)v175;
          v22 = v172;
        }
      }
    }
    if (v38 < v14)
    {
      if (__OFSUB__(v38, v22))
        goto LABEL_145;
      if (v38 - v22 < v166)
        break;
    }
LABEL_57:
    if (v38 < v22)
      goto LABEL_140;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    v185 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_100D15FCC(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v83 = *((_QWORD *)v21 + 2);
    v82 = *((_QWORD *)v21 + 3);
    v23 = v83 + 1;
    if (v83 >= v82 >> 1)
      v21 = sub_100D15FCC((char *)(v82 > 1), v83 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v23;
    v84 = v21 + 32;
    v85 = (uint64_t *)&v21[16 * v83 + 32];
    v86 = v185;
    *v85 = v22;
    v85[1] = v86;
    if (v83)
    {
      while (1)
      {
        v87 = v23 - 1;
        if (v23 >= 4)
        {
          v92 = &v84[16 * v23];
          v93 = *((_QWORD *)v92 - 8);
          v94 = *((_QWORD *)v92 - 7);
          v98 = __OFSUB__(v94, v93);
          v95 = v94 - v93;
          if (v98)
            goto LABEL_129;
          v97 = *((_QWORD *)v92 - 6);
          v96 = *((_QWORD *)v92 - 5);
          v98 = __OFSUB__(v96, v97);
          v90 = v96 - v97;
          v91 = v98;
          if (v98)
            goto LABEL_130;
          v99 = v23 - 2;
          v100 = &v84[16 * v23 - 32];
          v102 = *(_QWORD *)v100;
          v101 = *((_QWORD *)v100 + 1);
          v98 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          if (v98)
            goto LABEL_132;
          v98 = __OFADD__(v90, v103);
          v104 = v90 + v103;
          if (v98)
            goto LABEL_135;
          if (v104 >= v95)
          {
            v122 = &v84[16 * v87];
            v124 = *(_QWORD *)v122;
            v123 = *((_QWORD *)v122 + 1);
            v98 = __OFSUB__(v123, v124);
            v125 = v123 - v124;
            if (v98)
              goto LABEL_139;
            v115 = v90 < v125;
            goto LABEL_94;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v116 = *((_QWORD *)v21 + 4);
            v117 = *((_QWORD *)v21 + 5);
            v98 = __OFSUB__(v117, v116);
            v109 = v117 - v116;
            v110 = v98;
            goto LABEL_88;
          }
          v89 = *((_QWORD *)v21 + 4);
          v88 = *((_QWORD *)v21 + 5);
          v98 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          v91 = v98;
        }
        if ((v91 & 1) != 0)
          goto LABEL_131;
        v99 = v23 - 2;
        v105 = &v84[16 * v23 - 32];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v108 = __OFSUB__(v106, v107);
        v109 = v106 - v107;
        v110 = v108;
        if (v108)
          goto LABEL_134;
        v111 = &v84[16 * v87];
        v113 = *(_QWORD *)v111;
        v112 = *((_QWORD *)v111 + 1);
        v98 = __OFSUB__(v112, v113);
        v114 = v112 - v113;
        if (v98)
          goto LABEL_137;
        if (__OFADD__(v109, v114))
          goto LABEL_138;
        if (v109 + v114 >= v90)
        {
          v115 = v90 < v114;
LABEL_94:
          if (v115)
            v87 = v99;
          goto LABEL_96;
        }
LABEL_88:
        if ((v110 & 1) != 0)
          goto LABEL_133;
        v118 = &v84[16 * v87];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v98 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v98)
          goto LABEL_136;
        if (v121 < v109)
          goto LABEL_14;
LABEL_96:
        v126 = v87 - 1;
        if (v87 - 1 >= v23)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        v127 = *a1;
        if (!*a1)
          goto LABEL_152;
        v128 = a1;
        v129 = &v84[16 * v126];
        v130 = *(_QWORD *)v129;
        v131 = &v84[16 * v87];
        v132 = *((_QWORD *)v131 + 1);
        v133 = v176;
        sub_10051F3E8(v127 + *(_QWORD *)(v174 + 72) * *(_QWORD *)v129, v127 + *(_QWORD *)(v174 + 72) * *(_QWORD *)v131, v127 + *(_QWORD *)(v174 + 72) * v132, v173);
        v176 = v133;
        if (v133)
          goto LABEL_124;
        if (v132 < v130)
          goto LABEL_126;
        if (v87 > *((_QWORD *)v21 + 2))
          goto LABEL_127;
        *(_QWORD *)v129 = v130;
        *(_QWORD *)&v84[16 * v126 + 8] = v132;
        v134 = *((_QWORD *)v21 + 2);
        if (v87 >= v134)
          goto LABEL_128;
        v23 = v134 - 1;
        memmove(&v84[16 * v87], v131 + 16, 16 * (v134 - 1 - v87));
        *((_QWORD *)v21 + 2) = v134 - 1;
        a1 = v128;
        if (v134 <= 2)
          goto LABEL_14;
      }
    }
    v23 = 1;
LABEL_14:
    v14 = a1[1];
    v22 = v185;
    v4 = v174;
    if (v185 >= v14)
      goto LABEL_113;
  }
  if (__OFADD__(v22, v166))
    goto LABEL_147;
  if (v22 + v166 >= v14)
    v60 = v14;
  else
    v60 = v22 + v166;
  if (v60 >= v22)
  {
    if (v38 != v60)
    {
      v167 = v21;
      v61 = *(_QWORD *)(v4 + 72);
      v62 = v61 * (v38 - 1);
      v177 = v61;
      v63 = v38 * v61;
      v175 = (void (*)(_QWORD, _QWORD, _QWORD))v60;
      do
      {
        v65 = 0;
        v185 = v38;
        v178 = v63;
        v179 = v62;
        while (1)
        {
          v66 = *a1;
          v67 = v63 + v65 + *a1;
          v68 = v182;
          sub_1004B8460(v67, (uint64_t)v182, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v69 = v62 + v65 + v66;
          v70 = v183;
          sub_1004B8460(v69, (uint64_t)v183, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v71 = v68[1];
          v188 = *v68;
          v189 = v71;
          v72 = v70[1];
          v186 = *v70;
          v187 = v72;
          v73 = type metadata accessor for Locale(0);
          v74 = (uint64_t)v184;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v184, 1, 1, v73);
          v75 = sub_1004D292C();
          swift_bridgeObjectRetain(v71);
          v76 = swift_bridgeObjectRetain(v72);
          v77 = StringProtocol.compare<A>(_:options:range:locale:)(&v186, 0, 0, 0, 1, v74, &type metadata for String, &type metadata for String, v76, v75, v75);
          sub_1004CB800(v74, &qword_1013E1748);
          swift_bridgeObjectRelease(v187);
          swift_bridgeObjectRelease(v189);
          sub_1004B84A4((uint64_t)v70, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v77 != -1)
            break;
          v78 = *v190;
          if (!*v190)
            goto LABEL_151;
          v63 = v178;
          v62 = v179;
          v79 = v78 + v178 + v65;
          v80 = v78 + v179 + v65;
          sub_1004B84E0(v79, v181, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          swift_arrayInitWithTakeFrontToBack(v79, v80, 1, v180);
          sub_1004B84E0(v181, v80, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v65 -= v177;
          ++v22;
          v64 = v185;
          a1 = v190;
          if (v185 == v22)
            goto LABEL_50;
        }
        a1 = v190;
        v64 = v185;
        v63 = v178;
        v62 = v179;
LABEL_50:
        v38 = v64 + 1;
        v62 += v177;
        v63 += v177;
        v22 = v172;
      }
      while ((void (*)(_QWORD, _QWORD, _QWORD))v38 != v175);
      v38 = (uint64_t)v175;
      v21 = v167;
    }
    goto LABEL_57;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10051F3E8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t result;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;

  v58 = a4;
  v7 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v7);
  v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  __chkstk_darwin(v59);
  v10 = (uint64_t *)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v56 - v12);
  v15 = *(_QWORD *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1)
    goto LABEL_61;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1)
    goto LABEL_62;
  v17 = (uint64_t)(a2 - a1) / v15;
  v68 = a1;
  v67 = v58;
  v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      v22 = v18 * v15;
      v23 = v58;
      if (v58 < a2 || a2 + v22 <= v58)
      {
        swift_arrayInitWithTakeFrontToBack(v58, a2, v18, v59);
      }
      else if (v58 != a2)
      {
        swift_arrayInitWithTakeBackToFront(v58);
      }
      v36 = v23 + v22;
      v66 = v23 + v22;
      v68 = a2;
      v57 = a1;
      if (v22 >= 1 && a1 < a2)
      {
        v38 = -v15;
        do
        {
          v60 = a3 + v38;
          sub_1004B8460(v36 + v38, (uint64_t)v13, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v39 = a2 + v38;
          sub_1004B8460(a2 + v38, (uint64_t)v10, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          v40 = v13[1];
          v64 = *v13;
          v65 = v40;
          v41 = v38;
          v42 = v10[1];
          v62 = *v10;
          v63 = v42;
          v43 = type metadata accessor for Locale(0);
          v44 = a3;
          v45 = (uint64_t)v13;
          v46 = v10;
          v47 = v61;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v61, 1, 1, v43);
          v48 = sub_1004D292C();
          swift_bridgeObjectRetain(v40);
          v49 = swift_bridgeObjectRetain(v42);
          v50 = StringProtocol.compare<A>(_:options:range:locale:)(&v62, 0, 0, 0, 1, v47, &type metadata for String, &type metadata for String, v49, v48, v48);
          v51 = (uint64_t)v47;
          v10 = v46;
          v13 = (uint64_t *)v45;
          sub_1004CB800(v51, &qword_1013E1748);
          swift_bridgeObjectRelease(v63);
          swift_bridgeObjectRelease(v65);
          sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          sub_1004B84A4(v45, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
          if (v50 == -1)
          {
            a3 = v60;
            if (v44 < a2 || v60 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v60, v39, 1, v59);
              v54 = v58;
              v38 = v41;
            }
            else
            {
              v54 = v58;
              v38 = v41;
              if (v44 != a2)
                swift_arrayInitWithTakeBackToFront(v60);
            }
            v68 += v38;
          }
          else
          {
            v52 = v66;
            v53 = v66 + v41;
            v66 += v41;
            v38 = v41;
            a3 = v60;
            if (v44 < v52 || v60 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack(v60, v53, 1, v59);
              v39 = a2;
              v54 = v58;
            }
            else
            {
              v54 = v58;
              if (v44 != v52)
                swift_arrayInitWithTakeBackToFront(v60);
              v39 = a2;
            }
          }
          v36 = v66;
          if (v66 <= v54)
            break;
          a2 = v39;
        }
        while (v39 > v57);
      }
      goto LABEL_59;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    v19 = v17 * v15;
    v20 = v58;
    if (v58 < a1 || a1 + v19 <= v58)
    {
      swift_arrayInitWithTakeFrontToBack(v58, a1, v17, v59);
      v21 = v20;
    }
    else
    {
      v21 = v58;
      if (v58 != a1)
        swift_arrayInitWithTakeBackToFront(v58);
    }
    v60 = v21 + v19;
    v66 = v21 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      do
      {
        v25 = a3;
        sub_1004B8460(a2, (uint64_t)v13, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        sub_1004B8460(v21, (uint64_t)v10, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        v26 = v13[1];
        v64 = *v13;
        v65 = v26;
        v27 = v10[1];
        v62 = *v10;
        v63 = v27;
        v28 = type metadata accessor for Locale(0);
        v29 = (uint64_t)v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v61, 1, 1, v28);
        v30 = sub_1004D292C();
        swift_bridgeObjectRetain(v26);
        v31 = swift_bridgeObjectRetain(v27);
        v32 = StringProtocol.compare<A>(_:options:range:locale:)(&v62, 0, 0, 0, 1, v29, &type metadata for String, &type metadata for String, v31, v30, v30);
        sub_1004CB800(v29, &qword_1013E1748);
        swift_bridgeObjectRelease(v63);
        swift_bridgeObjectRelease(v65);
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
        v33 = v68;
        if (v32 == -1)
        {
          v35 = a2 + v15;
          if (v68 < a2 || v68 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack(v68, a2, 1, v59);
            a3 = v25;
          }
          else
          {
            a3 = v25;
            if (v68 == a2)
              v33 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v68);
          }
        }
        else
        {
          v34 = v67 + v15;
          if (v68 < v67 || v68 >= v34)
          {
            swift_arrayInitWithTakeFrontToBack(v68, v67, 1, v59);
            a3 = v25;
          }
          else
          {
            a3 = v25;
            if (v68 != v67)
              swift_arrayInitWithTakeBackToFront(v68);
          }
          v67 = v34;
          v35 = a2;
        }
        v68 = v33 + v15;
        v21 = v67;
        if (v67 >= v60)
          break;
        a2 = v35;
      }
      while (v35 < a3);
    }
LABEL_59:
    sub_100D162D8(&v68, &v67, (uint64_t *)&v66);
    return 1;
  }
LABEL_63:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10051FA48(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_10051FAD0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[5];
  v3 = a1[6];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

void sub_10051FB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  void *v4;
  void **v5;
  void *v6;
  id v7;

  v1 = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return;
    goto LABEL_3;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v2 = _CocoaArrayWrapper.endIndex.getter(a1);
  if (v2)
  {
LABEL_3:
    if (v2 < 1)
    {
      __break(1u);
    }
    else if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        sub_100AD7814((Swift::Int *)&v7, v4);

      }
    }
    else
    {
      v5 = (void **)(v1 + 32);
      do
      {
        v6 = *v5++;
        sub_100AD7814((Swift::Int *)&v7, v6);

        --v2;
      }
      while (v2);
    }
  }
}

uint64_t sub_10051FBE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, __n128);
  uint64_t (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v19 = *(_QWORD *)(v3 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
    while (1)
    {
      v15(v12, v14, v2, v10);
      v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v16(v12, 0, 1, v2);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
      sub_100AD569C((uint64_t)v8, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v14 += v19;
      if (!--v13)
        return v16(v12, 1, 1, v2);
    }
  }
  else
  {
    v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    return v16(v12, 1, 1, v2);
  }
  return result;
}

_QWORD *sub_10051FD74(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

uint64_t sub_10051FD9C(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004B8930(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10051FDDC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyCRLCommandChangeContext(a2, a1);
  return a2;
}

_QWORD *sub_10051FE18(_QWORD *a1)
{
  destroy for AnyCRLCommandChangeContext(a1);
  return a1;
}

uint64_t *sub_10051FE4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    a1[1] = v8;
    v9 = type metadata accessor for CRLProto_ObjectMetadata(0);
    v10 = *(int *)(v9 + 24);
    v11 = (char *)v7 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for UnknownStorage(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v15 = swift_bridgeObjectRetain(v8);
    v27 = v14;
    ((void (*)(char *, char *, uint64_t, __n128))v14)(v11, v12, v13, v15);
    v16 = *(int *)(v9 + 28);
    v17 = (uint64_t *)((char *)v7 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = type metadata accessor for CRLProto_Data(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = *v18;
      v23 = v18[1];
      sub_1004BE310(*v18, v23);
      *v17 = v22;
      v17[1] = v23;
      v27((char *)v17 + *(int *)(v19 + 20), (char *)v18 + *(int *)(v19 + 20), v13);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v24 = *(int *)(a3 + 20);
    v25 = *(uint64_t *)((char *)a2 + v24);
    *(uint64_t *)((char *)v7 + v24) = v25;
    swift_bridgeObjectRetain(v25);
  }
  return v7;
}

double sub_10051FFD0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  char *v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  v4 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v5 = (char *)a1 + *(int *)(v4 + 24);
  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = (char *)a1 + *(int *)(v4 + 28);
  v9 = type metadata accessor for CRLProto_Data(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    sub_1004BBBC8(*(_QWORD *)v8, *((_QWORD *)v8 + 1));
    v7(&v8[*(int *)(v9 + 20)], v6);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t *sub_100520094(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain(v5);
  v13 = swift_bridgeObjectRetain(v6);
  v12(v9, v10, v11, v13);
  v14 = *(int *)(v7 + 28);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = type metadata accessor for CRLProto_Data(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = *v16;
    v21 = v16[1];
    sub_1004BE310(*v16, v21);
    *v15 = v20;
    v15[1] = v21;
    ((void (*)(char *, char *, uint64_t))v12)((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v11);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v22 = *(int *)(a3 + 20);
  v23 = *(uint64_t *)((char *)a2 + v22);
  *(uint64_t *)((char *)a1 + v22) = v23;
  swift_bridgeObjectRetain(v23);
  return a1;
}

uint64_t *sub_1005201E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v5 = *a2;
  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  v7 = a2[1];
  v8 = a1[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v10 = *(int *)(v9 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for UnknownStorage(0);
  v34 = *(_QWORD *)(v13 - 8);
  v14 = *(void (**)(char *, char *, uint64_t))(v34 + 24);
  v14(v11, v12, v13);
  v15 = *(int *)(v9 + 28);
  v16 = (uint64_t *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v18 = type metadata accessor for CRLProto_Data(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      v30 = *v17;
      v31 = v17[1];
      sub_1004BE310(*v17, v31);
      v32 = *v16;
      v33 = v16[1];
      *v16 = v30;
      v16[1] = v31;
      sub_1004BBBC8(v32, v33);
      v14((char *)v16 + *(int *)(v18 + 20), (char *)v17 + *(int *)(v18 + 20), v13);
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    v25 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  v23 = *v17;
  v24 = v17[1];
  sub_1004BE310(*v17, v24);
  *v16 = v23;
  v16[1] = v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v16 + *(int *)(v18 + 20), (char *)v17 + *(int *)(v18 + 20), v13);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  v26 = *(int *)(a3 + 20);
  v27 = *(uint64_t *)((char *)a2 + v26);
  v28 = *(uint64_t *)((char *)a1 + v26);
  *(uint64_t *)((char *)a1 + v26) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  return a1;
}

_OWORD *sub_1005203C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 28);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for CRLProto_Data(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *sub_1005204E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v5);
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v6);
  v7 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v8 = *(int *)(v7 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  v27 = *(_QWORD *)(v11 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v27 + 40);
  v12(v9, v10, v11);
  v13 = *(int *)(v7 + 28);
  v14 = (uint64_t *)((char *)a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      v25 = *v14;
      v26 = v14[1];
      *(_OWORD *)v14 = *(_OWORD *)v15;
      sub_1004BBBC8(v25, v26);
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      goto LABEL_7;
    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  v22 = *(int *)(a3 + 20);
  v23 = *(uint64_t *)((char *)a1 + v22);
  *(uint64_t *)((char *)a1 + v22) = *(uint64_t *)((char *)a2 + v22);
  swift_bridgeObjectRelease(v23);
  return a1;
}

uint64_t sub_100520698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005206A4);
}

uint64_t sub_1005206A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100520720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10052072C);
}

uint64_t sub_10052072C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLProto_ObjectMetadata(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1005207A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLProto_ObjectMetadata(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100520818(uint64_t a1)
{
  return sub_1005212EC(a1, &qword_1013E0670);
}

_QWORD *sub_100520824(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD *v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v15 = _swiftEmptyArrayStorage;
    sub_100600858(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v13[0] = *(v4 - 1);
      v13[1] = v5;
      swift_bridgeObjectRetain_n(v5, 2);
      v6 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
      swift_dynamicCast(v14, v13, &type metadata for String, v6, 7);
      v7 = v14[0];
      v8 = v14[1];
      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100600858(0, v2[2] + 1, 1);
        v2 = v15;
      }
      v10 = v2[2];
      v9 = v2[3];
      if (v10 >= v9 >> 1)
      {
        sub_100600858(v9 > 1, v10 + 1, 1);
        v2 = v15;
      }
      v4 += 2;
      v2[2] = v10 + 1;
      v11 = &v2[2 * v10];
      v11[4] = v7;
      v11[5] = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

double *sub_100520960(uint64_t a1)
{
  int64_t v1;
  double *v2;
  __int128 *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  double *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  double *v21;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v21 = _swiftEmptyArrayStorage;
    sub_100600874(0, v1, 0);
    v4 = (__int128 *)(a1 + 32);
    v2 = _swiftEmptyArrayStorage;
    do
    {
      v16 = *v4;
      v18 = v16;
      v5 = (id)v16;
      v6 = *((id *)&v16 + 1);
      v7 = v5;
      v8 = v6;
      v9 = sub_1004B804C(&qword_1013E1D60);
      v10 = sub_1004B804C(&qword_1013E1D68);
      swift_dynamicCast(&v19, &v18, v9, v10, 7);
      v17 = v19;
      v11 = v20;

      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100600874(0, *((_QWORD *)v2 + 2) + 1, 1);
        v2 = v21;
      }
      v13 = *((_QWORD *)v2 + 2);
      v12 = *((_QWORD *)v2 + 3);
      if (v13 >= v12 >> 1)
      {
        sub_100600874(v12 > 1, v13 + 1, 1);
        v2 = v21;
      }
      *((_QWORD *)v2 + 2) = v13 + 1;
      v14 = &v2[3 * v13];
      *((_OWORD *)v14 + 2) = v17;
      *((_QWORD *)v14 + 6) = v11;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

double *sub_100520ADC(uint64_t a1)
{
  uint64_t v2;
  double *result;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double *v8;
  id *v9;
  double v10;
  double v11;
  id v12;
  double *v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2)
    return _swiftEmptyArrayStorage;
  result = (double *)sub_1006008E4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        v7 = _swiftEmptyArrayStorage[2];
        v6 = _swiftEmptyArrayStorage[3];
        if (*(_QWORD *)&v7 >= *(_QWORD *)&v6 >> 1)
          sub_1006008E4(*(_QWORD *)&v6 > 1uLL, *(_QWORD *)&v7 + 1, 1);
        ++v4;
        *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v7 + 1;
        v8 = &_swiftEmptyArrayStorage[2 * *(_QWORD *)&v7];
        *((_QWORD *)v8 + 4) = v5;
        *((_QWORD *)v8 + 5) = &off_10127C5C0;
      }
      while (v2 != v4);
    }
    else
    {
      v9 = (id *)(a1 + 32);
      do
      {
        v10 = _swiftEmptyArrayStorage[2];
        v11 = _swiftEmptyArrayStorage[3];
        v12 = *v9;
        if (*(_QWORD *)&v10 >= *(_QWORD *)&v11 >> 1)
          sub_1006008E4(*(_QWORD *)&v11 > 1uLL, *(_QWORD *)&v10 + 1, 1);
        *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v10 + 1;
        v13 = &_swiftEmptyArrayStorage[2 * *(_QWORD *)&v10];
        *((_QWORD *)v13 + 4) = v12;
        *((_QWORD *)v13 + 5) = &off_10127C5C0;
        ++v9;
        --v2;
      }
      while (v2);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_100520C64(uint64_t a1)
{
  uint64_t v2;
  double *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  _OWORD v16[2];
  double *v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v17 = _swiftEmptyArrayStorage;
  result = sub_100600900(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = type metadata accessor for CRLBoardItem(0);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_100600900(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v17;
        }
        v8 = *((_QWORD *)v3 + 2);
        v7 = *((_QWORD *)v3 + 3);
        if (v8 >= v7 >> 1)
        {
          sub_100600900(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        *((_QWORD *)v3 + 2) = v8 + 1;
        sub_10050CB14(v16, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (id *)(a1 + 32);
      v10 = type metadata accessor for CRLBoardItem(0);
      do
      {
        v15 = *v9;
        v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_100600900(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v17;
        }
        v13 = *((_QWORD *)v3 + 2);
        v12 = *((_QWORD *)v3 + 3);
        if (v13 >= v12 >> 1)
        {
          sub_100600900(v12 > 1, v13 + 1, 1);
          v3 = v17;
        }
        *((_QWORD *)v3 + 2) = v13 + 1;
        sub_10050CB14(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100520E94(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v26 = _swiftEmptyArrayStorage;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = 0;
        do
        {
          v5 = v4 + 1;
          v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
          v24 = v6;
          v7 = type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
          v8 = v6;
          v9 = sub_1004B804C(&qword_1013E1CC0);
          swift_dynamicCast(&v25, &v24, v7, v9, 7);
          v10 = v25;
          v11 = swift_unknownObjectRelease(v8);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          v12 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
          v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
          specialized ContiguousArray._endMutation()(v13);
          v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        v14 = (void **)(a1 + 32);
        v15 = type metadata accessor for CRLiOSMiniFormatterBaseLayerButton();
        do
        {
          v16 = *v14++;
          v24 = v16;
          v17 = v16;
          v18 = sub_1004B804C(&qword_1013E1CC0);
          swift_dynamicCast(&v25, &v24, v15, v18, 7);
          v19 = v25;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
          v21 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
          v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
          specialized ContiguousArray._endMutation()(v22);
          --v2;
        }
        while (v2);
      }
      return v26;
    }
  }
  return result;
}

uint64_t sub_100521070(uint64_t a1)
{
  return sub_100521084(a1, &qword_1013E7880, UIMenuElement_ptr);
}

uint64_t sub_100521084(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  double *v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  _OWORD v20[2];
  double *v21;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
    return (uint64_t)v7;
  v21 = _swiftEmptyArrayStorage;
  result = sub_100600900(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v10 = sub_1004B8930(0, a2, a3);
        swift_dynamicCast(v20, &v19, v10, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_100600900(0, *((_QWORD *)v7 + 2) + 1, 1);
          v7 = v21;
        }
        v12 = *((_QWORD *)v7 + 2);
        v11 = *((_QWORD *)v7 + 3);
        if (v12 >= v11 >> 1)
        {
          sub_100600900(v11 > 1, v12 + 1, 1);
          v7 = v21;
        }
        *((_QWORD *)v7 + 2) = v12 + 1;
        sub_10050CB14(v20, &v7[4 * v12 + 4]);
      }
    }
    else
    {
      v13 = (id *)(a1 + 32);
      v14 = sub_1004B8930(0, a2, a3);
      do
      {
        v19 = *v13;
        v15 = v19;
        swift_dynamicCast(v20, &v19, v14, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_100600900(0, *((_QWORD *)v7 + 2) + 1, 1);
          v7 = v21;
        }
        v17 = *((_QWORD *)v7 + 2);
        v16 = *((_QWORD *)v7 + 3);
        if (v17 >= v16 >> 1)
        {
          sub_100600900(v16 > 1, v17 + 1, 1);
          v7 = v21;
        }
        *((_QWORD *)v7 + 2) = v17 + 1;
        sub_10050CB14(v20, &v7[4 * v17 + 4]);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005212D4(uint64_t a1)
{
  return sub_1005212EC(a1, (uint64_t *)&unk_1013E1CB0);
}

uint64_t sub_1005212E0(uint64_t a1)
{
  return sub_1005212EC(a1, (uint64_t *)&unk_1013F4A80);
}

uint64_t sub_1005212EC(uint64_t a1, uint64_t *a2)
{
  __n128 v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = sub_1004B804C(a2);
    v8 = _bridgeCocoaArray<A>(_:)(v6, v7);
    swift_bridgeObjectRelease(a1);
    return v8;
  }
  else
  {
    v3 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v3);
    return a1;
  }
}

uint64_t sub_10052136C(uint64_t a1)
{
  return sub_100521084(a1, (unint64_t *)&qword_1013DFC10, UIView_ptr);
}

uint64_t sub_100521380(uint64_t a1)
{
  uint64_t v2;
  double *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  double *v16;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v16 = _swiftEmptyArrayStorage;
  result = sub_100600900(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v3 = v16;
      do
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v6 = sub_1004B804C(&qword_1013E0670);
        swift_dynamicCast(v15, &v14, v6, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_100600900(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v16;
        }
        v8 = *((_QWORD *)v3 + 2);
        v7 = *((_QWORD *)v3 + 3);
        if (v8 >= v7 >> 1)
        {
          sub_100600900(v7 > 1, v8 + 1, 1);
          v3 = v16;
        }
        ++v5;
        *((_QWORD *)v3 + 2) = v8 + 1;
        sub_10050CB14(v15, &v3[4 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      v3 = v16;
      do
      {
        v14 = *v9;
        swift_unknownObjectRetain(v14);
        v10 = sub_1004B804C(&qword_1013E0670);
        swift_dynamicCast(v15, &v14, v10, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_100600900(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v16;
        }
        v12 = *((_QWORD *)v3 + 2);
        v11 = *((_QWORD *)v3 + 3);
        if (v12 >= v11 >> 1)
        {
          sub_100600900(v11 > 1, v12 + 1, 1);
          v3 = v16;
        }
        *((_QWORD *)v3 + 2) = v12 + 1;
        sub_10050CB14(v15, &v3[4 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005215BC(uint64_t a1)
{
  return sub_100521084(a1, &qword_1013E56E0, off_101229808);
}

_QWORD *sub_1005215D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  _QWORD *v17;

  v16 = sub_1004B804C(&qword_1013E1C70);
  v2 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E1C78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v17 = _swiftEmptyArrayStorage;
    sub_100600C48(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    v10 = v17;
    do
    {
      sub_1004CB7BC(v11, (uint64_t)v4, &qword_1013E1C70);
      swift_dynamicCast(v8, v4, v16, v5, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      {
        sub_100600C48(0, v10[2] + 1, 1);
        v10 = v17;
      }
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_100600C48(v13 > 1, v14 + 1, 1);
        v10 = v17;
      }
      v10[2] = v14 + 1;
      sub_1004C4938((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, &qword_1013E1C78);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

double *sub_100521790(uint64_t a1)
{
  return sub_1005217CC(a1, (uint64_t)&off_101295290);
}

double *sub_10052179C(uint64_t a1)
{
  return sub_1005217CC(a1, (uint64_t)&off_101295328);
}

double *sub_1005217A8(uint64_t a1)
{
  return sub_1005217CC(a1, (uint64_t)&off_1012951F0);
}

double *sub_1005217B4(uint64_t a1)
{
  return sub_1005217CC(a1, (uint64_t)&off_1012953C8);
}

double *sub_1005217C0(uint64_t a1)
{
  return sub_1005217CC(a1, (uint64_t)&off_101295178);
}

double *sub_1005217CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double *result;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double *v10;
  _QWORD *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double *v16;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
    return _swiftEmptyArrayStorage;
  result = (double *)sub_100600C64(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = 0;
      do
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
        v9 = _swiftEmptyArrayStorage[2];
        v8 = _swiftEmptyArrayStorage[3];
        if (*(_QWORD *)&v9 >= *(_QWORD *)&v8 >> 1)
          sub_100600C64(*(_QWORD *)&v8 > 1uLL, *(_QWORD *)&v9 + 1, 1);
        ++v6;
        *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v9 + 1;
        v10 = &_swiftEmptyArrayStorage[2 * *(_QWORD *)&v9];
        *((_QWORD *)v10 + 4) = v7;
        *((_QWORD *)v10 + 5) = a2;
      }
      while (v4 != v6);
    }
    else
    {
      v11 = (_QWORD *)(a1 + 32);
      v12 = _swiftEmptyArrayStorage[2];
      v13 = 2 * *(_QWORD *)&v12;
      do
      {
        v14 = *v11;
        v15 = _swiftEmptyArrayStorage[3];
        swift_retain(*v11);
        if (*(_QWORD *)&v12 >= *(_QWORD *)&v15 >> 1)
          sub_100600C64(*(_QWORD *)&v15 > 1uLL, *(_QWORD *)&v12 + 1, 1);
        *(_QWORD *)&_swiftEmptyArrayStorage[2] = *(_QWORD *)&v12 + 1;
        v16 = &_swiftEmptyArrayStorage[v13];
        *((_QWORD *)v16 + 4) = v14;
        *((_QWORD *)v16 + 5) = a2;
        v13 += 2;
        ++v11;
        ++*(_QWORD *)&v12;
        --v4;
      }
      while (v4);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_100521960(uint64_t a1)
{
  uint64_t v2;
  double *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  double *v9;
  __int128 v10;
  __int128 v11;
  id *v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  double *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  id v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  double *v25;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v20 = a1;
    else
      v20 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v25 = _swiftEmptyArrayStorage;
  result = sub_100600D0C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v6 = type metadata accessor for CRLGroupItem(0);
        swift_dynamicCast(&v22, &v21, v6, &type metadata for AnyHashable, 7);
        v3 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100600D0C(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v25;
        }
        v8 = *((_QWORD *)v3 + 2);
        v7 = *((_QWORD *)v3 + 3);
        if (v8 >= v7 >> 1)
        {
          sub_100600D0C(v7 > 1, v8 + 1, 1);
          v3 = v25;
        }
        ++v5;
        *((_QWORD *)v3 + 2) = v8 + 1;
        v9 = &v3[5 * v8];
        v10 = v22;
        v11 = v23;
        *((_QWORD *)v9 + 8) = v24;
        *((_OWORD *)v9 + 2) = v10;
        *((_OWORD *)v9 + 3) = v11;
      }
      while (v2 != v5);
    }
    else
    {
      v12 = (id *)(a1 + 32);
      v13 = type metadata accessor for CRLGroupItem(0);
      do
      {
        v21 = *v12;
        v14 = v21;
        swift_dynamicCast(&v22, &v21, v13, &type metadata for AnyHashable, 7);
        v3 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100600D0C(0, *((_QWORD *)v3 + 2) + 1, 1);
          v3 = v25;
        }
        v16 = *((_QWORD *)v3 + 2);
        v15 = *((_QWORD *)v3 + 3);
        if (v16 >= v15 >> 1)
        {
          sub_100600D0C(v15 > 1, v16 + 1, 1);
          v3 = v25;
        }
        *((_QWORD *)v3 + 2) = v16 + 1;
        v17 = &v3[5 * v16];
        v18 = v22;
        v19 = v23;
        *((_QWORD *)v17 + 8) = v24;
        *((_OWORD *)v17 + 2) = v18;
        *((_OWORD *)v17 + 3) = v19;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100521B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100521BF0(a1, a2, a3, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
}

uint64_t sub_100521BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100521D5C(a1, a2, a3, (uint64_t)&unk_10126A5D0, (uint64_t *)&unk_1013E18E0, (uint64_t)&unk_1013FE750);
}

uint64_t sub_100521BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100521BF0(a1, a2, a3, (uint64_t)&unk_10126ADD0, (uint64_t)&type metadata for Bool, (uint64_t)&unk_1013E1AD8);
}

uint64_t sub_100521BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v26[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_1004CB800(a1, &qword_1013E01F0);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v16);
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  if (v21 | v19)
  {
    v26[0] = 0;
    v26[1] = 0;
    v24 = v26;
    v26[2] = v19;
    v26[3] = v21;
  }
  else
  {
    v24 = 0;
  }
  return swift_task_create(v15, v24, a5, a6);
}

uint64_t sub_100521D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100521D5C(a1, a2, a3, (uint64_t)&unk_10126B438, &qword_1013E1CA8, (uint64_t)&unk_1013E1CA0);
}

uint64_t sub_100521D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12) == 1)
  {
    sub_1004CB800(a1, &qword_1013E01F0);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v16);
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = sub_1004B804C(a5);
  if (v21 | v19)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v19;
    v27[3] = v21;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v15, v25, v24, a6);
}

void sub_100521EB8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  double v13;
  uint64_t v14;
  NSString v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD v20[3];
  char v21[24];

  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v2, "navigationItem");
  v8 = objc_msgSend(v2, "traitCollection");
  v9 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");
  v10 = objc_msgSend(v8, "crl_isCompactWidth");
  v11 = v10;
  if (v9)
  {
    if ((v10 & 1) == 0)
    {

      if (a2)
        goto LABEL_5;
      goto LABEL_9;
    }
    v12 = objc_msgSend(v8, "crl_isCompactHeight");

    if ((v12 & 1) != 0)
    {
LABEL_4:
      if (a2)
      {
LABEL_5:
        v14 = a2;
LABEL_10:
        swift_bridgeObjectRetain(a2);
        v15 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v13 = swift_bridgeObjectRelease(v14).n128_u64[0];
        goto LABEL_11;
      }
LABEL_9:
      v16 = *(char **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v17, v21, 0, 0);
      sub_1004B8460(v17, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
      v18 = v16;
      v19 = sub_1004B804C(&qword_1013E1980);
      CRRegister.wrappedValue.getter(v19);
      v14 = v20[2];
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);

      goto LABEL_10;
    }
  }
  else
  {

    if ((v11 & 1) == 0)
      goto LABEL_4;
  }
  v15 = 0;
LABEL_11:
  objc_msgSend(v7, "setTitle:", v15, v13);

}

uint64_t sub_1005220CC()
{
  uint64_t v0;
  void *v2;

  if ((*(_BYTE *)v0 & 1) == 0)
    return 2;
  if ((*(_BYTE *)(v0 + 3) & 1) != 0)
  {
    v2 = *(void **)(v0 + 24);
    if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0
      || (objc_msgSend(v2, "crl_isCompactWidth") & 1) != 0
      || (*(_BYTE *)(v0 + 34) & 1) != 0)
    {
      return 0;
    }
  }
  else if ((*(_BYTE *)(v0 + 34) & 1) == 0 && (*(_BYTE *)(v0 + 1) & 1) == 0 || (*(_BYTE *)(v0 + 34) & 1) != 0)
  {
    return 0;
  }
  if ((*(_BYTE *)(v0 + 1) & 1) == 0)
    return 2;
  return 0;
}

uint64_t sub_10052215C(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_DWORD *)((char *)v6 + 15) = *(_DWORD *)((char *)a1 + 31);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_DWORD *)((char *)v8 + 15) = *(_DWORD *)((char *)a2 + 31);
  return sub_10054B6AC((unsigned __int8 *)&v5, (unsigned __int8 *)&v7) & 1;
}

id sub_1005221A4@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  char *v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  char v35;
  unsigned __int8 v36;
  id result;
  uint64_t v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  _BOOL4 IsReduceMotionEnabled;
  unsigned int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char v48[24];

  v4 = v3;
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "horizontalSizeClass");
  v45 = a2;
  if (v11 == (id)1)
    v41 = 1;
  else
    v41 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");
  v12 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  v13 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController);
  if (!v13)
    goto LABEL_12;
  if ((objc_msgSend(v13, "isBeingPresented") & 1) != 0)
    goto LABEL_11;
  v14 = *(void **)(v4 + v12);
  if (!v14)
    goto LABEL_12;
  if ((objc_msgSend(v14, "isMovingToParentViewController") & 1) != 0)
  {
LABEL_11:
    v39 = 1;
    goto LABEL_13;
  }
  v15 = *(void **)(v4 + v12);
  if (v15)
  {
    v16 = objc_msgSend(v15, "presentingViewController");
    if (v16)
    {

      goto LABEL_11;
    }
  }
LABEL_12:
  v39 = 0;
LABEL_13:
  v17 = sub_100C1CAE8();
  v18 = objc_msgSend(v17, "mode");

  v19 = (void *)objc_opt_self(UIDevice);
  v20 = v18;
  if (objc_msgSend(v19, "crl_phoneUI"))
    v40 = objc_msgSend((id)objc_opt_self(UIScreen), "crl_deviceIsLandscape");
  else
    v40 = 0;
  v21 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController), "miniFormatterPresenter");
  if (v21)
  {
    v22 = v21;
    v44 = objc_msgSend(v21, "isPresentingMiniFormatter");
    swift_unknownObjectRelease(v22);
  }
  else
  {
    v44 = 0;
  }
  IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  v23 = *(char **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v24 = *(_QWORD *)(*(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
  v25 = objc_msgSend(v19, "crl_phoneUI");
  v26 = objc_msgSend(a1, "crl_isCompactWidth");
  v27 = (v25 ^ 1) & v26;
  if (((v25 ^ 1) & 1) == 0 && v26)
    v27 = objc_msgSend(a1, "crl_isCompactHeight") ^ 1;
  v42 = v27;
  v28 = *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v28, v48, 0, 0);
  sub_1004B8460(v28, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  v29 = v23;
  v30 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v30);
  v31 = (uint64_t)v10;
  v32 = v46;
  v33 = v47;
  sub_1004B84A4(v31, type metadata accessor for CRLBoardCRDTData);

  v34 = objc_msgSend(v20, "wantsDoneButtonInCompact");
  LOBYTE(v29) = v41;
  v35 = v34 & v41;
  LOBYTE(v28) = objc_msgSend(*(id *)(v4+ OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "shouldEnableToolbarDoneButton");
  v36 = objc_msgSend(v20, "wantsToSuppressBottomToolbarInCompact");

  result = a1;
  *(_BYTE *)a3 = (_BYTE)v29;
  *(_BYTE *)(a3 + 1) = v39;
  *(_BYTE *)(a3 + 2) = v40;
  *(_BYTE *)(a3 + 3) = v44;
  *(_BYTE *)(a3 + 4) = v45 & 1;
  *(_BYTE *)(a3 + 5) = IsReduceMotionEnabled;
  *(_BYTE *)(a3 + 6) = v24 != 0;
  *(_BYTE *)(a3 + 7) = v42;
  *(_QWORD *)(a3 + 8) = v32;
  *(_QWORD *)(a3 + 16) = v33;
  *(_QWORD *)(a3 + 24) = result;
  *(_BYTE *)(a3 + 32) = v35;
  *(_BYTE *)(a3 + 33) = v28;
  *(_BYTE *)(a3 + 34) = v36;
  return result;
}

void sub_100522548(unsigned __int8 *a1, int a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  int v30;
  uint64x2_t v31;
  int16x8_t v32;
  __int16 v33;
  char v34;
  id v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  objc_class *v49;
  unint64_t v50;
  objc_class *v51;
  void *v52;
  objc_class *v53;
  int v54;
  uint64_t v55;
  char **v56;
  char **v57;
  char *v58;
  unint64_t v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  unint64_t v64;
  objc_class *v65;
  void *v66;
  void *v67;
  objc_class *v68;
  unint64_t v69;
  uint64_t v70;
  void *v71;
  objc_class *v72;
  char v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  Class isa;
  uint64_t v79;
  Class v80;
  id v81;
  unint64_t v82;
  id v83;
  unint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id v98;
  void *v99;
  void *v100;
  void *v101;
  id v102;
  char **v103;
  _OWORD *v104;
  uint64_t inited;
  id v106;
  id v107;
  unsigned __int8 *v108;
  id v109;
  id v110;
  id v111;
  _BOOL8 v112;
  id v113;
  id v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  unint64_t v118;
  id v119;
  void *v120;
  id v121;
  void *v122;
  void *v123;
  _BOOL8 v124;
  id v125;
  void *v126;
  void *v127;
  _BOOL8 v128;
  unsigned int v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  id v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  NSString v140;
  id v141;
  Class v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  void *v149;
  id v150;
  unint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  char *v159;
  unint64_t v160;
  unint64_t v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  id v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  id v176;
  id v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  void *v188;
  void *v189;
  void *v190;
  id v191;
  _BOOL8 v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  id v198;
  id v199;
  id v200;
  Class v201;
  double v202;
  uint64_t v203;
  id v204;
  id v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  id v212;
  double v213;
  objc_class *v214;
  id v215;
  id v216;
  Class v217;
  id v218;
  _QWORD *v219;
  char **v220;
  Class v221;
  id v222;
  Class v223;
  id v224;
  double v225;
  uint64_t v226;
  NSArray v227;
  unsigned __int8 v228;
  id v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  id v238;
  uint64_t v239;
  id v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  uint64_t v248;
  uint64_t v249;
  id v250;
  uint64_t v251;
  void *v252;
  uint64_t v253;
  int v254;
  int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  __int128 v267;
  __int128 v268;
  objc_class *v269;
  unsigned __int8 *v270;
  char v271[40];
  char v272[56];
  uint64_t v273;
  _QWORD *v274;
  uint64_t aBlock;
  uint64_t v276;
  void *v277;
  ValueMetadata *v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  unint64_t v284;
  unsigned __int8 v285;
  unsigned __int32 v286;
  char v287;
  char v288;
  char v289;
  uint64_t v290;
  uint64_t v291;
  void *v292;
  __int16 v293;
  char v294;
  UIImage_optional v295;
  UIAction_optional v296;
  UIMenu_optional v297;

  LODWORD(v263) = a2;
  v3 = a1;
  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  v11 = a1[7];
  *(_QWORD *)&v267 = *((_QWORD *)a1 + 1);
  *(_QWORD *)&v268 = *((_QWORD *)a1 + 2);
  v12 = a1[32];
  v13 = a1[33];
  v14 = v4 & 1;
  v15 = v5 & 1;
  v16 = v6 & 1;
  v264 = v7 & 1;
  v265 = v8 & 1;
  v266 = v9 & 1;
  v17 = v10 & 1;
  v18 = v11 & 1;
  v19 = v12 & 1;
  v20 = v13 & 1;
  LODWORD(v269) = a1[34] & 1;
  v21 = (void *)*((_QWORD *)a1 + 3);
  v22 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v22);
  v262 = (char *)&v252 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v19 | (v20 << 8);
  v270 = v3;
  if ((v263 & 1) == 0)
  {
    v256 = v14;
    v257 = v15;
    v258 = v16;
    v260 = v17;
    v261 = v18;
    v259 = v21;
    v263 = v2;
    v25 = v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState;
    v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState);
    v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 8);
    v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 16);
    v28 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 24);
    v30 = *(unsigned __int16 *)(v25 + 32) | (*(unsigned __int8 *)(v25 + 34) << 16);
    if (v29)
    {
      v285 = v27 & 1;
      v31 = (uint64x2_t)vdupq_n_s64(v27);
      v32 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v31, (uint64x2_t)xmmword_100EF7CF0), (int32x4_t)vshlq_u64(v31, (uint64x2_t)xmmword_100EF7CE0));
      *(int8x8_t *)v32.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v32), (int8x8_t)0x1000100010001);
      v286 = vmovn_s16(v32).u32[0];
      v287 = BYTE5(v27) & 1;
      v288 = BYTE6(v27) & 1;
      v289 = HIBYTE(v27) & 1;
      v290 = v26;
      v291 = v29;
      v292 = v28;
      v293 = v30 & 0x101;
      v294 = BYTE2(v30) & 1;
      v33 = v24;
      sub_10054E878(v27, v26, v29, v28);
      v3 = v270;
      sub_10054E778((uint64_t)v270);
      v34 = sub_10054B6AC(&v285, v3);
      sub_1004DB520((uint64_t)v3);
      sub_10054E7A8(v27, v26, v29, v28);
      LOWORD(v24) = v33;
      v2 = v263;
      v21 = v259;
      v18 = v261;
      v17 = v260;
      LODWORD(v16) = v258;
      LODWORD(v15) = v257;
      LODWORD(v14) = v256;
      if ((v34 & 1) != 0)
      {
        if (qword_1013DD6B8 == -1)
        {
LABEL_5:
          swift_beginAccess(&static OS_os_log.crlDefault, &aBlock, 0, 0);
          v35 = (id)static OS_os_log.crlDefault;
          v37 = static os_log_type_t.default.getter(v36);
          sub_100A06EBC((uint64_t)v35, &_mh_execute_header, v37, "Toolbar button state unchanged. Skipping update.", 48, 2, (uint64_t)_swiftEmptyArrayStorage);

          return;
        }
LABEL_192:
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
        goto LABEL_5;
      }
    }
    else
    {
      LODWORD(v15) = v257;
      LODWORD(v14) = v256;
      LODWORD(v16) = v258;
      v38 = v260;
      v252 = v28;
      v39 = v261;
      v253 = v256 | (v257 << 8) | (v258 << 16) | (v264 << 24) | (v265 << 32) | (v266 << 40) | (v260 << 48) | (v261 << 56);
      v254 = v24 | ((_DWORD)v269 << 16);
      v3 = v270;
      v255 = v24;
      sub_10054E778((uint64_t)v270);
      v40 = v27;
      v17 = v38;
      v18 = v39;
      sub_10054E7A8(v40, v26, 0, v252);
      v21 = v259;
      sub_10054E7A8(v253, v267, v268, v259);
      LOWORD(v24) = v255;
      v2 = v263;
    }
  }
  v41 = v14 | ((unint64_t)v15 << 8) | ((unint64_t)v16 << 16) | ((unint64_t)v264 << 24) | (v265 << 32) | (v266 << 40) | (v17 << 48) | (v18 << 56);
  v42 = v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState;
  v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState);
  v44 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 8);
  v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 16);
  v46 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState + 24);
  v47 = v267;
  *(_QWORD *)v42 = v41;
  *(_QWORD *)(v42 + 8) = v47;
  *(_QWORD *)(v42 + 16) = v268;
  *(_QWORD *)(v42 + 24) = v21;
  v42 += 32;
  *(_WORD *)v42 = v24;
  *(_BYTE *)(v42 + 2) = (_BYTE)v269;
  sub_10054E778((uint64_t)v3);
  sub_10054E7A8(v43, v44, v45, v46);
  v48 = v2;
  v49 = sub_100C1CE00();
  v50 = v3[1];
  if ((v50 & 1) == 0
    || (v3[3] & 1) != 0
    && ((v52 = (void *)*((_QWORD *)v3 + 3),
         (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
     || (objc_msgSend(v52, "crl_isCompactWidth") & 1) != 0))
  {
    if ((v3[32] & 1) == 0)
      goto LABEL_16;
    if ((v3[3] & 1) != 0)
    {
      v66 = (void *)*((_QWORD *)v3 + 3);
      if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0
        || (objc_msgSend(v66, "crl_isCompactWidth") & 1) != 0)
      {
        goto LABEL_16;
      }
    }
    v51 = sub_100C1CE14();
  }
  else
  {
    v51 = sub_100C1CF38();
  }
  v53 = v51;

  v49 = v53;
LABEL_16:
  v283 = (uint64_t)_swiftEmptyArrayStorage;
  v284 = (unint64_t)_swiftEmptyArrayStorage;
  v281 = (uint64_t)_swiftEmptyArrayStorage;
  v282 = (unint64_t)_swiftEmptyArrayStorage;
  v54 = *v3;
  v269 = v49;
  if ((v54 & 1) == 0)
  {
    v55 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v56 = (char **)swift_allocObject(v55, 48, 7);
    *((_OWORD *)v56 + 1) = xmmword_100EF5560;
    v57 = (char **)v48;
    v56[4] = (char *)sub_100C1CDC4();
    v58 = (char *)sub_100C1CDEC();
    v56[5] = v58;
    aBlock = (uint64_t)v56;
    specialized Array._endMutation()(v58);
    v59 = aBlock;
    v282 = aBlock;
    if ((v3[6] & 1) == 0)
      goto LABEL_22;
    v60 = sub_100C1CFA8();
    if (!v60)
      goto LABEL_22;
    v61 = v60;
    if (!(v59 >> 62))
    {
      v62 = v60;
LABEL_21:
      sub_100CFBF4C(0, 0, (uint64_t)v61);

LABEL_22:
      if ((v3[4] & 1) != 0)
        goto LABEL_66;
      v63 = sub_100C1CD38();
      v64 = v282;
      if (!(v282 >> 62)
        || ((v282 & 0x8000000000000000) != 0 ? (v232 = v282) : (v232 = v282 & 0xFFFFFFFFFFFFFF8),
            swift_bridgeObjectRetain(v282),
            v233 = _CocoaArrayWrapper.endIndex.getter(v232),
            swift_bridgeObjectRelease(v64),
            (v233 & 0x8000000000000000) == 0))
      {
        sub_100CFBF4C(0, 0, (uint64_t)v63);
        goto LABEL_66;
      }
      __break(1u);
      goto LABEL_174;
    }
    if ((v59 & 0x8000000000000000) != 0)
      v239 = v59;
    else
      v239 = v59 & 0xFFFFFFFFFFFFFF8;
    v240 = v60;
    swift_bridgeObjectRetain(v59);
    v241 = _CocoaArrayWrapper.endIndex.getter(v239);
    swift_bridgeObjectRelease(v59);
    if ((v241 & 0x8000000000000000) == 0)
      goto LABEL_21;
    __break(1u);
    goto LABEL_198;
  }
  LOBYTE(v45) = v3[2];
  if ((v45 & 1) != 0)
  {
    if ((v3[3] & 1) == 0
      || (v71 = (void *)*((_QWORD *)v3 + 3),
          (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) == 0)
      && (objc_msgSend(v71, "crl_isCompactWidth") & 1) == 0)
    {
      if ((v3[32] & 1) == 0 && ((v50 | v3[33]) & 1) == 0)
      {
        v59 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_46;
      }
    }
    v72 = v49;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      goto LABEL_190;
    goto LABEL_45;
  }
  if ((v3[3] & 1) != 0
    && ((v67 = (void *)*((_QWORD *)v3 + 3),
         (objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0)
     || (objc_msgSend(v67, "crl_isCompactWidth") & 1) != 0)
    || (v3[32] & 1) != 0
    || ((v50 | v3[33]) & 1) != 0)
  {
    v65 = v49;
    v57 = (char **)v48;
  }
  else
  {
    v57 = (char **)v48;
    v65 = (objc_class *)sub_100C1CDEC();
  }
  v68 = v65;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
  v59 = *(_QWORD *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v69 = *(_QWORD *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v59 >= v69 >> 1)
    goto LABEL_168;
  while (2)
  {
    v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v68);
    specialized Array._endMutation()(v70);

LABEL_48:
    v278 = &type metadata for CRLFeatureFlags;
    v279 = sub_1004DB6DC();
    LOBYTE(aBlock) = 7;
    v73 = isFeatureEnabled(_:)(&aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
    if ((v73 & 1) == 0)
    {
LABEL_51:
      if ((v3[6] & 1) == 0 || (v75 = sub_100C1CFA8()) == 0)
      {
        v68 = (objc_class *)sub_100C1CDC4();
        v82 = v282;
        if (v282 >> 62)
        {
          v230 = (v282 & 0x8000000000000000) != 0 ? v282 : v282 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v282);
          v231 = _CocoaArrayWrapper.endIndex.getter(v230);
          swift_bridgeObjectRelease(v82);
          if (v231 < 0)
          {
            __break(1u);
LABEL_168:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v59 + 1, 1);
            continue;
          }
        }
        sub_100CFBF4C(0, 0, (uint64_t)v68);
        if ((v3[4] & 1) != 0)
          goto LABEL_66;
LABEL_64:
        v63 = sub_100C1CD38();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
        v59 = *(_QWORD *)((v284 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v84 = *(_QWORD *)((v284 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v59 >= v84 >> 1)
          goto LABEL_184;
        goto LABEL_65;
      }
      v76 = v75;
      v77 = sub_100C1CDC4();
      if ((v45 & 1) != 0)
      {
        v79 = v282;
        if (!(v282 >> 62))
          goto LABEL_61;
      }
      else
      {
        isa = Int._bridgeToObjectiveC()().super.super.isa;
        v57 = &selRef_p_didReceiveMemoryWarning_;
        objc_msgSend(v77, "indexOfAccessibilityElement:", isa);

        v77 = sub_100C1CDC4();
        v79 = v283;
        if (!((unint64_t)v283 >> 62)
          || (v283 < 0 ? (v242 = v283) : (v242 = v283 & 0xFFFFFFFFFFFFFF8),
              swift_bridgeObjectRetain(v283),
              v243 = _CocoaArrayWrapper.endIndex.getter(v242),
              swift_bridgeObjectRelease(v79),
              (v243 & 0x8000000000000000) == 0))
        {
          sub_100CFBF4C(0, 0, (uint64_t)v77);
          v80 = Int._bridgeToObjectiveC()().super.super.isa;
          objc_msgSend(v76, "indexOfAccessibilityElement:", v80);

          v79 = v283;
          if (!((unint64_t)v283 >> 62))
          {
            v81 = v76;
            v57 = (char **)v48;
            goto LABEL_63;
          }
          goto LABEL_210;
        }
        __break(1u);
      }
      if (v79 < 0)
        v244 = v79;
      else
        v244 = v79 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v79);
      v245 = _CocoaArrayWrapper.endIndex.getter(v244);
      swift_bridgeObjectRelease(v79);
      if (v245 < 0)
      {
        __break(1u);
LABEL_210:
        if (v79 < 0)
          v246 = v79;
        else
          v246 = v79 & 0xFFFFFFFFFFFFFF8;
        v247 = v76;
        swift_bridgeObjectRetain(v79);
        v248 = _CocoaArrayWrapper.endIndex.getter(v246);
        swift_bridgeObjectRelease(v79);
        v57 = (char **)v48;
        if ((v248 & 0x8000000000000000) == 0)
          goto LABEL_63;
        __break(1u);
LABEL_215:
        if (v79 < 0)
          v249 = v79;
        else
          v249 = v79 & 0xFFFFFFFFFFFFFF8;
        v250 = v76;
        swift_bridgeObjectRetain(v79);
        v251 = _CocoaArrayWrapper.endIndex.getter(v249);
        swift_bridgeObjectRelease(v79);
        if (v251 < 0)
          __break(1u);
LABEL_63:
        sub_100CFBF4C(0, 0, (uint64_t)v76);

        if ((v3[4] & 1) != 0)
          goto LABEL_66;
        goto LABEL_64;
      }
LABEL_61:
      sub_100CFBF4C(0, 0, (uint64_t)v77);
      v79 = v282;
      if (!(v282 >> 62))
      {
        v83 = v76;
        goto LABEL_63;
      }
      goto LABEL_215;
    }
    break;
  }
  v63 = sub_100C1CDD8();
  v74 = v282;
  if (!(v282 >> 62))
  {
LABEL_50:
    sub_100CFBF4C(0, 0, (uint64_t)v63);
    goto LABEL_51;
  }
  while (1)
  {
    if (v74 < 0)
      v235 = v74;
    else
      v235 = v74 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v74);
    v236 = _CocoaArrayWrapper.endIndex.getter(v235);
    swift_bridgeObjectRelease(v74);
    if ((v236 & 0x8000000000000000) == 0)
      goto LABEL_50;
    __break(1u);
LABEL_184:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v84 > 1, v59 + 1, 1);
LABEL_65:
    v85 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v63);
    specialized Array._endMutation()(v85);
LABEL_66:
    v86 = objc_msgSend(v57, "navigationItem");
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v87 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v87 + 16, v57);
    v88 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054E7D8, v87);
    objc_msgSend(v86, "setBackAction:", v88);

    v89 = type metadata accessor for TaskPriority(0);
    v90 = (uint64_t)v262;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v262, 1, 1, v89);
    type metadata accessor for MainActor(0);
    v56 = v57;
    v91 = static MainActor.shared.getter(v56);
    v92 = (_QWORD *)swift_allocObject(&unk_10126A970, 40, 7);
    v92[2] = v91;
    v92[3] = &protocol witness table for MainActor;
    v92[4] = v56;
    v93 = sub_100521BF0(v90, (uint64_t)&unk_1013E1990, (uint64_t)v92, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
    v94 = objc_msgSend(v56, "navigationItem", swift_release(v93).n128_f64[0]);
    v95 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v95 + 16, v56);
    v96 = swift_allocObject(&unk_10126A998, 32, 7);
    *(_QWORD *)(v96 + 16) = sub_10054E850;
    *(_QWORD *)(v96 + 24) = v95;
    v279 = (unint64_t)sub_10054E858;
    v280 = v96;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v276 = *(_QWORD *)"";
    v277 = sub_100524AAC;
    v278 = (ValueMetadata *)&unk_10126A9B0;
    v97 = _Block_copy(&aBlock);
    objc_msgSend(v94, "setTitleMenuProvider:", v97, swift_release(v280).n128_f64[0]);
    _Block_release(v97);

    sub_100521EB8(0, 0);
    LOBYTE(v97) = v3[7];
    v98 = objc_msgSend(v56, "navigationItem");
    v99 = v98;
    if ((v97 & 1) != 0)
    {
      v100 = (void *)objc_opt_self(UIDeferredMenuElement);
      v279 = (unint64_t)sub_100524B24;
      v280 = 0;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v276 = *(_QWORD *)"";
      v277 = sub_100524B50;
      v278 = (ValueMetadata *)&unk_10126A9D8;
      v101 = _Block_copy(&aBlock);
      v102 = objc_msgSend(v100, "elementWithUncachedProvider:", v101);
      _Block_release(v101);
      objc_msgSend(v99, "setAdditionalOverflowItems:", v102);

      v99 = v102;
    }
    else
    {
      objc_msgSend(v98, "setAdditionalOverflowItems:", 0);
    }

    v274 = _swiftEmptyArrayStorage;
    v103 = &selRef_masksToBounds;
    v104 = &unk_100EF5000;
    if ((v54 & 1) != 0)
    {
      if ((v3[3] & 1) == 0)
      {
        if (((v50 | v3[34]) & 1) == 0)
        {
          v61 = (void *)sub_1004B804C((uint64_t *)&unk_1013E4180);
          inited = swift_initStackObject(v61, v272);
          *(_OWORD *)(inited + 16) = xmmword_100EF7D00;
          v106 = sub_100C1CD9C();
          *(_QWORD *)(inited + 32) = v106;
          v107 = sub_100C1CD74();
          *(_QWORD *)(inited + 40) = v107;
          v108 = v3;
          v109 = sub_100C1CD88();
          *(_QWORD *)(inited + 48) = v109;
          v110 = sub_100C1CD4C();
          *(_QWORD *)(inited + 56) = v110;
          v111 = sub_100C1CD60();
          *(_QWORD *)(inited + 64) = v111;
          aBlock = inited;
          specialized Array._endMutation()(v111);
          v59 = aBlock;
          v112 = (v108[4] & 1) == 0;
          objc_msgSend(v106, "setEnabled:", v112);
          objc_msgSend(v107, "setEnabled:", v112);
          objc_msgSend(v109, "setEnabled:", v112);
          objc_msgSend(v110, "setEnabled:", v112);
          objc_msgSend(v111, "setEnabled:", v112);
          aBlock = (uint64_t)_swiftEmptyArrayStorage;
          sub_100600890(0, 5, 0);
          v57 = (char **)aBlock;
          v50 = v59 & 0xC000000000000001;
          if ((v59 & 0xC000000000000001) == 0)
          {
            v113 = *(id *)(v59 + 32);
LABEL_76:
            v114 = v113;
            v115 = swift_allocObject(v61, 40, 7);
            v268 = xmmword_100EEF400;
            *(_OWORD *)(v115 + 16) = xmmword_100EEF400;
            *(_QWORD *)(v115 + 32) = v114;
            v273 = v115;
            specialized Array._endMutation()(v115);
            v116 = (char *)v273;
            v118 = (unint64_t)v57[2];
            v117 = (unint64_t)v57[3];
            if (v118 >= v117 >> 1)
            {
              sub_100600890(v117 > 1, v118 + 1, 1);
              v57 = (char **)aBlock;
            }
            v57[2] = (char *)(v118 + 1);
            v57[v118 + 4] = v116;
            if (v50)
              v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v59);
            else
              v119 = *(id *)(v59 + 40);
            v157 = v119;
            v158 = swift_allocObject(v61, 40, 7);
            *(_OWORD *)(v158 + 16) = v268;
            *(_QWORD *)(v158 + 32) = v157;
            v273 = v158;
            specialized Array._endMutation()(v158);
            v159 = (char *)v273;
            v161 = (unint64_t)v57[2];
            v160 = (unint64_t)v57[3];
            if (v161 >= v160 >> 1)
            {
              sub_100600890(v160 > 1, v161 + 1, 1);
              v57 = (char **)aBlock;
            }
            v57[2] = (char *)(v161 + 1);
            v57[v161 + 4] = v159;
            if (v50)
              v162 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(2, v59);
            else
              v162 = *(id *)(v59 + 48);
            v163 = v162;
            v164 = swift_allocObject(v61, 40, 7);
            *(_OWORD *)(v164 + 16) = v268;
            *(_QWORD *)(v164 + 32) = v163;
            v273 = v164;
            specialized Array._endMutation()(v164);
            v165 = v273;
            v167 = (unint64_t)v57[2];
            v166 = (unint64_t)v57[3];
            if (v167 >= v166 >> 1)
              sub_100600890(v166 > 1, v167 + 1, 1);
            v168 = aBlock;
            *(_QWORD *)(aBlock + 16) = v167 + 1;
            *(_QWORD *)(v168 + 8 * v167 + 32) = v165;
            if (v50)
              v169 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(3, v59);
            else
              v169 = *(id *)(v59 + 56);
            v170 = v169;
            v171 = (uint64_t)v270;
            v172 = swift_allocObject(v61, 40, 7);
            *(_OWORD *)(v172 + 16) = v268;
            *(_QWORD *)(v172 + 32) = v170;
            v273 = v172;
            specialized Array._endMutation()(v172);
            v173 = v273;
            v175 = *(_QWORD *)(v168 + 16);
            v174 = *(_QWORD *)(v168 + 24);
            if (v175 >= v174 >> 1)
            {
              sub_100600890(v174 > 1, v175 + 1, 1);
              v168 = aBlock;
            }
            *(_QWORD *)(v168 + 16) = v175 + 1;
            *(_QWORD *)(v168 + 8 * v175 + 32) = v173;
            if (v50)
              v176 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(4, v59);
            else
              v176 = *(id *)(v59 + 64);
            v177 = v176;
            v178 = swift_allocObject(v61, 40, 7);
            *(_OWORD *)(v178 + 16) = v268;
            *(_QWORD *)(v178 + 32) = v177;
            v273 = v178;
            specialized Array._endMutation()(v178);
            v179 = v273;
            v181 = *(_QWORD *)(v168 + 16);
            v180 = *(_QWORD *)(v168 + 24);
            if (v181 >= v180 >> 1)
            {
              sub_100600890(v180 > 1, v181 + 1, 1);
              v168 = aBlock;
            }
            *(_QWORD *)(v168 + 16) = v181 + 1;
            *(_QWORD *)(v168 + 8 * v181 + 32) = v179;
            swift_bridgeObjectRelease(v59);
            v182 = swift_initStackObject(v61, v271);
            *(_OWORD *)(v182 + 16) = v268;
            v183 = objc_msgSend((id)objc_opt_self(UIBarButtonItem), "flexibleSpaceItem");
            *(_QWORD *)(v182 + 32) = v183;
            aBlock = v182;
            specialized Array._endMutation()(v183);
            v184 = aBlock;
            if (aBlock < 0 || (aBlock & 0x4000000000000000) != 0)
            {
              v185 = (uint64_t)sub_1005FF1D0(aBlock);
              swift_bridgeObjectRelease(v184);
            }
            else
            {
              v185 = aBlock & 0xFFFFFFFFFFFFFF8;
            }
            v186 = sub_10054A120(v168, v185);
            v187 = objc_msgSend(v56, "navigationController");
            *(_QWORD *)&v268 = v186;
            if (v187)
            {
              v188 = v187;
              v189 = *(void **)(v171 + 24);
              v190 = (void *)objc_opt_self(UIDevice);
              v191 = v188;
              v192 = ((objc_msgSend(v190, "crl_phoneUI") & 1) != 0
                   || objc_msgSend(v189, "crl_isCompactWidth"))
                  && (*(_BYTE *)(v171 + 5) & 1) == 0;
              v103 = &selRef_masksToBounds;
              v104 = (_OWORD *)&unk_100EF5000;
              objc_msgSend(v191, "setToolbarHidden:animated:", 0, v192);

            }
            else
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"updateToolbarButtons(for:forceUpdate:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 240, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToolbarButtons(for:forceUpdate:)", 38, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 240, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
              v103 = &selRef_masksToBounds;
              v104 = (_OWORD *)&unk_100EF5000;
            }
            goto LABEL_110;
          }
LABEL_198:
          v113 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v59);
          goto LABEL_76;
        }
        goto LABEL_86;
      }
    }
    else if ((v3[3] & 1) == 0)
    {
      goto LABEL_86;
    }
    v120 = (void *)*((_QWORD *)v3 + 3);
    if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0
      || (objc_msgSend(v120, "crl_isCompactWidth") & 1) != 0)
    {
      if ((v54 & 1) != 0)
        goto LABEL_83;
      goto LABEL_87;
    }
LABEL_86:
    if ((v54 & (v50 | v3[34]) & 1) != 0)
    {
LABEL_83:
      v121 = objc_msgSend(v56, "navigationController");
      if (v121)
      {
        v122 = v121;
        v123 = (void *)*((_QWORD *)v3 + 3);
        v124 = ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0
             || (v129 = objc_msgSend(v123, "crl_isCompactWidth"), (v50 & 1) != 0)
             || v129)
            && (v3[5] & 1) == 0;
        objc_msgSend(v122, "setToolbarHidden:animated:", 1, v124);

      }
      *(_QWORD *)&v268 = 0;
      goto LABEL_110;
    }
LABEL_87:
    v125 = objc_msgSend(v56, "navigationController");
    if (v125)
    {
      v126 = v125;
      v127 = (void *)*((_QWORD *)v3 + 3);
      v128 = ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0
           || (v130 = objc_msgSend(v127, "crl_isCompactWidth"), (v50 & 1) != 0)
           || v130)
          && (v3[5] & 1) == 0;
      objc_msgSend(v126, "setToolbarHidden:animated:", 1, v128);

    }
    v54 = v3[4];
    v131 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    if ((v54 & 1) != 0)
    {
      v138 = swift_allocObject(v131, 40, 7);
      *(_OWORD *)(v138 + 16) = xmmword_100EEF400;
      v139 = sub_100C1CF4C();
      *(_QWORD *)(v138 + 32) = v139;
      aBlock = v138;
      specialized Array._endMutation()(v139);
      v273 = aBlock;
    }
    else
    {
      v132 = swift_allocObject(v131, 64, 7);
      *(_OWORD *)(v132 + 16) = xmmword_100EF7310;
      *(_QWORD *)(v132 + 32) = sub_100C1CD74();
      *(_QWORD *)(v132 + 40) = sub_100C1CD88();
      *(_QWORD *)(v132 + 48) = sub_100C1CD4C();
      v133 = sub_100C1CD60();
      *(_QWORD *)(v132 + 56) = v133;
      aBlock = v132;
      specialized Array._endMutation()(v133);
      v273 = aBlock;
      v278 = &type metadata for CRLFeatureFlags;
      v279 = sub_1004DB6DC();
      LOBYTE(aBlock) = 19;
      LOBYTE(v132) = isFeatureEnabled(_:)(&aBlock);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
      if ((v132 & 1) != 0)
      {
        v134 = sub_100C1CDB0();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
        v136 = *(_QWORD *)((v273 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v135 = *(_QWORD *)((v273 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v136 >= v135 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
        v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, v134);
        specialized Array._endMutation()(v137);
      }
    }
    v140 = String._bridgeToObjectiveC()();
    v141 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v140);

    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    *(_QWORD *)&v268 = v141;
    v295.value.super.isa = (Class)v141;
    v295.is_nil = 0;
    v296.value.super.super.isa = 0;
    v142 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v295, v296, v297).super.super.isa;
    sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
    v143 = v273;
    v72 = v142;
    v144 = (void *)static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(v142, v143);

    swift_bridgeObjectRelease(v143);
    v3 = (unsigned __int8 *)sub_1004B804C((uint64_t *)&unk_1013E4180);
    v145 = swift_allocObject(v3, 40, 7);
    v267 = xmmword_100EEF400;
    *(_OWORD *)(v145 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v145 + 32) = v144;
    aBlock = v145;
    specialized Array._endMutation()(v145);
    v48 = aBlock;
    v274 = (_QWORD *)aBlock;
    if ((v54 & 1) != 0)
      goto LABEL_109;
    v146 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v146 + 16) = v267;
    v45 = v144;
    v147 = sub_100C1CD9C();
    *(_QWORD *)(v146 + 32) = v147;
    aBlock = v146;
    specialized Array._endMutation()(v147);
    v148 = aBlock;
    v149 = (void *)static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, aBlock);
    swift_bridgeObjectRelease(v148);
    if (!((unint64_t)v48 >> 62))
      break;
    if (v48 < 0)
      v237 = v48;
    else
      v237 = v48 & 0xFFFFFFFFFFFFFF8;
    v238 = v149;
    swift_bridgeObjectRetain(v48);
    v50 = _CocoaArrayWrapper.endIndex.getter(v237);
    swift_bridgeObjectRelease(v48);
    if ((v50 & 0x8000000000000000) == 0)
      goto LABEL_108;
    __break(1u);
LABEL_190:
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage) < 0)
    {
      __break(1u);
      goto LABEL_192;
    }
LABEL_45:
    sub_100CFBF4C(0, 0, (uint64_t)v72);
    v59 = v282;
LABEL_46:
    v57 = (char **)v48;
    v63 = sub_100C1CDEC();
    if (!(v59 >> 62))
    {
LABEL_47:
      sub_100CFBF4C(0, 0, (uint64_t)v63);
      goto LABEL_48;
    }
LABEL_174:
    if ((v59 & 0x8000000000000000) != 0)
      v234 = v59;
    else
      v234 = v59 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v59);
    v74 = _CocoaArrayWrapper.endIndex.getter(v234);
    swift_bridgeObjectRelease(v59);
    if ((v74 & 0x8000000000000000) == 0)
      goto LABEL_47;
    __break(1u);
  }
  v150 = v149;
LABEL_108:
  sub_100CFBC44(0, 0, (uint64_t)v149);

LABEL_109:
  *(_QWORD *)&v268 = 0;
  v104 = &unk_100EF5000;
  v103 = &selRef_masksToBounds;
LABEL_110:
  sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
  v151 = v282;
  v152 = (void *)static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v282);
  swift_bridgeObjectRelease(v151);
  v153 = v283;
  if ((unint64_t)v283 >> 62)
  {
    if (v283 < 0)
      v193 = v283;
    else
      v193 = v283 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v283);
    v194 = _CocoaArrayWrapper.endIndex.getter(v193);
    swift_bridgeObjectRelease(v153);
    if (!v194)
      goto LABEL_145;
LABEL_112:
    v154 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)(0, v153);
    swift_bridgeObjectRelease(v153);
    v155 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v156 = swift_allocObject(v155, 48, 7);
    *(_OWORD *)(v156 + 16) = v104[86];
    *(_QWORD *)(v156 + 32) = v154;
    *(_QWORD *)(v156 + 40) = v152;
  }
  else
  {
    if (*(_QWORD *)((v283 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_112;
LABEL_145:
    swift_bridgeObjectRelease(v153);
    v195 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v156 = swift_allocObject(v195, 40, 7);
    *(_OWORD *)(v156 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v156 + 32) = v152;
  }
  aBlock = v156;
  specialized Array._endMutation()(v156);
  v196 = aBlock;
  v197 = v281;
  if ((unint64_t)v281 >> 62)
  {
    if (v281 < 0)
      v203 = v281;
    else
      v203 = v281 & 0xFFFFFFFFFFFFFF8;
    v204 = v152;
    swift_bridgeObjectRetain(v197);
    v198 = (id)_CocoaArrayWrapper.endIndex.getter(v203);
    swift_bridgeObjectRelease(v197);
    if (!v198)
      goto LABEL_153;
LABEL_148:
    v200 = objc_allocWithZone((Class)UIBarButtonItemGroup);
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v201 = Array._bridgeToObjectiveC()().super.isa;
    v198 = objc_msgSend(v200, "initWithBarButtonItems:representativeItem:", v201, 0, swift_bridgeObjectRelease(v197).n128_f64[0]);

  }
  else
  {
    v198 = *(id *)((v281 & 0xFFFFFFFFFFFFF8) + 0x10);
    v199 = v152;
    if (v198)
      goto LABEL_148;
LABEL_153:
    *(_QWORD *)&v202 = swift_bridgeObjectRelease(v197).n128_u64[0];
  }
  *(_QWORD *)&v267 = v152;
  v205 = objc_msgSend(v56, v103[173], v202);
  v206 = objc_msgSend(v205, "leftBarButtonItems");

  if (v206)
  {
    v207 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v208 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v206, v207);

    v209 = v284;
    swift_bridgeObjectRetain(v284);
    swift_bridgeObjectRetain(v208);
    v211 = sub_100548C0C(v210, v209, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    swift_bridgeObjectRelease_n(v208, 2);
    swift_bridgeObjectRelease(v209);
    sub_100524C24((v211 & 1) == 0);
    v212 = objc_msgSend(v56, v103[173]);
    objc_msgSend(v212, "setStyle:", sub_1005220CC());

    if ((v211 & 1) != 0)
    {
      *(_QWORD *)&v213 = swift_bridgeObjectRelease(v209).n128_u64[0];
      v214 = v269;
      goto LABEL_159;
    }
  }
  else
  {
    sub_100524C24(1);
    v215 = objc_msgSend(v56, v103[173]);
    objc_msgSend(v215, "setStyle:", sub_1005220CC());

    v209 = v284;
  }
  v214 = v269;
  v216 = objc_msgSend(v56, v103[173]);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v217 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v216, "setLeftBarButtonItems:", v217, swift_bridgeObjectRelease(v209).n128_f64[0]);

LABEL_159:
  v218 = objc_msgSend(v56, v103[173], v213);
  v219 = v274;
  v220 = v103;
  v221 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v218, "setCenterItemGroups:", v221, swift_bridgeObjectRelease(v219).n128_f64[0]);

  v222 = objc_msgSend(v56, v220[173]);
  v223 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v222, "setTrailingItemGroups:", v223, swift_bridgeObjectRelease(v196).n128_f64[0]);

  v224 = objc_msgSend(v56, v220[173]);
  objc_msgSend(v224, "setPinnedTrailingGroup:", v198);

  v226 = v268;
  if ((_QWORD)v268)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    v227.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v225 = swift_bridgeObjectRelease(v226).n128_u64[0];
  }
  else
  {
    v227.super.isa = 0;
  }
  objc_msgSend(v56, "setToolbarItems:", v227.super.isa, v225);

  v228 = sub_100C34628();
  v229 = sub_100C1CDEC();
  objc_msgSend(v229, "setEnabled:", v228 & 1);

}

uint64_t sub_100524360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_1005243CC, v6, v7);
}

uint64_t sub_1005243CC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 48) = objc_msgSend(*(id *)(v0 + 16), "navigationItem");
  v1 = (_QWORD *)swift_task_alloc(dword_1013E1AA4);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_100524430;
  return sub_1005244DC();
}

uint64_t sub_100524430(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100524488, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_100524488()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 64);
  v2 = *(void **)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 24));
  objc_msgSend(v2, "setDocumentProperties:", v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005244DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[19] = v0;
  v2 = type metadata accessor for UTType(0);
  v1[20] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[21] = v3;
  v1[22] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  v1[23] = v4;
  v1[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[25] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v1[26] = v6;
  v1[27] = v7;
  return swift_task_switch(sub_100524594, v6, v7);
}

uint64_t sub_100524594()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;

  v1 = v0[24];
  v2 = v0[19];
  v3 = objc_msgSend(objc_allocWithZone((Class)LPLinkMetadata), "init");
  v0[28] = v3;
  v4 = *(char **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v5, v0 + 14, 0, 0);
  sub_1004B8460(v5, v1, type metadata accessor for CRLBoardCRDTData);
  v6 = v4;
  v7 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v7);
  v8 = v0[18];
  sub_1004B84A4(v1, type metadata accessor for CRLBoardCRDTData);

  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setTitle:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  if (objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "documentIsSharedReadOnly"))
  {
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setSummary:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  }
  v18 = v0[21];
  v17 = v0[22];
  v19 = v0[20];
  v20 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v0[29] = v20;
  v21 = static UTType.png.getter();
  UTType.identifier.getter(v21);
  v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v25 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v0[6] = sub_10054EF24;
  v0[7] = v25;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(_QWORD *)"";
  v0[4] = sub_100527C04;
  v0[5] = &unk_10126ACF8;
  v26 = _Block_copy(v0 + 2);
  objc_msgSend(v20, "registerDataRepresentationForTypeIdentifier:visibility:loadHandler:", v24, 0, v26, swift_release(v0[7]).n128_f64[0]);
  _Block_release(v26);

  objc_msgSend(v3, "setImageProvider:", v20);
  v0[30] = objc_msgSend(objc_allocWithZone((Class)UIDocumentProperties), "initWithMetadata:", v3);
  v27 = (_QWORD *)swift_task_alloc(dword_1013E1AAC);
  v0[31] = v27;
  *v27 = v0;
  v27[1] = sub_100524928;
  return sub_100527D00();
}

uint64_t sub_100524928(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  *(_BYTE *)(*v1 + 256) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100524980, *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
}

uint64_t sub_100524980()
{
  uint64_t v0;
  int v1;
  double v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v1 = *(unsigned __int8 *)(v0 + 256);
  *(_QWORD *)&v2 = swift_release(*(_QWORD *)(v0 + 200)).n128_u64[0];
  if (v1 == 1)
  {
    v4 = *(void **)(v0 + 232);
    v3 = *(void **)(v0 + 240);
    v5 = *(void **)(v0 + 224);
    v6 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v6 + 16);
    *(_QWORD *)(v0 + 64) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 96) = sub_10054EF2C;
    *(_QWORD *)(v0 + 104) = v6;
    *(_QWORD *)(v0 + 72) = *(_QWORD *)"";
    *(_QWORD *)(v0 + 80) = sub_100528418;
    *(_QWORD *)(v0 + 88) = &unk_10126AD20;
    v7 = _Block_copy((const void *)(v0 + 64));
    objc_msgSend(v3, "setActivityViewControllerProvider:", v7, swift_release(*(_QWORD *)(v0 + 104)).n128_f64[0]);

    _Block_release(v7);
  }
  else
  {
    v8 = *(void **)(v0 + 232);
    v9 = *(void **)(v0 + 224);
    objc_msgSend(*(id *)(v0 + 240), "setActivityViewControllerProvider:", 0, v2);

  }
  v10 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 240));
}

id sub_100524AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v8;
}

uint64_t sub_100524B24(uint64_t (*a1)(_QWORD *))
{
  return a1(_swiftEmptyArrayStorage);
}

double sub_100524B50(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_10126AA10, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v3(sub_10054E8CC, v5, v6);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_100524BC0(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

id sub_100524C24(char a1)
{
  void *v1;
  id v2;
  Class isa;
  id v4;
  Class v5;
  id v6;
  Class v7;
  id v8;

  if ((a1 & 1) != 0)
  {
    v2 = objc_msgSend(v1, "navigationItem");
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setLeftBarButtonItems:", isa);

  }
  v4 = objc_msgSend(v1, "navigationItem");
  sub_1004B8930(0, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
  v5 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setCenterItemGroups:", v5);

  v6 = objc_msgSend(v1, "navigationItem");
  v7 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setTrailingItemGroups:", v7);

  v8 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v8, "setPinnedTrailingGroup:", 0);

  return objc_msgSend(v1, "setToolbarItems:", 0);
}

void sub_100524D9C()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  NSString v47;
  NSString v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  id v54;
  uint64_t v55;
  id v56;
  NSString v57;
  NSString v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  void *v69;
  char v70;
  char v71;
  uint64_t v72;
  void *v73;
  id v74;
  NSString v75;
  NSString v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSString v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t inited;
  _QWORD *v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void *v114;
  id v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  void *v119;
  id v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void *v124;
  id v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  void *v129;
  id v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  void *v134;
  id v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;
  char v143;
  uint64_t v144;
  id v145;
  unsigned __int8 v146;
  id v147;
  NSString v148;
  NSString v149;
  id v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  NSString v154;
  id v155;
  uint64_t v156;
  void *v157;
  void *v158;
  uint64_t v159;
  id v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  UIMenuElementSize v167;
  Swift::String v168;
  UIMenu v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  void *v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  UIMenuElementSize v181;
  id v182;
  Swift::String v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  UIMenuElementSize preferredElementSize;
  Swift::OpaquePointer v188;
  id v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  _QWORD aBlock[3];
  ValueMetadata *v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201[96];
  UIImage_optional v202;
  UIImage_optional v203;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v10 = String._bridgeToObjectiveC()();
  v11 = (void *)objc_opt_self(UIImage);
  v12 = objc_msgSend(v11, "systemImageNamed:", v10);

  v13 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v194 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v7, v9, 0, 0, v12, 0, 0, 0, 0, 0, 0, sub_10054F300, v13);
  v14 = objc_msgSend(v2, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v11, "systemImageNamed:", v21);

  v23 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v1);
  v193 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v18, v20, 0, 0, v22, 0, 0, 0, 0, 0, 0, sub_10054F320, v23);
  v24 = objc_msgSend(v2, "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v11, "systemImageNamed:", v31);

  v33 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16, v1);
  v195 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v28, v30, 0, 0, v32, 0, 0, 0, 0, 0, 0, sub_10054F340, v33);
  v34 = objc_msgSend(v2, "mainBundle");
  v35 = String._bridgeToObjectiveC()();
  v36 = String._bridgeToObjectiveC()();
  v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);

  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v40 = v39;

  v41 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend(v11, "systemImageNamed:", v41);

  v43 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16, v1);
  v44 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v38, v40, 0, 0, v42, 0, 0, 0, 0, 0, 0, sub_10054F348, v43);
  v45 = 0;
  if (objc_msgSend((id)objc_opt_self(VNDocumentCameraViewController), "isSupported"))
  {
    v46 = objc_msgSend(v2, "mainBundle");
    v47 = String._bridgeToObjectiveC()();
    v48 = String._bridgeToObjectiveC()();
    v49 = objc_msgSend(v46, "localizedStringForKey:value:table:", v47, v48, 0);

    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v52 = v51;

    v53 = String._bridgeToObjectiveC()();
    v54 = objc_msgSend(v11, "systemImageNamed:", v53);

    v55 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v55 + 16, v1);
    v45 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v50, v52, 0, 0, v54, 0, 0, 0, 0, 0, 0, sub_10054F3D8, v55);
  }
  v192 = (void *)v44;
  if (objc_msgSend((id)objc_opt_self(CRLFeatureFlagsHelper), "isOSFeatureEnabled:", 3))
  {
    v56 = objc_msgSend(v2, "mainBundle");
    v57 = String._bridgeToObjectiveC()();
    v58 = String._bridgeToObjectiveC()();
    v59 = v45;
    v60 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    v63 = v62;

    v64 = String._bridgeToObjectiveC()();
    v65 = objc_msgSend(v11, "crl_internalSystemImageNamed:", v64);

    v66 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v66 + 16, v1);
    v67 = v65;
    v45 = v59;
    v68 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v61, v63, 0, 0, v67, 0, 0, 0, 0, 0, 0, sub_10054F3D0, v66);
  }
  else
  {
    v68 = 0;
  }
  v69 = v195;
  v191 = (void *)v68;
  v197 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
  v198 = sub_10054F350();
  v70 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v70 & 1) != 0
    && (v197 = &type metadata for CRLFeatureFlags,
        v198 = sub_1004DB6DC(),
        LOBYTE(aBlock[0]) = 12,
        v71 = isFeatureEnabled(_:)(aBlock),
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock),
        (v71 & 1) != 0))
  {
    v73 = 0;
    if (objc_msgSend((id)type metadata accessor for ImagePlaygroundViewController(0, v72), "available"))
    {
      v74 = objc_msgSend(v2, "mainBundle");
      v75 = String._bridgeToObjectiveC()();
      v76 = String._bridgeToObjectiveC()();
      v77 = v45;
      v78 = objc_msgSend(v74, "localizedStringForKey:value:table:", v75, v76, 0);

      v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
      v81 = v80;

      v82 = String._bridgeToObjectiveC()();
      v83 = objc_msgSend(v11, "systemImageNamed:", v82);

      v84 = swift_allocObject(&unk_10126A858, 24, 7);
      swift_unknownObjectWeakInit(v84 + 16, v1);
      v85 = v81;
      v69 = v195;
      v86 = v83;
      v45 = v77;
      v73 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v79, v85, 0, 0, v86, 0, 0, 0, 0, 0, 0, sub_10054F3B0, v84);
    }
  }
  else
  {
    v73 = 0;
  }
  v189 = v11;
  v87 = sub_1004B804C(&qword_1013E1B28);
  inited = swift_initStackObject(v87, v201);
  *(_OWORD *)(inited + 16) = xmmword_100EF7D10;
  *(_QWORD *)(inited + 32) = v194;
  *(_QWORD *)(inited + 40) = v73;
  *(_QWORD *)(inited + 48) = v193;
  *(_QWORD *)(inited + 56) = v191;
  *(_QWORD *)(inited + 64) = v45;
  *(_QWORD *)(inited + 72) = v69;
  *(_QWORD *)(inited + 80) = v192;
  aBlock[0] = inited;
  specialized Array._endMutation()(inited);
  v89 = (_QWORD *)aBlock[0];
  aBlock[0] = _swiftEmptyArrayStorage;
  v90 = (void *)v89[4];
  v190 = v45;
  if (!v90)
  {
    v103 = v45;
    v104 = v69;
    v105 = v192;
    v106 = v194;
    v107 = v73;
    v108 = v193;
    v109 = v191;
    v102 = (void *)v89[5];
    if (!v102)
      goto LABEL_20;
    goto LABEL_17;
  }
  v91 = v69;
  v92 = v90;
  v93 = v194;
  v94 = v73;
  v95 = v193;
  v96 = v191;
  v97 = v45;
  v98 = v91;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v192);
  v100 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v99 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v100 >= v99 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v99 > 1, v100 + 1, 1);
  v101 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v100, v92);
  specialized Array._endMutation()(v101);
  v102 = (void *)v89[5];
  if (v102)
  {
LABEL_17:
    v110 = v102;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v110);
    v112 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v111 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v112 >= v111 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v111 > 1, v112 + 1, 1);
    v113 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v112, v110);
    specialized Array._endMutation()(v113);
  }
LABEL_20:
  v114 = (void *)v89[6];
  if (v114)
  {
    v115 = v114;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v115);
    v117 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v116 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v117 >= v116 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v116 > 1, v117 + 1, 1);
    v118 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v117, v115);
    specialized Array._endMutation()(v118);
  }
  v119 = (void *)v89[7];
  if (v119)
  {
    v120 = v119;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v120);
    v122 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v121 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v122 >= v121 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v121 > 1, v122 + 1, 1);
    v123 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v122, v120);
    specialized Array._endMutation()(v123);
  }
  v124 = (void *)v89[8];
  if (v124)
  {
    v125 = v124;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v125);
    v127 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v126 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v127 >= v126 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v126 > 1, v127 + 1, 1);
    v128 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v127, v125);
    specialized Array._endMutation()(v128);
  }
  v129 = (void *)v89[9];
  if (v129)
  {
    v130 = v129;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v130);
    v132 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v131 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v132 >= v131 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v131 > 1, v132 + 1, 1);
    v133 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v132, v130);
    specialized Array._endMutation()(v133);
  }
  v134 = (void *)v89[10];
  if (v134)
  {
    v135 = v134;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v135);
    v137 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v136 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v137 >= v136 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v136 > 1, v137 + 1, 1);
    v138 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v137, v135);
    specialized Array._endMutation()(v138);
  }
  v139 = aBlock[0];
  swift_bridgeObjectRelease(v89);
  v140 = sub_100D0FA8C(0, 1, 1, _swiftEmptyArrayStorage);
  v142 = v140[2];
  v141 = v140[3];
  if (v142 >= v141 >> 1)
    v140 = sub_100D0FA8C((_QWORD *)(v141 > 1), v142 + 1, 1, v140);
  v140[2] = v142 + 1;
  v140[v142 + 4] = v139;
  v200 = (uint64_t)_swiftEmptyArrayStorage;
  v197 = &type metadata for CRLFeatureFlags;
  v198 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 19;
  v143 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  v144 = (uint64_t)_swiftEmptyArrayStorage;
  if ((v143 & 1) == 0)
  {
LABEL_49:
    if (!((unint64_t)v144 >> 62))
      goto LABEL_50;
    goto LABEL_55;
  }
  v145 = objc_msgSend(v1, "traitCollection");
  if (objc_msgSend(v145, "horizontalSizeClass") == (id)1)
  {

  }
  else
  {
    v146 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

    if ((v146 & 1) == 0)
    {
      v144 = (uint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      {
LABEL_50:
        v161 = v140[2];
        if (*(_QWORD *)((v144 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_51:
          v162 = v140[3];
          v163 = v161 + 1;
          swift_bridgeObjectRetain(v144);
          if (v161 >= v162 >> 1)
            v140 = sub_100D0FA8C((_QWORD *)(v162 > 1), v161 + 1, 1, v140);
          v140[2] = v163;
          v140[v161 + 4] = v144;
          aBlock[0] = _swiftEmptyArrayStorage;
          goto LABEL_61;
        }
LABEL_59:
        aBlock[0] = _swiftEmptyArrayStorage;
        if (!v161)
        {
          swift_bridgeObjectRetain(v140);
          v173 = _swiftEmptyArrayStorage;
LABEL_66:
          swift_bridgeObjectRelease(v144);
          swift_bridgeObjectRelease_n(v140, 2);
          v174 = (void *)objc_opt_self(UIDeferredMenuElement);
          v175 = swift_allocObject(&unk_10126A858, 24, 7);
          swift_unknownObjectWeakInit(v175 + 16, v1);
          v176 = swift_allocObject(&unk_10126B0F0, 32, 7);
          *(_QWORD *)(v176 + 16) = v175;
          *(_QWORD *)(v176 + 24) = v173;
          v198 = (unint64_t)sub_10054F3A0;
          v199 = v176;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(_QWORD *)"";
          aBlock[2] = sub_100524B50;
          v197 = (ValueMetadata *)&unk_10126B108;
          v177 = _Block_copy(aBlock);
          v178 = objc_msgSend(v174, "elementWithUncachedProvider:", v177, swift_release(v199).n128_f64[0]);
          _Block_release(v177);
          sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
          v179 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v180 = swift_allocObject(v179, 40, 7);
          *(_OWORD *)(v180 + 16) = xmmword_100EEF400;
          *(_QWORD *)(v180 + 32) = v178;
          aBlock[0] = v180;
          specialized Array._endMutation()(v180);
          v181 = aBlock[0];
          v182 = v178;
          v183._countAndFlagsBits = 0;
          v183._object = (void *)0xE000000000000000;
          v203.value.super.isa = 0;
          v203.is_nil = 0;
          UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v183, (Swift::String_optional)0, v203, 0, 0xFFFFFFFFFFFFFFFFLL, v181, v188);

          return;
        }
        v163 = v161;
LABEL_61:
        sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
        swift_bridgeObjectRetain_n(v140, 2);
        v166 = 0;
        do
        {
          swift_bridgeObjectRetain(v140[v166 + 4]);
          preferredElementSize = v167;
          v168._countAndFlagsBits = 0;
          v168._object = (void *)0xE000000000000000;
          v202.value.super.isa = 0;
          v202.is_nil = 0;
          v169.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v168, (Swift::String_optional)0, v202, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v188).super.super.isa;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v169.super.super.isa);
          v171 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v170 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v171 >= v170 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v170 > 1, v171 + 1, 1);
          ++v166;
          v172 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v171, v169.super.super.isa);
          specialized Array._endMutation()(v172);
        }
        while (v163 != v166);
        swift_bridgeObjectRelease(v140);
        v173 = (_QWORD *)aBlock[0];
        goto LABEL_66;
      }
LABEL_55:
      if (v144 < 0)
        v164 = v144;
      else
        v164 = v144 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v144);
      v165 = _CocoaArrayWrapper.endIndex.getter(v164);
      swift_bridgeObjectRelease(v144);
      v161 = v140[2];
      if (v165)
        goto LABEL_51;
      goto LABEL_59;
    }
  }
  v147 = objc_msgSend(v2, "mainBundle");
  v148 = String._bridgeToObjectiveC()();
  v149 = String._bridgeToObjectiveC()();
  v150 = objc_msgSend(v147, "localizedStringForKey:value:table:", v148, v149, 0);

  v151 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
  v153 = v152;

  v154 = String._bridgeToObjectiveC()();
  v155 = objc_msgSend(v189, "systemImageNamed:", v154);

  v156 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v156 + 16, v1);
  v157 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v151, v153, 0, 0, v155, 0, 0, 0, 0, 0, 0, sub_10054F3A8, v156);
  v158 = v157;
  v159 = v200;
  if (!((unint64_t)v200 >> 62))
  {
    v160 = v157;
LABEL_48:
    sub_100CFBC30(0, 0, (uint64_t)v158);

    v144 = v200;
    goto LABEL_49;
  }
  if (v200 < 0)
    v184 = v200;
  else
    v184 = v200 & 0xFFFFFFFFFFFFFF8;
  v185 = v157;
  swift_bridgeObjectRetain(v159);
  v186 = _CocoaArrayWrapper.endIndex.getter(v184);
  swift_bridgeObjectRelease(v159);
  if ((v186 & 0x8000000000000000) == 0)
    goto LABEL_48;
  __break(1u);
}

uint64_t sub_1005260EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 56) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 64) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100526158, v6, v7);
}

uint64_t sub_100526158()
{
  uint64_t v0;
  char *v1;
  id v2;

  v1 = *(char **)(v0 + 56);
  v2 = objc_msgSend(v1, "traitCollection", swift_release(*(_QWORD *)(v0 + 64)).n128_f64[0]);
  sub_1005221A4(v2, (int)objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), v0 + 16);
  sub_100522548((unsigned __int8 *)(v0 + 16), 0);
  sub_1004DB520(v0 + 16);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100526318(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  Class v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  id v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35[5];
  __int128 v36;
  __int128 v37;
  char v38[24];

  v2 = v1;
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v34[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v34[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce] & 1) != 0)
    return;
  v33 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce;
  v13 = *(char **)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v16 = v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v38, 0, 0);
  sub_1004B8460(v16, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  v17 = v13;
  swift_retain(v15);
  v18 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v18);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_release(v15);
  v19 = (uint64_t *)(*(_QWORD *)&v13[v14] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v20 = *v19;
  v21 = v19[1];
  swift_bridgeObjectRetain(v21);
  sub_10067AFD0((uint64_t)v9, v20, v21, (uint64_t)v12);

  v22 = sub_100B4AD90((uint64_t)v12);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  v23 = objc_msgSend(a1, "userInfo");
  if (!v23)
  {
    v36 = 0u;
    v37 = 0u;
LABEL_12:

    sub_1004CB800((uint64_t)&v36, &qword_1013E0230);
    return;
  }
  v24 = v23;
  v25 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v34[0] = 0xD00000000000001DLL;
  v34[1] = 0x8000000100FADF90;
  AnyHashable.init<A>(_:)(v34, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_1008432BC((uint64_t)v35), (v27 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v25 + 56) + 32 * v26, (uint64_t)&v36);
  }
  else
  {
    v36 = 0u;
    v37 = 0u;
  }
  swift_bridgeObjectRelease(v25);
  sub_1004B89A4((uint64_t)v35);
  if (!*((_QWORD *)&v37 + 1))
    goto LABEL_12;
  v28 = sub_1004B804C(&qword_1013E0238);
  if ((swift_dynamicCast(v35, &v36, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0
    && (v29 = v35[0],
        v30 = sub_10062219C(v22, v35[0]),
        *(_QWORD *)&v31 = swift_bridgeObjectRelease(v29).n128_u64[0],
        (v30 & 1) != 0))
  {
    v2[v33] = 1;
    v32 = objc_msgSend(v2, "traitCollection", v31);
    sub_1005221A4(v32, (int)objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v35);
    sub_100522548((unsigned __int8 *)v35, 0);
    sub_1004DB520((uint64_t)v35);

  }
  else
  {

  }
}

void sub_10052670C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = sub_100C1C9E0();
    v6 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator], "selectionPathForInfos:", 0);
    objc_msgSend(v5, "setSelectionPath:", v6);

  }
}

void sub_1005267AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_100C1CAE8();
    objc_msgSend(v5, "resetToDefaultModeAnimated:", 1);

  }
}

void sub_100526814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = sub_100C1C9E0();
    v6 = objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator], "selectionPathForInfos:", 0);
    objc_msgSend(v5, "setSelectionPath:", v6);

    v7 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
}

id sub_1005268E8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v23;
  _OWORD v24[2];

  v1 = v0;
  sub_1004B8930(0, &qword_1013E1B58, off_101229910);
  memset(v24, 0, sizeof(v24));
  v23 = sub_100526BB4(0xD00000000000001BLL, 0x8000000100FB1F90, v24, 0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "didTapUndoButtonWithSender:");
  v3 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v1, "didLongPressUndoButtonWithSender:");
  v4 = objc_msgSend(v23, "button");
  objc_msgSend(v4, "addGestureRecognizer:", v2);
  objc_msgSend(v4, "addGestureRecognizer:", v3);
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = v4;
  v7 = objc_msgSend(v5, "mainBundle");
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setLargeContentTitle:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v14 = v6;
  v15 = objc_msgSend(v5, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, v17, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v20 = v19;

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccessibilityLabel:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  return v23;
}

id sub_100526BB4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v5 = v4;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = a3[3];
  if (v11)
  {
    v12 = sub_1004BB5A4(a3, a3[3]);
    v13 = *(_QWORD *)(v11 - 8);
    __chkstk_darwin(v12);
    v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v13 + 16))(v15);
    v16 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v11);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a3);
  }
  else
  {
    v16 = 0;
  }
  v17 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5, v10)), "initWithImageNamed:target:action:", v9, v16, a4);

  swift_unknownObjectRelease(v16);
  return v17;
}

void sub_100526CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _BYTE v31[24];
  char v32[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v7, "presentedViewController");
      if (v10)
      {
        v11 = v10;
        v12 = *(void **)&v7[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
        if (v12)
        {
          sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
          v13 = v12;
          v14 = v11;
          v15 = static NSObject.== infix(_:_:)(v14, v13);

          if ((v15 & 1) != 0 && (objc_msgSend(v14, "isBeingDismissed") & 1) == 0)
            objc_msgSend(v14, "dismissViewControllerAnimated:completion:", 0, 0);
        }

      }
      v16 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      v17 = *(void **)(v9 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v17 && (objc_msgSend(v17, "isUserInteractionEnabled") & 1) != 0)
      {
        v18 = *(void **)(v9 + v16);
        if (!v18
          || (v19 = objc_msgSend(v18, "rootViewController")) == 0
          || (v20 = v19,
              v21 = objc_msgSend(v19, "crl_windowWrapper"),
              v20,
              !v21)
          || (v22 = objc_msgSend(v21, "newWrapperBeginningIgnoringUserInteractionSafely"), v21, !v22))
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v31, 0, 0);
          v23 = (id)static OS_os_log.crlError;
          v24 = static os_log_type_t.error.getter();
          sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v24, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          v22 = 0;
        }
        v25 = type metadata accessor for TaskPriority(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
        type metadata accessor for MainActor(0);
        v26 = v22;
        swift_unknownObjectRetain(v9);
        v27 = v7;
        v28 = static MainActor.shared.getter();
        v29 = (_QWORD *)swift_allocObject(&unk_10126ADA8, 56, 7);
        v29[2] = v28;
        v29[3] = &protocol witness table for MainActor;
        v29[4] = v9;
        v29[5] = v27;
        v29[6] = v22;
        v30 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1AC0, (uint64_t)v29, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);

        swift_unknownObjectRelease(v9);
        swift_release(v30);

      }
      else
      {

        swift_unknownObjectRelease(v9);
      }
    }
    else
    {

    }
  }
}

uint64_t sub_10052701C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE v16[24];

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v10 = Strong;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject(&unk_10126AD80, 56, 7);
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v10;
    v12[5] = a1;
    v12[6] = a2;
    swift_retain(a2);
    v13 = sub_100521BF0((uint64_t)v8, (uint64_t)&unk_1013E1AB8, (uint64_t)v12, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
    swift_release(v13);
  }
  return 0;
}

uint64_t sub_100527140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  v6[13] = v7;
  v6[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005271E0, 0, 0);
}

uint64_t sub_1005271E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 136) = v1;
  *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10052724C, v2, v3);
}

uint64_t sub_10052724C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = objc_msgSend(*(id *)(v0 + 80), "view", swift_release(*(_QWORD *)(v0 + 144)).n128_f64[0]);
  return swift_task_switch(sub_1005272A8, 0, 0);
}

uint64_t sub_1005272A8(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (v1[19])
  {
    v2 = v1[17];
    v1[20] = static MainActor.shared.getter(result);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_100527314, v3, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100527314()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[19];
  v0[21] = objc_msgSend(v1, "window", swift_release(v0[20]).n128_f64[0]);

  return swift_task_switch(sub_100527370, 0, 0);
}

uint64_t sub_100527370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(v1 + 168))
  {
    v2 = *(_QWORD *)(v1 + 136);
    *(_QWORD *)(v1 + 176) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_100527408, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 120);
    v7 = *(_QWORD *)(v1 + 112);
    swift_task_dealloc(*(_QWORD *)(v1 + 128));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100527408()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[21];
  v0[23] = objc_msgSend(v1, "windowScene", swift_release(v0[22]).n128_f64[0]);

  return swift_task_switch(sub_100527464, 0, 0);
}

uint64_t sub_100527464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(v1 + 184))
  {
    v2 = *(_QWORD *)(v1 + 136);
    *(_QWORD *)(v1 + 192) = static MainActor.shared.getter(a1);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    return swift_task_switch(sub_1005274FC, v3, v4);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 120);
    v7 = *(_QWORD *)(v1 + 112);
    swift_task_dealloc(*(_QWORD *)(v1 + 128));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1005274FC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[23];
  v0[25] = objc_msgSend(v1, "delegate", swift_release(v0[24]).n128_f64[0]);

  return swift_task_switch(sub_100527558, 0, 0);
}

uint64_t sub_100527558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 200);
  if (v1)
  {
    v2 = type metadata accessor for CRLiOSSceneDelegate(0);
    v3 = swift_dynamicCastClass(v1, v2);
    *(_QWORD *)(v0 + 208) = v3;
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 216) = static MainActor.shared.getter(v3);
      v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
      return swift_task_switch(sub_100527614, v5, v6);
    }
    swift_unknownObjectRelease(v1);
  }
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100527614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = v0[10];
  swift_release(v0[27]);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  v3 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v0[28] = v2;
  v0[29] = v3;
  v4 = *(void **)(v2 + v3);
  v0[30] = v4;
  v5 = v4;
  return swift_task_switch(sub_100527680, 0, 0);
}

uint64_t sub_100527680()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = (char *)v0[30];
  v3 = v0[16];
  v2 = v0[17];
  v4 = v0[14];
  v5 = v0[15];
  v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v8 = v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 2, 0, 0);
  sub_1004B8460(v8, v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v9);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v7);
  v10 = (uint64_t *)(*(_QWORD *)&v1[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  sub_10067AFD0(v5, v11, v12, v3);

  v0[31] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005277BC, v14, v15);
}

uint64_t sub_1005277BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = v0[28];
  v2 = v0[29];
  swift_release(v0[31]);
  v3 = *(void **)(v1 + v2);
  v0[32] = v3;
  v4 = v3;
  return swift_task_switch(sub_100527808, 0, 0);
}

uint64_t sub_100527808()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (char *)v0[32];
  v2 = v0[17];
  v3 = v0[14];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v4, v0 + 5, 0, 0);
  sub_1004B8460(v4, v3, type metadata accessor for CRLBoardCRDTData);
  v5 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v5);
  v0[33] = v0[9];
  sub_1004B84A4(v3, type metadata accessor for CRLBoardCRDTData);

  v0[34] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v0[35] = v7;
  v0[36] = v8;
  return swift_task_switch(sub_10052790C, v7, v8);
}

void sub_10052790C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, double);

  sub_10090373C();
  v0[37] = v1;
  if (v1)
  {
    v3 = (void (*)(uint64_t, double))((char *)&dword_1013E45B0 + dword_1013E45B0);
    v2 = (_QWORD *)swift_task_alloc(unk_1013E45B4);
    v0[38] = v2;
    *v2 = v0;
    v2[1] = sub_100527988;
    v3(v0[16], 2.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100527988(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 304);
  *(_QWORD *)(*v2 + 312) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 280);
    v7 = *(_QWORD *)(v4 + 288);
    v8 = sub_100527B18;
  }
  else
  {

    *(_QWORD *)(v4 + 320) = a1;
    v6 = *(_QWORD *)(v4 + 280);
    v7 = *(_QWORD *)(v4 + 288);
    v8 = sub_100527A04;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100527A04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[33];
  v2 = v0[16];
  swift_release(v0[34]);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100527A5C, 0, 0);
}

uint64_t sub_100527A5C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, unint64_t, _QWORD);
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 88);
  v4 = objc_msgSend(v1, "PNGRepresentation");
  v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v3(v5, v7, 0);
  sub_1004BBBC8(v5, v7);

  swift_unknownObjectRelease(v2);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100527B18()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[37];
  v2 = v0[33];
  v3 = v0[16];
  swift_release(v0[34]);

  sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_100527B80, 0, 0);
}

uint64_t sub_100527B80()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, unint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(void (**)(_QWORD, unint64_t, uint64_t))(v0 + 88);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 200));
  swift_errorRetain(v1);
  v2(0, 0xF000000000000000, v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100527C04(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  uint64_t (*v3)(void (*)(uint64_t, unint64_t, uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(void (*)(uint64_t, unint64_t, uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_10126AD58, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v7 = (void *)v3(sub_10054EF34, v5, v6);
  swift_release(v2);
  swift_release(v5);
  return v7;
}

void sub_100527C80(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa;
  uint64_t v7;
  id v8;

  if (a2 >> 60 != 15)
  {
    isa = Data._bridgeToObjectiveC()().super.isa;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  isa = 0;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = _convertErrorToNSError(_:)(a3);
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, Class))(a4 + 16))(a4, isa);

}

uint64_t sub_100527D00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1[8] = v0;
  v2 = type metadata accessor for CRLBoardCRDTData(0);
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  v1[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[11] = swift_task_alloc(v4);
  v1[12] = swift_task_alloc(v4);
  v5 = type metadata accessor for MainActor(0);
  v1[13] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v1[14] = v6;
  v1[15] = v7;
  return swift_task_switch(sub_100527DDC, v6, v7);
}

void sub_100527DDC()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary);
  *(_QWORD *)(v0 + 128) = Strong;
  if (!Strong)
  {
    v22 = *(_QWORD *)(v0 + 104);
LABEL_14:
    swift_release(v22);
    goto LABEL_15;
  }
  v2 = (void *)Strong;
  if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable) & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 104));

LABEL_15:
    v26 = 0;
    goto LABEL_16;
  }
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "delegate");

  if (!v4)
  {
    __break(1u);
    return;
  }
  v5 = type metadata accessor for CRLiOSAppDelegate();
  v6 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0)
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
  swift_retain(v6);
  swift_unknownObjectRelease(v4);
  v7 = sub_1009446C0();
  swift_release(v6);
  if (v7 != 1)
  {
LABEL_13:
    v27 = *(_QWORD *)(v0 + 104);

    v22 = v27;
    goto LABEL_14;
  }
  v44 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v42 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v43 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  v10 = *(char **)(v43 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v11 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v12 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v13 = v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 16, 0, 0);
  sub_1004B8460(v13, v8, type metadata accessor for CRLBoardCRDTData);
  v14 = v10;
  swift_retain(v12);
  v15 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v15);
  sub_1004B84A4(v8, type metadata accessor for CRLBoardCRDTData);
  swift_release(v12);
  v16 = (uint64_t *)(*(_QWORD *)&v10[v11] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v17 = *v16;
  v18 = v16[1];
  swift_bridgeObjectRetain(v18);
  sub_10067AFD0(v9, v17, v18, v44);

  v19 = (_QWORD *)(v44 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v20 = v19[1];
  v21 = *(_QWORD *)(v0 + 96);
  if (*v19 || v20 != 0xE000000000000000)
  {
    v23 = _stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, 0, 0xE000000000000000, 0);
    sub_1004B84A4(v21, type metadata accessor for CRLBoardIdentifier);
    if ((v23 & 1) != 0)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1004B84A4(*(_QWORD *)(v0 + 96), type metadata accessor for CRLBoardIdentifier);
LABEL_11:
  v24 = *(_QWORD *)(v0 + 64);
  v25 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce;
  *(_QWORD *)(v0 + 136) = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce;
  if ((*(_BYTE *)(v24 + v25) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 104));

    v26 = *(unsigned __int8 *)(v24 + v25);
LABEL_16:
    v28 = *(_QWORD *)(v0 + 88);
    v30 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    (*(void (**)(uint64_t))(v0 + 8))(v26);
    return;
  }
  v31 = *(_QWORD *)(v0 + 80);
  v45 = *(_QWORD *)(v0 + 88);
  v32 = *(char **)(v43 + v42);
  v33 = *(_QWORD *)(v0 + 72);
  v34 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v35 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v36 = v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 40, 0, 0);
  sub_1004B8460(v36, v33, type metadata accessor for CRLBoardCRDTData);
  v37 = v32;
  swift_retain(v35);
  CRRegister.wrappedValue.getter(v15);
  sub_1004B84A4(v33, type metadata accessor for CRLBoardCRDTData);
  swift_release(v35);
  v38 = (uint64_t *)(*(_QWORD *)&v32[v34] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v39 = *v38;
  v40 = v38[1];
  swift_bridgeObjectRetain(v40);
  sub_10067AFD0(v31, v39, v40, v45);

  v41 = (_QWORD *)swift_task_alloc(dword_10140DFCC);
  *(_QWORD *)(v0 + 144) = v41;
  *v41 = v0;
  v41[1] = sub_1005281F4;
  sub_100C9F48C(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1005281F4(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  v4 = *(_QWORD *)(*v1 + 88);
  *(_BYTE *)(*v1 + 152) = a1;
  swift_task_dealloc(v3);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardIdentifier);
  return swift_task_switch(sub_100528260, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_100528260()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_BYTE *)(v0 + 152);
  v3 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 104));

  *(_BYTE *)(v4 + v2) = v1;
  v5 = *(unsigned __int8 *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

id sub_1005282D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = sub_100C1CAE8();
    v5 = objc_msgSend(v4, "mode");

    LOBYTE(v4) = objc_msgSend(v5, "wantsToEndForNonPopoverPresentations");
    if ((v4 & 1) != 0)
    {
      v6 = sub_100C1CAE8();
      objc_msgSend(v6, "resetToDefaultModeAnimated:", 1);

    }
    v7 = *(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider];
    v8 = sub_1005AA388();

  }
  else
  {
    v9 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    isa = Array._bridgeToObjectiveC()().super.isa;
    v7 = objc_msgSend(v9, "initWithActivityItems:applicationActivities:", isa, 0);

    v8 = sub_100BC21B4(v7);
  }

  return v8;
}

id sub_100528418(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

void sub_100528450(int a1, char *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t KeyPath;
  uint64_t v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  id v13[5];

  v3 = objc_msgSend(a2, "navigationController");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "navigationBar");

    objc_msgSend(v5, "rename:", 0);
  }
  v6 = *(void **)(*(_QWORD *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v13[3] = &type metadata for CRLFeatureFlags;
  v13[4] = (id)sub_1004DB6DC();
  LOBYTE(v13[0]) = 11;
  v7 = v6;
  LOBYTE(v6) = isFeatureEnabled(_:)(v13);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
  if ((v6 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100EF7E68);
    v9 = swift_getKeyPath(&unk_100EF7E90);
    static Published.subscript.getter(v13, v7, KeyPath, v9);
    swift_release(KeyPath);
    swift_release(v9);
    if (v13[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v13, 0, 0);
      v10 = (id)static OS_os_log.crlFollow;
      v12 = static os_log_type_t.default.getter(v11);
      sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v12, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(1);
    }
  }

}

uint64_t sub_10052860C(void (*a1)(uint64_t), uint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v32;
  uint64_t v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  char *v59;
  int v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  id v66;
  uint64_t v67;
  char v68[24];

  v6 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLBoardIdentifier(0);
  v65 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v65 + 64);
  v17 = __chkstk_darwin(v15);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - v18;
  Strong = swift_unknownObjectWeakLoadStrong(&a3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardLibrary]);
  if (!Strong)
    return ((uint64_t (*)(_QWORD *))a1)(_swiftEmptyArrayStorage);
  v21 = (void *)Strong;
  v61 = (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a2;
  v64 = a1;
  v62 = a3;
  v22 = *(char **)(*(_QWORD *)&a3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v23 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v24 = *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v25 = v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v24 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v68, 0, 0);
  v66 = v21;
  sub_1004B8460(v25, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  v26 = v22;
  swift_retain(v24);
  v27 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v27);
  sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  swift_release(v24);
  v28 = (uint64_t *)(*(_QWORD *)&v22[v23] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v29 = *v28;
  v30 = v28[1];
  swift_bridgeObjectRetain(v30);
  sub_10067AFD0((uint64_t)v14, v29, v30, (uint64_t)v19);

  sub_100C9F8F8((uint64_t)v19, (uint64_t)v8);
  v32 = v8[1];
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardViewModelMetadata);
  v33 = v65;
  v34 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  if ((v32 & 1) != 0)
  {
    v35 = String._bridgeToObjectiveC()();
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);
    v60 = 1;
    v38 = 0xEB00000000687361;
  }
  else
  {
    v35 = String._bridgeToObjectiveC()();
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);
    v60 = 0;
    v38 = 0xE500000000000000;
  }
  v59 = v19;
  v39 = v37;

  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v42 = v41;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v38);
  v44 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v43);

  v45 = v61;
  sub_1004B8460((uint64_t)v19, v61, type metadata accessor for CRLBoardIdentifier);
  v46 = *(unsigned __int8 *)(v33 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = v47 + v16;
  v49 = (v47 + v16) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_10126ACB8, v49 + 16, v46 | 7);
  sub_1004B84E0(v45, v50 + v47, type metadata accessor for CRLBoardIdentifier);
  *(_BYTE *)(v50 + v48) = v60;
  v51 = v62;
  *(_QWORD *)(v49 + v50 + 8) = v62;
  v52 = v51;
  v53 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v40, v42, 0, 0, v44, 0, 0, 0, 0, 0, 0, sub_10054ED78, v50);
  v54 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v55 = swift_allocObject(v54, 40, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v55 + 32) = v53;
  v67 = v55;
  specialized Array._endMutation()(v55);
  v56 = v67;
  v57 = v53;
  v64(v56);

  swift_bridgeObjectRelease(v56);
  return sub_1004B84A4((uint64_t)v59, type metadata accessor for CRLBoardIdentifier);
}

double sub_100528B90(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;

  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_1004B8460(a2, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for MainActor(0);
  v15 = a4;
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = v18 + v9;
  v20 = (v18 + v9) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_10126ACE0, v20 + 16, v17 | 7);
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
  sub_1004B84E0((uint64_t)v10, v21 + v18, type metadata accessor for CRLBoardIdentifier);
  *(_BYTE *)(v21 + v19) = a3;
  *(_QWORD *)(v20 + v21 + 8) = v15;
  v22 = sub_100521BF0((uint64_t)v13, (uint64_t)&unk_1013E1A90, v21, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_100528D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v5 + 96) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  *(_QWORD *)(v5 + 24) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 48) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 56) = v9;
  *(_QWORD *)(v5 + 64) = v10;
  return swift_task_switch(sub_100528DC0, v9, v10);
}

uint64_t sub_100528DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 24);
  sub_1004B8460(*(_QWORD *)(v0 + 16), v1, type metadata accessor for CRLBoardIdentifier);
  v5 = sub_1004B804C(&qword_1013E7870);
  v6 = *(unsigned __int8 *)(v2 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v5, v7 + *(_QWORD *)(v2 + 72), v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EF5E40;
  v9 = v8 + v7;
  sub_1004B8460(v1, v9, type metadata accessor for CRLBoardIdentifier);
  v10 = sub_1004B5A78(v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, 1, v4);
  swift_deallocClassInstance(v8, 32, 7);
  v11 = objc_allocWithZone((Class)type metadata accessor for CRLBoardFavoriteCommand());
  v12 = sub_100BE5094((uint64_t)v10, (v3 & 1) == 0);
  *(_QWORD *)(v0 + 72) = v12;
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v14 = objc_msgSend(v13, "delegate");

  if (v14)
  {
    v15 = type metadata accessor for CRLiOSAppDelegate();
    v16 = *(void **)(swift_dynamicCastClassUnconditional(v14, v15, 0, 0, 0)
                   + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
    *(_QWORD *)(v0 + 80) = v16;
    if (v16)
    {
      v16;
      swift_unknownObjectRelease(v14);
      v17 = (_QWORD *)swift_task_alloc(dword_101408D7C);
      *(_QWORD *)(v0 + 88) = v17;
      *v17 = v0;
      v17[1] = sub_100529024;
      return sub_100BE770C((uint64_t)v12);
    }
  }
  else
  {
    __break(1u);
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 240, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2u, 240, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  result = swift_unknownObjectRelease(v14);
  __break(1u);
  return result;
}

uint64_t sub_100529024()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(void **)(*v1 + 80);
  swift_task_dealloc(*(_QWORD *)(*v1 + 88));

  if (v0)
  {
    swift_errorRelease(v0);
    v4 = *(_QWORD *)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 64);
    v6 = sub_100550118;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 64);
    v6 = sub_100529098;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100529098()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 48));

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1005290D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  id v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_allocObject(&unk_10126AC90, 24, 7);
    *(_QWORD *)(v6 + 16) = v5;
    v7 = v5;
    sub_100C2F748(sub_10054ECCC, v6);

    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_100529168(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  void *v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) & 1) != 0)
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v26, 0, 0);
      v11 = (id)static OS_os_log.crlDefault;
      v13 = static os_log_type_t.default.getter(v12);
      sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

    }
    else
    {
      v14 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                      + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
      v15 = objc_msgSend(a1, "presentationSourceItem", swift_retain(v14).n128_f64[0]);
      if (v15)
      {
        v16 = v15;
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        swift_beginAccess(&static OS_os_log.crlDefault, v26, 0, 0);
        v17 = (id)static OS_os_log.crlDefault;
        v19 = static os_log_type_t.default.getter(v18);
        sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v19, "Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

        *((_BYTE *)v9 + v10) = 1;
        v20 = type metadata accessor for TaskPriority(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
        type metadata accessor for MainActor(0);
        swift_retain(v14);
        v21 = v9;
        v22 = swift_unknownObjectRetain(v16);
        v23 = static MainActor.shared.getter(v22);
        v24 = (_QWORD *)swift_allocObject(&unk_10126AC40, 56, 7);
        v24[2] = v23;
        v24[3] = &protocol witness table for MainActor;
        v24[4] = v21;
        v24[5] = v14;
        v24[6] = v16;
        v25 = sub_100521BF0((uint64_t)v6, (uint64_t)&unk_1013E1A78, (uint64_t)v24, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);

        swift_release(v25);
        swift_unknownObjectRelease(v16);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"makeMenuElementForExportToPDF()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 533, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeMenuElementForExportToPDF()", 31, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 533, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
      *(_QWORD *)&result = swift_release(v14).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1005294E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[30] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[31] = v8;
  v6[32] = v9;
  return swift_task_switch(sub_100529554, v8, v9);
}

uint64_t sub_100529554()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;
  _QWORD *v4;
  char *v6;

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  LODWORD(v1) = objc_msgSend(v2, "wantsToEndForNonPopoverPresentations");
  if ((_DWORD)v1)
  {
    v3 = sub_100C1CAE8();
    objc_msgSend(v3, "resetToDefaultModeAnimated:", 1);

  }
  v6 = (char *)&dword_1013F05C0 + dword_1013F05C0;
  v4 = (_QWORD *)swift_task_alloc(unk_1013F05C4);
  v0[33] = v4;
  *v4 = v0;
  v4[1] = sub_100529620;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v6)(v0[28], v0[27], v0[29]);
}

uint64_t sub_100529620()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100529680;
  else
    v4 = sub_10054FF9C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 248), *(_QWORD *)(v2 + 256));
}

uint64_t sub_100529680()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release(*(_QWORD *)(v0 + 240));
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v1 = *(_QWORD *)(v0 + 272);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 128, 0, 0);
  v2 = (void *)static OS_os_log.crlDefault;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v1, v0 + 200, v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = v2;
  v8 = Error.publicDescription.getter(v5, v6);
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v11 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v10;
  swift_getErrorValue(v1, v0 + 208, v0 + 176);
  v12 = Error.fullDescription.getter(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v14, "Error retrieving immutable board or exporting to PDF: %{public}@ <%@>", 69, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v15);

  swift_errorRelease(v1);
  *(_BYTE *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Class sub_100529844()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  NSString v39;
  objc_class *v40;
  Swift::String v41;
  Class isa;
  Swift::OpaquePointer v44;
  UIImage_optional v45;

  v1 = v0;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  v11 = (void *)objc_opt_self(UIImage);
  v12 = objc_msgSend(v11, "systemImageNamed:", v10);

  v13 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v7, v9, 0, 0, v12, 0, 0, 0, 0, 0, 0, sub_10054EA90, v13);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  v18 = objc_msgSend(v2, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v11, "systemImageNamed:", v25);

  v27 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16, v1);
  v28 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22, v24, 0, 0, v26, 0, 0, 0, 0, 0, 0, sub_10054EA98, v27);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
  specialized Array._endMutation()(v31);
  v32 = objc_msgSend(v2, "mainBundle");
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v39 = String._bridgeToObjectiveC()();
  v40 = (objc_class *)objc_msgSend(v11, "systemImageNamed:", v39);

  v41._countAndFlagsBits = v36;
  v41._object = v38;
  v45.value.super.isa = v40;
  v45.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v41, (Swift::String_optional)0, v45, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v44).super.super.isa;

  return isa;
}

double sub_100529D3C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) & 1) != 0)
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v24, 0, 0);
      v11 = (id)static OS_os_log.crlDefault;
      v12 = static os_log_type_t.default.getter();
      sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v12, "Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

    }
    else
    {
      v13 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                      + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
      v14 = objc_msgSend(a1, "presentationSourceItem", swift_retain(v13).n128_f64[0]);
      if (v14)
      {
        v15 = v14;
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        swift_beginAccess(&static OS_os_log.crlDefault, v24, 0, 0);
        v16 = (id)static OS_os_log.crlDefault;
        v17 = static os_log_type_t.default.getter();
        sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v17, "Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

        *((_BYTE *)v9 + v10) = 1;
        v18 = type metadata accessor for TaskPriority(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
        type metadata accessor for MainActor(0);
        swift_retain(v13);
        v19 = v9;
        v20 = swift_unknownObjectRetain(v15);
        v21 = static MainActor.shared.getter(v20);
        v22 = (_QWORD *)swift_allocObject(&unk_10126ABF0, 56, 7);
        v22[2] = v21;
        v22[3] = &protocol witness table for MainActor;
        v22[4] = v19;
        v22[5] = v13;
        v22[6] = v15;
        v23 = sub_100521BF0((uint64_t)v6, (uint64_t)&unk_1013E1A40, (uint64_t)v22, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);

        swift_release(v23);
        swift_unknownObjectRelease(v15);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"makeSubmenuForExport()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 570, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeSubmenuForExport()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 570, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10052A0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[30] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[31] = v8;
  v6[32] = v9;
  return swift_task_switch(sub_10052A128, v8, v9);
}

uint64_t sub_10052A128()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;
  _QWORD *v4;
  char *v6;

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  LODWORD(v1) = objc_msgSend(v2, "wantsToEndForNonPopoverPresentations");
  if ((_DWORD)v1)
  {
    v3 = sub_100C1CAE8();
    objc_msgSend(v3, "resetToDefaultModeAnimated:", 1);

  }
  v6 = (char *)&dword_1013F05C0 + dword_1013F05C0;
  v4 = (_QWORD *)swift_task_alloc(unk_1013F05C4);
  v0[33] = v4;
  *v4 = v0;
  v4[1] = sub_10052A1F4;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v6)(v0[28], v0[27], v0[29]);
}

uint64_t sub_10052A1F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100529680;
  else
    v4 = sub_10052A254;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 248), *(_QWORD *)(v2 + 256));
}

uint64_t sub_10052A254()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 240));
  *(_BYTE *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10052A298(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  double result;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) & 1) != 0)
    {
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      swift_beginAccess(&static OS_os_log.crlDefault, v24, 0, 0);
      v11 = (id)static OS_os_log.crlDefault;
      v12 = static os_log_type_t.default.getter();
      sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v12, "Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

    }
    else
    {
      v13 = *(_QWORD *)(*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                      + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
      v14 = objc_msgSend(a1, "presentationSourceItem", swift_retain(v13).n128_f64[0]);
      if (v14)
      {
        v15 = v14;
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        swift_beginAccess(&static OS_os_log.crlDefault, v24, 0, 0);
        v16 = (id)static OS_os_log.crlDefault;
        v17 = static os_log_type_t.default.getter();
        sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v17, "Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

        *((_BYTE *)v9 + v10) = 1;
        v18 = type metadata accessor for TaskPriority(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
        type metadata accessor for MainActor(0);
        swift_retain(v13);
        v19 = v9;
        v20 = swift_unknownObjectRetain(v15);
        v21 = static MainActor.shared.getter(v20);
        v22 = (_QWORD *)swift_allocObject(&unk_10126ABC8, 56, 7);
        v22[2] = v21;
        v22[3] = &protocol witness table for MainActor;
        v22[4] = v19;
        v22[5] = v13;
        v22[6] = v15;
        v23 = sub_100521BF0((uint64_t)v6, (uint64_t)&unk_1013E1A30, (uint64_t)v22, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);

        swift_release(v23);
        swift_unknownObjectRelease(v15);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"makeSubmenuForExport()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 603, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeSubmenuForExport()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 603, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
      *(_QWORD *)&result = swift_release(v13).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10052A614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[31] = a5;
  v6[32] = a6;
  v6[30] = a4;
  v7 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v6[33] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[34] = v8;
  v6[35] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[36] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[37] = v10;
  v6[38] = v11;
  return swift_task_switch(sub_10052A6B0, v10, v11);
}

uint64_t sub_10052A6B0()
{
  _QWORD *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double);

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  LODWORD(v1) = objc_msgSend(v2, "wantsToEndForNonPopoverPresentations");
  if ((_DWORD)v1)
  {
    v3 = sub_100C1CAE8();
    objc_msgSend(v3, "resetToDefaultModeAnimated:", 1);

  }
  v5 = v0[34];
  v4 = v0[35];
  v6 = v0[33];
  v7 = v0[30];
  objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "visibleUnscaledRect");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = *(char **)(*(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v17, v0 + 19, 0, 0);
  v18 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v17 + *(int *)(v18 + 36), v6);
  v19 = v16;
  v20 = sub_10054B7E8(v4, (uint64_t)v19);
  v0[39] = v20;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);

  v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double))((char *)&dword_1013F0590 + dword_1013F0590);
  v21 = (_QWORD *)swift_task_alloc(unk_1013F0594);
  v0[40] = v21;
  *v21 = v0;
  v21[1] = sub_10052A898;
  return v23(v0[31], v0[30], v0[32], (uint64_t)v20, v9, v11, v13, v15);
}

uint64_t sub_10052A898()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[37];
    v5 = v2[38];
    v6 = sub_10052A950;
  }
  else
  {
    swift_bridgeObjectRelease(v2[39]);
    v4 = v2[37];
    v5 = v2[38];
    v6 = sub_10052A904;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10052A904()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 288));
  v1 = *(_QWORD *)(v0 + 280);
  *(_BYTE *)(*(_QWORD *)(v0 + 240) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052A950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 312);
  swift_release(*(_QWORD *)(v0 + 288));
  swift_bridgeObjectRelease(v1);
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v2 = *(_QWORD *)(v0 + 328);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 128, 0, 0);
  v3 = (void *)static OS_os_log.crlDefault;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  swift_getErrorValue(v2, v0 + 232, v0 + 200);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 216);
  v8 = v3;
  v9 = Error.publicDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  swift_getErrorValue(v2, v0 + 224, v0 + 176);
  v13 = Error.fullDescription.getter(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = v14;
  v15 = static os_log_type_t.error.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v15, "Error retrieving immutable board or exporting to PDF: %{public}@ <%@>", 69, 2, inited);
  swift_setDeallocating(inited);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v16);

  swift_errorRelease(v2);
  v17 = *(_QWORD *)(v0 + 280);
  *(_BYTE *)(*(_QWORD *)(v0 + 240) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Class sub_10052AB28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  NSString v39;
  objc_class *v40;
  Swift::String v41;
  Class isa;
  Swift::OpaquePointer v44;
  UIImage_optional v45;

  v1 = v0;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  v11 = (void *)objc_opt_self(UIImage);
  v12 = objc_msgSend(v11, "systemImageNamed:", v10);

  v13 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v7, v9, 0, 0, v12, 0, 0, 0, 0, 0, 0, sub_10054E9BC, v13);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  v18 = objc_msgSend(v2, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v11, "systemImageNamed:", v25);

  v27 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16, v1);
  v28 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22, v24, 0, 0, v26, 0, 0, 0, 0, 0, 0, sub_10054EBA8, v27);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
  specialized Array._endMutation()(v31);
  v32 = objc_msgSend(v2, "mainBundle");
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v39 = String._bridgeToObjectiveC()();
  v40 = (objc_class *)objc_msgSend(v11, "systemImageNamed:", v39);

  v41._countAndFlagsBits = v36;
  v41._object = v38;
  v45.value.super.isa = v40;
  v45.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v41, (Swift::String_optional)0, v45, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v44).super.super.isa;

  return isa;
}

void sub_10052AFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "print:", 0);

  }
}

double sub_10052B058(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  double result;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  char v25[24];
  char v26[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (char *)Strong;
    v13 = *(char **)(*(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v14, v25, 0, 0);
    v15 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v14 + *(int *)(v15 + 36), v6);
    v16 = v13;
    v17 = sub_10054B7E8((uint64_t)v9, (uint64_t)v16);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);

    objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "endEditing");
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 1, 1, v18);
    type metadata accessor for MainActor(0);
    v19 = v12;
    swift_bridgeObjectRetain(v17);
    v21 = static MainActor.shared.getter(v20);
    v22 = swift_allocObject(&unk_10126AC18, 56, 7);
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v22 + 32) = v19;
    *(_BYTE *)(v22 + 40) = 1;
    *(_QWORD *)(v22 + 48) = v17;
    v23 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_10140B760, v22, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);

    swift_bridgeObjectRelease(v17);
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  }
  return result;
}

uint64_t sub_10052B2B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v2 != 2)
  {
    if ((v2 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v5 = String._bridgeToObjectiveC()();
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);
    v8 = 1;
    goto LABEL_6;
  }
  v3 = sub_100C2B92C();
  *(_BYTE *)(v0 + v1) = v3 & 1;
  if ((v3 & 1) != 0)
    goto LABEL_5;
LABEL_3:
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);
  v8 = 0;
LABEL_6:
  v9 = v7;

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v13);

  v15 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v0);
  v16 = swift_allocObject(&unk_10126AC68, 25, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = v8;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v10, v12, 0, 0, v14, 0, 0, 0, 0, 0, 0, sub_10054ECA0, v16);
}

unint64_t sub_10052B52C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  unsigned int v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v33;
  unint64_t v34;

  v1 = v0;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  if ((objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "documentIsSharedReadOnly") & 1) == 0)
  {
    v2 = (void *)objc_opt_self(UIDeferredMenuElement);
    v3 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v3 + 16, v1);
    aBlock[4] = sub_10054E9D4;
    v33 = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_100524B50;
    aBlock[3] = &unk_10126AAC8;
    v4 = _Block_copy(aBlock);
    v5 = objc_msgSend(v2, "elementWithUncachedProvider:", v4, swift_release(v33).n128_f64[0]);
    _Block_release(v4);
    v6 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
    v8 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v7 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v8 >= v7 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
    v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
    specialized Array._endMutation()(v9);

  }
  v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  v11 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController);
  if (!v11)
    goto LABEL_13;
  if ((objc_msgSend(v11, "isBeingPresented") & 1) != 0)
    goto LABEL_12;
  v12 = *(void **)(v1 + v10);
  if (!v12)
    goto LABEL_13;
  if ((objc_msgSend(v12, "isMovingToParentViewController") & 1) != 0)
  {
LABEL_12:
    v15 = 1;
    goto LABEL_14;
  }
  v13 = *(void **)(v1 + v10);
  if (v13)
  {
    v14 = objc_msgSend(v13, "presentingViewController");
    if (v14)
    {

      goto LABEL_12;
    }
  }
LABEL_13:
  v15 = 0;
LABEL_14:
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v23);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v25 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16, v1);
  v26 = swift_allocObject(&unk_10126AB00, 32, 7);
  *(_BYTE *)(v26 + 16) = v15;
  *(_QWORD *)(v26 + 24) = v25;
  v27 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v20, v22, 0, 0, v24, 0, 0, 0, 0, 0, v15, sub_10054EA00, v26);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v28 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);

  return v34;
}

void sub_10052B8F8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _BYTE v22[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v8 = String._bridgeToObjectiveC()();
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

    v16 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v16 + 16, v6);
    v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, v13, 0, 0, v15, 0, 0, 0, 0, 0, 0, sub_10054EA0C, v16);
    v18 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v19 = swift_allocObject(v18, 40, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v19 + 32) = v17;
    v21 = v19;
    specialized Array._endMutation()(v19);
    v20 = v17;
    a1(v21);

    swift_bridgeObjectRelease(v21);
  }
  else
  {
    a1((uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_10052BB50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100C38488();
    sub_100C421F8(0);

  }
}

void sub_10052BBA8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t Strong;
  _BYTE v9[24];

  v3 = a3 + 16;
  if ((a2 & 1) == 0)
  {
    swift_beginAccess(a3 + 16, v9, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (!Strong)
      return;
    v7 = (id)Strong;
    sub_100C1B450((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    goto LABEL_7;
  }
  swift_beginAccess(a3 + 16, v9, 0, 0);
  v4 = swift_unknownObjectWeakLoadStrong(v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController);
    v7 = v6;

    if (v6)
    {
      objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);
LABEL_7:

    }
  }
}

uint64_t sub_10052BC70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = swift_retain(v3);
  AppStorage.wrappedValue.getter(&v8, v4, &type metadata for Bool);
  swift_release(v3);
  v5 = *(_QWORD *)(a2 + 16);
  v7 = (v8 & 1) == 0;
  swift_retain(v5);
  AppStorage.wrappedValue.setter(&v7, v5, &type metadata for Bool);
  return swift_release(v5);
}

uint64_t sub_10052BCF8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  void *v20;
  _BOOL8 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  NSString v46;
  id v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  NSString v54;
  objc_class *v55;
  Swift::String v56;
  Swift::String_optional v57;
  Class isa;
  uint64_t result;
  Swift::OpaquePointer children;
  id v62;
  uint64_t v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v74;

  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v68 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "mathCalculationController");
  v2 = -[CRLMathCalculationController mathHintsMode]_0();
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = objc_msgSend(v3, "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

  v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  v66 = v3;
  v16 = objc_msgSend(v3, "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

  v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v64 = v20;

  v21 = (a1 & 1) == 0;
  v22 = v2;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v23 = swift_allocObject(&unk_10126AB50, 24, 7);
  *(_QWORD *)(v23 + 16) = v68;
  v24 = v68;
  swift_bridgeObjectRetain(v9);
  v67 = v9;
  v25 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v70, v9, 0, 0, 0, 0, 0, 0, 0, v21, (v2 == 2) & a1, sub_10054EA50, v23);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v27 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
  v26 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v27 >= v26 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
  v65 = v25;
  v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
  specialized Array._endMutation()(v28);
  v29 = swift_allocObject(&unk_10126AB78, 24, 7);
  *(_QWORD *)(v29 + 16) = v24;
  v30 = v24;
  swift_bridgeObjectRetain(v15);
  v69 = v15;
  v31 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v71, v15, 0, 0, 0, 0, 0, 0, 0, v21, (v2 == 1) & a1, sub_10054EA58, v29);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
  v34 = v2;
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v35);
  if ((a1 & 1) != 0)
    v36 = 0;
  else
    v36 = 8;
  if (!v22)
    v21 = 1;
  v37 = swift_allocObject(&unk_10126ABA0, 32, 7);
  *(_BYTE *)(v37 + 16) = a1 & 1;
  *(_QWORD *)(v37 + 24) = v30;
  v62 = v30;
  v38 = v64;
  swift_bridgeObjectRetain(v64);
  v39 = v63;
  v40 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v63, v64, 0, 0, 0, 0, 0, 0, 0, v36, v21, sub_10054EA84, v37);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
  v42 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
  v41 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v42 >= v41 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
  v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
  specialized Array._endMutation()(v43);
  v44 = objc_msgSend(v66, "mainBundle");
  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v44, "localizedStringForKey:value:table:", v45, v46, 0);

  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v50 = v49;

  if (!v34)
  {
    v52 = v67;
    v51 = v69;
    goto LABEL_17;
  }
  v51 = v64;
  if (v34 == 2)
  {
    v52 = v69;
    v39 = v70;
    v38 = v67;
LABEL_17:
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v52);
    sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
    v53 = (void *)objc_opt_self(UIImage);
    v54 = String._bridgeToObjectiveC()();
    v55 = (objc_class *)objc_msgSend(v53, "systemImageNamed:", v54);

    v56._countAndFlagsBits = v48;
    v56._object = v50;
    v57.value._countAndFlagsBits = v39;
    v57.value._object = v38;
    v74.value.super.isa = v55;
    v74.is_nil = 0;
    isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v56, v57, v74, (UIMenuIdentifier_optional)32, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;

    return (uint64_t)isa;
  }
  v52 = v67;
  v38 = v69;
  v39 = v71;
  if (v34 == 1)
    goto LABEL_17;
  v72 = v34;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLMathHintsMode, &v72, &type metadata for CRLMathHintsMode, &type metadata for Int);
  __break(1u);
  return result;
}

void sub_10052C3D4()
{
  char v0;
  char v1;
  _BYTE *v2;
  id v3;
  _QWORD v4[3];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for CRLPencilAndPaperFeatureFlags;
  v6 = sub_10054E910();
  LOBYTE(v4[0]) = 0;
  v0 = isFeatureEnabled(_:)(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
  if ((v0 & 1) != 0)
  {
    v5 = &type metadata for CRLFeatureFlags;
    v6 = sub_1004DB6DC();
    LOBYTE(v4[0]) = 14;
    v1 = isFeatureEnabled(_:)(v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
    if ((v1 & 1) != 0)
    {
      if (qword_1013DD618 != -1)
        swift_once(&qword_1013DD618, sub_1009A4410);
      v2 = (_BYTE *)(qword_1013FF120
                   + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v4, 0, 0);
      if (*v2 == 1)
      {
        v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        objc_msgSend(v3, "setInteger:forKey:", 2, CFSTR("CRLMathRecognitionMode"));

      }
    }
  }
}

void sub_10052C4FC()
{
  char v0;
  char v1;
  _BYTE *v2;
  id v3;
  _QWORD v4[3];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for CRLPencilAndPaperFeatureFlags;
  v6 = sub_10054E910();
  LOBYTE(v4[0]) = 0;
  v0 = isFeatureEnabled(_:)(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
  if ((v0 & 1) != 0)
  {
    v5 = &type metadata for CRLFeatureFlags;
    v6 = sub_1004DB6DC();
    LOBYTE(v4[0]) = 14;
    v1 = isFeatureEnabled(_:)(v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
    if ((v1 & 1) != 0)
    {
      if (qword_1013DD618 != -1)
        swift_once(&qword_1013DD618, sub_1009A4410);
      v2 = (_BYTE *)(qword_1013FF120
                   + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v4, 0, 0);
      if (*v2 == 1)
      {
        v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        objc_msgSend(v3, "setInteger:forKey:", 1, CFSTR("CRLMathRecognitionMode"));

      }
    }
  }
}

void sub_10052C624(uint64_t a1, char a2)
{
  char v2;
  char v3;
  _BYTE *v4;
  id v5;
  _QWORD v6[3];
  ValueMetadata *v7;
  unint64_t v8;

  if ((a2 & 1) != 0)
  {
    v7 = &type metadata for CRLPencilAndPaperFeatureFlags;
    v8 = sub_10054E910();
    LOBYTE(v6[0]) = 0;
    v2 = isFeatureEnabled(_:)(v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
    if ((v2 & 1) != 0)
    {
      v7 = &type metadata for CRLFeatureFlags;
      v8 = sub_1004DB6DC();
      LOBYTE(v6[0]) = 14;
      v3 = isFeatureEnabled(_:)(v6);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
      if ((v3 & 1) != 0)
      {
        if (qword_1013DD618 != -1)
          swift_once(&qword_1013DD618, sub_1009A4410);
        v4 = (_BYTE *)(qword_1013FF120
                     + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
        swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v6, 0, 0);
        if (*v4 == 1)
        {
          v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
          objc_msgSend(v5, "setInteger:forKey:", 0, CFSTR("CRLMathRecognitionMode"));

        }
      }
    }
  }
}

unint64_t sub_10052C750()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  Swift::String v34;
  objc_class *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  NSString v44;
  NSString v45;
  id v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  UIMenuElementSize preferredElementSize;
  id v53;
  Swift::String v54;
  Class isa;
  uint64_t v56;
  UIMenuElementSize v57;
  objc_class *v58;
  Swift::String v59;
  objc_class *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  Swift::OpaquePointer v65;
  Swift::OpaquePointer v66;
  Swift::OpaquePointer v67;
  void **aBlock;
  uint64_t v69;
  double (*v70)(uint64_t, void *);
  void *v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  UIImage_optional v75;
  UIImage_optional v76;
  UIImage_optional v77;

  v1 = v0;
  v74 = (unint64_t)_swiftEmptyArrayStorage;
  if ((objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "documentIsSharedReadOnly") & 1) == 0)
  {
    v2 = objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                           + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
    v3 = sub_1006F2CE0();

    if ((v3 & 1) == 0)
    {
      v4 = (void *)objc_opt_self(UIDeferredMenuElement);
      v5 = swift_allocObject(&unk_10126A858, 24, 7);
      swift_unknownObjectWeakInit(v5 + 16, v1);
      v72 = sub_10054F168;
      v73 = v5;
      aBlock = _NSConcreteStackBlock;
      v69 = *(_QWORD *)"";
      v70 = sub_100524B50;
      v71 = &unk_10126AF50;
      v6 = _Block_copy(&aBlock);
      v7 = objc_msgSend(v4, "elementWithUncachedProvider:", v6, swift_release(v73).n128_f64[0]);
      _Block_release(v6);
      v8 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v10 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v9 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v10 >= v9 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
      v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
      specialized Array._endMutation()(v11);

    }
  }
  v12 = (void *)objc_opt_self(UIDeferredMenuElement);
  v13 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v72 = sub_10054F170;
  v73 = v13;
  aBlock = _NSConcreteStackBlock;
  v69 = *(_QWORD *)"";
  v70 = sub_100524B50;
  v71 = &unk_10126AF78;
  v14 = _Block_copy(&aBlock);
  v15 = objc_msgSend(v12, "elementWithUncachedProvider:", v14, swift_release(v73).n128_f64[0]);
  _Block_release(v14);
  v16 = v15;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v19);
  v20 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16, v1);
  v72 = sub_10054F178;
  v73 = v20;
  aBlock = _NSConcreteStackBlock;
  v69 = *(_QWORD *)"";
  v70 = sub_100524B50;
  v71 = &unk_10126AFA0;
  v21 = _Block_copy(&aBlock);
  v22 = objc_msgSend(v12, "elementWithUncachedProvider:", v21, swift_release(v73).n128_f64[0]);
  _Block_release(v21);
  v23 = v22;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
  v25 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v25 >= v24 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
  v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
  specialized Array._endMutation()(v26);
  v27 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16, v1);
  v72 = sub_10054F180;
  v73 = v27;
  aBlock = _NSConcreteStackBlock;
  v69 = *(_QWORD *)"";
  v70 = sub_100524B50;
  v71 = &unk_10126AFC8;
  v28 = _Block_copy(&aBlock);
  v29 = objc_msgSend(v12, "elementWithUncachedProvider:", v28, swift_release(v73).n128_f64[0]);
  _Block_release(v28);
  v30 = v29;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
  v32 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v31 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v32 >= v31 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
  v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v30);
  specialized Array._endMutation()(v33);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v75.value.super.isa = 0;
  v75.is_nil = 0;
  v35 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v75, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v65).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
  v37 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v36 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v37 >= v36 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
  v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
  specialized Array._endMutation()(v38);
  v39 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16, v1);
  v40 = swift_allocObject(&unk_10126B000, 32, 7);
  *(_QWORD *)(v40 + 16) = v39;
  *(_QWORD *)(v40 + 24) = &off_1012634C0;
  v72 = sub_10054F194;
  v73 = v40;
  aBlock = _NSConcreteStackBlock;
  v69 = *(_QWORD *)"";
  v70 = sub_100524B50;
  v71 = &unk_10126B018;
  v41 = _Block_copy(&aBlock);
  v42 = objc_msgSend(v12, "elementWithUncachedProvider:", v41, swift_release(v73).n128_f64[0]);
  _Block_release(v41);
  v43 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v44 = String._bridgeToObjectiveC()();
  v45 = String._bridgeToObjectiveC()();
  v46 = objc_msgSend(v43, "localizedStringForKey:value:table:", v44, v45, 0);

  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  v50 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v51 = swift_allocObject(v50, 40, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v51 + 32) = v42;
  aBlock = (void **)v51;
  specialized Array._endMutation()(v51);
  preferredElementSize = (UIMenuElementSize)aBlock;
  v53 = v42;
  v54._countAndFlagsBits = v47;
  v54._object = v49;
  v76.value.super.isa = 0;
  v76.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v54, (Swift::String_optional)0, v76, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v66).super.super.isa;
  v56 = swift_allocObject(v50, 40, 7);
  *(_OWORD *)(v56 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v56 + 32) = isa;
  aBlock = (void **)v56;
  specialized Array._endMutation()(v56);
  v57 = (UIMenuElementSize)aBlock;
  v58 = isa;
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  v77.value.super.isa = 0;
  v77.is_nil = 0;
  v60 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v59, (Swift::String_optional)0, v77, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v57, v67).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
  v62 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v61 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v62 >= v61 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
  v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
  specialized Array._endMutation()(v63);

  return v74;
}

double sub_10052CEE8(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  _BYTE *v6;
  uint64_t v7;
  int v8;
  char v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  char v14;
  double result;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _BYTE v29[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
  {
    a1(_swiftEmptyArrayStorage);
    return result;
  }
  v6 = (_BYTE *)Strong;
  v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  v8 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled);
  if (v8 != 2)
  {
    if ((v8 & 1) == 0)
      goto LABEL_4;
LABEL_7:
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);
    v14 = 1;
    goto LABEL_8;
  }
  v9 = sub_100C2C364();
  v6[v7] = v9 & 1;
  if ((v9 & 1) != 0)
    goto LABEL_7;
LABEL_4:
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);
  v14 = 0;
LABEL_8:
  v16 = v13;

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v20);

  v22 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v6);
  v23 = swift_allocObject(&unk_10126B0A0, 25, 7);
  *(_QWORD *)(v23 + 16) = v22;
  *(_BYTE *)(v23 + 24) = v14;
  v24 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v17, v19, 0, 0, v21, 0, 0, 0, 0, 0, 0, sub_10054F20C, v23);
  v25 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v26 + 32) = v24;
  v28 = v26;
  specialized Array._endMutation()(v26);
  v27 = v24;
  a1((_QWORD *)v28);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  return result;
}

double sub_10052D230(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  _BYTE *v6;
  uint64_t v7;
  int v8;
  char v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  char v14;
  double result;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _BYTE v29[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
  {
    a1(_swiftEmptyArrayStorage);
    return result;
  }
  v6 = (_BYTE *)Strong;
  v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
  v8 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
  if (v8 != 2)
  {
    if ((v8 & 1) == 0)
      goto LABEL_4;
LABEL_7:
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);
    v14 = 1;
    goto LABEL_8;
  }
  v9 = sub_100C2B92C();
  v6[v7] = v9 & 1;
  if ((v9 & 1) != 0)
    goto LABEL_7;
LABEL_4:
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11 = String._bridgeToObjectiveC()();
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);
  v14 = 0;
LABEL_8:
  v16 = v13;

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v20);

  v22 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16, v6);
  v23 = swift_allocObject(&unk_10126B078, 25, 7);
  *(_QWORD *)(v23 + 16) = v22;
  *(_BYTE *)(v23 + 24) = v14;
  v24 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v17, v19, 0, 0, v21, 0, 0, 0, 0, 0, 0, sub_100550114, v23);
  v25 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v26 + 32) = v24;
  v28 = v26;
  specialized Array._endMutation()(v26);
  v27 = v24;
  a1((_QWORD *)v28);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  return result;
}

void sub_10052D558(uint64_t a1, uint64_t a2, char a3, void (*a4)(BOOL))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    a4((a3 & 1) == 0);

  }
}

void sub_10052D5C4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _BYTE v20[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    if (objc_msgSend(*(id *)(Strong+ OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "hasSelection"))
    {
      v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v8 = String._bridgeToObjectiveC()();
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
      v14 = swift_allocObject(&unk_10126A858, 24, 7);
      swift_unknownObjectWeakInit(v14 + 16, v6);
      v15 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, v13, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F1EC, v14);
      v16 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v17 = swift_allocObject(v16, 40, 7);
      *(_OWORD *)(v17 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v17 + 32) = v15;
      v19 = v17;
      specialized Array._endMutation()(v17);
      v18 = v15;
      a1(v19);

      swift_bridgeObjectRelease(v19);
      return;
    }

  }
  a1((uint64_t)_swiftEmptyArrayStorage);
}

void sub_10052D7E4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  char *v7;
  void *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (char *)objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "board");
    if (v7)
    {
      v8 = v7;
      v9 = (char *)*(id *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];

      v10 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
      v11 = *(_QWORD **)&v9[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      if (!v11)
      {
        sub_100740DA4();
        v11 = *(_QWORD **)&v9[v10];
      }
      v12 = (uint64_t)(v11 ? v11 : _swiftEmptyArrayStorage);
      swift_bridgeObjectRetain(v11);

      if ((unint64_t)v12 >> 62)
      {
        v26 = v12 < 0 ? v12 : v12 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v12);
        v13 = _CocoaArrayWrapper.endIndex.getter(v26);
        swift_bridgeObjectRelease(v12);
      }
      else
      {
        v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v12);
      if (v13 >= 1)
      {
        v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v15 = String._bridgeToObjectiveC()();
        v16 = String._bridgeToObjectiveC()();
        v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

        v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v20 = v19;

        sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
        v21 = swift_allocObject(&unk_10126A858, 24, 7);
        swift_unknownObjectWeakInit(v21 + 16, v6);
        v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v18, v20, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F1CC, v21);
        v23 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v24 = swift_allocObject(v23, 40, 7);
        *(_OWORD *)(v24 + 16) = xmmword_100EEF400;
        *(_QWORD *)(v24 + 32) = v22;
        v27 = v24;
        specialized Array._endMutation()(v24);
        v25 = v22;
        a1(v27);

        swift_bridgeObjectRelease(v27);
        return;
      }
    }

  }
  a1((uint64_t)_swiftEmptyArrayStorage);
}

void sub_10052DAAC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), *a3);

  }
}

void sub_10052DB14(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _BYTE v35[24];
  _BYTE v36[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    swift_beginAccess(v6, v35, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v6);
    v10 = (char *)v9;
    if (v9)
    {
      v11 = *(id *)(v9 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);

      v10 = (char *)objc_msgSend(v11, "editingCoordinator");
      if (v10)
      {
        v12 = *(id *)&v10[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];

        LOBYTE(v10) = sub_1006F2CE0();
      }
    }
    v13 = (uint64_t)_swiftEmptyArrayStorage;
    v34 = _swiftEmptyArrayStorage;
    v14 = *(_QWORD *)(a4 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain(a4);
      for (i = 0; i != v14; ++i)
      {
        v33 = *(_QWORD *)(a4 + 8 * i + 32);
        sub_10052DEA4(&v34, (double *)&v33, (uint64_t)v8, v10 & 1);
      }
      swift_bridgeObjectRelease(a4);
      v13 = (uint64_t)v34;
    }
    v34 = (_QWORD *)v13;
    if ((v10 & 1) == 0)
      goto LABEL_13;
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v17 = String._bridgeToObjectiveC()();
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    swift_bridgeObjectRetain(v22);
    v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v20, v22, 0, 0, 0, 0, 0, 0, 0, 0, 1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    v24 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v25 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v25 + 32) = v20;
    *(_QWORD *)(v25 + 40) = v22;
    v26 = v23;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v26, "setAccessibilityUserInputLabels:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

    if (!((unint64_t)v13 >> 62))
    {
      v28 = v26;
LABEL_12:
      sub_100CFBC30(0, 0, (uint64_t)v26);

      v13 = (uint64_t)v34;
LABEL_13:
      a1(v13);
      swift_bridgeObjectRelease(v13);

      return;
    }
    if (v13 < 0)
      v29 = v13;
    else
      v29 = v13 & 0xFFFFFFFFFFFFFF8;
    v30 = v26;
    swift_bridgeObjectRetain(v13);
    v31 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v13);
    if ((v31 & 0x8000000000000000) == 0)
      goto LABEL_12;
    __break(1u);
    v32 = v34;
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v32);
    __break(1u);
  }
  else
  {
    a1((uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_10052DEA4(_QWORD *a1, double *a2, uint64_t a3, char a4)
{
  unsigned __int8 v6;
  double v7;
  char *v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;
  uint64_t v33;

  v6 = a4 ^ 1;
  v7 = *a2;
  v8 = (char *)objc_opt_self(NSNumberFormatter);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v10 = objc_msgSend(v8, "localizedStringFromNumber:numberStyle:", isa, 3);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "viewScale");
  v15 = (v14 == v7) & v6;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v16 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, a3);
  v17 = swift_allocObject(&unk_10126B050, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(double *)(v17 + 24) = v7;
  v18 = (char *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11, v13, 0, 0, 0, 0, 0, 0, 0, 0, v15, sub_10054F1C0, v17);
  v19 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5E40;
  v21 = v7 * 100.0;
  v22 = v7 * 100.0;
  if ((~COERCE__INT64(v7 * 100.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v22 = -9.22337204e18;
  if (v21 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v22 = 9.22337204e18;
  if (v21 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v23 = v20;
  v24 = (uint64_t)v21;
  v25 = objc_allocWithZone((Class)NSNumber);
  v26 = v18;
  v27 = objc_msgSend(v25, "initWithInteger:", v24);
  v28 = objc_msgSend(v8, "localizedStringFromNumber:numberStyle:", v27, 0);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  *(_QWORD *)(v23 + 32) = v29;
  *(_QWORD *)(v23 + 40) = v31;
  v32 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "setAccessibilityUserInputLabels:", v32, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v8 = v26;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v18 = *(char **)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(double *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v18 >= *(_QWORD *)&v22 >> 1)
LABEL_9:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(*(_QWORD *)&v22 > 1uLL, v18 + 1, 1);
  v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v8);
  specialized Array._endMutation()(v33);

}

void sub_10052E194(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_100C1B690(a1);

  }
}

Class sub_10052E1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  char *v7;
  UIMenuElementSize v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  UIMenu v16;
  Swift::OpaquePointer v18;
  _QWORD v19[2];
  char v20[24];
  char v21[24];
  UIImage_optional v22;

  v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return 0;
  v7 = (char *)Strong;
  objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "endEditing");
  v8 = sub_10052E3BC();
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v9 = *(char **)(*(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v10, v20, 0, 0);
  sub_1004B8460(v10, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  v11 = v9;
  v12 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v12);
  v13 = v19[0];
  v14 = (void *)v19[1];
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);

  v15._countAndFlagsBits = v13;
  v15._object = v14;
  v22.value.super.isa = 0;
  v22.is_nil = 0;
  v16.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v22, 0, 0xFFFFFFFFFFFFFFFFLL, v8, v18).super.super.isa;

  return v16.super.super.isa;
}

unint64_t sub_10052E3BC()
{
  void *v0;
  ValueMetadata *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  UIMenuElementSize v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  NSString v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  char *v39;
  objc_class *v40;
  UIMenuElementSize v41;
  uint64_t v42;
  Swift::String v43;
  UIMenu v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  UIMenuElementSize v49;
  uint64_t v50;
  Swift::String v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  unsigned int v56;
  Swift::String v57;
  objc_class *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  Class v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  unsigned __int8 *v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  Swift::String v74;
  objc_class *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char v79;
  objc_class *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  Class v90;
  id v91;
  NSString v92;
  NSString v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSString v98;
  id v99;
  uint64_t v100;
  Class v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char v105;
  objc_class *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  Class v116;
  id v117;
  NSString v118;
  NSString v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSString v124;
  id v125;
  uint64_t v126;
  Class v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  Swift::String v131;
  objc_class *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  UIMenu v136;
  objc_class *v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  void *v141;
  objc_class *v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  objc_class *v147;
  void (*v148)(char *, uint64_t, uint64_t);
  char *v149;
  NSString v150;
  id v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  UIMenuElementSize v158;
  Swift::String v159;
  objc_class *v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  UIMenuElementSize v169;
  Swift::OpaquePointer v170;
  Swift::OpaquePointer v171;
  Swift::OpaquePointer v172;
  uint64_t v173;
  char *v174;
  unint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  objc_class *v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  char v188[24];
  char v189[32];
  UIMenuElementSize v190;
  UIMenuElementSize v191;
  UIMenuElementSize v192;
  UIMenuElementSize aBlock[3];
  ValueMetadata *v194;
  unint64_t v195;
  uint64_t v196;
  UIMenuElementSize v197;
  unint64_t v198;
  UIImage_optional v199;
  UIImage_optional v200;
  UIImage_optional v201;
  UIImage_optional v202;
  UIImage_optional v203;
  UIImage_optional v204;

  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v177 = (uint64_t)&v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = type metadata accessor for URL(0);
  v178 = *(_QWORD *)(v179 - 8);
  v4 = *(_QWORD *)(v178 + 64);
  v5 = __chkstk_darwin(v179);
  v176 = (char *)&v173 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v173 - v6;
  v182 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v181 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v180 = (char *)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = (unint64_t)_swiftEmptyArrayStorage;
  v183 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v9 = swift_allocObject(v183, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5560;
  v10 = (void *)objc_opt_self(UIDeferredMenuElement);
  v11 = swift_allocObject(&unk_10126AA38, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  v195 = (unint64_t)sub_10054E8F8;
  v196 = v11;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = *(UIMenuElementSize *)"";
  aBlock[2] = (UIMenuElementSize)sub_100524B50;
  v194 = (ValueMetadata *)&unk_10126AA50;
  v12 = _Block_copy(aBlock);
  v13 = v196;
  v14 = v0;
  v15 = objc_msgSend(v10, "elementWithUncachedProvider:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  *(_QWORD *)(v9 + 32) = v15;
  v16 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v184 = (objc_class *)objc_opt_self(NSBundle);
  v17 = -[objc_class mainBundle](v184, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = String._bridgeToObjectiveC()();
  v185 = (id)objc_opt_self(UIImage);
  v25 = (char *)objc_msgSend(v185, "systemImageNamed:", v24);

  v26 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16, v14);
  v186 = v16;
  v27 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v21, v23, 0, 0, v25, 0, 0, 0, 0, 0, 0, sub_10054E900, v26);
  *(_QWORD *)(v9 + 40) = v27;
  aBlock[0] = v9;
  specialized Array._endMutation()(v27);
  v28 = (_QWORD *)aBlock[0];
  v197 = aBlock[0];
  if ((objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly") & 1) == 0)
  {
    v29 = -[objc_class mainBundle](v184, "mainBundle");
    v30 = String._bridgeToObjectiveC()();
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v29, "localizedStringForKey:value:table:", v30, v31, 0);

    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v185, "systemImageNamed:", v36);

    v38 = swift_allocObject(&unk_10126AA88, 24, 7);
    *(_QWORD *)(v38 + 16) = v14;
    v39 = v14;
    v40 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v33, v35, 0, 0, v37, 0, 0, 0, 0, 0, 0, sub_10054E908, v38);
    v41 = v197;
    if ((unint64_t)v197 >> 62)
    {
      v165 = v197 < UIMenuElementSizeSmall ? v197 : v197 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v197);
      v166 = _CocoaArrayWrapper.endIndex.getter(v165);
      swift_bridgeObjectRelease(v41);
      if (v166 < 0)
      {
        __break(1u);
        goto LABEL_69;
      }
    }
    sub_100CFBC30(0, 0, (uint64_t)v40);
    v28 = (_QWORD *)v197;
  }
  v175 = v4;
  v42 = sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  v199.value.super.isa = 0;
  v199.is_nil = 0;
  v187 = v42;
  v44.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v43, (Swift::String_optional)0, v199, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v28, v170).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44.super.super.isa);
  v46 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v45 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v46 >= v45 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v46 + 1, 1);
  v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v44.super.super.isa);
  specialized Array._endMutation()(v47);
  v1 = &type metadata for CRLFeatureFlags;
  v194 = &type metadata for CRLFeatureFlags;
  v4 = sub_1004DB6DC();
  v195 = v4;
  LOBYTE(aBlock[0]) = 7;
  v48 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  v28 = _swiftEmptyArrayStorage;
  if ((v48 & 1) == 0)
  {
    v49 = swift_allocObject(v183, 40, 7);
    *(_OWORD *)(v49 + 16) = xmmword_100EEF400;
    v50 = sub_10052B2B4();
    *(_QWORD *)(v49 + 32) = v50;
    aBlock[0] = v49;
    specialized Array._endMutation()(v50);
    v51._countAndFlagsBits = 0;
    v51._object = (void *)0xE000000000000000;
    v200.value.super.isa = 0;
    v200.is_nil = 0;
    v40 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v51, (Swift::String_optional)0, v200, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v170).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
    v25 = *(char **)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v52 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v25 < v52 >> 1)
    {
LABEL_8:
      v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v40);
      specialized Array._endMutation()(v53);

      goto LABEL_9;
    }
LABEL_69:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v25 + 1, 1);
    goto LABEL_8;
  }
LABEL_9:
  v194 = v1;
  v195 = v4;
  LOBYTE(aBlock[0]) = 16;
  v54 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v54 & 1) != 0)
  {
    v55 = objc_msgSend(v14, "traitCollection");
    v56 = objc_msgSend(v55, "crl_isCompactWidth");

    if (v56)
    {
      v169 = sub_10052B52C();
      v57._countAndFlagsBits = 0;
      v57._object = (void *)0xE000000000000000;
      v201.value.super.isa = 0;
      v201.is_nil = 0;
      v58 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v57, (Swift::String_optional)0, v201, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v169, v170).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
      v60 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v59 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v60 >= v59 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
      v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v58);
      specialized Array._endMutation()(v61);

    }
  }
  v192 = (UIMenuElementSize)v28;
  v194 = v1;
  v195 = v4;
  LOBYTE(aBlock[0]) = 18;
  v62 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v62 & 1) != 0)
  {
    v63 = sub_10054BDF0();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
    v65 = *(_QWORD *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v64 = *(_QWORD *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v65 >= v64 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
    v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
    specialized Array._endMutation()(v66);
  }
  v194 = &type metadata for CRLPencilAndPaperFeatureFlags;
  v195 = sub_10054E910();
  LOBYTE(aBlock[0]) = 0;
  v67 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v67 & 1) != 0)
  {
    v194 = v1;
    v195 = v4;
    LOBYTE(aBlock[0]) = 14;
    v68 = isFeatureEnabled(_:)(aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
    if ((v68 & 1) != 0)
    {
      if (qword_1013DD618 != -1)
        swift_once(&qword_1013DD618, sub_1009A4410);
      v69 = (unsigned __int8 *)(qword_1013FF120
                              + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v188, 0, 0);
      v70 = (id)sub_10052BCF8(*v69);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
      v72 = *(_QWORD *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v71 = *(_QWORD *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v72 >= v71 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
      v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
      specialized Array._endMutation()(v73);

    }
  }
  v174 = v7;
  v74._countAndFlagsBits = 0;
  v74._object = (void *)0xE000000000000000;
  v202.value.super.isa = 0;
  v202.is_nil = 0;
  v75 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v74, (Swift::String_optional)0, v202, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v192, v170).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
  v77 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v76 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v77 >= v76 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
  v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
  specialized Array._endMutation()(v78);
  v191 = (UIMenuElementSize)v28;
  v194 = v1;
  v195 = v4;
  LOBYTE(aBlock[0]) = 16;
  v79 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v79 & 1) == 0)
    goto LABEL_32;
  v80 = v75;
  v81 = *(char **)(*(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v82 = *(_QWORD *)&v81[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v82, v189, 0, 0);
  v83 = type metadata accessor for CRLBoardCRDTData(0);
  v84 = v181;
  v85 = (uint64_t)v180;
  v86 = v182;
  (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v180, v82 + *(int *)(v83 + 36), v182);
  v87 = v81;
  v88 = (uint64_t)sub_10054B7E8(v85, (uint64_t)v87);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v86);

  if ((unint64_t)v88 >> 62)
  {
    v167 = v88 < 0 ? v88 : v88 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v88);
    v89 = _CocoaArrayWrapper.endIndex.getter(v167);
    swift_bridgeObjectRelease(v88);
  }
  else
  {
    v89 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v88);
  v75 = v80;
  if (v89 >= 1)
  {
    v90 = sub_100529844();
  }
  else
  {
LABEL_32:
    v91 = -[objc_class mainBundle](v184, "mainBundle");
    v92 = String._bridgeToObjectiveC()();
    v93 = String._bridgeToObjectiveC()();
    v94 = objc_msgSend(v91, "localizedStringForKey:value:table:", v92, v93, 0);

    v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
    v97 = v96;

    v98 = String._bridgeToObjectiveC()();
    v99 = objc_msgSend(v185, "systemImageNamed:", v98);

    v100 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v100 + 16, v14);
    v90 = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v95, v97, 0, 0, v99, 0, 0, 0, 0, 0, 0, sub_10054E954, v100);
  }
  v101 = v90;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v90);
  v103 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v102 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v103 >= v102 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v102 > 1, v103 + 1, 1);
  v104 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v103, v101);
  specialized Array._endMutation()(v104);
  if (objc_msgSend((id)objc_opt_self(UIPrintInteractionController), "isPrintingAvailable"))
  {
    v194 = v1;
    v195 = v4;
    LOBYTE(aBlock[0]) = 16;
    v105 = isFeatureEnabled(_:)(aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
    if ((v105 & 1) == 0)
      goto LABEL_41;
    v106 = v75;
    v107 = *(char **)(*(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v108 = *(_QWORD *)&v107[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v108, aBlock, 0, 0);
    v109 = type metadata accessor for CRLBoardCRDTData(0);
    v110 = v181;
    v111 = (uint64_t)v180;
    v112 = v182;
    (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v180, v108 + *(int *)(v109 + 36), v182);
    v113 = v107;
    v114 = (uint64_t)sub_10054B7E8(v111, (uint64_t)v113);
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v112);

    if ((unint64_t)v114 >> 62)
    {
      v168 = v114 < 0 ? v114 : v114 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v114);
      v115 = _CocoaArrayWrapper.endIndex.getter(v168);
      swift_bridgeObjectRelease(v114);
    }
    else
    {
      v115 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(v114);
    v75 = v106;
    if (v115 >= 1)
    {
      v116 = sub_10052AB28();
    }
    else
    {
LABEL_41:
      v117 = -[objc_class mainBundle](v184, "mainBundle");
      v118 = String._bridgeToObjectiveC()();
      v119 = String._bridgeToObjectiveC()();
      v120 = objc_msgSend(v117, "localizedStringForKey:value:table:", v118, v119, 0);

      v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
      v123 = v122;

      v124 = String._bridgeToObjectiveC()();
      v125 = objc_msgSend(v185, "systemImageNamed:", v124);

      v126 = swift_allocObject(&unk_10126A858, 24, 7);
      swift_unknownObjectWeakInit(v126 + 16, v14);
      v116 = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v121, v123, 0, 0, v125, 0, 0, 0, 0, 0, 0, sub_10054E9BC, v126);
    }
    v127 = v116;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v116);
    v129 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v128 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v129 >= v128 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v128 > 1, v129 + 1, 1);
    v130 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v129, v127);
    specialized Array._endMutation()(v130);
  }
  v131._countAndFlagsBits = 0;
  v131._object = (void *)0xE000000000000000;
  v203.value.super.isa = 0;
  v203.is_nil = 0;
  v132 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v131, (Swift::String_optional)0, v203, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v191, v171).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v132);
  v134 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v133 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v134 >= v133 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v133 > 1, v134 + 1, 1);
  v135 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v134, v132);
  specialized Array._endMutation()(v135);
  if (qword_1013DD260 != -1)
    swift_once(&qword_1013DD260, sub_100851D38);
  if (byte_10147F899 == 1)
  {
    v136.super.super.isa = sub_10065BF10(v14, 0).super.super.isa;
    if (v136.super.super.isa)
    {
      v137 = v136.super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v137);
      v139 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v138 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v139 >= v138 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v138 > 1, v139 + 1, 1);
      v140 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v139, v137);
      specialized Array._endMutation()(v140);

    }
  }
  if (qword_1013DD258 != -1)
    swift_once(&qword_1013DD258, sub_100851C7C);
  if (byte_10147F898 == 1)
  {
    v141 = *(void **)(*(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    v142 = v141;
    v143 = v141;
    v144 = v177;
    sub_100851D68(v143, 0, 0, v177);
    v145 = v178;
    v146 = v179;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v144, 1, v179) == 1)
    {
      sub_1004CB800(v144, &qword_1013E04D0);
      v147 = v132;
      v132 = v75;
      v75 = v142;
    }
    else
    {
      v184 = v75;
      v148 = *(void (**)(char *, uint64_t, uint64_t))(v145 + 32);
      v149 = v174;
      v148(v174, v144, v146);
      v150 = String._bridgeToObjectiveC()();
      v151 = objc_msgSend(v185, "systemImageNamed:", v150);

      v152 = v176;
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v176, v149, v146);
      v153 = *(unsigned __int8 *)(v145 + 80);
      v154 = (v153 + 16) & ~v153;
      v155 = swift_allocObject(&unk_10126AAB0, v154 + v175, v153 | 7);
      v148((char *)(v155 + v154), (uint64_t)v152, v146);
      v156 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x522D6F742D706154, 0xEC00000072616461, 0, 0, v151, 0, 0, 0, 0, 0, 0, sub_10050CFD8, v155);
      (*(void (**)(char *, uint64_t))(v145 + 8))(v149, v146);

      v157 = swift_allocObject(v183, 40, 7);
      *(_OWORD *)(v157 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v157 + 32) = v156;
      v190 = v157;
      specialized Array._endMutation()(v157);
      v158 = v190;
      v147 = v156;
      v159._countAndFlagsBits = 0;
      v159._object = (void *)0xE000000000000000;
      v204.value.super.isa = 0;
      v204.is_nil = 0;
      v160 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v159, (Swift::String_optional)0, v204, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v158, v172).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v160);
      v162 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v161 = *(_QWORD *)((v198 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v162 >= v161 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v161 > 1, v162 + 1, 1);
      v163 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v162, v160);
      specialized Array._endMutation()(v163);

      v75 = v184;
    }

  }
  return v198;
}

objc_class *sub_10052F730()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Swift::String_optional v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_class *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  UIImage_optional v33;
  UIAction_optional v34;
  UIMenu_optional v35;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F480, v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = v10;
  v14 = v12;
  v15.value._countAndFlagsBits = v6;
  v15.value._object = v8;
  v33.value.super.isa = (Class)v10;
  v33.is_nil = (char)v12;
  v34.value.super.super.isa = 0;
  v16 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v15, v33, v34, v35).super.super.isa;
  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v16, "setAccessibilityLabel:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v24 = v16;
  v25 = objc_msgSend(v1, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v24, "setAccessibilityHint:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v24;
}

void sub_10052FADC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char *v11;
  id v12;
  double v13;
  double v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[248];
  uint64_t v33;
  _QWORD v34[32];

  v3 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  a2 += 16;
  swift_beginAccess(a2, &v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = sub_100C1CC20();
    v9 = (void *)swift_unknownObjectWeakLoadStrong(v8 + 16);
    if (v9
      && (v10 = v9,
          v11 = (char *)objc_msgSend(v9, "editingCoordinator"),
          v10,
          v11))
    {
      v12 = *(id *)&v11[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
      swift_release(v8);

      v13 = sub_100479D94(0);
      v15 = objc_msgSend((id)objc_opt_self(CRLPathSource), "pathSourceForShapeType:naturalSize:", 0, v13, v14);
      v16 = objc_allocWithZone((Class)NSAttributedString);
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend(v16, "initWithString:", v17);

      v19 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
      sub_10054F488((uint64_t)v32);
      sub_1004C4938((uint64_t)v32, (uint64_t)v34, &qword_1013E1B50);
      v20 = v15;
      v21 = v18;
      v22 = sub_100CF4294(0, 0, v15, 0, 0, 0, 1, 0, 1, (_QWORD *)1, (void *)1, (void *)1, (void *)1, (char *)v18, v5, v34, 0, 0, 0);

      sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_1013F1500);
      v23 = type metadata accessor for CRLWPShapeItem(0);
      v24 = swift_dynamicCastClassUnconditional(v22, v23, 0, 0, 0);
      v25 = sub_100C1CC20();
      v26 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v27 = swift_allocObject(v26, 40, 7);
      *(_OWORD *)(v27 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v27 + 32) = v24;
      v31 = v27;
      specialized Array._endMutation()(v27);
      v28 = v31;
      v29 = v22;
      sub_10054C750(v28, 0, 0);
      swift_release(v25);

      swift_bridgeObjectRelease(v28);
    }
    else
    {

      swift_release(v8);
    }
  }
}

objc_class *sub_10052FDDC()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Swift::String_optional v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_class *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  UIImage_optional v33;
  UIAction_optional v34;
  UIMenu_optional v35;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F2F0, v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = v10;
  v14 = v12;
  v15.value._countAndFlagsBits = v6;
  v15.value._object = v8;
  v33.value.super.isa = (Class)v10;
  v33.is_nil = (char)v12;
  v34.value.super.super.isa = 0;
  v16 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v15, v33, v34, v35).super.super.isa;
  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v16, "setAccessibilityLabel:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v24 = v16;
  v25 = objc_msgSend(v1, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v24, "setAccessibilityHint:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v24;
}

void sub_100530188(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  id v6;
  id v7;
  unsigned int v8;
  void *v9;
  id v10;
  char v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  id v17[3];
  ValueMetadata *v18;
  unint64_t v19;
  _BYTE v20[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v18 = (ValueMetadata *)sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v17[0] = a1;
    v6 = a1;
    sub_10053038C();
    sub_1004CB800((uint64_t)v17, &qword_1013E0230);
    v7 = objc_msgSend(v5, "traitCollection", v17[0]);
    v8 = objc_msgSend(v7, "crl_isCompactWidth");

    if (v8)
    {
      v9 = *(void **)(*(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
      v18 = &type metadata for CRLFeatureFlags;
      v19 = sub_1004DB6DC();
      LOBYTE(v17[0]) = 11;
      v10 = v9;
      v11 = isFeatureEnabled(_:)(v17);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v17);
      if ((v11 & 1) != 0)
      {
        KeyPath = swift_getKeyPath(&unk_100EF7E68);
        v13 = swift_getKeyPath(&unk_100EF7E90);
        static Published.subscript.getter(v17, v10, KeyPath, v13);
        swift_release(KeyPath);
        swift_release(v13);
        if (v17[0])
        {

          if (qword_1013DD7C8 != -1)
            swift_once(&qword_1013DD7C8, sub_100A03AC0);
          swift_beginAccess(&static OS_os_log.crlFollow, v17, 0, 0);
          v14 = (id)static OS_os_log.crlFollow;
          v16 = static os_log_type_t.default.getter(v15);
          sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v16, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

          sub_1006F534C(1);
        }
      }

    }
  }
}

void sub_10053038C()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "endEditing");
  v6 = objc_msgSend(objc_allocWithZone((Class)CRLiOSShapeLibraryViewController), "initWithDelegate:", v0);
  objc_msgSend(v6, "setModalPresentationStyle:", 7);
  v1 = objc_msgSend(v6, "popoverPresentationController");
  if (v1)
  {
    v2 = v1;
    v3 = (void *)sub_100C1CD88();
    objc_msgSend(v2, "setBarButtonItem:", v3);

  }
  v4 = objc_msgSend(v6, "popoverPresentationController");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setCanOverlapSourceViewRect:", 1);

  }
  objc_msgSend(v0, "presentViewController:animated:completion:", v6, 1, 0);

}

objc_class *sub_100530494()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Swift::String_optional v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_class *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  UIImage_optional v33;
  UIAction_optional v34;
  UIMenu_optional v35;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F2F8, v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = v10;
  v14 = v12;
  v15.value._countAndFlagsBits = v6;
  v15.value._object = v8;
  v33.value.super.isa = (Class)v10;
  v33.is_nil = (char)v12;
  v34.value.super.super.isa = 0;
  v16 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v15, v33, v34, v35).super.super.isa;
  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v16, "setAccessibilityLabel:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v24 = v16;
  v25 = objc_msgSend(v1, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v24, "setAccessibilityHint:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v24;
}

double sub_100530864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _BYTE v18[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_100C1CC20();
    v7 = (void *)swift_unknownObjectWeakLoadStrong(v6 + 16);
    if (v7
      && (v8 = v7,
          v9 = (char *)objc_msgSend(v7, "editingCoordinator"),
          v8,
          v9))
    {
      v10 = *(id *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
      swift_release(v6);

      v11 = objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
      v12 = sub_100CF24F0(v11);

      v13 = sub_100C1CC20();
      v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v15 = swift_allocObject(v14, 40, 7);
      *(_OWORD *)(v15 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v15 + 32) = v12;
      v17 = v15;
      specialized Array._endMutation()(v15);
      v16 = v12;
      sub_10054C750(v17, 0, 0);
      swift_release(v13);

      swift_bridgeObjectRelease(v17);
    }
    else
    {

      *(_QWORD *)&result = swift_release(v6).n128_u64[0];
    }
  }
  return result;
}

objc_class *sub_1005309D4()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSString v10;
  id v11;
  id v12;
  id v13;
  Swift::String_optional v14;
  objc_class *v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  objc_class *v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSString v30;
  UIImage_optional v32;
  UIAction_optional v33;
  UIMenu_optional v34;

  sub_100524D9C();
  v1 = v0;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v12 = v11;
  v13 = v1;
  v14.value._countAndFlagsBits = v7;
  v14.value._object = v9;
  v32.value.super.isa = (Class)v11;
  v32.is_nil = 0;
  v33.value.super.super.isa = (Class)v1;
  v15 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v14, v32, v33, v34).super.super.isa;
  v16 = objc_msgSend(v2, "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  v22 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v15, "setAccessibilityLabel:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = v15;
  v24 = objc_msgSend(v2, "mainBundle");
  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v29 = v28;

  v30 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v23, "setAccessibilityHint:", v30, swift_bridgeObjectRelease(v29).n128_f64[0]);

  return v23;
}

void sub_100530D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  _QWORD v21[2];

  v0 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PHPickerConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v21 - v9;
  v11 = sub_1004B804C(&qword_1013E1B38);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v21 - v15;
  v17 = type metadata accessor for PHPickerFilter(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = sub_1004B7878((unint64_t *)&unk_1013E1B40, type metadata accessor for CRLiOSBoardViewController, (uint64_t)&unk_100EF7DEC);
  PHPickerConfiguration.init()();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v0);
  PHPickerConfiguration.preferredAssetRepresentationMode.setter(v3);
  PHPickerConfiguration.selectionLimit.setter(20);
  sub_1004CB7BC((uint64_t)v16, (uint64_t)v14, &qword_1013E1B38);
  PHPickerConfiguration.filter.setter(v14);
  sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v19 = (void *)PHPickerViewController.init(configuration:)(v8);
  v20 = (void *)swift_unknownObjectRetain(v21[1]);
  PHPickerViewController.delegate.setter(v20, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  sub_1004CB800((uint64_t)v16, &qword_1013E1B38);
  objc_msgSend(v20, "presentViewController:animated:completion:", v19, 1, 0);

}

void sub_100530F54(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  id v16[5];
  _BYTE v17[24];
  _BYTE v18[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
  swift_beginAccess(v4, v17, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v4);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (char *)*(id *)(v7 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    v10 = *(id *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    v16[3] = &type metadata for CRLFeatureFlags;
    v16[4] = (id)sub_1004DB6DC();
    LOBYTE(v16[0]) = 11;
    LOBYTE(v8) = isFeatureEnabled(_:)(v16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
    if ((v8 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_100EF7E68);
      v12 = swift_getKeyPath(&unk_100EF7E90);
      static Published.subscript.getter(v16, v10, KeyPath, v12);
      swift_release(KeyPath);
      swift_release(v12);
      if (v16[0])
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v16, 0, 0);
        v13 = (id)static OS_os_log.crlFollow;
        v15 = static os_log_type_t.default.getter(v14);
        sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(1);
      }
    }

  }
}

void sub_100531120()
{
  char *v0;
  void *Strong;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  char *v7;
  __n128 v8;
  _QWORD aBlock[5];
  _QWORD *v10;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cameraPicker]);
  if (Strong)
  {

    sub_100757E04(&_mh_execute_header, (uint64_t)"presentCameraPicker()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2133, "The camera picker is already being presented.", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentCameraPicker()", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2133, (uint64_t)"The camera picker is already being presented.", 45, 2u);
  }
  else
  {
    v2 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v2 + 16, v0);
    v3 = (void *)objc_opt_self(AVCaptureDevice);
    v4 = (_QWORD *)swift_allocObject(&unk_10126B208, 48, 7);
    v4[2] = v0;
    v4[3] = v0;
    v4[4] = sub_10054F438;
    v4[5] = v2;
    aBlock[4] = sub_10054F474;
    v10 = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1006084F4;
    aBlock[3] = &unk_10126B220;
    v5 = _Block_copy(aBlock);
    v6 = v10;
    v7 = v0;
    swift_retain_n(v2, 2);
    objc_msgSend(v3, "crl_checkAuthorizationForMediaType:completion:", AVMediaTypeVideo, v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);
    swift_release_n(v2, 2, v8);
  }
}

void sub_1005312EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t KeyPath;
  uint64_t v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  id v30[5];
  _BYTE v31[24];
  _BYTE v32[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v5 = (char *)&v30[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a2 + 16;
  swift_beginAccess(v6, v32, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "layerHost");
    if (v9)
    {
      v10 = v9;
      if ((objc_msgSend(v9, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v11 = objc_msgSend(v10, "asiOSCVC");
        swift_unknownObjectRelease(v10);
        v12 = objc_msgSend(v11, "miniFormatterPresenter");
        if (v12)
        {
          v13 = v12;
          objc_msgSend(v12, "dismissMiniFormatter");
          swift_unknownObjectRelease(v13);
        }
        v14 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
        v15 = objc_allocWithZone((Class)type metadata accessor for CRLInsertEditURLAlert(0));
        v16 = v8;
        v17 = sub_10054CEB8(0, (uint64_t)v16, (uint64_t)v5, v15);

        v18 = *(void **)&v16[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert];
        *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = v17;
        v19 = v17;

        sub_1007903EC(v16);
      }
      else
      {

        swift_unknownObjectRelease(v10);
      }
    }
    else
    {

    }
  }
  swift_beginAccess(v6, v31, 0, 0);
  v20 = swift_unknownObjectWeakLoadStrong(v6);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = (char *)*(id *)(v20 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    v23 = *(id *)&v22[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    v30[3] = &type metadata for CRLFeatureFlags;
    v30[4] = (id)sub_1004DB6DC();
    LOBYTE(v30[0]) = 11;
    LOBYTE(v21) = isFeatureEnabled(_:)(v30);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
    if ((v21 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_100EF7E68);
      v25 = swift_getKeyPath(&unk_100EF7E90);
      static Published.subscript.getter(v30, v23, KeyPath, v25);
      swift_release(KeyPath);
      swift_release(v25);
      if (v30[0])
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v30, 0, 0);
        v26 = (id)static OS_os_log.crlFollow;
        v28 = static os_log_type_t.default.getter(v27);
        sub_100A06EBC((uint64_t)v26, &_mh_execute_header, v28, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(1);
      }
    }

  }
}

void sub_10053162C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  void *v11;
  id v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  id v18[5];
  char v19[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = objc_msgSend((id)objc_opt_self(CRLBoardItemImporter), "supportedFileUTTypes");
    v6 = type metadata accessor for UTType(0);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    v8 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v8, "initForOpeningContentTypes:asCopy:", isa, 1, swift_bridgeObjectRelease(v7).n128_f64[0]);

    objc_msgSend(v10, "setDelegate:", v4);
    objc_msgSend(v10, "setAllowsMultipleSelection:", 1);
    objc_msgSend(v4, "presentViewController:animated:completion:", v10, 1, 0);
    v11 = *(void **)(*(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    v18[3] = &type metadata for CRLFeatureFlags;
    v18[4] = (id)sub_1004DB6DC();
    LOBYTE(v18[0]) = 11;
    v12 = v11;
    LOBYTE(v7) = isFeatureEnabled(_:)(v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v18);
    if ((v7 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_100EF7E68);
      v14 = swift_getKeyPath(&unk_100EF7E90);
      static Published.subscript.getter(v18, v12, KeyPath, v14);
      swift_release(KeyPath);
      swift_release(v14);
      if (v18[0])
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v18, 0, 0);
        v15 = (id)static OS_os_log.crlFollow;
        v17 = static os_log_type_t.default.getter(v16);
        sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(1);
      }
    }

  }
}

void sub_100531898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  uint64_t KeyPath;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  char v20[24];
  id aBlock[3];
  ValueMetadata *v22;
  unint64_t v23;
  uint64_t v24;
  char v25[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_documentScanner);
    if (v5)
    {

      sub_100757E04(&_mh_execute_header, (uint64_t)"presentDocumentScanner()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2197, "Already presenting document scanner", 35, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentDocumentScanner()", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2197, (uint64_t)"Already presenting document scanner", 35, 2u);
    }
    else
    {
      v6 = (void *)objc_opt_self(AVCaptureDevice);
      v7 = swift_allocObject(&unk_10126B140, 24, 7);
      *(_QWORD *)(v7 + 16) = v4;
      v23 = (unint64_t)sub_10054F3E0;
      v24 = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(id *)"";
      aBlock[2] = sub_1006084F4;
      v22 = (ValueMetadata *)&unk_10126B158;
      v8 = _Block_copy(aBlock);
      v9 = v24;
      v10 = v4;
      objc_msgSend(v6, "crl_checkAuthorizationForMediaType:completion:", AVMediaTypeVideo, v8, swift_release(v9).n128_f64[0]);
      _Block_release(v8);
    }

  }
  swift_beginAccess(v2, v20, 0, 0);
  v11 = swift_unknownObjectWeakLoadStrong(v2);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = (char *)*(id *)(v11 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    v14 = *(id *)&v13[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    v22 = &type metadata for CRLFeatureFlags;
    v23 = sub_1004DB6DC();
    LOBYTE(aBlock[0]) = 11;
    LOBYTE(v12) = isFeatureEnabled(_:)(aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
    if ((v12 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_100EF7E68);
      v16 = swift_getKeyPath(&unk_100EF7E90);
      static Published.subscript.getter(aBlock, v14, KeyPath, v16);
      swift_release(KeyPath);
      swift_release(v16);
      if (aBlock[0])
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, aBlock, 0, 0);
        v17 = (id)static OS_os_log.crlFollow;
        v19 = static os_log_type_t.default.getter(v18);
        sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v19, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(1);
      }
    }

  }
}

uint64_t sub_100531BBC(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  id v6;
  _QWORD v7[4];
  _BYTE v8[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v7[3] = sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v7[0] = a1;
    v6 = a1;
    sub_100531C44();

    return sub_1004CB800((uint64_t)v7, &qword_1013E0230);
  }
  return result;
}

void sub_100531C44()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  id v14;
  char v15;
  uint64_t KeyPath;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  char v25[24];
  id aBlock[3];
  ValueMetadata *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  _QWORD v31[4];
  char v32;

  v1 = v0;
  v2 = sub_100C1CAE8();
  objc_msgSend(v2, "resetToDefaultModeAnimated:", 1);

  v3 = objc_msgSend(objc_allocWithZone((Class)_UIStickerPickerViewController), "init");
  objc_msgSend(v3, "setDelegate:", v1);
  v4 = objc_msgSend(v1, "navigationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "navigationBar");

    if (v6)
    {
      v7 = (void *)sub_100C1CD60();
      v8 = sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      UIPopoverPresentationControllerSourceItem.frame(in:)(v30, v6, v8);

      sub_1004C4938((uint64_t)v30, (uint64_t)v31, &qword_1013E1B30);
      if ((v32 & 1) == 0)
      {
        v9 = *(double *)v31;
        v10 = *(double *)&v31[1];
        v11 = *(double *)&v31[2];
        v12 = *(double *)&v31[3];
        objc_msgSend(v3, "setSourceView:", v6);
        objc_msgSend(v3, "setSourceRect:", v9, v10, v11, v12);
      }

    }
  }
  v13 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v27 = &type metadata for CRLFeatureFlags;
  v28 = sub_1004DB6DC();
  LOBYTE(aBlock[0]) = 11;
  v14 = v13;
  v15 = isFeatureEnabled(_:)(aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(aBlock);
  if ((v15 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100EF7E68);
    v17 = swift_getKeyPath(&unk_100EF7E90);
    static Published.subscript.getter(aBlock, v14, KeyPath, v17);
    swift_release(KeyPath);
    swift_release(v17);
    if (aBlock[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v25, 0, 0);
      v18 = (id)static OS_os_log.crlFollow;
      v20 = static os_log_type_t.default.getter(v19);
      sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(1);
    }
  }

  v21 = swift_allocObject(&unk_10126B1B8, 24, 7);
  *(_QWORD *)(v21 + 16) = v3;
  v28 = (unint64_t)sub_10054F3E8;
  v29 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_1005D2FC0;
  v27 = (ValueMetadata *)&unk_10126B1D0;
  v22 = _Block_copy(aBlock);
  v23 = v29;
  v24 = v3;
  objc_msgSend(v1, "presentViewController:animated:completion:", v24, 0, v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

void sub_100531F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  id v14[5];
  _BYTE v15[24];
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController), "insertStencilFromLibrary:", 0);

  }
  swift_beginAccess(v2, v15, 0, 0);
  v5 = swift_unknownObjectWeakLoadStrong(v2);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (char *)*(id *)(v5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);

    v8 = *(id *)&v7[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];
    v14[3] = &type metadata for CRLFeatureFlags;
    v14[4] = (id)sub_1004DB6DC();
    LOBYTE(v14[0]) = 11;
    LOBYTE(v6) = isFeatureEnabled(_:)(v14);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
    if ((v6 & 1) != 0)
    {
      KeyPath = swift_getKeyPath(&unk_100EF7E68);
      v10 = swift_getKeyPath(&unk_100EF7E90);
      static Published.subscript.getter(v14, v8, KeyPath, v10);
      swift_release(KeyPath);
      swift_release(v10);
      if (v14[0])
      {

        if (qword_1013DD7C8 != -1)
          swift_once(&qword_1013DD7C8, sub_100A03AC0);
        swift_beginAccess(&static OS_os_log.crlFollow, v14, 0, 0);
        v11 = (id)static OS_os_log.crlFollow;
        v13 = static os_log_type_t.default.getter(v12);
        sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v13, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        sub_1006F534C(1);
      }
    }

  }
}

double sub_100532158(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  id v9;
  __n128 v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v6 = a3 + 16;
  swift_beginAccess(a3 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);

    objc_msgSend(v9, "endEditing");
  }
  if ((unint64_t)a4 >> 62)
  {
    if (a4 < 0)
      v12 = a4;
    else
      v12 = a4 & 0xFFFFFFFFFFFFFF8;
    v13 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
    swift_bridgeObjectRetain(a4);
    v14 = _bridgeCocoaArray<A>(_:)(v12, v13);
    swift_bridgeObjectRelease(a4);
    a4 = v14;
  }
  else
  {
    v10 = swift_bridgeObjectRetain(a4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
    sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
  }
  a1(a4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  return result;
}

objc_class *sub_100532280()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Swift::String_optional v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_class *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  UIImage_optional v33;
  UIAction_optional v34;
  UIMenu_optional v35;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F2C8, v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = v10;
  v14 = v12;
  v15.value._countAndFlagsBits = v6;
  v15.value._object = v8;
  v33.value.super.isa = (Class)v10;
  v33.is_nil = (char)v12;
  v34.value.super.super.isa = 0;
  v16 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v15, v33, v34, v35).super.super.isa;
  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v16, "setAccessibilityLabel:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v24 = v16;
  v25 = objc_msgSend(v1, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v24, "setAccessibilityHint:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v24;
}

void sub_100532660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController), "insertStencilFromLibrary:", 0);

  }
}

objc_class *sub_1005326C8()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Swift::String_optional v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_class *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  UIImage_optional v33;
  UIAction_optional v34;
  UIMenu_optional v35;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F250, v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = v10;
  v14 = v12;
  v15.value._countAndFlagsBits = v6;
  v15.value._object = v8;
  v33.value.super.isa = (Class)v10;
  v33.is_nil = (char)v12;
  v34.value.super.super.isa = 0;
  v16 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v15, v33, v34, v35).super.super.isa;
  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v16, "setAccessibilityLabel:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v24 = v16;
  v25 = objc_msgSend(v1, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v24, "setAccessibilityHint:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v24;
}

void sub_100532A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  void *v16;
  id v17;
  char v18;
  uint64_t KeyPath;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  id v24[5];
  _BYTE v25[24];

  v3 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    v9 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16, v7);
    type metadata accessor for MainActor(0);
    swift_retain(v9);
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_10126B0C8, 40, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v9;
    swift_release(v9);
    v13 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1B10, (uint64_t)v12, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
    v14 = objc_msgSend(v7, "traitCollection", swift_release(v13).n128_f64[0]);
    v15 = objc_msgSend(v14, "crl_isCompactWidth");

    if (v15)
    {
      v16 = *(void **)(*(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
      v24[3] = &type metadata for CRLFeatureFlags;
      v24[4] = (id)sub_1004DB6DC();
      LOBYTE(v24[0]) = 11;
      v17 = v16;
      v18 = isFeatureEnabled(_:)(v24);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v24);
      if ((v18 & 1) != 0)
      {
        KeyPath = swift_getKeyPath(&unk_100EF7E68);
        v20 = swift_getKeyPath(&unk_100EF7E90);
        static Published.subscript.getter(v24, v17, KeyPath, v20);
        swift_release(KeyPath);
        swift_release(v20);
        if (v24[0])
        {

          if (qword_1013DD7C8 != -1)
            swift_once(&qword_1013DD7C8, sub_100A03AC0);
          swift_beginAccess(&static OS_os_log.crlFollow, v24, 0, 0);
          v21 = (id)static OS_os_log.crlFollow;
          v23 = static os_log_type_t.default.getter(v22);
          sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v23, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

          sub_1006F534C(1);
        }
      }

    }
  }
}

objc_class *sub_100532D4C()
{
  void *v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  Swift::String v13;
  Class isa;
  id v15;
  objc_class *v16;
  Swift::String_optional v17;
  objc_class *v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  objc_class *v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  UIMenuElementSize preferredElementSize;
  id children;
  UIImage_optional v37;
  UIImage_optional v38;
  UIAction_optional v39;
  UIMenu_optional v40;

  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v8);

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v10);

  if (v11)
  {
    v12 = objc_msgSend(v11, "imageWithSymbolConfiguration:", v9);

  }
  else
  {
    v12 = 0;
  }
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  preferredElementSize = sub_10052C750();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v38.value.super.isa = 0;
  v38.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v38, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)v9).super.super.isa;
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v15 = v12;
  v16 = isa;
  v17.value._countAndFlagsBits = v5;
  v17.value._object = v7;
  v37.value.super.isa = (Class)v12;
  v37.is_nil = 0;
  v39.value.super.super.isa = isa;
  v18 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v17, v37, v39, v40).super.super.isa;
  v19 = objc_msgSend(v0, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v24 = v23;

  v25 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v18, "setAccessibilityLabel:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v26 = v18;
  v27 = objc_msgSend(v0, "mainBundle");
  v28 = String._bridgeToObjectiveC()();
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v27, "localizedStringForKey:value:table:", v28, v29, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v32 = v31;

  v33 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v26, "setAccessibilityHint:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  return v26;
}

objc_class *sub_10053317C()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Swift::String_optional v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  objc_class *v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  UIImage_optional v33;
  UIAction_optional v34;
  UIMenu_optional v35;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F230, v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = v10;
  v14 = v12;
  v15.value._countAndFlagsBits = v6;
  v15.value._object = v8;
  v33.value.super.isa = (Class)v10;
  v33.is_nil = (char)v12;
  v34.value.super.super.isa = 0;
  v16 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v15, v33, v34, v35).super.super.isa;
  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v16, "setAccessibilityLabel:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v24 = v16;
  v25 = objc_msgSend(v1, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = String._bridgeToObjectiveC()();
  v28 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, v27, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v30 = v29;

  v31 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityHint:](v24, "setAccessibilityHint:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

  return v24;
}

void sub_100533538(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  void *Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(Strong, *a3, a1);

  }
}

objc_class *sub_1005335A0()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  Swift::String_optional v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  UIImage_optional v25;
  UIAction_optional v26;
  UIMenu_optional v27;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v11 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16, v0);
  v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10054F2D0, v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
  v13 = v10;
  v14 = v12;
  v15.value._countAndFlagsBits = v6;
  v15.value._object = v8;
  v25.value.super.isa = (Class)v10;
  v25.is_nil = (char)v12;
  v26.value.super.super.isa = 0;
  v16 = UIBarButtonItem.init(title:image:primaryAction:menu:)(v15, v25, v26, v27).super.super.isa;
  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityLabel:](v16, "setAccessibilityLabel:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  return v16;
}

void sub_100533870()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = sub_100C1CAE8();
  v2 = objc_msgSend(v1, "mode");

  v3 = objc_msgSend(v2, "pencilModeType");
  if (v3)
  {
    v4 = sub_100C1CAE8();
    objc_msgSend(v4, "resetToDefaultModeAnimated:", 1);

  }
  else
  {
    sub_100C1B8B8();
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "collapseAllExpandedCollaboratorHUDs");
  }
}

void sub_100533924()
{
  void *v0;
  id v1;
  unsigned int v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = sub_100C1CD38();
  v2 = objc_msgSend(v1, "isEnabled");

  if (v2)
  {
    v3 = objc_msgSend(v0, "undoManager");
    if (v3)
    {
      v6 = v3;
      if (objc_msgSend(v3, "canUndo"))
      {
        objc_msgSend(v6, "undo");
      }
      else if (objc_msgSend(v6, "canRedo"))
      {
        if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) == 0)
        {
          v4 = objc_msgSend(v0, "traitCollection");
          v5 = objc_msgSend(v4, "horizontalSizeClass");

          if (v5 != (id)1)
            sub_100533ACC();
        }
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"didTapUndoButton(sender:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1527, "Undo button was enabled and tapped, but neither canUndo nor canRedo were true", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didTapUndoButton(sender:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 1527, (uint64_t)"Undo button was enabled and tapped, but neither canUndo nor canRedo were true", 77, 2u);
      }

    }
  }
}

void sub_100533ACC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void **v5;
  Class isa;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController])
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1938, "Already showing undo menu", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentUndoMenu()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 1938, (uint64_t)"Already showing undo menu", 25, 2u);
  }
  else
  {
    v2 = _s34TextEditingAllowingAlertControllerCMa();
    v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2, v3), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    v5 = sub_10053C054();
    sub_1004B8930(0, &qword_1013F1B20, UIAlertAction_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "crl_setActions:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    v12 = objc_msgSend(v4, "popoverPresentationController");
    if (v12)
    {
      v7 = v12;
      v8 = sub_100C1CD38();
      objc_msgSend(v7, "setBarButtonItem:", v8);

    }
    v9 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    objc_msgSend(v9, "setApplicationSupportsShakeToEdit:", 0);

    v10 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v11 = v4;

    objc_msgSend(v0, "presentViewController:animated:completion:", v11, 1, 0);
  }
}

void sub_100533D00(uint64_t a1)
{
  void *v1;
  id v3;
  unsigned int v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _BYTE v10[32];

  v3 = sub_100C1CD38();
  v4 = objc_msgSend(v3, "isEnabled");

  if (v4)
  {
    sub_1004CB6E8(a1, (uint64_t)v10);
    v5 = sub_1004B8930(0, (unint64_t *)&unk_1013E1D40, UIGestureRecognizer_ptr);
    if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
    {
      v6 = v9;
      if (objc_msgSend(v9, "state") == (id)1)
      {
        if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) == 0)
        {
          v7 = objc_msgSend(v1, "traitCollection");
          v8 = objc_msgSend(v7, "horizontalSizeClass");

          if (v8 != (id)1)
            sub_100533ACC();
        }
        objc_msgSend(v6, "setState:", 4);
      }

    }
  }
}

void sub_100533E80(void *a1)
{
  UIAccessibilityNotifications v1;
  id v2;

  v1 = UIAccessibilityLayoutChangedNotification;
  v2 = objc_msgSend(a1, "view");
  UIAccessibilityPostNotification(v1, v2);

}

void sub_100533ED4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v22[24];

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate]);
  if (Strong)
  {
    v5 = Strong;
    v6 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    v7 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v7 && (objc_msgSend(v7, "isUserInteractionEnabled") & 1) != 0)
    {
      v8 = *(void **)(v5 + v6);
      if (!v8
        || (v9 = objc_msgSend(v8, "rootViewController")) == 0
        || (v10 = v9,
            v11 = objc_msgSend(v9, "crl_windowWrapper"),
            v10,
            !v11)
        || (v12 = objc_msgSend(v11, "newWrapperBeginningIgnoringUserInteractionSafely"), v11, !v12))
      {
        if (qword_1013DD6C8 != -1)
          swift_once(&qword_1013DD6C8, sub_100A00D28);
        swift_beginAccess(&static OS_os_log.crlError, v22, 0, 0);
        v13 = (id)static OS_os_log.crlError;
        v14 = static os_log_type_t.error.getter(v13);
        sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v14, "Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        v12 = 0;
      }
      v15 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v3, 1, 1, v15);
      type metadata accessor for MainActor(0);
      v16 = v12;
      swift_unknownObjectRetain(v5);
      v17 = v0;
      v18 = static MainActor.shared.getter(v17);
      v19 = (_QWORD *)swift_allocObject(&unk_10126B618, 56, 7);
      v19[2] = v18;
      v19[3] = &protocol witness table for MainActor;
      v19[4] = v5;
      v19[5] = v17;
      v19[6] = v12;
      v20 = sub_100521BF0((uint64_t)v3, (uint64_t)&unk_1013E1D38, (uint64_t)v19, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
      swift_unknownObjectRelease(v5);
      swift_release(v20);

    }
    else
    {
      swift_unknownObjectRelease(v5);
    }
  }
}

void sub_1005341C0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE v20[16];
  char *v21;

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = v1;
  sub_10054BCC0(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, __n128))sub_10054FD50);
  if (!v2)
  {
    v8 = v7;
    v9 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
    v10 = objc_allocWithZone((Class)CRLMultipleItemImporter);
    type metadata accessor for CRLPreinsertionAssetWrapper(0);
    v11 = v9;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v10, "initWithDataWrappers:boardItemFactory:importAnimatedGIFsAsImages:", isa, v11, 0, swift_bridgeObjectRelease(v8).n128_f64[0]);

    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    type metadata accessor for MainActor(0);
    v15 = v1;
    v16 = v13;
    v17 = static MainActor.shared.getter(v16);
    v18 = (_QWORD *)swift_allocObject(&unk_10126B578, 48, 7);
    v18[2] = v17;
    v18[3] = &protocol witness table for MainActor;
    v18[4] = v15;
    v18[5] = v16;
    v19 = sub_100521BF0((uint64_t)v6, (uint64_t)&unk_1013E1D00, (uint64_t)v18, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
    swift_release(v19);

  }
}

id sub_100534390(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  void *v9;
  id v10;
  id v11;

  v9 = *(void **)(*(_QWORD *)(*(_QWORD *)(a5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory)
                + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  v10 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper(0));
  v11 = v9;
  sub_1004BE310(a1, a2);
  swift_bridgeObjectRetain(a4);
  return sub_1009BAF98(a1, a2, a3, a4, (uint64_t)v11);
}

uint64_t sub_10053444C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[5] = v7;
  v5[6] = v8;
  return swift_task_switch(sub_1005344B8, v7, v8);
}

uint64_t sub_1005344B8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v0[7] = sub_100C1CC20();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1013E1918 + dword_1013E1918);
  v1 = (_QWORD *)swift_task_alloc(unk_1013E191C);
  v0[8] = v1;
  *v1 = v0;
  v1[1] = sub_100534528;
  return v3(v0[3]);
}

uint64_t sub_100534528()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_release(v2);
  return swift_task_switch(sub_10053457C, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_10053457C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005345AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[21] = a1;
  v2[22] = v1;
  v3 = sub_1004B804C(&qword_1013E01F0);
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v2[24] = v4;
  v2[25] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v2[26] = v5;
  v2[27] = v6;
  return swift_task_switch(sub_100534640, v5, v6);
}

uint64_t sub_100534640()
{
  _QWORD *v0;
  uint64_t v1;
  unsigned int v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = v0[22];
  v2 = objc_msgSend((id)v0[21], "usesProgressDialog");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong
    && (v4 = Strong, v5 = objc_msgSend(Strong, "layerHost"), v4, v5))
  {
    if (v2)
    {
      v6 = (void *)v0[21];
      v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v8 = String._bridgeToObjectiveC()();
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v12 = v11;

      v13 = String._bridgeToObjectiveC()();
      v14 = objc_msgSend(v6, "progress", swift_bridgeObjectRelease(v12).n128_f64[0]);
      v15 = swift_allocObject(&unk_10126A688, 24, 7);
      *(_QWORD *)(v15 + 16) = v6;
      v0[14] = sub_10054B334;
      v0[15] = v15;
      v0[10] = _NSConcreteStackBlock;
      v0[11] = *(_QWORD *)"";
      v0[12] = sub_1005D2FC0;
      v0[13] = &unk_10126A6A0;
      v16 = _Block_copy(v0 + 10);
      v17 = v0[15];
      v18 = v6;
      v19 = objc_msgSend(v5, "beginModalOperationWithPresentedLocalizedMessage:progress:cancelHandler:", v13, v14, v16, swift_release(v17).n128_f64[0]);
      _Block_release(v16);

    }
    else
    {
      v19 = 0;
    }
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v19 = 0;
  }
  v20 = v0 + 2;
  v0[28] = v19;
  v21 = (void *)v0[21];
  v0[2] = v0;
  v0[3] = sub_1005348D4;
  v22 = swift_continuation_init(v0 + 2, 0);
  v0[16] = _NSConcreteStackBlock;
  v23 = v0 + 16;
  v23[1] = 0x40000000;
  v23[2] = sub_1005495C4;
  v23[3] = &unk_10126A638;
  v23[4] = v22;
  objc_msgSend(v21, "importBoardItemsWithCompletionHandler:", v23);
  return swift_continuation_await(v20);
}

uint64_t sub_1005348D4()
{
  uint64_t v0;

  return swift_task_switch(sub_100534918, *(_QWORD *)(*(_QWORD *)v0 + 208), *(_QWORD *)(*(_QWORD *)v0 + 216));
}

uint64_t sub_100534918()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 176) + 16);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "layerHost");

    if (v3)
    {
      if (*(_QWORD *)(v0 + 224))
        objc_msgSend(v3, "endModalOperationWithToken:");
      swift_unknownObjectRelease(v3);
    }
  }
  if (objc_msgSend(*(id *)(v0 + 168), "isCancelled"))
  {
    swift_release(*(_QWORD *)(v0 + 200));
    v4 = *(_QWORD *)(v0 + 184);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 184);
    v8 = *(void **)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 176);
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    v10 = v8;
    swift_retain(v7);
    v12 = static MainActor.shared.getter(v11);
    v13 = (_QWORD *)swift_allocObject(&unk_10126A660, 48, 7);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v10;
    v13[5] = v7;
    *(_QWORD *)(v0 + 232) = sub_100521BF0(v6, (uint64_t)&unk_1013E1928, (uint64_t)v13, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
    v14 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
    *(_QWORD *)(v0 + 240) = v14;
    *v14 = v0;
    v14[1] = sub_100534AB0;
    return Task<>.value.getter();
  }
}

uint64_t sub_100534AB0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 240));
  return swift_task_switch(sub_100534AFC, *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 216));
}

uint64_t sub_100534AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 232));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 184);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100534B4C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  double v18;
  id v19;
  ValueMetadata *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t (*v25)(char *, uint64_t);
  int v26;
  int v27;
  void (*v28)(char *, uint64_t);
  unint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v54;
  BOOL v55;
  __int128 v56;
  ValueMetadata *v57;
  unint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;

  v1 = v0;
  v2 = type metadata accessor for Tips.Status(0);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v52 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v52 - v10;
  *(_QWORD *)&v13 = __chkstk_darwin(v12).n128_u64[0];
  v15 = (char *)&v52 - v14;
  v52 = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  v16 = objc_msgSend(v52, "infosForCurrentSelectionPath", v13);
  v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v53 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)&v18 = swift_bridgeObjectRelease().n128_u64[0];
  v54 = v1;
  v19 = objc_msgSend(v1, "traitCollection", v18);
  LODWORD(v17) = objc_msgSend(v19, "crl_isCompactWidth");

  if ((_DWORD)v17)
  {
    v20 = &type metadata for CRLTipConnectionLinesEntryPointCompact;
    v21 = sub_10054F53C();
  }
  else
  {
    v20 = &type metadata for CRLTipConnectionLinesEntryPointFull;
    v21 = sub_10054F4B4();
  }
  v57 = v20;
  v58 = v21;
  sub_1004DB728(&v56, (uint64_t)v59);
  v22 = v60;
  v23 = v61;
  sub_1004BB5A4(v59, v60);
  Tip.status.getter(v22, v23);
  v24 = (void (*)(char *, char *, uint64_t))v3[2];
  v24(v11, v15, v2);
  v25 = (uint64_t (*)(char *, uint64_t))v3[11];
  v26 = v25(v11, v2);
  v27 = enum case for Tips.Status.invalidated(_:);
  v28 = (void (*)(char *, uint64_t))v3[1];
  v28(v11, v2);
  v28(v15, v2);
  if (v26 == v27)
  {
    v29 = sub_10054F4F8();
    Tip.status.getter(&type metadata for CRLTipConnectionLinesOnSelection, v29);
    v24(v5, v8, v2);
    v30 = v25(v5, v2);
    v28(v5, v2);
    v28(v8, v2);
    if (v30 != v26)
    {
      v31 = v53;
      if (qword_1013DD288 != -1)
        swift_once(&qword_1013DD288, sub_100859194);
      v32 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v33 = sub_1004F2A1C(v32, (uint64_t)qword_10147F8D8);
      v55 = 1;
      swift_beginAccess(v33, &v56, 33, 0);
      Tips.Parameter.wrappedValue.setter(&v55, v32);
      swift_endAccess(&v56);
      if (qword_1013DD290 != -1)
        swift_once(&qword_1013DD290, sub_1008591B8);
      v34 = sub_1004F2A1C(v32, (uint64_t)qword_10147F8F0);
      v55 = v31 != 0;
      swift_beginAccess(v34, &v56, 33, 0);
      Tips.Parameter.wrappedValue.setter(&v55, v32);
      swift_endAccess(&v56);
    }
LABEL_29:
    sub_100535114();
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v59);
  }
  if (qword_1013DD3A8 != -1)
    swift_once(&qword_1013DD3A8, sub_1008B74C0);
  v35 = v53;
  v36 = v53 != 0;
  v37 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v38 = sub_1004F2A1C(v37, (uint64_t)qword_10147FC48);
  v55 = v36;
  swift_beginAccess(v38, &v56, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v55, v37);
  swift_endAccess(&v56);
  if (qword_1013DDEB0 != -1)
    swift_once(&qword_1013DDEB0, sub_100D2C988);
  v39 = sub_1004F2A1C(v37, (uint64_t)qword_1014813A8);
  v55 = v36;
  swift_beginAccess(v39, &v56, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v55, v37);
  swift_endAccess(&v56);
  if (!v35)
    goto LABEL_29;
  v40 = (char *)objc_msgSend(v52, "board");
  if (v40)
  {
    v41 = v40;
    v42 = *(char **)&v40[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
    v43 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    v44 = *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    v45 = v42;
    if (!v44)
    {
      sub_100740DA4();
      v44 = *(_QWORD *)&v42[v43];
    }
    if (v44)
      v46 = v44;
    else
      v46 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v44);

    if ((unint64_t)v46 >> 62)
    {
      if (v46 < 0)
        v51 = v46;
      else
        v51 = v46 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v46);
      v47 = _CocoaArrayWrapper.endIndex.getter(v51);
      swift_bridgeObjectRelease();
    }
    else
    {
      v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (qword_1013DD3C0 != -1)
      swift_once(&qword_1013DD3C0, sub_1008B7534);
    v48 = sub_1004F2A1C(v37, (uint64_t)qword_10147FC90);
    v55 = v47 > 1;
    swift_beginAccess(v48, &v56, 33, 0);
    Tips.Parameter.wrappedValue.setter(&v55, v37);
    swift_endAccess(&v56);
    if (qword_1013DDEC8 != -1)
      swift_once(&qword_1013DDEC8, sub_100D2C9FC);
    v49 = sub_1004F2A1C(v37, (uint64_t)qword_1014813F0);
    v55 = v47 > 1;
    swift_beginAccess(v49, &v56, 33, 0);
    Tips.Parameter.wrappedValue.setter(&v55, v37);
    swift_endAccess(&v56);

    goto LABEL_29;
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v59);
}

uint64_t sub_100535114()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[31];
  BOOL v13;

  v1 = *(char **)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v2 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v4 = v1;
  if (!v3)
  {
    sub_100740DA4();
    v3 = *(_QWORD *)&v1[v2];
  }
  if (v3)
    v5 = v3;
  else
    v5 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v3);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v11 = v5;
    else
      v11 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (qword_1013DCD10 != -1)
    swift_once(&qword_1013DCD10, sub_10069C574);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v8 = sub_1004F2A1C(v7, (uint64_t)qword_10147EF68);
  v13 = v6 > 0;
  swift_beginAccess(v8, v12, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v13, v7);
  swift_endAccess(v12);
  if (qword_1013DD658 != -1)
    swift_once(&qword_1013DD658, sub_1009E16EC);
  v9 = sub_1004F2A1C(v7, (uint64_t)qword_101480228);
  v13 = v6 > 0;
  swift_beginAccess(v9, v12, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v13, v7);
  return swift_endAccess(v12);
}

double sub_1005352C8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD **v31;
  uint64_t (*v32)(_QWORD);
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD **v40;
  uint64_t (*v41)(_QWORD);
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD **v47;
  uint64_t (*v48)(_QWORD);
  _QWORD *v49;
  _QWORD *v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD **v65;
  uint64_t (*v66)(_QWORD);
  _QWORD *v67;
  _QWORD *v68;
  char v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD **v72;
  uint64_t (*v73)(_QWORD);
  _QWORD *v74;
  _QWORD *v75;
  char v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD **v84;
  uint64_t (*v85)(_QWORD);
  _QWORD *v86;
  _QWORD *v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD **v102;
  uint64_t (*v103)(_QWORD);
  _QWORD *v104;
  _QWORD *v105;
  char v106;
  unint64_t v107;
  unint64_t v108;
  _QWORD **v109;
  uint64_t (*v110)(_QWORD);
  _QWORD *v111;
  _QWORD *v112;
  char v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119[32];
  _QWORD v120[3];
  ValueMetadata *v121;
  unint64_t v122;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = &type metadata for CRLFeatureFlags;
  v10 = sub_1004DB6DC();
  v122 = v10;
  LOBYTE(v120[0]) = 0;
  v11 = isFeatureEnabled(_:)(v120);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v120);
  if ((v11 & 1) != 0)
  {
    v13 = sub_1004B804C(&qword_1013E1B78);
    v14 = *(_QWORD *)(type metadata accessor for Tips.ConfigurationOption(0) - 8);
    v15 = swift_allocObject(v13, ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72), *(unsigned __int8 *)(v14 + 80) | 7);
    *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
    static Tips.ConfigurationOption.DisplayFrequency.daily.getter();
    static Tips.ConfigurationOption.displayFrequency(_:)(v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    static Tips.configure(_:)(v15);
    swift_bridgeObjectRelease();
    v16 = &v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation], v119, 1, 0);
    *(_QWORD *)v16 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    if ((sub_100535F1C() & 1) != 0)
    {
      v121 = &type metadata for CRLFeatureFlags;
      v122 = v10;
      LOBYTE(v120[0]) = 7;
      v17 = isFeatureEnabled(_:)(v120);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v120);
      if ((v17 & 1) != 0)
      {
        v118 = v10;
        v18 = type metadata accessor for TaskPriority(0);
        v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
        v19(v5, 1, 1, v18);
        type metadata accessor for MainActor(0);
        v20 = v1;
        v21 = static MainActor.shared.getter(v20);
        v22 = (_QWORD *)swift_allocObject(&unk_10126B320, 40, 7);
        v22[2] = v21;
        v22[3] = &protocol witness table for MainActor;
        v22[4] = v20;
        v23 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1BD8, (uint64_t)v22, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v19(v5, 1, 1, v18);
        v24 = v20;
        v25 = static MainActor.shared.getter(v24);
        v26 = (_QWORD *)swift_allocObject(&unk_10126B348, 40, 7);
        v26[2] = v25;
        v26[3] = &protocol witness table for MainActor;
        v26[4] = v24;
        v117 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1BE8, (uint64_t)v26, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v19(v5, 1, 1, v18);
        v27 = v24;
        v28 = static MainActor.shared.getter(v27);
        v29 = (_QWORD *)swift_allocObject(&unk_10126B370, 40, 7);
        v29[2] = v28;
        v29[3] = &protocol witness table for MainActor;
        v29[4] = v27;
        v30 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1BF8, (uint64_t)v29, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v32 = sub_100C1D4E4((uint64_t)v120);
        v33 = *v31;
        v34 = v23;
        if (*v31)
        {
          v35 = v31;
          swift_retain(v23);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *v35 = v33;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v33 = sub_100D104E8(0, v33[2] + 1, 1, v33);
            *v35 = v33;
          }
          v38 = v33[2];
          v37 = v33[3];
          if (v38 >= v37 >> 1)
          {
            v33 = sub_100D104E8((_QWORD *)(v37 > 1), v38 + 1, 1, v33);
            *v35 = v33;
          }
          v33[2] = v38 + 1;
          v39 = &v33[v38];
          v23 = v34;
          v39[4] = v34;
        }
        ((void (*)(_QWORD *, _QWORD))v32)(v120, 0);
        v41 = sub_100C1D4E4((uint64_t)v120);
        v42 = *v40;
        if (*v40)
        {
          v43 = v40;
          swift_retain(v117);
          v44 = swift_isUniquelyReferenced_nonNull_native();
          *v43 = v42;
          if ((v44 & 1) == 0)
          {
            v42 = sub_100D104E8(0, v42[2] + 1, 1, v42);
            *v43 = v42;
          }
          v46 = v42[2];
          v45 = v42[3];
          if (v46 >= v45 >> 1)
          {
            v42 = sub_100D104E8((_QWORD *)(v45 > 1), v46 + 1, 1, v42);
            *v43 = v42;
          }
          v42[2] = v46 + 1;
          v42[v46 + 4] = v117;
          ((void (*)(_QWORD *, _QWORD))v41)(v120, 0);
          v23 = v34;
        }
        else
        {
          ((void (*)(_QWORD *, _QWORD))v41)(v120, 0);
        }
        v48 = sub_100C1D4E4((uint64_t)v120);
        v49 = *v47;
        v10 = v118;
        if (*v47)
        {
          v50 = v47;
          swift_retain(v30);
          v51 = swift_isUniquelyReferenced_nonNull_native();
          *v50 = v49;
          if ((v51 & 1) == 0)
          {
            v49 = sub_100D104E8(0, v49[2] + 1, 1, v49);
            *v50 = v49;
          }
          v53 = v49[2];
          v52 = v49[3];
          if (v53 >= v52 >> 1)
          {
            v49 = sub_100D104E8((_QWORD *)(v52 > 1), v53 + 1, 1, v49);
            *v50 = v49;
          }
          v49[2] = v53 + 1;
          v49[v53 + 4] = v30;
          ((void (*)(_QWORD *, _QWORD))v48)(v120, 0);
          v10 = v118;
          v23 = v34;
        }
        else
        {
          ((void (*)(_QWORD *, _QWORD))v48)(v120, 0);
        }
        swift_release(v30);
        swift_release(v117);
        swift_release(v23);
      }
    }
    if ((sub_100537E5C() & 1) != 0)
    {
      v121 = &type metadata for CRLFeatureFlags;
      v122 = v10;
      LOBYTE(v120[0]) = 16;
      v54 = isFeatureEnabled(_:)(v120);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v120);
      if ((v54 & 1) != 0)
      {
        v118 = v10;
        v55 = type metadata accessor for TaskPriority(0);
        v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
        v56(v5, 1, 1, v55);
        type metadata accessor for MainActor(0);
        v57 = v1;
        v58 = static MainActor.shared.getter(v57);
        v59 = (_QWORD *)swift_allocObject(&unk_10126B2D0, 40, 7);
        v59[2] = v58;
        v59[3] = &protocol witness table for MainActor;
        v59[4] = v57;
        v60 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1BB8, (uint64_t)v59, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v56(v5, 1, 1, v55);
        v61 = v57;
        v62 = static MainActor.shared.getter(v61);
        v63 = (_QWORD *)swift_allocObject(&unk_10126B2F8, 40, 7);
        v63[2] = v62;
        v63[3] = &protocol witness table for MainActor;
        v63[4] = v61;
        v64 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1BC8, (uint64_t)v63, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v66 = sub_100C1D4E4((uint64_t)v120);
        v67 = *v65;
        if (*v65)
        {
          v68 = v65;
          swift_retain(v60);
          v69 = swift_isUniquelyReferenced_nonNull_native();
          *v68 = v67;
          if ((v69 & 1) == 0)
          {
            v67 = sub_100D104E8(0, v67[2] + 1, 1, v67);
            *v68 = v67;
          }
          v71 = v67[2];
          v70 = v67[3];
          if (v71 >= v70 >> 1)
          {
            v67 = sub_100D104E8((_QWORD *)(v70 > 1), v71 + 1, 1, v67);
            *v68 = v67;
          }
          v67[2] = v71 + 1;
          v67[v71 + 4] = v60;
        }
        ((void (*)(_QWORD *, _QWORD))v66)(v120, 0);
        v73 = sub_100C1D4E4((uint64_t)v120);
        v74 = *v72;
        v10 = v118;
        if (*v72)
        {
          v75 = v72;
          swift_retain(v64);
          v76 = swift_isUniquelyReferenced_nonNull_native();
          *v75 = v74;
          if ((v76 & 1) == 0)
          {
            v74 = sub_100D104E8(0, v74[2] + 1, 1, v74);
            *v75 = v74;
          }
          v78 = v74[2];
          v77 = v74[3];
          if (v78 >= v77 >> 1)
          {
            v74 = sub_100D104E8((_QWORD *)(v77 > 1), v78 + 1, 1, v74);
            *v75 = v74;
          }
          v74[2] = v78 + 1;
          v74[v78 + 4] = v64;
          ((void (*)(_QWORD *, _QWORD))v73)(v120, 0);
          v10 = v118;
        }
        else
        {
          ((void (*)(_QWORD *, _QWORD))v73)(v120, 0);
        }
        swift_release(v64);
        swift_release(v60);
      }
    }
    if ((sub_100539900() & 1) != 0)
    {
      v79 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v5, 1, 1, v79);
      type metadata accessor for MainActor(0);
      v80 = v1;
      v81 = static MainActor.shared.getter(v80);
      v82 = (_QWORD *)swift_allocObject(&unk_10126B2A8, 40, 7);
      v82[2] = v81;
      v82[3] = &protocol witness table for MainActor;
      v82[4] = v80;
      v83 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1BA8, (uint64_t)v82, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
      v85 = sub_100C1D4E4((uint64_t)v120);
      v86 = *v84;
      if (*v84)
      {
        v87 = v84;
        swift_retain(v83);
        v88 = swift_isUniquelyReferenced_nonNull_native();
        *v87 = v86;
        if ((v88 & 1) == 0)
        {
          v86 = sub_100D104E8(0, v86[2] + 1, 1, v86);
          *v87 = v86;
        }
        v90 = v86[2];
        v89 = v86[3];
        if (v90 >= v89 >> 1)
        {
          v86 = sub_100D104E8((_QWORD *)(v89 > 1), v90 + 1, 1, v86);
          *v87 = v86;
        }
        v86[2] = v90 + 1;
        v86[v90 + 4] = v83;
      }
      ((void (*)(_QWORD *, _QWORD))v85)(v120, 0);
      swift_release(v83);
    }
    if ((sub_10053A430() & 1) != 0)
    {
      v121 = &type metadata for CRLFeatureFlags;
      v122 = v10;
      LOBYTE(v120[0]) = 19;
      v91 = isFeatureEnabled(_:)(v120);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v120);
      if ((v91 & 1) != 0)
      {
        v92 = type metadata accessor for TaskPriority(0);
        v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56);
        v93(v5, 1, 1, v92);
        type metadata accessor for MainActor(0);
        v94 = v1;
        v95 = static MainActor.shared.getter(v94);
        v96 = (_QWORD *)swift_allocObject(&unk_10126B258, 40, 7);
        v96[2] = v95;
        v96[3] = &protocol witness table for MainActor;
        v96[4] = v94;
        v97 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1B88, (uint64_t)v96, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v93(v5, 1, 1, v92);
        v98 = v94;
        v99 = static MainActor.shared.getter(v98);
        v100 = (_QWORD *)swift_allocObject(&unk_10126B280, 40, 7);
        v100[2] = v99;
        v100[3] = &protocol witness table for MainActor;
        v100[4] = v98;
        v101 = sub_100521BF0((uint64_t)v5, (uint64_t)&unk_1013E1B98, (uint64_t)v100, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v103 = sub_100C1D4E4((uint64_t)v120);
        v104 = *v102;
        if (*v102)
        {
          v105 = v102;
          swift_retain(v97);
          v106 = swift_isUniquelyReferenced_nonNull_native();
          *v105 = v104;
          if ((v106 & 1) == 0)
          {
            v104 = sub_100D104E8(0, v104[2] + 1, 1, v104);
            *v105 = v104;
          }
          v108 = v104[2];
          v107 = v104[3];
          if (v108 >= v107 >> 1)
          {
            v104 = sub_100D104E8((_QWORD *)(v107 > 1), v108 + 1, 1, v104);
            *v105 = v104;
          }
          v104[2] = v108 + 1;
          v104[v108 + 4] = v97;
        }
        ((void (*)(_QWORD *, _QWORD))v103)(v120, 0);
        v110 = sub_100C1D4E4((uint64_t)v120);
        v111 = *v109;
        if (*v109)
        {
          v112 = v109;
          swift_retain(v101);
          v113 = swift_isUniquelyReferenced_nonNull_native();
          *v112 = v111;
          if ((v113 & 1) == 0)
          {
            v111 = sub_100D104E8(0, v111[2] + 1, 1, v111);
            *v112 = v111;
          }
          v115 = v111[2];
          v114 = v111[3];
          if (v115 >= v114 >> 1)
          {
            v111 = sub_100D104E8((_QWORD *)(v114 > 1), v115 + 1, 1, v111);
            *v112 = v111;
          }
          v111[2] = v115 + 1;
          v111[v115 + 4] = v101;
        }
        ((void (*)(_QWORD *, _QWORD))v110)(v120, 0);
        swift_release(v101);
        *(_QWORD *)&result = swift_release(v97).n128_u64[0];
      }
    }
  }
  return result;
}

uint64_t sub_100535F1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  unint64_t v13;
  char v14;
  uint64_t result;
  char v16;
  unint64_t v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t (*v19)(_BYTE *, uint64_t);
  int v20;
  int v21;
  void (*v22)(_BYTE *, uint64_t);
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[7];
  char v28;
  _QWORD v29[3];
  ValueMetadata *v30;
  unint64_t v31;

  v0 = type metadata accessor for Tips.Status(0);
  v1 = *(_QWORD **)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v27[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v27[-v5];
  __chkstk_darwin(v7);
  v9 = &v27[-v8];
  __chkstk_darwin(v10);
  v12 = &v27[-v11];
  v30 = &type metadata for CRLFeatureFlags;
  v13 = sub_1004DB6DC();
  v31 = v13;
  LOBYTE(v29[0]) = 0;
  v14 = isFeatureEnabled(_:)(v29);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v29);
  result = 0;
  if ((v14 & 1) != 0)
  {
    v30 = &type metadata for CRLFeatureFlags;
    v31 = v13;
    LOBYTE(v29[0]) = 7;
    v16 = isFeatureEnabled(_:)(v29);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v29);
    if ((v16 & 1) != 0)
    {
      v17 = sub_10054F4B4();
      Tip.status.getter(&type metadata for CRLTipConnectionLinesEntryPointFull, v17);
      v18 = (void (*)(_BYTE *, _BYTE *, uint64_t))v1[2];
      v18(v9, v12, v0);
      v19 = (uint64_t (*)(_BYTE *, uint64_t))v1[11];
      v20 = v19(v9, v0);
      v21 = enum case for Tips.Status.invalidated(_:);
      v22 = (void (*)(_BYTE *, uint64_t))v1[1];
      v22(v9, v0);
      v22(v12, v0);
      if (v20 != v21)
      {
        v23 = sub_10054F53C();
        Tip.status.getter(&type metadata for CRLTipConnectionLinesEntryPointCompact, v23);
        v18(v3, v6, v0);
        v24 = v19(v3, v0);
        v22(v3, v0);
        v22(v6, v0);
        if (v24 != v21)
          return 1;
      }
      if (qword_1013DD288 != -1)
        swift_once(&qword_1013DD288, sub_100859194);
      v25 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v26 = sub_1004F2A1C(v25, (uint64_t)qword_10147F8D8);
      v28 = 1;
      swift_beginAccess(v26, v29, 33, 0);
      Tips.Parameter.wrappedValue.setter(&v28, v25);
      swift_endAccess(v29);
    }
    return 0;
  }
  return result;
}

uint64_t sub_10053618C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4[22] = a4;
  v5 = sub_1004B804C(&qword_1013E1C00);
  v4[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.Status(0);
  v4[24] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[25] = v7;
  v4[26] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1C08);
  v4[27] = v8;
  v4[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1C10);
  v4[29] = v9;
  v4[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1C18);
  v4[31] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[32] = v11;
  v4[33] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E1C20);
  v4[34] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[35] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[36] = swift_task_alloc(v14);
  v4[37] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v4[38] = v15;
  v4[39] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v4[40] = v16;
  v4[41] = v17;
  return swift_task_switch(sub_100536300, v16, v17);
}

uint64_t sub_100536300()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[32];
  v1 = v0[33];
  v4 = v0[30];
  v3 = v0[31];
  v5 = v0[27];
  v6 = sub_10054F4B4();
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipConnectionLinesEntryPointFull, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v12 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v0[43] = v12;
  v13 = static MainActor.shared.getter(v11);
  v0[44] = v13;
  if (v13)
  {
    ObjectType = swift_getObjectType(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v17 = v16;
  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v0[45] = v15;
  v0[46] = v17;
  return swift_task_switch(sub_100536458, v15, v17);
}

uint64_t sub_100536458()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[44];
  v0[47] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 12, v0[34]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[48] = v2;
  *v2 = v0;
  v2[1] = sub_100536500;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[23], v1, &protocol witness table for MainActor);
}

uint64_t sub_100536500()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 384));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 360);
    v4 = *(_QWORD *)(v2 + 368);
    v5 = sub_10054FFA0;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 376))(v2 + 96, 0);
    v3 = *(_QWORD *)(v2 + 360);
    v4 = *(_QWORD *)(v2 + 368);
    v5 = sub_100536570;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100536570()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[24];
  v2 = v0[25];
  v3 = v0[23];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[44];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v4);
    return swift_task_switch(sub_100550000, v0[40], v0[41]);
  }
  else
  {
    v7 = v0[36];
    v6 = v0[37];
    v8 = v0[34];
    v9 = v0[35];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[26], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[49] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[50] = v12;
    *v12 = v0;
    v12[1] = sub_1005366B4;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 51, v0[26]);
  }
}

uint64_t sub_1005366B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 392);
  v4 = *(_QWORD *)(*v0 + 200);
  v3 = *(_QWORD *)(*v0 + 208);
  v5 = *(_QWORD *)(*v0 + 192);
  swift_task_dealloc(*(_QWORD *)(*v0 + 400));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 410) = *(_BYTE *)(v1 + 408);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_100536738, *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 368));
}

uint64_t sub_100536738()
{
  _QWORD *v0;

  swift_release(v0[44]);
  return swift_task_switch(sub_100536770, v0[40], v0[41]);
}

uint64_t sub_100536770()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  unsigned int v4;
  id v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v9;
  uint64_t Strong;
  void *v11;
  id v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if ((*(_BYTE *)(v0 + 410) & 1) != 0)
  {
    *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    v1 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 16) = 7;
    *(_QWORD *)(v0 + 48) = v1;
    v2 = isFeatureEnabled(_:)(v0 + 16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
    if ((v2 & 1) != 0)
    {
      v3 = objc_msgSend(*(id *)(v0 + 176), "traitCollection");
      v4 = objc_msgSend(v3, "crl_isCompactWidth");

      if (v4)
      {
        v5 = sub_100C1CDD8();
        sub_100549A98((uint64_t)v5, (uint64_t)sub_100C37EF4, 0);
      }
      else
      {
        v14 = *(void **)(*(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 344));
        if (v14)
        {
          v15 = v14;
          v5 = sub_10085F204();

          sub_100C372B0((uint64_t)v5, 3, (uint64_t)sub_100C37F10, 0);
        }
        else
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v0 + 152, 0, 0);
          v5 = (id)static OS_os_log.crlError;
          v16 = static os_log_type_t.error.getter(v5);
          sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v16, "Unable to present connection lines entry point tip because relative rect not found", 82, 2, (uint64_t)_swiftEmptyArrayStorage);
        }
      }

    }
    if (qword_1013DD288 != -1)
      swift_once(&qword_1013DD288, sub_100859194);
    v17 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
    v18 = sub_1004F2A1C(v17, (uint64_t)qword_10147F8D8);
    *(_BYTE *)(v0 + 409) = 1;
    swift_beginAccess(v18, v0 + 128, 33, 0);
    Tips.Parameter.wrappedValue.setter(v0 + 409, v17);
    v8 = (id)swift_endAccess(v0 + 128);
  }
  else
  {
    *(_QWORD *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    v6 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 88) = v6;
    v7 = isFeatureEnabled(_:)(v0 + 56);
    v8 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 56));
    if ((v7 & 1) != 0)
    {
      v8 = objc_msgSend(*(id *)(v0 + 176), "presentedViewController");
      if (v8)
      {
        v9 = v8;
        Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 336));
        if (Strong)
        {
          v11 = (void *)Strong;
          sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
          v12 = v9;
          v13 = static NSObject.== infix(_:_:)(v12, v11);

          if ((v13 & 1) != 0)
          {
            objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);
            sub_100C38CDC(1);
          }

        }
        else
        {

        }
      }
    }
  }
  v19 = static MainActor.shared.getter(v8);
  *(_QWORD *)(v0 + 352) = v19;
  if (v19)
  {
    ObjectType = swift_getObjectType(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v23 = v22;
  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  *(_QWORD *)(v0 + 360) = v21;
  *(_QWORD *)(v0 + 368) = v23;
  return swift_task_switch(sub_100536458, v21, v23);
}

uint64_t sub_100536AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4[22] = a4;
  v5 = sub_1004B804C(&qword_1013E1C00);
  v4[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.Status(0);
  v4[24] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[25] = v7;
  v4[26] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1C08);
  v4[27] = v8;
  v4[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1C10);
  v4[29] = v9;
  v4[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1C18);
  v4[31] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[32] = v11;
  v4[33] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E1C20);
  v4[34] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[35] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[36] = swift_task_alloc(v14);
  v4[37] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v4[38] = v15;
  v4[39] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v4[40] = v16;
  v4[41] = v17;
  return swift_task_switch(sub_100536C20, v16, v17);
}

uint64_t sub_100536C20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[32];
  v1 = v0[33];
  v4 = v0[30];
  v3 = v0[31];
  v5 = v0[27];
  v6 = sub_10054F53C();
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipConnectionLinesEntryPointCompact, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v12 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v0[43] = v12;
  v13 = static MainActor.shared.getter(v11);
  v0[44] = v13;
  if (v13)
  {
    ObjectType = swift_getObjectType(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v17 = v16;
  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v0[45] = v15;
  v0[46] = v17;
  return swift_task_switch(sub_100536D78, v15, v17);
}

uint64_t sub_100536D78()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[44];
  v0[47] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 12, v0[34]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[48] = v2;
  *v2 = v0;
  v2[1] = sub_100536E20;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[23], v1, &protocol witness table for MainActor);
}

uint64_t sub_100536E20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 384));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 360);
    v4 = *(_QWORD *)(v2 + 368);
    v5 = sub_100536FD4;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 376))(v2 + 96, 0);
    v3 = *(_QWORD *)(v2 + 360);
    v4 = *(_QWORD *)(v2 + 368);
    v5 = sub_100536E90;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100536E90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[24];
  v2 = v0[25];
  v3 = v0[23];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[44];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v4);
    return swift_task_switch(sub_1005373DC, v0[40], v0[41]);
  }
  else
  {
    v7 = v0[36];
    v6 = v0[37];
    v8 = v0[34];
    v9 = v0[35];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[26], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[49] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[50] = v12;
    *v12 = v0;
    v12[1] = sub_100536FE4;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 51, v0[26]);
  }
}

uint64_t sub_100536FD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 376))(v0 + 96, 1);
}

uint64_t sub_100536FE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 392);
  v4 = *(_QWORD *)(*v0 + 200);
  v3 = *(_QWORD *)(*v0 + 208);
  v5 = *(_QWORD *)(*v0 + 192);
  swift_task_dealloc(*(_QWORD *)(*v0 + 400));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 410) = *(_BYTE *)(v1 + 408);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_100537068, *(_QWORD *)(v1 + 360), *(_QWORD *)(v1 + 368));
}

uint64_t sub_100537068()
{
  _QWORD *v0;

  swift_release(v0[44]);
  return swift_task_switch(sub_1005370A0, v0[40], v0[41]);
}

uint64_t sub_1005370A0()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  unsigned int v4;
  id v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v9;
  uint64_t Strong;
  void *v11;
  id v12;
  char v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if ((*(_BYTE *)(v0 + 410) & 1) != 0)
  {
    *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    v1 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 16) = 7;
    *(_QWORD *)(v0 + 48) = v1;
    v2 = isFeatureEnabled(_:)(v0 + 16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
    if ((v2 & 1) != 0)
    {
      v3 = objc_msgSend(*(id *)(v0 + 176), "traitCollection");
      v4 = objc_msgSend(v3, "crl_isCompactWidth");

      if (v4)
      {
        v5 = sub_100C1CDD8();
        sub_100549A98((uint64_t)v5, (uint64_t)sub_100C37EF4, 0);
      }
      else
      {
        v14 = *(void **)(*(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 344));
        if (v14)
        {
          v15 = v14;
          v5 = sub_10085F204();

          sub_100C372B0((uint64_t)v5, 3, (uint64_t)sub_100C37F10, 0);
        }
        else
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v0 + 152, 0, 0);
          v5 = (id)static OS_os_log.crlError;
          v16 = static os_log_type_t.error.getter(v5);
          sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v16, "Unable to present connection lines entry point tip because relative rect not found", 82, 2, (uint64_t)_swiftEmptyArrayStorage);
        }
      }

    }
    if (qword_1013DD288 != -1)
      swift_once(&qword_1013DD288, sub_100859194);
    v17 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
    v18 = sub_1004F2A1C(v17, (uint64_t)qword_10147F8D8);
    *(_BYTE *)(v0 + 409) = 1;
    swift_beginAccess(v18, v0 + 128, 33, 0);
    Tips.Parameter.wrappedValue.setter(v0 + 409, v17);
    v8 = (id)swift_endAccess(v0 + 128);
  }
  else
  {
    *(_QWORD *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    v6 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 88) = v6;
    v7 = isFeatureEnabled(_:)(v0 + 56);
    v8 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 56));
    if ((v7 & 1) != 0)
    {
      v8 = objc_msgSend(*(id *)(v0 + 176), "presentedViewController");
      if (v8)
      {
        v9 = v8;
        Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 176) + *(_QWORD *)(v0 + 336));
        if (Strong)
        {
          v11 = (void *)Strong;
          sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
          v12 = v9;
          v13 = static NSObject.== infix(_:_:)(v12, v11);

          if ((v13 & 1) != 0)
          {
            objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);
            sub_100C38CDC(1);
          }

        }
        else
        {

        }
      }
    }
  }
  v19 = static MainActor.shared.getter(v8);
  *(_QWORD *)(v0 + 352) = v19;
  if (v19)
  {
    ObjectType = swift_getObjectType(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v23 = v22;
  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  *(_QWORD *)(v0 + 360) = v21;
  *(_QWORD *)(v0 + 368) = v23;
  return swift_task_switch(sub_100536D78, v21, v23);
}

uint64_t sub_1005373DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 240);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 208);
  v8 = *(_QWORD *)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(v2, *(_QWORD *)(v0 + 272));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100537488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4[31] = a4;
  v5 = sub_1004B804C(&qword_1013E1C00);
  v4[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.Status(0);
  v4[33] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[34] = v7;
  v4[35] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1C08);
  v4[36] = v8;
  v4[37] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1C10);
  v4[38] = v9;
  v4[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1C18);
  v4[40] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[41] = v11;
  v4[42] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E1C20);
  v4[43] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[44] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[45] = swift_task_alloc(v14);
  v4[46] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v4[47] = v15;
  v4[48] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v4[49] = v16;
  v4[50] = v17;
  return swift_task_switch(sub_1005375FC, v16, v17);
}

uint64_t sub_1005375FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[41];
  v1 = v0[42];
  v4 = v0[39];
  v3 = v0[40];
  v5 = v0[36];
  v6 = sub_10054F4F8();
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipConnectionLinesOnSelection, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v12 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView;
  v0[51] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v0[52] = v12;
  v0[53] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController;
  v13 = static MainActor.shared.getter(v11);
  v0[54] = v13;
  if (v13)
  {
    ObjectType = swift_getObjectType(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v17 = v16;
  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  v0[55] = v15;
  v0[56] = v17;
  return swift_task_switch(sub_100537764, v15, v17);
}

uint64_t sub_100537764()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[54];
  v0[57] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 24, v0[43]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[58] = v2;
  *v2 = v0;
  v2[1] = sub_10053780C;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[32], v1, &protocol witness table for MainActor);
}

uint64_t sub_10053780C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 464));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 440);
    v4 = *(_QWORD *)(v2 + 448);
    v5 = sub_1005379C0;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 456))(v2 + 192, 0);
    v3 = *(_QWORD *)(v2 + 440);
    v4 = *(_QWORD *)(v2 + 448);
    v5 = sub_10053787C;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10053787C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[33];
  v2 = v0[34];
  v3 = v0[32];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[54];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v4);
    return swift_task_switch(sub_100537DB0, v0[49], v0[50]);
  }
  else
  {
    v7 = v0[45];
    v6 = v0[46];
    v8 = v0[43];
    v9 = v0[44];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[35], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[59] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[60] = v12;
    *v12 = v0;
    v12[1] = sub_1005379D0;
    return ((uint64_t (*)(char *, _QWORD))v13)((char *)v0 + 57, v0[35]);
  }
}

uint64_t sub_1005379C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 456))(v0 + 192, 1);
}

uint64_t sub_1005379D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 472);
  v4 = *(_QWORD *)(*v0 + 272);
  v3 = *(_QWORD *)(*v0 + 280);
  v5 = *(_QWORD *)(*v0 + 264);
  swift_task_dealloc(*(_QWORD *)(*v0 + 480));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 58) = *(_BYTE *)(v1 + 57);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_100537A54, *(_QWORD *)(v1 + 440), *(_QWORD *)(v1 + 448));
}

uint64_t sub_100537A54()
{
  _QWORD *v0;

  swift_release(v0[54]);
  return swift_task_switch(sub_100537A8C, v0[49], v0[50]);
}

id sub_100537A8C()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  void *Strong;
  id v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id result;
  void *v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if ((*(_BYTE *)(v0 + 58) & 1) != 0)
  {
    *(_QWORD *)(v0 + 136) = &type metadata for CRLFeatureFlags;
    v1 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 112) = 0;
    *(_QWORD *)(v0 + 144) = v1;
    v2 = isFeatureEnabled(_:)(v0 + 112);
    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 112));
    if ((v2 & 1) != 0)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 408));

      if (!Strong)
      {
        sub_100C38774(v0 + 64);
        sub_1004C4938(v0 + 64, v0 + 16, (uint64_t *)&unk_10140B970);
        if ((*(_BYTE *)(v0 + 56) & 1) != 0)
        {
          if (qword_1013DD6C8 != -1)
            swift_once(&qword_1013DD6C8, sub_100A00D28);
          swift_beginAccess(&static OS_os_log.crlError, v0 + 224, 0, 0);
          v5 = (id)static OS_os_log.crlError;
          v6 = static os_log_type_t.error.getter(v5);
          sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v6, "Unable to present connection line on selection because there is no connection line knob position to present off of", 114, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_16:

          goto LABEL_17;
        }
        v12 = *(_QWORD *)(v0 + 416);
        v13 = *(_QWORD *)(v0 + 248);
        v14 = *(_QWORD *)(v0 + 48);
        v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
        v16 = *(void **)(v13 + v12);
        *(_QWORD *)(v13 + v12) = v15;

        v17 = *(void **)(v13 + v12);
        if (v17)
        {
          v18 = *(void **)(*(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 424));
          v5 = v17;
          result = objc_msgSend(v18, "view");
          if (!result)
          {
            __break(1u);
            return result;
          }
          v20 = result;
          objc_msgSend(result, "addSubview:", v5);

          sub_100C375B0((uint64_t)v5, v14, 0, 0);
          goto LABEL_16;
        }
      }
    }
  }
  else
  {
    *(_QWORD *)(v0 + 176) = &type metadata for CRLFeatureFlags;
    v7 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 152) = 0;
    *(_QWORD *)(v0 + 184) = v7;
    v8 = isFeatureEnabled(_:)(v0 + 152);
    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 152));
    if ((v8 & 1) != 0)
    {
      v3 = objc_msgSend(*(id *)(v0 + 248), "presentedViewController");
      if (v3)
      {
        v5 = v3;
        v9 = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 248) + *(_QWORD *)(v0 + 408));
        if (v9)
        {
          v10 = (void *)v9;
          sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
          v5 = v5;
          v11 = static NSObject.== infix(_:_:)(v5, v10);

          if ((v11 & 1) != 0)
          {
            objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, 0);
            sub_100C38CDC(1);
          }
        }
        goto LABEL_16;
      }
    }
  }
LABEL_17:
  v21 = static MainActor.shared.getter(v3);
  *(_QWORD *)(v0 + 432) = v21;
  if (v21)
  {
    ObjectType = swift_getObjectType(v21);
    v23 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v25 = v24;
  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  *(_QWORD *)(v0 + 440) = v23;
  *(_QWORD *)(v0 + 448) = v25;
  return (id)swift_task_switch(sub_100537764, v23, v25);
}

uint64_t sub_100537DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 256);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 352) + 8))(v2, *(_QWORD *)(v0 + 344));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100537E5C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  char v17;
  unint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t (*v20)(char *, uint64_t);
  int v21;
  int v22;
  void (*v23)(char *, uint64_t);
  unint64_t v24;
  int v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  _QWORD v48[3];
  ValueMetadata *v49;
  unint64_t v50;

  v1 = type metadata accessor for Tips.Status(0);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - v12;
  v49 = &type metadata for CRLFeatureFlags;
  v14 = sub_1004DB6DC();
  v50 = v14;
  LOBYTE(v48[0]) = 0;
  v15 = isFeatureEnabled(_:)(v48);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v48);
  result = 0;
  if ((v15 & 1) != 0)
  {
    v49 = &type metadata for CRLFeatureFlags;
    v50 = v14;
    LOBYTE(v48[0]) = 16;
    v17 = isFeatureEnabled(_:)(v48);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v48);
    if ((v17 & 1) == 0)
      return 0;
    v46 = v0;
    v18 = sub_10054F99C();
    Tip.status.getter(&type metadata for CRLTipScenesEntryPointFull, v18);
    v19 = (void (*)(char *, char *, uint64_t))v2[2];
    v19(v10, v13, v1);
    v20 = (uint64_t (*)(char *, uint64_t))v2[11];
    v21 = v20(v10, v1);
    v22 = enum case for Tips.Status.invalidated(_:);
    v23 = (void (*)(char *, uint64_t))v2[1];
    v23(v10, v1);
    v23(v13, v1);
    if (v21 == v22)
    {
      v24 = sub_10054F958();
      Tip.status.getter(&type metadata for CRLTipScenesEntryPointCompact, v24);
      v19(v4, v7, v1);
      v25 = v20(v4, v1);
      v23(v4, v1);
      v23(v7, v1);
      if (v25 == v21)
        return 0;
      v36 = *(char **)(*(_QWORD *)(*(_QWORD *)(v46
                                             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                     + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      v37 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
      v38 = *(_QWORD *)&v36[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      v39 = v36;
      if (!v38)
      {
        sub_100740DA4();
        v38 = *(_QWORD *)&v36[v37];
      }
      if (v38)
        v40 = v38;
      else
        v40 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v38);

      if ((unint64_t)v40 >> 62)
      {
        if (v40 < 0)
          v44 = v40;
        else
          v44 = v40 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v40);
        v41 = _CocoaArrayWrapper.endIndex.getter(v44);
        swift_bridgeObjectRelease();
      }
      else
      {
        v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (qword_1013DD658 != -1)
        swift_once(&qword_1013DD658, sub_1009E16EC);
      v32 = v41 > 0;
      v33 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v34 = v33;
      v35 = qword_101480228;
    }
    else
    {
      v26 = *(char **)(*(_QWORD *)(*(_QWORD *)(v46
                                             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                     + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      v27 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
      v28 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      v29 = v26;
      if (!v28)
      {
        sub_100740DA4();
        v28 = *(_QWORD *)&v26[v27];
      }
      if (v28)
        v30 = v28;
      else
        v30 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v28);

      if ((unint64_t)v30 >> 62)
      {
        if (v30 < 0)
          v43 = v30;
        else
          v43 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v30);
        v31 = _CocoaArrayWrapper.endIndex.getter(v43);
        swift_bridgeObjectRelease();
      }
      else
      {
        v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (qword_1013DCD10 != -1)
        swift_once(&qword_1013DCD10, sub_10069C574);
      v32 = v31 > 0;
      v33 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v34 = v33;
      v35 = qword_10147EF68;
    }
    v42 = sub_1004F2A1C(v33, (uint64_t)v35);
    v47 = v32;
    swift_beginAccess(v42, v48, 33, 0);
    Tips.Parameter.wrappedValue.setter(&v47, v34);
    swift_endAccess(v48);
    return 1;
  }
  return result;
}

uint64_t sub_100538288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4[14] = a4;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E1C00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v5);
  v4[16] = swift_task_alloc(v5);
  v6 = type metadata accessor for Tips.Status(0);
  v4[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[18] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[19] = swift_task_alloc(v8);
  v4[20] = swift_task_alloc(v8);
  v4[21] = swift_task_alloc(v8);
  v9 = sub_1004B804C(&qword_1013E1C08);
  v4[22] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[23] = v10;
  v4[24] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E1C10);
  v4[25] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[26] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[27] = swift_task_alloc(v13);
  v4[28] = swift_task_alloc(v13);
  v14 = sub_1004B804C(&qword_1013E1C18);
  v4[29] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[30] = v15;
  v4[31] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E1C20);
  v4[32] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[33] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[34] = swift_task_alloc(v18);
  v4[35] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v4[36] = v19;
  v4[37] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v4[38] = v20;
  v4[39] = v21;
  return swift_task_switch(sub_100538440, v20, v21);
}

uint64_t sub_100538440()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0[30];
  v1 = v0[31];
  v4 = v0[28];
  v3 = v0[29];
  v5 = v0[22];
  v6 = sub_10054F99C();
  v0[40] = v6;
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipScenesEntryPointFull, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v0[41] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v12 = static MainActor.shared.getter(v11);
  v0[42] = v12;
  if (v12)
  {
    ObjectType = swift_getObjectType(v12);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v16 = v15;
  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v0[43] = v14;
  v0[44] = v16;
  return swift_task_switch(sub_100538598, v14, v16);
}

uint64_t sub_100538598()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[42];
  v0[45] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 7, v0[32]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[46] = v2;
  *v2 = v0;
  v2[1] = sub_100538640;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[16], v1, &protocol witness table for MainActor);
}

uint64_t sub_100538640()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 368));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 344);
    v4 = *(_QWORD *)(v2 + 352);
    v5 = sub_1005387F8;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 360))(v2 + 56, 0);
    v3 = *(_QWORD *)(v2 + 344);
    v4 = *(_QWORD *)(v2 + 352);
    v5 = sub_1005386B0;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005386B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = v0[17];
  v2 = v0[18];
  v3 = v0[16];
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[47] = v4;
  if (v4(v3, 1, v1) == 1)
  {
    v5 = v0[42];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v5);
    return swift_task_switch(sub_100538A30, v0[38], v0[39]);
  }
  else
  {
    v8 = v0[34];
    v7 = v0[35];
    v9 = v0[32];
    v10 = v0[33];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[21], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    v11 = (int *)AsyncMapSequence.Iterator.transform.getter(v9);
    v0[48] = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc(v11[1]);
    v0[49] = v13;
    *v13 = v0;
    v13[1] = sub_100538808;
    return ((uint64_t (*)(char *, _QWORD))v14)((char *)v0 + 421, v0[21]);
  }
}

uint64_t sub_1005387F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 360))(v0 + 56, 1);
}

uint64_t sub_100538808()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 384);
  v3 = *(_QWORD *)(*v0 + 168);
  v4 = *(_QWORD *)(*v0 + 136);
  v5 = *(_QWORD *)(*v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 422) = *(_BYTE *)(v1 + 421);
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v6);
  return swift_task_switch(sub_10053888C, *(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 352));
}

uint64_t sub_10053888C()
{
  _QWORD *v0;

  swift_release(v0[42]);
  return swift_task_switch(sub_1005388C4, v0[38], v0[39]);
}

uint64_t sub_1005388C4()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  char v3;
  void *v4;
  uint64_t Strong;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((*(_BYTE *)(v0 + 422) & 1) != 0)
  {
    sub_100C1BD0C();
  }
  else
  {
    *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    v2 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 48) = v2;
    v3 = isFeatureEnabled(_:)(v0 + 16);
    v1 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
    if ((v3 & 1) != 0)
    {
      v1 = objc_msgSend(*(id *)(v0 + 112), "presentedViewController");
      if (v1)
      {
        v4 = v1;
        Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 328));
        if (Strong)
        {
          v6 = (void *)Strong;
          sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
          v7 = v4;
          v8 = static NSObject.== infix(_:_:)(v7, v6);

          if ((v8 & 1) != 0)
          {
            objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);
            sub_100C38CDC(1);
          }

        }
        else
        {

        }
      }
    }
  }
  v9 = static MainActor.shared.getter(v1);
  *(_QWORD *)(v0 + 336) = v9;
  if (v9)
  {
    ObjectType = swift_getObjectType(v9);
    v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v13 = v12;
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  *(_QWORD *)(v0 + 344) = v11;
  *(_QWORD *)(v0 + 352) = v13;
  return swift_task_switch(sub_100538598, v11, v13);
}

uint64_t sub_100538A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
  Tip.statusUpdates.getter(&type metadata for CRLTipScenesEntryPointFull, v1);
  AsyncStream.makeAsyncIterator()(v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  *(_DWORD *)(v0 + 416) = enum case for Tips.Status.invalidated(_:);
  v6 = static MainActor.shared.getter(v5);
  *(_QWORD *)(v0 + 400) = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 408) = v7;
  *v7 = v0;
  v7[1] = sub_100538B18;
  return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 120), v6, &protocol witness table for MainActor, *(_QWORD *)(v0 + 200));
}

uint64_t sub_100538B18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 400);
  swift_task_dealloc(*(_QWORD *)(*v0 + 408));
  swift_release(v2);
  return swift_task_switch(sub_100538B6C, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_100538B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376))(v2, 1, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 296);
    v5 = *(_QWORD *)(v0 + 272);
    v4 = *(_QWORD *)(v0 + 280);
    v6 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(v8, *(_QWORD *)(v0 + 200));
    swift_release(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_DWORD *)(v0 + 416);
    v14 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13, v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v1);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v14, v1);
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v17(v14, v1);
    if (v16 == v12)
    {
      if (qword_1013DD8F8 != -1)
        swift_once(&qword_1013DD8F8, sub_100A0EBDC);
      v18 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v19 = sub_1004F2A1C(v18, (uint64_t)qword_101480598);
      *(_BYTE *)(v0 + 420) = 1;
      swift_beginAccess(v19, v0 + 88, 33, 0);
      Tips.Parameter.wrappedValue.setter(v0 + 420, v18);
      swift_endAccess(v0 + 88);
    }
    v20 = ((uint64_t (*)(_QWORD, _QWORD))v17)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
    v21 = static MainActor.shared.getter(v20);
    *(_QWORD *)(v0 + 400) = v21;
    v22 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 408) = v22;
    *v22 = v0;
    v22[1] = sub_100538B18;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 120), v21, &protocol witness table for MainActor, *(_QWORD *)(v0 + 200));
  }
}

uint64_t sub_100538DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4[14] = a4;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E1C00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v5);
  v4[16] = swift_task_alloc(v5);
  v6 = type metadata accessor for Tips.Status(0);
  v4[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[18] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[19] = swift_task_alloc(v8);
  v4[20] = swift_task_alloc(v8);
  v4[21] = swift_task_alloc(v8);
  v9 = sub_1004B804C(&qword_1013E1C08);
  v4[22] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[23] = v10;
  v4[24] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E1C10);
  v4[25] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[26] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[27] = swift_task_alloc(v13);
  v4[28] = swift_task_alloc(v13);
  v14 = sub_1004B804C(&qword_1013E1C18);
  v4[29] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v4[30] = v15;
  v4[31] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E1C20);
  v4[32] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v4[33] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[34] = swift_task_alloc(v18);
  v4[35] = swift_task_alloc(v18);
  v19 = type metadata accessor for MainActor(0);
  v4[36] = v19;
  v4[37] = static MainActor.shared.getter(v19);
  v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v4[38] = v20;
  v4[39] = v21;
  return swift_task_switch(sub_100538F84, v20, v21);
}

uint64_t sub_100538F84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0[30];
  v1 = v0[31];
  v4 = v0[28];
  v3 = v0[29];
  v5 = v0[22];
  v6 = sub_10054F958();
  v0[40] = v6;
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipScenesEntryPointCompact, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v0[41] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v12 = static MainActor.shared.getter(v11);
  v0[42] = v12;
  if (v12)
  {
    ObjectType = swift_getObjectType(v12);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v16 = v15;
  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v0[43] = v14;
  v0[44] = v16;
  return swift_task_switch(sub_1005390DC, v14, v16);
}

uint64_t sub_1005390DC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[42];
  v0[45] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 7, v0[32]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[46] = v2;
  *v2 = v0;
  v2[1] = sub_100539184;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[16], v1, &protocol witness table for MainActor);
}

uint64_t sub_100539184()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 368));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 344);
    v4 = *(_QWORD *)(v2 + 352);
    v5 = sub_10054FFA8;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 360))(v2 + 56, 0);
    v3 = *(_QWORD *)(v2 + 344);
    v4 = *(_QWORD *)(v2 + 352);
    v5 = sub_1005391F4;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_1005391F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = v0[17];
  v2 = v0[18];
  v3 = v0[16];
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[47] = v4;
  if (v4(v3, 1, v1) == 1)
  {
    v5 = v0[42];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v5);
    return swift_task_switch(sub_100539564, v0[38], v0[39]);
  }
  else
  {
    v8 = v0[34];
    v7 = v0[35];
    v9 = v0[32];
    v10 = v0[33];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[21], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    v11 = (int *)AsyncMapSequence.Iterator.transform.getter(v9);
    v0[48] = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc(v11[1]);
    v0[49] = v13;
    *v13 = v0;
    v13[1] = sub_10053933C;
    return ((uint64_t (*)(char *, _QWORD))v14)((char *)v0 + 421, v0[21]);
  }
}

uint64_t sub_10053933C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 384);
  v3 = *(_QWORD *)(*v0 + 168);
  v4 = *(_QWORD *)(*v0 + 136);
  v5 = *(_QWORD *)(*v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 422) = *(_BYTE *)(v1 + 421);
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v6);
  return swift_task_switch(sub_1005393C0, *(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 352));
}

uint64_t sub_1005393C0()
{
  _QWORD *v0;

  swift_release(v0[42]);
  return swift_task_switch(sub_1005393F8, v0[38], v0[39]);
}

uint64_t sub_1005393F8()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  char v3;
  void *v4;
  uint64_t Strong;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((*(_BYTE *)(v0 + 422) & 1) != 0)
  {
    sub_100C1BD0C();
  }
  else
  {
    *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    v2 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 48) = v2;
    v3 = isFeatureEnabled(_:)(v0 + 16);
    v1 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
    if ((v3 & 1) != 0)
    {
      v1 = objc_msgSend(*(id *)(v0 + 112), "presentedViewController");
      if (v1)
      {
        v4 = v1;
        Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 328));
        if (Strong)
        {
          v6 = (void *)Strong;
          sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
          v7 = v4;
          v8 = static NSObject.== infix(_:_:)(v7, v6);

          if ((v8 & 1) != 0)
          {
            objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0);
            sub_100C38CDC(1);
          }

        }
        else
        {

        }
      }
    }
  }
  v9 = static MainActor.shared.getter(v1);
  *(_QWORD *)(v0 + 336) = v9;
  if (v9)
  {
    ObjectType = swift_getObjectType(v9);
    v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v13 = v12;
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  *(_QWORD *)(v0 + 344) = v11;
  *(_QWORD *)(v0 + 352) = v13;
  return swift_task_switch(sub_1005390DC, v11, v13);
}

uint64_t sub_100539564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
  Tip.statusUpdates.getter(&type metadata for CRLTipScenesEntryPointCompact, v1);
  AsyncStream.makeAsyncIterator()(v4);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  *(_DWORD *)(v0 + 416) = enum case for Tips.Status.invalidated(_:);
  v6 = static MainActor.shared.getter(v5);
  *(_QWORD *)(v0 + 400) = v6;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 408) = v7;
  *v7 = v0;
  v7[1] = sub_10053964C;
  return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 120), v6, &protocol witness table for MainActor, *(_QWORD *)(v0 + 200));
}

uint64_t sub_10053964C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 400);
  swift_task_dealloc(*(_QWORD *)(*v0 + 408));
  swift_release(v2);
  return swift_task_switch(sub_1005396A0, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_1005396A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376))(v2, 1, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 296);
    v5 = *(_QWORD *)(v0 + 272);
    v4 = *(_QWORD *)(v0 + 280);
    v6 = *(_QWORD *)(v0 + 248);
    v8 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 160);
    v24 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(v8, *(_QWORD *)(v0 + 200));
    swift_release(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_DWORD *)(v0 + 416);
    v14 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13, v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v1);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v14, v1);
    v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v17(v14, v1);
    if (v16 == v12)
    {
      if (qword_1013DD8F8 != -1)
        swift_once(&qword_1013DD8F8, sub_100A0EBDC);
      v18 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
      v19 = sub_1004F2A1C(v18, (uint64_t)qword_101480598);
      *(_BYTE *)(v0 + 420) = 1;
      swift_beginAccess(v19, v0 + 88, 33, 0);
      Tips.Parameter.wrappedValue.setter(v0 + 420, v18);
      swift_endAccess(v0 + 88);
    }
    v20 = ((uint64_t (*)(_QWORD, _QWORD))v17)(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
    v21 = static MainActor.shared.getter(v20);
    *(_QWORD *)(v0 + 400) = v21;
    v22 = (_QWORD *)swift_task_alloc(async function pointer to AsyncStream.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 408) = v22;
    *v22 = v0;
    v22[1] = sub_10053964C;
    return AsyncStream.Iterator.next(isolation:)(*(_QWORD *)(v0 + 120), v21, &protocol witness table for MainActor, *(_QWORD *)(v0 + 200));
  }
}

uint64_t sub_100539900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  unint64_t v9;
  int v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[7];
  BOOL v29;
  _QWORD v30[5];

  v1 = type metadata accessor for Tips.Status(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v28[-v6];
  v30[3] = &type metadata for CRLFeatureFlags;
  v30[4] = sub_1004DB6DC();
  LOBYTE(v30[0]) = 17;
  v8 = isFeatureEnabled(_:)(v30);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
  if ((v8 & 1) == 0)
    return 0;
  v9 = sub_10054F9E0();
  Tip.status.getter(&type metadata for CRLTipSendCopy, v9);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v4, v7, v1);
  v10 = (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 88))(v4, v1);
  v11 = enum case for Tips.Status.invalidated(_:);
  v12 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v12(v4, v1);
  v12(v7, v1);
  if (v10 == v11)
    return 0;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  v15 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                              + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                  + 16);
  if (qword_1013DD8E8 != -1)
    swift_once(&qword_1013DD8E8, sub_100A0EB8C);
  v17 = v16 != 0;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v19 = sub_1004F2A1C(v18, (uint64_t)qword_101480568);
  v29 = v17;
  swift_beginAccess(v19, v30, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v29, v18);
  swift_endAccess(v30);
  v20 = *(char **)(*(_QWORD *)(v14 + v15) + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  v21 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  v23 = v20;
  if (!v22)
  {
    sub_100740DA4();
    v22 = *(_QWORD *)&v20[v21];
  }
  if (v22)
    v24 = v22;
  else
    v24 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v22);

  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0)
      v27 = v24;
    else
      v27 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v25 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (qword_1013DD8F0 != -1)
    swift_once(&qword_1013DD8F0, sub_100A0EBB8);
  v26 = sub_1004F2A1C(v18, (uint64_t)qword_101480580);
  v29 = v25 > 0;
  swift_beginAccess(v26, v30, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v29, v18);
  swift_endAccess(v30);
  return 1;
}

uint64_t sub_100539BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4[16] = a4;
  v5 = sub_1004B804C(&qword_1013E1C00);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.Status(0);
  v4[18] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[19] = v7;
  v4[20] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1C08);
  v4[21] = v8;
  v4[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1C10);
  v4[23] = v9;
  v4[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1C18);
  v4[25] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[26] = v11;
  v4[27] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E1C20);
  v4[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[29] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[30] = swift_task_alloc(v14);
  v4[31] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v4[32] = v15;
  v4[33] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v4[34] = v16;
  v4[35] = v17;
  return swift_task_switch(sub_100539D60, v16, v17);
}

uint64_t sub_100539D60()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0[26];
  v1 = v0[27];
  v4 = v0[24];
  v3 = v0[25];
  v5 = v0[21];
  v6 = sub_10054F9E0();
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipSendCopy, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v0[36] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v12 = static MainActor.shared.getter(v11);
  v0[37] = v12;
  if (v12)
  {
    ObjectType = swift_getObjectType(v12);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v16 = v15;
  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v0[38] = v14;
  v0[39] = v16;
  return swift_task_switch(sub_100539EB0, v14, v16);
}

uint64_t sub_100539EB0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[37];
  v0[40] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 12, v0[28]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[41] = v2;
  *v2 = v0;
  v2[1] = sub_100539F58;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[17], v1, &protocol witness table for MainActor);
}

uint64_t sub_100539F58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 328));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 304);
    v4 = *(_QWORD *)(v2 + 312);
    v5 = sub_10053A10C;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 320))(v2 + 96, 0);
    v3 = *(_QWORD *)(v2 + 304);
    v4 = *(_QWORD *)(v2 + 312);
    v5 = sub_100539FC8;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100539FC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[18];
  v2 = v0[19];
  v3 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[37];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v4);
    return swift_task_switch(sub_10053A384, v0[34], v0[35]);
  }
  else
  {
    v7 = v0[30];
    v6 = v0[31];
    v8 = v0[28];
    v9 = v0[29];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[20], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[42] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[43] = v12;
    *v12 = v0;
    v12[1] = sub_10053A11C;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 44, v0[20]);
  }
}

uint64_t sub_10053A10C()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 320))(v0 + 96, 1);
}

uint64_t sub_10053A11C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 336);
  v4 = *(_QWORD *)(*v0 + 152);
  v3 = *(_QWORD *)(*v0 + 160);
  v5 = *(_QWORD *)(*v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*v0 + 344));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 353) = *(_BYTE *)(v1 + 352);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_10053A1A0, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_10053A1A0()
{
  _QWORD *v0;

  swift_release(v0[37]);
  return swift_task_switch(sub_10053A1D8, v0[34], v0[35]);
}

uint64_t sub_10053A1D8()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  id v4;
  unint64_t v5;
  char v6;
  uint64_t Strong;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((*(_BYTE *)(v0 + 353) & 1) != 0)
  {
    *(_QWORD *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    v1 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 56) = 17;
    *(_QWORD *)(v0 + 88) = v1;
    v2 = isFeatureEnabled(_:)(v0 + 56);
    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 56));
    if ((v2 & 1) == 0)
      goto LABEL_10;
    v4 = sub_100C1CDC4();
    sub_100549D2C((uint64_t)v4, 0, 0);
  }
  else
  {
    *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
    v5 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 48) = v5;
    v6 = isFeatureEnabled(_:)(v0 + 16);
    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
    if ((v6 & 1) == 0)
      goto LABEL_10;
    v3 = objc_msgSend(*(id *)(v0 + 128), "presentedViewController");
    if (!v3)
      goto LABEL_10;
    v4 = v3;
    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 288));
    if (Strong)
    {
      v8 = (void *)Strong;
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v4 = v4;
      v9 = static NSObject.== infix(_:_:)(v4, v8);

      if ((v9 & 1) != 0)
      {
        objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);
        sub_100C38CDC(1);
      }
    }
  }

LABEL_10:
  v10 = static MainActor.shared.getter(v3);
  *(_QWORD *)(v0 + 296) = v10;
  if (v10)
  {
    ObjectType = swift_getObjectType(v10);
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v14 = v13;
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  *(_QWORD *)(v0 + 304) = v12;
  *(_QWORD *)(v0 + 312) = v14;
  return swift_task_switch(sub_100539EB0, v12, v14);
}

uint64_t sub_10053A384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 136);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(v2, *(_QWORD *)(v0 + 224));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053A430()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  char v17;
  unint64_t v18;
  uint64_t (*v19)(char *, uint64_t);
  int v20;
  int v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  int v24;
  _QWORD v25[2];
  void (*v26)(char *, char *, uint64_t);
  _QWORD v27[3];
  ValueMetadata *v28;
  unint64_t v29;

  v1 = type metadata accessor for Tips.Status(0);
  v2 = *(_QWORD **)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v25 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)v25 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)v25 - v12;
  v28 = &type metadata for CRLFeatureFlags;
  v14 = sub_1004DB6DC();
  v29 = v14;
  LOBYTE(v27[0]) = 0;
  v15 = isFeatureEnabled(_:)(v27);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  result = 0;
  if ((v15 & 1) != 0)
  {
    v28 = &type metadata for CRLFeatureFlags;
    v29 = v14;
    LOBYTE(v27[0]) = 19;
    v17 = isFeatureEnabled(_:)(v27);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
    if ((v17 & 1) == 0)
      return 0;
    v25[1] = v0;
    v18 = sub_10054FAB4();
    Tip.status.getter(&type metadata for CRLTipStencilLibraryFull, v18);
    v26 = (void (*)(char *, char *, uint64_t))v2[2];
    v26(v10, v13, v1);
    v19 = (uint64_t (*)(char *, uint64_t))v2[11];
    v20 = v19(v10, v1);
    v21 = enum case for Tips.Status.invalidated(_:);
    v22 = (void (*)(char *, uint64_t))v2[1];
    v22(v10, v1);
    v22(v13, v1);
    if (v20 == v21)
    {
      v23 = sub_10054FA70();
      Tip.status.getter(&type metadata for CRLTipStencilLibraryCompact, v23);
      v26(v4, v7, v1);
      v24 = v19(v4, v1);
      v22(v4, v1);
      v22(v7, v1);
      if (v24 == v20)
        return 0;
      if ((Tip.shouldDisplay.getter(&type metadata for CRLTipStencilLibraryCompact, v23) & 1) == 0)
        return 1;
    }
    else if ((Tip.shouldDisplay.getter(&type metadata for CRLTipStencilLibraryFull, v18) & 1) == 0)
    {
      return 1;
    }
    sub_100C1C0E0();
    return 1;
  }
  return result;
}

uint64_t sub_10053A674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4[21] = a4;
  v5 = sub_1004B804C(&qword_1013E1C00);
  v4[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.Status(0);
  v4[23] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[24] = v7;
  v4[25] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1C08);
  v4[26] = v8;
  v4[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1C10);
  v4[28] = v9;
  v4[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1C18);
  v4[30] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[31] = v11;
  v4[32] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E1C20);
  v4[33] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[34] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[35] = swift_task_alloc(v14);
  v4[36] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v4[37] = v15;
  v4[38] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v4[39] = v16;
  v4[40] = v17;
  return swift_task_switch(sub_10053A7E8, v16, v17);
}

uint64_t sub_10053A7E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0[31];
  v1 = v0[32];
  v4 = v0[29];
  v3 = v0[30];
  v5 = v0[26];
  v6 = sub_10054FAB4();
  v0[41] = v6;
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipStencilLibraryFull, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v12 = static MainActor.shared.getter(v11);
  v0[43] = v12;
  if (v12)
  {
    ObjectType = swift_getObjectType(v12);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v16 = v15;
  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v0[44] = v14;
  v0[45] = v16;
  return swift_task_switch(sub_10053A93C, v14, v16);
}

uint64_t sub_10053A93C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[43];
  v0[46] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 17, v0[33]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[47] = v2;
  *v2 = v0;
  v2[1] = sub_10053A9E4;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[22], v1, &protocol witness table for MainActor);
}

uint64_t sub_10053A9E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 376));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_10053AB98;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 368))(v2 + 136, 0);
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_10053AA54;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10053AA54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[23];
  v2 = v0[24];
  v3 = v0[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[43];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v4);
    return swift_task_switch(sub_10053AEF0, v0[39], v0[40]);
  }
  else
  {
    v7 = v0[35];
    v6 = v0[36];
    v8 = v0[33];
    v9 = v0[34];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[25], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[48] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[49] = v12;
    *v12 = v0;
    v12[1] = sub_10053ABA8;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 50, v0[25]);
  }
}

uint64_t sub_10053AB98()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 368))(v0 + 136, 1);
}

uint64_t sub_10053ABA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 384);
  v4 = *(_QWORD *)(*v0 + 192);
  v3 = *(_QWORD *)(*v0 + 200);
  v5 = *(_QWORD *)(*v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 401) = *(_BYTE *)(v1 + 400);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_10053AC2C, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_10053AC2C()
{
  _QWORD *v0;

  swift_release(v0[43]);
  return swift_task_switch(sub_10053AC64, v0[39], v0[40]);
}

uint64_t sub_10053AC64()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  id v4;
  unint64_t v5;
  char v6;
  void *v7;
  uint64_t Strong;
  void *v9;
  id v10;
  char v11;
  unsigned int v12;
  id v13;
  ValueMetadata *v14;
  uint64_t (*v15)();
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((*(_BYTE *)(v0 + 401) & 1) != 0)
  {
    *(_QWORD *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    v1 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 56) = 19;
    *(_QWORD *)(v0 + 88) = v1;
    v2 = isFeatureEnabled(_:)(v0 + 56);
    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 56));
    if ((v2 & 1) == 0)
      goto LABEL_15;
    v4 = objc_msgSend(*(id *)(v0 + 168), "traitCollection");
    if (objc_msgSend(v4, "horizontalSizeClass") == (id)1)
    {

    }
    else
    {
      v12 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

      if (!v12)
      {
        v13 = sub_100C1CDB0();
        v14 = &type metadata for CRLTipStencilLibraryFull;
        *(_QWORD *)(v0 + 120) = &type metadata for CRLTipStencilLibraryFull;
        v16 = *(_QWORD *)(v0 + 328);
        v15 = sub_100C38C68;
        goto LABEL_14;
      }
    }
    v13 = sub_100C1CD60();
    v14 = &type metadata for CRLTipStencilLibraryCompact;
    *(_QWORD *)(v0 + 120) = &type metadata for CRLTipStencilLibraryCompact;
    v15 = sub_100C38C4C;
    v16 = sub_10054FA70();
LABEL_14:
    *(_QWORD *)(v0 + 128) = v16;
    v17 = sub_1004BB5A4((_QWORD *)(v0 + 96), (uint64_t)v14);
    sub_100C36EA0((uint64_t)v17, (uint64_t)v13, (uint64_t)v15, 0, v14, v16);

    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 96));
    goto LABEL_15;
  }
  *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
  v5 = sub_1004DB6DC();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 48) = v5;
  v6 = isFeatureEnabled(_:)(v0 + 16);
  v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  if ((v6 & 1) != 0)
  {
    v3 = objc_msgSend(*(id *)(v0 + 168), "presentedViewController");
    if (v3)
    {
      v7 = v3;
      Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 336));
      if (Strong)
      {
        v9 = (void *)Strong;
        sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
        v10 = v7;
        v11 = static NSObject.== infix(_:_:)(v10, v9);

        if ((v11 & 1) != 0)
        {
          objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);
          sub_100C38CDC(1);
        }

      }
      else
      {

      }
    }
  }
LABEL_15:
  v18 = static MainActor.shared.getter(v3);
  *(_QWORD *)(v0 + 344) = v18;
  if (v18)
  {
    ObjectType = swift_getObjectType(v18);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v22 = v21;
  }
  else
  {
    v20 = 0;
    v22 = 0;
  }
  *(_QWORD *)(v0 + 352) = v20;
  *(_QWORD *)(v0 + 360) = v22;
  return swift_task_switch(sub_10053A93C, v20, v22);
}

uint64_t sub_10053AEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(v2, *(_QWORD *)(v0 + 264));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053AF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4[21] = a4;
  v5 = sub_1004B804C(&qword_1013E1C00);
  v4[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.Status(0);
  v4[23] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[24] = v7;
  v4[25] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1C08);
  v4[26] = v8;
  v4[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1C10);
  v4[28] = v9;
  v4[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1C18);
  v4[30] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[31] = v11;
  v4[32] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E1C20);
  v4[33] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[34] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[35] = swift_task_alloc(v14);
  v4[36] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v4[37] = v15;
  v4[38] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v4[39] = v16;
  v4[40] = v17;
  return swift_task_switch(sub_10053B110, v16, v17);
}

uint64_t sub_10053B110()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0[31];
  v1 = v0[32];
  v4 = v0[29];
  v3 = v0[30];
  v5 = v0[26];
  v6 = sub_10054FA70();
  v0[41] = v6;
  Tip.shouldDisplayUpdates.getter(&type metadata for CRLTipStencilLibraryCompact, v6);
  AsyncMapSequence.base.getter(v3);
  v7 = sub_1004CBA30(&qword_1013E1C28, &qword_1013E1C08, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v8 = AsyncMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v11 = AsyncMapSequence.Iterator.init(_:transform:)(v4, v8, v10, v5, &type metadata for Bool, v7);
  v0[42] = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController;
  v12 = static MainActor.shared.getter(v11);
  v0[43] = v12;
  if (v12)
  {
    ObjectType = swift_getObjectType(v12);
    v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v16 = v15;
  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v0[44] = v14;
  v0[45] = v16;
  return swift_task_switch(sub_10053B264, v14, v16);
}

uint64_t sub_10053B264()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[43];
  v0[46] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 17, v0[33]);
  sub_1004CBA30((unint64_t *)&unk_1013E1C30, &qword_1013E1C10, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[47] = v2;
  *v2 = v0;
  v2[1] = sub_10053B30C;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[22], v1, &protocol witness table for MainActor);
}

uint64_t sub_10053B30C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 376));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_10054FFA4;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 368))(v2 + 136, 0);
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_10053B37C;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_10053B37C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  int *v13;

  v1 = v0[23];
  v2 = v0[24];
  v3 = v0[22];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = v0[43];
    sub_1004CB800(v3, &qword_1013E1C00);
    swift_release(v4);
    return swift_task_switch(sub_100550004, v0[39], v0[40]);
  }
  else
  {
    v7 = v0[35];
    v6 = v0[36];
    v8 = v0[33];
    v9 = v0[34];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[25], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    v10 = (int *)AsyncMapSequence.Iterator.transform.getter(v8);
    v0[48] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v13 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc(v10[1]);
    v0[49] = v12;
    *v12 = v0;
    v12[1] = sub_10053B4C0;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 50, v0[25]);
  }
}

uint64_t sub_10053B4C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 384);
  v4 = *(_QWORD *)(*v0 + 192);
  v3 = *(_QWORD *)(*v0 + 200);
  v5 = *(_QWORD *)(*v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  v6 = swift_release(v2);
  *(_BYTE *)(v1 + 401) = *(_BYTE *)(v1 + 400);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_10053B544, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_10053B544()
{
  _QWORD *v0;

  swift_release(v0[43]);
  return swift_task_switch(sub_10053B57C, v0[39], v0[40]);
}

uint64_t sub_10053B57C()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  id v3;
  id v4;
  unint64_t v5;
  char v6;
  void *v7;
  uint64_t Strong;
  void *v9;
  id v10;
  char v11;
  unsigned int v12;
  id v13;
  ValueMetadata *v14;
  unint64_t v15;
  uint64_t (*v16)();
  _QWORD *v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((*(_BYTE *)(v0 + 401) & 1) != 0)
  {
    *(_QWORD *)(v0 + 80) = &type metadata for CRLFeatureFlags;
    v1 = sub_1004DB6DC();
    *(_BYTE *)(v0 + 56) = 19;
    *(_QWORD *)(v0 + 88) = v1;
    v2 = isFeatureEnabled(_:)(v0 + 56);
    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 56));
    if ((v2 & 1) == 0)
      goto LABEL_15;
    v4 = objc_msgSend(*(id *)(v0 + 168), "traitCollection");
    if (objc_msgSend(v4, "horizontalSizeClass") == (id)1)
    {

    }
    else
    {
      v12 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");

      if (!v12)
      {
        v13 = sub_100C1CDB0();
        v14 = &type metadata for CRLTipStencilLibraryFull;
        *(_QWORD *)(v0 + 120) = &type metadata for CRLTipStencilLibraryFull;
        v16 = sub_100C38C68;
        v15 = sub_10054FAB4();
        goto LABEL_14;
      }
    }
    v13 = sub_100C1CD60();
    v14 = &type metadata for CRLTipStencilLibraryCompact;
    *(_QWORD *)(v0 + 120) = &type metadata for CRLTipStencilLibraryCompact;
    v15 = *(_QWORD *)(v0 + 328);
    v16 = sub_100C38C4C;
LABEL_14:
    *(_QWORD *)(v0 + 128) = v15;
    v17 = sub_1004BB5A4((_QWORD *)(v0 + 96), (uint64_t)v14);
    sub_100C36EA0((uint64_t)v17, (uint64_t)v13, (uint64_t)v16, 0, v14, v15);

    v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 96));
    goto LABEL_15;
  }
  *(_QWORD *)(v0 + 40) = &type metadata for CRLFeatureFlags;
  v5 = sub_1004DB6DC();
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 48) = v5;
  v6 = isFeatureEnabled(_:)(v0 + 16);
  v3 = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  if ((v6 & 1) != 0)
  {
    v3 = objc_msgSend(*(id *)(v0 + 168), "presentedViewController");
    if (v3)
    {
      v7 = v3;
      Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 336));
      if (Strong)
      {
        v9 = (void *)Strong;
        sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
        v10 = v7;
        v11 = static NSObject.== infix(_:_:)(v10, v9);

        if ((v11 & 1) != 0)
        {
          objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, 0);
          sub_100C38CDC(1);
        }

      }
      else
      {

      }
    }
  }
LABEL_15:
  v18 = static MainActor.shared.getter(v3);
  *(_QWORD *)(v0 + 344) = v18;
  if (v18)
  {
    ObjectType = swift_getObjectType(v18);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v22 = v21;
  }
  else
  {
    v20 = 0;
    v22 = 0;
  }
  *(_QWORD *)(v0 + 352) = v20;
  *(_QWORD *)(v0 + 360) = v22;
  return swift_task_switch(sub_10053B264, v20, v22);
}

id sub_10053B8F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s34TextEditingAllowingAlertControllerCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s34TextEditingAllowingAlertControllerCMa()
{
  return objc_opt_self(_TtCC8Freeform25CRLiOSBoardViewController34TextEditingAllowingAlertController);
}

_QWORD *sub_10053B940()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char **v6;
  char **v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = objc_msgSend(v0, "undoManager");
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = v1;
  v3 = objc_opt_self(CRLUndoManager);
  v4 = swift_dynamicCastObjCClass(v2, v3);
  if (v4)
    v5 = (void *)v4;
  else
    v5 = v2;
  v6 = &selRef_canUndo;
  if (v4)
  {
    v6 = &selRef_canUndoDisregardingDelegates;
    v7 = &selRef_canRedoDisregardingDelegates;
  }
  else
  {
    v7 = &selRef_canRedo;
  }
  v8 = objc_msgSend(v5, *v6);
  v9 = objc_msgSend(v5, *v7);
  v10 = 8;
  if (v8)
    v11 = 8;
  else
    v11 = 1;
  if (!v9)
    v10 = 1;
  v42 = v11;
  v43 = v10;
  v12 = objc_msgSend(v2, "undoActionName");
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v15 = v14;
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  v16 = objc_msgSend(v2, "redoActionName", v13);
  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v18 = v17;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v19 = objc_msgSend(v2, "undoMenuTitleForUndoActionName:", v12);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  v24 = (void *)objc_opt_self(UIImage);
  v25 = objc_msgSend(v24, "systemImageNamed:", v23);

  v26 = swift_allocObject(&unk_10126ADF8, 24, 7);
  *(_QWORD *)(v26 + 16) = v2;
  v27 = v2;
  v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v20, v22, 0, 0, v25, 0, 0, 0, 0, v42, 0, sub_10054F140, v26);
  v29 = objc_msgSend(v27, "redoMenuTitleForUndoActionName:", v16);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v24, "systemImageNamed:", v33);

  v35 = swift_allocObject(&unk_10126AE20, 24, 7);
  *(_QWORD *)(v35 + 16) = v27;
  v36 = v27;
  v37 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v30, v32, 0, 0, v34, 0, 0, 0, 0, v43, 0, sub_10054F150, v35);
  v38 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v39 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v39 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v39 + 32) = v28;
  *(_QWORD *)(v39 + 40) = v37;
  v44 = v39;
  specialized Array._endMutation()(v39);
  v40 = v44;

  return (_QWORD *)v40;
}

void sub_10053BCC0()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char **v7;
  char **v8;
  unsigned int v9;
  unsigned int v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  UIMenuElementSize v15;
  __n128 v16;
  UIMenuElementSize preferredElementSize;
  Swift::String v18;
  Class isa;
  void *v20;
  id v21;
  void **v22;
  Class v23;
  uint64_t v24;
  uint64_t v25;
  Swift::OpaquePointer v26;
  id v27;
  UIImage_optional v28;

  v1 = objc_msgSend(v0, "undoManager");
  if (v1)
  {
    v27 = v1;
    v2 = sub_100C1CD38();
    v3 = objc_msgSend(v2, "button");

    v4 = objc_opt_self(CRLUndoManager);
    v5 = swift_dynamicCastObjCClass(v27, v4);
    if (v5)
      v6 = (void *)v5;
    else
      v6 = v27;
    v7 = &selRef_canUndo;
    if (v5)
    {
      v7 = &selRef_canUndoDisregardingDelegates;
      v8 = &selRef_canRedoDisregardingDelegates;
    }
    else
    {
      v8 = &selRef_canRedo;
    }
    v9 = objc_msgSend(v6, *v7);
    v10 = objc_msgSend(v6, *v8);
    v11 = sub_100C1CD38();
    objc_msgSend(v11, "setEnabled:", v10 | v9);

    if ((objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI") & 1) != 0
      || (v12 = objc_msgSend(v0, "traitCollection"),
          v13 = objc_msgSend(v12, "horizontalSizeClass"),
          v12,
          v13 == (id)1))
    {
      objc_msgSend(v3, "setShowsMenuAsPrimaryAction:", v9 ^ 1);
      v3 = v3;
      v14 = (uint64_t)sub_10053B940();
      v15 = v14;
      if ((unint64_t)v14 >> 62)
      {
        if (v14 < 0)
          v24 = v14;
        else
          v24 = v14 & 0xFFFFFFFFFFFFFF8;
        v25 = sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
        preferredElementSize = _bridgeCocoaArray<A>(_:)(v24, v25);
      }
      else
      {
        v16 = swift_bridgeObjectRetain(v14);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v16);
        sub_1004B8930(0, &qword_1013E7880, UIMenuElement_ptr);
        preferredElementSize = v15;
      }
      swift_bridgeObjectRelease(v15);
      sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      v28.value.super.isa = 0;
      v28.is_nil = 0;
      isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v18, (Swift::String_optional)0, v28, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v26).super.super.isa;
      objc_msgSend(v3, "setMenu:", isa);

    }
    else
    {
      objc_msgSend(v3, "setShowsMenuAsPrimaryAction:", 0);
      objc_msgSend(v3, "setMenu:", 0);
      v20 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController];
      if (v20)
      {
        v21 = v20;
        v22 = sub_10053C054();
        sub_1004B8930(0, &qword_1013F1B20, UIAlertAction_ptr);
        v23 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v21, "crl_setActions:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

      }
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateUndoBarButtonItemState()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1896, "No undo manager", 15, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateUndoBarButtonItemState()", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 1896, (uint64_t)"No undo manager", 15, 2u);
  }
}

void **sub_10053C054()
{
  void *v0;
  id v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void **v35;
  id v37;
  void **aBlock;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;

  v1 = objc_msgSend(v0, "undoManager");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "undoMenuItemTitle");
    if (!v3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v5 = v4;
      v3 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v5);
    }
    v6 = (void *)objc_opt_self(UIAlertAction);
    v7 = swift_allocObject(&unk_10126AE48, 24, 7);
    *(_QWORD *)(v7 + 16) = v2;
    v42 = sub_10054F140;
    v43 = v7;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_10053C98C;
    v41 = &unk_10126AE60;
    v8 = _Block_copy(&aBlock);
    v9 = v43;
    v10 = v2;
    swift_release(v9);
    v42 = CRLWPShapeLayout.descendersCannotClip.getter;
    v43 = 0;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_10053C9E0;
    v41 = &unk_10126AE88;
    v11 = _Block_copy(&aBlock);
    v37 = objc_msgSend(v6, "_actionWithTitle:image:style:handler:shouldDismissHandler:", v3, 0, 0, v8, v11);
    _Block_release(v11);
    _Block_release(v8);

    v12 = objc_msgSend(v10, "redoMenuItemTitle");
    if (!v12)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v14 = v13;
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
    }
    v15 = swift_allocObject(&unk_10126AEC0, 24, 7);
    *(_QWORD *)(v15 + 16) = v10;
    v42 = sub_10054F150;
    v43 = v15;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_10053C98C;
    v41 = &unk_10126AED8;
    v16 = _Block_copy(&aBlock);
    v17 = v43;
    v18 = v10;
    swift_release(v17);
    v42 = CRLWPShapeLayout.descendersCannotClip.getter;
    v43 = 0;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_10053C9E0;
    v41 = &unk_10126AF00;
    v19 = _Block_copy(&aBlock);
    v20 = objc_msgSend(v6, "_actionWithTitle:image:style:handler:shouldDismissHandler:", v12, 0, 0, v16, v19);
    _Block_release(v19);
    _Block_release(v16);

    v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v22 = String._bridgeToObjectiveC()();
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v26 = v25;

    v27 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16, v0);
    swift_retain(v27);
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v42 = sub_10054F160;
    v43 = v27;
    aBlock = _NSConcreteStackBlock;
    v39 = *(_QWORD *)"";
    v40 = sub_1004C6194;
    v41 = &unk_10126AF28;
    v29 = _Block_copy(&aBlock);
    v30 = objc_msgSend(v6, "actionWithTitle:style:handler:", v28, 1, v29, swift_release(v43).n128_f64[0]);
    _Block_release(v29);
    swift_release(v27);

    if (v37 && v20)
    {
      v31 = v37;
      v32 = v20;
      objc_msgSend(v31, "setEnabled:", objc_msgSend(v18, "canUndo"));
      objc_msgSend(v32, "setEnabled:", objc_msgSend(v18, "canRedo"));
      v33 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v34 = swift_allocObject(v33, 56, 7);
      *(_OWORD *)(v34 + 16) = xmmword_100EF7300;
      *(_QWORD *)(v34 + 32) = v31;
      *(_QWORD *)(v34 + 40) = v32;
      *(_QWORD *)(v34 + 48) = v30;
      aBlock = (void **)v34;
      specialized Array._endMutation()(v34);
      v35 = aBlock;

    }
    else
    {
      v35 = (void **)_swiftEmptyArrayStorage;
      sub_100757E04(&_mh_execute_header, (uint64_t)"newUndoRedoActions()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1981, "Error creating undo/redo action", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newUndoRedoActions()", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 1981, (uint64_t)"Error creating undo/redo action", 31, 2u);

    }
  }
  else
  {
    v35 = (void **)_swiftEmptyArrayStorage;
    sub_100757E04(&_mh_execute_header, (uint64_t)"newUndoRedoActions()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1958, "No undo manager", 15, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newUndoRedoActions()", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 1958, (uint64_t)"No undo manager", 15, 2u);
  }
  return v35;
}

uint64_t sub_10053C610()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  v9 = (void *)static OS_dispatch_queue.main.getter();
  v10 = swift_allocObject(&unk_10126B5C8, 24, 7);
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_10054FE64;
  v22 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10126B5E0;
  v11 = _Block_copy(aBlock);
  v12 = v22;
  v13 = v1;
  v14 = swift_release(v12);
  static DispatchQoS.unspecified.getter(v14);
  aBlock[0] = _swiftEmptyArrayStorage;
  v15 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v17 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v2, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10053C824()
{
  unsigned __int8 v0;
  id v1;

  sub_10053BCC0();
  v0 = sub_100C34628();
  v1 = sub_100C1CDEC();
  objc_msgSend(v1, "setEnabled:", v0 & 1);

}

uint64_t sub_10053C87C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;
  uint64_t v8;
  _QWORD v10[4];

  swift_unknownObjectRetain(a3);
  v7 = a1;
  _bridgeAnyObjectToAny(_:)(v10, a3);
  v8 = swift_unknownObjectRelease(a3);
  a4(v8);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
}

void sub_10053C8E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController) = 0;

  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v2, "setApplicationSupportsShakeToEdit:", 1);

  v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController;
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController) == 1)
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray);
    if (v4)
      objc_msgSend(v4, "setToolTrayHidden:animated:", 0, 1);
    *(_BYTE *)(v0 + v3) = 0;
  }
}

void sub_10053C98C(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_10053C9E0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  LOBYTE(v1) = v1(v3);
  swift_release(v2);
  return v1 & 1;
}

void sub_10053CA18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  __n128 v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v9, 0, 0);
  v3 = (id)static OS_os_log.crlDefault;
  v5 = static os_log_type_t.default.getter(v4);
  sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "Cancelled undo", 14, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess(v2, &v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_10053C8E8();

  }
}

void sub_10053CAEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  char *v19;
  id v20;
  _QWORD aBlock[5];
  _QWORD *v22;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken);
  type metadata accessor for MainActor(0);
  swift_retain(v7);
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_10126A558, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v11 = sub_100521D5C((uint64_t)v4, (uint64_t)&unk_1013E18C8, (uint64_t)v10, (uint64_t)&unk_10126A5D0, (uint64_t *)&unk_1013E18E0, (uint64_t)&unk_1013FE750);
  swift_release(v11);
  v12 = *(_QWORD *)(v1 + v6);
  *(_QWORD *)(v1 + v6) = 0;
  swift_release(v12);
  v13 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert;
  v14 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert);
  if (v14)
  {
    v15 = *(void **)&v14[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert];
    if (v15)
    {
      v16 = (_QWORD *)swift_allocObject(&unk_10126A580, 40, 7);
      v16[3] = 0;
      v16[4] = 0;
      v16[2] = v14;
      aBlock[4] = sub_100541D18;
      v22 = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10126A598;
      v17 = _Block_copy(aBlock);
      v18 = v22;
      v19 = v14;
      v20 = v15;
      objc_msgSend(v20, "dismissViewControllerAnimated:completion:", 1, v17, swift_release(v18).n128_f64[0]);
      _Block_release(v17);

      v14 = *(char **)(v1 + v13);
    }
  }
  *(_QWORD *)(v1 + v13) = 0;

}

uint64_t sub_10053CCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[5] = v6;
  v4[6] = v7;
  return swift_task_switch(sub_10053CD4C, v6, v7);
}

uint64_t sub_10053CD4C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
    return swift_task_switch(sub_10053CDB0, v1, 0);
  v3 = swift_release(*(_QWORD *)(v0 + 32));
  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 24) == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10053CDB0()
{
  _QWORD *v0;

  objc_msgSend(*(id *)(v0[3] + 112), "cancel");
  return swift_task_switch(sub_10053CDF4, v0[5], v0[6]);
}

uint64_t sub_10053CDF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 24) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053CE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v6 + 264) = a6;
  *(_QWORD *)(v6 + 128) = a4;
  *(_QWORD *)(v6 + 136) = a5;
  v7 = sub_1004B804C(&qword_1013E04D0);
  *(_QWORD *)(v6 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  *(_QWORD *)(v6 + 152) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 160) = v9;
  *(_QWORD *)(v6 + 168) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 176) = v10;
  *(_QWORD *)(v6 + 184) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 192) = v11;
  *(_QWORD *)(v6 + 200) = v12;
  return swift_task_switch(sub_10053CEF4, v11, v12);
}

uint64_t sub_10053CEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken));
    sub_100757E04(&_mh_execute_header, (uint64_t)"didSubmit(url:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2016, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didSubmit(url:didChange:)", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2016, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
    swift_release(v3);
  }
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  swift_unknownObjectWeakInit(v0 + 112);
  sub_1004CB7BC(v7, v6, &qword_1013E04D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) == 1)
  {
    v8 = *(_QWORD *)(v0 + 144);
    swift_release(*(_QWORD *)(v0 + 184));
    sub_1004CB800(v8, &qword_1013E04D0);
LABEL_8:
    sub_10053D50C(v0 + 112);
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 144);
    swift_unknownObjectWeakDestroy(v0 + 112);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(unsigned __int8 *)(v0 + 264);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
  if (v9 != 1 || *(_QWORD *)(v1 + v2))
  {
    v10 = *(_QWORD *)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    swift_release(v10);
    goto LABEL_8;
  }
  v14 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 152);
  v17 = sub_100C1CC20();
  v18 = sub_1004B804C(&qword_1013E1910);
  v19 = *(unsigned __int8 *)(v14 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v18, v20 + *(_QWORD *)(v14 + 72), v19 | 7);
  *(_OWORD *)(v21 + 16) = xmmword_100EF5E40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v21 + v20, v15, v16);
  v22 = sub_10053D6B0(v21, 0, 0);
  *(_QWORD *)(v0 + 208) = v22;
  v23 = v22;
  swift_bridgeObjectRelease(v21);
  swift_release(v17);
  v24 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v23;
  swift_retain(v23);
  swift_release(v24);
  v25 = sub_100C1CC20();
  *(_QWORD *)(v0 + 216) = v25;
  *(_QWORD *)(v0 + 224) = static MainActor.shared.getter(v25);
  return swift_task_switch(sub_10053D320, v23, 0);
}

uint64_t sub_10053D320()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[22];
  v0[29] = *(_QWORD *)(v0[26] + 112);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[30] = v2;
  v0[31] = v3;
  return swift_task_switch(sub_10053D37C, v2, v3);
}

uint64_t sub_10053D37C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1013E1918 + dword_1013E1918);
  v1 = (_QWORD *)swift_task_alloc(unk_1013E191C);
  *(_QWORD *)(v0 + 256) = v1;
  *v1 = v0;
  v1[1] = sub_10053D3E0;
  return v3(*(_QWORD *)(v0 + 232));
}

uint64_t sub_10053D3E0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));
  return swift_task_switch(sub_10053D42C, *(_QWORD *)(v1 + 240), *(_QWORD *)(v1 + 248));
}

uint64_t sub_10053D42C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 216);

  swift_release(v1);
  return swift_task_switch(sub_10053D48C, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
}

uint64_t sub_10053D48C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_10053D50C(v0 + 112);
  v2 = swift_release(v1);
  (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152), v2);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  swift_unknownObjectWeakDestroy(v0 + 112);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10053D50C(uint64_t a1)
{
  uint64_t Strong;
  void *v3;
  void *v4;
  char *v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  char *v10;
  char *v11;
  void *v12;
  char *v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[5];
  _QWORD *v18;
  char v19[24];

  swift_beginAccess(a1, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert);
    v5 = v4;

    if (v4)
    {
      v6 = *(void **)&v5[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert];
      if (v6)
      {
        v7 = (_QWORD *)swift_allocObject(&unk_10126A7E0, 40, 7);
        v7[3] = 0;
        v7[4] = 0;
        v7[2] = v5;
        aBlock[4] = sub_100550110;
        v18 = v7;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(_QWORD *)"";
        aBlock[2] = sub_1005D2FC0;
        aBlock[3] = &unk_10126A7F8;
        v8 = _Block_copy(aBlock);
        v9 = v18;
        v10 = v5;
        v5 = v6;
        objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, v8, swift_release(v9).n128_f64[0]);
        _Block_release(v8);

      }
    }
  }
  swift_beginAccess(a1, aBlock, 0, 0);
  v11 = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (v11)
  {
    v12 = *(void **)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert];
    *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = 0;

  }
  swift_beginAccess(a1, &v16, 0, 0);
  v13 = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (v13)
  {
    v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken];
    *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken] = 0;

    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_10053D6B0(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v9;
  char *v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  _BYTE *v17;
  __n128 v18;
  unint64_t v19;
  __n128 v20;
  _BYTE *v21;
  id v22;
  id v23;
  id v24;
  Class isa;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  id v32;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + 16);
  if (!Strong
    || (v9 = Strong,
        v10 = (char *)objc_msgSend(Strong, "editingCoordinator"),
        v9,
        !v10))
  {
    v16 = sub_10054CE74();
    swift_allocError(&type metadata for CRLBoardItemInsertingError, v16, 0, 0);
    *v17 = 1;
    swift_willThrow(v18);
    return a3;
  }
  v11 = *(id *)&v10[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

  if (!*(_QWORD *)(a1 + 16))
  {
    v19 = sub_10054CE74();
    swift_allocError(&type metadata for CRLBoardItemInsertingError, v19, 0, 0);
    *v21 = 0;
LABEL_14:
    swift_willThrow(v20);

    return a3;
  }
  if (a2 || (a3 & 1) != 0)
  {
    v22 = a2;
    swift_bridgeObjectRetain(a1);
LABEL_12:
    v23 = objc_allocWithZone((Class)CRLMultipleItemImporter);
    type metadata accessor for URL(0);
    v24 = v11;
    swift_bridgeObjectRetain(a1);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v26 = objc_msgSend(v23, "initWithURLs:boardItemFactory:importAnimatedGIFsAsImages:", isa, v24, 0, swift_bridgeObjectRelease(a1).n128_f64[0]);

    v27 = type metadata accessor for CRLBoardItemInsertingCancellable();
    a3 = swift_allocObject(v27, 136, 15);
    v28 = v26;
    swift_defaultActor_initialize(a3, v29);
    *(_QWORD *)(a3 + 112) = v28;
    *(_QWORD *)(a3 + 120) = a2;
    *(_QWORD *)(a3 + 128) = a1;

    return a3;
  }
  v12 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v13 = String._bridgeToObjectiveC()();
  v32 = 0;
  a2 = objc_msgSend(v12, "initWithSignature:error:", v13, &v32);

  a3 = (uint64_t)v32;
  if (!a2)
  {
    v30 = v32;
    _convertNSErrorToError(_:)(a3);

    goto LABEL_14;
  }
  v14 = v32;
  a3 = (uint64_t)a2;
  v15 = sub_10054D788(a1, (void *)a3);
  if (!v4)
  {
    a1 = (uint64_t)v15;

    goto LABEL_12;
  }

  return a3;
}

double sub_10053D958(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double result;
  uint64_t v21;

  v5 = sub_1004B804C(&qword_1013E04D0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1004CB7BC(a1, (uint64_t)v8, &qword_1013E04D0);
  type metadata accessor for MainActor(0);
  v13 = v2;
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 40) & ~v15;
  v17 = v16 + v7;
  v18 = (_QWORD *)swift_allocObject(&unk_10126A5F8, v16 + v7 + 1, v15 | 7);
  v18[2] = v14;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v13;
  sub_1004C4938((uint64_t)v8, (uint64_t)v18 + v16, &qword_1013E04D0);
  *((_BYTE *)v18 + v17) = a2;
  v19 = sub_100521BF0((uint64_t)v11, (uint64_t)&unk_1013E18F8, (uint64_t)v18, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

void sub_10053DAE8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void *v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  __n128 v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char v53[72];
  _QWORD aBlock[5];
  uint64_t v55;
  char v56[72];
  char v57[112];
  char v58[32];

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    if (qword_1013DD7B0 != -1)
      swift_once(&qword_1013DD7B0, sub_100A03678);
    swift_beginAccess(&static OS_os_log.crlInsertMedia, v58, 0, 0);
    v6 = (void *)static OS_os_log.crlInsertMedia;
    v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v7, v57);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v9 = sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
    *(_QWORD *)(inited + 56) = v9;
    v10 = sub_10054DE58();
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 96) = &type metadata for Int;
    *(_QWORD *)(inited + 104) = &protocol witness table for Int;
    *(_QWORD *)(inited + 64) = v10;
    *(_QWORD *)(inited + 72) = v4;
    v11 = v6;
    v12 = a1;
    v14 = static os_log_type_t.default.getter(v13);
    sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v14, "Photo picker (%p) picked %d result(s).", 38, 2, inited);
    swift_setDeallocating(inited);
    v15 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v15);

    v16 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress;
    if (*(_QWORD *)(v52 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress))
    {
      v17 = (void *)static OS_os_log.crlInsertMedia;
      v18 = swift_initStackObject(v7, v56);
      *(_OWORD *)(v18 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v18 + 56) = v9;
      *(_QWORD *)(v18 + 64) = v10;
      *(_QWORD *)(v18 + 32) = v12;
      v19 = v12;
      v20 = v17;
      v22 = static os_log_type_t.default.getter(v21);
      sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v22, "Already loading. Ignoring results from photo picker (%p).", 57, 2, v18);
      swift_setDeallocating(v18);
      swift_arrayDestroy(v18 + 32, 1, v15);

    }
    else
    {
      v35 = (void *)objc_opt_self(CRLIngestionTypes);
      v36 = objc_msgSend(v35, "supportedImageTypes");
      v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, &type metadata for String);

      v38 = objc_msgSend(v35, "supportedMovieTypes");
      v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, &type metadata for String);

      sub_10061EAEC(v39);
      v40 = swift_allocObject(&unk_10126A830, 17, 7);
      *(_BYTE *)(v40 + 16) = 0;
      v41 = swift_allocObject(&unk_10126A858, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16);
      v42 = (_QWORD *)swift_allocObject(&unk_10126A880, 48, 7);
      v42[2] = v41;
      v42[3] = v12;
      v42[4] = v40;
      v42[5] = a2;
      v43 = v12;
      swift_retain(v41);
      swift_retain(v40);
      v44 = swift_bridgeObjectRetain(a2);
      v46 = PHPickerViewController.crl_loadFileRepresentations(for:supportedTypeIdentifiers:completionHandler:)(v45, v37, (uint64_t)sub_10054DF20, (uint64_t)v42, v44);
      swift_release(v41);
      swift_release(v42);
      swift_bridgeObjectRelease(v37);
      v47 = swift_allocObject(&unk_10126A858, 24, 7);
      swift_unknownObjectWeakInit(v47 + 16);
      v48 = swift_allocObject(&unk_10126A8A8, 32, 7);
      *(_QWORD *)(v48 + 16) = v40;
      *(_QWORD *)(v48 + 24) = v47;
      aBlock[4] = sub_10054DF38;
      v55 = v48;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_10126A8C0;
      v49 = _Block_copy(aBlock);
      v50 = v55;
      swift_retain(v40);
      swift_retain(v47);
      sub_1004C0F54((uint64_t)sub_10054DF38, v48);
      objc_msgSend(v46, "setCancellationHandler:", v49, swift_release(v50).n128_f64[0]);
      _Block_release(v49);
      swift_release(v47);
      swift_release(v48);
      v51 = *(void **)(v52 + v16);
      *(_QWORD *)(v52 + v16) = v46;
      swift_release(v40);

    }
  }
  else
  {
    if (qword_1013DD7B0 != -1)
      swift_once(&qword_1013DD7B0, sub_100A03678);
    swift_beginAccess(&static OS_os_log.crlInsertMedia, aBlock, 0, 0);
    v23 = (void *)static OS_os_log.crlInsertMedia;
    v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v25 = swift_initStackObject(v24, v53);
    *(_OWORD *)(v25 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v25 + 56) = sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
    *(_QWORD *)(v25 + 64) = sub_10054DE58();
    *(_QWORD *)(v25 + 32) = a1;
    v26 = a1;
    v27 = v23;
    v29 = static os_log_type_t.default.getter(v28);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v29, "Dismissing photo picker (%p) with empty results.", 48, 2, v25);
    swift_setDeallocating(v25);
    v30 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v25 + 32, 1, v30);

    v31 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress;
    v32 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress);
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v33, "cancel");
      v34 = *(void **)(v2 + v31);
      *(_QWORD *)(v2 + v31) = 0;

    }
    else
    {
      objc_msgSend(v26, "dismissViewControllerAnimated:completion:", 1, 0);
    }
  }
}

void sub_10053E068(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  char *Strong;
  void *v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  id v20;
  id v21;
  _QWORD aBlock[5];
  _QWORD *v23;
  char v24[24];

  v14 = a4 + 16;
  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2076, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"picker(_:didFinishPicking:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2076, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  swift_beginAccess(v14, v24, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v14);
  if (Strong)
  {
    v16 = *(void **)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;

  }
  v17 = (_QWORD *)swift_allocObject(&unk_10126A8F8, 72, 7);
  v17[2] = a6;
  v17[3] = a5;
  v17[4] = a2;
  v17[5] = a4;
  v17[6] = a1;
  v17[7] = a3;
  v17[8] = a7;
  aBlock[4] = sub_10054DF94;
  v23 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10126A910;
  v18 = _Block_copy(aBlock);
  v19 = v23;
  swift_retain(a6);
  v20 = a5;
  swift_bridgeObjectRetain(a2);
  swift_retain(a4);
  v21 = a1;
  swift_errorRetain(a3);
  swift_bridgeObjectRetain(a7);
  objc_msgSend(v20, "dismissViewControllerAnimated:completion:", 1, v18, swift_release(v19).n128_f64[0]);
  _Block_release(v18);
}

void sub_10053E294(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[24];
  id v72[3];
  _BYTE v73[72];
  _QWORD v74[3];
  _BYTE v75[32];

  v14 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a4 + 16;
  swift_beginAccess(a1 + 16, v75, 0, 0);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (qword_1013DD7B0 != -1)
      swift_once(&qword_1013DD7B0, sub_100A03678);
    swift_beginAccess(&static OS_os_log.crlInsertMedia, v71, 0, 0);
    v18 = (void *)static OS_os_log.crlInsertMedia;
    v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v19, &v68);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
    *(_QWORD *)(inited + 64) = sub_10054DE58();
    *(_QWORD *)(inited + 32) = a2;
    v21 = v18;
    v22 = a2;
    v24 = static os_log_type_t.default.getter(v23);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v24, "Assets ready but photo picker (%p) loading progress was cancelled.", 66, 2, inited);
    swift_setDeallocating(inited);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v25);

  }
  else if (a3)
  {
    v26 = *(_QWORD *)(a3 + 16);
    if (v26)
    {
      swift_beginAccess(v17, v71, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v17);
      if (Strong)
      {
        v65 = (void *)Strong;
        v66 = v17;
        v67 = a7;
        if (qword_1013DD7B0 != -1)
          swift_once(&qword_1013DD7B0, sub_100A03678);
        swift_beginAccess(&static OS_os_log.crlInsertMedia, &v70, 0, 0);
        v28 = (void *)static OS_os_log.crlInsertMedia;
        v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v30 = swift_initStackObject(v29, &v69);
        *(_OWORD *)(v30 + 16) = xmmword_100EF5A10;
        *(_QWORD *)(v30 + 56) = &type metadata for Int;
        *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
        *(_QWORD *)(v30 + 32) = v26;
        *(_QWORD *)(v30 + 96) = sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
        *(_QWORD *)(v30 + 104) = sub_10054DE58();
        *(_QWORD *)(v30 + 72) = a2;
        v31 = a2;
        v32 = v28;
        v34 = static os_log_type_t.default.getter(v33);
        sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v34, "Inserting %d file URL(s) from photo picker (%p).", 48, 2, v30);
        swift_setDeallocating(v30);
        v35 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v30 + 32, 2, v35);

        v36 = v65;
        v37 = sub_100C1CC20();
        static TaskPriority.userInitiated.getter();
        v38 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v16, 0, 1, v38);
        type metadata accessor for MainActor(0);
        v39 = a5;
        swift_retain(v37);
        swift_bridgeObjectRetain(a3);
        v41 = static MainActor.shared.getter(v40);
        v42 = (_QWORD *)swift_allocObject(&unk_10126A948, 72, 7);
        v42[2] = v41;
        v42[3] = &protocol witness table for MainActor;
        v42[4] = v37;
        v42[5] = a3;
        v42[7] = 0;
        v42[8] = 0;
        v42[6] = a5;
        v43 = sub_100521BF0((uint64_t)v16, (uint64_t)&unk_1013E1968, (uint64_t)v42, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        swift_release(v37);

        swift_release(v43);
        v17 = v66;
        a7 = v67;
      }
    }
  }
  if (a6)
  {
    v74[0] = a6;
    swift_errorRetain(a6);
    v44 = sub_1004B804C(&qword_1013E0210);
    v45 = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    if ((swift_dynamicCast(v72, v74, v44, v45, 6) & 1) != 0)
    {
      v46 = v72[0];
      if ((objc_msgSend(v72[0], "crl_isCancelError") & 1) == 0)
      {
        if (qword_1013DD7B0 != -1)
          swift_once(&qword_1013DD7B0, sub_100A03678);
        swift_beginAccess(&static OS_os_log.crlInsertMedia, v74, 0, 0);
        v47 = (void *)static OS_os_log.crlInsertMedia;
        v48 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v49 = swift_initStackObject(v48, v73);
        *(_OWORD *)(v49 + 16) = xmmword_100EF5E40;
        v50 = v47;
        v46 = v46;
        v51 = objc_msgSend(v46, "description");
        v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
        v54 = v53;

        *(_QWORD *)(v49 + 56) = &type metadata for String;
        v55 = sub_1004CFC2C();
        *(_QWORD *)(v49 + 64) = v55;
        *(_QWORD *)(v49 + 32) = v52;
        *(_QWORD *)(v49 + 40) = v54;
        v56 = static os_log_type_t.error.getter(v55);
        sub_100A06EBC((uint64_t)v50, &_mh_execute_header, v56, "Error loading files from photo picker: %@", 41, 2, v49);
        swift_setDeallocating(v49);
        v57 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v49 + 32, 1, v57);

        sub_100DE35F8(a7);
        v59 = v58;
        swift_beginAccess(v17, v72, 0, 0);
        v60 = swift_unknownObjectWeakLoadStrong(v17);
        if (v60)
        {
          v61 = (void *)v60;
          v62 = objc_retain(*(id *)(v60
                                  + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController));

          v59 = v59;
          v63 = (void *)_convertErrorToNSError(_:)(v59);

          objc_msgSend(v62, "presentError:completionHandler:", v63, 0);
        }

      }
    }
  }
}

void sub_10053E87C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a1 + 16, v7, 1, 0);
  *(_BYTE *)(a1 + 16) = 1;
  swift_beginAccess(v3, &v6, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = *(void **)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;

  }
}

void sub_10053EA14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    swift_unknownObjectWeakAssign(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cameraPicker, a1);

  }
}

void sub_10053EA94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10053EAEC(a2);

  }
}

double sub_10053EAEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSString *v23;
  __n128 v24;
  uint64_t v25;
  char v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  NSString v32;
  NSString *v33;
  __n128 v34;
  uint64_t v35;
  char v36;
  double result;
  NSString v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  unsigned int v43;
  NSString *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  NSData *v54;
  NSData *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  NSString v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t inited;
  uint64_t v71;
  id v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  NSString *v77;
  __n128 v78;
  uint64_t v79;
  char v80;
  int v81;
  uint64_t v82;
  char *v83;
  id v84;
  NSString v85;
  uint64_t v86;
  NSString v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  __n128 v93;
  uint64_t (*v94)(char *, uint64_t, __n128);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  __n128 v100;
  void *v101;
  id v102;
  NSURL *v103;
  void *v104;
  void *v105;
  uint64_t v106;
  id v107;
  id v108;
  uint64_t v109;
  __n128 v110;
  id v111;
  NSURL *v112;
  void *v113;
  void *v114;
  NSURL *v115;
  void *v116;
  void *v117;
  unsigned int v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  __n128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  __int128 v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  __int128 v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  char v150[72];
  __int128 v151;
  __int128 v152;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  *(_QWORD *)&v146 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v143 = (char *)&v139 - v14;
  __chkstk_darwin(v15);
  v145 = (char *)&v139 - v16;
  __chkstk_darwin(v17);
  v144 = (char *)&v139 - v18;
  v19 = type metadata accessor for UTType(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v151 = 0u;
    v152 = 0u;
    goto LABEL_11;
  }
  v141 = v6;
  v142 = v10;
  v23 = UIImagePickerControllerMediaType;
  v25 = sub_100842FAC(v23, v24);
  if ((v26 & 1) == 0)
  {
    v151 = 0u;
    v152 = 0u;

    goto LABEL_11;
  }
  sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v25, (uint64_t)&v151);

  if (!*((_QWORD *)&v152 + 1))
  {
LABEL_11:
    sub_1004CB800((uint64_t)&v151, &qword_1013E0230);
    goto LABEL_12;
  }
  if ((swift_dynamicCast(&v148, &v151, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_12:
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2154, "No media type", 13, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2154, (uint64_t)"No media type", 13, 2u);
    return result;
  }
  v139 = v2;
  v140 = v148;
  v27 = String._bridgeToObjectiveC()();
  v28 = static UTType.image.getter();
  UTType.identifier.getter(v28);
  v30 = v29;
  v31 = *(void (**)(char *, uint64_t))(v20 + 8);
  v31(v22, v19);
  v32 = String._bridgeToObjectiveC()();
  LODWORD(v30) = objc_msgSend(v27, "crl_conformsToUTI:", v32, swift_bridgeObjectRelease(v30).n128_f64[0]);

  if ((_DWORD)v30)
  {
    swift_bridgeObjectRelease(*((_QWORD *)&v140 + 1));
    if (*(_QWORD *)(a1 + 16))
    {
      v33 = UIImagePickerControllerEditedImage;
      v35 = sub_100842FAC(v33, v34);
      if ((v36 & 1) != 0)
      {
        sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v35, (uint64_t)&v148);
      }
      else
      {
        v148 = 0u;
        v149 = 0u;
      }

      if (*((_QWORD *)&v149 + 1))
      {
        sub_10050CB14(&v148, &v151);
        if (!*((_QWORD *)&v152 + 1))
          goto LABEL_27;
        goto LABEL_21;
      }
      if (*(_QWORD *)(a1 + 16))
      {
        v77 = UIImagePickerControllerOriginalImage;
        v79 = sub_100842FAC(v77, v78);
        if ((v80 & 1) != 0)
        {
          sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v79, (uint64_t)&v151);
        }
        else
        {
          v151 = 0u;
          v152 = 0u;
        }

LABEL_20:
        sub_1004CB800((uint64_t)&v148, &qword_1013E0230);
        if (!*((_QWORD *)&v152 + 1))
        {
LABEL_27:
          sub_1004CB800((uint64_t)&v151, &qword_1013E0230);
          goto LABEL_28;
        }
LABEL_21:
        v52 = sub_1004B8930(0, &qword_1013E1CE0, UIImage_ptr);
        if ((swift_dynamicCast(&v148, &v151, (char *)&type metadata for Any + 8, v52, 6) & 1) != 0)
        {
          v53 = (void *)v148;
          v54 = UIImageJPEGRepresentation((UIImage *)v148, 0.8);
          if (v54)
          {
            v55 = v54;
            v56 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v54);
            v58 = v57;

            v59 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v60 = String._bridgeToObjectiveC()();
            v61 = String._bridgeToObjectiveC()();
            v62 = objc_msgSend(v59, "localizedStringForKey:value:table:", v60, v61, 0);

            v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
            v65 = v64;

            *(_QWORD *)&v151 = 1735420462;
            *((_QWORD *)&v151 + 1) = 0xE400000000000000;
            *(_QWORD *)&v148 = v63;
            *((_QWORD *)&v148 + 1) = v65;
            v66 = swift_bridgeObjectRetain(v65);
            *(_QWORD *)&v148 = String.init<A>(_:)(&v148, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v66);
            *((_QWORD *)&v148 + 1) = v67;
            String.append<A>(contentsOf:)(&v151, &type metadata for String, &protocol witness table for String);
            swift_bridgeObjectRelease(v65);
            v68 = v148;
            v69 = sub_1004B804C(&qword_1013E1CE8);
            inited = swift_initStackObject(v69, &v147);
            v146 = xmmword_100EF5E40;
            *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
            *(_QWORD *)(inited + 32) = v56;
            *(_QWORD *)(inited + 40) = v58;
            *(_OWORD *)(inited + 48) = v68;
            sub_1004BE310(v56, v58);
            swift_bridgeObjectRetain(*((_QWORD *)&v68 + 1));
            sub_1005341C0(inited);
            swift_setDeallocating(inited);
            v71 = sub_1004B804C(&qword_1013E1CF0);
            swift_arrayDestroy(inited + 32, 1, v71);

            sub_1004BBBC8(v56, v58);
            *(_QWORD *)&result = swift_bridgeObjectRelease(*((_QWORD *)&v68 + 1)).n128_u64[0];
            return result;
          }
          sub_100757E04(&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2160, "Unable to get image data", 24, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2160, (uint64_t)"Unable to get image data", 24, 2u);

          goto LABEL_29;
        }
LABEL_28:
        sub_100757E04(&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2159, "Bad image info", 14, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2159, (uint64_t)"Bad image info", 14, 2u);
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
LABEL_29:
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        swift_beginAccess(&static OS_os_log.crlDefault, &v151, 0, 0);
        v72 = (id)static OS_os_log.crlDefault;
        v73 = static os_log_type_t.error.getter(v72);
        v74 = "No image to insert";
        v75 = (uint64_t)v72;
        v76 = 18;
LABEL_48:
        sub_100A06EBC(v75, &_mh_execute_header, v73, v74, v76, 2, (uint64_t)_swiftEmptyArrayStorage);

        return result;
      }
    }
    else
    {
      v148 = 0u;
      v149 = 0u;
    }
    v151 = 0u;
    v152 = 0u;
    goto LABEL_20;
  }
  v38 = String._bridgeToObjectiveC()();
  v39 = static UTType.movie.getter();
  UTType.identifier.getter(v39);
  v41 = v40;
  v31(v22, v19);
  v42 = String._bridgeToObjectiveC()();
  v43 = objc_msgSend(v38, "crl_conformsToUTI:", v42, swift_bridgeObjectRelease(v41).n128_f64[0]);

  if (!v43)
  {
    v49 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v50 = swift_initStackObject(v49, v150);
    *(_OWORD *)(v50 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v50 + 56) = &type metadata for String;
    *(_QWORD *)(v50 + 64) = sub_1004CFC2C();
    *(_OWORD *)(v50 + 32) = v140;
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2186, "Bad media type: %@", 18, 2u, v50);
    sub_1004F5394(v50, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2186, (uint64_t)"Bad media type: %@", 18, 2u);
    swift_setDeallocating(v50);
    v51 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v50 + 32, 1, v51);
    return result;
  }
  swift_bridgeObjectRelease(*((_QWORD *)&v140 + 1));
  if (!*(_QWORD *)(a1 + 16))
  {
    v148 = 0u;
    v149 = 0u;
LABEL_39:
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2171, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v47 = v142;
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertImagePickerMediaWithInfo(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2171, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    goto LABEL_40;
  }
  v44 = UIImagePickerControllerMediaURL;
  v46 = sub_100842FAC(v44, v45);
  v47 = v142;
  if ((v48 & 1) != 0)
  {
    sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v46, (uint64_t)&v148);
  }
  else
  {
    v148 = 0u;
    v149 = 0u;
  }

  if (!*((_QWORD *)&v149 + 1))
    goto LABEL_39;
LABEL_40:
  sub_1004C4938((uint64_t)&v148, (uint64_t)&v151, &qword_1013E0230);
  if (!*((_QWORD *)&v152 + 1))
  {
    sub_1004CB800((uint64_t)&v151, &qword_1013E0230);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v9, 1, 1, v47);
    goto LABEL_45;
  }
  v81 = swift_dynamicCast(v9, &v151, (char *)&type metadata for Any + 8, v47, 6);
  v82 = v146;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v9, v81 ^ 1u, 1, v47);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v9, 1, v47) == 1)
  {
LABEL_45:
    sub_1004CB800((uint64_t)v9, &qword_1013E04D0);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, &v151, 0, 0);
    v72 = (id)static OS_os_log.crlDefault;
    v73 = static os_log_type_t.error.getter(v72);
    v74 = "No movie URL to insert";
    v75 = (uint64_t)v72;
    v76 = 22;
    goto LABEL_48;
  }
  v83 = v144;
  (*(void (**)(void))(v82 + 32))();
  v84 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v85 = String._bridgeToObjectiveC()();
  v86 = v82;
  v87 = String._bridgeToObjectiveC()();
  v88 = objc_msgSend(v84, "localizedStringForKey:value:table:", v85, v87, 0);

  v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
  v91 = v90;

  URL.deletingLastPathComponent()();
  v92 = v143;
  URL.appendingPathComponent(_:)(v89, v91);
  v93 = swift_bridgeObjectRelease(v91);
  v94 = *(uint64_t (**)(char *, uint64_t, __n128))(v86 + 8);
  v95 = v94(v12, v47, v93);
  v96 = URL.pathExtension.getter(v95);
  v98 = v97;
  v99 = v145;
  URL.appendingPathExtension(_:)(v96);
  v100 = swift_bridgeObjectRelease(v98);
  v94(v92, v47, v100);
  v101 = (void *)objc_opt_self(NSFileManager);
  v102 = objc_msgSend(v101, "defaultManager");
  URL._bridgeToObjectiveC()(v103);
  v105 = v104;
  *(_QWORD *)&v151 = 0;
  LODWORD(v91) = objc_msgSend(v102, "removeItemAtURL:error:", v104, &v151);

  v106 = v151;
  if ((_DWORD)v91)
  {
    v107 = (id)v151;
  }
  else
  {
    v108 = (id)v151;
    v109 = _convertNSErrorToError(_:)(v106);

    swift_willThrow(v110);
    swift_errorRelease(v109);
  }
  v111 = objc_msgSend(v101, "defaultManager");
  URL._bridgeToObjectiveC()(v112);
  v114 = v113;
  URL._bridgeToObjectiveC()(v115);
  v117 = v116;
  *(_QWORD *)&v151 = 0;
  v118 = objc_msgSend(v111, "moveItemAtURL:toURL:error:", v114, v116, &v151);

  v119 = v151;
  if (v118)
  {
    v120 = (id)v151;
    v121 = v142;
    ((void (*)(char *, uint64_t))v94)(v83, v142);
    v122 = v146;
    (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v83, v99, v121);
    v123 = (uint64_t)v141;
  }
  else
  {
    v124 = (id)v151;
    v125 = _convertNSErrorToError(_:)(v119);

    swift_willThrow(v126);
    swift_errorRelease(v125);
    v123 = (uint64_t)v141;
    v121 = v142;
    v122 = v146;
  }
  v127 = sub_100C1CC20();
  v128 = sub_1004B804C(&qword_1013E1910);
  v129 = *(unsigned __int8 *)(v122 + 80);
  v130 = (v129 + 32) & ~v129;
  v131 = swift_allocObject(v128, v130 + *(_QWORD *)(v122 + 72), v129 | 7);
  *(_OWORD *)(v131 + 16) = xmmword_100EF5E40;
  v132 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v122 + 16))(v131 + v130, v83, v121);
  static TaskPriority.userInitiated.getter(v132);
  v133 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56))(v123, 0, 1, v133);
  type metadata accessor for MainActor(0);
  swift_retain(v127);
  swift_bridgeObjectRetain(v131);
  v135 = static MainActor.shared.getter(v134);
  v136 = (_QWORD *)swift_allocObject(&unk_10126B550, 72, 7);
  v136[2] = v135;
  v136[3] = &protocol witness table for MainActor;
  v136[4] = v127;
  v136[5] = v131;
  v136[7] = 0;
  v136[8] = 0;
  v136[6] = 0;
  v137 = sub_100521BF0(v123, (uint64_t)&unk_1013E1CD8, (uint64_t)v136, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
  swift_release(v127);
  swift_bridgeObjectRelease(v131);
  v138 = swift_release(v137);
  v94(v99, v121, v138);
  ((void (*)(char *, uint64_t))v94)(v83, v121);
  return result;
}

void sub_10053FD44(char a1, char *a2)
{
  void *v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  void *v26;
  id v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v30;

  if ((a1 & 1) != 0)
  {
    v28 = objc_msgSend(objc_allocWithZone((Class)VNDocumentCameraViewController), "init");
    objc_msgSend(v28, "setDelegate:", a2);
    swift_unknownObjectWeakAssign(&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_documentScanner], v28);
    objc_msgSend(a2, "presentViewController:animated:completion:", v28, 1, 0);

  }
  else
  {
    v3 = (void *)objc_opt_self(NSBundle);
    v4 = objc_msgSend(v3, "mainBundle");
    v5 = String._bridgeToObjectiveC()();
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v9 = v8;

    v10 = objc_msgSend(v3, "mainBundle");
    v11 = String._bridgeToObjectiveC()();
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

    v19 = objc_msgSend(v3, "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v24 = v23;

    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    v30 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_10126B180;
    v26 = _Block_copy(aBlock);
    swift_release(v30);
    v27 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v25, 0, v26);
    _Block_release(v26);

    objc_msgSend(v18, "addAction:", v27);
    objc_msgSend(a2, "presentViewController:animated:completion:", v18, 1, 0);

  }
}

void sub_10054010C(void *a1, void *a2)
{
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  _QWORD *v31;
  id v32;
  _QWORD aBlock[5];
  _QWORD *v35;
  char v36[112];
  char v37[32];

  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = objc_msgSend(a2, "title");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)&v14 = swift_bridgeObjectRelease(v13).n128_u64[0];
  v15 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v15 = v11 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    v16 = objc_msgSend(a2, "title", v14);
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

  }
  else
  {
    swift_bridgeObjectRetain(v9);
    v17 = v7;
    v19 = v9;
  }
  v20 = objc_msgSend(a2, "pageCount");
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v37, 0, 0);
  v21 = (void *)static OS_os_log.crlDefault;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v22, v36);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = sub_1004CFC2C();
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 80) = v19;
  v24 = v21;
  v26 = static os_log_type_t.default.getter(v25);
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "Document camera finished %d page scan with title: %@", 52, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v27);

  v28 = swift_allocObject(&unk_10126A858, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16);
  v29 = (_QWORD *)swift_allocObject(&unk_10126B488, 56, 7);
  v29[2] = v20;
  v29[3] = a2;
  v29[4] = v7;
  v29[5] = v9;
  v29[6] = v28;
  aBlock[4] = sub_10054FCEC;
  v35 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10126B4A0;
  v30 = _Block_copy(aBlock);
  v31 = v35;
  v32 = a2;
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, v30, swift_release(v31).n128_f64[0]);
  _Block_release(v30);
}

uint64_t sub_100540448(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t i;
  id v24;
  id v25;
  void *v26;
  id v28;
  NSString v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  NSString v42;
  id v43;
  uint64_t v44;
  double v45;
  id v46;
  void *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  id v61;
  char *v62;
  __n128 v63;
  void (*v64)(char *, uint64_t, __n128);
  NSURL *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t Strong;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  id v98;
  id v99[3];
  char v100[72];

  v95 = a3;
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v86 - v17;
  v19 = type metadata accessor for UTType(0);
  v94 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v93 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_msgSend(objc_allocWithZone((Class)PDFDocument), "init");
  if (a1 < 0)
    __break(1u);
  v90 = v19;
  v91 = v15;
  v92 = a4;
  v88 = a5;
  v89 = v13;
  v87 = v11;
  v96 = v18;
  v97 = v12;
  v98 = v21;
  if (a1)
  {
    v22 = 0;
    for (i = 0; a1 != i; ++i)
    {
      v24 = objc_msgSend(a2, "imageOfPageAtIndex:", i);
      v25 = objc_msgSend(objc_allocWithZone((Class)PDFPage), "initWithImage:", v24);
      if (v25)
      {
        v26 = v25;
        objc_msgSend(v98, "insertPage:atIndex:", v25, v22);

        if (__OFADD__(v22++, 1))
        {
          __break(1u);
          break;
        }
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2234, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2234, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      }
    }
  }
  v28 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v29 = String._bridgeToObjectiveC()();
  v99[0] = 0;
  v30 = objc_msgSend(v28, "initWithSignature:error:", v29, v99);

  v31 = v99[0];
  if (v30)
  {
    v32 = v30;
    v33 = v31;
    v34 = v95;
    v35 = v92;
    v36 = String._bridgeToObjectiveC()();
    v37 = v93;
    v38 = static UTType.pdf.getter();
    UTType.preferredFilenameExtension.getter(v38);
    v40 = v39;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v90);
    if (v40)
      v41 = v40;
    else
      v41 = 0xE300000000000000;
    v42 = String._bridgeToObjectiveC()();
    v43 = objc_msgSend(v36, "stringByAppendingPathExtension:", v42, swift_bridgeObjectRelease(v41).n128_f64[0]);

    if (v43)
    {
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v35 = v44;

    }
    else
    {
      *(_QWORD *)&v45 = swift_bridgeObjectRetain(v35).n128_u64[0];
    }
    v57 = v97;
    v58 = v98;
    v59 = v96;
    v60 = v89;
    v61 = objc_msgSend(v32, "URL", v45);
    v62 = v91;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v61);

    URL.appendingPathComponent(_:isDirectory:)(v34, v35, 0);
    v63 = swift_bridgeObjectRelease(v35);
    v64 = *(void (**)(char *, uint64_t, __n128))(v60 + 8);
    v64(v62, v57, v63);
    URL._bridgeToObjectiveC()(v65);
    v67 = v66;
    LODWORD(v62) = objc_msgSend(v58, "writeToURL:", v66);

    if ((_DWORD)v62)
    {
      v68 = v88 + 16;
      swift_beginAccess(v88 + 16, v99, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v68);
      if (Strong)
      {
        v70 = (void *)Strong;
        v71 = sub_100C1CC20();

        v72 = sub_1004B804C(&qword_1013E1910);
        v73 = *(unsigned __int8 *)(v60 + 80);
        v74 = (v73 + 32) & ~v73;
        v75 = swift_allocObject(v72, v74 + *(_QWORD *)(v60 + 72), v73 | 7);
        *(_OWORD *)(v75 + 16) = xmmword_100EF5E40;
        v76 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 16))(v75 + v74, v59, v97);
        v77 = (uint64_t)v87;
        static TaskPriority.userInitiated.getter(v76);
        v78 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
        type metadata accessor for MainActor(0);
        v79 = v32;
        swift_retain(v71);
        swift_bridgeObjectRetain(v75);
        v81 = static MainActor.shared.getter(v80);
        v82 = (_QWORD *)swift_allocObject(&unk_10126B4D8, 72, 7);
        v82[2] = v81;
        v82[3] = &protocol witness table for MainActor;
        v82[4] = v71;
        v82[5] = v75;
        v82[7] = 0;
        v82[8] = 0;
        v82[6] = v30;
        v83 = sub_100521BF0(v77, (uint64_t)&unk_1013E1CC8, (uint64_t)v82, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
        v84 = v71;
        v57 = v97;
        swift_release(v84);
        swift_bridgeObjectRelease(v75);

        v59 = v96;
        swift_release(v83);
      }
      else
      {

      }
      v85 = v59;
    }
    else
    {

      sub_100757E04(&_mh_execute_header, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2251, "Error saving PDF", 16, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2251, (uint64_t)"Error saving PDF", 16, 2u);

      v85 = v59;
    }
    return ((uint64_t (*)(char *, uint64_t))v64)(v85, v57);
  }
  else
  {
    v46 = v99[0];
    v47 = (void *)_convertNSErrorToError(_:)(v31);

    swift_willThrow(v48);
    v49 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v49, v100);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v99[0] = v47;
    swift_errorRetain(v47);
    v51 = sub_1004B804C(&qword_1013E0210);
    v52 = String.init<A>(describing:)(v99, v51);
    v54 = v53;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v52;
    *(_QWORD *)(inited + 40) = v54;
    sub_100757E04(&_mh_execute_header, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2244, "Error creating temporary directory: %@", 38, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"documentCameraViewController(_:didFinishWith:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2244, (uint64_t)"Error creating temporary directory: %@", 38, 2u);

    swift_setDeallocating(inited);
    v55 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v55);
    return swift_errorRelease(v47);
  }
}

void sub_100540E34(char a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  void *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  id v23[5];

  v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper;
  v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper];
  if (v4)
  {
    v5 = v4;
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 2282, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2u, 2282, (uint64_t)"expected nil value, but non-nil found", 37, 2u);

  }
  v6 = sub_100C1CAE8();
  v7 = objc_msgSend(v6, "mode");

  LODWORD(v6) = objc_msgSend(v7, "wantsToEndForNonPopoverPresentations");
  if ((_DWORD)v6)
  {
    v8 = sub_100C1CAE8();
    objc_msgSend(v8, "resetToDefaultModeAnimated:", 1);

  }
  v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLGenerativePlaygroundHelper()), "init");
  swift_unknownObjectWeakAssign(&v9[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_delegate], v1);
  v10 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = v9;
  v11 = v9;

  if ((a1 & 1) != 0)
  {
    v12 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    v13 = swift_allocObject(&unk_10126A858, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16);
    v14 = v11;
    sub_100D547E0(v12, (uint64_t)v14, v13, v14);
    swift_release(v13);

  }
  else
  {
    objc_msgSend(v1, "presentViewController:animated:completion:", *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], 1, 0);
  }
  v15 = *(void **)(*(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v23[3] = &type metadata for CRLFeatureFlags;
  v23[4] = (id)sub_1004DB6DC();
  LOBYTE(v23[0]) = 11;
  v16 = v15;
  v17 = isFeatureEnabled(_:)(v23);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v23);
  if ((v17 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100EF7E68);
    v19 = swift_getKeyPath(&unk_100EF7E90);
    static Published.subscript.getter(v23, v16, KeyPath, v19);
    swift_release(KeyPath);
    swift_release(v19);
    if (v23[0])
    {

      if (qword_1013DD7C8 != -1)
        swift_once(&qword_1013DD7C8, sub_100A03AC0);
      swift_beginAccess(&static OS_os_log.crlFollow, v23, 0, 0);
      v20 = (id)static OS_os_log.crlFollow;
      v22 = static os_log_type_t.default.getter(v21);
      sub_100A06EBC((uint64_t)v20, &_mh_execute_header, v22, "Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006F534C(1);
    }
  }

}

uint64_t sub_1005411A0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v11, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  sub_100540E34(a4 & 1);

  return sub_1004CB800((uint64_t)v11, &qword_1013E0230);
}

void sub_100541220(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController), 1, 0);

  }
}

void sub_100541294(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper);
  if (v3)
  {
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController), "dismissViewControllerAnimated:completion:", 1, 0);
    v4 = *(void **)(a1 + v2);
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(a1 + v2) = 0;

}

double sub_100541500(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  char *v12;
  id v13;
  double v14;
  double v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _BYTE v32[248];
  _QWORD v33[32];

  v4 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  *(_QWORD *)&result = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v8 = a1 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    v9 = sub_100C1CC20();
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v9 + 16);
    if (Strong
      && (v11 = Strong,
          v12 = (char *)objc_msgSend(Strong, "editingCoordinator"),
          v11,
          v12))
    {
      v13 = *(id *)&v12[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
      swift_release(v9);

      v14 = sub_100479D94(0);
      v16 = objc_msgSend((id)objc_opt_self(CRLPathSource), "pathSourceForShapeType:naturalSize:", 0, v14, v15);
      v17 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain(a2);
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v17, "initWithString:", v18, swift_bridgeObjectRelease(a2).n128_f64[0]);

      v20 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
      sub_10054F488((uint64_t)v32);
      sub_1004C4938((uint64_t)v32, (uint64_t)v33, &qword_1013E1B50);
      v21 = v16;
      v22 = v19;
      v23 = sub_100CF4294(0, 0, v16, 0, 0, 0, 1, 0, 1, (_QWORD *)1, (void *)1, (void *)1, (void *)1, (char *)v19, v7, v33, 0, 0, 0);

      sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1013F1500);
      v24 = type metadata accessor for CRLWPShapeItem(0);
      v25 = swift_dynamicCastClassUnconditional(v23, v24, 0, 0, 0);
      v26 = sub_100C1CC20();
      v27 = sub_1004B804C((uint64_t *)&unk_1013E4180);
      v28 = swift_allocObject(v27, 40, 7);
      *(_OWORD *)(v28 + 16) = xmmword_100EEF400;
      *(_QWORD *)(v28 + 32) = v25;
      v31 = v28;
      specialized Array._endMutation()(v28);
      v29 = v31;
      v30 = v23;
      sub_10054C750(v29, 0, 0);
      swift_release(v26);

      *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release(v9).n128_u64[0];
    }
  }
  return result;
}

void _s18ToolbarButtonStateVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));

}

uint64_t _s18ToolbarButtonStateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t _s18ToolbarButtonStateVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_BYTE *)(a1 + 7) = *(_BYTE *)(a2 + 7);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v8 = v6;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

__n128 _s18ToolbarButtonStateVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s18ToolbarButtonStateVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_BYTE *)(a1 + 7) = *(_BYTE *)(a2 + 7);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

uint64_t _s18ToolbarButtonStateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 35))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s18ToolbarButtonStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 35) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s18ToolbarButtonStateVMa()
{
  return &_s18ToolbarButtonStateVN;
}

void sub_100541AF0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_10054E424(a2, a3);
}

uint64_t sub_100541AFC()
{
  char *v0;
  unsigned int v1;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly");
  if ((v1 & 1) == 0 && (objc_msgSend(v0, "isInDrawingMode") & 1) != 0)
    objc_msgSend(v0, "endDrawingModeIfNeeded");
  return v1 ^ 1;
}

uint64_t sub_100541B6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E18C4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10053CCE0(a1, v4, v5, v6);
}

uint64_t sub_100541BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v6 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = swift_unknownObjectRetain(a2);
  v6(v7, a3);
  swift_release(v5);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_100541C28@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF7E68);
  v5 = swift_getKeyPath(&unk_100EF7E90);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100541CA4(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EF7E68);
  v5 = swift_getKeyPath(&unk_100EF7E90);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

void sub_100541D18()
{
  uint64_t v0;

  sub_100791304(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_100541D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100541D34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100541D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD v14[7];
  uint64_t v15;
  uint64_t v16;

  v15 = type metadata accessor for CRLProto_Data(0);
  __chkstk_darwin(v15);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)v14 - v8;
  v16 = a1;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 == *(_QWORD *)(a2 + 16))
  {
    if (v10 && v16 != a2)
    {
      v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v14[5] = *(_QWORD *)(v7 + 72);
      v14[3] = a2;
      v14[6] = v5;
      sub_1004B8460(v16 + v11, (uint64_t)v14 - v8, type metadata accessor for CRLProto_Data);
      sub_1004B8460(a2 + v11, (uint64_t)v5, type metadata accessor for CRLProto_Data);
      __asm { BR              X10 }
    }
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_10054270C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t result;
  float32x2_t *v7;
  float32x2_t *v8;
  int32x2_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  for (i = 0; ; i += 48)
  {
    result = 0;
    v7 = (float32x2_t *)(a1 + i);
    v8 = (float32x2_t *)(a2 + i);
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + i + 32), *(float32x4_t *)(a2 + i + 32))), 0xFuLL))) & 1) == 0)break;
    v9 = vceq_f32(v7[6], v8[6]);
    if ((v9.i8[0] & 1) == 0 || (v9.i8[4] & 1) == 0)
      break;
    v10 = (uint64_t)v7[9];
    v11 = (uint64_t)v8[9];
    v12 = *(_BYTE *)(a1 + i + 64);
    v13 = *(_BYTE *)(a2 + i + 64);
    v14 = *(_QWORD *)(a2 + i + 56);
    v19 = *(_QWORD *)(a1 + i + 56);
    v20 = v12;
    v17 = v14;
    v18 = v13;
    v15 = sub_10054F0FC();
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    if ((static CRExtensible.== infix(_:_:)(&v19, &v17, &type metadata for CRLEditableBezierPathSourceData.NodeType, v15, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    v16 = sub_100C9E04C(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return 0;
    if (!--v2)
      return 1;
  }
  return result;
}

uint64_t sub_10054288C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  BOOL v18;
  uint64_t v20;

  v4 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_14:
    v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_1004B8460(a1 + v12, (uint64_t)v10, type metadata accessor for CRLSELibraryViewModeItemNode);
      sub_1004B8460(a2 + v12, (uint64_t)v6, type metadata accessor for CRLSELibraryViewModeItemNode);
      sub_1006577BC((uint64_t)v10, (uint64_t)v6);
      if ((v15 & 1) == 0)
        break;
      v16 = sub_10054288C(*(_QWORD *)&v10[*(int *)(v4 + 20)], *(_QWORD *)&v6[*(int *)(v4 + 20)]);
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLSELibraryViewModeItemNode);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLSELibraryViewModeItemNode);
      v18 = v14-- != 0;
      if ((v16 & 1) != 0)
      {
        v12 += v13;
        if (v18)
          continue;
      }
      return v16 & 1;
    }
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLSELibraryViewModeItemNode);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLSELibraryViewModeItemNode);
    goto LABEL_14;
  }
  v16 = 1;
  return v16 & 1;
}

uint64_t sub_100542A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[11];

  v4 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
  __chkstk_darwin(v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)v16 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v16[4] = a2;
      v16[5] = v13;
      v16[6] = a1;
      v16[7] = v4;
      v16[10] = v6;
      v16[9] = v11 - 1;
      sub_1004B8460(a1 + v12, (uint64_t)v16 - v9, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      v16[8] = v12;
      sub_1004B8460(a2 + v12, (uint64_t)v6, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      __asm { BR              X10 }
    }
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

BOOL sub_10054431C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100544388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char v40;
  _QWORD v42[5];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = type metadata accessor for CRLProto_Data(0);
  v51 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v50 = (uint64_t)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v6);
  v55 = (uint64_t)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v8);
  v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v42 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)v42 - v15;
  v54 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  __chkstk_darwin(v54);
  v18 = (_QWORD *)((char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v22 = (char *)v42 - v21;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23 != *(_QWORD *)(a2 + 16))
  {
LABEL_22:
    v40 = 0;
    return v40 & 1;
  }
  if (v23 && a1 != a2)
  {
    v49 = v13;
    v46 = v10;
    v42[3] = 0;
    v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v43 = *(_QWORD *)(v20 + 72);
    v25 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo;
    v26 = v23 - 1;
    v44 = a1;
    v45 = a2;
    v47 = (char *)v42 - v21;
    v48 = v4;
    v42[4] = v6;
    while (1)
    {
      v53 = v26;
      sub_1004B8460(a1 + v24, (uint64_t)v22, v25);
      v52 = v24;
      v27 = a2 + v24;
      v28 = v25;
      sub_1004B8460(v27, (uint64_t)v18, v25);
      v29 = v54;
      sub_1004CB7BC((uint64_t)&v22[*(int *)(v54 + 28)], (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
      v30 = (uint64_t)v49;
      sub_1004CB7BC((uint64_t)v18 + *(int *)(v29 + 28), (uint64_t)v49, (uint64_t *)&unk_1013E16F0);
      v31 = v55;
      v32 = v55 + *(int *)(v6 + 48);
      sub_1004CB7BC((uint64_t)v16, v55, (uint64_t *)&unk_1013E16F0);
      sub_1004CB7BC(v30, v32, (uint64_t *)&unk_1013E16F0);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
      if (v33(v31, 1, v4) != 1)
        break;
      sub_1004CB800(v30, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
      if (v33(v32, 1, v4) != 1)
      {
        v31 = v55;
        v22 = v47;
        goto LABEL_20;
      }
      sub_1004CB800(v55, (uint64_t *)&unk_1013E16F0);
      v22 = v47;
      v25 = v28;
      a2 = v45;
      v35 = *((_QWORD *)v47 + 1);
      v36 = v18[1];
      if ((*(_QWORD *)v47 != *v18 || v35 != v36)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v47, v35, *v18, v36, 0) & 1) == 0
        || *((_QWORD *)v22 + 2) != v18[2])
      {
        goto LABEL_21;
      }
      v37 = *(int *)(v54 + 24);
      v38 = &v22[v37];
      v39 = (char *)v18 + v37;
      type metadata accessor for UnknownStorage(0);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v40 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v39);
      sub_1004B84A4((uint64_t)v18, v25);
      sub_1004B84A4((uint64_t)v22, v25);
      v26 = v53 - 1;
      if ((v40 & 1) != 0)
      {
        a1 = v44;
        v24 = v52 + v43;
        v4 = v48;
        if (v53)
          continue;
      }
      return v40 & 1;
    }
    v34 = (uint64_t)v46;
    sub_1004CB7BC(v31, (uint64_t)v46, (uint64_t *)&unk_1013E16F0);
    if (v33(v32, 1, v4) != 1)
    {
      sub_1004B84E0(v32, v50, type metadata accessor for CRLProto_Data);
      __asm { BR              X10 }
    }
    v22 = v47;
    sub_1004CB800((uint64_t)v49, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLProto_Data);
LABEL_20:
    sub_1004CB800(v31, (uint64_t *)&unk_1013E1AE8);
LABEL_21:
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    goto LABEL_22;
  }
  v40 = 1;
  return v40 & 1;
}

uint64_t sub_100544C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X14 }
  }
  return 1;
}

BOOL sub_100544DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  _BOOL8 result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_100544E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD v36[5];
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for CRLProto_Data(0);
  v43 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v41 = (uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v9);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v36 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)v36 - v16;
  v42 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
  __chkstk_darwin(v42);
  v49 = (uint64_t)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)v36 - v21;
  v45 = a1;
  v46 = a2;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23 != *(_QWORD *)(a2 + 16))
  {
LABEL_17:
    v34 = 0;
    return v34 & 1;
  }
  if (v23 && v45 != v46)
  {
    v40 = v11;
    v44 = v4;
    v36[2] = 0;
    v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v38 = *(_QWORD *)(v20 + 72);
    v25 = v23 - 1;
    v39 = v17;
    v36[4] = (char *)v36 - v21;
    v37 = v14;
    v36[3] = v8;
    while (1)
    {
      v48 = v25;
      sub_1004B8460(v45 + v24, (uint64_t)v22, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      v47 = v24;
      v26 = v49;
      sub_1004B8460(v46 + v24, v49, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      v27 = v42;
      sub_1004CB7BC((uint64_t)&v22[*(int *)(v42 + 20)], (uint64_t)v17, (uint64_t *)&unk_1013E16F0);
      sub_1004CB7BC(v26 + *(int *)(v27 + 20), (uint64_t)v14, (uint64_t *)&unk_1013E16F0);
      v28 = (uint64_t)&v8[*(int *)(v6 + 48)];
      sub_1004CB7BC((uint64_t)v17, (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
      sub_1004CB7BC((uint64_t)v14, v28, (uint64_t *)&unk_1013E16F0);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
      v30 = (uint64_t)v17;
      v31 = v44;
      if (v29(v8, 1, v44) != 1)
        break;
      sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v30, (uint64_t *)&unk_1013E16F0);
      if (v29((char *)v28, 1, v31) != 1)
        goto LABEL_16;
      sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
      v17 = v39;
      type metadata accessor for UnknownStorage(0);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v33 = v49;
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v22, v49);
      sub_1004B84A4(v33, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
      v25 = v48 - 1;
      if ((v34 & 1) != 0)
      {
        v24 = v47 + v38;
        if (v48)
          continue;
      }
      return v34 & 1;
    }
    v32 = (uint64_t)v40;
    sub_1004CB7BC((uint64_t)v8, (uint64_t)v40, (uint64_t *)&unk_1013E16F0);
    if (v29((char *)v28, 1, v31) != 1)
    {
      sub_1004B84E0(v28, v41, type metadata accessor for CRLProto_Data);
      __asm { BR              X10 }
    }
    sub_1004CB800((uint64_t)v37, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v39, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLProto_Data);
LABEL_16:
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1AE8);
    sub_1004B84A4(v49, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
    goto LABEL_17;
  }
  v34 = 1;
  return v34 & 1;
}

uint64_t sub_100545680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  BOOL v44;
  char v45;
  uint64_t v46;
  _QWORD v48[6];
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = type metadata accessor for CRLProto_Data(0);
  v54 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v53 = (uint64_t)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v6);
  v59 = (uint64_t)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v8);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v48 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)v48 - v15;
  v60 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
  __chkstk_darwin(v60);
  v18 = (_QWORD *)((char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v22 = (_QWORD *)((char *)v48 - v21);
  v56 = a1;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23 != *(_QWORD *)(a2 + 16))
  {
LABEL_26:
    v43 = 0;
    return v43 & 1;
  }
  if (v23 && v56 != a2)
  {
    v55 = v13;
    v50 = v10;
    v48[3] = 0;
    v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v49 = *(_QWORD *)(v20 + 72);
    v25 = v23 - 1;
    v51 = (char *)v48 - v21;
    v52 = v4;
    v48[4] = v6;
    v48[5] = a2;
    while (1)
    {
      sub_1004B8460(v56 + v24, (uint64_t)v22, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
      v57 = v24;
      sub_1004B8460(a2 + v24, (uint64_t)v18, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
      v26 = v22[1];
      v27 = v18[1];
      v28 = *v22 == *v18 && v26 == v27;
      if (!v28 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v22, v26, *v18, v27, 0) & 1) == 0)
        break;
      v58 = v25;
      v29 = v60;
      sub_1004CB7BC((uint64_t)v22 + *(int *)(v60 + 24), (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
      v30 = v18;
      v31 = (uint64_t)v18 + *(int *)(v29 + 24);
      v32 = (uint64_t)v16;
      v33 = (uint64_t)v55;
      sub_1004CB7BC(v31, (uint64_t)v55, (uint64_t *)&unk_1013E16F0);
      v34 = v59;
      v35 = v59 + *(int *)(v6 + 48);
      sub_1004CB7BC(v32, v59, (uint64_t *)&unk_1013E16F0);
      sub_1004CB7BC(v33, v35, (uint64_t *)&unk_1013E16F0);
      v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
      if (v36(v34, 1, v4) != 1)
      {
        v38 = (uint64_t)v50;
        sub_1004CB7BC(v34, (uint64_t)v50, (uint64_t *)&unk_1013E16F0);
        v39 = v34;
        if (v36(v35, 1, v4) != 1)
        {
          sub_1004B84E0(v35, v53, type metadata accessor for CRLProto_Data);
          __asm { BR              X10 }
        }
        v46 = v32;
        v18 = v30;
        v22 = v51;
        sub_1004CB800((uint64_t)v55, (uint64_t *)&unk_1013E16F0);
        sub_1004CB800(v46, (uint64_t *)&unk_1013E16F0);
        sub_1004B84A4((uint64_t)v50, type metadata accessor for CRLProto_Data);
        goto LABEL_24;
      }
      sub_1004CB800(v33, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E16F0);
      if (v36(v35, 1, v4) != 1)
      {
        v39 = v59;
        v18 = v30;
        v22 = v51;
LABEL_24:
        sub_1004CB800(v39, (uint64_t *)&unk_1013E1AE8);
        break;
      }
      v16 = (char *)v32;
      sub_1004CB800(v59, (uint64_t *)&unk_1013E16F0);
      v18 = v30;
      v22 = v51;
      v37 = v58;
      v40 = *(int *)(v60 + 20);
      v41 = &v51[v40];
      v42 = (char *)v18 + v40;
      type metadata accessor for UnknownStorage(0);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v43 = dispatch thunk of static Equatable.== infix(_:_:)(v41, v42);
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
      sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
      v44 = v37 != 0;
      v25 = v37 - 1;
      v45 = v44;
      if ((v43 & 1) != 0)
      {
        v24 = v57 + v49;
        v4 = v52;
        if ((v45 & 1) != 0)
          continue;
      }
      return v43 & 1;
    }
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
    goto LABEL_26;
  }
  v43 = 1;
  return v43 & 1;
}

uint64_t sub_100545F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  uint64_t v21;
  char *v22;

  v4 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v21 = *(_QWORD *)(v8 + 72);
    v22 = (char *)&v21 - v9;
    while (1)
    {
      sub_1004B8460(a1 + v12, (uint64_t)v10, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      sub_1004B8460(a2 + v12, (uint64_t)v6, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v13 = v10[1];
      v14 = v6[1];
      v15 = *v10 == *v6 && v13 == v14;
      if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v13, *v6, v14, 0) & 1) == 0)
        break;
      if (v10[2] != v6[2])
        break;
      v16 = *(int *)(v4 + 24);
      v17 = (char *)v10 + v16;
      v18 = (char *)v6 + v16;
      type metadata accessor for UnknownStorage(0);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v19 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v18);
      v10 = v22;
      if ((v19 & 1) == 0)
        break;
      sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
      v12 += v21;
      if (!--v11)
        return 1;
    }
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
  }
  return 0;
}

BOOL sub_10054610C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int16 *v3;
  unsigned __int16 *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int16 *)(a1 + 32) != *(unsigned __int16 *)(a2 + 32))
    return 0;
  v3 = (unsigned __int16 *)(a1 + 34);
  v4 = (unsigned __int16 *)(a2 + 34);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100546178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  BOOL v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = type metadata accessor for CRLDisjointPosition.Element(0);
  __chkstk_darwin(v28);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - v7;
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v26 - v10);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v26 - v14);
  v29 = a1;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 != *(_QWORD *)(a2 + 16))
  {
LABEL_14:
    v22 = 0;
    return v22 & 1;
  }
  if (v16)
  {
    v17 = a2;
    if (v29 != a2)
    {
      v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v27 = *(_QWORD *)(v13 + 72);
      v19 = v16 - 1;
      while (1)
      {
        sub_1004B8460(v29 + v18, (uint64_t)v15, type metadata accessor for CRLDisjointPosition.Element);
        sub_1004B8460(v17 + v18, (uint64_t)v11, type metadata accessor for CRLDisjointPosition.Element);
        v20 = *v15;
        v21 = *v11;
        sub_1004B8460((uint64_t)v15, (uint64_t)v8, type metadata accessor for CRLDisjointPosition.Element);
        sub_1004B8460((uint64_t)v11, (uint64_t)v5, type metadata accessor for CRLDisjointPosition.Element);
        if (v20 != v21)
          break;
        v22 = static UUID.== infix(_:_:)(&v8[*(int *)(v28 + 20)]);
        sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLDisjointPosition.Element);
        sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLDisjointPosition.Element);
        sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLDisjointPosition.Element);
        sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLDisjointPosition.Element);
        v24 = v19-- != 0;
        if ((v22 & 1) != 0)
        {
          v18 += v27;
          if (v24)
            continue;
        }
        return v22 & 1;
      }
      sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLDisjointPosition.Element);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLDisjointPosition.Element);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLDisjointPosition.Element);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLDisjointPosition.Element);
      goto LABEL_14;
    }
  }
  v22 = 1;
  return v22 & 1;
}

uint64_t sub_100546394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32))
      __asm { BR              X10 }
    return 0;
  }
  return 1;
}

uint64_t sub_100546DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = 0;
    v4 = a1 + 32;
    v5 = a2 + 32;
    v27 = a2 + 32;
    v28 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v4 + 24 * v3);
      v7 = *v6;
      v8 = (uint64_t *)(v5 + 24 * v3);
      v9 = *v8;
      v10 = *(_QWORD *)(*v6 + 16);
      if (v10 != *(_QWORD *)(*v8 + 16))
        break;
      v11 = v6[2];
      v29 = *((unsigned __int8 *)v8 + 8);
      v30 = *((unsigned __int8 *)v6 + 8);
      v12 = v8[2];
      v31 = v12;
      if (v10)
      {
        swift_bridgeObjectRetain(v7);
        swift_bridgeObjectRetain(v11);
        v13 = v7;
        if (v7 != v9)
        {
          swift_bridgeObjectRetain(v9);
          swift_bridgeObjectRetain(v12);
          v14 = 0;
          while (1)
          {
            v15 = v7 + v14;
            v16 = v9 + v14;
            if (*(float *)(v7 + v14 + 32) != *(float *)(v9 + v14 + 32)
              || *(float *)(v15 + 36) != *(float *)(v16 + 36)
              || *(float *)(v15 + 40) != *(float *)(v16 + 40)
              || *(float *)(v15 + 44) != *(float *)(v16 + 44)
              || *(float *)(v15 + 48) != *(float *)(v16 + 48)
              || *(float *)(v15 + 52) != *(float *)(v16 + 52))
            {
              break;
            }
            v17 = *(_QWORD *)(v15 + 56);
            v18 = *(_BYTE *)(v15 + 64);
            v19 = *(_QWORD *)(v15 + 72);
            v20 = *(_QWORD *)(v16 + 56);
            v21 = *(_BYTE *)(v16 + 64);
            v22 = *(_QWORD *)(v16 + 72);
            v34 = v17;
            v35 = v18;
            v32 = v20;
            v33 = v21;
            v23 = sub_10054F0FC();
            swift_bridgeObjectRetain(v19);
            swift_bridgeObjectRetain(v22);
            if ((static CRExtensible.== infix(_:_:)(&v34, &v32, &type metadata for CRLEditableBezierPathSourceData.NodeType, v23, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
            v24 = sub_100C9E04C(v19, v22);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v24 & 1) == 0)
              break;
            v14 += 48;
            if (!--v10)
              goto LABEL_21;
          }
LABEL_26:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_27:
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      else
      {
        swift_bridgeObjectRetain(v7);
        swift_bridgeObjectRetain(v11);
        v13 = v9;
      }
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v12);
LABEL_21:
      if (v30 != v29)
        goto LABEL_26;
      v25 = sub_100C9E04C(v11, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
        return 0;
      ++v3;
      result = 1;
      v5 = v27;
      v4 = v28;
      if (v3 == v2)
        return result;
    }
  }
  return 0;
}

uint64_t sub_100547074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD v18[15];

  v4 = type metadata accessor for CRLProto_Path.Element(0);
  __chkstk_darwin(v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (_QWORD *)((char *)v18 - v10);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 == *(_QWORD *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
      return 1;
    v18[10] = v8;
    v18[12] = 0;
    v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v18[8] = *(_QWORD *)(v9 + 72);
    v18[9] = a1;
    v18[11] = (char *)v18 - v10;
    v18[7] = a2;
    sub_1004B8460(a1 + v13, (uint64_t)v18 - v10, type metadata accessor for CRLProto_Path.Element);
    sub_1004B8460(a2 + v13, (uint64_t)v6, type metadata accessor for CRLProto_Path.Element);
    v14 = *v11;
    v15 = *(_QWORD *)v6;
    v16 = v6[8];
    v18[13] = v13;
    v18[14] = v12;
    if (v16 == 1)
      __asm { BR              X10 }
    if (v14 == v15)
      __asm { BR              X10 }
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLProto_Path.Element);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Path.Element);
  }
  return 0;
}

id sub_1005487F4(uint64_t a1, unint64_t a2)
{
  return sub_100548800(a1, a2, type metadata accessor for CRLSharedHighlight);
}

id sub_100548800(uint64_t a1, unint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  id v15;
  void *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  unint64_t v26;
  unint64_t v27;
  void **v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v4 = a2;
  v5 = a1;
  v6 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v4 < 0)
      v33 = v4;
    else
      v33 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v4);
    if (v7 == v34)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (a1 < 0)
    v32 = a1;
  else
    v32 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v7 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(v5);
  v8 = (unint64_t)v4 >> 62;
  if ((unint64_t)v4 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v7 != *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v7)
    goto LABEL_37;
  v9 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0)
    v9 = v5;
  if (!v6)
    v9 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  v10 = v4 & 0xFFFFFFFFFFFFFF8;
  v11 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v4 < 0)
    v12 = v4;
  else
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v8)
    v11 = v12;
  if (v9 == v11)
  {
LABEL_37:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v35 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v5 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5))
  {
    v14 = result;
    if ((v4 & 0xC000000000000001) == 0)
      break;
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
LABEL_21:
    v16 = v15;
    a3 = (uint64_t (*)(_QWORD))a3(0);
    v17 = static NSObject.== infix(_:_:)(v14, v16);

    if ((v17 & 1) == 0)
      goto LABEL_54;
    v18 = v7 - 1;
    if (v7 == 1)
      return (id)(v7 & 1);
    if (((v4 | v5) & 0xC000000000000001) != 0)
    {
      v19 = 0;
      v20 = v7 - 2;
      while (v18 != v19)
      {
        v7 = v19 + 1;
        if (v35)
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 + 1, v5);
        else
          v21 = *(id *)(v5 + 40 + 8 * v19);
        v22 = v21;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 + 1, v4);
        }
        else
        {
          if (v7 >= *(_QWORD *)(v10 + 16))
            goto LABEL_59;
          v23 = *(id *)(v4 + 40 + 8 * v19);
        }
        v24 = v23;
        v7 = static NSObject.== infix(_:_:)(v22, v23);

        if ((v7 & 1) != 0 && v20 != v19++)
          continue;
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      v26 = *(_QWORD *)(v10 + 16);
      if (v26 <= 1)
        v26 = 1;
      v27 = v26 - 1;
      v28 = (void **)(v5 + 40);
      v10 = v4 + 40;
      while (v18)
      {
        if (!v27)
          goto LABEL_58;
        v30 = *v28++;
        v29 = v30;
        v31 = *(void **)v10;
        v10 += 8;
        v4 = v29;
        v5 = v31;
        v7 = static NSObject.== infix(_:_:)(v4, v5);

        if ((v7 & 1) != 0)
        {
          --v27;
          if (--v18)
            continue;
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v10 + 16))
  {
    v15 = *(id *)(v4 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100548AE8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v19;

  v2 = a1[2];
  if (v2 != a2[2])
    goto LABEL_7;
  if (!v2 || a1 == a2)
    goto LABEL_6;
  v5 = a1[4];
  v6 = a2[4];
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  sub_100C9E654(v5, v6);
  v8 = v7;
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  if ((v8 & 1) == 0)
  {
LABEL_7:
    v9 = 0;
    return v9 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    v9 = 1;
    return v9 & 1;
  }
  v11 = v2 - 2;
  v12 = a1 + 5;
  v13 = a2 + 5;
  do
  {
    v15 = *v12++;
    v14 = v15;
    v16 = *v13++;
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v16);
    sub_100C9E654(v14, v16);
    v9 = v17;
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v16);
    v19 = v11-- != 0;
  }
  while ((v9 & 1) != 0 && v19);
  return v9 & 1;
}

id sub_100548BE0(uint64_t a1, unint64_t a2)
{
  return sub_100548800(a1, a2, type metadata accessor for CRLSceneInfo);
}

id sub_100548BEC(uint64_t a1, unint64_t a2)
{
  return sub_100548800(a1, a2, type metadata accessor for CRLBoardLibraryViewModelItemNode);
}

id sub_100548BF8(uint64_t a1, unint64_t a2)
{
  return sub_100548C0C(a1, a2, &qword_1013EFDF0, UIBarButtonItemGroup_ptr);
}

id sub_100548C0C(uint64_t a1, unint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id result;
  void *v16;
  id v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  id v23;
  void *v24;
  unint64_t v26;
  void **v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = a2;
  v7 = a1;
  v8 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v10 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_50:
    if (v6 < 0)
      v32 = v6;
    else
      v32 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v6);
    if (v9 == v33)
      goto LABEL_4;
LABEL_54:
    LOBYTE(v9) = 0;
    return (id)(v9 & 1);
  }
  if (a1 < 0)
    v31 = a1;
  else
    v31 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v9 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v7);
  v10 = (unint64_t)v6 >> 62;
  if ((unint64_t)v6 >> 62)
    goto LABEL_50;
LABEL_3:
  if (v9 != *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_54;
LABEL_4:
  if (!v9)
    goto LABEL_37;
  v11 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v7 < 0)
    v11 = v7;
  if (!v8)
    v11 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
  v12 = v6 & 0xFFFFFFFFFFFFFF8;
  v13 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v6 < 0)
    v14 = v6;
  else
    v14 = v6 & 0xFFFFFFFFFFFFFF8;
  if (v10)
    v13 = v14;
  if (v11 == v13)
  {
LABEL_37:
    LOBYTE(v9) = 1;
    return (id)(v9 & 1);
  }
  if ((v9 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v34 = v7 & 0xC000000000000001;
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_61;
  for (result = *(id *)(v7 + 32); ; result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7))
  {
    v16 = result;
    if ((v6 & 0xC000000000000001) == 0)
      break;
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
LABEL_21:
    v18 = v17;
    a4 = (_QWORD *)sub_1004B8930(0, a3, a4);
    a3 = (unint64_t *)static NSObject.== infix(_:_:)(v16, v18);

    if ((a3 & 1) == 0)
      goto LABEL_54;
    v19 = v9 - 1;
    if (v9 == 1)
      return (id)(v9 & 1);
    if (((v6 | v7) & 0xC000000000000001) != 0)
    {
      v20 = 0;
      v21 = v9 - 2;
      while (v19 != v20)
      {
        v9 = v20 + 1;
        if (v34)
          v22 = (unint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v7);
        else
          v22 = (unint64_t *)*(id *)(v7 + 40 + 8 * v20);
        a3 = v22;
        if ((v6 & 0xC000000000000001) != 0)
        {
          v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 + 1, v6);
        }
        else
        {
          if (v9 >= *(_QWORD *)(v12 + 16))
            goto LABEL_59;
          v23 = *(id *)(v6 + 40 + 8 * v20);
        }
        v24 = v23;
        v9 = static NSObject.== infix(_:_:)(a3, v23);

        if ((v9 & 1) != 0 && v21 != v20++)
          continue;
        return (id)(v9 & 1);
      }
      __break(1u);
    }
    else
    {
      v26 = *(_QWORD *)(v12 + 16);
      if (v26 <= 1)
        v26 = 1;
      a3 = (unint64_t *)(v26 - 1);
      v27 = (void **)(v7 + 40);
      v12 = v6 + 40;
      while (v19)
      {
        if (!a3)
          goto LABEL_58;
        v29 = *v27++;
        v28 = v29;
        v30 = *(void **)v12;
        v12 += 8;
        v6 = v28;
        v7 = v30;
        v9 = static NSObject.== infix(_:_:)(v6, v7);

        if ((v9 & 1) != 0)
        {
          a3 = (unint64_t *)((char *)a3 - 1);
          if (--v19)
            continue;
        }
        return (id)(v9 & 1);
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }
  if (*(_QWORD *)(v12 + 16))
  {
    v17 = *(id *)(v6 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_100548F00(uint64_t a1, unint64_t a2)
{
  return sub_100548800(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MathExpression);
}

id sub_100548F0C(uint64_t a1, unint64_t a2)
{
  return sub_100548800(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MathExpressionEvaluationResult);
}

id sub_100548F18(uint64_t a1, unint64_t a2)
{
  return sub_100548C0C(a1, a2, &qword_1013E1C90, off_1012299F8);
}

id sub_100548F2C(uint64_t a1, unint64_t a2)
{
  return sub_100548C0C(a1, a2, (unint64_t *)&qword_1013DFC10, UIView_ptr);
}

uint64_t sub_100548F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v8[18] = a7;
  v8[19] = a8;
  v11 = type metadata accessor for MainActor(0);
  v8[20] = v11;
  v12 = static MainActor.shared.getter(v11);
  v8[21] = v12;
  v8[22] = static MainActor.shared.getter(v12);
  v13 = (_QWORD *)swift_task_alloc(dword_1013E197C);
  v8[23] = v13;
  *v13 = v8;
  v13[1] = sub_100548FCC;
  return sub_100549304(a5, a6, 0);
}

uint64_t sub_100548FCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 184);
  v5 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc(v4);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  if (v1)
    v8 = sub_100549108;
  else
    v8 = sub_10054905C;
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10054905C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 176));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005490B4, v2, v3);
}

uint64_t sub_1005490B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 168));
  v2 = *(_QWORD *)(v0 + 192);
  if (v1)
    (*(void (**)(_QWORD, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 192), 0);
  swift_bridgeObjectRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100549108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 176));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100549160, v2, v3);
}

uint64_t sub_100549160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  swift_release(*(_QWORD *)(v0 + 168));
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 144);
  swift_beginAccess(&static OS_os_log.crlDefault, v0 + 88, 0, 0);
  v3 = (void *)static OS_os_log.crlDefault;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 136, v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = v3;
  v9 = Error.localizedDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Failed to insert items with error %@.", 37, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  v15 = *(_QWORD *)(v0 + 200);
  if (v2)
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
    swift_errorRetain(*(_QWORD *)(v0 + 200));
    v16(v15, 1);
    swift_errorRelease(v15);
  }
  swift_errorRelease(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100549304(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 128) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 64) = v7;
  return swift_task_switch(sub_10054937C, v6, v7);
}

uint64_t sub_10054937C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_10053D6B0(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(unsigned __int8 *)(v0 + 128));
  *(_QWORD *)(v0 + 72) = v1;
  v2 = v1;
  *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v1);
  return swift_task_switch(sub_100549408, v2, 0);
}

uint64_t sub_100549408()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[5];
  v0[11] = *(_QWORD *)(v0[9] + 112);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[12] = v2;
  v0[13] = v3;
  return swift_task_switch(sub_100549460, v2, v3);
}

uint64_t sub_100549460()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  v3 = (uint64_t (*)(uint64_t))((char *)&dword_1013E1918 + dword_1013E1918);
  v1 = (_QWORD *)swift_task_alloc(unk_1013E191C);
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_1005494C4;
  return v3(*(_QWORD *)(v0 + 88));
}

uint64_t sub_1005494C4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_100549510, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_100549510()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 88), "boardItems", swift_release(*(_QWORD *)(v0 + 80)).n128_f64[0]);
  v2 = type metadata accessor for CRLBoardItem(0);
  *(_QWORD *)(v0 + 120) = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  return swift_task_switch(sub_100549580, *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_100549580()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_1005495C4(uint64_t a1)
{
  return swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1005495CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[18] = a4;
  v5[19] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[20] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[21] = v7;
  v5[22] = v8;
  return swift_task_switch(sub_100549638, v7, v8);
}

uint64_t sub_100549638()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  id v11;
  Class isa;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v1 = objc_msgSend(*(id *)(v0 + 144), "errors");
  v2 = sub_1004B804C(&qword_1013E0210);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRelease(v3);
  if (!v4)
    goto LABEL_9;
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v5 = *(_QWORD *)(v0 + 152);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 120, 0, 0);
  v6 = (id)static OS_os_log.crlError;
  v8 = static os_log_type_t.default.getter(v7);
  sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v8, "There were some errors trying to create items to insert.", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5 + 16);
  if (!Strong)
    goto LABEL_9;
  v10 = Strong;
  v11 = objc_msgSend(Strong, "layerHost");
  *(_QWORD *)(v0 + 184) = v11;

  if (v11)
  {
    isa = (Class)objc_msgSend(*(id *)(v0 + 144), "errors");
    if (!isa)
    {
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v2);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v13 = swift_bridgeObjectRelease(v14).n128_u64[0];
    }
    v15 = v0 + 16;
    *(_QWORD *)(v0 + 192) = isa;
    v16 = objc_msgSend(*(id *)(v0 + 144), "localizedErrorDescription", v13);
    *(_QWORD *)(v0 + 200) = v16;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_100549934;
    v17 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v18 = (_QWORD *)(v0 + 80);
    v18[1] = 0x40000000;
    v18[2] = sub_1005495C4;
    v18[3] = &unk_10126A6C8;
    v18[4] = v17;
    objc_msgSend(v11, "presentErrors:withLocalizedDescription:completionHandler:", isa, v16, v18);
    return swift_continuation_await(v15);
  }
  else
  {
LABEL_9:
    v20 = objc_msgSend(*(id *)(v0 + 144), "boardItems", swift_release(*(_QWORD *)(v0 + 160)).n128_f64[0]);
    v21 = type metadata accessor for CRLBoardItem(0);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v27 = v22;
      else
        v27 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v22);
      v23 = _CocoaArrayWrapper.endIndex.getter(v27);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v24 = swift_bridgeObjectRelease(v22);
    if (v23 >= 1)
    {
      v25 = objc_msgSend(*(id *)(v0 + 144), "boardItems", v24.n128_f64[0]);
      v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v21);

      sub_10054C750(v26, 0, 0);
      v24 = swift_bridgeObjectRelease(v26);
    }
    return (*(uint64_t (**)(__n128))(v0 + 8))(v24);
  }
}

uint64_t sub_100549934()
{
  uint64_t v0;

  return swift_task_switch(sub_100549978, *(_QWORD *)(*(_QWORD *)v0 + 168), *(_QWORD *)(*(_QWORD *)v0 + 176));
}

uint64_t sub_100549978()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(void **)(v0 + 192);
  v1 = *(void **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 160));
  swift_unknownObjectRelease(v3);

  v4 = objc_msgSend(*(id *)(v0 + 144), "boardItems");
  v5 = type metadata accessor for CRLBoardItem(0);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v12 = v6;
    else
      v12 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = swift_bridgeObjectRelease(v6);
  if (v7 >= 1)
  {
    v9 = objc_msgSend(*(id *)(v0 + 144), "boardItems", v8.n128_f64[0]);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v5);

    sub_10054C750(v10, 0, 0);
    v8 = swift_bridgeObjectRelease(v10);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

void sub_100549A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  _QWORD v27[3];
  ValueMetadata *v28;
  unint64_t v29;
  _QWORD *v30;
  char v31[72];
  char v32[24];

  v4 = v3;
  v28 = &type metadata for CRLFeatureFlags;
  v29 = sub_1004DB6DC();
  LOBYTE(v27[0]) = 0;
  v8 = isFeatureEnabled(_:)(v27);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  if ((v8 & 1) != 0)
  {
    v9 = a3;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v32, 0, 0);
    v10 = (void *)static OS_os_log.crlDefault;
    v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v11, v31);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v13 = sub_10054F53C();
    v14 = v10;
    v15 = dispatch thunk of Tip.id.getter(&type metadata for CRLTipConnectionLinesEntryPointCompact, v13);
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v17;
    v18 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v18, "presenting tip from a barButtonItem: %{public}@", 47, 2, inited);
    swift_setDeallocating(inited);
    v19 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v19);

    if (sub_100C36CC4())
    {
      type metadata accessor for TipUIPopoverViewController(0);
      v28 = &type metadata for CRLTipConnectionLinesEntryPointCompact;
      v29 = v13;
      swift_unknownObjectRetain(a1);
      v20 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(v27, a1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v21 = swift_unknownObjectRetain(v4);
      TipUIPopoverViewController.presentationDelegate.setter(v21);
      v22 = (_QWORD *)swift_allocObject(&unk_10126B398, 48, 7);
      v22[2] = v4;
      v22[3] = v20;
      v22[4] = a2;
      v22[5] = v9;
      v29 = (unint64_t)sub_10054F904;
      v30 = v22;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = *(_QWORD *)"";
      v27[2] = sub_1005D2FC0;
      v28 = (ValueMetadata *)&unk_10126B3B0;
      v23 = _Block_copy(v27);
      v24 = v30;
      v25 = v4;
      v26 = v20;
      sub_1004C0F54(a2, v9);
      objc_msgSend(v25, "presentViewController:animated:completion:", v26, 1, v23, swift_release(v24).n128_f64[0]);

      _Block_release(v23);
    }
  }
}

void sub_100549D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  _QWORD *v24;
  id v25;
  id v26;
  _QWORD v27[3];
  ValueMetadata *v28;
  unint64_t v29;
  _QWORD *v30;
  char v31[72];
  char v32[24];

  v4 = v3;
  v28 = &type metadata for CRLFeatureFlags;
  v29 = sub_1004DB6DC();
  LOBYTE(v27[0]) = 0;
  v8 = isFeatureEnabled(_:)(v27);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  if ((v8 & 1) != 0)
  {
    v9 = a3;
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v32, 0, 0);
    v10 = (void *)static OS_os_log.crlDefault;
    v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v11, v31);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v13 = sub_10054F9E0();
    v14 = v10;
    v15 = dispatch thunk of Tip.id.getter(&type metadata for CRLTipSendCopy, v13);
    v17 = v16;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v17;
    v18 = static os_log_type_t.info.getter();
    sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v18, "presenting tip from a barButtonItem: %{public}@", 47, 2, inited);
    swift_setDeallocating(inited);
    v19 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v19);

    if (sub_100C36CC4())
    {
      type metadata accessor for TipUIPopoverViewController(0);
      v28 = &type metadata for CRLTipSendCopy;
      v29 = v13;
      swift_unknownObjectRetain(a1);
      v20 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(v27, a1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
      v21 = swift_unknownObjectRetain(v4);
      TipUIPopoverViewController.presentationDelegate.setter(v21);
      v22 = (_QWORD *)swift_allocObject(&unk_10126B3E8, 48, 7);
      v22[2] = v4;
      v22[3] = v20;
      v22[4] = a2;
      v22[5] = v9;
      v29 = (unint64_t)sub_10054FA64;
      v30 = v22;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = *(_QWORD *)"";
      v27[2] = sub_1005D2FC0;
      v28 = (ValueMetadata *)&unk_10126B400;
      v23 = _Block_copy(v27);
      v24 = v30;
      v25 = v4;
      v26 = v20;
      sub_1004C0F54(a2, v9);
      objc_msgSend(v25, "presentViewController:animated:completion:", v26, 1, v23, swift_release(v24).n128_f64[0]);

      _Block_release(v23);
    }
  }
}

uint64_t sub_100549FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];
  _BYTE v8[40];
  _BYTE v9[24];
  ValueMetadata *v10;
  unint64_t v11;

  swift_unknownObjectWeakAssign(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController, a2);
  v10 = &type metadata for CRLTipConnectionLinesEntryPointCompact;
  v11 = sub_10054F53C();
  sub_1004C4938((uint64_t)v9, (uint64_t)v8, (uint64_t *)&unk_1013E1C40);
  v5 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess(v5, v7, 33, 0);
  sub_10054F910((uint64_t)v8, v5);
  result = swift_endAccess(v7);
  if (a3)
    return a3(result);
  return result;
}

uint64_t sub_10054A070(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10054A0D4;
  return v6(a1);
}

uint64_t sub_10054A0D4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10054A120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  id v61;
  void *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t i;
  void (*v88)(_QWORD *);
  id *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  id v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t (*v131[4])();
  _QWORD *v132;

  v2 = a2;
  v3 = a1;
  v132 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  v121 = v4;
  if (*(_QWORD *)(a2 + 16))
  {
    if (!v4)
    {
      swift_bridgeObjectRelease(a1);
      goto LABEL_8;
    }
    v5 = *(_QWORD *)(a1 + 32);
    v112 = a1 + 32;
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(v5);
    sub_10054ACFC(v6);
    if (v121 == 1)
    {
LABEL_4:
      swift_bridgeObjectRelease_n(v3, 2);
LABEL_8:
      v8 = v132;
LABEL_9:
      swift_release(v2);
      return (uint64_t)v8;
    }
    v10 = v2 + 32;
    v11 = 1;
    v114 = v2 + 32;
LABEL_14:
    if (v11 >= *(_QWORD *)(v3 + 16))
      goto LABEL_185;
    v13 = *(_QWORD *)(v2 + 16);
    v14 = v132;
    v15 = v132[2];
    if (__OFADD__(v15, v13))
      goto LABEL_186;
    v117 = v11;
    v16 = *(_QWORD *)(v112 + 8 * v11);
    swift_bridgeObjectRetain(v16);
    swift_retain(v2);
    if (!swift_isUniquelyReferenced_nonNull_native(v132)
      || (v17 = v132[3] >> 1, v17 < (uint64_t)(v15 + v13)))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v14 = v132;
      v17 = v132[3] >> 1;
    }
    v18 = v14[2];
    v19 = v17 - v18;
    if (v13)
    {
      if (v19 < (uint64_t)v13)
        goto LABEL_191;
      v20 = (unint64_t)&v14[v18 + 4];
      if (v10 < v20 + 8 * v13 && v20 < v10 + 8 * v13)
        goto LABEL_207;
      sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
      swift_arrayInitWithCopy(&v14[v18 + 4]);
      v22 = v14[2];
      v18 = v22 + v13;
      if (__OFADD__(v22, v13))
        goto LABEL_192;
      v14[2] = v18;
    }
    if (v13 == v19 && (v23 = *(_QWORD *)(v2 + 16), v13 != v23))
    {
      if (v13 >= v23)
        goto LABEL_203;
      v25 = v13 + 1;
      v26 = *(void **)(v10 + 8 * v13);
      v27 = v26;
      v122 = v16;
      v125 = v23 - 1;
      v110 = v23;
LABEL_34:
      while (1)
      {
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v28 = v132;
        v29 = v132[3] >> 1;
        if (v18 < v29)
          break;
        v132[2] = v18;
      }
      v132[v18 + 4] = v26;
      if (v25 == v23)
      {
        v38 = v18 + 1;
      }
      else
      {
        v30 = *(_QWORD *)(v2 + 16);
        v127 = v25;
        v31 = v30 - v25;
        if (v30 <= v25)
          goto LABEL_175;
        v32 = 0;
        v33 = v114 + 8 * v25;
        v34 = v125 - v25;
        while (1)
        {
          v26 = *(void **)(v33 + 8 * v32);
          if (~v18 + v29 == v32)
          {
            v36 = v26;
            v25 = v127 + v32 + 1;
            v18 = v29;
            v2 = a2;
            v10 = v114;
            v16 = v122;
            v23 = v110;
            v28[2] = v29;
            goto LABEL_34;
          }
          v28[v18 + 5 + v32] = v26;
          if (v34 == v32)
            break;
          v35 = v26;
          if (v31 == ++v32)
            goto LABEL_175;
        }
        v37 = v26;
        v38 = v18 + v32 + 2;
        v2 = a2;
        v10 = v114;
        v16 = v122;
      }
      v28[2] = v38;
      swift_release(v2);
      v3 = a1;
    }
    else
    {
      swift_release(v2);
    }
    specialized ContiguousArray._endMutation()(v24);
    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v72 = v16;
      else
        v72 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v39 = _CocoaArrayWrapper.endIndex.getter(v72);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      v39 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v40 = v132;
    v41 = v132[2];
    if (__OFADD__(v41, v39))
      goto LABEL_187;
    if (!swift_isUniquelyReferenced_nonNull_native(v132) || (v42 = v132[3] >> 1, v42 < v41 + v39))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v40 = v132;
      v42 = v132[3] >> 1;
    }
    v43 = v40[2];
    v44 = v42 - v43;
    v45 = sub_100602970((unint64_t)&v40[v43 + 4], v42 - v43, v16);
    if (v47 < v39)
      goto LABEL_188;
    v48 = v45;
    v49 = v46;
    if (v47 >= 1)
    {
      v50 = v40[2];
      v51 = __OFADD__(v50, v47);
      v52 = v50 + v47;
      if (v51)
        goto LABEL_193;
      v40[2] = v52;
    }
    if (v47 != v44)
      goto LABEL_13;
    v53 = v40[2];
    if ((unint64_t)v45 >> 62)
    {
      if (v45 >= 0)
        v45 &= 0xFFFFFFFFFFFFFF8uLL;
      v54 = _CocoaArrayWrapper.endIndex.getter(v45);
      if (v49 == v54)
        goto LABEL_13;
    }
    else
    {
      v54 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v46 == v54)
        goto LABEL_13;
    }
    v128 = v48 & 0xC000000000000001;
    if ((v48 & 0xC000000000000001) != 0)
    {
      v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v48);
    }
    else
    {
      if ((v49 & 0x8000000000000000) != 0)
        goto LABEL_204;
      if (v49 >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_206;
      v55 = *(id *)(v48 + 8 * v49 + 32);
    }
    v56 = v55;
    v57 = v49 + 1;
    if (__OFADD__(v49, 1))
      goto LABEL_205;
    v126 = v48 & 0xFFFFFFFFFFFFFF8;
    v108 = v48 + 32;
    v111 = v48 + 40;
    while (1)
    {
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v53);
      v59 = v132;
      v58 = v132[3] >> 1;
      if (v53 < v58)
      {
        v132[v53 + 4] = v56;
        v60 = v53 + 1;
        if (v57 == v54)
          goto LABEL_12;
        if (v128)
        {
          swift_retain(v59);
          v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v48);
        }
        else
        {
          if ((v57 & 0x8000000000000000) != 0)
            goto LABEL_201;
          if (v57 >= *(_QWORD *)(v126 + 16))
            goto LABEL_202;
          v62 = *(void **)(v108 + 8 * v57);
          swift_retain(v59);
          v61 = v62;
        }
        v56 = v61;
        v63 = v57 + 1;
        if (__OFADD__(v57, 1))
          goto LABEL_189;
        if (v60 >= v58)
        {
          v58 = v53 + 1;
        }
        else
        {
          v59[v60 + 4] = v61;
          if (v63 == v54)
          {
            v60 = v53 + 2;
LABEL_11:
            swift_release(v59);
            v3 = a1;
LABEL_12:
            v10 = v114;
            v59[2] = v60;
LABEL_13:
            v11 = v117 + 1;
            swift_bridgeObjectRelease(v48);
            specialized ContiguousArray._endMutation()(v12);
            v2 = a2;
            if (v117 + 1 == v121)
              goto LABEL_4;
            goto LABEL_14;
          }
          v64 = v53;
          v65 = v48;
          v66 = v54;
          v67 = 0;
          v123 = v111 + 8 * v57;
          v68 = v58 - v64 - 2;
          v109 = v64;
          v69 = (uint64_t)&v59[v64 + 6];
          while (1)
          {
            v70 = v63 + v67;
            if (v128)
            {
              v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v63 + v67, v65);
            }
            else
            {
              if ((v70 & 0x8000000000000000) != 0)
                goto LABEL_179;
              if (v70 >= *(_QWORD *)(v126 + 16))
                goto LABEL_180;
              v71 = *(id *)(v123 + 8 * v67);
            }
            v56 = v71;
            if (__OFADD__(v70, 1))
              goto LABEL_176;
            if (v68 == v67)
              break;
            *(_QWORD *)(v69 + 8 * v67++) = v71;
            if (v70 + 1 == v66)
            {
              v60 = v109 + v67 + 2;
              v48 = v65;
              goto LABEL_11;
            }
          }
          v63 = v70 + 1;
          v54 = v66;
          v48 = v65;
        }
        swift_release(v59);
        v53 = v58;
        v57 = v63;
        v3 = a1;
      }
      v59[2] = v53;
    }
  }
  if (!v4)
  {
    swift_bridgeObjectRelease(a1);
    v8 = _swiftEmptyArrayStorage;
    goto LABEL_9;
  }
  v113 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v7 >= *(_QWORD *)(v3 + 16))
      goto LABEL_181;
    v76 = *(_QWORD *)(v113 + 8 * v7);
    if ((unint64_t)v76 >> 62)
    {
      if (v76 < 0)
        v106 = *(_QWORD *)(v113 + 8 * v7);
      else
        v106 = v76 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)(v113 + 8 * v7), 2);
      v77 = _CocoaArrayWrapper.endIndex.getter(v106);
      swift_bridgeObjectRelease(v76);
    }
    else
    {
      v77 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(v113 + 8 * v7));
    }
    v78 = v132;
    v79 = v132[2];
    if (__OFADD__(v79, v77))
    {
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
      goto LABEL_198;
    }
    if (!swift_isUniquelyReferenced_nonNull_native(v132) || (v80 = v78[3] >> 1, v80 < v79 + v77))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v78 = v132;
      v80 = v132[3] >> 1;
    }
    v81 = v78[2];
    v129 = (unint64_t)v76 >> 62;
    if ((unint64_t)v76 >> 62)
    {
      if (v76 < 0)
        v86 = v76;
      else
        v86 = v76 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v76);
      v82 = _CocoaArrayWrapper.endIndex.getter(v86);
      swift_bridgeObjectRelease(v76);
      v83 = v80 - v81;
      if (!v82)
      {
LABEL_123:
        if (v77 > 0)
          goto LABEL_183;
        v77 = 0;
        goto LABEL_132;
      }
    }
    else
    {
      v82 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
      v83 = v80 - v81;
      if (!v82)
        goto LABEL_123;
    }
    if (v83 < v77)
      goto LABEL_190;
    v84 = (unint64_t)&v78[v81 + 4];
    if (!v129)
      break;
    if (v82 < 1)
      goto LABEL_197;
    v115 = v7;
    sub_1004CBA30(&qword_1013E7750, (uint64_t *)&unk_1013E19B0, (uint64_t)&protocol conformance descriptor for [A]);
    swift_bridgeObjectRetain(v76);
    for (i = 0; i != v82; ++i)
    {
      sub_1004B804C((uint64_t *)&unk_1013E19B0);
      v88 = sub_10060199C(v131, i, v76);
      v90 = *v89;
      ((void (*)(uint64_t (**)(), _QWORD))v88)(v131, 0);
      *(_QWORD *)(v84 + 8 * i) = v90;
    }
    swift_bridgeObjectRelease(v76);
    v2 = a2;
    v7 = v115;
LABEL_129:
    v3 = a1;
    if (v77 > 0)
    {
      v91 = v132[2];
      v51 = __OFADD__(v91, v77);
      v92 = v91 + v77;
      if (v51)
        goto LABEL_194;
      v132[2] = v92;
    }
LABEL_132:
    if (v77 == v83)
    {
      v74 = v132[2];
      if (v129)
      {
        if (v76 < 0)
          v107 = v76;
        else
          v107 = v76 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v76);
        v93 = _CocoaArrayWrapper.endIndex.getter(v107);
        swift_bridgeObjectRelease(v76);
        if (v82 != v93)
        {
LABEL_135:
          v130 = v76 & 0xC000000000000001;
          if ((v76 & 0xC000000000000001) != 0)
          {
            v94 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v82, v76);
            goto LABEL_139;
          }
          if ((v82 & 0x8000000000000000) == 0)
          {
            if ((unint64_t)v82 < *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v94 = *(id *)(v76 + 8 * v82 + 32);
LABEL_139:
              v95 = v94;
              v96 = v82 + 1;
              if (!__OFADD__(v82, 1))
              {
                v97 = v93;
                v116 = v7;
                while (1)
                {
                  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v74);
                  v99 = v132;
                  if (v74 < v132[3] >> 1)
                  {
                    v124 = v132[3] >> 1;
                    v132[v74 + 4] = v95;
                    v118 = v74++;
                    if (v96 == v93)
                      goto LABEL_102;
                    if (v130)
                    {
                      swift_retain(v99);
                      v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v96, v76);
                    }
                    else
                    {
                      if ((v96 & 0x8000000000000000) != 0)
                        goto LABEL_195;
                      if (v96 >= *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10))
                        goto LABEL_196;
                      v101 = *(void **)(v76 + 32 + 8 * v96);
                      swift_retain(v99);
                      v100 = v101;
                      v93 = v97;
                    }
                    v95 = v100;
                    v98 = v96 + 1;
                    if (__OFADD__(v96, 1))
                      goto LABEL_184;
                    if (v74 < v124)
                    {
                      v99[v74 + 4] = v100;
                      if (v98 == v93)
                      {
                        v73 = v118;
LABEL_101:
                        v74 = v73 + 2;
                        swift_release(v99);
LABEL_102:
                        v2 = a2;
                        v3 = a1;
                        v99[2] = v74;
                        goto LABEL_103;
                      }
                      v102 = 0;
                      v103 = v76 + 40 + 8 * v96;
                      while (1)
                      {
                        v104 = v98 + v102;
                        if (v130)
                        {
                          v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v98 + v102, v76);
                        }
                        else
                        {
                          if ((v104 & 0x8000000000000000) != 0)
                            goto LABEL_177;
                          if (v104 >= *(_QWORD *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10))
                            goto LABEL_178;
                          v105 = *(id *)(v103 + 8 * v102);
                        }
                        v95 = v105;
                        if (__OFADD__(v104, 1))
                          break;
                        if (v124 - v118 - 2 == v102)
                        {
                          v98 = v104 + 1;
                          v7 = v116;
                          v93 = v97;
                          v74 = v124;
                          goto LABEL_142;
                        }
                        v99[v118 + 6 + v102++] = v105;
                        if (v104 + 1 == v97)
                        {
                          v7 = v116;
                          v73 = v118 + v102;
                          goto LABEL_101;
                        }
                      }
                      __break(1u);
LABEL_175:
                      __break(1u);
LABEL_176:
                      __break(1u);
LABEL_177:
                      __break(1u);
LABEL_178:
                      __break(1u);
LABEL_179:
                      __break(1u);
LABEL_180:
                      __break(1u);
LABEL_181:
                      __break(1u);
                      goto LABEL_182;
                    }
LABEL_142:
                    swift_release(v99);
                    v96 = v98;
                  }
                  v99[2] = v74;
                }
              }
LABEL_199:
              __break(1u);
            }
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
            goto LABEL_209;
          }
LABEL_198:
          __break(1u);
          goto LABEL_199;
        }
      }
      else
      {
        v93 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v82 != v93)
          goto LABEL_135;
      }
    }
LABEL_103:
    ++v7;
    swift_bridgeObjectRelease(v76);
    specialized ContiguousArray._endMutation()(v75);
    if (v7 == v121)
      goto LABEL_4;
  }
  if ((v77 & 0x8000000000000000) == 0)
  {
    v85 = (v76 & 0xFFFFFFFFFFFFFF8) + 32;
    if (v85 < v84 + 8 * v77 && v84 < v85 + 8 * v77)
      goto LABEL_207;
    sub_1004B8930(0, (unint64_t *)&qword_1013E19A0, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(v84);
    goto LABEL_129;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
LABEL_209:
  __break(1u);
  return result;
}

unint64_t sub_10054ACFC(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_40;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v5 = *v1;
    v6 = *(_QWORD *)(*v1 + 16);
    v7 = v6 + v4;
    if (__OFADD__(v6, v4))
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
    *v1 = v5;
    if (!isUniquelyReferenced_nonNull_native || (v9 = *(_QWORD *)(v5 + 24) >> 1, v9 < (uint64_t)v7))
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      v5 = *v1;
      v9 = *(_QWORD *)(*v1 + 24) >> 1;
    }
    v10 = *(_QWORD *)(v5 + 16);
    v11 = v9 - v10;
    result = sub_100602970(v5 + 8 * v10 + 32, v9 - v10, v3);
    if (v14 < v4)
      goto LABEL_45;
    v2 = result;
    v7 = v13;
    if (v14 >= 1)
    {
      v15 = *(_QWORD *)(*v1 + 16);
      v16 = __OFADD__(v15, v14);
      v17 = v15 + v14;
      if (v16)
        goto LABEL_46;
      *(_QWORD *)(*v1 + 16) = v17;
    }
    if (v14 != v11)
      goto LABEL_35;
    v4 = *(_QWORD *)(*v1 + 16);
    if (!(result >> 62))
    {
      v18 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 == v18)
        goto LABEL_35;
      goto LABEL_14;
    }
LABEL_47:
    if (v2 < 0)
      v32 = v2;
    else
      v32 = v2 & 0xFFFFFFFFFFFFFF8;
    result = _CocoaArrayWrapper.endIndex.getter(v32);
    v18 = result;
    if (v7 == result)
      goto LABEL_35;
LABEL_14:
    v19 = v2 & 0xC000000000000001;
    if ((v2 & 0xC000000000000001) != 0)
    {
      result = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v2);
      goto LABEL_18;
    }
    if ((v7 & 0x8000000000000000) != 0)
      break;
    if (v7 >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_54;
    result = (unint64_t)*(id *)(v2 + 8 * v7 + 32);
LABEL_18:
    v20 = result;
    v21 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_55;
    v37 = v2 & 0xFFFFFFFFFFFFFF8;
    v34 = v1;
    v35 = v2 + 32;
LABEL_21:
    while (1)
    {
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v4);
      v22 = *v1;
      v23 = *(_QWORD *)(*v1 + 24) >> 1;
      if (v4 < v23)
        break;
      *(_QWORD *)(v22 + 16) = v4;
    }
    v24 = v22 + 8 * v4;
    *(_QWORD *)(v24 + 32) = v20;
    if (v21 == v18)
    {
      v29 = v4 + 1;
LABEL_34:
      *(_QWORD *)(*v1 + 16) = v29;
LABEL_35:
      swift_bridgeObjectRelease(v2);
      return specialized ContiguousArray._endMutation()(v30);
    }
    v25 = v2;
    v36 = v22;
    swift_retain(v22);
    v26 = v23;
    v27 = 0;
    v33 = v26;
    v1 = (_QWORD *)(~v4 + v26);
    v3 = v24 + 40;
    while (1)
    {
      v2 = (uint64_t)v27 + v21;
      if (v19)
      {
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)((char *)v27 + v21, v25);
      }
      else
      {
        if (v2 < 0)
          goto LABEL_38;
        if ((unint64_t)v2 >= *(_QWORD *)(v37 + 16))
          goto LABEL_39;
        v28 = *(id *)(v35 + 8 * v21 + 8 * (_QWORD)v27);
      }
      v20 = (unint64_t)v28;
      v16 = __OFADD__(v2++, 1);
      if (v16)
        break;
      if (v1 == v27)
      {
        swift_release(v36);
        v1 = v34;
        v21 = v2;
        v4 = v33;
        v2 = v25;
        *(_QWORD *)(*v34 + 16) = v33;
        goto LABEL_21;
      }
      *(_QWORD *)(v3 + 8 * (_QWORD)v27) = v28;
      v27 = (_QWORD *)((char *)v27 + 1);
      if (v2 == v18)
      {
        swift_release(v36);
        v29 = (uint64_t)v27 + v4 + 1;
        v1 = v34;
        v2 = v25;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    if (v3 < 0)
      v31 = v3;
    else
      v31 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v3);
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_10054AFEC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_10054B054;
  return v5(v2 + 32);
}

uint64_t sub_10054B054()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10054B0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_10054B150(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *((_BYTE *)v1 + v5 + *(_QWORD *)(v4 + 64));
  v11 = (_QWORD *)swift_task_alloc(dword_1013E18F4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_10053CE34(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10054B1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  v10 = *a5;
  v11 = (_QWORD *)swift_task_alloc(dword_1013E1934);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1004CFD00;
  return sub_1005495CC(a1, a2, a3, a4, v10);
}

uint64_t sub_10054B278()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10054B2AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1924);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *))((char *)&dword_1013E1920
                                                                                + dword_1013E1920))(a1, v4, v5, v6, v1 + 5);
}

id sub_10054B334()
{
  uint64_t v0;

  return sub_100A39558(*(void **)(v0 + 16));
}

uint64_t sub_10054B33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];
  _BYTE v9[24];
  ValueMetadata *v10;
  unint64_t v11;

  swift_unknownObjectWeakAssign(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPopoverController, a2);
  v10 = &type metadata for CRLTipSendCopy;
  v11 = sub_10054F9E0();
  v6 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess(v6, v8, 33, 0);
  sub_10054F910((uint64_t)v9, v6);
  result = swift_endAccess(v8);
  if (a4)
    return a4(result);
  return result;
}

uint64_t sub_10054B3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;

  v16 = *a4;
  v17 = (_QWORD *)swift_task_alloc(dword_1013E1974);
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_1004CFD00;
  return sub_100548F40(a1, a2, a3, v16, a5, a6, a7, a8);
}

uint64_t sub_10054B478(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_10054B4E0;
  return v5(v2 + 16);
}

uint64_t sub_10054B4E0()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10054B530(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = __DataStorage._bytes.getter();
  v8 = (char *)result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = __DataStorage._length.getter();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  return memcmp(a4, v8, v11) == 0;
}

BOOL sub_10054B5CC(uint64_t a1, uint64_t a2, void *__s1)
{
  uint64_t __s2;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;

  __s2 = a1;
  v5 = a2;
  v6 = BYTE2(a2);
  v7 = BYTE3(a2);
  v8 = BYTE4(a2);
  v9 = BYTE5(a2);
  if (!__s1)
    __break(1u);
  return memcmp(__s1, &__s2, BYTE6(a2)) == 0;
}

uint64_t sub_10054B6AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (((*a1 ^ *a2) & 1) != 0
    || ((a1[1] ^ a2[1]) & 1) != 0
    || ((a1[2] ^ a2[2]) & 1) != 0
    || ((a1[3] ^ a2[3]) & 1) != 0
    || ((a1[4] ^ a2[4]) & 1) != 0
    || ((a1[5] ^ a2[5]) & 1) != 0
    || ((a1[6] ^ a2[6]) & 1) != 0
    || ((a1[7] ^ a2[7]) & 1) != 0)
  {
LABEL_15:
    v9 = 0;
    return v9 & 1;
  }
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a2 + 1);
  v7 = *((_QWORD *)a2 + 2);
  if (v4 == v6 && v5 == v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), v9 = 0, (v8 & 1) != 0))
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    if ((static NSObject.== infix(_:_:)(*((_QWORD *)a1 + 3), *((_QWORD *)a2 + 3)) & 1) != 0
      && ((a1[32] ^ a2[32]) & 1) == 0
      && ((a1[33] ^ a2[33]) & 1) == 0)
    {
      v9 = ((a1[34] & 1) == 0) ^ a2[34];
      return v9 & 1;
    }
    goto LABEL_15;
  }
  return v9 & 1;
}

_QWORD *sub_10054B7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v3 = v2;
  v35 = a2;
  v37 = a1;
  v4 = type metadata accessor for UUID(0);
  v32 = *(_QWORD **)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013F0320);
  v31 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = (unint64_t)_swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v37, v10);
  v17 = sub_1004CBA30(&qword_1013E1A60, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
  dispatch thunk of Sequence.makeIterator()(v10, v17);
  v18 = sub_1004CBA30(&qword_1013E1A68, &qword_1013F0320, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>.Iterator);
  v36 = v16;
  v37 = v14;
  dispatch thunk of IteratorProtocol.next()(v14, v18);
  v19 = v32;
  v20 = (unsigned int (*)(char *, uint64_t, uint64_t))v32[6];
  if (v20(v9, 1, v4) == 1)
  {
    v21 = v31;
    v19 = _swiftEmptyArrayStorage;
  }
  else
  {
    v22 = (void (*)(char *, char *, uint64_t))v19[4];
    v33 = v9;
    v34 = v22;
    v23 = v35;
    v22(v6, v9, v4);
    while (1)
    {
      sub_100B1C950((uint64_t)v6, v23, &v38);
      if (v3)
      {
        ((void (*)(char *, uint64_t))v19[1])(v6, v4);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v37);
        swift_bridgeObjectRelease(v39);
        return v19;
      }
      v25 = ((uint64_t (*)(char *, uint64_t))v19[1])(v6, v4);
      v26 = v38;
      if (v38)
      {
        v35 = 0;
        v27 = v23;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
        v29 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v28 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v29 >= v28 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
        v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
        specialized Array._endMutation()(v24);
        v23 = v27;
        v9 = v33;
        v3 = v35;
      }
      dispatch thunk of IteratorProtocol.next()(v37, v18);
      if (v20(v9, 1, v4) == 1)
        break;
      v34(v6, v9, v4);
    }
    v19 = (_QWORD *)v39;
    v21 = v31;
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v37);
  return v19;
}

id sub_10054BB28()
{
  id v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  id v9;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v0, "setText:", v7);

  objc_msgSend(v0, "setEnabled:", 0);
  v8 = objc_msgSend((id)objc_opt_self(UIColor), "placeholderTextColor");
  objc_msgSend(v0, "setTextColor:", v8);

  v9 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v0);
  return v9;
}

void sub_10054BCC0(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t, uint64_t, __n128))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v6 = (uint64_t *)(a1 + 56);
    while (1)
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      sub_1004BE310(v7, v8);
      v11 = swift_bridgeObjectRetain(v10);
      v12 = a2(v7, v8, v9, v10, v11);
      if (v2)
        break;
      v13 = v12;
      v6 += 4;
      sub_1004BBBC8(v7, v8);
      swift_bridgeObjectRelease(v10);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
      v15 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
      specialized ContiguousArray._endMutation()(v16);
      if (!--v4)
        return;
    }
    sub_1004BBBC8(v7, v8);
    swift_bridgeObjectRelease(v10);
    swift_release(_swiftEmptyArrayStorage);
  }
}

Class sub_10054BDF0()
{
  void *v0;
  id v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  NSString v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  NSString v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  Swift::String v69;
  objc_class *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  NSString v75;
  NSString v76;
  id v77;
  uint64_t v78;
  void *v79;
  void *v80;
  void *v81;
  NSString v82;
  objc_class *v83;
  Swift::String v84;
  Class isa;
  Swift::OpaquePointer v87;
  Swift::OpaquePointer v88;
  void *v89;
  void *v90;
  void *v91;
  uint64_t v92;
  unsigned __int8 v93;
  UIMenuElementSize preferredElementSize;
  UIMenuElementSize v95;
  UIImage_optional v96;
  UIImage_optional v97;

  v95 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = swift_allocObject(&unk_10126AB28, 24, 7);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLSnapToGrid"));
  v11 = AppStorage.init<A>(wrappedValue:_:store:)(0, v9, v10, 0);
  *(_QWORD *)(v8 + 16) = v11;
  swift_retain(v11);
  AppStorage.wrappedValue.getter(&preferredElementSize, v12, &type metadata for Bool);
  swift_release(v11);
  v13 = preferredElementSize;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  swift_retain(v8);
  v92 = v8;
  v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v5, v7, 0, 0, 0, 0, 0, 0, 0, 0, v13, sub_10054EA38, v8);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v91 = v14;
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v18 = objc_msgSend(v0, "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = swift_allocObject(&unk_10126AB28, 24, 7);
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLDisplayCenterGuides"));
  v28 = AppStorage.init<A>(wrappedValue:_:store:)(1, v26, v27, 0);
  *(_QWORD *)(v25 + 16) = v28;
  swift_retain(v28);
  AppStorage.wrappedValue.getter(&v93, v29, &type metadata for Bool);
  swift_release(v28);
  v30 = v93;
  swift_retain(v25);
  v31 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22, v24, 0, 0, 0, 0, 0, 0, 0, 0, v30, sub_10054EA38, v25);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v90 = v31;
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
  specialized Array._endMutation()(v34);
  v35 = objc_msgSend(v0, "mainBundle");
  v36 = String._bridgeToObjectiveC()();
  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v35, "localizedStringForKey:value:table:", v36, v37, 0);

  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  v42 = swift_allocObject(&unk_10126AB28, 24, 7);
  v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLDisplayEdgeGuides"));
  v45 = AppStorage.init<A>(wrappedValue:_:store:)(0, v43, v44, 0);
  *(_QWORD *)(v42 + 16) = v45;
  swift_retain(v45);
  AppStorage.wrappedValue.getter(&v93, v46, &type metadata for Bool);
  swift_release(v45);
  v47 = v93;
  swift_retain(v42);
  v48 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v39, v41, 0, 0, 0, 0, 0, 0, 0, 0, v47, sub_10054EA38, v42);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
  v50 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
  v49 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v50 >= v49 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
  v89 = v48;
  v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v48);
  specialized Array._endMutation()(v51);
  v52 = objc_msgSend(v0, "mainBundle");
  v53 = String._bridgeToObjectiveC()();
  v54 = String._bridgeToObjectiveC()();
  v55 = objc_msgSend(v52, "localizedStringForKey:value:table:", v53, v54, 0);

  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v58 = v57;

  v59 = swift_allocObject(&unk_10126AB28, 24, 7);
  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("CRLDisplaySpacingGuides"));
  v62 = AppStorage.init<A>(wrappedValue:_:store:)(1, v60, v61, 0);
  *(_QWORD *)(v59 + 16) = v62;
  swift_retain(v62);
  AppStorage.wrappedValue.getter(&v93, v63, &type metadata for Bool);
  swift_release(v62);
  v64 = v93;
  swift_retain(v59);
  v65 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v56, v58, 0, 0, 0, 0, 0, 0, 0, 0, v64, sub_10054EA38, v59);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
  v67 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10);
  v66 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v67 >= v66 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
  v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
  specialized Array._endMutation()(v68);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v69._countAndFlagsBits = 0;
  v69._object = (void *)0xE000000000000000;
  v96.value.super.isa = 0;
  v96.is_nil = 0;
  v70 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v69, (Swift::String_optional)0, v96, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v87).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
  v72 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v71 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v72 >= v71 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
  v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
  specialized Array._endMutation()(v73);
  v74 = objc_msgSend(v0, "mainBundle");
  v75 = String._bridgeToObjectiveC()();
  v76 = String._bridgeToObjectiveC()();
  v77 = objc_msgSend(v74, "localizedStringForKey:value:table:", v75, v76, 0);

  v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  v80 = v79;

  v81 = (void *)objc_opt_self(UIImage);
  v82 = String._bridgeToObjectiveC()();
  v83 = (objc_class *)objc_msgSend(v81, "systemImageNamed:", v82);

  v84._countAndFlagsBits = v78;
  v84._object = v80;
  v97.value.super.isa = v83;
  v97.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v84, (Swift::String_optional)0, v97, 0, 0xFFFFFFFFFFFFFFFFLL, v95, v88).super.super.isa;
  swift_release(v92);
  swift_release(v25);
  swift_release(v42);
  swift_release(v59);

  return isa;
}

void sub_10054C750(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  id v18;
  void *v19;
  Class isa;
  NSArray v21;
  NSArray v22;
  void *v23;
  _QWORD *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  char v39[24];
  void **aBlock;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  _QWORD *v45;

  v6 = a1;
  v7 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v35 = a1;
    else
      v35 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v6);
    if (!v36)
      return;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  v8 = v3 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);
  v38 = objc_msgSend(Strong, "editorController");

  if (!v38)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 285, "Missing editor controller", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2u, 285, (uint64_t)"Missing editor controller", 25, 2u);
    return;
  }
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (!v10)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 286, "Missing interactive canvas controller", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2u, 286, (uint64_t)"Missing interactive canvas controller", 37, 2u);
    v11 = v38;
    goto LABEL_9;
  }
  v37 = v10;
  if ((objc_msgSend(v10, "documentIsSharedReadOnly") & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 291, "Attempted to insert item when board is read only.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2u, 291, (uint64_t)"Attempted to insert item when board is read only.", 49, 2u);

    v11 = v37;
LABEL_9:

    return;
  }
  v12 = objc_msgSend((id)objc_opt_self(CRLInsertionContext), "nonInteractiveInsertionContext");
  v13 = swift_allocObject(&unk_10126A6F0, 24, 7);
  *(_QWORD *)(v13 + 16) = 0;
  v14 = (_QWORD *)swift_allocObject(&unk_10126A718, 40, 7);
  v14[2] = v6;
  v14[3] = v12;
  v14[4] = v13;
  v44 = sub_10054CE28;
  v45 = v14;
  aBlock = _NSConcreteStackBlock;
  v41 = *(_QWORD *)"";
  v42 = sub_100541BD8;
  v43 = &unk_10126A730;
  v15 = _Block_copy(&aBlock);
  v16 = v45;
  v17 = v12;
  swift_bridgeObjectRetain(v6);
  v18 = v17;
  swift_retain(v13);
  objc_msgSend(v38, "enumerateEditorsOnStackUsingBlock:", v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
  swift_beginAccess(v13 + 16, v39, 0, 0);
  v19 = *(void **)(v13 + 16);
  if (v19)
  {
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain(v19);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v19, "prepareGeometryForInsertingBoardItems:withInsertionContext:", isa, v18);

    v21.super.isa = Array._bridgeToObjectiveC()().super.isa;
    if (a2)
    {
      v44 = a2;
      v45 = a3;
      aBlock = _NSConcreteStackBlock;
      v41 = *(_QWORD *)"";
      v42 = sub_1005D2FC0;
      v43 = &unk_10126A7A8;
      v23 = _Block_copy(&aBlock);
      v24 = v45;
      swift_retain(a3);
      v22.super.isa = (Class)swift_release(v24).n128_u64[0];
    }
    else
    {
      v23 = 0;
    }
    objc_msgSend(v19, "insertBoardItems:withInsertionContext:postProcessBlock:", v21.super.isa, v18, v23, *(double *)&v22.super.isa);
    _Block_release(v23);

    if (v7)
    {
      if (v6 < 0)
        v26 = v6;
      else
        v26 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v27 = sub_1004B804C(&qword_1013E0670);
      v28 = _bridgeCocoaArray<A>(_:)(v26, v27);
      swift_bridgeObjectRelease(v6);
      v6 = v28;
    }
    else
    {
      v25 = swift_bridgeObjectRetain(v6);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v25);
    }
    v29 = type metadata accessor for CRLInsertionAnimationHelper();
    v30 = objc_msgSend(v37, "canvas");
    v31 = (_QWORD *)swift_allocObject(&unk_10126A768, 48, 7);
    v31[2] = v6;
    v31[3] = v37;
    v31[4] = 0;
    v31[5] = v29;
    v44 = sub_10054CE68;
    v45 = v31;
    aBlock = _NSConcreteStackBlock;
    v41 = *(_QWORD *)"";
    v42 = sub_1005D2FC0;
    v43 = &unk_10126A780;
    v32 = _Block_copy(&aBlock);
    v33 = v45;
    swift_bridgeObjectRetain(v6);
    v34 = v37;
    objc_msgSend(v30, "afterLayoutIncludingLayers:performBlock:", 1, v32, swift_release(v33).n128_f64[0]);
    _Block_release(v32);
    swift_release(v13);
    swift_unknownObjectRelease(v19);

    swift_bridgeObjectRelease(v6);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2, 312, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"positionAndInsert(boardItems:at:postProcessBlock:)", 50, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemInserting.swift", 96, 2u, 312, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_release(v13);

  }
}

uint64_t sub_10054CDD0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10054CDF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10054CE28(uint64_t a1, _BYTE *a2)
{
  uint64_t *v2;

  return sub_100A39564(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10054CE34()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_10054CE68()
{
  uint64_t v0;

  sub_1007506F8(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_10054CE74()
{
  unint64_t result;

  result = qword_1013E1940;
  if (!qword_1013E1940)
  {
    result = swift_getWitnessTable(&unk_100F2371C, &type metadata for CRLBoardItemInsertingError);
    atomic_store(result, (unint64_t *)&qword_1013E1940);
  }
  return result;
}

id sub_10054CEB8(char a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  objc_super v14;
  _BYTE v15[24];

  v7 = a1 & 1;
  v8 = &a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0);
  v9 = (uint64_t)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL];
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction] = 0;
  a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role] = v7;
  *((_QWORD *)v8 + 1) = &off_10126A518;
  swift_unknownObjectWeakAssign(v8, a2);
  swift_beginAccess(v9, v15, 33, 0);
  v11 = a4;
  sub_10054F3F0(a3, v9);
  swift_endAccess(v15);

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for CRLInsertEditURLAlert(0);
  v12 = objc_msgSendSuper2(&v14, "init");
  sub_1004CB800(a3, &qword_1013E04D0);
  return v12;
}

uint64_t sub_10054CFF4(void *a1, char a2)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[31];
  unsigned __int8 v21;

  v3 = objc_msgSend(a1, "crl_isCompactWidth");
  if (qword_1013DD3C8 != -1)
    swift_once(&qword_1013DD3C8, sub_1008B7558);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v5 = sub_1004F2A1C(v4, (uint64_t)qword_10147FCA8);
  v21 = v3;
  swift_beginAccess(v5, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DDED0 != -1)
    swift_once(&qword_1013DDED0, sub_100D2CA20);
  v6 = sub_1004F2A1C(v4, (uint64_t)qword_101481408);
  v21 = v3;
  swift_beginAccess(v6, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DD450 != -1)
    swift_once(&qword_1013DD450, sub_1008E1D48);
  v7 = sub_1004F2A1C(v4, (uint64_t)qword_10147FDD0);
  v21 = v3;
  swift_beginAccess(v7, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DCB38 != -1)
    swift_once(&qword_1013DCB38, sub_1005E97DC);
  v8 = sub_1004F2A1C(v4, (uint64_t)qword_10147EB80);
  v21 = v3;
  swift_beginAccess(v8, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DD660 != -1)
    swift_once(&qword_1013DD660, sub_1009E1710);
  v9 = sub_1004F2A1C(v4, (uint64_t)qword_101480240);
  v21 = v3;
  swift_beginAccess(v9, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DCD18 != -1)
    swift_once(&qword_1013DCD18, sub_10069C598);
  v10 = sub_1004F2A1C(v4, (uint64_t)qword_10147EF80);
  v21 = v3;
  swift_beginAccess(v10, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DD3B0 != -1)
    swift_once(&qword_1013DD3B0, sub_1008B74EC);
  v11 = sub_1004F2A1C(v4, (uint64_t)qword_10147FC60);
  v12 = a2 & 1;
  v21 = v12;
  swift_beginAccess(v11, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DDEB8 != -1)
    swift_once(&qword_1013DDEB8, sub_100D2C9B4);
  v13 = sub_1004F2A1C(v4, (uint64_t)qword_1014813C0);
  v21 = v12;
  swift_beginAccess(v13, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DD298 != -1)
    swift_once(&qword_1013DD298, sub_1008591E4);
  v14 = sub_1004F2A1C(v4, (uint64_t)qword_10147F908);
  v21 = v12;
  swift_beginAccess(v14, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DD448 != -1)
    swift_once(&qword_1013DD448, sub_1008E1D24);
  v15 = sub_1004F2A1C(v4, (uint64_t)qword_10147FDB8);
  v21 = v12;
  swift_beginAccess(v15, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DCB28 != -1)
    swift_once(&qword_1013DCB28, sub_1005E9794);
  v16 = sub_1004F2A1C(v4, (uint64_t)qword_10147EB50);
  v21 = v12;
  swift_beginAccess(v16, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DD650 != -1)
    swift_once(&qword_1013DD650, sub_1009E16C8);
  v17 = sub_1004F2A1C(v4, (uint64_t)qword_101480210);
  v21 = v12;
  swift_beginAccess(v17, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  swift_endAccess(v20);
  if (qword_1013DCD08 != -1)
    swift_once(&qword_1013DCD08, sub_10069C550);
  v18 = sub_1004F2A1C(v4, (uint64_t)qword_10147EF50);
  v21 = v12;
  swift_beginAccess(v18, v20, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v21, v4);
  return swift_endAccess(v20);
}

uint64_t sub_10054D554(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[31];
  char v10;

  if (qword_1013DD3B8 != -1)
    swift_once(&qword_1013DD3B8, sub_1008B7510);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147FC78);
  v10 = a1 & 1;
  swift_beginAccess(v3, v9, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v10, v2);
  swift_endAccess(v9);
  if (qword_1013DDEC0 != -1)
    swift_once(&qword_1013DDEC0, sub_100D2C9D8);
  v4 = sub_1004F2A1C(v2, (uint64_t)qword_1014813D8);
  v10 = a1 & 1;
  swift_beginAccess(v4, v9, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v10, v2);
  swift_endAccess(v9);
  if (qword_1013DD2A0 != -1)
    swift_once(&qword_1013DD2A0, sub_100859208);
  v5 = sub_1004F2A1C(v2, (uint64_t)qword_10147F920);
  v10 = a1 & 1;
  swift_beginAccess(v5, v9, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v10, v2);
  swift_endAccess(v9);
  if (qword_1013DD458 != -1)
    swift_once(&qword_1013DD458, sub_1008E1D74);
  v6 = sub_1004F2A1C(v2, (uint64_t)qword_10147FDE8);
  v10 = a1 & 1;
  swift_beginAccess(v6, v9, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v10, v2);
  swift_endAccess(v9);
  if (qword_1013DCB30 != -1)
    swift_once(&qword_1013DCB30, sub_1005E97B8);
  v7 = sub_1004F2A1C(v2, (uint64_t)qword_10147EB68);
  v10 = a1 & 1;
  swift_beginAccess(v7, v9, 33, 0);
  Tips.Parameter.wrappedValue.setter(&v10, v2);
  return swift_endAccess(v9);
}

_QWORD *sub_10054D788(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, __n128);
  uint64_t v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  NSURL *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  NSURL *v53;
  void *v54;
  void *v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned __int8 v59;
  id v60;
  id v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v70;
  id v71;
  __n128 v72;
  id v73;
  __n128 v74;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t, __n128);
  _QWORD *v96;
  id v97;

  v3 = v2;
  v83 = a2;
  v5 = type metadata accessor for UUID(0);
  v81 = *(_QWORD *)(v5 - 8);
  v82 = v5;
  __chkstk_darwin(v5);
  v80 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v90 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v91 = (char *)&v76 - v11;
  __chkstk_darwin(v12);
  v92 = (char *)&v76 - v13;
  __chkstk_darwin(v14);
  v79 = (char *)&v76 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v76 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v76 - v20;
  v22 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v22);
  v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
  {
    v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
    v70 = swift_bridgeObjectRetain(a1);
    v96 = _swiftEmptyArrayStorage;
    v69(v24, 1, 1, v7, v70);
LABEL_21:

    swift_bridgeObjectRelease(a1);
    return v96;
  }
  v76 = v3;
  v86 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v27 = a1 + v86;
  v85 = *(_QWORD *)(v8 + 72);
  v95 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v77 = a1;
  v28 = swift_bridgeObjectRetain(a1);
  v96 = _swiftEmptyArrayStorage;
  v87 = v24;
  v88 = v8;
  v89 = v21;
  v78 = v18;
  while (1)
  {
    v94 = v26;
    v95(v24, v27, v7, v28);
    v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v84)(v24, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v24, 1, v7) == 1)
    {
      a1 = v77;
      goto LABEL_21;
    }
    v93 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 32);
    v33 = v93(v21, v24, v7);
    if ((URL.isFileURL.getter(v33) & 1) == 0)
    {
      ((void (*)(char *, char *, uint64_t))v95)(v92, v21, v7);
      if ((swift_isUniquelyReferenced_nonNull_native(v96) & 1) == 0)
        v96 = (_QWORD *)sub_100D0FAC8(0, v96[2] + 1, 1, (unint64_t)v96);
      v68 = v96[2];
      v67 = v96[3];
      if (v68 >= v67 >> 1)
        v96 = (_QWORD *)sub_100D0FAC8(v67 > 1, v68 + 1, 1, (unint64_t)v96);
      v29 = v96;
      v96[2] = v68 + 1;
      v30 = (char *)v29 + v86 + v68 * v85;
      v31 = v85;
      v93(v30, v92, v7);
      v32 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      goto LABEL_4;
    }
    v34 = objc_msgSend(v83, "URL");
    v35 = v79;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);

    v36 = v80;
    v38 = UUID.init()(v37);
    v39 = UUID.uuidString.getter(v38);
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v36, v82);
    URL.appendingPathComponent(_:isDirectory:)(v39, v41, 1);
    v42 = swift_bridgeObjectRelease(v41);
    v32 = *(void (**)(char *, uint64_t, __n128))(v88 + 8);
    v32(v35, v7, v42);
    URL._bridgeToObjectiveC()(v43);
    v45 = v44;
    v97 = 0;
    LOBYTE(v35) = objc_msgSend(v25, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v44, 1, 0, &v97);

    v46 = v97;
    if ((v35 & 1) == 0)
    {
      v71 = v97;
      swift_bridgeObjectRelease(v96);
      swift_bridgeObjectRelease(v77);
      _convertNSErrorToError(_:)(v46);

      swift_willThrow(v72);
      goto LABEL_24;
    }
    v47 = v97;
    v49 = URL.lastPathComponent.getter(v48);
    v51 = v50;
    v52 = v91;
    URL.appendingPathComponent(_:isDirectory:)(v49, v50, 0);
    swift_bridgeObjectRelease(v51);
    URL._bridgeToObjectiveC()(v53);
    v55 = v54;
    URL._bridgeToObjectiveC()(v56);
    v58 = v57;
    v97 = 0;
    v59 = objc_msgSend(v25, "copyItemAtURL:toURL:error:", v55, v57, &v97);

    v60 = v97;
    if ((v59 & 1) == 0)
      break;
    ((void (*)(char *, char *, uint64_t))v95)(v90, v52, v7);
    v61 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native(v96) & 1) == 0)
      v96 = (_QWORD *)sub_100D0FAC8(0, v96[2] + 1, 1, (unint64_t)v96);
    v62 = v78;
    v8 = v88;
    v21 = v89;
    v64 = v96[2];
    v63 = v96[3];
    if (v64 >= v63 >> 1)
      v96 = (_QWORD *)sub_100D0FAC8(v63 > 1, v64 + 1, 1, (unint64_t)v96);
    v65 = v96;
    v96[2] = v64 + 1;
    v66 = (char *)v65 + v86 + v64 * v85;
    v31 = v85;
    v93(v66, v90, v7);
    ((void (*)(char *, uint64_t))v32)(v91, v7);
    ((void (*)(char *, uint64_t))v32)(v62, v7);
LABEL_4:
    ((void (*)(char *, uint64_t))v32)(v21, v7);
    v27 += v31;
    v26 = v94 - 1;
    v24 = v87;
    if (v94 == 1)
    {
      a1 = v77;
      v84(v87, 1, 1, v7, v28);
      goto LABEL_21;
    }
  }
  v73 = v97;
  swift_bridgeObjectRelease(v96);
  swift_bridgeObjectRelease(v77);
  _convertNSErrorToError(_:)(v60);

  swift_willThrow(v74);
  ((void (*)(char *, uint64_t))v32)(v52, v7);
LABEL_24:
  ((void (*)(char *, uint64_t))v32)(v78, v7);
  ((void (*)(char *, uint64_t))v32)(v89, v7);
  return v96;
}

uint64_t sub_10054DE24()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

unint64_t sub_10054DE58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1950;
  if (!qword_1013E1950)
  {
    v1 = sub_1004B8930(255, &qword_1013E1948, PHPickerViewController_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E1950);
  }
  return result;
}

uint64_t sub_10054DEB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10054DEC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10054DEE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10054DF20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10053E068(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_10054DF2C()
{
  return sub_10054FD0C((void (*)(_QWORD))&_swift_release);
}

void sub_10054DF38()
{
  uint64_t v0;

  sub_10053E87C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10054DF40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_errorRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_10054DF94()
{
  uint64_t v0;

  sub_10053E294(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_10054DFAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1 + 4;
  v7 = v1[5];
  v8 = v1[6];
  v10 = v1[7];
  v9 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1013E1964);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013E1960 + dword_1013E1960))(a1, v4, v5, v6, v7, v8, v10, v9);
}

double sub_10054E054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100C1CC20();
  static TaskPriority.userInitiated.getter();
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
  type metadata accessor for MainActor(0);
  swift_retain(v5);
  swift_bridgeObjectRetain(a1);
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_10126B5A0, 72, 7);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v5;
  v9[5] = a1;
  v9[7] = 0;
  v9[8] = 0;
  v9[6] = 0;
  v10 = sub_100521BF0((uint64_t)v4, (uint64_t)&unk_1013E1D10, (uint64_t)v9, (uint64_t)&unk_10126A620, (uint64_t)&type metadata for () + 8, (uint64_t)&unk_1013FE730);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

id sub_10054E17C(void *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[72];
  _BYTE v18[24];

  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v18, 0, 0);
  v4 = (void *)static OS_os_log.crlDefault;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v16 = a2;
  v7 = v4;
  swift_errorRetain(a2);
  v8 = sub_1004B804C(&qword_1013E0210);
  v9 = String.init<A>(describing:)(&v16, v8);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v13, "Document camera failed with error: %@", 37, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  return objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
}

uint64_t sub_10054E2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11[24];

  v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v5, v11, 0, 0);
  sub_1004B8460(v5, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  v6 = v4;
  v7 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v7);
  v8 = v10[1];
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);

  return v8;
}

void sub_10054E424(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;
  unsigned int v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  double v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34[24];
  _QWORD v35[5];

  v3 = v2;
  v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  v31 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v32 = v9;
  v10 = *(char **)(v9 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v11, v34, 0, 0);
  sub_1004B8460(v11, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  v12 = v10;
  v13 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v13);
  v15 = v35[0];
  v14 = v35[1];
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);

  if (v15 == a1 && v14 == a2)
  {
    v16 = swift_bridgeObjectRelease(a2).n128_u64[0];
    goto LABEL_9;
  }
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v15, v14, 0);
  v16 = swift_bridgeObjectRelease(v14).n128_u64[0];
  if ((v17 & 1) != 0)
    goto LABEL_9;
  v18 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v18 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
LABEL_9:
    v20 = objc_msgSend(v3, "navigationItem", *(double *)&v16);
    v21 = objc_msgSend(v3, "traitCollection");
    v22 = objc_msgSend((id)objc_opt_self(UIDevice), "crl_phoneUI");
    v23 = objc_msgSend(v21, "crl_isCompactWidth");
    v24 = v23;
    if (v22)
    {
      if ((v23 & 1) != 0)
      {
        v25 = objc_msgSend(v21, "crl_isCompactHeight");

        if ((v25 & 1) == 0)
          goto LABEL_14;
      }
      else
      {

      }
    }
    else
    {

      if ((v24 & 1) != 0)
      {
LABEL_14:
        v19 = 0;
LABEL_17:
        objc_msgSend(v20, "setTitle:", v19, v26);

        goto LABEL_18;
      }
    }
    v27 = *(char **)(v32 + v31);
    v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v28, v35, 0, 0);
    sub_1004B8460(v28, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    v29 = v27;
    CRRegister.wrappedValue.getter(v13);
    v30 = v33;
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);

    v19 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v30).n128_u64[0];
    goto LABEL_17;
  }
  v19 = objc_msgSend(v3, "traitCollection", sub_100C2A460(a1, a2));
  sub_1005221A4(v19, (int)objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController], "documentIsSharedReadOnly"), (uint64_t)v35);
  sub_100522548((unsigned __int8 *)v35, 0);
  sub_1004DB520((uint64_t)v35);
LABEL_18:

}

uint64_t sub_10054E778(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 16));
  v3 = v2;
  return a1;
}

void sub_10054E7A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    swift_bridgeObjectRelease(a3);

  }
}

void sub_10054E7D8(uint64_t a1)
{
  uint64_t v1;

  sub_100526CD4(a1, v1);
}

uint64_t sub_10054E7E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E198C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100524360(a1, v4, v5, v6);
}

Class sub_10054E850(uint64_t a1)
{
  uint64_t v1;

  return sub_10052E1F4(a1, v1);
}

uint64_t sub_10054E858()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_10054E878(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id result;

  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    return a4;
  }
  return result;
}

uint64_t sub_10054E8A8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10054E8CC(uint64_t a1)
{
  uint64_t v1;

  sub_100524BC0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10054E8D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10054E8F8(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_10052860C(a1, a2, *(char **)(v2 + 16));
}

double sub_10054E900(uint64_t a1)
{
  uint64_t v1;

  return sub_1005290D8(a1, v1);
}

void sub_10054E908(int a1)
{
  uint64_t v1;

  sub_100528450(a1, *(char **)(v1 + 16));
}

unint64_t sub_10054E910()
{
  unint64_t result;

  result = qword_1013E19C0;
  if (!qword_1013E19C0)
  {
    result = swift_getWitnessTable(&unk_100F21558, &type metadata for CRLPencilAndPaperFeatureFlags);
    atomic_store(result, &qword_1013E19C0);
  }
  return result;
}

double sub_10054E954(void *a1)
{
  uint64_t v1;

  return sub_100529168(a1, v1);
}

uint64_t sub_10054E95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10054E9BC(uint64_t a1)
{
  uint64_t v1;

  sub_10052AFFC(a1, v1);
}

void sub_10054E9D4(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_10052B8F8(a1, a2, v2);
}

uint64_t sub_10054E9DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10054EA00(uint64_t a1)
{
  uint64_t v1;

  sub_10052BBA8(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10054EA0C(uint64_t a1)
{
  uint64_t v1;

  sub_10052BB50(a1, v1);
}

uint64_t sub_10054EA14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10054EA38(uint64_t a1)
{
  uint64_t v1;

  return sub_10052BC70(a1, v1);
}

void sub_10054EA50()
{
  sub_10052C3D4();
}

void sub_10054EA58()
{
  sub_10052C4FC();
}

uint64_t sub_10054EA60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10054EA84(uint64_t a1)
{
  uint64_t v1;

  sub_10052C624(a1, *(_BYTE *)(v1 + 16));
}

double sub_10054EA90(void *a1)
{
  uint64_t v1;

  return sub_100529D3C(a1, v1);
}

double sub_10054EA98(void *a1)
{
  uint64_t v1;

  return sub_10052A298(a1, v1);
}

uint64_t sub_10054EAA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013E19CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_10052A614(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10054EB28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013E1A3C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_10052A0B8(a1, v4, v5, v6, v7, v8);
}

double sub_10054EBA8(uint64_t a1)
{
  uint64_t v1;

  return sub_10052B058(a1, v1);
}

uint64_t sub_10054EBB0()
{
  return sub_10054EF48((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10054EBC0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10054EBFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013E1A74);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1005294E4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10054EC7C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10054ECA0(uint64_t a1)
{
  uint64_t v1;

  sub_10052D558(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), (void (*)(BOOL))sub_100C2B1E8);
}

void sub_10054ECCC()
{
  uint64_t v0;

  sub_100C3C7B8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10054ECD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v2 | 7;
  v5 = (v3 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + v0;
  v7 = v5 + 16;
  v8 = v0 + v3;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v10 + 20) + 8));

  return swift_deallocObject(v0, v7, v4);
}

double sub_10054ED78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100528B90(a1, v1 + v4, *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64)), *(void **)(((v4 + *(_QWORD *)(v3 + 64)) & 0xFFFFFFFFFFFFF8) + v1 + 8));
}

uint64_t sub_10054EDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (v3 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v6 = v5 + v0;
  v7 = v5 + 16;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v8 + *(int *)(v10 + 20) + 8));

  return swift_deallocObject(v0, v7, v4);
}

uint64_t sub_10054EE78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_BYTE *)(v1 + v5 + *(_QWORD *)(v4 + 64));
  v10 = (_QWORD *)swift_task_alloc(dword_1013E1A8C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_100528D28(a1, v6, v7, v8, v9);
}

uint64_t sub_10054EF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10052701C(a1, a2, v2);
}

id sub_10054EF2C()
{
  uint64_t v0;

  return sub_1005282D8(v0);
}

void sub_10054EF34(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100527C80(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_10054EF3C()
{
  return sub_10054EF48((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10054EF48(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  a1(*(_QWORD *)(v1 + 48));
  return swift_deallocObject(v1, 56, 7);
}

uint64_t sub_10054EF88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013E1AB4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100527140(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10054F00C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA314);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_100911218(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10054F08C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E1AD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1013E1AD0 + dword_1013E1AD0))(a1, v4);
}

unint64_t sub_10054F0FC()
{
  unint64_t result;

  result = qword_1013E1AF8;
  if (!qword_1013E1AF8)
  {
    result = swift_getWitnessTable(&unk_100F19DC0, &type metadata for CRLEditableBezierPathSourceData.NodeType);
    atomic_store(result, (unint64_t *)&qword_1013E1AF8);
  }
  return result;
}

id sub_10054F140()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "undo");
}

id sub_10054F150()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "redo");
}

void sub_10054F160(uint64_t a1)
{
  uint64_t v1;

  sub_10053CA18(a1, v1);
}

double sub_10054F168(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  return sub_10052CEE8(a1, a2, v2);
}

double sub_10054F170(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  return sub_10052D230(a1, a2, v2);
}

void sub_10054F178(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_10052D5C4(a1, a2, v2);
}

void sub_10054F180(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_10052D7E4(a1, a2, v2);
}

uint64_t sub_10054F188()
{
  return sub_10054FD0C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_10054F194(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_10052DB14(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10054F19C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10054F1C0(uint64_t a1)
{
  uint64_t v1;

  sub_10052E194(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16));
}

void sub_10054F1CC(uint64_t a1)
{
  uint64_t v1;

  sub_10052DAAC(a1, v1, (SEL *)&selRef_zoomToFitAllContent);
}

void sub_10054F1EC(uint64_t a1)
{
  uint64_t v1;

  sub_10052DAAC(a1, v1, (SEL *)&selRef_zoomToCurrentSelection);
}

void sub_10054F20C(uint64_t a1)
{
  uint64_t v1;

  sub_10052D558(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), (void (*)(BOOL))sub_100C2BC68);
}

void sub_10054F230(uint64_t a1)
{
  uint64_t v1;

  sub_100533538(a1, v1, (SEL *)&selRef_newBoard_);
}

void sub_10054F250(uint64_t a1)
{
  uint64_t v1;

  sub_100532A7C(a1, v1);
}

uint64_t sub_10054F25C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E0174);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1004D5288(a1, v4, v5, v6);
}

void sub_10054F2C8(uint64_t a1)
{
  uint64_t v1;

  sub_100532660(a1, v1);
}

void sub_10054F2D0(uint64_t a1)
{
  uint64_t v1;

  sub_100530F54(a1, v1, sub_100533870);
}

void sub_10054F2F0(void *a1)
{
  uint64_t v1;

  sub_100530188(a1, v1);
}

double sub_10054F2F8(uint64_t a1)
{
  uint64_t v1;

  return sub_100530864(a1, v1);
}

void sub_10054F300(uint64_t a1)
{
  uint64_t v1;

  sub_100530F54(a1, v1, sub_100530D08);
}

void sub_10054F320(uint64_t a1)
{
  uint64_t v1;

  sub_100530F54(a1, v1, sub_100531120);
}

void sub_10054F340(uint64_t a1)
{
  uint64_t v1;

  sub_1005312EC(a1, v1);
}

void sub_10054F348(uint64_t a1)
{
  uint64_t v1;

  sub_10053162C(a1, v1);
}

unint64_t sub_10054F350()
{
  unint64_t result;

  result = qword_1013E1B20;
  if (!qword_1013E1B20)
  {
    result = swift_getWitnessTable(&unk_100F214F8, &type metadata for CRLGenerativePlaygroundFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1013E1B20);
  }
  return result;
}

uint64_t sub_10054F394()
{
  return sub_10054FD0C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

double sub_10054F3A0(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_100532158(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_10054F3A8(uint64_t a1)
{
  uint64_t v1;

  sub_100531F78(a1, v1);
}

void sub_10054F3B0(uint64_t a1)
{
  uint64_t v1;

  sub_100533538(a1, v1, (SEL *)&selRef_presentGenerativePlayground_);
}

uint64_t sub_10054F3D0(void *a1)
{
  uint64_t v1;

  return sub_100531BBC(a1, v1);
}

void sub_10054F3D8(uint64_t a1)
{
  uint64_t v1;

  sub_100531898(a1, v1);
}

void sub_10054F3E0(char a1)
{
  uint64_t v1;

  sub_10053FD44(a1, *(char **)(v1 + 16));
}

void sub_10054F3E8()
{
  uint64_t v0;

  sub_100533E80(*(void **)(v0 + 16));
}

uint64_t sub_10054F3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10054F438(uint64_t a1)
{
  uint64_t v1;

  sub_10053EA14(a1, v1);
}

uint64_t sub_10054F440()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10054F474(char a1)
{
  uint64_t v1;

  sub_100BE4A34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_10054F480(uint64_t a1)
{
  uint64_t v1;

  sub_10052FADC(a1, v1);
}

double sub_10054F488(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 240) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

unint64_t sub_10054F4B4()
{
  unint64_t result;

  result = qword_1013E1B60;
  if (!qword_1013E1B60)
  {
    result = swift_getWitnessTable(&unk_100F135DC, &type metadata for CRLTipConnectionLinesEntryPointFull);
    atomic_store(result, (unint64_t *)&qword_1013E1B60);
  }
  return result;
}

unint64_t sub_10054F4F8()
{
  unint64_t result;

  result = qword_1013E1B68;
  if (!qword_1013E1B68)
  {
    result = swift_getWitnessTable(&unk_100F1035C, &type metadata for CRLTipConnectionLinesOnSelection);
    atomic_store(result, (unint64_t *)&qword_1013E1B68);
  }
  return result;
}

unint64_t sub_10054F53C()
{
  unint64_t result;

  result = qword_1013E1B70;
  if (!qword_1013E1B70)
  {
    result = swift_getWitnessTable(&unk_100F335F0, &type metadata for CRLTipConnectionLinesEntryPointCompact);
    atomic_store(result, (unint64_t *)&qword_1013E1B70);
  }
  return result;
}

uint64_t sub_10054F584(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1B84);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10053A674(a1, v4, v5, v6);
}

uint64_t sub_10054F5F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1B94);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10053AF9C(a1, v4, v5, v6);
}

uint64_t sub_10054F664(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1BA4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100539BEC(a1, v4, v5, v6);
}

uint64_t sub_10054F6D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1BB4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100538288(a1, v4, v5, v6);
}

uint64_t sub_10054F744(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1BC4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100538DCC(a1, v4, v5, v6);
}

uint64_t sub_10054F7B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1BD4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_10053618C(a1, v4, v5, v6);
}

uint64_t sub_10054F824(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1BE4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100536AAC(a1, v4, v5, v6);
}

uint64_t sub_10054F894(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1BF4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_100537488(a1, v4, v5, v6);
}

uint64_t sub_10054F904()
{
  uint64_t v0;

  return sub_100549FC0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_10054F910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1C40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10054F958()
{
  unint64_t result;

  result = qword_10140B720;
  if (!qword_10140B720)
  {
    result = swift_getWitnessTable(&unk_100F20818, &type metadata for CRLTipScenesEntryPointCompact);
    atomic_store(result, &qword_10140B720);
  }
  return result;
}

unint64_t sub_10054F99C()
{
  unint64_t result;

  result = qword_1013E1C50;
  if (!qword_1013E1C50)
  {
    result = swift_getWitnessTable(&unk_100F031A4, &type metadata for CRLTipScenesEntryPointFull);
    atomic_store(result, (unint64_t *)&qword_1013E1C50);
  }
  return result;
}

unint64_t sub_10054F9E0()
{
  unint64_t result;

  result = qword_1013E1C58;
  if (!qword_1013E1C58)
  {
    result = swift_getWitnessTable(&unk_100F220C8, &type metadata for CRLTipSendCopy);
    atomic_store(result, (unint64_t *)&qword_1013E1C58);
  }
  return result;
}

uint64_t sub_10054FA28()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10054FA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10054B33C(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32));
}

unint64_t sub_10054FA70()
{
  unint64_t result;

  result = qword_1013E1C60;
  if (!qword_1013E1C60)
  {
    result = swift_getWitnessTable(&unk_100EFDDD4, &type metadata for CRLTipStencilLibraryCompact);
    atomic_store(result, (unint64_t *)&qword_1013E1C60);
  }
  return result;
}

unint64_t sub_10054FAB4()
{
  unint64_t result;

  result = qword_1013E1C68;
  if (!qword_1013E1C68)
  {
    result = swift_getWitnessTable(&unk_100F15D84, &type metadata for CRLTipStencilLibraryFull);
    atomic_store(result, (unint64_t *)&qword_1013E1C68);
  }
  return result;
}

uint64_t sub_10054FAF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1013E1C9C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CF80C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1013E1C98 + dword_1013E1C98))(a1, v4);
}

id sub_10054FB68(char a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  objc_super v14;
  _BYTE v15[24];

  v7 = a1 & 1;
  v8 = &a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  v9 = (uint64_t)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL];
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction] = 0;
  a4[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role] = v7;
  *((_QWORD *)v8 + 1) = &off_10127A218;
  swift_unknownObjectWeakAssign(v8, a2);
  swift_beginAccess(v9, v15, 33, 0);
  v11 = a4;
  sub_10054F3F0(a3, v9);
  swift_endAccess(v15);

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for CRLInsertEditURLAlert(0);
  v12 = objc_msgSendSuper2(&v14, "init");
  sub_1004CB800(a3, &qword_1013E04D0);
  return v12;
}

void sub_10054FCA4()
{
  uint64_t v0;

  sub_100541294(*(_QWORD *)(v0 + 16));
}

double sub_10054FCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_100D5308C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_10054FCB8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10054FCEC()
{
  uint64_t v0;

  return sub_100540448(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_10054FD00()
{
  return sub_10054FD0C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10054FD0C(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

void sub_10054FD44()
{
  uint64_t v0;

  sub_10053EA94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_10054FD50(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;

  return sub_100534390(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_10054FD68()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10054FD9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013E1CFC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_10053444C(a1, v4, v5, v7, v6);
}

uint64_t sub_10054FE18()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  if (*(_QWORD *)(v0 + 56))
    swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

void sub_10054FE64()
{
  sub_10053C824();
}

uint64_t sub_10054FE70()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10054FEAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013FA314);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_100911218(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10054FF30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013E1D54);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1005260EC(a1, v4, v5, v6);
}

uint64_t sub_10055011C(uint64_t a1)
{
  _QWORD v2[6];

  v2[1] = &unk_100EF7F38;
  v2[2] = &unk_100EF7F50;
  v2[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[4] = &unk_100EF7F68;
  v2[5] = &unk_100EF7F68;
  return swift_initClassMetadata2(a1, 0, 6, v2, a1 + 96);
}

uint64_t sub_100550188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  swift_allocObject(v4, 168, 15);
  v10 = (_QWORD *)swift_task_alloc(dword_1013E1EBC);
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_100550210;
  return sub_100550260(a1, a2, a3, a4);
}

uint64_t sub_100550210(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_100550260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  __n128 v22;

  v6 = v4;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = v4;
  *(_QWORD *)(v5 + 24) = a2;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 56) = *v4;
  v7 = sub_1004B804C(&qword_1013E01F0);
  *(_QWORD *)(v5 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLRealTimeMessengerConfiguration(0);
  *(_QWORD *)(v5 + 72) = v8;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupSessionMessenger.DeliveryMode(0);
  *(_QWORD *)(v5 + 88) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v11 = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 96) = v11;
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v5 + 104) = v14;
  swift_defaultActor_initialize(v4, v15);
  v4[15] = 0;
  swift_unknownObjectWeakInit(v4 + 14);
  v4[19] = 0;
  v4[20] = 0;
  v17 = GroupSession.id.getter(v16);
  v18 = UUID.uuidString.getter(v17);
  v20 = v19;
  *(_QWORD *)(v5 + 112) = v18;
  *(_QWORD *)(v5 + 120) = v19;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v12);
  v6[16] = v18;
  v6[17] = v20;
  type metadata accessor for GroupSessionMessenger(0);
  *(_DWORD *)(v5 + 136) = enum case for GroupSessionMessenger.DeliveryMode.unreliable(_:);
  v21 = *(void (**)(uint64_t))(v10 + 104);
  *(_QWORD *)(v5 + 128) = v21;
  v21(v11);
  swift_bridgeObjectRetain(v20);
  v22 = swift_retain(a1);
  v6[18] = GroupSessionMessenger.__allocating_init<A>(session:deliveryMode:)(v22);
  return swift_task_switch(sub_100550408, v6, 0);
}

uint64_t sub_100550408()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128);
  v2 = *(unsigned int *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  v32 = *(_QWORD *)(v0 + 104);
  v33 = *(_QWORD *)(v0 + 96);
  v5 = *(int **)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v27 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD **)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 32);
  v7[15] = *(_QWORD *)(v0 + 40);
  swift_unknownObjectWeakAssign(v7 + 14, v31);
  v9 = type metadata accessor for CRLRealTimeMessengerImplementation(0);
  v1(v4, v2, v3);
  v10 = (_QWORD *)(v4 + v5[7]);
  *v10 = 20;
  v11 = enum case for DispatchTimeInterval.seconds(_:);
  v12 = type metadata accessor for DispatchTimeInterval(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  *(_QWORD *)(v4 + v5[5]) = 980;
  *(_WORD *)(v4 + v5[6]) = 24;
  v13 = type metadata accessor for CRLRealTimeDataEncryptor();
  v15 = *(_QWORD *)(v6 + 80);
  v14 = *(_QWORD *)(v6 + 88);
  v17 = type metadata accessor for CRLUnreliableRealTimeMessenger(0, v15, v14, v16);
  swift_retain(v8);
  swift_retain(v7);
  v18 = sub_100DE0BA8(v4, v8, (uint64_t)v7, 0, 0, v9, v13, v17, (uint64_t)&off_1012731D8, (uint64_t)&off_10126B778);
  v19 = v7[19];
  v7[19] = v18;
  swift_release(v19);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v27, 1, 1, v20);
  v21 = swift_allocObject(&unk_10126B7C8, 24, 7);
  swift_weakInit(v21 + 16, v7);
  v22 = v7[18];
  v23 = (_QWORD *)swift_allocObject(&unk_10126B7F0, 80, 7);
  v23[2] = 0;
  v23[3] = 0;
  v23[4] = v15;
  v23[5] = v14;
  v23[6] = v22;
  v23[7] = v28;
  v23[8] = v29;
  v23[9] = v21;
  swift_retain(v22);
  v24 = sub_100521B98(v27, (uint64_t)&unk_1013E1EC8, (uint64_t)v23);
  swift_release(v30);
  swift_release(v8);
  swift_unknownObjectRelease(v31);
  v25 = v7[20];
  v7[20] = v24;
  swift_release(v25);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v4);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_100550668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v7[112] = a7;
  v7[111] = a6;
  v7[110] = a5;
  v7[109] = a4;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v7[113] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v7[114] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[115] = v10;
  v7[116] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for BinaryDecodingOptions(0, v11);
  v7[117] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_EncryptedRealTimeMessage(0);
  v7[118] = v13;
  v7[119] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E1ED0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[120] = swift_task_alloc(v14);
  v7[121] = swift_task_alloc(v14);
  v15 = type metadata accessor for UUID(0);
  v7[122] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v7[123] = v16;
  v7[124] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Participant(0);
  v7[125] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v7[126] = v18;
  v7[127] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013E1ED8);
  v7[128] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[129] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[130] = swift_task_alloc(v21);
  v7[131] = swift_task_alloc(v21);
  v7[132] = swift_task_alloc(v21);
  v22 = sub_1004B804C(&qword_1013E1EE0);
  v7[133] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004B804C(&qword_1013E1EE8);
  v7[134] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v7[135] = v24;
  v7[136] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013E1EF0);
  v7[137] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v7[138] = v26;
  v7[139] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100550884, 0, 0);
}

uint64_t sub_100550884()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v1 = v0[136];
  v2 = v0[135];
  v3 = v0[134];
  v4 = v0[112] + 16;
  GroupSessionMessenger.messages(of:)();
  GroupSessionMessenger.Messages.makeAsyncIterator()(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess(v4, v0 + 83, 0, 0);
  swift_beginAccess(v4, v0 + 104, 0, 0);
  swift_beginAccess(v4, v0 + 98, 0, 0);
  v5 = sub_100552EF0();
  v0[140] = v5;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[141] = v6;
  *v6 = v0;
  v6[1] = sub_100550998;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[133], v0[137], v5);
}

uint64_t sub_100550998()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 1128));
  if (v0)
  {
    *(_QWORD *)(v2 + 1144) = v0;
    v3 = sub_100551664;
  }
  else
  {
    *(_QWORD *)(v2 + 1136) = 0;
    v3 = sub_100550A00;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100550A00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t inited;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  __int16 v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)();
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t Strong;
  uint64_t v116;
  __n128 v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v1 = *(uint64_t **)(v0 + 1064);
  v2 = *(_QWORD *)(v0 + 1024);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1032) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 1112);
    v4 = *(_QWORD *)(v0 + 1088);
    v5 = *(_QWORD *)(v0 + 1056);
    v6 = *(_QWORD *)(v0 + 1048);
    v7 = *(_QWORD *)(v0 + 1040);
    v8 = *(_QWORD *)(v0 + 1016);
    v9 = *(_QWORD *)(v0 + 992);
    v10 = *(_QWORD *)(v0 + 968);
    v119 = *(_QWORD *)(v0 + 960);
    v121 = *(_QWORD *)(v0 + 952);
    v124 = *(_QWORD *)(v0 + 936);
    v127 = *(_QWORD *)(v0 + 928);
    v130 = *(_QWORD *)(v0 + 904);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 1104) + 8))(v3, *(_QWORD *)(v0 + 1096));
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v1);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v119);
    swift_task_dealloc(v121);
    swift_task_dealloc(v124);
    swift_task_dealloc(v127);
    swift_task_dealloc(v130);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v0 + 1136);
  v13 = *(uint64_t **)(v0 + 1056);
  v14 = *(uint64_t **)(v0 + 1048);
  v15 = *(int *)(v2 + 48);
  v16 = (char *)v13 + v15;
  v17 = *v1;
  v18 = v1[1];
  v19 = (char *)v1 + v15;
  *v13 = v17;
  v13[1] = v18;
  v20 = type metadata accessor for GroupSessionMessenger.MessageContext(0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v19, v20);
  v22 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = v17;
  v14[1] = v18;
  v23 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v23(v22, v16, v20);
  sub_1004BE310(v17, v18);
  sub_1004BE310(v17, v18);
  v24 = sub_100C6468C(v17, v18);
  *(_QWORD *)(v0 + 1152) = v24;
  if (v12)
  {
    sub_1004BBBC8(v17, v18);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
    if (qword_1013DD768 != -1)
      swift_once(&qword_1013DD768, sub_100A02948);
    swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 736, 0, 0);
    v48 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
    v49 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v49, v0 + 512);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    swift_getErrorValue(v12, v0 + 864, v0 + 688);
    v51 = *(_QWORD *)(v0 + 696);
    v52 = *(_QWORD *)(v0 + 704);
    v53 = v48;
    v54 = Error.localizedDescription.getter(v51, v52);
    v56 = v55;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v57 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v57;
    *(_QWORD *)(inited + 32) = v54;
    *(_QWORD *)(inited + 40) = v56;
    v58 = static os_log_type_t.error.getter(v57);
    sub_100A06EBC((uint64_t)v53, &_mh_execute_header, v58, "Encountered an error while deserializing data received over the unreliable channel. %{public}@", 94, 2, inited);
    swift_setDeallocating(inited);
    v59 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v59);

    swift_errorRelease(v12);
    goto LABEL_16;
  }
  v25 = *(uint64_t **)(v0 + 1040);
  v26 = *(_QWORD *)(v0 + 1024);
  v131 = v24;
  v27 = *(void (**)(char *, uint64_t))(v21 + 8);
  v27(v22, v20);
  v28 = (char *)v25 + *(int *)(v26 + 48);
  *v25 = v17;
  v25[1] = v18;
  v23(v28, v16, v20);
  v29 = sub_1004BBBC8(v17, v18);
  GroupSessionMessenger.MessageContext.source.getter(v29);
  v27(v28, v20);
  if (!*(_BYTE *)(v131 + 16))
  {
    v36 = *(_QWORD *)(v131 + 24);
    v37 = *(_QWORD *)(v131 + 32);
    sub_1004BE310(v36, v37);
    v38 = sub_1008B92A0(v36, v37);
    *(_QWORD *)(v0 + 1160) = v38;
    v39 = v38;
    if (qword_1013DD768 != -1)
      swift_once(&qword_1013DD768, sub_100A02948);
    swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 760, 0, 0);
    v40 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
    v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v42 = swift_initStackObject(v41, v0 + 208);
    v43 = (_QWORD *)v42;
    *(_OWORD *)(v42 + 16) = xmmword_100EF5550;
    v44 = *(_QWORD *)(v39 + 24);
    if (*(_QWORD *)(v44 + 16))
      __asm { BR              X16 }
    v123 = v39;
    v129 = v42 + 32;
    v99 = *(_QWORD *)(v0 + 992);
    v100 = *(_QWORD *)(v0 + 984);
    v101 = *(_QWORD *)(v0 + 976);
    v102 = *(_QWORD *)(v0 + 888);
    v103 = *(_QWORD *)(v0 + 880);
    v126 = *(_QWORD *)(v0 + 896) + 16;
    *(_QWORD *)(v42 + 56) = &type metadata for Int;
    *(_QWORD *)(v42 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v42 + 32) = 16;
    v104 = v40;
    v106 = Participant.id.getter(v105);
    v107 = UUID.uuidString.getter(v106);
    v109 = v108;
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
    v43[12] = &type metadata for String;
    v110 = sub_1004CFC2C();
    v43[9] = v107;
    v43[10] = v109;
    v43[17] = &type metadata for String;
    v43[18] = v110;
    v43[13] = v110;
    v43[14] = v103;
    v43[15] = v102;
    v111 = swift_bridgeObjectRetain(v102);
    v112 = static os_log_type_t.default.getter(v111);
    sub_100A06EBC((uint64_t)v104, &_mh_execute_header, v112, "Unreliable process messages of size %{public}d received from sender %{public}@ on group session UUID: %{public}@", 112, 2, (uint64_t)v43);
    swift_setDeallocating(v43);
    v113 = v43[2];
    v114 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v129, v113, v114);

    Strong = swift_weakLoadStrong(v126);
    *(_QWORD *)(v0 + 1168) = Strong;
    if (Strong)
    {
      v90 = Strong;
      v91 = sub_1005516C8;
      return swift_task_switch(v91, v90, 0);
    }
    v116 = v123;
LABEL_31:
    swift_release(v116);
    v117 = swift_release(v131);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1008) + 8))(*(_QWORD *)(v0 + 1016), *(_QWORD *)(v0 + 1000), v117);
LABEL_16:
    sub_1004CB800(*(_QWORD *)(v0 + 1056), &qword_1013E1ED8);
    v60 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 1264) = v60;
    *v60 = v0;
    v60[1] = sub_100551DC8;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 1064), *(_QWORD *)(v0 + 1096), *(_QWORD *)(v0 + 1120));
  }
  if (*(_BYTE *)(v131 + 16) == 1)
  {
    v30 = *(_QWORD *)(v0 + 944);
    v31 = *(_QWORD *)(v0 + 936);
    v32 = *(_QWORD *)(v131 + 24);
    v33 = *(_QWORD *)(v131 + 32);
    *(_OWORD *)(v0 + 624) = 0u;
    *(_OWORD *)(v0 + 640) = 0u;
    *(_QWORD *)(v0 + 656) = 0;
    sub_1004BE310(v32, v33);
    v34 = sub_1004BE310(v32, v33);
    BinaryDecodingOptions.init()(v34);
    v35 = sub_100552F3C();
    Message.init(serializedData:extensions:partial:options:)(v32, v33, v0 + 624, 0, v31, v30, v35);
    v61 = *(uint64_t **)(v0 + 952);
    v62 = *(_QWORD *)(v0 + 920);
    v63 = *(_QWORD *)(v0 + 912);
    v64 = *(_QWORD *)(v0 + 904);
    v65 = *v61;
    sub_100552F84((uint64_t)v61 + *(int *)(*(_QWORD *)(v0 + 944) + 24), v64);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v64, 1, v63);
    v67 = *(_OWORD **)(v0 + 928);
    if ((_DWORD)v66 == 1)
    {
      v68 = *(_QWORD *)(v0 + 904);
      *v67 = xmmword_100EF78C0;
      UnknownStorage.init()(v66);
      sub_1004CB800(v68, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_100552FCC(*(_QWORD *)(v0 + 904), (uint64_t)v67);
    }
    v92 = *(_QWORD *)(v0 + 952);
    v93 = *(uint64_t **)(v0 + 928);
    sub_1004BBBC8(v32, v33);
    sub_1004B84A4(v92, type metadata accessor for CRLProto_EncryptedRealTimeMessage);
    v94 = *v93;
    v95 = v93[1];
    sub_1004BE310(*v93, v95);
    sub_1004B84A4((uint64_t)v93, type metadata accessor for CRLProto_Data);
    v96 = type metadata accessor for CRLEncryptedRealTimeMessage();
    v97 = (_QWORD *)swift_initStackObject(v96, v0 + 584);
    *(_QWORD *)(v0 + 1200) = v97;
    v97[2] = v65;
    v97[3] = v94;
    v97[4] = v95;
    if (qword_1013DD768 != -1)
      swift_once(&qword_1013DD768, sub_100A02948);
    swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 808, 0, 0);
    v98 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    *(_OWORD *)(swift_initStackObject(v98, v0 + 360) + 16) = xmmword_100EF5550;
    __asm { BR              X11 }
  }
  v45 = *(_QWORD *)(v131 + 24);
  v46 = *(_QWORD *)(v131 + 32);
  sub_1004BE310(v45, v46);
  v47 = sub_1007B3BEC(v45, v46);
  *(_QWORD *)(v0 + 1232) = v47;
  v69 = v47;
  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  v70 = *(_QWORD *)(v0 + 992);
  v120 = *(_QWORD *)(v0 + 984);
  v71 = *(_QWORD *)(v0 + 888);
  v122 = *(_QWORD *)(v0 + 976);
  v125 = *(_QWORD *)(v0 + 880);
  v128 = *(_QWORD *)(v0 + 896) + 16;
  swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 712, 0, 0);
  v72 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
  v73 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v74 = swift_initStackObject(v73, v0 + 16);
  *(_OWORD *)(v74 + 16) = xmmword_100EF5E30;
  v118 = v72;
  v75 = UUID.uuidString.getter(v118);
  v77 = v76;
  *(_QWORD *)(v74 + 56) = &type metadata for String;
  v78 = sub_1004CFC2C();
  *(_QWORD *)(v74 + 64) = v78;
  *(_QWORD *)(v74 + 32) = v75;
  *(_QWORD *)(v74 + 40) = v77;
  v79 = *(_WORD *)(v69 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
  *(_QWORD *)(v74 + 96) = &type metadata for UInt16;
  *(_QWORD *)(v74 + 104) = &protocol witness table for UInt16;
  *(_WORD *)(v74 + 72) = v79;
  v81 = Participant.id.getter(v80);
  v82 = UUID.uuidString.getter(v81);
  v84 = v83;
  (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v70, v122);
  *(_QWORD *)(v74 + 136) = &type metadata for String;
  *(_QWORD *)(v74 + 144) = v78;
  *(_QWORD *)(v74 + 112) = v82;
  *(_QWORD *)(v74 + 120) = v84;
  *(_QWORD *)(v74 + 176) = &type metadata for String;
  *(_QWORD *)(v74 + 184) = v78;
  *(_QWORD *)(v74 + 152) = v125;
  *(_QWORD *)(v74 + 160) = v71;
  v85 = swift_bridgeObjectRetain(v71);
  v86 = static os_log_type_t.default.getter(v85);
  sub_100A06EBC((uint64_t)v118, &_mh_execute_header, v86, "Unreliable process received chunked message with chainID: %{public}@ chunkIndex: %{public}d received from sender %{public}@ on group session UUID: %{public}@", 157, 2, v74);
  swift_setDeallocating(v74);
  v87 = *(_QWORD *)(v74 + 16);
  v88 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v74 + 32, v87, v88);

  v89 = swift_weakLoadStrong(v128);
  *(_QWORD *)(v0 + 1240) = v89;
  if (!v89)
  {
    v116 = v69;
    goto LABEL_31;
  }
  v90 = v89;
  v91 = sub_100551BD8;
  return swift_task_switch(v91, v90, 0);
}

uint64_t sub_100551664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 856) = *(_QWORD *)(v0 + 1144);
  v1 = sub_1004B804C(&qword_1013E0210);
  v2 = swift_dynamicCast(v1, v0 + 856, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1005516C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1168);
  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 1176) = v2;
  swift_retain(v2);
  swift_release(v1);
  return swift_task_switch(sub_100551714, 0, 0);
}

uint64_t sub_100551714()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if (v0[147])
  {
    v1 = v0[126];
    v2 = v0[125];
    v3 = v0[121];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16))(v3, v0[127], v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
    return swift_task_switch(sub_100551794, v0[147], 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100551794()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t ObjectType;
  int *v5;
  uint64_t **v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[147] + OBJC_IVAR____TtC8Freeform34CRLRealTimeMessengerImplementation_helper;
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v0[148] = Strong;
  if (Strong)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(Strong);
    v5 = *(int **)(v3 + 32);
    v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v5 + *v5);
    v6 = (uint64_t **)swift_task_alloc(v5[1]);
    v0[149] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = (uint64_t *)sub_100551874;
    return v8(v0[145], v0[121], ObjectType, v3);
  }
  else
  {
    swift_release(v0[147]);
    sub_1004CB800(v0[121], &qword_1013E1ED0);
    return swift_task_switch(sub_1005518FC, 0, 0);
  }
}

uint64_t sub_100551874()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 1192));
  v3 = *(_QWORD *)(v2 + 1184);
  if (v0)
  {
    swift_errorRelease(v0);
    swift_unknownObjectRelease(v3);
    v4 = *(_QWORD *)(v2 + 1176);
    v5 = sub_100551990;
  }
  else
  {
    swift_unknownObjectRelease(*(_QWORD *)(v2 + 1184));
    v4 = *(_QWORD *)(v2 + 1176);
    v5 = sub_100553010;
  }
  return swift_task_switch(v5, v4, 0);
}

uint64_t sub_1005518FC()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  _QWORD *v3;

  v1 = v0[144];
  swift_release(v0[145]);
  v2 = swift_release(v1);
  (*(void (**)(_QWORD, _QWORD, __n128))(v0[126] + 8))(v0[127], v0[125], v2);
  sub_1004CB800(v0[132], &qword_1013E1ED8);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[158] = v3;
  *v3 = v0;
  v3[1] = sub_100551DC8;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[133], v0[137], v0[140]);
}

uint64_t sub_100551990()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 1176));
  sub_1004CB800(*(_QWORD *)(v0 + 968), &qword_1013E1ED0);
  return swift_task_switch(sub_1005518FC, 0, 0);
}

uint64_t sub_1005519DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1208);
  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 1216) = v2;
  swift_retain(v2);
  swift_release(v1);
  return swift_task_switch(sub_100551A28, 0, 0);
}

void sub_100551A28()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  if (v0[152])
  {
    v1 = v0[126];
    v2 = v0[125];
    v3 = v0[120];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v0[127], v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
    v4 = (uint64_t **)swift_task_alloc(dword_1014144B4);
    v0[153] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = (uint64_t *)sub_100551AC4;
    sub_100DDC770(v0[150], v0[120]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100551AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1216);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 960);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1224));
  swift_release(v1);
  sub_1004CB800(v2, &qword_1013E1ED0);
  return swift_task_switch(sub_100551B38, 0, 0);
}

uint64_t sub_100551B38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  _QWORD *v4;

  v1 = v0[150];
  v2 = v0[144];
  swift_setDeallocating(v1);
  sub_1004BBBC8(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
  v3 = swift_release(v2);
  (*(void (**)(_QWORD, _QWORD, __n128))(v0[126] + 8))(v0[127], v0[125], v3);
  sub_1004CB800(v0[132], &qword_1013E1ED8);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[158] = v4;
  *v4 = v0;
  v4[1] = sub_100551DC8;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[133], v0[137], v0[140]);
}

uint64_t sub_100551BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1240);
  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v0 + 1248) = v2;
  swift_retain(v2);
  swift_release(v1);
  return swift_task_switch(sub_100551C24, 0, 0);
}

void sub_100551C24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  if (v0[156])
  {
    v1 = v0[126];
    v2 = v0[125];
    v3 = v0[120];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v0[127], v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v3, 0, 1, v2);
    v4 = (uint64_t **)swift_task_alloc(dword_1014144BC);
    v0[157] = (uint64_t)v4;
    *v4 = v0;
    v4[1] = (uint64_t *)sub_100551CC0;
    sub_100DDD0C8(v0[154], v0[120]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100551CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1248);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 960);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1256));
  swift_release(v1);
  sub_1004CB800(v2, &qword_1013E1ED0);
  return swift_task_switch(sub_100551D34, 0, 0);
}

uint64_t sub_100551D34()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  _QWORD *v3;

  v1 = v0[144];
  swift_release(v0[154]);
  v2 = swift_release(v1);
  (*(void (**)(_QWORD, _QWORD, __n128))(v0[126] + 8))(v0[127], v0[125], v2);
  sub_1004CB800(v0[132], &qword_1013E1ED8);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[158] = v3;
  *v3 = v0;
  v3[1] = sub_100551DC8;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[133], v0[137], v0[140]);
}

uint64_t sub_100551DC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 1264));
  if (v0)
  {
    *(_QWORD *)(v2 + 1144) = v0;
    v3 = sub_100551664;
  }
  else
  {
    *(_QWORD *)(v2 + 1136) = 0;
    v3 = sub_100550A00;
  }
  return swift_task_switch(v3, 0, 0);
}

_QWORD *sub_100551E30()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[20];
  if (v1)
  {
    swift_retain(v0[20]);
    Task.cancel()();
    swift_release(v1);
  }
  sub_1004CBB0C((uint64_t)(v0 + 14));
  swift_bridgeObjectRelease(v0[17]);
  swift_release(v0[18]);
  swift_release(v0[19]);
  swift_release(v0[20]);
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_100551EB4()
{
  uint64_t v0;

  sub_100551E30();
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLUnreliableRealTimeMessenger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLUnreliableRealTimeMessenger);
}

uint64_t sub_100551ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_100551EF0, v1, 0);
}

uint64_t sub_100551EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 152);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    swift_retain(v1);
    return swift_task_switch(sub_100551F40, v1, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100551F40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = v0[4];
  v2 = sub_1008B867C();
  v3 = v1 + OBJC_IVAR____TtC8Freeform34CRLRealTimeMessengerImplementation__configuration;
  LOBYTE(v2) = *(_QWORD *)(v3 + *(int *)(type metadata accessor for CRLRealTimeMessengerConfiguration(0) + 20)) < v2;
  v4 = (uint64_t **)swift_task_alloc(dword_1014144D4);
  v0[5] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_100551FD0;
  return sub_100DDFC94(v0[2], v2);
}

uint64_t sub_100551FD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v5;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100552044, *(_QWORD *)(v3 + 24), 0);
  v5 = swift_release(*(_QWORD *)(v3 + 32));
  return (*(uint64_t (**)(__n128))(v3 + 8))(v5);
}

uint64_t sub_100552044()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100552078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_100552090, v1, 0);
}

void sub_100552090()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t **v3;

  v1 = *(_QWORD *)(v0[3] + 152);
  v0[4] = v1;
  if (v1)
  {
    v2 = dword_1014144CC;
    swift_retain(v1);
    v3 = (uint64_t **)swift_task_alloc(v2);
    v0[5] = (uint64_t)v3;
    *v3 = v0;
    v3[1] = (uint64_t *)sub_100551FD0;
    sub_100DDF864(v0[2]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005520FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[24] = a1;
  v2[25] = v1;
  v3 = type metadata accessor for Participants(0);
  v2[26] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[27] = v4;
  v2[28] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10055215C, v1, 0);
}

uint64_t sub_10055215C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  v1 = v0[25];
  swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 21, 0, 0);
  v2 = (void *)static OS_os_log.crlRealTimeMessageTransfer;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = sub_1008B867C();
  *(_QWORD *)(inited + 56) = &type metadata for Int;
  *(_QWORD *)(inited + 64) = &protocol witness table for Int;
  v6 = *(_QWORD *)(v1 + 128);
  v5 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = sub_1004CFC2C();
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = v5;
  v7 = v2;
  v8 = swift_bridgeObjectRetain(v5);
  v9 = static os_log_type_t.default.getter(v8);
  sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v9, "Unreliable transfer message of size %{public}d to all participants on group session UUID: %{public}@.", 101, 2, inited);
  swift_setDeallocating(inited);
  v10 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v10);

  v11 = sub_1008B8734();
  v0[29] = v11;
  v0[30] = v12;
  v13 = (uint64_t)v11;
  v14 = v12;
  v15 = type metadata accessor for CRLRealTimeMessageContainer();
  v16 = swift_initStackObject(v15, v0 + 16);
  v0[31] = v16;
  *(_BYTE *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = v13;
  *(_QWORD *)(v16 + 32) = v14;
  sub_1004BE310(v13, v14);
  v17 = sub_100C641C8();
  v0[32] = v17;
  v0[33] = v18;
  v19 = v17;
  v20 = v18;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[27] + 104))(v0[28], enum case for Participants.all(_:), v0[26]);
  v21 = (_QWORD *)swift_task_alloc(async function pointer to GroupSessionMessenger.send(_:to:)[1]);
  v0[34] = v21;
  *v21 = v0;
  v21[1] = sub_1005523A0;
  return GroupSessionMessenger.send(_:to:)(v19, v20, v0[28]);
}

uint64_t sub_1005523A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v3);
  v5 = v2[27];
  v4 = v2[28];
  v7 = v2 + 25;
  v6 = v2[25];
  (*(void (**)(uint64_t, _QWORD))(v5 + 8))(v4, v7[1]);
  if (v0)
    v8 = sub_10055247C;
  else
    v8 = sub_100552414;
  return swift_task_switch(v8, v6, 0);
}

uint64_t sub_100552414()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  sub_1004BBBC8(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
  swift_setDeallocating(v2);
  sub_1004BBBC8(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  sub_1004BBBC8(v3, v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10055247C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  sub_1004BBBC8(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
  sub_1004BBBC8(v1, v2);
  swift_setDeallocating(v3);
  sub_1004BBBC8(*(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005524E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[24] = a1;
  v2[25] = v1;
  v3 = type metadata accessor for Participants(0);
  v2[26] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[27] = v4;
  v2[28] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100552544, v1, 0);
}

void sub_100552544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  v1 = *(_QWORD *)(v0 + 192);
  swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, v0 + 168, 0, 0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  *(_OWORD *)(swift_initStackObject(v2, v0 + 16) + 16) = xmmword_100EF5A10;
  __asm { BR              X13 }
}

uint64_t sub_1005527FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for Participants(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10055285C, v1, 0);
}

uint64_t sub_10055285C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = sub_1007B2624();
  v0[12] = v1;
  v0[13] = v2;
  v3 = v1;
  v4 = v2;
  v5 = type metadata accessor for CRLRealTimeMessageContainer();
  inited = swift_initStackObject(v5, v0 + 2);
  v0[14] = inited;
  *(_BYTE *)(inited + 16) = 2;
  *(_QWORD *)(inited + 24) = v3;
  *(_QWORD *)(inited + 32) = v4;
  sub_1004BE310(v3, v4);
  v7 = sub_100C641C8();
  v0[15] = v7;
  v0[16] = v8;
  v9 = v7;
  v10 = v8;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[10] + 104))(v0[11], enum case for Participants.all(_:), v0[9]);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to GroupSessionMessenger.send(_:to:)[1]);
  v0[17] = v11;
  *v11 = v0;
  v11[1] = sub_100552990;
  return GroupSessionMessenger.send(_:to:)(v9, v10, v0[11]);
}

uint64_t sub_100552990()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v3);
  v5 = v2[10];
  v4 = v2[11];
  v7 = v2 + 8;
  v6 = v2[8];
  (*(void (**)(uint64_t, _QWORD))(v5 + 8))(v4, v7[1]);
  if (v0)
    v8 = sub_100552A6C;
  else
    v8 = sub_100552A04;
  return swift_task_switch(v8, v6, 0);
}

uint64_t sub_100552A04()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  sub_1004BBBC8(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  swift_setDeallocating(v2);
  sub_1004BBBC8(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  sub_1004BBBC8(v3, v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100552A6C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_1004BBBC8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  sub_1004BBBC8(v1, v2);
  swift_setDeallocating(v3);
  sub_1004BBBC8(*(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100552AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch(sub_100552AF0, v2, 0);
}

uint64_t sub_100552AF0()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 32) + 112);
  *(_QWORD *)(v0 + 40) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = (_QWORD *)swift_task_alloc(dword_10140AAB4);
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_100552B68;
  return sub_100C14A34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100552B68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 40);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100552BBC()
{
  return sub_1004CF484();
}

uint64_t sub_100552BD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1013E1E5C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100551EF0, v4, 0);
}

uint64_t sub_100552C38(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1013E1E64);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1004CFD00;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100552090, v4, 0);
}

uint64_t sub_100552C9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E1E6C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1005520FC(a1);
}

uint64_t sub_100552CE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E1E74);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1005524E4(a1);
}

uint64_t sub_100552D34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E1E7C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  return sub_1005527FC(a1);
}

uint64_t sub_100552D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1013E1E84);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1004CF80C;
  v6[3] = a2;
  v6[4] = v2;
  v6[2] = a1;
  return swift_task_switch(sub_100552AF0, v2, 0);
}

uint64_t sub_100552DF0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100552E14()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100552E50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[6];
  v7 = v1[7];
  v9 = v1[8];
  v8 = v1[9];
  v10 = (_QWORD *)swift_task_alloc(dword_1013E1EC4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CF80C;
  return sub_100550668(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t sub_100552EF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1EF8;
  if (!qword_1013E1EF8)
  {
    v1 = sub_1004CB6A4(&qword_1013E1EF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for GroupSessionMessenger.Messages<A>.Iterator, v1);
    atomic_store(result, (unint64_t *)&qword_1013E1EF8);
  }
  return result;
}

unint64_t sub_100552F3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E1F00;
  if (!qword_1013E1F00)
  {
    v1 = type metadata accessor for CRLProto_EncryptedRealTimeMessage(255);
    result = swift_getWitnessTable(&unk_100F23DA8, v1);
    atomic_store(result, (unint64_t *)&qword_1013E1F00);
  }
  return result;
}

uint64_t sub_100552F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100552FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CRLAnalyticsCloudKit()
{
  return objc_opt_self(_TtC8Freeform20CRLAnalyticsCloudKit);
}

void sub_100553034(uint64_t a1)
{
  unint64_t v2;
  id v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  void *v6;
  NSString v7;
  Class isa;

  v2 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  v3 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_100826868((uint64_t)v3, 0xD000000000000018, 0x8000000100FB27A0, isUniquelyReferenced_nonNull_native);
  v5 = v2;
  swift_bridgeObjectRelease(0x8000000000000000);
  v6 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v7 = String._bridgeToObjectiveC()();
  sub_100511A70();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "sendEventInDomain:lazily:eventPayload:", v7, 1, isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

id sub_1005531B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLURLLayout()
{
  return objc_opt_self(_TtC8Freeform12CRLURLLayout);
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingBucketMinRequiredVersionCollection(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingBucketMinRequiredVersionCollection(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingBucketMinRequiredVersionCollection()
{
  return &type metadata for CRLFreehandDrawingBucketMinRequiredVersionCollection;
}

__n128 initializeWithTake for CRLColorModelCMYKData(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for CRLMinRequiredVersionCollection()
{
  return &type metadata for CRLMinRequiredVersionCollection;
}

uint64_t sub_10055328C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_100553294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = (*(uint64_t (**)(void))(a2 + 8))();
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  return v4;
}

uint64_t sub_1005532F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_100553300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v6 = (*(uint64_t (**)(void))(a2 + 8))();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  *a3 = v6;
  a3[1] = v7;
  a3[2] = v8;
  a3[3] = v9;
  a3[4] = result;
  return result;
}

uint64_t sub_1005533A0(uint64_t a1)
{
  return sub_1005532F8(a1, (uint64_t)&off_101270D58);
}

uint64_t sub_1005533AC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1005533B8(uint64_t a1)
{
  return sub_1005532F8(a1, (uint64_t)&off_101290730);
}

uint64_t sub_1005533C4(uint64_t a1)
{
  return sub_1005532F8(a1, (uint64_t)&off_10129A7A0);
}

uint64_t sub_1005533D0(uint64_t a1)
{
  return sub_1005532F8(a1, (uint64_t)&off_10129E320);
}

uint64_t sub_1005533DC(uint64_t a1)
{
  return sub_1005532F8(a1, (uint64_t)&off_1012A59B8);
}

uint64_t sub_1005533E8(uint64_t a1)
{
  return sub_1005532F8(a1, (uint64_t)&off_1012A6A40);
}

uint64_t sub_1005533F4(void (*a1)(char *, _QWORD, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a3, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  a1(v7, 0, 0);
  sub_1005534BC((uint64_t)v7);
  return 0;
}

uint64_t sub_1005534BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E04D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005534FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, _QWORD);
  double *v12;
  _BYTE v14[32];

  v5 = v3;
  sub_10055358C(v5, a2);
  v8 = a2 + *(int *)(a1 + 44);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v8 + 32);
  sub_1004CB9AC(v8, v9);
  v11 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v10 + 32)
                                                                                             + 24))(v14, v9);
  *v12 = *v12 + a3;
  return v11(v14, 0);
}

uint64_t sub_10055358C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLCanvasLayerAnimation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005535D0@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  __int128 v11[20];
  _BYTE v12[40];
  _BYTE __dst[308];

  v3 = v2;
  v6 = type metadata accessor for CRLCanvasLayerAnimation(0);
  sub_1004E90B0(v3 + *(int *)(v6 + 44), (uint64_t)v12);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(v11, v12, v7, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    memcpy(__dst, (char *)v11 + 8, sizeof(__dst));
    sub_10055358C(v3, a1);
    *((_QWORD *)&v11[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v11[2] = sub_100553914();
    v8 = swift_allocObject(&unk_10126BA38, 332, 7);
    *(_QWORD *)&v11[0] = v8;
    *(double *)(v8 + 16) = a2;
    memcpy((void *)(v8 + 24), __dst, 0x134uLL);
    v9 = (_QWORD *)(a1 + *(int *)(v6 + 44));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
    return sub_1004DB728(v11, (uint64_t)v9);
  }
  else
  {
    memset(v11, 0, 304);
    *(_QWORD *)&v11[19] = 1;
    DWORD2(v11[19]) = 0;
    sub_1005538D4((uint64_t)v11);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLCanvasLayerAnimationModifiable.swift", 48, 2, 118, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100553750@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  __int128 v12;
  _OWORD v13[19];
  _BYTE v14[40];
  _BYTE __dst[300];

  v3 = v2;
  v6 = type metadata accessor for CRLCanvasLayerAnimation(0);
  sub_1004E90B0(v3 + *(int *)(v6 + 44), (uint64_t)v14);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(&v12, v14, v7, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    v8 = v12;
    memcpy(__dst, v13, sizeof(__dst));
    sub_10055358C(v3, a1);
    *((_QWORD *)&v13[0] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v13[1] = sub_100553914();
    v9 = swift_allocObject(&unk_10126BA38, 332, 7);
    *(_QWORD *)&v12 = v9;
    *(_QWORD *)(v9 + 16) = v8;
    *(double *)(v9 + 24) = a2;
    memcpy((void *)(v9 + 32), __dst, 0x12CuLL);
    v10 = (_QWORD *)(a1 + *(int *)(v6 + 44));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
    return sub_1004DB728(&v12, (uint64_t)v10);
  }
  else
  {
    memset(v13, 0, 288);
    v12 = 0u;
    *(_QWORD *)&v13[18] = 1;
    DWORD2(v13[18]) = 0;
    sub_1005538D4((uint64_t)&v12);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLCanvasLayerAnimationModifiable.swift", 48, 2, 130, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1005538D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E1FD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100553914()
{
  unint64_t result;

  result = qword_1013F04D0;
  if (!qword_1013F04D0)
  {
    result = swift_getWitnessTable(&unk_100F331C8, &type metadata for CRLSpringLayerAnimation.Def);
    atomic_store(result, (unint64_t *)&qword_1013F04D0);
  }
  return result;
}

uint64_t sub_100553958()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v1 = (_QWORD *)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = (void *)*v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease(*v1);
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100553A54@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  __int128 v11[20];
  _BYTE v12[40];
  _BYTE __dst[292];
  __int128 v14;

  v3 = v2;
  v6 = type metadata accessor for CRLCanvasLayerAnimation(0);
  sub_1004E90B0(v3 + *(int *)(v6 + 44), (uint64_t)v12);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(v11, v12, v7, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    v14 = v11[0];
    memcpy(__dst, (char *)&v11[1] + 8, sizeof(__dst));
    sub_10055358C(v3, a1);
    *((_QWORD *)&v11[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v11[2] = sub_100553914();
    v8 = swift_allocObject(&unk_10126BA38, 332, 7);
    *(_QWORD *)&v11[0] = v8;
    *(_OWORD *)(v8 + 16) = v14;
    *(double *)(v8 + 32) = a2;
    memcpy((void *)(v8 + 40), __dst, 0x124uLL);
    v9 = (_QWORD *)(a1 + *(int *)(v6 + 44));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
    return sub_1004DB728(v11, (uint64_t)v9);
  }
  else
  {
    memset(v11, 0, 304);
    *(_QWORD *)&v11[19] = 1;
    DWORD2(v11[19]) = 0;
    sub_1005538D4((uint64_t)v11);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLCanvasLayerAnimationModifiable.swift", 48, 2, 142, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100553BE4@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  __int128 v11;
  __int128 v12;
  _OWORD v13[18];
  _BYTE v14[40];
  _BYTE __dst[284];
  __int128 v16;
  uint64_t v17;

  v3 = v2;
  v6 = type metadata accessor for CRLCanvasLayerAnimation(0);
  sub_1004E90B0(v3 + *(int *)(v6 + 44), (uint64_t)v14);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(&v11, v14, v7, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    v16 = v11;
    v17 = v12;
    memcpy(__dst, v13, sizeof(__dst));
    sub_10055358C(v3, a1);
    *((_QWORD *)&v12 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v13[0] = sub_100553914();
    v8 = swift_allocObject(&unk_10126BA38, 332, 7);
    *(_QWORD *)&v11 = v8;
    *(_OWORD *)(v8 + 16) = v16;
    *(_QWORD *)(v8 + 32) = v17;
    *(double *)(v8 + 40) = a2;
    memcpy((void *)(v8 + 48), __dst, 0x11CuLL);
    v9 = (_QWORD *)(a1 + *(int *)(v6 + 44));
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
    return sub_1004DB728(&v11, (uint64_t)v9);
  }
  else
  {
    v12 = 0u;
    memset(v13, 0, 272);
    v11 = 0u;
    *(_QWORD *)&v13[17] = 1;
    DWORD2(v13[17]) = 0;
    sub_1005538D4((uint64_t)&v11);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLCanvasLayerAnimationModifiable.swift", 48, 2, 154, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100553D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v13;
  _BYTE v16[40];

  v3 = sub_1004B804C(&qword_1013E2098);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLCanvasLayerAnimation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004E90B0(a1, (uint64_t)v16);
  v10 = sub_1004B804C(&qword_1013E8700);
  v11 = swift_dynamicCast(v5, v16, v10, v6, 6);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v11)
  {
    v12(v5, 0, 1, v6);
    sub_100556170((uint64_t)v5, (uint64_t)v9);
    v13 = sub_100D25E98((uint64_t)v9, v1);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLCanvasLayerAnimation);
  }
  else
  {
    v12(v5, 1, 1, v6);
    sub_1004CB800((uint64_t)v5, &qword_1013E2098);
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_100553ED0(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v5 = type metadata accessor for CRLCanvasLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + *(int *)(v5 + 40));
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_1009F59A0(v2 + *(int *)(v5 + 44), v14);

    v8 = sub_1004B804C(&qword_1013E20A8);
    v9 = sub_1004B804C(&qword_1013E8700);
    if ((swift_dynamicCast(&v15, v14, v8, v9, 6) & 1) != 0)
    {
      if (*((_QWORD *)&v16 + 1))
      {
        sub_1004DB728(&v15, (uint64_t)v18);
        v10 = v19;
        v11 = v20;
        sub_1004BB5A4(v18, v19);
        v12 = (*(uint64_t (**)(uint64_t, uint64_t, double))(*(_QWORD *)(v11 + 8) + 8))(a1, v10, a2);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v18);
        return v12;
      }
    }
    else
    {
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
    }
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
    v17 = 0;
  }
  sub_1004CB800((uint64_t)&v15, &qword_1013EA650);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLCanvasLayerAnimation.swift", 38, 2, 71, 0);
  __break(1u);
  return result;
}

float sub_100554030(float a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *v13;
  double v14;
  float v15;
  float v16;
  _OWORD v18[5];
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for CRLCanvasLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + *(int *)(v4 + 40));
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = (_QWORD *)(v2 + *(int *)(v4 + 44));
    v8 = v7[3];
    v9 = v7[4];
    sub_1004BB5A4(v7, v8);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 56))(v18, v8, v9);
    sub_1008A5E84();

    sub_1004EA730(v18);
    v10 = v21;
    v11 = v22;
    sub_1004BB5A4(v20, v21);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v11 + 48))(v18, v10, v11);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
    v19 = 0;
  }
  v12 = CACurrentMediaTime();
  v13 = (void *)sub_100553ED0((uint64_t)v18, v12);
  sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013F04B0);
  *(float *)&v14 = a1;
  objc_msgSend(v13, "solveForInput:", v14);
  v16 = v15;

  return v16;
}

void sub_100554164(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  float v25;
  BOOL v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  double v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  double v58;
  double v59;
  double v60;
  _QWORD v61[3];
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  _OWORD v72[5];
  uint64_t v73;

  v3 = v2;
  v6 = type metadata accessor for CRLCanvasLayerAnimation(0);
  v7 = v3 + *(int *)(v6 + 40);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return;
  v9 = (void *)Strong;
  v10 = swift_unknownObjectWeakLoadStrong(v7);
  if (!v10)
  {
    v66 = 0u;
    v67 = 0u;
    v68 = 0u;
    v69 = 0u;
    v70 = 0u;
    v71 = 0;
    goto LABEL_16;
  }
  v11 = (void *)v10;
  v12 = (_QWORD *)(v3 + *(int *)(v6 + 44));
  v13 = v12[3];
  v14 = v12[4];
  sub_1004BB5A4(v12, v13);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v14 + 56))(v61, v13, v14);
  sub_1008A5E84();

  sub_1004EA730(v61);
  v15 = v64;
  v16 = v65;
  sub_1004BB5A4(v63, v64);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v16 + 48))(&v66, v15, v16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v63);
  if (!v71)
  {
LABEL_16:

    sub_1004CB800((uint64_t)&v66, (uint64_t *)&unk_1013F04B0);
    return;
  }
  v72[2] = v68;
  v72[3] = v69;
  v72[4] = v70;
  v73 = v71;
  v72[0] = v66;
  v72[1] = v67;
  v18 = v12[3];
  v17 = v12[4];
  sub_1004BB5A4(v12, v18);
  v19 = (*(double (**)(uint64_t))(*(_QWORD *)(v17 + 32) + 8))(v18) + a1;
  v21 = v12[3];
  v20 = v12[4];
  sub_1004BB5A4(v12, v21);
  v22 = (*(double (**)(uint64_t))(*(_QWORD *)(v20 + 32) + 8))(v21);
  v24 = v12[3];
  v23 = v12[4];
  sub_1004BB5A4(v12, v24);
  v25 = (a2 - v19) / (v22 + (*(double (**)(uint64_t))(*(_QWORD *)(v23 + 32) + 32))(v24) + a1 - v19);
  v26 = v25 < 0.0 || v25 > 1.0;
  if (v26
    || (v27 = sub_100554030(v25),
        v28 = v12[3],
        v29 = v12[4],
        sub_1004BB5A4(v12, v28),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v29 + 184))(v28, v29) & 1) == 0))
  {
    sub_1004E9164(v72);

  }
  else
  {
    if ((*(_BYTE *)(v3 + 64) & 1) != 0
      || (*(_BYTE *)(v3 + 104) & 1) != 0
      || (*(_BYTE *)(v3 + 120) & 1) != 0
      || (*(_BYTE *)(v3 + 136) & 1) != 0)
    {
      sub_10071D364();
      sub_1008A5388();
      sub_1004EA730(v61);
      sub_1004CB7BC((uint64_t)&v66, (uint64_t)v61, &qword_1013E0230);
      v30 = v62;
      if (v62)
      {
        v31 = sub_1004BB5A4(v61, v62);
        v32 = *(_QWORD *)(v30 - 8);
        v33 = __chkstk_darwin(v31);
        v35 = (char *)v61 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v32 + 16))(v35, v33);
        v36 = _bridgeAnythingToObjectiveC<A>(_:)(v35, v30);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v30);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v61);
      }
      else
      {
        v36 = 0;
      }
      v37 = v73;
      swift_bridgeObjectRetain(v73);
      v38 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "setValue:forKeyPath:", v36, v38, swift_bridgeObjectRelease(v37).n128_f64[0]);

      swift_unknownObjectRelease(v36);
      sub_1004CB800((uint64_t)&v66, &qword_1013E0230);
    }
    else
    {
      v39 = *(double *)(v3 + 128);
      v40 = *(double *)(v3 + 112);
      v41 = v27;
      v42 = *(void **)(v3 + 24);
      v43 = sub_100061AA8(*(double *)(v3 + 32), *(double *)(v3 + 40), *(double *)(v3 + 48), *(double *)(v3 + 56), *(double *)(v3 + 72), *(double *)(v3 + 80), *(double *)(v3 + 88), *(double *)(v3 + 96), v41);
      v45 = v44;
      v47 = v46;
      v49 = v48;
      v50 = sub_10006191C(v40, v39, v41);
      v51 = *(void **)v3;
      v52 = *(void **)(v3 + 8);
      v53 = *(void **)(v3 + 16);
      v54 = v42;
      v55 = v51;
      v56 = v52;
      v57 = v53;
      objc_msgSend(v54, "setViewScale:", v50);
      objc_msgSend(v54, "i_viewScaleDidChange");
      v58 = sub_100061400(v43, v45, v47, v49);
      v60 = v59;
      objc_msgSend(v54, "growCanvasAsNeededToRestoreContentOffset:");
      objc_msgSend(v57, "setContentOffset:", sub_100708FAC(v56, v57, v54, v58, v60, v50, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right));
      objc_msgSend(v54, "i_viewScrollDidChange");

    }
    sub_1004E9164(v72);
  }
}

void sub_10055462C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  CGFloat v23;
  CGFloat v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  CGFloat v35;
  CGFloat v36;
  __int128 v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  CGFloat v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  double v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  id (**v89)(double);
  _QWORD v90[33];
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  unsigned __int8 v110;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v2);
  v4 = (char *)v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for CRLCanvasLayerAnimation(0);
  v6 = v0 + v5[10];
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
  {
    v94 = 0u;
    v95 = 0u;
    v96 = 0u;
    v97 = 0u;
    v98 = 0u;
    v99 = 0u;
    v100 = 0u;
    v101 = 0u;
    v102 = 0u;
    v103 = 0u;
    v104 = 0u;
    v105 = 0u;
    v106 = 0u;
    v107 = 0u;
    v108 = 0u;
    v109 = 0u;
    v110 = -1;
LABEL_6:
    sub_1004CB800((uint64_t)&v94, &qword_1013E20A0);
    goto LABEL_7;
  }
  v8 = (void *)Strong;
  v9 = (_QWORD *)(v0 + v5[11]);
  v10 = v9[3];
  v11 = v9[4];
  sub_1004BB5A4(v9, v10);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 56))(v90, v10, v11);
  sub_1008A5E84();

  sub_1004EA730(v90);
  v12 = v92;
  v13 = v93;
  sub_1004BB5A4(v91, v92);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 40))(&v94, v12, v13);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v91);
  if (v110 == 61)
  {
    v21 = v95;
    v22 = v96;
    v24 = *((double *)&v97 + 1);
    v23 = *(double *)&v97;
    v25 = *(void **)(v0 + 24);
    v26 = sub_100061400(*(CGFloat *)&v94, *((CGFloat *)&v94 + 1), *(CGFloat *)&v95, *((CGFloat *)&v95 + 1));
    v28 = v27;
    objc_msgSend(v25, "visibleUnscaledRect");
    v31 = sub_100062BCC(*(double *)&v21, *((double *)&v21 + 1), v29, v30);
    *(double *)(v1 + 32) = sub_10005FD98(v26, v28, v31);
    *(_QWORD *)(v1 + 40) = v32;
    *(_QWORD *)(v1 + 48) = v33;
    *(_QWORD *)(v1 + 56) = v34;
    *(_BYTE *)(v1 + 64) = 0;
    v36 = *((double *)&v22 + 1);
    v35 = *(double *)&v22;
    goto LABEL_17;
  }
  if (v110 == 255)
    goto LABEL_6;
  sub_1004EA730(&v94);
LABEL_7:
  v14 = swift_unknownObjectWeakLoadStrong(v6);
  if (!v14)
  {
    v94 = 0u;
    v95 = 0u;
    v96 = 0u;
    v97 = 0u;
    v98 = 0u;
    v99 = 0u;
    v100 = 0u;
    v101 = 0u;
    v102 = 0u;
    v103 = 0u;
    v104 = 0u;
    v105 = 0u;
    v106 = 0u;
    v107 = 0u;
    v108 = 0u;
    v109 = 0u;
    v110 = -1;
    goto LABEL_13;
  }
  v15 = (void *)v14;
  v16 = (_QWORD *)(v0 + v5[11]);
  v17 = v16[3];
  v18 = v16[4];
  sub_1004BB5A4(v16, v17);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v18 + 56))(v90, v17, v18);
  sub_1008A5E84();

  sub_1004EA730(v90);
  v19 = v92;
  v20 = v93;
  sub_1004BB5A4(v91, v92);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 40))(&v94, v19, v20);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v91);
  if (v110 != 62)
  {
    if (v110 != 255)
    {
      sub_1004EA730(&v94);
      if ((*(_BYTE *)(v0 + 64) & 1) != 0)
        return;
      goto LABEL_18;
    }
LABEL_13:
    sub_1004CB800((uint64_t)&v94, &qword_1013E20A0);
    if ((*(_BYTE *)(v0 + 64) & 1) != 0)
      return;
    goto LABEL_18;
  }
  v37 = v94;
  v24 = *((double *)&v95 + 1);
  v23 = *(double *)&v95;
  v25 = *(void **)(v0 + 24);
  objc_msgSend(*(id *)(v1 + 24), "visibleUnscaledRect");
  v39 = v38;
  v41 = v40;
  v44 = sub_100061400(v42, v43, v38, v40);
  v46 = v45;
  objc_msgSend(v25, "visibleUnscaledRect");
  v49 = sub_100062BCC(v39, v41, v47, v48);
  *(double *)(v1 + 32) = sub_10005FD98(v44, v46, v49);
  *(_QWORD *)(v1 + 40) = v50;
  *(_QWORD *)(v1 + 48) = v51;
  *(_QWORD *)(v1 + 56) = v52;
  *(_BYTE *)(v1 + 64) = 0;
  v36 = *((double *)&v37 + 1);
  v35 = *(double *)&v37;
LABEL_17:
  v53 = sub_100061400(v35, v36, v23, v24);
  v55 = v54;
  objc_msgSend(v25, "visibleUnscaledRect");
  v58 = sub_100062BCC(v23, v24, v56, v57);
  *(double *)(v1 + 72) = sub_10005FD98(v53, v55, v58);
  *(_QWORD *)(v1 + 80) = v59;
  *(_QWORD *)(v1 + 88) = v60;
  *(_QWORD *)(v1 + 96) = v61;
  *(_BYTE *)(v1 + 104) = 0;
  if ((*(_BYTE *)(v1 + 64) & 1) != 0)
    return;
LABEL_18:
  if ((*(_BYTE *)(v1 + 104) & 1) == 0)
  {
    v63 = *(double *)(v1 + 88);
    v62 = *(double *)(v1 + 96);
    v65 = *(_QWORD *)(v1 + 72);
    v64 = *(_QWORD *)(v1 + 80);
    v67 = *(double *)(v1 + 48);
    v66 = *(double *)(v1 + 56);
    v68 = *(void **)(v1 + 8);
    v69 = *(void **)(v1 + 16);
    v70 = *(void **)(v1 + 24);
    v71 = *(id *)v1;
    v72 = v68;
    v73 = v69;
    v74 = v70;
    objc_msgSend(v74, "unobscuredScrollViewFrame");
    v77 = sub_100062E78(0, v67, v66, v75, v76) / v67;
    v79 = v78 / v66;
    if (v79 >= v77)
      v80 = v77;
    else
      v80 = v79;
    objc_msgSend(v74, "unobscuredScrollViewFrame");
    v83 = sub_100062E78(0, v63, v62, v81, v82) / v63;
    v85 = v84 / v62;
    if (v85 < v83)
      v83 = v85;
    v86 = sub_1003C65EC(v83, 0.1, 4.0);
    *(double *)(v1 + 112) = v80;
    *(_BYTE *)(v1 + 120) = 0;
    *(double *)(v1 + 128) = v86;
    *(_BYTE *)(v1 + 136) = 0;
    v87 = swift_allocObject(&unk_10126BC10, 88, 7);
    *(_QWORD *)(v87 + 16) = v71;
    *(_QWORD *)(v87 + 24) = v72;
    *(_QWORD *)(v87 + 32) = v73;
    *(_QWORD *)(v87 + 40) = v74;
    *(_QWORD *)(v87 + 48) = v65;
    *(_QWORD *)(v87 + 56) = v64;
    *(double *)(v87 + 64) = v63;
    *(double *)(v87 + 72) = v62;
    *(double *)(v87 + 80) = v86;
    UUID.init()(v87);
    v88 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v89 = (id (**)(double))&v4[*(int *)(v88 + 20)];
    *v89 = sub_1005561F0;
    v89[1] = (id (*)(double))v87;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v4, 0, 1, v88);
    sub_100556208((uint64_t)v4, v1 + v5[13]);
  }
}

id sub_100554B24(int a1, void *a2, void *a3, id a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10)
{
  double v18;
  double v19;
  double v20;

  objc_msgSend(a4, "setViewScale:", a10);
  objc_msgSend(a4, "i_viewScaleDidChange");
  v18 = sub_100061400(a6, a7, a8, a9);
  v20 = v19;
  objc_msgSend(a4, "growCanvasAsNeededToRestoreContentOffset:");
  objc_msgSend(a3, "setContentOffset:", sub_100708FAC(a2, a3, a4, v18, v20, a10, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right));
  objc_msgSend(a4, "i_viewScrollDidChange");
  objc_msgSend(a4, "i_viewScrollingEnded");
  objc_msgSend(a4, "i_viewWillBeginZooming");
  objc_msgSend(a4, "viewDidEndZooming");
  return objc_msgSend(a4, "i_viewDidZoomToViewScale:notify:", 1, a10);
}

uint64_t sub_100554C64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_BYTE *)(v1 + 64) = 1;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_BYTE *)(v1 + 104) = 1;
  *(_QWORD *)(v1 + 112) = 0;
  *(_BYTE *)(v1 + 120) = 1;
  *(_QWORD *)(v1 + 128) = 0;
  *(_BYTE *)(v1 + 136) = 1;
  v2 = v1 + *(int *)(a1 + 52);
  sub_1004CB800(v2, &qword_1013E06C0);
  v3 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
}

uint64_t sub_100554CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004CB7BC(v2 + *(int *)(a1 + 48), a2, &qword_1013E06C0);
}

uint64_t sub_100554D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004CB7BC(v2 + *(int *)(a1 + 52), a2, &qword_1013E06C0);
}

uint64_t sub_100554D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100554D70(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakLoadStrong(v1 + *(int *)(a1 + 40));
}

uint64_t sub_100554D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004E90B0(v2 + *(int *)(a1 + 44), a2);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100554D9C())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

Swift::Int sub_100554DBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_100554E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_100554E98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_100554F0C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 44));
  v3 = v2[3];
  v4 = v2[4];
  sub_1004BB5A4(v2, v3);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 32) + 8))(v3);
}

uint64_t sub_100554F4C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  sub_1004CB9AC(v4, v5);
  return (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)(v6 + 32) + 16))(v5, a2);
}

uint64_t (*sub_100554F9C(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(a1 + 8) = v2;
  v4 = *(int *)(a2 + 44);
  *(_DWORD *)(a1 + 16) = v4;
  v5 = (_QWORD *)(v2 + v4);
  v7 = *(_QWORD *)(v2 + v4 + 24);
  v6 = *(_QWORD *)(v2 + v4 + 32);
  sub_1004BB5A4(v5, v7);
  *(double *)a1 = (*(double (**)(uint64_t))(*(_QWORD *)(v6 + 32) + 8))(v7);
  return sub_100555000;
}

uint64_t sub_100555000(uint64_t a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 8) + *(int *)(a1 + 16);
  v2 = *(double *)a1;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  sub_1004CB9AC(v1, v3);
  return (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)(v4 + 32) + 16))(v3, v2);
}

uint64_t sub_100555058(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 44));
  v3 = v2[3];
  v4 = v2[4];
  sub_1004BB5A4(v2, v3);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 32) + 32))(v3);
}

char *sub_100555098(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v45;
  char *v47;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    v10 = a2[3];
    *((_QWORD *)a1 + 3) = v10;
    v11 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v11;
    a1[64] = *((_BYTE *)a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    v12 = *(_OWORD *)(a2 + 11);
    a1[104] = *((_BYTE *)a2 + 104);
    a1[120] = *((_BYTE *)a2 + 120);
    *((_QWORD *)a1 + 14) = a2[14];
    a1[136] = *((_BYTE *)a2 + 136);
    *((_QWORD *)a1 + 16) = a2[16];
    v13 = a3[9];
    v47 = &a1[v13];
    v14 = (uint64_t)a2 + v13;
    *(_OWORD *)(a1 + 88) = v12;
    v15 = type metadata accessor for UUID(0);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    v17 = v4;
    v18 = v8;
    v19 = v9;
    v20 = v10;
    v16(v47, v14, v15);
    swift_unknownObjectWeakCopyInit(&v7[a3[10]], (char *)a2 + a3[10]);
    v21 = a3[11];
    v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)&v7[v21 + 24] = v22;
    (**(void (***)(void))(v22 - 8))();
    v23 = a3[12];
    v24 = &v7[v23];
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26))
    {
      v29 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v16(v24, (uint64_t)v25, v15);
      v30 = *(int *)(v26 + 20);
      v31 = &v24[v30];
      v32 = &v25[v30];
      v33 = *((_QWORD *)v32 + 1);
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = v33;
      v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v27 + 56);
      v35 = swift_retain(v33);
      v34(v24, 0, 1, v26, v35);
    }
    v36 = a3[13];
    v37 = &v7[v36];
    v38 = (char *)a2 + v36;
    if (v28(v38, 1, v26))
    {
      v39 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v16(v37, (uint64_t)v38, v15);
      v40 = *(int *)(v26 + 20);
      v41 = &v37[v40];
      v42 = &v38[v40];
      v43 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v43;
      v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v27 + 56);
      v45 = swift_retain(v43);
      v44(v37, 0, 1, v26, v45);
    }
  }
  return v7;
}

double sub_100555304(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  char *v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  __n128 v10;
  char *v11;
  double result;

  v4 = (char *)a1 + a2[9];
  v5 = type metadata accessor for UUID(0);
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_unknownObjectWeakDestroy((char *)a1 + a2[10]);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((id *)((char *)a1 + a2[11]));
  v7 = (char *)a1 + a2[12];
  v8 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    v6(v7, v5);
    v10 = swift_release(*(_QWORD *)&v7[*(int *)(v8 + 20) + 8]);
  }
  v11 = (char *)a1 + a2[13];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v9)(v11, 1, v8, v10))
  {
    v6(v11, v5);
    *(_QWORD *)&result = swift_release(*(_QWORD *)&v11[*(int *)(v8 + 20) + 8]).n128_u64[0];
  }
  return result;
}

uint64_t sub_100555434(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;
  id v17;
  id v18;
  id v19;
  int *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v45;
  uint64_t v47;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  v9 = *(void **)(a2 + 16);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v8;
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v12 = a3[9];
  v47 = a1 + v12;
  v13 = a2 + v12;
  *(_OWORD *)(a1 + 72) = v11;
  v14 = type metadata accessor for UUID(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v16 = v6;
  v17 = v7;
  v18 = v9;
  v19 = v8;
  v20 = a3;
  v15(v47, v13, v14);
  swift_unknownObjectWeakCopyInit(a1 + a3[10], a2 + a3[10]);
  v21 = a3[11];
  v22 = *(_OWORD *)(a2 + v21 + 24);
  *(_OWORD *)(a1 + v21 + 24) = v22;
  (**(void (***)(void))(v22 - 8))();
  v23 = a3[12];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v25, 1, v26))
  {
    v29 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v24, (uint64_t)v25, v14);
    v30 = *(int *)(v26 + 20);
    v31 = &v24[v30];
    v32 = &v25[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v27 + 56);
    v35 = swift_retain(v33);
    v34(v24, 0, 1, v26, v35);
  }
  v36 = v20[13];
  v37 = (char *)(a1 + v36);
  v38 = (char *)(a2 + v36);
  if (v28(v38, 1, v26))
  {
    v39 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v15((uint64_t)v37, (uint64_t)v38, v14);
    v40 = *(int *)(v26 + 20);
    v41 = &v37[v40];
    v42 = &v38[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v27 + 56);
    v45 = swift_retain(v43);
    v44(v37, 0, 1, v26, v45);
  }
  return a1;
}

uint64_t sub_100555674(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  v18 = *(_OWORD *)(a2 + 32);
  v19 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v18;
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 72);
  v21 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v21;
  *(_OWORD *)(a1 + 72) = v20;
  v22 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v22;
  v23 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v23;
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for UUID(0);
  v67 = *(_QWORD *)(v27 - 8);
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 24);
  v66(v25, v26, v27);
  swift_unknownObjectWeakCopyAssign(a1 + a3[10], a2 + a3[10]);
  sub_1004EA5C8((_QWORD *)(a1 + a3[11]), (_QWORD *)(a2 + a3[11]));
  v28 = a3[12];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  v31 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v29, v30, v27);
      v36 = *(int *)(v31 + 20);
      v37 = &v29[v36];
      v38 = &v30[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v32 + 56);
      v41 = swift_retain(v39);
      v40(v29, 0, 1, v31, v41);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v35)
  {
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_6:
    v42 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  v66((uint64_t)v29, (uint64_t)v30, v27);
  v56 = *(int *)(v31 + 20);
  v57 = &v29[v56];
  v58 = &v30[v56];
  v59 = *((_QWORD *)v58 + 1);
  v60 = *((_QWORD *)v57 + 1);
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = v59;
  swift_retain(v59);
  swift_release(v60);
LABEL_7:
  v43 = a3[13];
  v44 = (char *)(a1 + v43);
  v45 = (char *)(a2 + v43);
  v46 = v33((char *)(a1 + v43), 1, v31);
  v47 = v33(v45, 1, v31);
  if (!v46)
  {
    if (!v47)
    {
      v66((uint64_t)v44, (uint64_t)v45, v27);
      v61 = *(int *)(v31 + 20);
      v62 = &v44[v61];
      v63 = &v45[v61];
      v64 = *((_QWORD *)v63 + 1);
      v65 = *((_QWORD *)v62 + 1);
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *((_QWORD *)v62 + 1) = v64;
      swift_retain(v64);
      swift_release(v65);
      return a1;
    }
    sub_1004B84A4((uint64_t)v44, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_12;
  }
  if (v47)
  {
LABEL_12:
    v54 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v44, v45, v27);
  v48 = *(int *)(v31 + 20);
  v49 = &v44[v48];
  v50 = &v45[v48];
  v51 = *((_QWORD *)v50 + 1);
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *((_QWORD *)v49 + 1) = v51;
  v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v32 + 56);
  v53 = swift_retain(v51);
  v52(v44, 0, 1, v31, v53);
  return a1;
}

uint64_t sub_1005559B0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v9;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)(a1 + 88) = v8;
  v13 = type metadata accessor for UUID(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  swift_unknownObjectWeakTakeInit(a1 + a3[10], a2 + a3[10]);
  v15 = a3[11];
  v16 = a3[12];
  v17 = a1 + v15;
  v18 = a2 + v15;
  v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
  v20 = (char *)(a1 + v16);
  v21 = (char *)(a2 + v16);
  v22 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v24(v21, 1, v22))
  {
    v25 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v20, (uint64_t)v21, v13);
    *(_OWORD *)&v20[*(int *)(v22 + 20)] = *(_OWORD *)&v21[*(int *)(v22 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v26 = a3[13];
  v27 = (char *)(a1 + v26);
  v28 = (char *)(a2 + v26);
  if (v24(v28, 1, v22))
  {
    v29 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v27, (uint64_t)v28, v13);
    *(_OWORD *)&v27[*(int *)(v22 + 20)] = *(_OWORD *)&v28[*(int *)(v22 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_100555BA4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v11 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v12 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)(a1 + 88) = v11;
  v16 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v16 - 8);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 40);
  v41(v14, v15, v16);
  swift_unknownObjectWeakTakeAssign(a1 + a3[10], a2 + a3[10]);
  v17 = a3[11];
  v18 = a1 + v17;
  v19 = a2 + v17;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + v17));
  v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  v21 = a3[12];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v22, v23, v16);
      *(_OWORD *)&v22[*(int *)(v24 + 20)] = *(_OWORD *)&v23[*(int *)(v24 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v28)
  {
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_6:
    v29 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  v41((uint64_t)v22, (uint64_t)v23, v16);
  v37 = *(int *)(v24 + 20);
  v38 = *(_QWORD *)&v22[v37 + 8];
  *(_OWORD *)&v22[v37] = *(_OWORD *)&v23[v37];
  swift_release(v38);
LABEL_7:
  v30 = a3[13];
  v31 = (char *)(a1 + v30);
  v32 = (char *)(a2 + v30);
  v33 = v26((char *)(a1 + v30), 1, v24);
  v34 = v26(v32, 1, v24);
  if (!v33)
  {
    if (!v34)
    {
      v41((uint64_t)v31, (uint64_t)v32, v16);
      v39 = *(int *)(v24 + 20);
      v40 = *(_QWORD *)&v31[v39 + 8];
      *(_OWORD *)&v31[v39] = *(_OWORD *)&v32[v39];
      swift_release(v40);
      return a1;
    }
    sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_12;
  }
  if (v34)
  {
LABEL_12:
    v35 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v31, v32, v16);
  *(_OWORD *)&v31[*(int *)(v24 + 20)] = *(_OWORD *)&v32[*(int *)(v24 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v31, 0, 1, v24);
  return a1;
}

uint64_t sub_100555EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100555EC0);
}

uint64_t sub_100555EC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013E06C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_100555F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100555F70);
}

char *sub_100555F70(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013E06C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CRLCanvasLayerAnimation(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E2030;
  if (!qword_1013E2030)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCanvasLayerAnimation);
  return result;
}

void sub_10055604C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[8];
  uint64_t v7;
  uint64_t v8;

  v6[0] = " ";
  v6[1] = &unk_100EF82D0;
  v6[2] = &unk_100EF82D0;
  v6[3] = &unk_100EF82E8;
  v6[4] = &unk_100EF82E8;
  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v6[6] = &unk_100EF8300;
    v6[7] = &unk_100EF8318;
    sub_1004EAE54(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 10, v6, a1 + 16);
    }
  }
}

uint64_t sub_100556108()
{
  return sub_1004B7878(&qword_1013E2088, type metadata accessor for CRLCanvasLayerAnimation, (uint64_t)&unk_100EF8370);
}

uint64_t sub_100556134(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_1013E2090, type metadata accessor for CRLCanvasLayerAnimation, (uint64_t)&unk_100EF8330);
  *(_QWORD *)(a1 + 48) = result;
  return result;
}

uint64_t sub_100556170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLCanvasLayerAnimation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005561B4()
{
  id *v0;

  return swift_deallocObject(v0, 88, 7);
}

id sub_1005561F0(double a1)
{
  uint64_t v1;

  return sub_100554B24(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(id *)(v1 + 40), a1, *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(double *)(v1 + 80));
}

uint64_t sub_100556208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E06C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10055630C()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  unsigned int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  uint64_t v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
  objc_msgSendSuper2(&v14, "becameSelected");
  v1 = objc_msgSend(v0, "layout");
  objc_msgSend(v1, "setSupportsInstructionalText:", 1);

  objc_msgSend(v0, "updateChildrenFromLayout");
  v2 = objc_msgSend(v0, "interactiveCanvasController");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v0, "info");
    v5 = objc_msgSend(v3, "currentSelectionPathContainsInfo:", v4);

    if (!v5)
    {
LABEL_16:

      return;
    }
    objc_msgSend(v3, "invalidateContentLayersForRep:", v0);
    v6 = objc_msgSend(v0, "childReps");
    v7 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v13 = v8;
      else
        v13 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v9 = _CocoaArrayWrapper.endIndex.getter(v13);
      if (v9)
        goto LABEL_5;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v8);
      if (v9)
      {
LABEL_5:
        if (v9 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0)
            v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
          else
            v11 = *(id *)(v8 + 8 * i + 32);
          v12 = v11;
          objc_msgSend(v3, "invalidateContentLayersForRep:", v11);

        }
      }
    }
    swift_bridgeObjectRelease_n(v8, 2);
    goto LABEL_16;
  }
}

void sub_100556534()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
  objc_msgSendSuper2(&v12, "becameNotSelected");
  v1 = objc_msgSend(v0, "layout");
  objc_msgSend(v1, "setSupportsInstructionalText:", 0);

  objc_msgSend(v0, "updateChildrenFromLayout");
  v2 = objc_msgSend(v0, "interactiveCanvasController");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "invalidateContentLayersForRep:", v0);
    v4 = objc_msgSend(v0, "childReps");
    v5 = sub_1004B8930(0, (unint64_t *)&qword_1013E56B0, off_101229828);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v11 = v6;
      else
        v11 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v11);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v6);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            v9 = *(id *)(v6 + 8 * i + 32);
          v10 = v9;
          objc_msgSend(v3, "invalidateContentLayersForRep:", v9);

        }
      }
    }
    swift_bridgeObjectRelease_n(v6, 2);

  }
}

id sub_100556858()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPStickyNoteRep()
{
  return objc_opt_self(_TtC8Freeform18CRLWPStickyNoteRep);
}

uint64_t sub_1005568A8(_QWORD *a1, _QWORD *a2)
{
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
  if (v3
    && (v5 = a2[3],
        v4 = a2[4],
        v7 = a1[3],
        v6 = a1[4],
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr),
        (static NSObject.== infix(_:_:)(v7, v5) & 1) != 0))
  {
    return static Selector.== infix(_:_:)(v6, v4);
  }
  else
  {
    return 0;
  }
}

Swift::Int sub_10055693C()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  Swift::UInt v3;
  void *v4;
  Swift::UInt v5;
  id v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = (void *)v0[3];
  v5 = v0[4];
  Hasher.init(_seed:)(v8, 0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  v6 = v4;
  NSObject.hash(into:)(v8);

  Selector.hash(into:)(v8, v5);
  return Hasher._finalize()();
}

uint64_t sub_1005569D0(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v3;
  Swift::UInt v4;
  void *v5;
  Swift::UInt v6;
  id v7;

  v3 = v1[1];
  v4 = v1[2];
  v5 = (void *)v1[3];
  v6 = v1[4];
  Hasher._combine(_:)(*v1);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  v7 = v5;
  NSObject.hash(into:)(a1);

  return Selector.hash(into:)(a1, v6);
}

Swift::Int sub_100556A3C(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  Swift::UInt v3;
  Swift::UInt v4;
  void *v5;
  Swift::UInt v6;
  id v7;
  _QWORD v9[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = (void *)v1[3];
  v6 = v1[4];
  Hasher.init(_seed:)(v9, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  v7 = v5;
  NSObject.hash(into:)(v9);

  Selector.hash(into:)(v9, v6);
  return Hasher._finalize()();
}

void *sub_100556ACC()
{
  void *result;

  result = (void *)sub_1008D5F9C((uint64_t)_swiftEmptyArrayStorage);
  off_1013E20B0 = result;
  return result;
}

void sub_100556AF0()
{
  off_1013E20B8 = _swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for CRLWPStickyNoteShadowCache()
{
  return objc_opt_self(_TtC8Freeform26CRLWPStickyNoteShadowCache);
}

void sub_100556B24(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v25;
  id v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  _QWORD *v34;
  void *v35;
  _QWORD *v36;
  void *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v3)
    return;
  v5 = *a2;
  swift_bridgeObjectRetain(v2);
  v6 = 0;
  v7 = 0;
  v46 = v5;
  while (1)
  {
    v8 = &v2[v6];
    if (v2[v6 + 4] != v5 || v8[5] != a2[1] || v8[6] != a2[2])
      goto LABEL_4;
    v44 = v8[5];
    v45 = v8[6];
    v10 = (void *)v8[7];
    v9 = v8[8];
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v11 = a2[3];
    v12 = v10;
    v43 = v11;
    if ((static NSObject.== infix(_:_:)(v12, v11) & 1) != 0)
      break;

    v5 = v46;
LABEL_4:
    ++v7;
    v6 += 5;
    if (v3 == v7)
    {
      swift_bridgeObjectRelease(v2);
      return;
    }
  }
  v13 = v9;
  v14 = a2[4];
  v15 = static Selector.== infix(_:_:)(v13, v14);

  v5 = v46;
  if ((v15 & 1) == 0)
    goto LABEL_4;
  swift_bridgeObjectRelease(v2);
  v16 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_44;
  v17 = v2[2];
  if (v16 != v17)
  {
    v18 = v46;
    v20 = v44;
    v19 = v45;
    do
    {
      if (v16 >= v17)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return;
      }
      v22 = &v2[v6];
      if (v2[v6 + 9] == v18 && v2[v6 + 10] == v20 && v2[v6 + 11] == v19)
      {
        v25 = v22[13];
        v26 = (id)v22[12];
        if ((static NSObject.== infix(_:_:)(v26, v43) & 1) != 0)
        {
          v27 = static Selector.== infix(_:_:)(v25, v14);

          v18 = v46;
          v20 = v44;
          v19 = v45;
          if ((v27 & 1) != 0)
            goto LABEL_15;
        }
        else
        {

          v18 = v46;
          v20 = v44;
          v19 = v45;
        }
      }
      if (v16 != v7)
      {
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_40;
        v28 = v2[2];
        if (v7 >= v28)
          goto LABEL_41;
        if (v16 >= v28)
          goto LABEL_42;
        v29 = (uint64_t)&v2[5 * v7 + 4];
        v30 = *(_QWORD *)(v29 + 16);
        v39 = *(_OWORD *)v29;
        v40 = *(_OWORD *)(v22 + 9);
        v31 = v22[11];
        v41 = *((_OWORD *)v22 + 6);
        v38 = *(_OWORD *)(v29 + 24);
        v32 = (id)v38;
        v33 = (id)v41;
        if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
          v2 = sub_100D14FF4(v2);
        v34 = &v2[5 * v7];
        v35 = (void *)v34[7];
        *((_OWORD *)v34 + 2) = v40;
        v34[6] = v31;
        *(_OWORD *)(v34 + 7) = v41;

        if (v16 >= v2[2])
          goto LABEL_43;
        v36 = &v2[v6];
        v37 = (void *)v2[v6 + 12];
        *(_OWORD *)(v36 + 9) = v39;
        v36[11] = v30;
        *((_OWORD *)v36 + 6) = v38;

        *(_QWORD *)a1 = v2;
        v18 = v46;
        v20 = v44;
        v19 = v45;
      }
      if (__OFADD__(v7++, 1))
        goto LABEL_39;
LABEL_15:
      ++v16;
      v17 = v2[2];
      v6 += 5;
    }
    while (v16 != v17);
  }
}

id sub_100556E0C(id a1, void *a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10)
{
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  unint64_t v28;
  char v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  _QWORD *v35;
  void *v36;
  id v37;
  int64_t v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  id v46;
  void *v47;
  id result;
  id v49;
  id v50;
  id v51;
  char v52;
  void *v53;
  _QWORD *v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  __int128 v59;
  __int128 v60;
  void *v61;
  objc_super v62;
  _BYTE v63[24];
  _BYTE v64[24];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  objc_super v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;

  if (!objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") || (a4 & 1) != 0)
  {
    v68.receiver = a5;
    v68.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
    return objc_msgSendSuper2(&v68, "newShadowImageWithSize:shadow:drawSelector:unflipped:", a6, a7, a8 & 1, a9, a10);
  }
  objc_msgSend(a1, "size");
  v21 = v20;
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  objc_msgSend(a1, "size");
  v23 = v22;
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  objc_msgSend(a1, "transform");
  v24 = sub_1000791B0(&v65);
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v24 < 9.22337204e18)
  {
    *(_QWORD *)&v69 = (uint64_t)v21;
    *((_QWORD *)&v69 + 1) = (uint64_t)v23;
    *(_QWORD *)&v70 = (uint64_t)v24;
    *((_QWORD *)&v70 + 1) = a2;
    v71 = a3;
    v25 = qword_1013DC928;
    a1 = a2;
    if (v25 == -1)
      goto LABEL_13;
    goto LABEL_48;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  swift_once(&qword_1013DC928, sub_100556ACC);
LABEL_13:
  swift_beginAccess(&off_1013E20B0, &v65, 32, 0);
  v26 = off_1013E20B0;
  if (*((_QWORD *)off_1013E20B0 + 2))
  {
    v27 = a1;
    v28 = sub_1008437B0((uint64_t)&v69);
    if ((v29 & 1) != 0)
    {
      v30 = *(void **)(v26[7] + 8 * v28);
      swift_endAccess(&v65);
      v31 = v30;

      v32 = qword_1013DC930;
      v33 = v31;
      if (v32 != -1)
        swift_once(&qword_1013DC930, sub_100556AF0);
      swift_beginAccess(&off_1013E20B8, &v65, 33, 0);
      v34 = v27;
      v35 = 0;
      sub_100556B24((uint64_t)&off_1013E20B8, (uint64_t *)&v69);
      v37 = v36;

      v38 = *((_QWORD *)off_1013E20B8 + 2);
      if (v38 < (uint64_t)v37)
      {
        __break(1u);
      }
      else
      {
        sub_100CFEBD4((uint64_t)v37, v38);
        v35 = off_1013E20B8;
        v37 = v34;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
        off_1013E20B8 = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
LABEL_19:
          v41 = v35[2];
          v40 = v35[3];
          if (v41 >= v40 >> 1)
          {
            v35 = sub_100D1087C((_QWORD *)(v40 > 1), v41 + 1, 1, v35);
            off_1013E20B8 = v35;
          }
          v35[2] = v41 + 1;
          v42 = &v35[5 * v41];
          v43 = v69;
          v44 = v70;
          v42[8] = v71;
          *((_OWORD *)v42 + 2) = v43;
          *((_OWORD *)v42 + 3) = v44;
          swift_endAccess(&v65);

LABEL_37:
          return v33;
        }
      }
      v35 = sub_100D1087C(0, v35[2] + 1, 1, v35);
      off_1013E20B8 = v35;
      goto LABEL_19;
    }

  }
  swift_endAccess(&v65);
  if (*((_QWORD *)off_1013E20B0 + 2) < 0xAuLL)
    goto LABEL_30;
  if (qword_1013DC930 != -1)
    swift_once(&qword_1013DC930, sub_100556AF0);
  swift_beginAccess(&off_1013E20B8, v64, 0, 0);
  if (!*((_QWORD *)off_1013E20B8 + 2))
  {
LABEL_30:
    v62.receiver = a5;
    v62.super_class = (Class)type metadata accessor for CRLWPStickyNoteRep();
    v50 = objc_msgSendSuper2(&v62, "newShadowImageWithSize:shadow:drawSelector:unflipped:", a6, a7, a8 & 1, a9, a10);
    swift_beginAccess(&off_1013E20B0, v63, 33, 0);
    v51 = a1;
    v33 = v50;
    v52 = swift_isUniquelyReferenced_nonNull_native(off_1013E20B0);
    v61 = off_1013E20B0;
    off_1013E20B0 = (_UNKNOWN *)0x8000000000000000;
    sub_100826F60((uint64_t)v33, (uint64_t)&v69, v52);
    v53 = off_1013E20B0;
    off_1013E20B0 = v61;

    swift_bridgeObjectRelease(v53);
    swift_endAccess(v63);
    if (qword_1013DC930 != -1)
      swift_once(&qword_1013DC930, sub_100556AF0);
    swift_beginAccess(&off_1013E20B8, v63, 33, 0);
    v54 = off_1013E20B8;
    v37 = v51;
    v55 = swift_isUniquelyReferenced_nonNull_native(v54);
    off_1013E20B8 = v54;
    if ((v55 & 1) == 0)
    {
      v54 = sub_100D1087C(0, v54[2] + 1, 1, v54);
      off_1013E20B8 = v54;
    }
    v57 = v54[2];
    v56 = v54[3];
    if (v57 >= v56 >> 1)
    {
      v54 = sub_100D1087C((_QWORD *)(v56 > 1), v57 + 1, 1, v54);
      off_1013E20B8 = v54;
    }
    v54[2] = v57 + 1;
    v58 = &v54[5 * v57];
    v59 = v69;
    v60 = v70;
    v58[8] = v71;
    *((_OWORD *)v58 + 2) = v59;
    *((_OWORD *)v58 + 3) = v60;
    swift_endAccess(v63);
    goto LABEL_37;
  }
  v45 = *((_OWORD *)off_1013E20B8 + 3);
  v65 = *((_OWORD *)off_1013E20B8 + 2);
  v66 = v45;
  *(_QWORD *)&v67 = *((_QWORD *)off_1013E20B8 + 8);
  swift_beginAccess(&off_1013E20B0, v63, 33, 0);
  v46 = *((id *)&v66 + 1);
  v47 = (void *)sub_1008474AC((uint64_t)&v65);
  swift_endAccess(v63);

  result = (id)swift_beginAccess(&off_1013E20B8, v63, 33, 0);
  if (*((_QWORD *)off_1013E20B8 + 2))
  {
    v49 = *((id *)off_1013E20B8 + 7);
    sub_100CFEBD4(0, 1);
    swift_endAccess(v63);
    sub_100557460((uint64_t)&v65);

    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_100557460(uint64_t a1)
{

  return a1;
}

void destroy for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1)
{

}

uint64_t initializeWithCopy for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for CRLWPStickyNoteShadowCache.CacheKey(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPStickyNoteShadowCache.CacheKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPStickyNoteShadowCache.CacheKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStickyNoteShadowCache.CacheKey()
{
  return &type metadata for CRLWPStickyNoteShadowCache.CacheKey;
}

unint64_t sub_100557614()
{
  unint64_t result;

  result = qword_1013E2180;
  if (!qword_1013E2180)
  {
    result = swift_getWitnessTable(&unk_100EF84D4, &type metadata for CRLWPStickyNoteShadowCache.CacheKey);
    atomic_store(result, (unint64_t *)&qword_1013E2180);
  }
  return result;
}

uint64_t sub_100557658()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_100557774();
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLShapeEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "allShapeItems");
    swift_unknownObjectRelease(v5);
    v9 = type metadata accessor for CRLShapeItem(0);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  }
  else
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
  return v10;
}

id sub_100557724()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterShapeDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterShapeDataProvider()
{
  return objc_opt_self(_TtC8Freeform33CRLMiniFormatterShapeDataProvider);
}

unint64_t sub_100557774()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F2E80;
  if (!qword_1013F2E80)
  {
    v1 = objc_opt_self(CRLShapeEditor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F2E80);
  }
  return result;
}

void sub_1005577B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  void *Strong;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v22, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (!Strong)
    return;
  v10 = Strong;
  v11 = objc_msgSend(Strong, "textFields");

  if (!v11)
    return;
  v12 = sub_1005583F4();
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v13 < 0)
    v20 = v13;
  else
    v20 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v13);
  if (!v21)
    goto LABEL_17;
LABEL_5:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
  }
  else
  {
    if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v14 = *(id *)(v13 + 32);
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "text", swift_bridgeObjectRelease(v13).n128_f64[0]);

  if (v16)
  {
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v13 = v18;

    if (v17 == a3 && v13 == a4)
    {
      v13 = a4;
    }
    else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v17, v13, a3, a4, 0) & 1) == 0)
    {
      v19 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v19 = v17 & 0xFFFFFFFFFFFFLL;
      if (v19)
        a5(v17, v13);
    }
    goto LABEL_17;
  }
}

id sub_100557970(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6;

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setText:", v6);

  objc_msgSend(a1, "setReturnKeyType:", 9);
  objc_msgSend(a1, "setClearButtonMode:", 1);
  objc_msgSend(a1, "setAutocapitalizationType:", 2);
  objc_msgSend(a1, "setDelegate:", a4);
  return objc_msgSend(a1, "becomeFirstResponder");
}

BOOL sub_100557A1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  id v10;
  void *v11;
  NSString v12;
  id v13;
  unint64_t v14;
  void *Strong;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v10 = objc_msgSend(a1, "text");
  if (v10)
  {
    v11 = v10;
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "stringByReplacingCharactersInRange:withString:", a2, a3, v12);

    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    a5 = v14;

  }
  else
  {
    swift_bridgeObjectRetain(a5);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5+ OBJC_IVAR____TtC8FreeformP33_1F7AC1847BE2554B067346642BF3ED1536CRLBoardRenameAlertTextFieldDelegate_editAction);
  if (Strong)
  {
    v16 = Strong;
    v17 = HIBYTE(a5) & 0xF;
    if ((a5 & 0x2000000000000000) == 0)
      v17 = a4 & 0xFFFFFFFFFFFFLL;
    objc_msgSend(Strong, "setEnabled:", v17 != 0);

  }
  v18 = String.count.getter(a4, a5);
  swift_bridgeObjectRelease(a5);
  return v18 < 256;
}

id sub_100557C84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardRenameAlertTextFieldDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLBoardRenameAlertTextFieldDelegate()
{
  return objc_opt_self(_TtC8FreeformP33_1F7AC1847BE2554B067346642BF3ED1536CRLBoardRenameAlertTextFieldDelegate);
}

id sub_100557CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  NSString v29;
  void *v30;
  void *v31;
  id v32;
  char *v33;
  _QWORD *v34;
  void *v35;
  _QWORD *v36;
  char *v37;
  id v38;
  NSString v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  void *v46;
  id v47;
  void **aBlock;
  uint64_t v53;
  void (*v54)(uint64_t, void *);
  void *v55;
  void *v56;
  _QWORD *v57;

  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;

  v12 = objc_msgSend(v5, "mainBundle");
  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v17 = v16;

  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v20 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v18, v19, 1);

  v21 = objc_msgSend(v5, "mainBundle");
  v22 = String._bridgeToObjectiveC()();
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v26 = v25;

  v27 = swift_allocObject(&unk_10126BD90, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16);
  v28 = (_QWORD *)swift_allocObject(&unk_10126BDB8, 56, 7);
  v28[2] = v27;
  v28[3] = a1;
  v28[4] = a2;
  v28[5] = a3;
  v28[6] = a4;
  swift_retain(v27);
  swift_bridgeObjectRetain(a2);
  swift_retain(a4);
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v56 = sub_100558348;
  v57 = v28;
  aBlock = _NSConcreteStackBlock;
  v53 = *(_QWORD *)"";
  v54 = sub_1004C6194;
  v55 = &unk_10126BDD0;
  v30 = _Block_copy(&aBlock);
  swift_release(v57);
  v31 = (void *)objc_opt_self(UIAlertAction);
  v32 = objc_msgSend(v31, "actionWithTitle:style:handler:", v29, 0, v30);
  _Block_release(v30);
  swift_release(v27);

  v33 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLBoardRenameAlertTextFieldDelegate()), "init");
  swift_unknownObjectWeakAssign(&v33[OBJC_IVAR____TtC8FreeformP33_1F7AC1847BE2554B067346642BF3ED1536CRLBoardRenameAlertTextFieldDelegate_editAction], v32);
  objc_setAssociatedObject(v20, "com.apple.freeform.renameAlertTextFieldDelegate", v33, (void *)1);
  v34 = (_QWORD *)swift_allocObject(&unk_10126BE08, 40, 7);
  v34[2] = a1;
  v34[3] = a2;
  v34[4] = v33;
  v56 = sub_10055839C;
  v57 = v34;
  aBlock = _NSConcreteStackBlock;
  v53 = *(_QWORD *)"";
  v54 = sub_1004C6194;
  v55 = &unk_10126BE20;
  v35 = _Block_copy(&aBlock);
  v36 = v57;
  swift_bridgeObjectRetain(a2);
  v37 = v33;
  objc_msgSend(v20, "addTextFieldWithConfigurationHandler:", v35, swift_release(v36).n128_f64[0]);
  _Block_release(v35);
  objc_msgSend(v20, "addAction:", v32);
  objc_msgSend(v20, "setPreferredAction:", v32);
  v38 = objc_msgSend(v5, "mainBundle");
  v39 = String._bridgeToObjectiveC()();
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, v40, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v43 = v42;

  v44 = swift_allocObject(&unk_10126BE58, 32, 7);
  *(_QWORD *)(v44 + 16) = a3;
  *(_QWORD *)(v44 + 24) = a4;
  swift_retain(a4);
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v43);
  v56 = sub_1005583CC;
  v57 = (_QWORD *)v44;
  aBlock = _NSConcreteStackBlock;
  v53 = *(_QWORD *)"";
  v54 = sub_1004C6194;
  v55 = &unk_10126BE70;
  v46 = _Block_copy(&aBlock);
  v47 = objc_msgSend(v31, "actionWithTitle:style:handler:", v45, 1, v46, swift_release(v57).n128_f64[0]);
  _Block_release(v46);

  objc_msgSend(v20, "addAction:", v47);
  return v20;
}

uint64_t sub_1005582F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100558314()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_100558348(uint64_t a1)
{
  uint64_t v1;

  sub_1005577B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40));
}

uint64_t sub_100558358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100558368(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100558370()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

id sub_10055839C(void *a1)
{
  uint64_t *v1;

  return sub_100557970(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1005583A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005583CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
}

unint64_t sub_1005583F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E2240;
  if (!qword_1013E2240)
  {
    v1 = objc_opt_self(UITextField);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E2240);
  }
  return result;
}

void sub_100558440(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  void *v17;
  int v18;
  uint64_t v19;
  _UNKNOWN **v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void (*v45)(uint64_t, id, uint64_t);
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  int64_t v54;
  _QWORD aBlock[5];
  uint64_t v56;
  _QWORD v57[3];
  void *v58;
  _UNKNOWN **v59;
  uint64_t v60;

  v5 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v47 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v45 - v12);
  v13 = *(void **)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_shapeItem)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v13)
  {
    v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_shapeItem);
    v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData);
    v17 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 16);
    v16 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 24);
    v18 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 32);
    v52 = a3;
    v50 = v9;
    v51 = v8;
    v48 = v11;
    v49 = v10;
    if (v18)
    {
      if (v18 == 1)
      {
        v19 = sub_1004B8930(0, (unint64_t *)&unk_1013EFDB0, NSMutableAttributedString_ptr);
        v20 = &off_10126BEB8;
      }
      else
      {
        v19 = type metadata accessor for CRLWPStorage();
        v20 = &off_10126BF68;
      }
      v58 = (void *)v19;
      v59 = v20;
      v57[0] = v17;
    }
    else
    {
      v58 = &type metadata for String;
      v59 = &off_10126BE98;
      v57[0] = v17;
      v57[1] = v16;
    }
    v21 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_isSmartPaste);
    v22 = v13;
    sub_100558DE0(v17, v16, v18);
    if (v21 == 1)
      sub_100559790(v57, v22);
    v23 = v60;
    sub_100DBEE64(v14, (uint64_t)&off_10127C5E0);
    if (v23)
      goto LABEL_25;
    if (!v18)
    {
      sub_1004E90B0((uint64_t)v57, (uint64_t)aBlock);
      v39 = sub_1004B804C(&qword_1013E2298);
      if ((swift_dynamicCast(&v53, aBlock, v39, &type metadata for String, 6) & 1) != 0)
      {
        v40 = v54;
        sub_1007D876C(*v15, v15[1], (uint64_t)v53, v54, 1);
        swift_bridgeObjectRelease(v40);
      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2, 118, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2u, 118, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      goto LABEL_24;
    }
    if (v18 == 1)
    {
      sub_1004E90B0((uint64_t)v57, (uint64_t)aBlock);
      v24 = sub_1004B804C(&qword_1013E2298);
      v25 = sub_1004B8930(0, (unint64_t *)&qword_1013F95A0, NSAttributedString_ptr);
      if ((swift_dynamicCast(&v53, aBlock, v24, v25, 6) & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2, 122, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2u, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        goto LABEL_24;
      }
      v26 = v53;
      v60 = *v15;
      v46 = v15[1];
      v27 = sub_100559A64();
      v28 = v26;
      v29 = v48;
      CRAttributedString.init(_:)(v28, &type metadata for CRLTextAttributeScope, v27);
      v30 = v49;
      v45 = *(void (**)(uint64_t, id, uint64_t))(v50 + 32);
      v45(v49, v29, v51);
      v31 = objc_msgSend(v28, "length");
      v32 = swift_allocObject(&unk_10126BFA8, 24, 7);
      *(_QWORD *)(v32 + 16) = v30;
      v33 = swift_allocObject(&unk_10126BFD0, 32, 7);
      *(_QWORD *)(v33 + 16) = sub_100559AB8;
      *(_QWORD *)(v33 + 24) = v32;
      aBlock[4] = sub_100559AD0;
      v56 = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100D3DC24;
      aBlock[3] = &unk_10126BFE8;
      v34 = _Block_copy(aBlock);
      v35 = v56;
      swift_retain(v33);
      objc_msgSend(v28, "enumerateAttributesInRange:options:usingBlock:", 0, v31, 0, v34, swift_release(v35).n128_f64[0]);
      v48 = v28;

      _Block_release(v34);
      LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v33, "", 78, 624, 125, 1);
      v36 = swift_release(v33);
      if ((v31 & 1) == 0)
      {
        v37 = v47;
        v38 = v51;
        ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, __n128))v45)(v47, v49, v51, v36);
        swift_release(v32);
        sub_1007D9B04(v60, v46, v37, 0);

        (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v50 + 8))(v37, v38);
LABEL_24:
        sub_100DB0D78(v14, (uint64_t)&off_10127C5E0, v52);
LABEL_25:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v57);

        return;
      }
      __break(1u);
    }
    else
    {
      sub_1004E90B0((uint64_t)v57, (uint64_t)aBlock);
      v41 = sub_1004B804C(&qword_1013E2298);
      v42 = type metadata accessor for CRLWPStorage();
      if ((swift_dynamicCast(&v53, aBlock, v41, v42, 6) & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2, 126, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPPasteTextCommand.swift", 96, 2u, 126, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
        goto LABEL_24;
      }
      v43 = v15[1];
      if (!__OFSUB__(v43, *v15))
      {
        v44 = v53;
        sub_1007DA508(*v15, v43 - *v15, (uint64_t)v53);

        goto LABEL_24;
      }
    }
    __break(1u);
  }
  __break(1u);
}

double sub_100558B14()
{
  uint64_t v0;
  double result;

  sub_100558E18(*(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 16), *(id *)(v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 24), *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 32));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_actionString
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_100558B5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPPasteTextCommand();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100558BE0()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_actionString);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_100558C1C()
{
  _QWORD *v0;

  return String.count.getter(*v0, v0[1]);
}

id sub_100558C24(uint64_t a1)
{
  NSString v2;
  id v3;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v2, "characterAtIndex:", a1);

  return v3;
}

uint64_t sub_100558C68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[10];

  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    v16[8] = v6;
    v16[9] = v7;
    result = Range<>.init(_:in:)(result);
    if ((v12 & 1) == 0)
    {
      v13 = result;
      v14 = v11;
      v16[0] = a3;
      v16[1] = a4;
      v15 = sub_100559AF0();
      return String.replaceSubrange<A>(_:with:)(v13, v14, v16, a6, v15);
    }
  }
  return result;
}

id sub_100558CE4()
{
  id *v0;

  return objc_msgSend(*v0, "length");
}

id sub_100558CF4(uint64_t a1)
{
  id *v1;
  id result;
  void *v4;
  id v5;

  result = objc_msgSend(*v1, "string");
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, "characterAtIndex:", a1);

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100558D50(uint64_t a1, uint64_t a2)
{
  void **v2;
  uint64_t v3;
  void *v5;
  id v6;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    v5 = *v2;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v5, "replaceCharactersInRange:withString:", a1, v3, v6);

  }
}

uint64_t type metadata accessor for CRLWPPasteTextCommand()
{
  return objc_opt_self(_TtC8Freeform21CRLWPPasteTextCommand);
}

id sub_100558DE0(id result, id a2, char a3)
{
  if (a3 == 2 || a3 == 1)
    return result;
  if (!a3)
    return (id)swift_bridgeObjectRetain(a2);
  return result;
}

void destroy for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1)
{
  sub_100558E18(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_100558E18(void *a1, id a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {

  }
  else if (!a3)
  {
    swift_bridgeObjectRelease(a2);
  }
}

uint64_t _s8Freeform21CRLWPPasteTextCommandC14CRLWPPasteTextOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100558DE0(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100558DE0(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100558E18(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for CRLWPPasteTextCommand.CRLWPPasteText(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100558E18(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPPasteTextCommand.CRLWPPasteText(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_100558FC0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100558FC8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLWPPasteTextCommand.CRLWPPasteText()
{
  return &type metadata for CRLWPPasteTextCommand.CRLWPPasteText;
}

uint64_t sub_100558FE0(_QWORD *a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  id v32;
  id v33;
  void (*v34)(char *, uint64_t);
  _BOOL4 v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int16 v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int16 v43;
  unsigned __int8 v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int16 v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int16 v52;
  uint64_t result;
  int v54;
  int v55;
  id v56;
  id v57;
  void *v58;
  char *v59;
  char v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void *v69;
  id v70;
  int v71;
  char v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  char *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  _QWORD v88[3];
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[3];
  uint64_t v92;
  uint64_t v93;

  v87 = a2;
  v86 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v4 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v84);
  v83 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v7);
  v82 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CharacterSet(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013F3E60);
  __chkstk_darwin(v13);
  v76 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v73 - v16;
  v19 = a1[3];
  v18 = a1[4];
  sub_1004BB5A4(a1, v19);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
  if (v20 < 1)
    return 0;
  v79 = v20 - 1;
  v80 = v20;
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData);
  v81 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData + 8);
  if (v21 < 1
    || (v20 = (uint64_t)objc_msgSend(v87, "characterAtIndex:", objc_msgSend(v87, "previousCharacterIndex:", v21)),
        (v20 & 0xF800) == 0xD800))
  {
    v77 = 0;
  }
  else
  {
    v22 = v20;
    v23 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "crlwp_preSmartSet");
    if (!v23)
    {
LABEL_69:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, 1, 1, v9);
      goto LABEL_70;
    }
    v24 = v23;
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v12, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v17, 1, v9) == 1)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    v77 = CharacterSet.contains(_:)(v22);
    v20 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  }
  v78 = v21;
  v75 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  v25 = *(_QWORD *)&v87[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v25)
  {
    __break(1u);
    goto LABEL_69;
  }
  v26 = (uint64_t)v83;
  (*(void (**)(uint64_t))(*(_QWORD *)v25 + 760))(v20);
  v27 = v82;
  sub_1004D29BC(v26 + *(int *)(v84 + 20), v82);
  sub_1004B84A4(v26, type metadata accessor for CRLWPShapeItemCRDTData);
  v28 = v85;
  v29 = v86;
  v74 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v74(v85, v27, v86);
  sub_1004B84A4(v27, type metadata accessor for CRLWPStorageCRDTData);
  v30 = (void *)CRAttributedString.attributedString.getter(v29);
  v31 = *(void (**)(char *, uint64_t))(v4 + 8);
  v31(v28, v29);
  v32 = objc_msgSend(v30, "length");

  if (v81 < (uint64_t)v32)
  {
    v33 = objc_msgSend(v87, "characterAtIndex:");
    if (((unsigned __int16)v33 & 0xF800) != 0xD800)
    {
      v56 = v33;
      v57 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "crlwp_postSmartSet");
      v36 = v80;
      if (v57)
      {
        v58 = v57;
        static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

        v59 = v76;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v76, v12, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
        result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v59, 1, v9);
        if ((_DWORD)result != 1)
        {
          v60 = CharacterSet.contains(_:)(v56);
          (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
          v34 = v31;
          v35 = (v60 & 1) != 0 && (v56 & 0xFFFFFFFB) != 8216;
          goto LABEL_12;
        }
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
LABEL_71:
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v76, 1, 1, v9);
      goto LABEL_72;
    }
  }
  v34 = v31;
  v35 = 0;
  v36 = v80;
LABEL_12:
  v37 = a1[3];
  v38 = a1[4];
  sub_1004BB5A4(a1, v37);
  v39 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v38 + 16))(0, v37, v38);
  v40 = sub_1001AE43C(v39);
  sub_1004E90B0((uint64_t)a1, (uint64_t)v91);
  if (v36 < 2)
  {
    v44 = 0;
  }
  else
  {
    v41 = v92;
    v42 = v93;
    sub_1004BB5A4(v91, v92);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(1, v41, v42);
    v44 = sub_1001AE3A8(v43);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v91);
  sub_1004E90B0((uint64_t)a1, (uint64_t)v88);
  v45 = v36 - 2;
  if (v36 < 2)
  {
    v49 = 0;
  }
  else
  {
    v46 = v89;
    v47 = v90;
    sub_1004BB5A4(v88, v89);
    v48 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v46, v47);
    v49 = sub_1001AE3A8(v48);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v88);
  v50 = a1[3];
  v51 = a1[4];
  sub_1004BB5A4(a1, v50);
  v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v79, v50, v51);
  result = sub_1001AE43C(v52);
  if (v78 < 1 || ((v40 | v77) & 1) != 0)
  {
    if (v39 != 32 || (v77 & 1) == 0 || (v44 & 1) != 0)
    {
      if ((_DWORD)result)
      {
        v55 = !v35;
        if (v52 != 32)
          v55 = 1;
        if (((v55 | v49) & 1) != 0)
          return 0;
        return 8;
      }
      if (!v35)
      {
        v63 = 0;
        goto LABEL_52;
      }
      if (v52 == 32)
        v62 = v49;
      else
        v62 = 1;
      if ((v62 & 1) == 0)
        return 8;
      return 0;
    }
    if ((_DWORD)result)
    {
      v71 = !v35;
      if (v52 != 32)
        v71 = 1;
      if (((v71 | v49) & 1) != 0)
        return 4;
    }
    else
    {
      if (!v35)
      {
        v63 = 4;
        goto LABEL_52;
      }
      if (v52 == 32)
        v72 = v49;
      else
        v72 = 1;
      if ((v72 & 1) != 0)
        return 4;
    }
    return 12;
  }
  if ((result & 1) != 0)
  {
    v54 = !v35;
    if (v52 != 32)
      v54 = 1;
    if (((v54 | v49) & 1) != 0)
      return 1;
    return 9;
  }
  if (v35)
  {
    if (v52 == 32)
      v61 = v49;
    else
      v61 = 1;
    if ((v61 & 1) != 0)
      return 1;
    return 9;
  }
  v63 = 1;
LABEL_52:
  v64 = *(_QWORD *)&v87[v75];
  if (!v64)
  {
LABEL_73:
    __break(1u);
    return result;
  }
  v65 = (uint64_t)v83;
  (*(void (**)(void))(*(_QWORD *)v64 + 760))();
  v66 = v82;
  sub_1004D29BC(v65 + *(int *)(v84 + 20), v82);
  sub_1004B84A4(v65, type metadata accessor for CRLWPShapeItemCRDTData);
  v67 = v85;
  v68 = v86;
  v74(v85, v66, v86);
  sub_1004B84A4(v66, type metadata accessor for CRLWPStorageCRDTData);
  v69 = (void *)CRAttributedString.attributedString.getter(v68);
  v34(v67, v68);
  v70 = objc_msgSend(v69, "length");

  if (v81 >= (uint64_t)v70)
    return v63;
  else
    return v63 | 2;
}

uint64_t sub_100559790(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1[3];
  v5 = a1[4];
  sub_1004BB5A4(a1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = result - 1;
  if (result >= 1)
  {
    v8 = result;
    result = sub_100558FE0(a1, a2);
    if (result)
    {
      v9 = result;
      if ((result & 1) != 0)
      {
        v12 = a1[3];
        v13 = a1[4];
        sub_1004CB9AC((uint64_t)a1, v12);
        result = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24))(0, 0, 32, 0xE100000000000000, 1, v12, v13);
      }
      else if ((result & 4) != 0)
      {
        v10 = a1[3];
        v11 = a1[4];
        sub_1004CB9AC((uint64_t)a1, v10);
        result = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(0, 1, 0, 0xE000000000000000, 1, v10, v11);
      }
      if ((v9 & 2) != 0)
      {
        v16 = a1[3];
        v17 = a1[4];
        sub_1004CB9AC((uint64_t)a1, v16);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24))(v8, v8, 32, 0xE100000000000000, 1, v16, v17);
      }
      else if ((v9 & 8) != 0)
      {
        v14 = a1[3];
        v15 = a1[4];
        sub_1004CB9AC((uint64_t)a1, v14);
        return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v7, v8, 0, 0xE000000000000000, 1, v14, v15);
      }
    }
  }
  return result;
}

id sub_1005598F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  char *v7;
  uint64_t *v12;
  void *v13;
  char *v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  objc_super v28;

  v12 = (uint64_t *)&v7[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_actionString];
  v13 = (void *)objc_opt_self(NSBundle);
  v14 = v7;
  v15 = objc_msgSend(v13, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, v17, 0);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  *v12 = v19;
  v12[1] = v21;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_shapeItem] = a1;
  v22 = &v14[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_pasteData];
  *(_QWORD *)v22 = a2;
  *((_QWORD *)v22 + 1) = a3;
  *((_QWORD *)v22 + 2) = a4;
  *((_QWORD *)v22 + 3) = a5;
  v22[32] = a6;
  v14[OBJC_IVAR____TtC8Freeform21CRLWPPasteTextCommand_isSmartPaste] = a7;
  v23 = a1;

  v28.receiver = v14;
  v28.super_class = (Class)type metadata accessor for CRLWPPasteTextCommand();
  return objc_msgSendSuper2(&v28, "init");
}

unint64_t sub_100559A64()
{
  unint64_t result;

  result = qword_1013EFBD0;
  if (!qword_1013EFBD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLTextAttributeScope, &type metadata for CRLTextAttributeScope);
    atomic_store(result, (unint64_t *)&qword_1013EFBD0);
  }
  return result;
}

uint64_t sub_100559AA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100559AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1007D3318(a1, a2, a3);
}

uint64_t sub_100559AC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100559AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100D3DC04(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_100559AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100559AE8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100559AF0()
{
  unint64_t result;

  result = qword_1013E22A0;
  if (!qword_1013E22A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1013E22A0);
  }
  return result;
}

void sub_100559B34()
{
  qword_1013E22A8 = 0x4082700000000000;
}

void sub_100559B48()
{
  qword_1013E22B0 = 0x4065400000000000;
}

void sub_100559B5C()
{
  qword_1013E22B8 = 0x4069800000000000;
}

id sub_100559B70(uint64_t a1)
{
  return sub_100559C30(10.0, a1, (SEL *)&selRef_estimatedDimension_, &qword_1013E22C0);
}

id sub_100559B88(uint64_t a1)
{
  return sub_100559C30(0.5, a1, (SEL *)&selRef_absoluteDimension_, &qword_1013E22C8);
}

void sub_100559BA0()
{
  qword_1013E22D0 = 0x4028000000000000;
}

void sub_100559BB0()
{
  qword_1013E22D8 = 0x4028000000000000;
}

void sub_100559BC0()
{
  qword_1013E22E0 = 0x4040000000000000;
}

void sub_100559BD0()
{
  qword_1013E22E8 = 0x4032000000000000;
}

void sub_100559BE0()
{
  qword_1013E22F0 = 0x4030000000000000;
}

void sub_100559BF0()
{
  qword_1013E22F8 = 0x4040000000000000;
}

void sub_100559C00()
{
  qword_1013E2300 = 0x4032000000000000;
}

id sub_100559C10(uint64_t a1)
{
  return sub_100559C30(102.0, a1, (SEL *)&selRef_absoluteDimension_, &qword_1013E2308);
}

id sub_100559C30(double a1, uint64_t a2, SEL *a3, _QWORD *a4)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSCollectionLayoutDimension), *a3, a1);
  *a4 = result;
  return result;
}

id sub_100559C80(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double trailing;
  double leading;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unsigned __int8 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *Strong;
  void *v26;
  id result;
  void *v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  void *v33;
  unsigned int v34;
  void *v35;
  void *v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  unsigned __int8 v44;
  _BOOL4 v45;
  int v46;
  BOOL v47;
  int v49;
  __n128 v50;
  char v51;
  uint64_t v52;
  _BOOL4 v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t inited;
  id v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  __n128 v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  double v89;
  unsigned int v90;
  void *v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  id v96;
  void *v97;
  id v98;
  id v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  Class isa;
  id v105;
  void *v106;
  id v107;
  id v108;
  void *v109;
  _BOOL4 v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  id v114;
  uint64_t *v115;
  double v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  Class v124;
  id v125;
  _BOOL4 v126;
  uint64_t v127;
  id v128;
  uint64_t *v129;
  uint64_t v130;
  id v131;
  double v132;
  char **v133;
  uint64_t *v134;
  uint64_t v135;
  id v136;
  double v137;
  double v138;
  double v139;
  char **v140;
  uint64_t *v141;
  char **v142;
  double v143;
  id v144;
  double v145;
  double v146;
  id v147;
  void *v148;
  void *v149;
  id v150;
  id v151;
  NSString v152;
  id v153;
  id v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  id v160;
  NSString v161;
  id v162;
  id v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  id v169;
  NSString v170;
  id v171;
  id v172;
  unint64_t v173;
  unint64_t v174;
  uint64_t v175;
  Class v176;
  id v177;
  _BOOL4 v178;
  int v179;
  int v180;
  id v181;
  uint64_t v182;
  int v183;
  _BOOL4 v184;
  void *v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  unsigned int v191;
  unint64_t v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  char v199[24];
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  char v203;
  char v204[24];
  char v205[32];

  v10 = sub_1004B804C((uint64_t *)&unk_1013FA380);
  v182 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v177 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10055E124(a2);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v14);
  v187 = v12;
  v188 = v10;
  v15 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v10);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_122;
  }
  v16 = *(_QWORD *)(v15 + 16);
  if (v16 <= a1)
  {
LABEL_122:
    __break(1u);
LABEL_123:
    swift_once(&qword_1013DD740, sub_100A02288);
    goto LABEL_46;
  }
  v181 = v13;
  v177 = a2;
  v17 = a5 + 16;
  v18 = v15 + 32 + 32 * a1;
  v19 = *(void **)v18;
  v193 = *(id *)(v18 + 8);
  v192 = *(_QWORD *)(v18 + 16);
  v20 = *(_BYTE *)(v18 + 24);
  v191 = v20;
  if (a1 + 1 >= v16)
  {
    v22 = 0;
    v186 = 0;
    v189 = 0;
    LODWORD(v10) = 254;
  }
  else
  {
    v21 = v15 + 32 + 32 * (a1 + 1);
    v22 = *(void **)v21;
    v23 = *(_QWORD *)(v21 + 16);
    LODWORD(v10) = *(unsigned __int8 *)(v21 + 24);
    v24 = *(void **)v21;
    v186 = *(id *)(v21 + 8);
    v189 = v23;
    sub_1004DD884(v24, v186, v23, v10);
    v20 = v191;
  }
  v190 = v19;
  a1 = v192;
  v12 = (uint64_t)v193;
  sub_1004DD884(v19, v193, v192, v20);
  swift_bridgeObjectRelease();
  swift_beginAccess(v17, v205, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v17);
  if (Strong)
  {
    v26 = Strong;
    result = objc_msgSend(Strong, "view");
    if (!result)
    {
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    v28 = result;
    objc_msgSend(result, "directionalLayoutMargins");
    leading = v29;
    trailing = v30;
    swift_unknownObjectRelease(v26);

  }
  else
  {
    leading = NSDirectionalEdgeInsetsZero.leading;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
  }
  swift_beginAccess(v17, v204, 0, 0);
  v31 = (void *)swift_unknownObjectWeakLoadStrong(v17);
  v185 = v22;
  if (!v31)
  {
LABEL_22:
    a5 = (uint64_t)v190;
    goto LABEL_24;
  }
  v32 = v31;
  result = objc_msgSend(v31, "view");
  if (!result)
    goto LABEL_125;
  v33 = result;
  v34 = objc_msgSend(result, "insetsLayoutMarginsFromSafeArea");
  swift_unknownObjectRelease(v32);

  if (v34)
  {
    swift_beginAccess(v17, &v194, 0, 0);
    v35 = (void *)swift_unknownObjectWeakLoadStrong(v17);
    if (v35)
    {
      v36 = v35;
      result = objc_msgSend(v35, "view");
      a1 = v192;
      v12 = (uint64_t)v193;
      if (result)
      {
        v37 = result;
        objc_msgSend(result, "safeAreaInsets");
        v39 = v38;
        v41 = v40;
        swift_unknownObjectRelease(v36);

        if (sub_1003A9250())
          v42 = v39;
        else
          v42 = v41;
        leading = leading - v42;
        if (sub_1003A9250())
          v43 = v41;
        else
          v43 = v39;
        trailing = trailing - v43;
        goto LABEL_22;
      }
LABEL_126:
      __break(1u);
      return result;
    }
  }
  a5 = (uint64_t)v190;
  a1 = v192;
  v12 = (uint64_t)v193;
LABEL_24:
  v44 = v191;
  if (v191 >> 6 == 2)
  {
    v180 = 0;
    v45 = a5 == 0;
    v46 = 1;
  }
  else if (v191 > 0x3F)
  {
    if (v191 >> 6 == 3 && (a1 | v12 | a5 || v191 != 192))
    {
      v45 = 0;
      v47 = a5 == 1 && (a1 | v12) == 0;
      v49 = v47 && v191 == 192;
      v180 = v49;
      v46 = v49 ^ 1;
    }
    else
    {
      v180 = 0;
      v45 = 0;
      v46 = 1;
    }
  }
  else
  {
    v180 = 0;
    v45 = 0;
    v46 = v12 != 0;
  }
  v179 = v46;
  v200 = a5;
  v201 = v12;
  v202 = a1;
  v203 = v191;
  sub_1004DD884((id)a5, (id)v12, a1, v191);
  dispatch thunk of UICollectionViewDiffableDataSource.index(for:)(&v200);
  v183 = v10;
  v184 = v45;
  if ((v51 & 1) == 0)
  {
    v200 = a5;
    v201 = v12;
    v202 = a1;
    v203 = v44;
    v52 = *(_QWORD *)(NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(&v200, v188, v50) + 16);
    swift_bridgeObjectRelease();
    sub_1004DD8B8((void *)a5, (id)v12, a1, v44);
    v53 = v52 != 0;
    if (v10 > 0xFD)
      goto LABEL_57;
    v54 = v185;
    v55 = v189;
    goto LABEL_48;
  }
  if (qword_1013DD740 != -1)
    goto LABEL_123;
LABEL_46:
  swift_beginAccess(&static OS_os_log.crlFolderUI, v199, 0, 0);
  v56 = (void *)static OS_os_log.crlFolderUI;
  v57 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v57, &v198);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v59 = v56;
  v60 = v191;
  sub_1009E30F0(a5, v12, a1, v191);
  v62 = v61;
  v64 = v63;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v65 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v65;
  *(_QWORD *)(inited + 32) = v62;
  *(_QWORD *)(inited + 40) = v64;
  v66 = static os_log_type_t.error.getter(v65);
  sub_100A06EBC((uint64_t)v59, &_mh_execute_header, v66, "snapshot contains section identifier (%@) that is unknown to data source", 72, 2, inited);
  swift_setDeallocating(inited);
  v67 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v67);

  sub_1004DD8B8((void *)a5, v193, v192, v60);
  v54 = v185;
  v55 = v189;
  v45 = v184;
  if (v10 > 0xFD)
    goto LABEL_57;
  v53 = 0;
LABEL_48:
  v68 = v186;
  v200 = (uint64_t)v54;
  v201 = (uint64_t)v186;
  v202 = v55;
  v203 = v10;
  sub_1004DD884(v54, v186, v55, v10);
  dispatch thunk of UICollectionViewDiffableDataSource.index(for:)(&v200);
  if ((v70 & 1) != 0)
  {
    v178 = v53;
    if (qword_1013DD740 != -1)
      swift_once(&qword_1013DD740, sub_100A02288);
    swift_beginAccess(&static OS_os_log.crlFolderUI, &v200, 0, 0);
    v75 = (void *)static OS_os_log.crlFolderUI;
    v76 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v77 = swift_initStackObject(v76, &v195);
    *(_OWORD *)(v77 + 16) = xmmword_100EF5E40;
    v78 = v75;
    v79 = v186;
    v80 = v189;
    v81 = v183;
    sub_1009E30F0((uint64_t)v54, (uint64_t)v186, v189, v183);
    v83 = v82;
    v85 = v84;
    *(_QWORD *)(v77 + 56) = &type metadata for String;
    v86 = sub_1004CFC2C();
    *(_QWORD *)(v77 + 64) = v86;
    *(_QWORD *)(v77 + 32) = v83;
    *(_QWORD *)(v77 + 40) = v85;
    v87 = static os_log_type_t.error.getter(v86);
    sub_100A06EBC((uint64_t)v78, &_mh_execute_header, v87, "snapshot contains section identifier (%@) that is unknown to data source", 72, 2, v77);
    sub_1004DD8A4(v54, v79, v80, v81);
    swift_setDeallocating(v77);
    v88 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v77 + 32, 1, v88);

    LOBYTE(v45) = v184;
LABEL_57:
    v178 = 0;
    if (!v45)
      goto LABEL_51;
LABEL_58:
    v73 = v181;
    if (qword_1013DC948 != -1)
      swift_once(&qword_1013DC948, sub_100559B5C);
    v74 = &qword_1013E22B8;
    goto LABEL_61;
  }
  v200 = (uint64_t)v54;
  v201 = (uint64_t)v68;
  v202 = v55;
  v203 = v10;
  v71 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(&v200, v188, v69);
  sub_1004DD8A4(v54, v68, v55, v10);
  v72 = *(_QWORD *)(v71 + 16);
  swift_bridgeObjectRelease();
  if (!v53)
    goto LABEL_57;
  v178 = v72 != 0;
  if (v45)
    goto LABEL_58;
LABEL_51:
  v73 = v181;
  if (qword_1013DC940 != -1)
    swift_once(&qword_1013DC940, sub_100559B48);
  v74 = &qword_1013E22B0;
LABEL_61:
  v89 = *(double *)v74;
  v197 = (unint64_t)_swiftEmptyArrayStorage;
  v90 = objc_msgSend(v73, "isAbsolute", v177);
  v91 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v92 = v73;
  v93 = objc_msgSend(v91, "estimatedDimension:", v89);
  v94 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v95 = objc_msgSend(v94, "sizeWithWidthDimension:heightDimension:", v92, v93);
  v181 = v92;

  v96 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v95);
  if (v90)
  {
    v97 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v98 = objc_msgSend(v91, "fractionalWidthDimension:", 1.0);
    v99 = objc_msgSend(v91, "estimatedDimension:", v89);
    v100 = objc_msgSend(v94, "sizeWithWidthDimension:heightDimension:", v98, v99);

    v101 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v102 = swift_allocObject(v101, 40, 7);
    *(_OWORD *)(v102 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v102 + 32) = v96;
    v196 = v102;
    specialized Array._endMutation()(v102);
    sub_1004B8930(0, &qword_1013E2390, NSCollectionLayoutItem_ptr);
    v103 = v96;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v105 = objc_msgSend(v97, "horizontalGroupWithLayoutSize:subitems:", v100, isa, swift_bridgeObjectRelease().n128_f64[0]);

    v106 = (void *)objc_opt_self(NSCollectionLayoutSpacing);
    if (qword_1013DC980 != -1)
      swift_once(&qword_1013DC980, sub_100559BE0);
    v107 = objc_msgSend(v106, "flexibleSpacing:", *(double *)&qword_1013E22F0);
    objc_msgSend(v105, "setInterItemSpacing:", v107);

    v108 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v105);
    v109 = v108;
    v110 = v184;
    if (v184)
    {
      v111 = qword_1013DC990;
      v112 = v108;
      v47 = v111 == -1;
      v113 = v188;
      v114 = v186;
      if (!v47)
        swift_once(&qword_1013DC990, sub_100559C00);
      v115 = &qword_1013E2300;
    }
    else
    {
      v130 = qword_1013DC988;
      v131 = v108;
      v47 = v130 == -1;
      v113 = v188;
      v114 = v186;
      if (!v47)
        swift_once(&qword_1013DC988, sub_100559BF0);
      v115 = &qword_1013E22F8;
    }
    objc_msgSend(v109, "setInterGroupSpacing:", *(double *)v115);
    if (qword_1013DC968 != -1)
      swift_once(&qword_1013DC968, sub_100559BB0);
    v132 = *(double *)&qword_1013E22D8;
    if (v110)
    {
      v133 = &selRef_p_didReceiveMemoryWarning_;
      if (qword_1013DC978 != -1)
      {
        swift_once(&qword_1013DC978, sub_100559BD0);
        v133 = &selRef_p_didReceiveMemoryWarning_;
      }
      v134 = &qword_1013E22E8;
    }
    else
    {
      v133 = &selRef_p_didReceiveMemoryWarning_;
      if (qword_1013DC970 != -1)
      {
        swift_once(&qword_1013DC970, sub_100559BC0);
        v133 = &selRef_p_didReceiveMemoryWarning_;
      }
      v134 = &qword_1013E22E0;
    }
    v142 = &selRef_p_didReceiveMemoryWarning_;
    objc_msgSend(v109, v133[397], v132, leading, *(double *)v134, trailing);

    v143 = 1.0;
  }
  else
  {
    if (qword_1013DC980 != -1)
      swift_once(&qword_1013DC980, sub_100559BE0);
    v116 = *(double *)&qword_1013E22F0 * 0.5;
    objc_msgSend(v96, "setContentInsets:", 0.0, *(double *)&qword_1013E22F0 * 0.5, 0.0, *(double *)&qword_1013E22F0 * 0.5);
    v117 = (void *)objc_opt_self(NSCollectionLayoutGroup);
    v118 = objc_msgSend(v91, "fractionalWidthDimension:", 1.0);
    v119 = objc_msgSend(v91, "estimatedDimension:", v89);
    v120 = objc_msgSend(v94, "sizeWithWidthDimension:heightDimension:", v118, v119);

    v121 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v122 = swift_allocObject(v121, 40, 7);
    *(_OWORD *)(v122 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v122 + 32) = v96;
    v196 = v122;
    specialized Array._endMutation()(v122);
    sub_1004B8930(0, &qword_1013E2390, NSCollectionLayoutItem_ptr);
    v123 = v96;
    v124 = Array._bridgeToObjectiveC()().super.isa;
    v105 = objc_msgSend(v117, "horizontalGroupWithLayoutSize:subitems:", v120, v124, swift_bridgeObjectRelease().n128_f64[0]);

    v125 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v105);
    v109 = v125;
    v126 = v184;
    if (v184)
    {
      v127 = qword_1013DC990;
      v128 = v125;
      v47 = v127 == -1;
      v113 = v188;
      v114 = v186;
      if (!v47)
        swift_once(&qword_1013DC990, sub_100559C00);
      v129 = &qword_1013E2300;
    }
    else
    {
      v135 = qword_1013DC988;
      v136 = v125;
      v47 = v135 == -1;
      v113 = v188;
      v114 = v186;
      if (!v47)
        swift_once(&qword_1013DC988, sub_100559BF0);
      v129 = &qword_1013E22F8;
    }
    objc_msgSend(v109, "setInterGroupSpacing:", *(double *)v129);
    if (qword_1013DC968 != -1)
      swift_once(&qword_1013DC968, sub_100559BB0);
    v137 = leading - v116;
    v138 = trailing - v116;
    v139 = *(double *)&qword_1013E22D8;
    if (v126)
    {
      v140 = &selRef_p_didReceiveMemoryWarning_;
      if (qword_1013DC978 != -1)
      {
        swift_once(&qword_1013DC978, sub_100559BD0);
        v140 = &selRef_p_didReceiveMemoryWarning_;
      }
      v141 = &qword_1013E22E8;
    }
    else
    {
      v140 = &selRef_p_didReceiveMemoryWarning_;
      if (qword_1013DC970 != -1)
      {
        swift_once(&qword_1013DC970, sub_100559BC0);
        v140 = &selRef_p_didReceiveMemoryWarning_;
      }
      v141 = &qword_1013E22E0;
    }
    objc_msgSend(v109, v140[397], v139, v137, *(double *)v141, v138);

    v144 = objc_msgSend(v177, "container");
    objc_msgSend(v144, "contentSize");
    v146 = v145;
    swift_unknownObjectRelease(v144);
    v143 = 1.0;
    if (v146 != 0.0)
      v143 = (v146 - (v137 + v138)) / v146;
    v142 = &selRef_p_didReceiveMemoryWarning_;
  }
  v147 = objc_msgSend(v91, v142[391], v143);

  if (v179)
  {
    if (qword_1013DC950 != -1)
      swift_once(&qword_1013DC950, sub_100559B70);
    v148 = (void *)qword_1013E22C0;
    v149 = (void *)objc_opt_self(NSCollectionLayoutSize);
    v150 = v148;
    v151 = objc_msgSend(v149, "sizeWithWidthDimension:heightDimension:", v147, v150);
    static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v152 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v153 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v151, v152, 1);

    v154 = v153;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v154);
    v156 = *(_QWORD *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v155 = *(_QWORD *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v156 >= v155 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v155 > 1, v156 + 1, 1);
    v157 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v156, v154);
    specialized Array._endMutation()(v157);

  }
  if (v178)
  {
    v158 = qword_1013DC958;
    v159 = v147;
    if (v158 != -1)
      swift_once(&qword_1013DC958, sub_100559B88);
    v160 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v159, qword_1013E22C8);

    v161 = String._bridgeToObjectiveC()();
    v162 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v160, v161, 5);

    objc_msgSend(v162, "setPinToVisibleBounds:", 0);
    v163 = v162;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v163);
    v165 = *(_QWORD *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v164 = *(_QWORD *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v165 >= v164 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v164 > 1, v165 + 1, 1);
    v166 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v165, v163);
    specialized Array._endMutation()(v166);

  }
  if (v180)
  {
    v167 = qword_1013DC998;
    v168 = v147;
    if (v167 != -1)
      swift_once(&qword_1013DC998, sub_100559C10);
    v169 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v168, qword_1013E2308);

    v170 = String._bridgeToObjectiveC()();
    v171 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v169, v170, 5);

    v172 = v171;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v172);
    v174 = *(_QWORD *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v173 = *(_QWORD *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v174 >= v173 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v173 > 1, v174 + 1, 1);
    v175 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v174, v172);
    specialized Array._endMutation()(v175);

  }
  sub_1004B8930(0, &qword_101407380, NSCollectionLayoutBoundarySupplementaryItem_ptr);
  v176 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v109, "setBoundarySupplementaryItems:", v176, swift_bridgeObjectRelease().n128_f64[0]);

  sub_1004DD8A4(v185, v114, v189, v183);
  sub_1004DD8B8(v190, v193, v192, v191);

  (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v187, v113);
  return v109;
}

id sub_10055AF50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)_s8GridItemC18GridViewControllerCMa()), "init");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10055AFBC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  char v7;
  uint64_t v8;
  _BOOL8 v9;
  char *v10;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (!v2)
  {
    __break(1u);
    return;
  }
  v4 = *(void **)(v2 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
  if (!a1)
  {
    if (!v4)
      return;
LABEL_7:
    v10 = (char *)sub_10055AF50();
    v8 = *(_QWORD *)&v10[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView];
    v9 = v8 != 0;
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView], "setHidden:", v8 == 0);
    objc_msgSend(*(id *)&v10[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint], "setActive:", v9);

    return;
  }
  if (!v4)
    goto LABEL_7;
  sub_1004B8930(0, &qword_1013E2388, SWAttributionView_ptr);
  v5 = v4;
  v6 = a1;
  v7 = static NSObject.== infix(_:_:)(v6, v5);

  if ((v7 & 1) == 0)
    goto LABEL_7;
}

char *sub_10055B0E4()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  _BYTE *v23;
  char *v24;
  unsigned __int8 *v25;
  int v26;
  uint64_t v27;
  char v28;
  char *v29;
  unsigned __int8 *v30;
  int v31;
  double v32;
  unsigned __int8 *v33;
  int v34;
  _BYTE *v35;
  int v36;
  char *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  char *result;
  char *v43;
  char *v44;
  id v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  id v54;
  char *v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  Class isa;

  v0 = (char *)objc_msgSend(objc_allocWithZone((Class)_s8GridItemC18GridViewControllerCMa()), "init");
  v1 = (char *)sub_10055AF50();
  v2 = &v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem];
  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem]);
  v4 = *((_QWORD *)v2 + 1);

  v5 = &v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem];
  *((_QWORD *)v5 + 1) = v4;
  swift_unknownObjectWeakAssign(v5, Strong);

  swift_unknownObjectRelease(Strong);
  v6 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView;
  v7 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView];
  v8 = (char *)sub_10055AF50();
  v9 = *(id *)&v8[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView];

  v10 = objc_msgSend(v9, "image");
  objc_msgSend(v7, "setImage:", v10);

  v11 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel];
  v12 = (char *)sub_10055AF50();
  v13 = *(id *)&v12[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel];

  v14 = objc_msgSend(v13, "text");
  objc_msgSend(v11, "setText:", v14);

  v15 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel];
  v16 = (char *)sub_10055AF50();
  v17 = *(id *)&v16[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel];

  v18 = objc_msgSend(v17, "text");
  objc_msgSend(v15, "setText:", v18);

  v19 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel];
  v20 = (char *)sub_10055AF50();
  v21 = *(id *)&v20[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel];

  v22 = objc_msgSend(v21, "text");
  objc_msgSend(v19, "setText:", v22);

  v23 = *(id *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton];
  v24 = (char *)sub_10055AF50();
  v25 = (unsigned __int8 *)*(id *)&v24[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton];

  v26 = v25[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite];
  v27 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite;
  v23[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = v26;
  objc_msgSend(*(id *)&v23[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView], "setHidden:", v26 ^ 1u);
  if (v23[v27] == 1)
    v28 = v23[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] ^ 1;
  else
    v28 = 1;
  objc_msgSend(*(id *)&v23[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView], "setHidden:", v28 & 1);

  v29 = v0;
  v30 = (unsigned __int8 *)sub_10055AF50();
  v31 = v30[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail];

  v29[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail] = v31;
  v32 = 1.0;
  if (v31)
    v32 = 0.5;
  objc_msgSend(*(id *)&v0[v6], "setAlpha:", v32);

  v33 = (unsigned __int8 *)sub_10055AF50();
  v34 = v33[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected];

  v29[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected] = v34;
  v35 = *(_BYTE **)&v29[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge];
  v36 = v35[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked];
  v35[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = v34;
  if (v34 != v36)
    objc_msgSend(v35, "setNeedsDisplay");
  v37 = v29;
  v38 = sub_10055AF50();
  v39 = objc_msgSend(v38, "traitCollection");

  v40 = *(void **)&v37[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection];
  *(_QWORD *)&v37[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection] = v39;
  v41 = v39;

  result = (char *)objc_msgSend(v37, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v43 = result;
  objc_msgSend(result, "setNeedsUpdateConstraints");

  v44 = (char *)sub_10055AF50();
  v45 = *(id *)&v44[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView];

  objc_msgSend(v45, "frame");
  v47 = v46;
  v49 = v48;

  objc_msgSend(v37, "setPreferredContentSize:", v47, v49);
  v50 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v51 = swift_allocObject(v50, 48, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100EF5560;
  result = (char *)objc_msgSend(v37, "view");
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v52 = result;
  v53 = objc_msgSend(result, "widthAnchor");

  v54 = objc_msgSend(v53, "constraintEqualToConstant:", v47);
  *(_QWORD *)(v51 + 32) = v54;
  result = (char *)objc_msgSend(v37, "view");
  if (result)
  {
    v55 = result;
    v56 = (void *)objc_opt_self(NSLayoutConstraint);
    v57 = objc_msgSend(v55, "heightAnchor");

    v58 = objc_msgSend(v57, "constraintEqualToConstant:", v49);
    *(_QWORD *)(v51 + 40) = v58;
    specialized Array._endMutation()(v59);
    sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v56, "activateConstraints:", isa, swift_bridgeObjectRelease(v51).n128_f64[0]);

    return v37;
  }
LABEL_14:
  __break(1u);
  return result;
}

void sub_10055B6D0()
{
  qword_10147E808 = 0x4026000000000000;
}

CALayerCornerCurve sub_10055B6E0()
{
  qword_10147E810 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

id sub_10055B6F8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.2);
  qword_10147E818 = (uint64_t)result;
  return result;
}

void sub_10055B734()
{
  qword_10147E820 = 0;
  *(_QWORD *)algn_10147E828 = 0;
}

void sub_10055B744()
{
  qword_10147E830 = 0x3FF0000000000000;
}

void sub_10055B754()
{
  qword_10147E838 = 0x4008000000000000;
}

void sub_10055B764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  qword_10147E840 = sub_100063854(8.0);
  qword_10147E848 = v0;
  qword_10147E850 = v1;
  qword_10147E858 = v2;
}

id sub_10055B798(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_whiteColor, &qword_10147E860);
}

void sub_10055B7AC()
{
  qword_10147E868 = 0x4065200000000000;
}

void sub_10055B7C0()
{
  qword_10147E870 = 0x4024000000000000;
}

void sub_10055B7D0()
{
  qword_10147E878 = 0x401C000000000000;
}

void sub_10055B7E0()
{
  qword_10147E880 = 0x4024000000000000;
}

void sub_10055B7F0()
{
  qword_10147E888 = 0x401C000000000000;
}

void sub_10055B800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  qword_10147E890 = sub_100063854(7.0);
  qword_10147E898 = v0;
  qword_10147E8A0 = v1;
  qword_10147E8A8 = v2;
}

id sub_10055B834(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_systemGroupedBackgroundColor, &qword_10147E8B0);
}

id sub_10055B848(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_secondarySystemGroupedBackgroundColor, &qword_10147E8B8);
}

UIFontTextStyle sub_10055B85C()
{
  qword_10147E8C0 = (uint64_t)UIFontTextStyleFootnote;
  return UIFontTextStyleFootnote;
}

UIFontWeight sub_10055B874()
{
  UIFontWeight result;

  result = UIFontWeightBold;
  qword_10147E8C8 = *(_QWORD *)&UIFontWeightBold;
  return result;
}

id sub_10055B88C(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_labelColor, &qword_10147E8D0);
}

UIFontTextStyle sub_10055B8A0()
{
  qword_10147E8D8 = (uint64_t)UIFontTextStyleCaption2;
  return UIFontTextStyleCaption2;
}

UIFontWeight sub_10055B8B8()
{
  UIFontWeight result;

  result = UIFontWeightRegular;
  qword_10147E8E0 = *(_QWORD *)&UIFontWeightRegular;
  return result;
}

id sub_10055B8D0(uint64_t a1)
{
  return sub_1004BEA38(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10147E8E8);
}

void sub_10055B8E4()
{
  qword_10147E8F0 = 0x4024000000000000;
}

void sub_10055B9CC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _BOOL8 v6;
  id v7;

  v3 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint;
  v4 = *(void **)(v1
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint);
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint) = a1;
  v7 = a1;
  if (a1)
  {
    v5 = *(_QWORD *)(v1
                   + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
    v6 = v5 != 0;
    objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView), "setHidden:", v5 == 0);
    objc_msgSend(*(id *)(v1 + v3), "setActive:", v6);
  }
  else if (v4)
  {
    objc_msgSend(v4, "setActive:", 0);
  }

}

void sub_10055BA80()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView), "addSubview:", v1);
  sub_100B2F808();
}

void sub_10055BAD8()
{
  uint64_t v0;

  sub_10055BAE0(v0);
}

void sub_10055BAE0(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  double v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  double v27;
  void *v28;
  id v29;
  id v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;

  v2 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView), "layer");
  v3 = objc_msgSend(*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView), "layer");
  v4 = *(void **)(a1
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView);
  v5 = objc_msgSend(v4, "layer");
  v6 = objc_msgSend(*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView), "layer");
  v38 = objc_msgSend(*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView), "layer");
  if (qword_1013DC9A0 != -1)
    swift_once(&qword_1013DC9A0, sub_10055B6D0);
  objc_msgSend(v3, "setCornerRadius:", *(double *)&qword_10147E808);
  if (qword_1013DC9A8 != -1)
    swift_once(&qword_1013DC9A8, sub_10055B6E0);
  objc_msgSend(v3, "setCornerCurve:", qword_10147E810);
  if (qword_1013DC9B0 != -1)
    swift_once(&qword_1013DC9B0, sub_10055B6F8);
  v7 = objc_msgSend((id)qword_10147E818, "CGColor");
  objc_msgSend(v2, "setShadowColor:", v7);

  if (qword_1013DC9B8 != -1)
    swift_once(&qword_1013DC9B8, sub_10055B734);
  objc_msgSend(v2, "setShadowOffset:", *(double *)&qword_10147E820, *(double *)algn_10147E828);
  if (qword_1013DC9C0 != -1)
    swift_once(&qword_1013DC9C0, sub_10055B744);
  HIDWORD(v8) = HIDWORD(qword_10147E830);
  *(float *)&v8 = *(double *)&qword_10147E830;
  objc_msgSend(v2, "setShadowOpacity:", v8);
  if (qword_1013DC9C8 != -1)
    swift_once(&qword_1013DC9C8, sub_10055B754);
  objc_msgSend(v2, "setShadowRadius:", *(double *)&qword_10147E838);
  objc_msgSend(v3, "cornerRadius");
  objc_msgSend(v2, "setCornerRadius:");
  v9 = objc_msgSend(v3, "cornerCurve");
  objc_msgSend(v2, "setCornerCurve:", v9);

  if (qword_1013DC9D8 != -1)
    swift_once(&qword_1013DC9D8, sub_10055B798);
  v10 = objc_msgSend((id)qword_10147E860, "CGColor");
  v36 = v6;
  objc_msgSend(v6, "setBackgroundColor:", v10);

  v11 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v12 = objc_msgSend(v11, "traitCollection");

  LODWORD(v11) = objc_msgSend(v12, "crl_isUserInterfaceStyleDark");
  if ((_DWORD)v11)
  {
    if (qword_1013DCA18 != -1)
      swift_once(&qword_1013DCA18, sub_10055B848);
    v13 = &qword_10147E8B8;
  }
  else
  {
    if (qword_1013DCA10 != -1)
      swift_once(&qword_1013DCA10, sub_10055B834);
    v13 = &qword_10147E8B0;
  }
  v14 = objc_msgSend((id)*v13, "CGColor");
  objc_msgSend(v38, "setBackgroundColor:", v14);

  objc_msgSend(v4, "setContentMode:", 1);
  if (qword_1013DCAD0 != -1)
    swift_once(&qword_1013DCAD0, sub_10058E1DC);
  v15 = objc_msgSend((id)qword_10147EA40, "CGColor");
  objc_msgSend(v5, "setBackgroundColor:", v15);

  v16 = *(void **)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel);
  if (qword_1013DCA20 != -1)
    swift_once(&qword_1013DCA20, sub_10055B85C);
  v37 = v5;
  v17 = qword_10147E8C0;
  if (qword_1013DCA28 != -1)
    swift_once(&qword_1013DCA28, sub_10055B874);
  v18 = (void *)objc_opt_self(UIFontDescriptor);
  v19 = objc_msgSend(v18, "preferredFontDescriptorWithTextStyle:", v17);
  v20 = (void *)objc_opt_self(UIFont);
  objc_msgSend(v19, "pointSize");
  v21 = objc_msgSend(v20, "systemFontOfSize:weight:");

  objc_msgSend(v16, "setFont:", v21);
  if (qword_1013DCA30 != -1)
    swift_once(&qword_1013DCA30, sub_10055B88C);
  objc_msgSend(v16, "setTextColor:", qword_10147E8D0);
  LODWORD(v22) = 1132068864;
  objc_msgSend(v16, "setContentCompressionResistancePriority:forAxis:", 0, v22);
  v23 = *(void **)(a1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  if (qword_1013DCA38 != -1)
    swift_once(&qword_1013DCA38, sub_10055B8A0);
  v24 = qword_10147E8D8;
  if (qword_1013DCA40 != -1)
    swift_once(&qword_1013DCA40, sub_10055B8B8);
  v25 = objc_msgSend(v18, "preferredFontDescriptorWithTextStyle:", v24);
  objc_msgSend(v25, "pointSize");
  v26 = objc_msgSend(v20, "systemFontOfSize:weight:");

  objc_msgSend(v23, "setFont:", v26);
  if (qword_1013DCA48 != -1)
    swift_once(&qword_1013DCA48, sub_10055B8D0);
  objc_msgSend(v23, "setTextColor:", qword_10147E8E8);
  LODWORD(v27) = 1132068864;
  objc_msgSend(v23, "setContentCompressionResistancePriority:forAxis:", 0, v27);
  v28 = *(void **)(a1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  v29 = objc_msgSend(v18, "preferredFontDescriptorWithTextStyle:", qword_10147E8D8);
  objc_msgSend(v29, "pointSize");
  v30 = objc_msgSend(v20, "systemFontOfSize:weight:");

  objc_msgSend(v28, "setFont:", v30);
  objc_msgSend(v28, "setTextColor:", qword_10147E8E8);
  LODWORD(v31) = 1132068864;
  objc_msgSend(v28, "setContentCompressionResistancePriority:forAxis:", 0, v31);
  v32 = *(_QWORD *)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
  v33 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow;
  v34 = 1;
  *(_BYTE *)(v32
           + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow) = 1;
  v35 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite;
  objc_msgSend(*(id *)(v32+ OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView), "setHidden:", (*(_BYTE *)(v32+ OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite) & 1) == 0);
  if (*(_BYTE *)(v32 + v35) == 1)
    v34 = *(_BYTE *)(v32 + v33) ^ 1;
  objc_msgSend(*(id *)(v32+ OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView), "setHidden:", v34 & 1);

}

void sub_10055C368()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t inited;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  double v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  id v85;
  id v86;
  void *v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  double v120;
  void *v121;
  void *v122;
  id v123;
  id v124;
  id v125;
  char **v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  id v140;
  void *v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  void *v157;
  id v158;
  id v159;
  void *v160;
  char **v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  id v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  void *v187;
  uint64_t v188;
  Class isa;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  id v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char v201[112];
  uint64_t v202;
  char v203[124];
  int v204;
  uint64_t v205;

  v1 = v0;
  v205 = (uint64_t)_swiftEmptyArrayStorage;
  type metadata accessor for UILayoutPriority(0);
  v3 = v2;
  LODWORD(v200) = 1148846080;
  v204 = 1065353216;
  v4 = sub_1004DDC04();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v202, &v200, &v204, v3, v4);
  v5 = v202;
  v198 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  inited = swift_initStackObject(v198, v203);
  *(_OWORD *)(inited + 16) = xmmword_100EF8610;
  v7 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView];
  v8 = objc_msgSend(v7, "topAnchor");
  v9 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView];
  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(inited + 32) = v11;
  v12 = objc_msgSend(v7, "leadingAnchor");
  v13 = objc_msgSend(v9, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(inited + 40) = v14;
  v15 = objc_msgSend(v7, "trailingAnchor");
  v16 = objc_msgSend(v9, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(inited + 48) = v17;
  v18 = objc_msgSend(v7, "bottomAnchor");
  v199 = v1;
  v19 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView];
  v20 = objc_msgSend(v19, "topAnchor");
  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(inited + 56) = v21;
  v22 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView];
  v23 = objc_msgSend(v22, "topAnchor");
  v24 = objc_msgSend(v7, "topAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(inited + 64) = v25;
  v26 = objc_msgSend(v22, "leadingAnchor");
  v27 = objc_msgSend(v7, "leadingAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(inited + 72) = v28;
  v29 = objc_msgSend(v22, "trailingAnchor");
  v30 = objc_msgSend(v7, "trailingAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(inited + 80) = v31;
  v32 = objc_msgSend(v22, "bottomAnchor");
  v33 = objc_msgSend(v7, "bottomAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(inited + 88) = v34;
  v35 = objc_msgSend(v19, "leadingAnchor");
  v36 = objc_msgSend(v9, "leadingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(inited + 96) = v37;
  v38 = objc_msgSend(v19, "trailingAnchor");
  v39 = objc_msgSend(v9, "trailingAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(inited + 104) = v40;
  v41 = objc_msgSend(v19, "bottomAnchor");
  v197 = v9;
  v42 = objc_msgSend(v9, "bottomAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(inited + 112) = v43;
  v202 = inited;
  specialized Array._endMutation()(v44);
  sub_10061EAE0(v202);
  v45 = swift_allocObject(v198, 64, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100EF7310;
  v46 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView];
  v47 = objc_msgSend(v46, "topAnchor");
  v48 = objc_msgSend(v22, "topAnchor");
  if (qword_1013DC9D0 != -1)
    swift_once(&qword_1013DC9D0, sub_10055B764);
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, *(double *)&qword_10147E840);

  *(_QWORD *)(v45 + 32) = v49;
  v50 = objc_msgSend(v46, "leadingAnchor");
  v51 = objc_msgSend(v22, "leadingAnchor");
  v52 = qword_10147E848;
  v53 = qword_10147E858;
  if (sub_1003A9250())
    v54 = *(double *)&v52;
  else
    v54 = *(double *)&v53;
  v55 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, v54);

  *(_QWORD *)(v45 + 40) = v55;
  v56 = objc_msgSend(v22, "trailingAnchor");
  v57 = objc_msgSend(v46, "trailingAnchor");
  v58 = qword_10147E848;
  v59 = qword_10147E858;
  if (sub_1003A9250())
    v60 = *(double *)&v59;
  else
    v60 = *(double *)&v58;
  v61 = objc_msgSend(v56, "constraintEqualToAnchor:constant:", v57, v60);

  *(_QWORD *)(v45 + 48) = v61;
  v62 = objc_msgSend(v22, "bottomAnchor");
  v63 = objc_msgSend(v46, "bottomAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:constant:", v63, *(double *)&qword_10147E850);

  *(_QWORD *)(v45 + 56) = v64;
  v202 = v45;
  specialized Array._endMutation()(v65);
  v66 = objc_msgSend(v46, "widthAnchor");
  v67 = objc_msgSend(v46, "heightAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:multiplier:", v67, 1.77777778);

  LODWORD(v69) = v5;
  objc_msgSend(v68, "setPriority:", v69);
  v70 = v68;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
  v72 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v71 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v72 >= v71 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
  v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
  specialized Array._endMutation()(v73);
  swift_bridgeObjectRetain(v202);
  sub_10061EAE0(v74);
  v75 = swift_initStackObject(v198, v201);
  *(_OWORD *)(v75 + 16) = xmmword_100EF8620;
  v76 = *(void **)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel];
  v77 = objc_msgSend(*(id *)&v199[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel], "topAnchor");
  v78 = objc_msgSend(v19, "topAnchor");
  if (qword_1013DCA08 != -1)
    swift_once(&qword_1013DCA08, sub_10055B800);
  v79 = objc_msgSend(v77, "constraintEqualToAnchor:constant:", v78, *(double *)&qword_10147E890, v70);

  *(_QWORD *)(v75 + 32) = v79;
  v80 = objc_msgSend(v76, "leadingAnchor");
  v81 = objc_msgSend(v19, "leadingAnchor");
  v82 = qword_10147E898;
  v83 = qword_10147E8A8;
  if (sub_1003A9250())
    v84 = *(double *)&v82;
  else
    v84 = *(double *)&v83;
  v85 = objc_msgSend(v80, "constraintEqualToAnchor:constant:", v81, v84);

  *(_QWORD *)(v75 + 40) = v85;
  v86 = objc_msgSend(v76, "trailingAnchor");
  v87 = *(void **)&v199[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel];
  v88 = objc_msgSend(v87, "trailingAnchor");
  v89 = objc_msgSend(v86, "constraintLessThanOrEqualToAnchor:", v88);

  *(_QWORD *)(v75 + 48) = v89;
  v90 = objc_msgSend(v76, "bottomAnchor");
  v91 = objc_msgSend(v87, "topAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  *(_QWORD *)(v75 + 56) = v92;
  v93 = objc_msgSend(v87, "leadingAnchor");
  v94 = objc_msgSend(v76, "leadingAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);

  *(_QWORD *)(v75 + 64) = v95;
  v96 = objc_msgSend(v19, "trailingAnchor");
  v97 = objc_msgSend(v87, "trailingAnchor");
  v98 = qword_10147E898;
  v99 = qword_10147E8A8;
  if (sub_1003A9250())
    v100 = *(double *)&v99;
  else
    v100 = *(double *)&v98;
  v101 = objc_msgSend(v96, "constraintEqualToAnchor:constant:", v97, v100);

  *(_QWORD *)(v75 + 72) = v101;
  v102 = objc_msgSend(v87, "bottomAnchor");
  v103 = *(void **)&v199[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel];
  v104 = objc_msgSend(v103, "topAnchor");
  v105 = objc_msgSend(v102, "constraintEqualToAnchor:", v104);

  *(_QWORD *)(v75 + 80) = v105;
  v106 = objc_msgSend(v103, "trailingAnchor");
  v107 = objc_msgSend(v87, "trailingAnchor");
  v108 = objc_msgSend(v106, "constraintEqualToAnchor:", v107);

  *(_QWORD *)(v75 + 88) = v108;
  v109 = objc_msgSend(v103, "leadingAnchor");
  v110 = objc_msgSend(v76, "leadingAnchor");
  v111 = objc_msgSend(v109, "constraintEqualToAnchor:", v110);

  *(_QWORD *)(v75 + 96) = v111;
  v112 = objc_msgSend(v19, "bottomAnchor");
  v113 = objc_msgSend(v103, "bottomAnchor");
  v114 = objc_msgSend(v112, "constraintEqualToAnchor:constant:", v113, *(double *)&qword_10147E8A0);

  *(_QWORD *)(v75 + 104) = v114;
  v200 = v75;
  specialized Array._endMutation()(v115);
  v116 = v200;
  if ((unint64_t)v200 >> 62)
  {
    if (v200 < 0)
      v190 = v200;
    else
      v190 = v200 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v200);
    v117 = _CocoaArrayWrapper.endIndex.getter(v190);
    swift_bridgeObjectRelease(v116);
  }
  else
  {
    v117 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v117)
  {
    if (v117 < 1)
    {
      __break(1u);
LABEL_84:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain(v116);
    v118 = 0;
    do
    {
      if ((v116 & 0xC000000000000001) != 0)
        v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v118, v116);
      else
        v119 = *(id *)(v116 + 8 * v118 + 32);
      v121 = v119;
      ++v118;
      LODWORD(v120) = v5;
      objc_msgSend(v119, "setPriority:", v120);

    }
    while (v117 != v118);
    swift_bridgeObjectRelease(v116);
  }
  sub_10061EAE0(v116);
  v122 = *(void **)&v199[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton];
  v123 = objc_msgSend(v122, "leadingAnchor");
  v124 = objc_msgSend(v22, "leadingAnchor");
  if (qword_1013DC9E8 != -1)
    swift_once(&qword_1013DC9E8, sub_10055B7C0);
  v125 = objc_msgSend(v123, "constraintEqualToAnchor:constant:", v124, *(double *)&qword_10147E870);

  v126 = &selRef_alignToOrigin;
  v127 = objc_msgSend(v22, "bottomAnchor");
  v128 = objc_msgSend(v122, "bottomAnchor");
  if (qword_1013DC9F0 != -1)
    swift_once(&qword_1013DC9F0, sub_10055B7D0);
  v129 = objc_msgSend(v127, "constraintEqualToAnchor:constant:", v128, *(double *)&qword_10147E878);

  v130 = v205;
  if ((unint64_t)v205 >> 62)
  {
    if (v205 < 0)
      v191 = v205;
    else
      v191 = v205 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v205);
    v192 = v191;
    v126 = &selRef_alignToOrigin;
    v132 = _CocoaArrayWrapper.endIndex.getter(v192);
    swift_bridgeObjectRelease(v130);
    v133 = v132 + 2;
    if (!__OFADD__(v132, 2))
    {
LABEL_35:
      v134 = sub_100DCD070(v133, 1);
      specialized Array._endMutation()(v134);
      v125 = v125;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v125);
      v132 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v131 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v132 < v131 >> 1)
        goto LABEL_36;
      goto LABEL_68;
    }
  }
  else
  {
    v131 = v205 & 0xFFFFFFFFFFFFF8;
    v132 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFF8) + 0x10);
    v133 = v132 + 2;
    if (!__OFADD__(v132, 2))
      goto LABEL_35;
  }
  __break(1u);
LABEL_68:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v131 > 1, v132 + 1, 1);
LABEL_36:
  v135 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v132, v125);
  specialized Array._endMutation()(v135);
  v136 = v129;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v136);
  v138 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v137 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v138 >= v137 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v137 > 1, v138 + 1, 1);
  v139 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v138, v136);
  specialized Array._endMutation()(v139);

  v140 = objc_msgSend(v22, "trailingAnchor");
  v141 = *(void **)&v199[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge];
  v142 = objc_msgSend(v141, "trailingAnchor");
  if (qword_1013DC9F8 != -1)
    swift_once(&qword_1013DC9F8, sub_10055B7E0);
  v143 = objc_msgSend(v140, "constraintEqualToAnchor:constant:", v142, *(double *)&qword_10147E880);

  v144 = objc_msgSend(v22, v126[438]);
  v145 = objc_msgSend(v141, v126[438]);
  if (qword_1013DCA00 != -1)
    swift_once(&qword_1013DCA00, sub_10055B7F0);
  v146 = objc_msgSend(v144, "constraintEqualToAnchor:constant:", v145, *(double *)&qword_10147E888);

  v147 = v205;
  if ((unint64_t)v205 >> 62)
  {
    if (v205 < 0)
      v193 = v205;
    else
      v193 = v205 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v205);
    v194 = v193;
    v126 = &selRef_alignToOrigin;
    v149 = _CocoaArrayWrapper.endIndex.getter(v194);
    swift_bridgeObjectRelease(v147);
    v150 = v149 + 2;
    if (!__OFADD__(v149, 2))
    {
LABEL_44:
      v151 = sub_100DCD070(v150, 1);
      specialized Array._endMutation()(v151);
      v143 = v143;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v143);
      v149 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v148 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v149 < v148 >> 1)
        goto LABEL_45;
      goto LABEL_75;
    }
  }
  else
  {
    v148 = v205 & 0xFFFFFFFFFFFFF8;
    v149 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFF8) + 0x10);
    v150 = v149 + 2;
    if (!__OFADD__(v149, 2))
      goto LABEL_44;
  }
  __break(1u);
LABEL_75:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v148 > 1, v149 + 1, 1);
LABEL_45:
  v152 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v149, v143);
  specialized Array._endMutation()(v152);
  v153 = v146;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v153);
  v155 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v154 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v155 >= v154 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v154 > 1, v155 + 1, 1);
  v156 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v155, v153);
  specialized Array._endMutation()(v156);

  v157 = *(void **)&v199[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView];
  v158 = objc_msgSend(v157, v126[438]);
  v159 = objc_msgSend(v199, "view");
  if (!v159)
    goto LABEL_84;
  v160 = v159;
  v161 = v126;
  v162 = objc_msgSend(v159, v126[438], swift_bridgeObjectRelease(v202).n128_f64[0]);

  v163 = objc_msgSend(v158, "constraintEqualToAnchor:", v162);
  sub_10055B9CC(v163);
  v164 = objc_msgSend(v157, "topAnchor");
  v165 = objc_msgSend(v197, v161[438]);
  if (qword_1013DCA50 != -1)
    swift_once(&qword_1013DCA50, sub_10055B8E4);
  v166 = objc_msgSend(v164, "constraintEqualToAnchor:constant:", v165, *(double *)&qword_10147E8F0);

  v167 = objc_msgSend(v157, "leadingAnchor");
  v168 = objc_msgSend(v197, "leadingAnchor");
  v169 = objc_msgSend(v167, "constraintEqualToAnchor:", v168);

  v170 = objc_msgSend(v157, "trailingAnchor");
  v171 = objc_msgSend(v197, "trailingAnchor");
  v172 = objc_msgSend(v170, "constraintEqualToAnchor:", v171);

  v173 = v205;
  if (!((unint64_t)v205 >> 62))
  {
    v174 = v205 & 0xFFFFFFFFFFFFF8;
    v175 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFF8) + 0x10);
    v176 = v175 + 3;
    if (!__OFADD__(v175, 3))
      goto LABEL_52;
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (v205 < 0)
    v195 = v205;
  else
    v195 = v205 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v205);
  v175 = _CocoaArrayWrapper.endIndex.getter(v195);
  swift_bridgeObjectRelease(v173);
  v176 = v175 + 3;
  if (__OFADD__(v175, 3))
    goto LABEL_81;
LABEL_52:
  v177 = sub_100DCD070(v176, 1);
  specialized Array._endMutation()(v177);
  v166 = v166;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v166);
  v175 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v174 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v175 >= v174 >> 1)
LABEL_82:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v174 > 1, v175 + 1, 1);
  v178 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v175, v166);
  specialized Array._endMutation()(v178);
  v179 = v169;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v179);
  v181 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v180 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v181 >= v180 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v180 > 1, v181 + 1, 1);
  v182 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v181, v179);
  specialized Array._endMutation()(v182);
  v183 = v172;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v183);
  v185 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v184 = *(_QWORD *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v185 >= v184 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v184 > 1, v185 + 1, 1);
  v186 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v185, v183);
  specialized Array._endMutation()(v186);

  v187 = (void *)objc_opt_self(NSLayoutConstraint);
  v188 = v205;
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v187, "activateConstraints:", isa, swift_bridgeObjectRelease(v188).n128_f64[0]);

}

void sub_10055D898()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  id v30;

  v1 = v0;
  sub_10055BAE0(v0);
  sub_100B33C80();
  sub_100B32AB8();
  sub_100B3057C();
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraLarge);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  if (v4 == v7 && v6 == v8)
    goto LABEL_8;
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
  {
LABEL_9:

    v17 = 2;
    goto LABEL_10;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v6 = v13;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v16 = v14;
  if (v12 == v15 && v6 == v14)
  {
LABEL_8:
    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_9;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v6, v15, v14, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v16);
  if ((v22 & 1) != 0)
    goto LABEL_9;
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryAccessibilityExtraExtraExtraLarge);
  v25 = v24;
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v28 = v26;
  if (v23 == v27 && v25 == v26)
  {

    v17 = 2;
    swift_bridgeObjectRelease_n(v25, 2);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v27, v26, 0);

    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v28);
    if ((v29 & 1) != 0)
      v17 = 2;
    else
      v17 = 1;
  }
LABEL_10:
  v18 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  v19 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  v20 = objc_retain(*(id *)(v1
                          + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel));
  v30 = v18;
  v21 = v19;
  objc_msgSend(v20, "setNumberOfLines:", v17);
  objc_msgSend(v30, "setNumberOfLines:", v17);
  objc_msgSend(v21, "setNumberOfLines:", v17);

}

uint64_t sub_10055DB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  if (!Strong
    || (v3 = Strong,
        v4 = *(_QWORD *)(v1 + 8),
        ObjectType = swift_getObjectType(Strong),
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 144))(ObjectType, v4),
        v8 = v7,
        swift_unknownObjectRelease(v3),
        !v8))
  {
    swift_bridgeObjectRelease(0);
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease(v8);
    v6 = qword_1014060E8;
    swift_bridgeObjectRetain(unk_1014060F0);
  }
  return v6;
}

uint64_t sub_10055DBE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  if (!Strong
    || (v3 = Strong,
        v4 = *(_QWORD *)(v1 + 8),
        ObjectType = swift_getObjectType(Strong),
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 168))(ObjectType, v4),
        v8 = v7,
        swift_unknownObjectRelease(v3),
        !v8))
  {
    swift_bridgeObjectRelease(0);
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease(v8);
    v6 = qword_1014060E8;
    swift_bridgeObjectRetain(unk_1014060F0);
  }
  return v6;
}

uint64_t sub_10055DC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem);
  if (!Strong
    || (v3 = Strong,
        v4 = *(_QWORD *)(v1 + 8),
        ObjectType = swift_getObjectType(Strong),
        v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 216))(ObjectType, v4),
        v8 = v7,
        swift_unknownObjectRelease(v3),
        !v8))
  {
    swift_bridgeObjectRelease(0);
    v6 = 0;
    v8 = 0xE000000000000000;
  }
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    swift_bridgeObjectRelease(v8);
    v6 = qword_1014060E8;
    swift_bridgeObjectRetain(unk_1014060F0);
  }
  return v6;
}

_BYTE *sub_10055DD4C(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *result;
  int v5;

  *(_BYTE *)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected) = a1;
  v3 = a1 & 1;
  result = *(_BYTE **)(v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge);
  v5 = result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked];
  result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = a1;
  if (v5 != v3)
    return objc_msgSend(result, "setNeedsDisplay");
  return result;
}

id sub_10055DE38(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView;
  v4 = objc_allocWithZone((Class)UIView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)_s8GridItemC18GridViewControllerCMa();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

void sub_10055DF0C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_labelBackdropView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController_attributionViewBottomConstraint));
}

id sub_10055DF38(uint64_t a1)
{
  return sub_1004DFAE4(a1, _s8GridItemC18GridViewControllerCMa);
}

void sub_10055E04C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8GridItem____lazy_storage___gridViewController));
}

id sub_10055E05C()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))_s8GridItemCMa);
}

uint64_t sub_10055E07C()
{
  return _s8GridItemCMa(0);
}

uint64_t _s8GridItemCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E2340;
  if (!qword_1013E2340)
    return swift_getSingletonMetadata(a1, &_s8GridItemCMn);
  return result;
}

uint64_t sub_10055E0C0(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 600);
}

uint64_t _s8GridItemC18GridViewControllerCMa()
{
  return objc_opt_self(_TtCCC8Freeform30CRLiOSFolderGridViewController8GridItem18GridViewController);
}

id sub_10055E124(void *a1)
{
  id v2;
  id v3;
  double v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  const char *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  double v31;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(a1, "container");
  objc_msgSend(v3, "effectiveContentSize");
  v31 = v4;
  if (qword_1013DC9D0 != -1)
    swift_once(&qword_1013DC9D0, sub_10055B764);
  v5 = *(double *)&qword_10147E848;
  v6 = qword_10147E858;
  if (!sub_1003A9250())
    v5 = *(double *)&v6;
  if (qword_1013DC9E0 != -1)
    swift_once(&qword_1013DC9E0, sub_10055B7AC);
  v7 = *(double *)&qword_10147E868;
  v8 = qword_10147E848;
  v9 = qword_10147E858;
  if (sub_1003A9250())
    v10 = *(double *)&v9;
  else
    v10 = *(double *)&v8;
  if (qword_1013DC980 != -1)
    swift_once(&qword_1013DC980, sub_100559BE0);
  v11 = *(double *)&qword_1013E22F0;
  v12 = qword_10147E848;
  v13 = qword_10147E858;
  if (sub_1003A9250())
    v14 = *(double *)&v12;
  else
    v14 = *(double *)&v13;
  v15 = *(double *)&qword_10147E868;
  if (sub_1003A9250())
    v16 = *(double *)&v13;
  else
    v16 = *(double *)&v12;
  if (v5 + v7 + v10 + v11 + v14 + v15 + v16 > v31)
  {
    v17 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v18 = "fractionalWidthDimension:";
    goto LABEL_20;
  }
  if ((objc_msgSend(v2, "crl_isCompactWidth") & 1) == 0
    && !objc_msgSend(v2, "crl_isCompactHeight"))
  {
    if (sub_1003A9250())
      v27 = *(double *)&v12;
    else
      v27 = *(double *)&v13;
    if (sub_1003A9250())
      v28 = *(double *)&v13;
    else
      v28 = *(double *)&v12;
    v17 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v19 = v15 + v27 + v28;
    v18 = "absoluteDimension:";
    goto LABEL_36;
  }
  objc_msgSend(v3, "effectiveContentSize");
  v21 = v20;
  objc_msgSend(v3, "effectiveContentSize");
  if (v22 >= v21)
  {
    objc_msgSend(v3, "effectiveContentSize");
    v25 = v24;
    if (qword_1013DC938 != -1)
      swift_once(&qword_1013DC938, sub_100559B34);
    v26 = *(double *)&qword_1013E22A8;
    v17 = (void *)objc_opt_self(NSCollectionLayoutDimension);
    v18 = "fractionalWidthDimension:";
    if (v26 < v25)
    {
      v19 = 0.333333333;
      goto LABEL_36;
    }
LABEL_20:
    v19 = 0.5;
LABEL_36:
    v23 = objc_msgSend(v17, v18, v19);
    goto LABEL_37;
  }
  v23 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutDimension), "fractionalWidthDimension:", 0.25);
LABEL_37:
  v29 = v23;
  swift_unknownObjectRelease(v3);

  return v29;
}

uint64_t sub_10055E58C(void *a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  id v10;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  v8 = a1;
  v9 = a2;
  v10 = a4;
  return swift_task_switch(sub_10055E5F4, 0, 0);
}

uint64_t sub_10055E5F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.freeform.CRLNativeData"));
  v3 = v2;
  v0[6] = v2;
  v4 = (uint64_t **)swift_task_alloc(dword_101402F04);
  v0[7] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_10055E684;
  return sub_100A26F30(v0[2], (uint64_t)&off_1012763B8, v0[3], v1, v3);
}

uint64_t sub_10055E684()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10055E73C, 0, 0);
  v5 = *(_QWORD *)(v3 + 40);
  v7 = *(void **)(v3 + 24);
  v6 = *(void **)(v3 + 32);
  v8 = *(void **)(v3 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v3 + 48));

  (*(void (**)(uint64_t, _QWORD))(v5 + 16))(v5, 0);
  _Block_release(*(const void **)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10055E73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v5 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  v6 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v6);

  _Block_release(*(const void **)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id CRLAnalyticsOSSignpostManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLPasteboardObjectItemProviderWriteAssistant()
{
  return objc_opt_self(_TtC8Freeform45CRLPasteboardObjectItemProviderWriteAssistant);
}

uint64_t sub_10055E854()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10055E890()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1013E23CC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1004CF80C;
  return ((uint64_t (*)(void *, void *, void *, void *))((char *)&dword_1013E23C8 + dword_1013E23C8))(v2, v3, v5, v4);
}

uint64_t sub_10055E910()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

id sub_10055E93C(void *a1, void *a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  _QWORD *v7;
  objc_class *v8;
  id v9;
  char *v10;
  id v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = type metadata accessor for CRLItemProviderWriteAssistant();
  v7 = (_QWORD *)swift_allocObject(v6, 48, 7);
  v8 = (objc_class *)type metadata accessor for CRLMemoryWriteChannel(0);
  v9 = objc_allocWithZone(v8);
  v10 = v2;
  v11 = a1;
  v12 = a2;
  v7[4] = objc_msgSend(v9, "init");
  v7[5] = objc_msgSend(objc_allocWithZone(v8), "init");
  v7[2] = v11;
  v7[3] = v12;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform45CRLPasteboardObjectItemProviderWriteAssistant_writeAssistant] = v7;

  v14.receiver = v10;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, "init");
}

uint64_t sub_10055EA18()
{
  uint64_t result;

  qword_10147E8F8 = 97;
  unk_10147E900 = 0xE100000000000000;
  qword_10147E908 = swift_getKeyPath(&unk_100EF8CA8);
  unk_10147E910 = 98;
  qword_10147E918 = 0xE100000000000000;
  qword_10147E920 = swift_getKeyPath(&unk_100EF8CC8);
  qword_10147E928 = 99;
  qword_10147E930 = 0xE100000000000000;
  qword_10147E938 = swift_getKeyPath(&unk_100EF8CE8);
  unk_10147E940 = 100;
  qword_10147E948 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100EF8D08);
  qword_10147E950 = result;
  return result;
}

uint64_t sub_10055EA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _BYTE v44[256];

  v38 = a4;
  v39 = a3;
  v41 = a2;
  v7 = sub_1004B804C((uint64_t *)&unk_1013F5510);
  __chkstk_darwin(v7);
  v37 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v33 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v34 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for CRLWPShapeItemCRDTData(0);
  v18 = a5 + v17[7];
  sub_10054F488((uint64_t)v44);
  sub_1004C4938((uint64_t)v44, (uint64_t)&v42, &qword_1013E1B50);
  v19 = sub_1004B804C(&qword_1013E1B50);
  v20 = sub_100562004();
  v35 = v18;
  v21 = a5;
  CRRegister.init(wrappedValue:)(&v42, v19, v20);
  *(_QWORD *)(a5 + v17[8]) = &_swiftEmptyDictionarySingleton;
  v40 = a1;
  sub_1004B8460(a1, a5, type metadata accessor for CRLShapeItemCRDTData);
  sub_1004CB7BC(v41, (uint64_t)v12, (uint64_t *)&unk_1013F1500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v22 = sub_100559A64();
    CRAttributedString.init()(&type metadata for CRLTextAttributeScope, v22);
    CRAttributedString.init(_:)(32, 0xE100000000000000, &type metadata for CRLTextAttributeScope, v22);
    *(_QWORD *)&v16[*(int *)(v13 + 24)] = &_swiftEmptyDictionarySingleton;
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013F1500);
  }
  else
  {
    sub_1004B84E0((uint64_t)v12, (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  }
  sub_1004B84E0((uint64_t)v16, a5 + v17[5], type metadata accessor for CRLWPStorageCRDTData);
  v23 = v39;
  v24 = v37;
  sub_1004CB7BC(v39, v37, (uint64_t *)&unk_1013F5510);
  v25 = v36;
  v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v24, 1, v36);
  v27 = v34;
  if (v26 == 1)
  {
    LODWORD(v42) = 0;
    CRRegister.init(wrappedValue:)(&v42, &type metadata for Float, &protocol witness table for Float);
    v42 = 0;
    v43 = 0;
    v28 = sub_1004B804C((uint64_t *)&unk_1013F5520);
    v29 = sub_1004CBA30((unint64_t *)&qword_1013E2868, (uint64_t *)&unk_1013F5520, (uint64_t)&protocol conformance descriptor for CRExtensible<A>);
    CRRegister.init(wrappedValue:)(&v42, v28, v29);
    LOBYTE(v42) = 0;
    CRRegister.init(wrappedValue:)(&v42, &type metadata for Bool, &protocol witness table for Bool);
    *(_QWORD *)(v27 + *(int *)(v25 + 28)) = &_swiftEmptyDictionarySingleton;
    sub_1004CB800(v24, (uint64_t *)&unk_1013F5510);
  }
  else
  {
    sub_1004B84E0(v24, v34, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  }
  sub_1004B84E0(v27, v21 + v17[6], type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1004C4938(v38, (uint64_t)&v42, &qword_1013E1B50);
  v30 = sub_1004B804C(&qword_1013F3C70);
  CRRegister.wrappedValue.setter(&v42, v30, v31);
  sub_1004CB800(v23, (uint64_t *)&unk_1013F5510);
  sub_1004CB800(v41, (uint64_t *)&unk_1013F1500);
  return sub_1004B84A4(v40, type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_10055EEA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004B8460(v1, a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

uint64_t sub_10055EEC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1005631DC(a1, v1);
}

void (*sub_10055EED0(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0) - 8) + 64);
  a1[1] = (uint64_t)malloc(v3);
  v4 = malloc(v3);
  a1[2] = (uint64_t)v4;
  sub_1004B8460(v1, (uint64_t)v4, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return sub_10055EF48;
}

void sub_10055EF48(uint64_t *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = (void *)a1[1];
  v3 = (void *)a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(a1[2], (uint64_t)v2, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    sub_1005631DC((uint64_t)v2, v4);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  }
  else
  {
    sub_1005631DC(a1[2], v4);
  }
  free(v3);
  free(v2);
}

uint64_t sub_10055EFC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E29A0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8818);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_10055F000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_10055F058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.apply(_:)(a1, a2, v4);
}

uint64_t sub_10055F0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_10055F0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_10055F160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_10055F1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.merge(delta:)(a1, a2, v4);
}

double sub_10055F204@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  if (qword_1013DCA58 != -1)
    swift_once(&qword_1013DCA58, sub_10055EA18);
  v2 = unk_10147E900;
  v4 = qword_10147E908;
  v3 = unk_10147E910;
  v5 = qword_10147E918;
  v6 = qword_10147E920;
  v7 = qword_10147E928;
  v8 = qword_10147E930;
  v10 = qword_10147E938;
  v9 = unk_10147E940;
  v11 = qword_10147E948;
  v12 = qword_10147E950;
  *a1 = qword_10147E8F8;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v9;
  a1[10] = v11;
  a1[11] = v12;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  swift_retain(v10);
  swift_bridgeObjectRetain(v11);
  *(_QWORD *)&result = swift_retain(v12).n128_u64[0];
  return result;
}

uint64_t sub_10055F2D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10055F328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_10055F390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_10055F3E0()
{
  sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.needToFinalizeTimestamps()();
}

uint64_t sub_10055F420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_10055F470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.merge(_:)(a1, a2, v4);
}

uint64_t sub_10055F4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2960, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8910);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_10055F524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2960, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8910);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_10055F598(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return static CRStruct_4.fieldKeys.getter(a1, v2);
}

uint64_t sub_10055F5D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[248];
  _BYTE v16[120];
  _BYTE v17[232];
  _BYTE v18[48];
  uint64_t v19;
  _BYTE v20[232];
  _BYTE v21[248];

  v2 = sub_1004B804C((uint64_t *)&unk_1013F5510);
  __chkstk_darwin(v2);
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v5);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for CRLShapeItemCRDTData(0);
  __chkstk_darwin(v8);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  memset(v16, 0, 112);
  sub_1004C39E8((uint64_t)v20);
  sub_1004C4938((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1013F1530);
  memset(v18, 0, sizeof(v18));
  v19 = 0;
  sub_100C085D8((uint64_t)v16, (uint64_t)v17, (uint64_t)v18, (uint64_t)v18, (uint64_t)v10, 0.0);
  *(_QWORD *)&v10[*(int *)(v8 + 20)] = _swiftEmptyDictionarySingleton;
  v11 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  v12 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  sub_10054F488((uint64_t)v21);
  sub_1004C4938((uint64_t)v21, (uint64_t)v15, &qword_1013E1B50);
  return sub_10055EA9C((uint64_t)v10, (uint64_t)v7, (uint64_t)v4, (uint64_t)v15, a1);
}

uint64_t sub_10055F7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.init(from:)(a1, a2, v4);
}

uint64_t sub_10055F810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.encode(to:)(a1, a2, v4);
}

uint64_t sub_10055F86C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
  return CRStruct_4.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10055F8BC()
{
  uint64_t result;

  qword_10147E958 = 97;
  unk_10147E960 = 0xE100000000000000;
  qword_10147E968 = swift_getKeyPath(&unk_100EF8C48);
  unk_10147E970 = 98;
  qword_10147E978 = 0xE100000000000000;
  qword_10147E980 = swift_getKeyPath(&unk_100EF8C68);
  qword_10147E988 = 99;
  qword_10147E990 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100EF8C88);
  qword_10147E998 = result;
  return result;
}

double sub_10055F92C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  if (qword_1013DCA60 != -1)
    swift_once(&qword_1013DCA60, sub_10055F8BC);
  v2 = unk_10147E960;
  v4 = qword_10147E968;
  v3 = unk_10147E970;
  v5 = qword_10147E978;
  v6 = qword_10147E980;
  v7 = qword_10147E988;
  v8 = qword_10147E990;
  v9 = qword_10147E998;
  *a1 = qword_10147E958;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v8);
  *(_QWORD *)&result = swift_retain(v9).n128_u64[0];
  return result;
}

uint64_t sub_10055F9D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_10055FA18(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_10055FA24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 28);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10055FA58())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10055FA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;
  int v10;

  v10 = 0;
  CRRegister.init(wrappedValue:)(&v10, &type metadata for Float, &protocol witness table for Float);
  v8 = 0;
  v9 = 0;
  v4 = sub_1004B804C((uint64_t *)&unk_1013F5520);
  v5 = sub_1004CBA30((unint64_t *)&qword_1013E2868, (uint64_t *)&unk_1013F5520, (uint64_t)&protocol conformance descriptor for CRExtensible<A>);
  CRRegister.init(wrappedValue:)(&v8, v4, v5);
  v7 = 0;
  result = CRRegister.init(wrappedValue:)(&v7, &type metadata for Bool, &protocol witness table for Bool);
  *(_QWORD *)(a2 + *(int *)(a1 + 28)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_10055FB44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&unk_1013F5580, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8A54);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_10055FB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_10055FBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.apply(_:)(a1, a2, v4);
}

uint64_t sub_10055FC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_10055FC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_10055FCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_10055FD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.merge(delta:)(a1, a2, v4);
}

uint64_t sub_10055FD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10055FDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_10055FE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_10055FE94()
{
  sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_10055FED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_10055FF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.merge(_:)(a1, a2, v4);
}

uint64_t sub_10055FF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2988, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8AB4);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_10055FFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E2988, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8AB4);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_10056004C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.init(from:)(a1, a2, v4);
}

uint64_t sub_1005600B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.encode(to:)(a1, a2, v4);
}

uint64_t sub_10056010C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E2A18, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8C1C);
  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_10056015C()
{
  return 1;
}

_QWORD *sub_100560168(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v30[24];

  v2 = v1;
  v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v30[-v8 - 8];
  v10 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v15 = &v30[-v14 - 8];
  v16 = (uint64_t)v2 + *(_QWORD *)(*v2 + 632);
  swift_beginAccess(v16, v30, 0, 0);
  if ((a1 & 1) != 0)
  {
    sub_1004CB7BC(v16, (uint64_t)v12, &qword_1013F5530);
    v17 = sub_1004CBA30(&qword_1013E2A20, &qword_1013F5530, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v10, v17);
    v18 = sub_1004CB800((uint64_t)v12, &qword_1013F5530);
    (*(void (**)(uint64_t))(*v2 + 760))(v18);
    v19 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
    CRStruct_4.copy(renamingReferences:)(0, v4, v19);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData);
  }
  else
  {
    v20 = sub_1004CB7BC(v16, (uint64_t)v15, &qword_1013F5530);
    (*(void (**)(uint64_t))(*v2 + 760))(v20);
  }
  v21 = v2[4];
  v22 = v2[5];
  v25 = v2 + 2;
  v23 = v2[2];
  v24 = v25[1];
  v26 = type metadata accessor for CRLWPShapeItemData(0);
  v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  sub_1004B84E0((uint64_t)v9, v27 + *(_QWORD *)(*(_QWORD *)v27 + 752), type metadata accessor for CRLWPShapeItemCRDTData);
  *(_QWORD *)(v27 + qword_10140A310) = 0;
  sub_1004C4938((uint64_t)v15, v27 + *(_QWORD *)(*(_QWORD *)v27 + 632), &qword_1013F5530);
  return sub_1005E1000(v24, v21, v22, v23);
}

uint64_t sub_1005603D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BYTE v9[16];

  v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  v2 = __chkstk_darwin(v1);
  v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 760))(v2);
  type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v5 = sub_1004B804C(&qword_1013E27E8);
  CRRegister.wrappedValue.getter(v5);
  v6 = v9[0];
  v7 = v9[8];
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLWPShapeItemCRDTData);
  if (v7)
    return 0;
  else
    return v6;
}

uint64_t sub_100560498()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), &qword_1013F5530);

  sub_1004B84A4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 752), type metadata accessor for CRLWPShapeItemCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLWPShapeItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E2400, (uint64_t)&nominal type descriptor for CRLWPShapeItemData);
}

uint64_t sub_10056050C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 840);
}

uint64_t *sub_100560540(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013F55A0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1004B804C(&qword_1013E27E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = *(uint64_t *)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

double sub_100560638(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7])).n128_u64[0];
  return result;
}

uint64_t sub_1005606D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_1005607A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a2 + v15);
  v17 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_10056087C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100560944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = *(_QWORD *)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t sub_100560A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100560A20);
}

uint64_t sub_100560A20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1004B804C(&qword_1013F55A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1004B804C(&qword_1013E27E8);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_100560AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100560B04);
}

uint64_t sub_100560B04(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_1004B804C(&qword_1013F55A0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1004B804C(&qword_1013E27E8);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013F5590);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E2848, (uint64_t)&nominal type descriptor for CRLWPShapeItemCRDTData.WPShapeStyleData);
}

void sub_100560BEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_100560D4C(319, (unint64_t *)&qword_1013E2858, (uint64_t)&type metadata for Float, (uint64_t)&protocol witness table for Float);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100560CC8(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100560D4C(319, (unint64_t *)&qword_1013E2870, (uint64_t)&type metadata for Bool, (uint64_t)&protocol witness table for Bool);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

void sub_100560CC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1013E2860)
  {
    v2 = sub_1004CB6A4((uint64_t *)&unk_1013F5520);
    v3 = sub_1004CBA30((unint64_t *)&qword_1013E2868, (uint64_t *)&unk_1013F5520, (uint64_t)&protocol conformance descriptor for CRExtensible<A>);
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1013E2860);
  }
}

void sub_100560D4C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = type metadata accessor for CRRegister(0, a3, a4);
    if (!v6)
      atomic_store(v5, a2);
  }
}

char *sub_100560D94(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __n128 v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v56 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v56);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&a1[v8[7]], (char *)a2 + v8[7], v16);
    v18 = v8[8];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = sub_1004B804C(&qword_1013F55A0);
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v23 = v8[9];
    v24 = *(uint64_t *)((char *)a2 + v23);
    *(_QWORD *)&a1[v23] = v24;
    v25 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
    v26 = *(uint64_t *)((char *)a2 + v25);
    *(_QWORD *)&a1[v25] = v26;
    v27 = a3[5];
    v28 = &a1[v27];
    v29 = (char *)a2 + v27;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v26);
    v30 = sub_1004B804C((uint64_t *)&unk_1013E8570);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(v28, v29, v30);
    v32 = type metadata accessor for CRLWPStorageCRDTData(0);
    v31(&v28[*(int *)(v32 + 20)], &v29[*(int *)(v32 + 20)], v30);
    v33 = *(int *)(v32 + 24);
    v34 = *(_QWORD *)&v29[v33];
    *(_QWORD *)&v28[v33] = v34;
    v35 = a3[6];
    v36 = &a1[v35];
    v37 = (char *)a2 + v35;
    v38 = swift_bridgeObjectRetain(v34);
    ((void (*)(char *, char *, uint64_t, __n128))v22)(v36, v37, v21, v38);
    v39 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
    v40 = v39[5];
    v41 = &v36[v40];
    v42 = &v37[v40];
    v43 = sub_1004B804C(&qword_1013E27E8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = v39[6];
    v45 = &v36[v44];
    v46 = &v37[v44];
    v47 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = v39[7];
    v49 = *(_QWORD *)&v37[v48];
    *(_QWORD *)&v36[v48] = v49;
    v50 = a3[7];
    v51 = &a1[v50];
    v52 = (char *)a2 + v50;
    swift_bridgeObjectRetain(v49);
    v53 = sub_1004B804C(&qword_1013F3C70);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v54 = a3[8];
    v55 = *(uint64_t *)((char *)a2 + v54);
    *(_QWORD *)&a1[v54] = v55;
    swift_bridgeObjectRetain(v55);
  }
  return a1;
}

double sub_100561050(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;

  v4 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v6 = a1 + v5[5];
  v7 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + v5[6];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + v5[7], v9);
  v11 = a1 + v5[8];
  v12 = sub_1004B804C(&qword_1013F55A0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[9]));
  v14 = type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v14 + 20)));
  v15 = a1 + a2[5];
  v16 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v17(v15, v16);
  v18 = type metadata accessor for CRLWPStorageCRDTData(0);
  v17(v15 + *(int *)(v18 + 20), v16);
  v19 = swift_bridgeObjectRelease(*(_QWORD *)(v15 + *(int *)(v18 + 24)));
  v20 = a1 + a2[6];
  ((void (*)(uint64_t, uint64_t, __n128))v13)(v20, v12, v19);
  v21 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v22 = v20 + v21[5];
  v23 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
  v24 = v20 + v21[6];
  v25 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  swift_bridgeObjectRelease(*(_QWORD *)(v20 + v21[7]));
  v26 = a1 + a2[7];
  v27 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8])).n128_u64[0];
  return result;
}

uint64_t sub_100561264(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v21(v18, v19, v20);
  v22 = v7[9];
  v23 = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  v24 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v25 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v26 = a3[5];
  v27 = a1 + v26;
  v28 = a2 + v26;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v25);
  v29 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v30(v27, v28, v29);
  v31 = type metadata accessor for CRLWPStorageCRDTData(0);
  v30(v27 + *(int *)(v31 + 20), v28 + *(int *)(v31 + 20), v29);
  v32 = *(int *)(v31 + 24);
  v33 = *(_QWORD *)(v28 + v32);
  *(_QWORD *)(v27 + v32) = v33;
  v34 = a3[6];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = swift_bridgeObjectRetain(v33);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v21)(v35, v36, v20, v37);
  v38 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v39 = v38[5];
  v40 = v35 + v39;
  v41 = v36 + v39;
  v42 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
  v43 = v38[6];
  v44 = v35 + v43;
  v45 = v36 + v43;
  v46 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  v47 = v38[7];
  v48 = *(_QWORD *)(v36 + v47);
  *(_QWORD *)(v35 + v47) = v48;
  v49 = a3[7];
  v50 = a1 + v49;
  v51 = a2 + v49;
  swift_bridgeObjectRetain(v48);
  v52 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  v53 = a3[8];
  v54 = *(_QWORD *)(a2 + v53);
  *(_QWORD *)(a1 + v53) = v54;
  swift_bridgeObjectRetain(v54);
  return a1;
}

uint64_t sub_1005614F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v22 = v7[9];
  v23 = *(_QWORD *)(a2 + v22);
  v24 = *(_QWORD *)(a1 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  v25 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v26 = *(_QWORD *)(a2 + v25);
  v27 = *(_QWORD *)(a1 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  v28 = a3[5];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24);
  v32(v29, v30, v31);
  v33 = type metadata accessor for CRLWPStorageCRDTData(0);
  v32(v29 + *(int *)(v33 + 20), v30 + *(int *)(v33 + 20), v31);
  v34 = *(int *)(v33 + 24);
  v35 = *(_QWORD *)(v30 + v34);
  v36 = *(_QWORD *)(v29 + v34);
  *(_QWORD *)(v29 + v34) = v35;
  swift_bridgeObjectRetain(v35);
  v37 = swift_bridgeObjectRelease(v36);
  v38 = a3[6];
  v39 = a1 + v38;
  v40 = a2 + v38;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v21)(a1 + v38, a2 + v38, v20, v37);
  v41 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v42 = v41[5];
  v43 = v39 + v42;
  v44 = v40 + v42;
  v45 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
  v46 = v41[6];
  v47 = v39 + v46;
  v48 = v40 + v46;
  v49 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
  v50 = v41[7];
  v51 = *(_QWORD *)(v40 + v50);
  v52 = *(_QWORD *)(v39 + v50);
  *(_QWORD *)(v39 + v50) = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRelease(v52);
  v53 = a3[7];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
  v57 = a3[8];
  v58 = *(_QWORD *)(a2 + v57);
  v59 = *(_QWORD *)(a1 + v57);
  *(_QWORD *)(a1 + v57) = v58;
  swift_bridgeObjectRetain(v58);
  swift_bridgeObjectRelease(v59);
  return a1;
}

uint64_t sub_1005617B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v22 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(_QWORD *)(a1 + *(int *)(v22 + 20)) = *(_QWORD *)(a2 + *(int *)(v22 + 20));
  v23 = a3[5];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v28 = type metadata accessor for CRLWPStorageCRDTData(0);
  v27(v24 + *(int *)(v28 + 20), v25 + *(int *)(v28 + 20), v26);
  *(_QWORD *)(v24 + *(int *)(v28 + 24)) = *(_QWORD *)(v25 + *(int *)(v28 + 24));
  v29 = a3[6];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v21(a1 + v29, a2 + v29, v20);
  v32 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v33 = v32[5];
  v34 = v30 + v33;
  v35 = v31 + v33;
  v36 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
  v37 = v32[6];
  v38 = v30 + v37;
  v39 = v31 + v37;
  v40 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  *(_QWORD *)(v30 + v32[7]) = *(_QWORD *)(v31 + v32[7]);
  v41 = a3[7];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100561A2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40);
  v21(v18, v19, v20);
  v22 = v7[9];
  v23 = *(_QWORD *)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRelease(v23);
  v24 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v25 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[5];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40);
  v30(v27, v28, v29);
  v31 = type metadata accessor for CRLWPStorageCRDTData(0);
  v30(v27 + *(int *)(v31 + 20), v28 + *(int *)(v31 + 20), v29);
  v32 = *(int *)(v31 + 24);
  v33 = *(_QWORD *)(v27 + v32);
  *(_QWORD *)(v27 + v32) = *(_QWORD *)(v28 + v32);
  v34 = swift_bridgeObjectRelease(v33);
  v35 = a3[6];
  v36 = a1 + v35;
  v37 = a2 + v35;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v21)(a1 + v35, a2 + v35, v20, v34);
  v38 = (int *)type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v39 = v38[5];
  v40 = v36 + v39;
  v41 = v37 + v39;
  v42 = sub_1004B804C(&qword_1013E27E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = v38[6];
  v44 = v36 + v43;
  v45 = v37 + v43;
  v46 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  v47 = v38[7];
  v48 = *(_QWORD *)(v36 + v47);
  *(_QWORD *)(v36 + v47) = *(_QWORD *)(v37 + v47);
  swift_bridgeObjectRelease(v48);
  v49 = a3[7];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = sub_1004B804C(&qword_1013F3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
  v53 = a3[8];
  v54 = *(_QWORD *)(a1 + v53);
  *(_QWORD *)(a1 + v53) = *(_QWORD *)(a2 + v53);
  swift_bridgeObjectRelease(v54);
  return a1;
}

uint64_t sub_100561CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100561CD4);
}

uint64_t sub_100561CD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v6 = type metadata accessor for CRLShapeItemCRDTData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for CRLWPStorageCRDTData(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = sub_1004B804C(&qword_1013F3C70);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[7];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[8]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_100561DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100561DD4);
}

uint64_t sub_100561DD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v8 = type metadata accessor for CRLShapeItemCRDTData(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  v16 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = sub_1004B804C(&qword_1013F3C70);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLWPShapeItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013E2900, (uint64_t)&nominal type descriptor for CRLWPShapeItemCRDTData);
}

void sub_100561ED8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  v2 = type metadata accessor for CRLShapeItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for CRLWPStorageCRDTData(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(319);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_100561FA0(319);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          v10[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
          swift_initStructMetadata(a1, 256, 5, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_100561FA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1013E2910)
  {
    v2 = sub_1004CB6A4(&qword_1013E1B50);
    v3 = sub_100562004();
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1013E2910);
  }
}

unint64_t sub_100562004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E2918;
  if (!qword_1013E2918)
  {
    v1 = sub_1004CB6A4(&qword_1013E1B50);
    sub_100562068();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1013E2918);
  }
  return result;
}

unint64_t sub_100562068()
{
  unint64_t result;

  result = qword_1013E2920;
  if (!qword_1013E2920)
  {
    result = swift_getWitnessTable(&unk_100F0C02C, &type metadata for CRLWPTextPresetData);
    atomic_store(result, (unint64_t *)&qword_1013E2920);
  }
  return result;
}

uint64_t sub_1005620AC()
{
  return sub_1004B7878(&qword_1013E2960, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8910);
}

uint64_t sub_1005620D8()
{
  return sub_1004B7878(&qword_1013E2968, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)"I:7");
}

uint64_t sub_100562104()
{
  return sub_1004B7878(&qword_1013E2970, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8780);
}

uint64_t sub_100562130()
{
  return sub_1004B7878(&qword_1013E2978, type metadata accessor for CRLShapeItemCRDTData, (uint64_t)&unk_100F2E938);
}

uint64_t sub_10056215C()
{
  return sub_1004B7878(&qword_1013E2980, type metadata accessor for CRLWPStorageCRDTData, (uint64_t)&unk_100F0CBC8);
}

uint64_t sub_100562188()
{
  return sub_1004B7878(&qword_1013E2988, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8AB4);
}

uint64_t sub_1005621B4()
{
  return sub_1004CBA30(&qword_1013E2990, &qword_1013F3C70, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1005621E0()
{
  return sub_1004B7878(&qword_1013E2998, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF87E0);
}

uint64_t sub_10056220C()
{
  return sub_1004B7878(&qword_1013E29A0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8818);
}

uint64_t sub_100562238()
{
  return sub_1004CBA30(&qword_1013E29A8, &qword_1013E29B0, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_4<A>);
}

uint64_t sub_100562264()
{
  return sub_1004B7878(&qword_1013E29B8, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8878);
}

uint64_t sub_100562290(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013E2960, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8910);
  result = sub_1004B7878(&qword_1013E29C0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF88E8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1005622EC()
{
  return sub_1004B7878(&qword_1013E29C8, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF89D4);
}

uint64_t sub_100562318()
{
  return sub_1004B7878(&qword_1013E29D0, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8A1C);
}

uint64_t sub_100562344()
{
  return sub_1004B7878((unint64_t *)&unk_1013F5580, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8A54);
}

uint64_t sub_100562370()
{
  return sub_1004CBA30(&qword_1013E29D8, &qword_1013E29E0, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_3<A>);
}

uint64_t sub_10056239C()
{
  return sub_1004B7878(&qword_1013E29E8, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8B34);
}

uint64_t sub_1005623C8()
{
  return sub_1004CBA30(&qword_1013E29F0, &qword_1013F55A0, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1005623F4()
{
  return sub_1004CBA30(&qword_1013E29F8, &qword_1013E27E8, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_100562420()
{
  return sub_1004CBA30(&qword_1013E2A00, (uint64_t *)&unk_1013F5590, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_10056244C()
{
  return sub_1004B7878(&qword_1013E2A08, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8B94);
}

uint64_t sub_100562478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  float v17;
  float v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - v14;
  v16 = sub_1004B804C(&qword_1013F55A0);
  CRRegister.wrappedValue.getter(v16);
  v17 = *(float *)&v27;
  CRRegister.wrappedValue.getter(v16);
  v18 = *(float *)&v27;
  sub_1004B8460(a1, (uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1004B8460(a2, (uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  if (v17 != v18)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    goto LABEL_5;
  }
  v19 = sub_1004B804C(&qword_1013E27E8);
  CRRegister.wrappedValue.getter(v19);
  CRRegister.wrappedValue.getter(v19);
  v20 = sub_100563198();
  v21 = static CRExtensible.== infix(_:_:)(&v27, &v26, &type metadata for CRLWPShapeVerticalAlignmentData, v20, &protocol witness table for Int, &protocol witness table for Int);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  if ((v21 & 1) == 0)
  {
LABEL_5:
    v24 = 0;
    goto LABEL_6;
  }
  v22 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v22);
  v23 = v27;
  CRRegister.wrappedValue.getter(v22);
  v24 = v23 ^ v27 ^ 1;
LABEL_6:
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  return v24 & 1;
}

uint64_t sub_100562730(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD v49[15];
  uint64_t v50;
  _OWORD v51[15];
  uint64_t v52;
  _BYTE v53[248];
  _BYTE v54[248];
  _OWORD v55[31];
  _BYTE v56[496];
  _BYTE v57[248];
  _BYTE v58[248];
  _BYTE v59[248];
  _OWORD v60[15];
  uint64_t v61;

  v44 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v44);
  v46 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v47 = (uint64_t)&v39 - v6;
  v45 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v45);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v48 = (uint64_t)&v39 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v39 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v39 - v21;
  v23 = sub_100C0F800(a1, a2);
  sub_1004B8460(a1, (uint64_t)v22, type metadata accessor for CRLWPShapeItemCRDTData);
  v24 = (uint64_t)v8;
  sub_1004B8460(a2, (uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
  if (!v23)
    goto LABEL_9;
  v40 = v13;
  v41 = a1;
  v42 = a2;
  v43 = v8;
  v25 = v45;
  v26 = *(int *)(v45 + 20);
  v27 = (uint64_t)&v22[v26];
  v28 = (uint64_t)&v19[v26];
  v29 = sub_1007E4C54((uint64_t)&v22[v26], (uint64_t)&v19[v26]);
  sub_1004B8460(v27, v47, type metadata accessor for CRLWPStorageCRDTData);
  v30 = v46;
  sub_1004B8460(v28, v46, type metadata accessor for CRLWPStorageCRDTData);
  if ((v29 & 1) == 0)
  {
    sub_1004B84A4(v47, type metadata accessor for CRLWPStorageCRDTData);
    sub_1004B84A4(v30, type metadata accessor for CRLWPStorageCRDTData);
    a2 = v42;
    v24 = (uint64_t)v43;
    v13 = v40;
    a1 = v41;
LABEL_9:
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B8460(a1, (uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B8460(a2, (uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
    v34 = (uint64_t)v13;
    goto LABEL_10;
  }
  v31 = v25;
  v32 = v47;
  v33 = sub_1007E4C54(v47 + *(int *)(v44 + 20), v30 + *(int *)(v44 + 20));
  sub_1004B84A4(v32, type metadata accessor for CRLWPStorageCRDTData);
  sub_1004B84A4(v30, type metadata accessor for CRLWPStorageCRDTData);
  sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLWPShapeItemCRDTData);
  a1 = v41;
  sub_1004B8460(v41, (uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
  a2 = v42;
  v34 = (uint64_t)v40;
  sub_1004B8460(v42, (uint64_t)v40, type metadata accessor for CRLWPShapeItemCRDTData);
  v24 = (uint64_t)v43;
  if ((v33 & 1) == 0)
  {
LABEL_10:
    sub_1004B84A4(v34, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B8460(a1, v48, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B8460(a2, v24, type metadata accessor for CRLWPShapeItemCRDTData);
    goto LABEL_11;
  }
  v35 = sub_100562478((uint64_t)&v16[*(int *)(v31 + 24)], v34 + *(int *)(v31 + 24));
  sub_1004B84A4(v34, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B8460(a1, v48, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B8460(a2, v24, type metadata accessor for CRLWPShapeItemCRDTData);
  if ((v35 & 1) == 0)
  {
LABEL_11:
    sub_1004B84A4(v24, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B84A4(v48, type metadata accessor for CRLWPShapeItemCRDTData);
LABEL_12:
    v37 = 0;
    return v37 & 1;
  }
  v36 = sub_1004B804C(&qword_1013F3C70);
  CRRegister.wrappedValue.getter(v36);
  sub_1004C4938((uint64_t)v56, (uint64_t)v57, &qword_1013E1B50);
  CRRegister.wrappedValue.getter(v36);
  sub_1004C4938((uint64_t)v56, (uint64_t)v58, &qword_1013E1B50);
  sub_1004C4938((uint64_t)v57, (uint64_t)v56, &qword_1013E1B50);
  sub_1004C4938((uint64_t)v58, (uint64_t)&v56[248], &qword_1013E1B50);
  sub_1004C4938((uint64_t)v57, (uint64_t)v59, &qword_1013E1B50);
  if (sub_100562DF8((uint64_t)v59) != 1)
  {
    sub_1004C4938((uint64_t)v58, (uint64_t)v54, &qword_1013E1B50);
    if (sub_100562DF8((uint64_t)v54) != 1)
    {
      sub_1004C4938((uint64_t)v57, (uint64_t)v49, &qword_1013E1B50);
      v60[12] = v49[12];
      v60[13] = v49[13];
      v60[14] = v49[14];
      v61 = v50;
      v60[8] = v49[8];
      v60[9] = v49[9];
      v60[10] = v49[10];
      v60[11] = v49[11];
      v60[4] = v49[4];
      v60[5] = v49[5];
      v60[6] = v49[6];
      v60[7] = v49[7];
      v60[0] = v49[0];
      v60[1] = v49[1];
      v60[2] = v49[2];
      v60[3] = v49[3];
      sub_1004C4938((uint64_t)v58, (uint64_t)v51, &qword_1013E1B50);
      v55[12] = v51[12];
      v55[13] = v51[13];
      v55[14] = v51[14];
      *(_QWORD *)&v55[15] = v52;
      v55[8] = v51[8];
      v55[9] = v51[9];
      v55[10] = v51[10];
      v55[11] = v51[11];
      v55[4] = v51[4];
      v55[5] = v51[5];
      v55[6] = v51[6];
      v55[7] = v51[7];
      v55[0] = v51[0];
      v55[1] = v51[1];
      v55[2] = v51[2];
      v55[3] = v51[3];
      sub_1005630DC((uint64_t)v49);
      v37 = sub_1007C6C70(v60, v55);
      sub_100563064((uint64_t)v58);
      sub_100563064((uint64_t)v57);
      sub_1004B84A4(v24, type metadata accessor for CRLWPShapeItemCRDTData);
      sub_1004B84A4(v48, type metadata accessor for CRLWPShapeItemCRDTData);
      sub_1004C4938((uint64_t)v56, (uint64_t)v53, &qword_1013E1B50);
      sub_100563064((uint64_t)v53);
      return v37 & 1;
    }
    sub_1004C4938((uint64_t)v57, (uint64_t)v55, &qword_1013E1B50);
    sub_1005630DC((uint64_t)v55);
    sub_1004B84A4(v24, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B84A4(v48, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_100563064((uint64_t)v57);
    goto LABEL_16;
  }
  sub_1004B84A4(v24, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004B84A4(v48, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004C4938((uint64_t)&v56[248], (uint64_t)v60, &qword_1013E1B50);
  sub_1004C4938((uint64_t)v60, (uint64_t)v55, &qword_1013E1B50);
  if (sub_100562DF8((uint64_t)v55) != 1)
  {
LABEL_16:
    memcpy(v55, v56, sizeof(v55));
    sub_100562E10((uint64_t)v55);
    goto LABEL_12;
  }
  sub_1004C4938((uint64_t)v56, (uint64_t)v54, &qword_1013E1B50);
  sub_100563064((uint64_t)v54);
  v37 = 1;
  return v37 & 1;
}

uint64_t sub_100562DF8(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 240);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_100562E10(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 248);
  v3 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v5 = *(_QWORD *)(a1 + 272);
  v6 = *(_QWORD *)(a1 + 280);
  v7 = *(_QWORD *)(a1 + 288);
  v8 = *(_QWORD *)(a1 + 296);
  v9 = *(_QWORD *)(a1 + 304);
  v22 = *(_OWORD *)(a1 + 328);
  v23 = *(_OWORD *)(a1 + 312);
  v20 = *(_OWORD *)(a1 + 360);
  v21 = *(_OWORD *)(a1 + 344);
  v18 = *(_OWORD *)(a1 + 392);
  v19 = *(_OWORD *)(a1 + 376);
  v16 = *(_OWORD *)(a1 + 424);
  v17 = *(_OWORD *)(a1 + 408);
  v14 = *(_OWORD *)(a1 + 456);
  v15 = *(_OWORD *)(a1 + 440);
  v13 = *(_OWORD *)(a1 + 472);
  v10 = *(_QWORD *)(a1 + 488);
  v12 = *(_OWORD *)(a1 + 208);
  sub_100562F88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v12,
    *((uint64_t *)&v12 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240));
  sub_100562F88(v2, v3, v4, v5, v6, v7, v8, v9, v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v10);
  return a1;
}

double sub_100562F88(uint64_t a1, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  double result;

  if (a31)
  {
    sub_1004C4218(a1, a2, a3);
    sub_1004C4174(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a31).n128_u64[0];
  }
  return result;
}

uint64_t sub_100563064(uint64_t a1)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 208);
  sub_100562F88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240));
  return a1;
}

uint64_t sub_1005630DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v12 = *(_OWORD *)(a1 + 144);
  v13 = *(_OWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 168);
  v10 = *(_QWORD *)(a1 + 240);
  sub_1004C48FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1004C485C(v15, v14, v2, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v8, v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

unint64_t sub_100563198()
{
  unint64_t result;

  result = qword_1013E2A10;
  if (!qword_1013E2A10)
  {
    result = swift_getWitnessTable(&unk_100F36CD0, &type metadata for CRLWPShapeVerticalAlignmentData);
    atomic_store(result, (unint64_t *)&qword_1013E2A10);
  }
  return result;
}

uint64_t sub_1005631DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1005632B0()
{
  _BYTE *v0;
  objc_super v2;

  if ((v0[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown] & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 34, "teardown not called for CRLScenesViewController_i", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2u, 34, (uint64_t)"teardown not called for CRLScenesViewController_i", 49, 2u);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLScenesViewController_i();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1005634E0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Class isa;
  uint64_t v48;
  uint64_t v49;
  objc_super v50;

  v1 = v0;
  v2 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for CRLScenesViewController_i();
  v50.receiver = v1;
  v50.super_class = v5;
  objc_msgSendSuper2(&v50, "viewDidLoad");
  v6 = OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_hostingController;
  v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_hostingController], "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = v7;
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v9 = *(id *)&v1[v6];
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v4);

  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v11 = v10;
  v12 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = v12;
  objc_msgSend(v11, "addSubview:", v12);

  objc_msgSend(v1, "addChildViewController:", *(_QWORD *)&v1[v6]);
  objc_msgSend(*(id *)&v1[v6], "didMoveToParentViewController:", v1);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF7310;
  v16 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "leadingAnchor");

  v19 = objc_msgSend(v1, "view");
  if (!v19)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, "leadingAnchor");

  v22 = objc_msgSend(v18, "constraintEqualToAnchor:", v21);
  *(_QWORD *)(v15 + 32) = v22;
  v23 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "trailingAnchor");

  v26 = objc_msgSend(v1, "view");
  if (!v26)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "trailingAnchor");

  v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v15 + 40) = v29;
  v30 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v30)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, "topAnchor");

  v33 = objc_msgSend(v1, "view");
  if (!v33)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, "topAnchor");

  v36 = objc_msgSend(v32, "constraintEqualToAnchor:", v35);
  *(_QWORD *)(v15 + 48) = v36;
  v37 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v37)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "bottomAnchor");

  v40 = objc_msgSend(v1, "view");
  if (v40)
  {
    v41 = v40;
    v42 = (void *)objc_opt_self(NSLayoutConstraint);
    v43 = objc_msgSend(v41, "bottomAnchor");

    v44 = objc_msgSend(v39, "constraintEqualToAnchor:", v43);
    *(_QWORD *)(v15 + 56) = v44;
    v49 = v15;
    specialized Array._endMutation()(v45);
    v46 = v49;
    sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v42, "activateConstraints:", isa, swift_bridgeObjectRelease(v46).n128_f64[0]);

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_100563994()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t KeyPath;
  uint64_t v4;
  id v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState);
  KeyPath = swift_getKeyPath(&unk_100EF8D98);
  v4 = swift_getKeyPath(&unk_100EF8DC0);
  v5 = v2;
  static Published.subscript.getter(&v11, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  if ((v11 & 1) == 0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesDelegate);
    if (Strong)
    {
      v7 = Strong;
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete);
      swift_bridgeObjectRetain(v8);
      v10 = sub_1005FF3F8(v9);
      swift_bridgeObjectRelease(v8);
      sub_100C447B8((uint64_t)v10);
      swift_release(v10);
      swift_unknownObjectRelease(v7);
    }
  }
}

uint64_t sub_100563AF4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;

  sub_1004F370C(a1, (uint64_t)v10);
  v2 = v11;
  if (v11)
  {
    v3 = sub_1004BB5A4(v10, v11);
    v4 = *(_QWORD *)(v2 - 8);
    v5 = __chkstk_darwin(v3);
    v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v4 + 16))(v7, v5);
    v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v2);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v10);
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v1, "delete:", v8);
  return swift_unknownObjectRelease(v8);
}

void sub_100563D58(void *a1, uint64_t a2, Class isa)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unsigned int v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  uint64_t Strong;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t KeyPath;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v7 = type metadata accessor for CRLiOSBoardViewController(0);
  v8 = swift_dynamicCastClass(a1, v7);
  if (!v8)
    return;
  v9 = (void *)v8;
  v47 = a1;
  v10 = objc_msgSend(v9, "presentedViewController");
  if (v10)
  {
    v11 = v10;
    v12 = type metadata accessor for CRLScenesViewController_i();
    if (swift_dynamicCastClass(v11, v12) || (objc_msgSend(v11, "isBeingPresented") & 1) != 0)
    {

LABEL_34:
      return;
    }
    v13 = objc_msgSend(v11, "isBeingDismissed");

    if (v13)
      goto LABEL_34;
  }
  objc_msgSend(v3, "setModalPresentationStyle:", 7);
  v14 = objc_msgSend(v3, "popoverPresentationController");
  if (!v14)
    goto LABEL_34;
  v15 = v14;
  v16 = objc_msgSend(v3, "view");
  if (!v16)
  {
LABEL_44:
    __break(1u);
    return;
  }
  v17 = v16;
  if (qword_1013DD2D0 != -1)
    swift_once(&qword_1013DD2D0, sub_10087C62C);
  objc_msgSend(v17, "setBackgroundColor:", qword_10147F9A8);

  objc_msgSend(v15, "setSourceView:", a2);
  if (isa)
  {
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(v15, "setPassthroughViews:", isa);

  objc_msgSend(v15, "setPermittedArrowDirections:", 2);
  if (qword_1013DD2E8 != -1)
    swift_once(&qword_1013DD2E8, sub_10087C688);
  v18 = *(double *)&qword_10147F9C0;
  Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesDelegate]);
  if (Strong)
  {
    v20 = Strong;
    v21 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v22 = objc_msgSend(v21, "preferredContentSizeCategory");

    LOBYTE(v21) = sub_100565448(v22);
    swift_unknownObjectRelease(v20);
    if ((v21 & 1) != 0)
      v18 = v18 + v18;
  }
  v23 = OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState;
  v24 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState];
  KeyPath = swift_getKeyPath(&unk_100EF8D98);
  v26 = swift_getKeyPath(&unk_100EF8DC0);
  v27 = v24;
  static Published.subscript.getter(aBlock, v27, KeyPath, v26);

  swift_release(KeyPath);
  swift_release(v26);
  if (LOBYTE(aBlock[0]))
    v28 = 4;
  else
    v28 = 3;
  v29 = *(void **)&v3[v23];
  v30 = swift_getKeyPath(&unk_100EF8DE0);
  v31 = swift_getKeyPath(&unk_100EF8E08);
  v32 = v29;
  static Published.subscript.getter(aBlock, v32, v30, v31);

  swift_release(v30);
  swift_release(v31);
  v33 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    if (aBlock[0] < 0)
      v45 = aBlock[0];
    else
      v45 = aBlock[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(aBlock[0]);
    v34 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    v34 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v33);
  if (v28 >= v34)
    goto LABEL_30;
  if (qword_1013DD2F0 != -1)
    swift_once(&qword_1013DD2F0, sub_10087C698);
  v35 = *(double *)&qword_10147F9C8;
  v36 = *(void **)&v3[v23];
  v37 = swift_getKeyPath(&unk_100EF8DE0);
  v38 = swift_getKeyPath(&unk_100EF8E08);
  v39 = v36;
  static Published.subscript.getter(aBlock, v39, v37, v38);

  swift_release(v37);
  swift_release(v38);
  v40 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    if (aBlock[0] < 0)
      v46 = aBlock[0];
    else
      v46 = aBlock[0] & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(aBlock[0]);
    v41 = _CocoaArrayWrapper.endIndex.getter(v46);
    swift_bridgeObjectRelease(v40);
  }
  else
  {
    v41 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v40);
  if (__OFSUB__(v41, v28))
  {
    __break(1u);
    goto LABEL_44;
  }
  v18 = v18 + v35 * (double)(v41 - v28);
LABEL_30:
  if (qword_1013DD2E0 != -1)
    swift_once(&qword_1013DD2E0, sub_10087C674);
  objc_msgSend(v3, "setPreferredContentSize:", *(double *)&qword_10147F9B8, v18);
  v42 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled") ^ 1;
  v43 = swift_allocObject(&unk_10126C498, 24, 7);
  swift_unknownObjectWeakInit(v43 + 16);
  aBlock[4] = sub_100565864;
  v49 = v43;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10126C4B0;
  v44 = _Block_copy(aBlock);
  objc_msgSend(v9, "presentViewController:animated:completion:", v3, v42, v44, swift_release(v49).n128_f64[0]);

  _Block_release(v44);
}

void sub_1005642F4(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "becomeFirstResponder");

  }
}

void sub_1005643E4(char a1, uint64_t a2, uint64_t a3)
{
  sub_100565024(a1, a2, a3, (uint64_t)&unk_10126C460);
}

uint64_t type metadata accessor for CRLScenesViewController_i()
{
  return objc_opt_self(_TtC8Freeform25CRLScenesViewController_i);
}

id sub_100564530()
{
  _BYTE *v0;
  objc_super v2;

  if ((v0[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown] & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2, 168, "teardown not called for CRLCompactScenesViewController_i", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLScenesViewController_i.swift", 95, 2u, 168, (uint64_t)"teardown not called for CRLCompactScenesViewController_i", 56, 2u);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCompactScenesViewController_i();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100564750()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Class isa;
  void *v48;
  NSString *v49;
  NSString *v50;
  id v51;
  NSString *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  objc_super v56;

  v1 = v0;
  v2 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for CRLCompactScenesViewController_i();
  v56.receiver = v1;
  v56.super_class = v5;
  objc_msgSendSuper2(&v56, "viewDidLoad");
  v6 = OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_hostingController;
  v7 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_hostingController], "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = v7;
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v9 = *(id *)&v1[v6];
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v4);

  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v11 = v10;
  v12 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = v12;
  objc_msgSend(v11, "addSubview:", v12);

  objc_msgSend(v1, "addChildViewController:", *(_QWORD *)&v1[v6]);
  objc_msgSend(*(id *)&v1[v6], "didMoveToParentViewController:", v1);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF7310;
  v16 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "leadingAnchor");

  v19 = objc_msgSend(v1, "view");
  if (!v19)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v20 = v19;
  v21 = objc_msgSend(v19, "leadingAnchor");

  v22 = objc_msgSend(v18, "constraintEqualToAnchor:", v21);
  *(_QWORD *)(v15 + 32) = v22;
  v23 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "trailingAnchor");

  v26 = objc_msgSend(v1, "view");
  if (!v26)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "trailingAnchor");

  v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v15 + 40) = v29;
  v30 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v30)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, "topAnchor");

  v33 = objc_msgSend(v1, "view");
  if (!v33)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v34 = v33;
  v35 = objc_msgSend(v33, "topAnchor");

  v36 = objc_msgSend(v32, "constraintEqualToAnchor:", v35);
  *(_QWORD *)(v15 + 48) = v36;
  v37 = objc_msgSend(*(id *)&v1[v6], "view");
  if (!v37)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "bottomAnchor");

  v40 = objc_msgSend(v1, "view");
  if (v40)
  {
    v41 = v40;
    v42 = (void *)objc_opt_self(NSLayoutConstraint);
    v43 = objc_msgSend(v41, "bottomAnchor");

    v44 = objc_msgSend(v39, "constraintEqualToAnchor:", v43);
    *(_QWORD *)(v15 + 56) = v44;
    v55 = v15;
    specialized Array._endMutation()(v45);
    v46 = v55;
    sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v42, "activateConstraints:", isa, swift_bridgeObjectRelease(v46).n128_f64[0]);

    v48 = (void *)objc_opt_self(NSNotificationCenter);
    v49 = UIAccessibilityVoiceOverStatusDidChangeNotification;
    v50 = UIAccessibilitySwitchControlStatusDidChangeNotification;
    v51 = objc_msgSend(v48, "defaultCenter");
    objc_msgSend(v51, "addObserver:selector:name:object:", v1, "updateSheetPresentationDetents", v49, 0);

    v52 = v50;
    v53 = objc_msgSend(v48, "defaultCenter");
    objc_msgSend(v53, "addObserver:selector:name:object:", v1, "updateSheetPresentationDetents", v52, 0);

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_100564CC8(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  Class isa;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  _QWORD v22[5];
  uint64_t v23;

  v3 = type metadata accessor for CRLCompactScenesViewController_i();
  if (!swift_dynamicCastClass(a1, v3)
    && (objc_msgSend(a1, "isBeingPresented") & 1) == 0
    && (objc_msgSend(a1, "isBeingDismissed") & 1) == 0)
  {
    objc_msgSend(v1, "setModalPresentationStyle:", 1);
    v4 = objc_msgSend(v1, "sheetPresentationController");
    if (v4)
    {
      v5 = v4;
      v6 = sub_100565708();
      sub_1004B8930(0, (unint64_t *)&qword_10140BD30, UISheetPresentationControllerDetent_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "setDetents:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    }
    v8 = objc_msgSend(v1, "sheetPresentationController");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "setLargestUndimmedDetentIdentifier:", UISheetPresentationControllerDetentIdentifierMedium);

    }
    v10 = type metadata accessor for CRLiOSBoardViewController(0);
    v11 = swift_dynamicCastClass(a1, v10);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = a1;
      v14 = objc_msgSend(v12, "presentedViewController");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled") ^ 1;
        v17 = swift_allocObject(&unk_10126C3F8, 32, 7);
        *(_QWORD *)(v17 + 16) = v12;
        *(_QWORD *)(v17 + 24) = v1;
        v22[4] = sub_1005652E4;
        v23 = v17;
        v22[0] = _NSConcreteStackBlock;
        v22[1] = *(_QWORD *)"";
        v22[2] = sub_1005D2FC0;
        v22[3] = &unk_10126C410;
        v18 = _Block_copy(v22);
        v19 = v23;
        v20 = v13;
        v21 = v1;
        objc_msgSend(v15, "dismissViewControllerAnimated:completion:", v16, v18, swift_release(v19).n128_f64[0]);
        _Block_release(v18);

        return;
      }

    }
    objc_msgSend(a1, "presentViewController:animated:completion:", v1, objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled") ^ 1, 0);
  }
}

void sub_100565018(char a1, uint64_t a2, uint64_t a3)
{
  sub_100565024(a1, a2, a3, (uint64_t)&unk_10126C3C0);
}

void sub_100565024(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  double v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  if ((objc_msgSend(v4, "isBeingDismissed") & 1) == 0)
  {
    if (a2)
    {
      v12[4] = a2;
      v13 = a3;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = *(_QWORD *)"";
      v12[2] = sub_1005D2FC0;
      v12[3] = a4;
      v10 = _Block_copy(v12);
      v11 = v13;
      swift_retain(a3);
      *(_QWORD *)&v9 = swift_release(v11).n128_u64[0];
    }
    else
    {
      v10 = 0;
    }
    objc_msgSend(v4, "dismissViewControllerAnimated:completion:", a1 & 1, v10, v9);
    _Block_release(v10);
  }
}

void sub_100565248(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer(a5, a6, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for CRLCompactScenesViewController_i()
{
  return objc_opt_self(_TtC8Freeform32CRLCompactScenesViewController_i);
}

uint64_t sub_1005652A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1005652B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1005652B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1005652E4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "presentViewController:animated:completion:", *(_QWORD *)(v0 + 24), objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled") ^ 1, 0);
}

uint64_t sub_100565330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  void *v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF5560;
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyInputDelete);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v5 = (void *)objc_opt_self(UIKeyCommand);
  v6 = objc_msgSend(v5, "keyCommandWithInput:modifierFlags:action:", v4, 0, "delete:");

  *(_QWORD *)(v1 + 32) = v6;
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "keyCommandWithInput:modifierFlags:action:", v7, 0, "deleteForward:");

  *(_QWORD *)(v1 + 40) = v8;
  specialized Array._endMutation()(v9);
  return v1;
}

uint64_t sub_100565448(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t, __n128);
  __n128 v23;
  char v24;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_1004B804C(&qword_1013E2AC0);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  DynamicTypeSize.init(_:)(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004CB800((uint64_t)v4, &qword_1013E2AC0);
    v12 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    v13 = sub_1004B804C(&qword_1013E2AC8);
    v14 = *(_QWORD *)(v6 + 72);
    v15 = *(unsigned __int8 *)(v6 + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject(v13, v16 + 3 * v14, v15 | 7);
    *(_OWORD *)(v17 + 16) = xmmword_100EF5550;
    v18 = v17 + v16;
    v19 = *(void (**)(void))(v6 + 104);
    ((void (*)(uint64_t, _QWORD, uint64_t))v19)(v18, enum case for DynamicTypeSize.accessibility3(_:), v5);
    v20 = v18 + v14;
    ((void (*)(uint64_t, _QWORD, uint64_t))v19)(v18 + v14, enum case for DynamicTypeSize.accessibility4(_:), v5);
    v27 = v18 + 2 * v14;
    v19();
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v21(v8, v18, v5);
    sub_10056586C();
    LOBYTE(v19) = dispatch thunk of static Equatable.== infix(_:_:)(v8, v11);
    v22 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    v23 = swift_bridgeObjectRetain(v17);
    v22(v8, v5, v23);
    if ((v19 & 1) != 0
      || (v21(v8, v20, v5),
          v24 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v11),
          ((void (*)(char *, uint64_t))v22)(v8, v5),
          (v24 & 1) != 0))
    {
      v12 = 1;
    }
    else
    {
      v21(v8, v27, v5);
      v12 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v11);
      ((void (*)(char *, uint64_t))v22)(v8, v5);
    }
    swift_bridgeObjectRelease(v17);
    swift_setDeallocating(v17);
    swift_arrayDestroy(v18, *(_QWORD *)(v17 + 16), v5);
    swift_deallocClassInstance(v17, 32, 7);
    ((void (*)(char *, uint64_t))v22)(v11, v5);
  }
  return v12 & 1;
}

uint64_t sub_100565708()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;

  v0 = (void *)objc_opt_self(CRLAccessibility);
  if ((objc_msgSend(v0, "isVoiceOverOrSwitchControlEnabled") & 1) != 0
    || objc_msgSend(v0, "isVoiceControlEnabled"))
  {
    v1 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v2 = swift_allocObject(v1, 40, 7);
    *(_OWORD *)(v2 + 16) = xmmword_100EEF400;
    v3 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "largeDetent");
    *(_QWORD *)(v2 + 32) = v3;
  }
  else
  {
    v4 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v2 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v2 + 16) = xmmword_100EF5560;
    v5 = (void *)objc_opt_self(UISheetPresentationControllerDetent);
    *(_QWORD *)(v2 + 32) = objc_msgSend(v5, "mediumDetent");
    v3 = objc_msgSend(v5, "largeDetent");
    *(_QWORD *)(v2 + 40) = v3;
  }
  specialized Array._endMutation()(v3);
  return v2;
}

uint64_t sub_100565828()
{
  uint64_t v0;

  return sub_100D58EA4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100565840()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100565864()
{
  uint64_t v0;

  sub_1005642F4(v0);
}

unint64_t sub_10056586C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E2AD0;
  if (!qword_1013E2AD0)
  {
    v1 = type metadata accessor for DynamicTypeSize(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DynamicTypeSize, v1);
    atomic_store(result, (unint64_t *)&qword_1013E2AD0);
  }
  return result;
}

uint64_t sub_1005658B4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005658F8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = objc_msgSend(*(id *)(v0 + 112), "allObjects");
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Swift.AnyObject + 8);

  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease_n(v2, 2);
    return;
  }
  if (v2 < 0)
    v14 = v2;
  else
    v14 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v3)
    goto LABEL_26;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = _swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        v6 = *(_QWORD *)(v2 + 8 * v4 + 32);
        swift_unknownObjectRetain(v6);
      }
      ObjectType = swift_getObjectType(v6);
      v8 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLAssetUploadObserver);
      if (v8)
        v9 = v8;
      else
        v9 = 0;
      if (v8)
        v10 = v6;
      else
        v10 = 0;
      if (v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_100D1099C(0, v5[2] + 1, 1, v5);
        v12 = v5[2];
        v11 = v5[3];
        if (v12 >= v11 >> 1)
          v5 = sub_100D1099C((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
        v5[2] = v12 + 1;
        v13 = &v5[2 * v12];
        v13[4] = v10;
        v13[5] = v9;
      }
      else
      {
        swift_unknownObjectRelease(v6);
      }
      ++v4;
    }
    while (v3 != v4);
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_100565AAC()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLAssetUploadObserverManager()
{
  return objc_opt_self(_TtC8FreeformP33_D1782507B9233C65FF7B9A31A1D0152129CRLAssetUploadObserverManager);
}

char *sub_100565AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  unint64_t v36;
  unint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  void *v57;
  uint64_t inited;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  double *v66;
  char v67[152];
  _BYTE v68[24];

  v64 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v63 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v62 = (char *)&v56 - v10;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(v3 + 48);
  *(_QWORD *)v15 = v16;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v11, v13);
  v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if ((v16 & 1) == 0)
    goto LABEL_22;
  swift_beginAccess(v3 + 24, v68, 33, 0);
  v15 = (char *)sub_100565FAC(a2, a1, a3);
  swift_endAccess(v68);
  if (*((_QWORD *)v15 + 2))
  {
    v59 = a2;
    v60 = a3;
    if (qword_1013DD870 != -1)
      goto LABEL_23;
    while (1)
    {
      swift_beginAccess(&static OS_os_log.dataSync, v68, 0, 0);
      v18 = (void *)static OS_os_log.dataSync;
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v19, v67);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      v20 = *((_QWORD *)v15 + 2);
      v65 = v15;
      if (!v20)
        break;
      v66 = _swiftEmptyArrayStorage;
      v57 = v18;
      v21 = v18;
      sub_1006006EC(0, v20, 0);
      v22 = sub_100CE0488(v15);
      v24 = v23;
      v26 = v25 & 1;
      v61 = v15 + 56;
      while ((v22 & 0x8000000000000000) == 0 && v22 < 1 << v15[32])
      {
        if (((*(_QWORD *)&v61[((unint64_t)v22 >> 3) & 0xFFFFFFFFFFFFF8] >> v22) & 1) == 0)
          goto LABEL_20;
        if (*((_DWORD *)v15 + 9) != (_DWORD)v24)
          goto LABEL_21;
        v27 = *((_QWORD *)v15 + 6) + *(_QWORD *)(v7 + 72) * v22;
        v28 = v62;
        v29 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v62, v27, v64);
        v30 = v63;
        v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v63, v28, v29);
        v32 = UUID.uuidString.getter(v31);
        v34 = v33;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v30, v29);
        v35 = v66;
        if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0)
        {
          sub_1006006EC(0, *((_QWORD *)v35 + 2) + 1, 1);
          v35 = v66;
        }
        v37 = *((_QWORD *)v35 + 2);
        v36 = *((_QWORD *)v35 + 3);
        if (v37 >= v36 >> 1)
        {
          sub_1006006EC(v36 > 1, v37 + 1, 1);
          v35 = v66;
        }
        *((_QWORD *)v35 + 2) = v37 + 1;
        v38 = &v35[2 * v37];
        *((_QWORD *)v38 + 4) = v32;
        *((_QWORD *)v38 + 5) = v34;
        v15 = v65;
        v39 = sub_1005C3B08(v22, v24, v26 & 1, v65);
        v22 = v39;
        v24 = v40;
        v26 = v41 & 1;
        if (!--v20)
        {
          sub_100503494(v39, v40, v41 & 1);
          v18 = v57;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      swift_once(&qword_1013DD870, sub_100A059E0);
    }
    v42 = v18;
    v35 = _swiftEmptyArrayStorage;
LABEL_17:
    v43 = (_QWORD *)inited;
    v43[7] = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v44 = sub_1004CBA30((unint64_t *)&unk_1013F6610, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    v43[8] = v44;
    v43[4] = v35;
    v45 = UUID.uuidString.getter(v44);
    v47 = v46;
    v43[12] = &type metadata for String;
    v48 = sub_1004CFC2C();
    v43[13] = v48;
    v43[9] = v45;
    v43[10] = v47;
    v49 = UUID.uuidString.getter(v48);
    v43[17] = &type metadata for String;
    v43[18] = v48;
    v43[14] = v49;
    v43[15] = v50;
    v52 = static os_log_type_t.default.getter(v51);
    sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v52, "removed from asset upload tracker: assets: %{public}@, item: %{public}@, board: %{public}@", 90, 2, (uint64_t)v43);
    swift_setDeallocating(v43);
    v53 = v43[2];
    v54 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v43 + 4, v53, v54);

    return v65;
  }
  return v15;
}

void *sub_100565FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v30;
  uint64_t (*v31)();
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  __n128 v34;
  __n128 v35;
  uint64_t (*v36)();
  __n128 v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[4];

  v4 = v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - v16;
  if (!*(_QWORD *)(a2 + 16))
    return &_swiftEmptySetSingleton;
  v18 = *v3;
  if (!*(_QWORD *)(*v4 + 16))
    return &_swiftEmptySetSingleton;
  v19 = sub_100843264(a3);
  if ((v20 & 1) == 0)
    return &_swiftEmptySetSingleton;
  v42 = a1;
  v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  if (!*(_QWORD *)(v21 + 16))
    return &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19));
  v22 = sub_100842EFC(v42);
  if ((v23 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return &_swiftEmptySetSingleton;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_bridgeObjectRetain_n(v24, 2);
  swift_bridgeObjectRelease();
  v25 = sub_100CDEC3C(a2, v24);
  v26 = v25;
  v27 = *(_QWORD *)(v25 + 16);
  if (!v27)
  {
    swift_release(v25);
    goto LABEL_11;
  }
  if (v27 <= *(_QWORD *)(v24 + 16) >> 3)
  {
    v44[0] = v24;
    sub_100DB6134(v25);
    v28 = (_QWORD *)v44[0];
  }
  else
  {
    v28 = sub_100DB730C(v25, v24);
  }
  if (v28[2])
  {
    sub_1004E1B3C(a3, (uint64_t)v14);
    v31 = sub_100CF9B70(v44, (uint64_t)v14);
    if (*v30)
    {
      v32 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v42, v8);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
      v43 = *v32;
      *v32 = 0x8000000000000000;
      sub_1008270CC((uint64_t)v28, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
      *v32 = v43;
      v34 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v34);
    }
    else
    {
      v35 = swift_bridgeObjectRelease();
    }
    ((void (*)(_QWORD *, _QWORD, __n128))v31)(v44, 0, v35);
    sub_1004BBB8C((uint64_t)v14);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1004E1B3C(a3, (uint64_t)v17);
    v36 = sub_100CF9B70(v44, (uint64_t)v17);
    if (*v38)
    {
      sub_100847654(v42);
      v37 = swift_bridgeObjectRelease();
    }
    ((void (*)(_QWORD *, _QWORD, __n128))v36)(v44, 0, v37);
    sub_1004BBB8C((uint64_t)v17);
    v39 = *v4;
    if (!*(_QWORD *)(*v4 + 16)
      || (v40 = sub_100843264(a3), (v41 & 1) == 0)
      || !*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v40) + 16))
    {
      sub_100847574(a3);
      swift_bridgeObjectRelease();
    }
  }
  return (void *)v26;
}

double sub_1005662A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  __n128 v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD aBlock[5];
  uint64_t v43;

  v4 = v3;
  v32 = a2;
  v33 = a3;
  v37 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  __chkstk_darwin(v7);
  v34 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(v3 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v32, v13);
  sub_1004E1B3C(v33, (uint64_t)v12);
  v17 = *(unsigned __int8 *)(v14 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = (v15 + v19 + v18) & ~v19;
  v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_10126C690, v21 + 8, v17 | v19 | 7);
  *(_QWORD *)(v22 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22 + v18, v16, v13);
  sub_1004DB5FC((uint64_t)v12, v22 + v20);
  *(_QWORD *)(v22 + v21) = v4;
  aBlock[4] = sub_1005681E8;
  v43 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_10126C6A8;
  v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a1);
  v24 = swift_retain(v4);
  v25 = v34;
  static DispatchQoS.unspecified.getter(v24);
  v41 = _swiftEmptyArrayStorage;
  v26 = sub_1004CB65C();
  v27 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v28 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  v30 = v36;
  v29 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v27, v28, v37, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v25, v30, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v39);
  *(_QWORD *)&result = swift_release(v43).n128_u64[0];
  return result;
}

uint64_t sub_10056657C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t inited;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD v58[3];
  char v59[152];
  char v60[8];

  v57 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v57 - 8);
  v9 = __chkstk_darwin(v57);
  v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v9);
  v55 = (char *)&v48 - v12;
  if (*(_QWORD *)(a1 + 16))
  {
    if (qword_1013DD870 != -1)
      goto LABEL_21;
    while (1)
    {
      v51 = a4;
      v52 = a2;
      swift_beginAccess(&static OS_os_log.dataSync, v60, 0, 0);
      v13 = (void *)static OS_os_log.dataSync;
      v14 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v14, v59);
      *(_OWORD *)(inited + 16) = xmmword_100EF5550;
      v15 = *(_QWORD *)(a1 + 16);
      if (!v15)
        break;
      v49 = a3;
      v58[0] = _swiftEmptyArrayStorage;
      v48 = v13;
      v16 = v13;
      a4 = v58;
      sub_1006006EC(0, v15, 0);
      a2 = sub_100CE0488(a1);
      v18 = v17;
      a3 = v19 & 1;
      v54 = a1 + 56;
      v53 = a1;
      while ((a2 & 0x8000000000000000) == 0 && a2 < 1 << *(_BYTE *)(a1 + 32))
      {
        if (((*(_QWORD *)(v54 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_19;
        if (*(_DWORD *)(a1 + 36) != (_DWORD)v18)
          goto LABEL_20;
        v20 = *(_QWORD *)(a1 + 48) + *(_QWORD *)(v8 + 72) * a2;
        v21 = v55;
        v22 = v57;
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v55, v20, v57);
        v23 = v56;
        v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v56, v21, v22);
        v25 = UUID.uuidString.getter(v24);
        v27 = v26;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v22);
        a4 = (_QWORD *)v58[0];
        if ((swift_isUniquelyReferenced_nonNull_native(v58[0]) & 1) == 0)
        {
          sub_1006006EC(0, a4[2] + 1, 1);
          a4 = (_QWORD *)v58[0];
        }
        v29 = a4[2];
        v28 = a4[3];
        if (v29 >= v28 >> 1)
        {
          sub_1006006EC(v28 > 1, v29 + 1, 1);
          a4 = (_QWORD *)v58[0];
        }
        a4[2] = v29 + 1;
        v30 = &a4[2 * v29];
        v30[4] = v25;
        v30[5] = v27;
        a1 = v53;
        v31 = sub_1005C3B08(a2, v18, a3 & 1, v53);
        a2 = v31;
        v18 = v32;
        a3 = v33 & 1;
        if (!--v15)
        {
          sub_100503494(v31, v32, v33 & 1);
          a3 = v49;
          v13 = v48;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      swift_once(&qword_1013DD870, sub_100A059E0);
    }
    v34 = v13;
    a4 = _swiftEmptyArrayStorage;
LABEL_16:
    v35 = (_QWORD *)inited;
    v35[7] = sub_1004B804C((uint64_t *)&unk_1013E4970);
    v36 = sub_1004CBA30((unint64_t *)&unk_1013F6610, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    v35[8] = v36;
    v35[4] = a4;
    v37 = v52;
    v38 = UUID.uuidString.getter(v36);
    v40 = v39;
    v35[12] = &type metadata for String;
    v41 = sub_1004CFC2C();
    v35[13] = v41;
    v35[9] = v38;
    v35[10] = v40;
    v42 = UUID.uuidString.getter(v41);
    v35[17] = &type metadata for String;
    v35[18] = v41;
    v35[14] = v42;
    v35[15] = v43;
    v45 = static os_log_type_t.default.getter(v44);
    sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v45, "adding to asset upload tracker: assets: %{public}@, item: %{public}@, board: %{public}@", 87, 2, (uint64_t)v35);
    swift_setDeallocating(v35);
    v46 = v35[2];
    v47 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v35 + 4, v46, v47);

    swift_beginAccess(v51 + 3, v58, 33, 0);
    sub_1005669C0(v37, a1, a3);
    return swift_endAccess(v58);
  }
  return result;
}

double sub_1005669C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  unint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  __n128 v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16))
  {
    v16 = *v3;
    if (*(_QWORD *)(*v4 + 16) && (v17 = sub_100843264(a3), (v18 & 1) != 0))
    {
      v19 = *(_QWORD **)(*(_QWORD *)(v16 + 56) + 8 * v17);
      v13 = swift_bridgeObjectRetain(v19);
      if (!v19[2])
        goto LABEL_9;
    }
    else
    {
      v19 = &_swiftEmptyDictionarySingleton;
      if (!*((_QWORD *)&_swiftEmptyDictionarySingleton + 2))
        goto LABEL_9;
    }
    v20 = sub_100842EFC(a1);
    if ((v21 & 1) != 0)
    {
      v22 = *(void **)(v19[7] + 8 * v20);
      v13 = swift_bridgeObjectRetain(v22);
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a1, v11, v13);
      swift_bridgeObjectRetain(a2);
      v23 = sub_100CA03B4((uint64_t)v22, a2);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
      v31 = (uint64_t)v19;
      sub_1008270CC(v23, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
      v25 = v31;
      v26 = swift_bridgeObjectRelease(0x8000000000000000);
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v15, v11, v26);
      sub_1004E1B3C(a3, (uint64_t)v10);
      swift_bridgeObjectRetain(v25);
      v27 = swift_isUniquelyReferenced_nonNull_native(*v4);
      v31 = *v4;
      *v4 = 0x8000000000000000;
      sub_1008270C0(v25, (uint64_t)v10, v27);
      v28 = *v4;
      *v4 = v31;
      swift_bridgeObjectRelease(v28);
      sub_1004BBB8C((uint64_t)v10);
      v13.n128_u64[0] = swift_bridgeObjectRelease(v25).n128_u64[0];
      return v13.n128_f64[0];
    }
LABEL_9:
    v22 = &_swiftEmptySetSingleton;
    goto LABEL_10;
  }
  return v13.n128_f64[0];
}

double sub_100566BB8()
{
  return sub_100567258((uint64_t)sub_100568104, (uint64_t)&unk_10126C658);
}

void sub_100566BCC(uint64_t a1)
{
  _BYTE v2[24];

  if (*(_BYTE *)(a1 + 40) == 1)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"willApplySaveResults()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 93, "CRLAssetUploadTracker.willApplySaveResults called multiple times before a call to didApplySaveResults", 101, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willApplySaveResults()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2u, 93, (uint64_t)"CRLAssetUploadTracker.willApplySaveResults called multiple times before a call to didApplySaveResults", 101, 2u);
  }
  swift_beginAccess(a1 + 32, v2, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"willApplySaveResults()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 94, "CRLAssetUploadTracker.willApplySaveResults called while assetsThatJustFinishedUploading is not empty", 100, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willApplySaveResults()", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2u, 94, (uint64_t)"CRLAssetUploadTracker.willApplySaveResults called while assetsThatJustFinishedUploading is not empty", 100, 2u);
  }
  *(_BYTE *)(a1 + 40) = 1;
}

double sub_100566D44(uint64_t a1)
{
  return sub_100566EDC(a1, (uint64_t)&unk_10126C618, (uint64_t)sub_1005680FC, (uint64_t)&unk_10126C630);
}

double sub_100566D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double result;
  _BYTE v9[24];

  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"serverSyncedBoardItemLocalRecordDidMerge(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 100, "CRLAssetUploadTracker.serverSyncedBoardItemLocalRecordDidMerge called without ongoing apply save results", 104, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"serverSyncedBoardItemLocalRecordDidMerge(_:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2u, 100, (uint64_t)"CRLAssetUploadTracker.serverSyncedBoardItemLocalRecordDidMerge called without ongoing apply save results", 104, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs);
  v5 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  v6 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
  v7 = sub_100565AF0(v4, v5, v6);
  swift_beginAccess(a1 + 32, v9, 33, 0);
  sub_1005669C0(v5, (uint64_t)v7, v6);
  swift_endAccess(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100566EC0(uint64_t a1)
{
  return sub_100566EDC(a1, (uint64_t)&unk_10126C5C8, (uint64_t)sub_1005680C4, (uint64_t)&unk_10126C5E0);
}

double sub_100566EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  _QWORD v24[2];
  uint64_t v25;
  double *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v8 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(_QWORD *)(v8 + 48);
  v17 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v17 + 16) = v8;
  *(_QWORD *)(v17 + 24) = a1;
  aBlock[4] = a3;
  v28 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = a4;
  v18 = _Block_copy(aBlock);
  swift_retain(v8);
  v19 = swift_retain(a1);
  static DispatchQoS.unspecified.getter(v19);
  v26 = _swiftEmptyArrayStorage;
  v20 = sub_1004CB65C();
  v21 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v22 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v21, v22, v10, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

double sub_1005670B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double result;
  _BYTE v11[24];
  _BYTE v12[24];

  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"serverSyncedBoardItemRemoteRecordDidMerge(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2, 110, "CRLAssetUploadTracker.serverSyncedBoardItemRemoteRecordDidMerge called without ongoing apply save results", 105, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"serverSyncedBoardItemRemoteRecordDidMerge(_:)", 45, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLAssetUploadTracker.swift", 86, 2u, 110, (uint64_t)"CRLAssetUploadTracker.serverSyncedBoardItemRemoteRecordDidMerge called without ongoing apply save results", 105, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  v4 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_assets);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_assets, v12, 0, 0);
  v5 = swift_bridgeObjectRetain(*v4);
  v6 = sub_100A651C8(v5);
  v7 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  v8 = a2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
  v9 = sub_100565AF0(v6, v7, v8);
  swift_bridgeObjectRelease();
  swift_beginAccess(a1 + 32, v11, 33, 0);
  sub_1005669C0(v7, (uint64_t)v9, v8);
  swift_endAccess(v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_100567244()
{
  return sub_100567258((uint64_t)sub_100567EC4, (uint64_t)&unk_10126C518);
}

double sub_100567258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  double *v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v2 + 48);
  aBlock[4] = a1;
  v22 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = a2;
  v13 = _Block_copy(aBlock);
  v14 = swift_retain(v2);
  static DispatchQoS.unspecified.getter(v14);
  v20 = _swiftEmptyArrayStorage;
  v15 = sub_1004CB65C();
  v16 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v17 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

void sub_100567404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v10[24];

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + 32, v10, 1, 0);
  v5 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v5 + 16))
  {
    *(_QWORD *)(a1 + 32) = _swiftEmptyDictionarySingleton;
    v6 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
    v7 = (_QWORD *)swift_allocObject(&unk_10126C550, 48, 7);
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = a1;
    v7[5] = v5;
    swift_retain(a1);
    v8 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013E2D00, (uint64_t)v7);
    swift_release(v8);
  }
  *(_BYTE *)(a1 + 40) = 0;
}

uint64_t sub_1005674FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;

  v5[6] = a4;
  v5[7] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E01F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[8] = swift_task_alloc(v6);
  v5[9] = swift_task_alloc(v6);
  return swift_task_switch(sub_100567568, 0, 0);
}

uint64_t sub_100567568()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
  *(_QWORD *)(v0 + 80) = v1;
  return swift_task_switch(sub_100567584, v1, 0);
}

uint64_t sub_100567584()
{
  uint64_t v0;
  uint64_t v1;

  sub_1005658F8();
  *(_QWORD *)(v0 + 88) = v1;
  return swift_task_switch(sub_1005675C4, 0, 0);
}

uint64_t sub_1005675C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (__int128 *)(v1 + 32);
    v4 = type metadata accessor for TaskPriority(0);
    v5 = *(_QWORD *)(v4 - 8);
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v28 = v5;
    v29 = v4;
    while (1)
    {
      v10 = *(_QWORD *)(v0 + 64);
      v9 = *(_QWORD *)(v0 + 72);
      v11 = *(_QWORD *)(v0 + 56);
      v30 = *v3;
      v27(v9, 1, 1, v4);
      v12 = swift_allocObject(&unk_10126C578, 56, 7);
      *(_QWORD *)(v12 + 16) = 0;
      v13 = (uint64_t *)(v12 + 16);
      *(_QWORD *)(v12 + 24) = 0;
      *(_QWORD *)(v12 + 32) = v11;
      *(_OWORD *)(v12 + 40) = v30;
      sub_1004DAEB4(v9, v10);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
      swift_unknownObjectRetain_n(v30, 2);
      v14 = swift_bridgeObjectRetain(v11);
      v15 = *(_QWORD *)(v0 + 64);
      if ((_DWORD)v10 == 1)
      {
        sub_10056805C(*(_QWORD *)(v0 + 64));
        v16 = 0;
        v17 = *v13;
        if (!*v13)
          goto LABEL_9;
      }
      else
      {
        v23 = TaskPriority.rawValue.getter(v14);
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
        v16 = v23;
        v17 = *v13;
        if (!*v13)
        {
LABEL_9:
          v20 = 0;
          v22 = 0;
          goto LABEL_10;
        }
      }
      v18 = *(_QWORD *)(v12 + 24);
      ObjectType = swift_getObjectType(v17);
      swift_unknownObjectRetain(v17);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v18);
      v22 = v21;
      swift_unknownObjectRelease(v17);
LABEL_10:
      v24 = swift_allocObject(&unk_10126C5A0, 32, 7);
      *(_QWORD *)(v24 + 16) = &unk_1013E2D10;
      *(_QWORD *)(v24 + 24) = v12;
      if (v22 | v20)
      {
        v6 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v20;
        *(_QWORD *)(v0 + 40) = v22;
      }
      else
      {
        v6 = 0;
      }
      v7 = *(_QWORD *)(v0 + 72);
      v8 = swift_task_create(v16 | 0x1000, v6, (char *)&type metadata for () + 8, &unk_1013FE730);
      swift_unknownObjectRelease(v30);
      swift_release(v8);
      sub_10056805C(v7);
      ++v3;
      --v2;
      v5 = v28;
      v4 = v29;
      if (!v2)
      {
        v1 = *(_QWORD *)(v0 + 88);
        break;
      }
    }
  }
  swift_bridgeObjectRelease(v1);
  v25 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10056780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for UUID(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E2D18) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[7] = swift_task_alloc(v8);
  v5[8] = swift_task_alloc(v8);
  v9 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5[9] = v9;
  v5[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E2D20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[11] = swift_task_alloc(v10);
  v5[12] = swift_task_alloc(v10);
  return swift_task_switch(sub_1005678F8, 0, 0);
}

void sub_1005678F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;

  v55 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v52 = v2 + 64;
  v3 = -1 << *(_BYTE *)(v2 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v53 = (unint64_t)(63 - v3) >> 6;
  v54 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(v2);
  v56 = 0;
  if (!v5)
    goto LABEL_7;
LABEL_5:
  v6 = __clz(__rbit64(v5));
  v7 = (v5 - 1) & v5;
  v8 = v6 | (v56 << 6);
LABEL_6:
  v9 = *(_QWORD *)(v0 + 88);
  sub_1004E1B3C(*(_QWORD *)(v54 + 48) + *(_QWORD *)(v55 + 72) * v8, v9);
  v10 = *(_QWORD *)(v54 + 56);
  v11 = sub_1004B804C(&qword_1013E2D28);
  v12 = *(_QWORD *)(v10 + 8 * v8);
  *(_QWORD *)(v9 + *(int *)(v11 + 48)) = v12;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
  swift_bridgeObjectRetain(v12);
  while (1)
  {
    v18 = *(_QWORD *)(v0 + 96);
    sub_1004C4938(*(_QWORD *)(v0 + 88), v18, &qword_1013E2D20);
    v19 = sub_1004B804C(&qword_1013E2D28);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19);
    v21 = *(_QWORD *)(v0 + 96);
    if (v20 == 1)
    {
      v48 = *(_QWORD *)(v0 + 80);
      v47 = *(_QWORD *)(v0 + 88);
      v50 = *(_QWORD *)(v0 + 56);
      v49 = *(_QWORD *)(v0 + 64);
      v51 = *(_QWORD *)(v0 + 48);
      swift_release(*(_QWORD *)(v0 + 16));
      swift_task_dealloc(v21);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      swift_task_dealloc(v49);
      swift_task_dealloc(v50);
      swift_task_dealloc(v51);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v57 = v7;
    v22 = *(_QWORD *)(v21 + *(int *)(v19 + 48));
    sub_1004DB5FC(v21, *(_QWORD *)(v0 + 80));
    v23 = 0;
    v24 = *(_QWORD *)(v22 + 64);
    v58 = v22 + 64;
    v25 = -1 << *(_BYTE *)(v22 + 32);
    v26 = -v25 < 64 ? ~(-1 << -(char)v25) : -1;
    v27 = v26 & v24;
    v59 = (unint64_t)(63 - v25) >> 6;
    if ((v26 & v24) == 0)
      break;
    while (1)
    {
      v32 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      v33 = v32 | (v23 << 6);
LABEL_33:
      v34 = *(_QWORD *)(v0 + 56);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(v1 + 16))(v34, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v1 + 72) * v33, *(_QWORD *)(v0 + 32));
      v35 = *(_QWORD *)(v22 + 56);
      v36 = sub_1004B804C(&qword_1013E2D30);
      v37 = *(_QWORD *)(v35 + 8 * v33);
      *(_QWORD *)(v34 + *(int *)(v36 + 48)) = v37;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v34, 0, 1, v36);
      swift_bridgeObjectRetain(v37);
LABEL_52:
      v43 = *(_QWORD *)(v0 + 64);
      sub_1004C4938(*(_QWORD *)(v0 + 56), v43, &qword_1013E2D18);
      v44 = sub_1004B804C(&qword_1013E2D30);
      v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44);
      v46 = *(_QWORD *)(v0 + 80);
      if (v45 == 1)
        break;
      v28 = *(_QWORD *)(v0 + 48);
      v29 = *(_QWORD *)(v0 + 32);
      v30 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + *(int *)(v44 + 48));
      (*(void (**)(uint64_t))(v1 + 32))(v28);
      sub_100CE4B9C(v28, v46);
      v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(uint64_t, uint64_t, __n128))(v1 + 8))(v28, v29, v31);
      if (!v27)
        goto LABEL_34;
    }
    swift_release(v22);
    sub_1004BBB8C(v46);
    v5 = v57;
    if (v57)
      goto LABEL_5;
LABEL_7:
    v13 = v56 + 1;
    if (__OFADD__(v56, 1))
      goto LABEL_57;
    if (v13 < v53)
    {
      v14 = *(_QWORD *)(v52 + 8 * v13);
      if (v14)
        goto LABEL_10;
      v15 = v56 + 2;
      ++v56;
      if (v13 + 1 < v53)
      {
        v14 = *(_QWORD *)(v52 + 8 * v15);
        if (v14)
          goto LABEL_13;
        v56 = v13 + 1;
        if (v13 + 2 < v53)
        {
          v14 = *(_QWORD *)(v52 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_10;
          }
          v15 = v13 + 3;
          v56 = v13 + 2;
          if (v13 + 3 < v53)
          {
            v14 = *(_QWORD *)(v52 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v13 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_59;
                if (v13 >= v53)
                {
                  v56 = v53 - 1;
                  goto LABEL_24;
                }
                v14 = *(_QWORD *)(v52 + 8 * v13);
                ++v15;
                if (v14)
                  goto LABEL_10;
              }
            }
LABEL_13:
            v13 = v15;
LABEL_10:
            v7 = (v14 - 1) & v14;
            v8 = __clz(__rbit64(v14)) + (v13 << 6);
            v56 = v13;
            goto LABEL_6;
          }
        }
      }
    }
LABEL_24:
    v16 = *(_QWORD *)(v0 + 88);
    v17 = sub_1004B804C(&qword_1013E2D28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v7 = 0;
  }
LABEL_34:
  v38 = v23 + 1;
  if (!__OFADD__(v23, 1))
  {
    if (v38 < v59)
    {
      v39 = *(_QWORD *)(v58 + 8 * v38);
      if (v39)
      {
LABEL_37:
        v27 = (v39 - 1) & v39;
        v33 = __clz(__rbit64(v39)) + (v38 << 6);
        v23 = v38;
        goto LABEL_33;
      }
      v40 = v23 + 2;
      ++v23;
      if (v38 + 1 < v59)
      {
        v39 = *(_QWORD *)(v58 + 8 * v40);
        if (v39)
        {
LABEL_40:
          v38 = v40;
          goto LABEL_37;
        }
        v23 = v38 + 1;
        if (v38 + 2 < v59)
        {
          v39 = *(_QWORD *)(v58 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_37;
          }
          v40 = v38 + 3;
          v23 = v38 + 2;
          if (v38 + 3 < v59)
          {
            v39 = *(_QWORD *)(v58 + 8 * v40);
            if (v39)
              goto LABEL_40;
            while (1)
            {
              v38 = v40 + 1;
              if (__OFADD__(v40, 1))
                goto LABEL_58;
              if (v38 >= v59)
                break;
              v39 = *(_QWORD *)(v58 + 8 * v38);
              ++v40;
              if (v39)
                goto LABEL_37;
            }
            v23 = v59 - 1;
          }
        }
      }
    }
    v41 = *(_QWORD *)(v0 + 56);
    v42 = sub_1004B804C(&qword_1013E2D30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 1, 1, v42);
    v27 = 0;
    goto LABEL_52;
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
}

uint64_t sub_100567E68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for CRLAssetUploadTracker()
{
  return objc_opt_self(_TtC8Freeform21CRLAssetUploadTracker);
}

void sub_100567EC4()
{
  uint64_t v0;

  sub_100567404(v0);
}

uint64_t sub_100567ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100567EDC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100567EE4()
{
  return sub_100567F8C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100567EFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013E2CFC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_1005674FC(a1, v4, v5, v7, v6);
}

uint64_t sub_100567F74()
{
  return sub_100567F8C((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_unknownObjectRelease, 56);
}

uint64_t sub_100567F8C(void (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t a3)
{
  _QWORD *v3;

  swift_unknownObjectRelease(v3[2]);
  a1(v3[4]);
  a2(v3[5]);
  return swift_deallocObject(v3, a3, 7);
}

uint64_t sub_100567FDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013E2D0C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CFD00;
  return sub_10056780C(a1, v4, v5, v6, v7);
}

uint64_t sub_10056805C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E01F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10056809C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1005680C4()
{
  uint64_t v0;

  return sub_1005670B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1005680D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1005680FC()
{
  uint64_t v0;

  return sub_100566D60(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100568104()
{
  uint64_t v0;

  sub_100566BCC(v0);
}

uint64_t sub_10056810C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, __n128);
  uint64_t v14;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v5 + v7) & ~v7;
  v9 = v3 | v7 | 7;
  v10 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = v0 + v4;
  v13 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
  v13(v12, v1, v11);
  ((void (*)(uint64_t, uint64_t))v13)(v0 + v8, v1);
  v14 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + *(int *)(v14 + 20) + 8));
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v9);
}

uint64_t sub_1005681E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_10056657C(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, *(_QWORD **)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100568280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100568324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  NSString v4;
  id v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "objectForKey:", v4);

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)(v10, v5);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1004D28A4((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    v6 = type metadata accessor for Date(0);
    v7 = swift_dynamicCast(a1, v11, (char *)&type metadata for Any + 8, v6, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v7 ^ 1u, 1, v6);
  }
  else
  {
    sub_1004CB800((uint64_t)v11, &qword_1013E0230);
    v9 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_100568454()
{
  uint64_t v0;
  id v1;
  __n128 v2;
  uint64_t v3;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  _BYTE v10[24];

  if (qword_1013DD730 != -1)
    swift_once(&qword_1013DD730, sub_100A01F88);
  swift_beginAccess(&static OS_os_log.crlAnalytics, v10, 0, 0);
  v1 = (id)static OS_os_log.crlAnalytics;
  v3 = static os_log_type_t.default.getter(v2);
  sub_100A06EBC((uint64_t)v1, &_mh_execute_header, v3, "Retrieving userID value from iCloud KVS", 39, 2, (uint64_t)_swiftEmptyArrayStorage);

  v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "stringForKey:", v6);

  if (!v7)
    return 0;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);

  return v8;
}

uint64_t sub_10056858C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  __n128 v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  _BYTE v17[24];

  if (qword_1013DD730 != -1)
    swift_once(&qword_1013DD730, sub_100A01F88);
  swift_beginAccess(&static OS_os_log.crlAnalytics, v17, 0, 0);
  v3 = (id)static OS_os_log.crlAnalytics;
  v5 = static os_log_type_t.default.getter(v4);
  sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v5, "Retrieving lastUserIDRotationDate value from iCloud KVS", 55, 2, (uint64_t)_swiftEmptyArrayStorage);

  v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
  if (v6)
  {
    v7 = v6;
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v7, "objectForKey:", v8);

    if (v9)
    {
      _bridgeAnyObjectToAny(_:)(v14, v9);
      swift_unknownObjectRelease(v9);
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    sub_1004D28A4((uint64_t)v14, (uint64_t)&v15);
    if (*((_QWORD *)&v16 + 1))
    {
      v10 = type metadata accessor for Date(0);
      v11 = swift_dynamicCast(a1, &v15, (char *)&type metadata for Any + 8, v10, 6);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, v11 ^ 1u, 1, v10);
    }
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  sub_1004CB800((uint64_t)&v15, &qword_1013E0230);
  v13 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
}

uint64_t CRLAnalyticsDataStore.supportsEndToEndEncryption.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption, v3, 0, 0);
  return *v1;
}

char *CRLAnalyticsDataStore.__allocating_init(queue:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CRLAnalyticsDataStore.init(queue:)(a1);
}

char *CRLAnalyticsDataStore.init(queue:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void **v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void *v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  objc_super v40;

  v1[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption] = 0;
  v3 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults;
  v4 = (void *)objc_opt_self(NSUserDefaults);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "standardUserDefaults");
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvsSetAttempts] = 0;
  v6 = &v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v5[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);

  v40.receiver = v5;
  v40.super_class = (Class)type metadata accessor for CRLAnalyticsDataStore(0);
  v9 = objc_msgSendSuper2(&v40, "init");
  v10 = (void *)objc_opt_self(NSUbiquitousKeyValueStore);
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, "crl_encryptedKVS");
  v13 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs;
  v14 = *(void **)&v11[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs];
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs] = v12;

  if (*(_QWORD *)&v11[v13])
  {
    v15 = (void *)objc_opt_self(NSNotificationCenter);
    v16 = objc_msgSend(v15, "defaultCenter");
    v17 = *(void **)&v11[v13];
    v18 = a1;
    v19 = swift_allocObject(&unk_10126C6F8, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    v38 = sub_10056AB4C;
    v39 = v19;
    v34 = _NSConcreteStackBlock;
    v35 = *(_QWORD *)"";
    v36 = sub_100568280;
    v37 = &unk_10126C710;
    v20 = _Block_copy(&v34);
    v21 = v39;
    v22 = v17;
    v23 = v18;
    v24 = objc_msgSend(v16, "addObserverForName:object:queue:usingBlock:", NSUbiquitousKeyValueStoreDidChangeExternallyNotification, v22, v23, v20, swift_release(v21).n128_f64[0]);
    _Block_release(v20);
    swift_unknownObjectRelease(v24);

    v25 = objc_msgSend(v15, "defaultCenter");
    v26 = swift_allocObject(&unk_10126C6F8, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16);
    v38 = sub_10056AB6C;
    v39 = v26;
    v34 = _NSConcreteStackBlock;
    v35 = *(_QWORD *)"";
    v36 = sub_100568280;
    v37 = &unk_10126C738;
    v27 = _Block_copy(&v34);
    v28 = v39;
    v29 = v23;
    v30 = objc_msgSend(v25, "addObserverForName:object:queue:usingBlock:", CKAccountChangedNotification, 0, v29, v27, swift_release(v28).n128_f64[0]);
    _Block_release(v27);
    swift_unknownObjectRelease(v30);

    a1 = v18;
    sub_10056A4E8();
    sub_100568F98(0);
  }
  else
  {
    if (qword_1013DD730 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, &v34, 0, 0);
    v31 = (id)static OS_os_log.crlAnalytics;
    v32 = static os_log_type_t.error.getter(v31);
    sub_100A06EBC((uint64_t)v31, &_mh_execute_header, v32, "Unable to initialize CRLAnalyticsDataStore due to nil iCloud KVS Store", 70, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  return v11;
}

uint64_t type metadata accessor for CRLAnalyticsDataStore(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E2D90;
  if (!qword_1013E2D90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLAnalyticsDataStore);
  return result;
}

void sub_100568BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1005698F4(a1);

  }
}

void sub_100568C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10056A4E8();

  }
}

id CRLAnalyticsDataStore.__deallocating_deinit()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  objc_super v5;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v2, "removeObserver:name:object:", v0, NSUbiquitousKeyValueStoreDidChangeExternallyNotification, *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs]);

  v3 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v3, "removeObserver:name:object:", v0, CKAccountChangedNotification, 0);

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLAnalyticsDataStore(0);
  return objc_msgSendSuper2(&v5, "dealloc");
}

void sub_100568DF8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  __n128 v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
  if (v1)
  {
    v2 = qword_1013DD730;
    v3 = v1;
    if (v2 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, v10, 0, 0);
    v4 = (id)static OS_os_log.crlAnalytics;
    v6 = static os_log_type_t.default.getter(v5);
    sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v6, "Synchronizing iCloud KVS", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

    if ((objc_msgSend(v3, "synchronize") & 1) == 0)
    {
      v7 = (id)static OS_os_log.crlAnalytics;
      v8 = static os_log_type_t.error.getter(v7);
      sub_100A06EBC((uint64_t)v7, &_mh_execute_header, v8, "Unable to synchronize iCloud KVS", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

    }
  }
  else
  {
    if (qword_1013DD730 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, v10, 0, 0);
    v3 = (id)static OS_os_log.crlAnalytics;
    v9 = static os_log_type_t.error.getter(v3);
    sub_100A06EBC((uint64_t)v3, &_mh_execute_header, v9, "Unable synchronize due to nil iCloud KVS Store", 46, 2, (uint64_t)_swiftEmptyArrayStorage);
  }

}

void sub_100568F98(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  void *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _BYTE *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  char v32[24];

  v3 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v3);
  v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v31[-v7];
  __chkstk_darwin(v9);
  v11 = &v31[-v10];
  sub_100568DF8();
  v12 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "stringForKey:", v13);

  if (!v14
    || (v14,
        sub_100568324((uint64_t)v11),
        v15 = type metadata accessor for Date(0),
        v16 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15),
        sub_1004CB800((uint64_t)v11, &qword_1013E04F0),
        v16 == 1))
  {
    sub_100569250(0);
  }
  sub_100568454();
  v18 = v17;
  swift_bridgeObjectRelease(v17);
  if (!v18
    || (sub_10056858C((uint64_t)v8),
        v19 = type metadata accessor for Date(0),
        v20 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v8, 1, v19),
        sub_1004CB800((uint64_t)v8, &qword_1013E04F0),
        v20 == 1))
  {
    sub_100569250(2u);
  }
  v21 = (_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption, v32, 0, 0);
  if ((*v21 & 1) == 0)
  {
    v22 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID);
    v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID + 8);
    *v22 = 0;
    v22[1] = 0;
    swift_bridgeObjectRelease(v23);
    v24 = type metadata accessor for Date(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
    v25 = v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate, v31, 33, 0);
    sub_10056AFBC((uint64_t)v5, v25);
    swift_endAccess(v31);
  }
  sub_10056973C();
  if ((a1 & 1) != 0)
    sub_100569EAC();
  if (*v21 == 1)
  {
    v26 = sub_100568454();
    v27 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID);
    v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID + 8);
    *v27 = v26;
    v27[1] = v29;
    swift_bridgeObjectRelease(v28);
    sub_10056858C((uint64_t)v5);
    v30 = v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate;
    swift_beginAccess(v30, v31, 33, 0);
    sub_10056AFBC((uint64_t)v5, v30);
    swift_endAccess(v31);
  }
}

uint64_t sub_100569250(unsigned __int8 a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned __int8 v17;
  _QWORD *v18;
  _QWORD v20[3];
  void *v21;

  v1 = a1;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = UUID.init()(v10);
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  Date.init()(v15);
  v21 = &type metadata for String;
  v20[0] = v12;
  v20[1] = v14;
  if (v1 > 1)
  {
    sub_10056940C((uint64_t)v20, 2u);
    sub_1004CB800((uint64_t)v20, &qword_1013E0230);
    v21 = (void *)v2;
    v18 = sub_10050D1B0(v20);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 16))(v18, v5, v2);
    v17 = 3;
  }
  else
  {
    sub_10056940C((uint64_t)v20, 0);
    sub_1004CB800((uint64_t)v20, &qword_1013E0230);
    v21 = (void *)v2;
    v16 = sub_10050D1B0(v20);
    (*(void (**)(_QWORD *, char *, uint64_t))(v3 + 16))(v16, v5, v2);
    v17 = 1;
  }
  sub_10056940C((uint64_t)v20, v17);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_1004CB800((uint64_t)v20, &qword_1013E0230);
}

void sub_10056940C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  _BYTE v26[72];
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  sub_1004CB7BC(a1, (uint64_t)&v27, &qword_1013E0230);
  if (v28)
  {
    sub_10050CB14(&v27, &v29);
    if (a2 > 1u)
    {
      if (qword_1013DD730 != -1)
        swift_once(&qword_1013DD730, sub_100A01F88);
      swift_beginAccess(&static OS_os_log.crlAnalytics, &v27, 0, 0);
      v12 = (void *)static OS_os_log.crlAnalytics;
      v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v13, v26);
      v15 = inited;
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      if (a2 == 3)
        v16 = 0xD00000000000002BLL;
      else
        v16 = 0xD00000000000001BLL;
      if (a2 == 3)
        v17 = 0x8000000100FB3740;
      else
        v17 = 0x8000000100FB3770;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(v15 + 32) = v16;
      *(_QWORD *)(v15 + 40) = v17;
      v18 = v12;
      v20 = static os_log_type_t.default.getter(v19);
      sub_100A06EBC((uint64_t)v18, &_mh_execute_header, v20, "Setting value in iCloud KVS for key: %@", 39, 2, v15);
      swift_setDeallocating(v15);
      v21 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v15 + 32, 1, v21);

      v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
      if (!v22)
        goto LABEL_21;
      v23 = v30;
      v24 = sub_1004BB5A4(&v29, v30);
      v25 = v22;
      v7 = _bridgeAnythingToObjectiveC<A>(_:)(v24, v23);
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setObject:forKey:", v7, v9, swift_bridgeObjectRelease(v17).n128_f64[0]);

    }
    else
    {
      v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_userDefaults);
      v5 = v30;
      v6 = sub_1004BB5A4(&v29, v30);
      v7 = _bridgeAnythingToObjectiveC<A>(_:)(v6, v5);
      if (a2)
        v8 = 0x8000000100FB3790;
      else
        v8 = 0x8000000100FB37C0;
      v9 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "setObject:forKey:", v7, v9, swift_bridgeObjectRelease(v8).n128_f64[0]);
    }
    swift_unknownObjectRelease(v7);

LABEL_21:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v29);
    return;
  }
  sub_1004CB800((uint64_t)&v27, &qword_1013E0230);
  if (qword_1013DD730 != -1)
    swift_once(&qword_1013DD730, sub_100A01F88);
  swift_beginAccess(&static OS_os_log.crlAnalytics, &v29, 0, 0);
  v10 = (id)static OS_os_log.crlAnalytics;
  v11 = static os_log_type_t.error.getter(v10);
  sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v11, "Attempted to set nil value in data store", 40, 2, (uint64_t)_swiftEmptyArrayStorage);

}

uint64_t sub_10056973C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - v4;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v15 - v11;
  sub_100568324((uint64_t)v5);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v13(v5, 1, v6) == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_1013E04F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    if (sub_10056AD14((uint64_t)v12))
      sub_100569250(0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  sub_10056858C((uint64_t)v2);
  if (v13(v2, 1, v6) == 1)
    return sub_1004CB800((uint64_t)v2, &qword_1013E04F0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v2, v6);
  if (sub_10056AD14((uint64_t)v9))
    sub_100569250(2u);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1005698F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[5];
  _BYTE v17[72];
  __int128 v18;
  __int128 v19;

  v1 = Notification.userInfo.getter(a1);
  if (!v1)
  {
    v18 = 0u;
    v19 = 0u;
LABEL_13:
    sub_1004CB800((uint64_t)&v18, &qword_1013E0230);
    goto LABEL_14;
  }
  v2 = v1;
  v15[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUbiquitousKeyValueStoreChangeReasonKey);
  v15[1] = v3;
  AnyHashable.init<A>(_:)(v15, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_1008432BC((uint64_t)v16), (v5 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  swift_bridgeObjectRelease(v2);
  sub_1004B89A4((uint64_t)v16);
  if (!*((_QWORD *)&v19 + 1))
    goto LABEL_13;
  if ((swift_dynamicCast(v16, &v18, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
  {
LABEL_14:
    if (qword_1013DD730 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, v16, 0, 0);
    v7 = (void *)static OS_os_log.crlAnalytics;
    v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v8, v17);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v10 = v7;
    isa = Notification._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E2DA0, NSNotification_ptr);
    v12 = sub_10056B004((unint64_t *)&qword_1013E2DA8, &qword_1013E2DA0, NSNotification_ptr);
    *(_QWORD *)(inited + 64) = v12;
    *(_QWORD *)(inited + 32) = isa;
    v13 = static os_log_type_t.error.getter(v12);
    sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v13, "Unable to get NSUbiquitousKeyValueStoreChangeReasonKey from notification: %@", 76, 2, inited);
    swift_setDeallocating(inited);
    v14 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v14);

    return;
  }
  if (v16[0] < 2uLL)
  {
    v6 = 1;
    goto LABEL_19;
  }
  if (v16[0] == 2)
  {
    sub_100569BE4();
  }
  else if (v16[0] == 3)
  {
    v6 = 0;
LABEL_19:
    sub_100568F98(v6);
  }
}

void sub_100569BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  NSString v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  _BYTE v27[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvsSetAttempts;
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvsSetAttempts) <= 2)
  {
    if (qword_1013DD730 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, v27, 0, 0);
    v6 = (id)static OS_os_log.crlAnalytics;
    v8 = static os_log_type_t.default.getter(v7);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v8, "Setting user ID values in iCloud KVS after quota violation", 58, 2, (uint64_t)_swiftEmptyArrayStorage);

    v9 = OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs;
    v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_kvs);
    if (v10)
    {
      v11 = v10;
      sub_100568454();
      if (v12)
      {
        v13 = v12;
        v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v13);
      }
      else
      {
        v14 = 0;
      }
      v15 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setString:forKey:", v14, v15);

      v16 = *(void **)(v1 + v9);
      if (v16)
      {
        v17 = v16;
        sub_10056858C((uint64_t)v4);
        v18 = type metadata accessor for Date(0);
        v19 = *(_QWORD *)(v18 - 8);
        isa = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18) != 1)
        {
          isa = Date._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
        }
        v21 = String._bridgeToObjectiveC()();
        objc_msgSend(v17, "setObject:forKey:", isa, v21);

        swift_unknownObjectRelease(isa);
      }
    }
    v22 = *(_QWORD *)(v1 + v5);
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
      return;
    }
    *(_QWORD *)(v1 + v5) = v24;
  }
  v25 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1013DCA70 != -1)
    swift_once(&qword_1013DCA70, sub_10056AAC0);
  objc_msgSend(v25, "postNotificationName:object:userInfo:", qword_10147E9A8, v1, 0);

}

double sub_100569EAC()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  unsigned __int8 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  unint64_t v13;
  Class isa;
  _QWORD v15[2];
  _BYTE v16[104];

  sub_100568454();
  if (v1)
  {
    v3 = v1;
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID + 8);
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID);
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserID + 8));
      v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v3);
      v7 = String._bridgeToObjectiveC()();
      v8 = objc_msgSend(v6, "isEqual:", v7);

      if ((v8 & 1) != 0 || !sub_10056A0A8())
      {
        *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
      }
      else
      {
        v9 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_1013DCA68 != -1)
          swift_once(&qword_1013DCA68, sub_10056AA8C);
        v10 = qword_10147E9A0;
        v11 = sub_1004B804C(&qword_1013E49B0);
        inited = swift_initStackObject(v11, v16);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v15[0] = 0xD000000000000010;
        v15[1] = 0x8000000100FAAAB0;
        AnyHashable.init<A>(_:)(v15, &type metadata for String, &protocol witness table for String);
        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 72) = v5;
        *(_QWORD *)(inited + 80) = v4;
        v13 = sub_1008D5828(inited);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v9, "postNotificationName:object:userInfo:", v10, v0, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

      }
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v1).n128_u64[0];
    }
  }
  return result;
}

BOOL sub_10056A0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD, uint64_t);
  void *v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  id v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char v54[24];
  char v55[24];

  v1 = type metadata accessor for Calendar(0);
  v50 = *(_QWORD *)(v1 - 8);
  v51 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DateComponents(0);
  v53 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v52 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - v17;
  sub_10056858C((uint64_t)v11);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1)
  {
    sub_1004CB800((uint64_t)v11, &qword_1013E04F0);
  }
  else
  {
    v49 = v4;
    v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v20(v18, v11, v12);
    v21 = v0 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_lastSeenUserIDRotationDate;
    swift_beginAccess(v21, v55, 0, 0);
    sub_1004CB7BC(v21, (uint64_t)v8, &qword_1013E04F0);
    if (v19(v8, 1, v12) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      sub_1004CB800((uint64_t)v8, &qword_1013E04F0);
    }
    else
    {
      v22 = ((uint64_t (*)(char *, char *, uint64_t))v20)(v15, v8, v12);
      static Calendar.current.getter(v22);
      v23 = sub_1004B804C(&qword_1013E0528);
      v24 = type metadata accessor for Calendar.Component(0);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(_QWORD *)(v25 + 72);
      v27 = *(unsigned __int8 *)(v25 + 80);
      v28 = (v27 + 32) & ~v27;
      v29 = swift_allocObject(v23, v28 + 2 * v26, v27 | 7);
      *(_OWORD *)(v29 + 16) = xmmword_100EF5A10;
      v30 = v29 + v28;
      v31 = *(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104);
      v31(v30, enum case for Calendar.Component.year(_:), v24);
      v31(v30 + v26, enum case for Calendar.Component.month(_:), v24);
      v32 = sub_1004B55E4(v29);
      swift_setDeallocating(v29);
      swift_arrayDestroy(v30, 2, v24);
      swift_deallocClassInstance(v29, 32, 7);
      v33 = v52;
      Calendar.dateComponents(_:from:to:)(v32, v15, v18);
      v34 = swift_bridgeObjectRelease(v32);
      v35 = (*(uint64_t (**)(char *, uint64_t, __n128))(v50 + 8))(v3, v51, v34);
      v36 = DateComponents.year.getter(v35);
      if ((v38 & 1) == 0)
      {
        v39 = v36;
        v40 = DateComponents.month.getter(v37);
        if ((v41 & 1) == 0)
        {
          v42 = v40;
          (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v49);
          v43 = *(void (**)(char *, uint64_t))(v13 + 8);
          v43(v15, v12);
          v43(v18, v12);
          return (v39 | v42) == 0;
        }
      }
      if (qword_1013DD730 != -1)
        swift_once(&qword_1013DD730, sub_100A01F88);
      swift_beginAccess(&static OS_os_log.crlAnalytics, v54, 0, 0);
      v45 = (id)static OS_os_log.crlAnalytics;
      v46 = static os_log_type_t.error.getter(v45);
      sub_100A06EBC((uint64_t)v45, &_mh_execute_header, v46, "Unable to generate date components for ID conflict check", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v33, v49);
      v47 = *(void (**)(char *, uint64_t))(v13 + 8);
      v47(v15, v12);
      v47(v18, v12);
    }
  }
  return 0;
}

void sub_10056A4E8()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;
  char v16[72];
  char v17[24];

  if (qword_1013DCB60 != -1)
    swift_once(&qword_1013DCB60, sub_100637218);
  v1 = (void *)qword_10147ECC0;
  if (objc_msgSend((id)qword_10147ECC0, "respondsToSelector:", "accountInfoWithCompletionHandler:"))
  {
    if (qword_1013DD730 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, v17, 0, 0);
    v2 = (void *)static OS_os_log.crlAnalytics;
    v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v3, v16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E2DB0, CKContainer_ptr);
    *(_QWORD *)(inited + 64) = sub_10056B004(&qword_101400210, &qword_1013E2DB0, CKContainer_ptr);
    *(_QWORD *)(inited + 32) = v1;
    v5 = v2;
    v6 = v1;
    v8 = static os_log_type_t.default.getter(v7);
    sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v8, "Retrieving CloudKit account info from container: %@", 51, 2, inited);
    swift_setDeallocating(inited);
    v9 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v9);

    v10 = swift_allocObject(&unk_10126C780, 24, 7);
    *(_QWORD *)(v10 + 16) = v0;
    v14[4] = sub_10056B068;
    v15 = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = *(_QWORD *)"";
    v14[2] = sub_1009446B0;
    v14[3] = &unk_10126C798;
    v11 = _Block_copy(v14);
    v12 = v15;
    v13 = v0;
    objc_msgSend(v6, "accountInfoWithCompletionHandler:", v11, swift_release(v12).n128_f64[0]);
    _Block_release(v11);
  }
}

void sub_10056A704(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t inited;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE *v15;
  int v16;
  id v17;
  uint64_t v18;
  _BYTE v19[72];
  _BYTE v20[24];
  _BYTE v21[24];

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1013DD730 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, v20, 0, 0);
    v6 = (void *)static OS_os_log.crlAnalytics;
    v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v7, v19);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v9 = v6;
    v10 = _convertErrorToNSError(_:)(a2);
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    v11 = sub_10056B004((unint64_t *)&qword_1014068F0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    *(_QWORD *)(inited + 64) = v11;
    *(_QWORD *)(inited + 32) = v10;
    v12 = static os_log_type_t.error.getter(v11);
    sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v12, "Error retrieving CloudKit account info: %@", 42, 2, inited);
    swift_setDeallocating(inited);
    v13 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v13);

    swift_errorRelease(a2);
  }
  if (a1)
  {
    v14 = a1;
    if ((objc_msgSend(v14, "respondsToSelector:", "supportsDeviceToDeviceEncryption") & 1) != 0)
    {
      v15 = (_BYTE *)(a3 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
      swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption, v21, 1, 0);
      v16 = *v15;
      if (v16 != objc_msgSend(v14, "supportsDeviceToDeviceEncryption"))
      {
        *v15 = objc_msgSend(v14, "supportsDeviceToDeviceEncryption");
        sub_100568F98(0);
        v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_1013DCA78 != -1)
          swift_once(&qword_1013DCA78, sub_10056AAF4);
        objc_msgSend(v17, "postNotificationName:object:userInfo:", qword_10147E9B0, a3, 0);

      }
    }
  }
  else
  {
    if (qword_1013DD730 != -1)
      swift_once(&qword_1013DD730, sub_100A01F88);
    swift_beginAccess(&static OS_os_log.crlAnalytics, v21, 0, 0);
    v14 = (id)static OS_os_log.crlAnalytics;
    v18 = static os_log_type_t.error.getter(v14);
    sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v18, "Unable to retrieve CloudKit account info", 40, 2, (uint64_t)_swiftEmptyArrayStorage);
  }

}

id CRLDeviceManagementRestrictionsManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void CRLAnalyticsDataStore.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLAnalyticsDataStore", 30, "init()", 6, 0);
  __break(1u);
}

NSString sub_10056AA8C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147E9A0 = (uint64_t)result;
  return result;
}

NSString sub_10056AAC0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147E9A8 = (uint64_t)result;
  return result;
}

NSString sub_10056AAF4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147E9B0 = (uint64_t)result;
  return result;
}

uint64_t sub_10056AB28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10056AB4C(uint64_t a1)
{
  uint64_t v1;

  sub_100568BEC(a1, v1);
}

uint64_t sub_10056AB54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10056AB64(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10056AB6C(uint64_t a1)
{
  uint64_t v1;

  sub_100568C44(a1, v1);
}

uint64_t sub_10056AB74@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_10056ABC4(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC8Freeform21CRLAnalyticsDataStore_supportsEndToEndEncryption);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = v2;
  return result;
}

uint64_t sub_10056AC10()
{
  return type metadata accessor for CRLAnalyticsDataStore(0);
}

void sub_10056AC18(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100EF8EF8;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = &unk_100EF8F10;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[4] = &unk_100EF8F28;
  sub_10056ACC0(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_10056ACC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013F2430)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013F2430);
  }
}

BOOL sub_10056AD14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, _QWORD, uint64_t);
  void *v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __n128 v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  char v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a1;
  v1 = type metadata accessor for Date(0);
  v43 = *(_QWORD *)(v1 - 8);
  v44 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DateComponents(0);
  v39 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - v11;
  static Calendar.current.getter(v13);
  v14 = sub_1004B804C(&qword_1013E0528);
  v15 = type metadata accessor for Calendar.Component(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 72);
  v18 = *(unsigned __int8 *)(v16 + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject(v14, v19 + 2 * v17, v18 | 7);
  *(_OWORD *)(v20 + 16) = xmmword_100EF5A10;
  v21 = v20 + v19;
  v22 = *(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104);
  v22(v21, enum case for Calendar.Component.year(_:), v15);
  v22(v21 + v17, enum case for Calendar.Component.month(_:), v15);
  v23 = sub_1004B55E4(v20);
  swift_setDeallocating(v20);
  swift_arrayDestroy(v21, 2, v15);
  v24 = swift_deallocClassInstance(v20, 32, 7);
  Date.init()(v24);
  Calendar.dateComponents(_:from:to:)(v23, v42, v3);
  v25 = swift_bridgeObjectRelease(v23);
  v26 = v3;
  v27 = v39;
  (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v26, v44, v25);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v6, v41);
  v29 = DateComponents.year.getter(v28);
  LOBYTE(v23) = v30;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v9, v12, v7);
  if ((v23 & 1) != 0 || v29 < 1)
  {
    v34 = DateComponents.month.getter(v31);
    v36 = v35;
    v37 = *(void (**)(char *, uint64_t))(v27 + 8);
    v37(v9, v7);
    v37(v12, v7);
    return (v36 & 1) == 0 && v34 > 0;
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t))(v27 + 8);
    v32(v9, v7);
    v32(v12, v7);
    return 1;
  }
}

uint64_t sub_10056AFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10056B004(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004B8930(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10056B044()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10056B068(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10056A704(a1, a2, *(_QWORD *)(v2 + 16));
}

double initializeWithCopy for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_10056B124(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

__n128 assignWithCopy for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v3 = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v3 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v3 + 88) = v6;
  *(_OWORD *)(v3 + 72) = v5;
  *(_OWORD *)(v3 + 56) = v4;
  result = *(__n128 *)(a2 + 120);
  v8 = *(_OWORD *)(a2 + 136);
  v9 = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(v3 + 168) = *(_BYTE *)(a2 + 168);
  *(_OWORD *)(v3 + 152) = v9;
  *(_OWORD *)(v3 + 136) = v8;
  *(__n128 *)(v3 + 120) = result;
  return result;
}

double initializeWithTake for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_10056B124(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_10056B124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  __n128 result;

  v5 = a4();
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v5 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v5 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v5 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(v5 + 168) = *(_BYTE *)(a2 + 168);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v5 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v5 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v5 + 104) = *(_OWORD *)(a2 + 104);
  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

__n128 assignWithTake for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 result;

  v3 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v3 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(v3 + 168) = *(_BYTE *)(a2 + 168);
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 104) = *(_OWORD *)(a2 + 104);
  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v3 + 40) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLLayerTransformBy2DTranslationTransition(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 169))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLLayerTransformBy2DTranslationTransition(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 169) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerTransformBy2DTranslationTransition()
{
  return &type metadata for CRLLayerTransformBy2DTranslationTransition;
}

void sub_10056B29C(uint64_t a1@<X8>)
{
  CGFloat *v1;
  CGFloat *v2;
  uint64_t Strong;
  void *v5;
  CGFloat m12;
  CGFloat m11;
  CGFloat m13;
  CGFloat m14;
  CGFloat m21;
  CGFloat m22;
  CGFloat m23;
  CGFloat m24;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  CGFloat m31;
  CGFloat m32;
  __int128 v26;
  CGFloat m33;
  __int128 v28;
  CGFloat m34;
  __int128 v30;
  CGFloat m41;
  __int128 v32;
  CGFloat m42;
  __int128 v34;
  CGFloat m43;
  __int128 v36;
  CGFloat m44;
  __int128 v38;
  CGFloat v39;
  CGFloat v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  CATransform3D v48;
  _QWORD v49[4];
  CATransform3D v50;
  _BYTE v51[136];
  _BYTE v52[136];

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10056B6C4((uint64_t)(v2 + 5), (uint64_t)v51);
    sub_10056B6C4((uint64_t)v51, (uint64_t)v52);
    if (sub_10056B70C((uint64_t)v52) == 1)
      objc_msgSend(v5, "transform");
    else
      sub_10056B6C4((uint64_t)v51, (uint64_t)&v48);
    m11 = v48.m11;
    m12 = v48.m12;
    m13 = v48.m13;
    m14 = v48.m14;
    m21 = v48.m21;
    m22 = v48.m22;
    m23 = v48.m23;
    m24 = v48.m24;
    m31 = v48.m31;
    m32 = v48.m32;
    m33 = v48.m33;
    m34 = v48.m34;
    m41 = v48.m41;
    m42 = v48.m42;
    m43 = v48.m43;
    m44 = v48.m44;
    CATransform3DTranslate(&v50, &v48, v2[1], v2[2], 1.0);
    v46 = *(_OWORD *)&v50.m13;
    v47 = *(_OWORD *)&v50.m11;
    v44 = *(_OWORD *)&v50.m23;
    v45 = *(_OWORD *)&v50.m21;
    v42 = *(_OWORD *)&v50.m33;
    v43 = *(_OWORD *)&v50.m31;
    v41 = *(_OWORD *)&v50.m41;
    v39 = v50.m44;
    v40 = v50.m43;
    v14 = v2[3];
    v15 = v2[4];
    v48.m11 = m11;
    v48.m12 = m12;
    v48.m13 = m13;
    v48.m14 = m14;
    v48.m21 = m21;
    v48.m22 = m22;
    v48.m23 = m23;
    v48.m24 = m24;
    v48.m31 = m31;
    v48.m32 = m32;
    v48.m33 = m33;
    v48.m34 = m34;
    v48.m41 = m41;
    v48.m42 = m42;
    v48.m43 = m43;
    v48.m44 = m44;
    CATransform3DTranslate(&v50, &v48, v14, v15, 1.0);
    v36 = *(_OWORD *)&v50.m13;
    v38 = *(_OWORD *)&v50.m11;
    v32 = *(_OWORD *)&v50.m23;
    v34 = *(_OWORD *)&v50.m21;
    v28 = *(_OWORD *)&v50.m33;
    v30 = *(_OWORD *)&v50.m31;
    v26 = *(_OWORD *)&v50.m41;
    v16 = v50.m43;
    v17 = v50.m44;
    type metadata accessor for CATransform3D(0);
    v19 = v18;
    v50.m14 = v18;
    v20 = COERCE_DOUBLE(swift_allocObject(&unk_10126C8A0, 144, 7));
    *(CGFloat *)&v49[3] = v19;
    v50.m11 = v20;
    *(_OWORD *)(*(_QWORD *)&v20 + 16) = v47;
    *(_OWORD *)(*(_QWORD *)&v20 + 32) = v46;
    *(_OWORD *)(*(_QWORD *)&v20 + 48) = v45;
    *(_OWORD *)(*(_QWORD *)&v20 + 64) = v44;
    *(_OWORD *)(*(_QWORD *)&v20 + 80) = v43;
    *(_OWORD *)(*(_QWORD *)&v20 + 96) = v42;
    *(_OWORD *)(*(_QWORD *)&v20 + 112) = v41;
    *(CGFloat *)(*(_QWORD *)&v20 + 128) = v40;
    *(CGFloat *)(*(_QWORD *)&v20 + 136) = v39;
    v21 = swift_allocObject(&unk_10126C8A0, 144, 7);
    v49[0] = v21;
    *(_OWORD *)(v21 + 16) = v38;
    *(_OWORD *)(v21 + 32) = v36;
    *(_OWORD *)(v21 + 48) = v34;
    *(_OWORD *)(v21 + 64) = v32;
    *(_OWORD *)(v21 + 80) = v30;
    *(_OWORD *)(v21 + 96) = v28;
    *(_OWORD *)(v21 + 112) = v26;
    *(CGFloat *)(v21 + 128) = v16;
    *(CGFloat *)(v21 + 136) = v17;
    memset(&v48, 0, 64);
    LOBYTE(v48.m31) = 26;
    v48.m32 = 1.67501583e243;
    v48.m33 = -5.98008217e197;
    sub_10056B738((uint64_t)&v50, (uint64_t)&v48);
    sub_10056B738((uint64_t)v49, (uint64_t)&v48.m21);
    v22 = *(_OWORD *)&v48.m23;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)&v48.m21;
    *(_OWORD *)(a1 + 48) = v22;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)&v48.m31;
    *(CGFloat *)(a1 + 80) = v48.m33;
    v23 = *(_OWORD *)&v48.m13;
    *(_OWORD *)a1 = *(_OWORD *)&v48.m11;
    *(_OWORD *)(a1 + 16) = v23;

  }
  else
  {
    *(_QWORD *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

__n128 sub_10056B5B4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  _BYTE v11[136];
  __int128 v12;
  __int128 v13;
  _OWORD v14[8];
  char v15;

  v10 = *(_OWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  sub_10056B6C4(v1 + 40, (uint64_t)v11);
  v12 = v10;
  *(_QWORD *)&v13 = v3;
  *((_QWORD *)&v13 + 1) = v4;
  sub_10056B6C4((uint64_t)v11, (uint64_t)v14);
  v5 = v14[7];
  *(_OWORD *)(a1 + 128) = v14[6];
  *(_OWORD *)(a1 + 144) = v5;
  *(_BYTE *)(a1 + 160) = v15;
  v6 = v14[3];
  *(_OWORD *)(a1 + 64) = v14[2];
  *(_OWORD *)(a1 + 80) = v6;
  v7 = v14[5];
  *(_OWORD *)(a1 + 96) = v14[4];
  *(_OWORD *)(a1 + 112) = v7;
  v8 = v13;
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v8;
  result = (__n128)v14[1];
  *(_OWORD *)(a1 + 32) = v14[0];
  *(__n128 *)(a1 + 48) = result;
  *(_BYTE *)(a1 + 256) = 59;
  return result;
}

unint64_t sub_10056B65C(uint64_t a1)
{
  unint64_t result;

  result = sub_10056B680();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10056B680()
{
  unint64_t result;

  result = qword_1013E2DB8;
  if (!qword_1013E2DB8)
  {
    result = swift_getWitnessTable(&unk_100EF8F7C, &type metadata for CRLLayerTransformBy2DTranslationTransition);
    atomic_store(result, (unint64_t *)&qword_1013E2DB8);
  }
  return result;
}

uint64_t sub_10056B6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E2DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10056B70C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10056B728()
{
  uint64_t v0;

  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_10056B738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E0230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_10056B780(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v9;
  double v10;
  double v11;
  double v12;
  _BOOL8 v13;
  _OWORD v15[8];
  _OWORD v16[8];
  _OWORD v17[9];
  _BYTE v18[136];
  _BYTE v19[136];
  _OWORD v20[9];
  _BYTE v21[40];
  uint64_t v22;
  _BYTE v23[40];
  uint64_t v24;
  _BYTE v25[24];
  double v26;
  double v27;
  _BYTE v28[24];
  double v29;
  double v30;

  v4 = *(double *)(a1 + 8);
  v5 = *(double *)(a1 + 16);
  v6 = *(double *)(a2 + 8);
  v7 = *(double *)(a2 + 16);
  sub_10056B944(a1, (uint64_t)v28);
  sub_10056B944(a2, (uint64_t)v25);
  if (v4 != v6 || v5 != v7)
  {
    sub_1004CBB0C((uint64_t)v25);
    sub_1004CBB0C((uint64_t)v28);
LABEL_11:
    sub_10056B944(a1, (uint64_t)v23);
    sub_10056B944(a2, (uint64_t)v21);
    goto LABEL_12;
  }
  v10 = v29;
  v9 = v30;
  sub_1004CBB0C((uint64_t)v28);
  v11 = v26;
  v12 = v27;
  sub_1004CBB0C((uint64_t)v25);
  if (v10 != v11)
    goto LABEL_11;
  sub_10056B944(a1, (uint64_t)v23);
  sub_10056B944(a2, (uint64_t)v21);
  if (v9 != v12)
    goto LABEL_12;
  sub_10056B6C4((uint64_t)&v24, (uint64_t)v18);
  sub_10056B6C4((uint64_t)&v22, (uint64_t)v19);
  sub_10056B6C4((uint64_t)v18, (uint64_t)v20);
  if (sub_10056B70C((uint64_t)v20) != 1)
  {
    sub_10056B6C4((uint64_t)v19, (uint64_t)v17);
    if (sub_10056B70C((uint64_t)v17) != 1)
    {
      v16[0] = v20[0];
      v16[1] = v20[1];
      v16[2] = v20[2];
      v16[3] = v20[3];
      v16[4] = v20[4];
      v16[5] = v20[5];
      v16[6] = v20[6];
      v16[7] = v20[7];
      v15[0] = v17[0];
      v15[1] = v17[1];
      v15[2] = v17[2];
      v15[3] = v17[3];
      v15[4] = v17[4];
      v15[5] = v17[5];
      v15[6] = v17[6];
      v15[7] = v17[7];
      v13 = sub_100079E00((double *)v16, (double *)v15, 0.0);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  sub_10056B6C4((uint64_t)v19, (uint64_t)v17);
  if (sub_10056B70C((uint64_t)v17) != 1)
  {
LABEL_12:
    v13 = 0;
    goto LABEL_13;
  }
  v13 = 1;
LABEL_13:
  sub_1004CBB0C((uint64_t)v21);
  sub_1004CBB0C((uint64_t)v23);
  return v13;
}

uint64_t sub_10056B944(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;

  swift_unknownObjectWeakCopyInit(a2, a1);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  v4 = *(_OWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 88);
  v6 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 104) = v6;
  *(_OWORD *)(a2 + 88) = v5;
  *(_OWORD *)(a2 + 72) = v4;
  v7 = *(_OWORD *)(a1 + 136);
  v8 = *(_OWORD *)(a1 + 152);
  v9 = *(_BYTE *)(a1 + 168);
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 120);
  *(_BYTE *)(a2 + 168) = v9;
  *(_OWORD *)(a2 + 152) = v8;
  *(_OWORD *)(a2 + 136) = v7;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  return a2;
}

id sub_10056B9CC()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  qword_1013E2DC8 = (uint64_t)result;
  return result;
}

UIContentSizeCategory sub_10056BA04()
{
  qword_1013E2DD0 = (uint64_t)UIContentSizeCategoryLarge;
  return UIContentSizeCategoryLarge;
}

UIContentSizeCategory sub_10056BA1C()
{
  qword_1013E2DD8 = (uint64_t)UIContentSizeCategoryExtraExtraLarge;
  return UIContentSizeCategoryExtraExtraLarge;
}

CALayerCornerCurve sub_10056BA34()
{
  qword_1013E2DE0 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

id sub_10056BA4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button);
  }
  else
  {
    v4 = sub_10056BAA8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10056BAA8()
{
  uint64_t v0;
  id v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "viewScale");
    swift_unknownObjectRelease(v3);
  }
  v4 = (void *)objc_opt_self(NSNumberFormatter);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  v6 = objc_msgSend(v4, "localizedStringFromNumber:numberStyle:", isa, 3);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v8 = v7;

  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:forState:", v9, 0, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v10 = (void *)objc_opt_self(UIColor);
  v11 = objc_msgSend(v10, "tintColor");
  objc_msgSend(v1, "setTitleColor:forState:", v11, 0);

  v12 = objc_msgSend(v10, "tintColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.4);

  objc_msgSend(v1, "setTitleColor:forState:", v13, 1);
  v14 = objc_msgSend(v1, "titleLabel");
  if (v14)
  {
    v15 = v14;
    v16 = sub_10056ED2C();
    objc_msgSend(v15, "setFont:", v16);

    objc_msgSend(v15, "setTextAlignment:", 1);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createButton()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 121, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createButton()", 14, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2u, 121, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "setMenu:", *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu));
  objc_msgSend(v1, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v1, "setPreferredMenuElementOrder:", 2);
  objc_msgSend(v1, "setPointerInteractionEnabled:", 1);
  return v1;
}

Class sub_10056BDC4()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  UIMenuElementSize preferredElementSize;
  Swift::String v6;
  objc_class *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  UIMenuElementSize v30;
  id v31;
  Swift::String v32;
  objc_class *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  Swift::String v37;
  Class isa;
  Swift::OpaquePointer v40;
  Swift::OpaquePointer v41;
  uint64_t v42;
  id v43;
  void **aBlock;
  uint64_t v45;
  double (*v46)(uint64_t, void *);
  ValueMetadata *v47;
  unint64_t v48;
  uint64_t v49;
  UIMenuElementSize v50;
  UIImage_optional v51;
  UIImage_optional v52;
  UIImage_optional v53;

  v50 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v0 = (void *)objc_opt_self(UIDeferredMenuElement);
  v1 = swift_allocObject(&unk_10126C8E8, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16);
  v48 = (unint64_t)sub_10056F02C;
  v49 = v1;
  aBlock = _NSConcreteStackBlock;
  v45 = *(_QWORD *)"";
  v46 = sub_100524B50;
  v47 = (ValueMetadata *)&unk_10126C900;
  v2 = _Block_copy(&aBlock);
  v3 = objc_msgSend(v0, "elementWithUncachedProvider:", v2, swift_release(v49).n128_f64[0]);
  _Block_release(v2);
  sub_1004B8930(0, &qword_1013E1090, UIMenu_ptr);
  v42 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v4 = swift_allocObject(v42, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v4 + 32) = v3;
  aBlock = (void **)v4;
  specialized Array._endMutation()(v4);
  preferredElementSize = (UIMenuElementSize)aBlock;
  v43 = v3;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v51.value.super.isa = 0;
  v51.is_nil = 0;
  v7 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v51, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v40).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
  specialized Array._endMutation()(v10);
  v11 = swift_allocObject(&unk_10126C8E8, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  v48 = (unint64_t)sub_10056F04C;
  v49 = v11;
  aBlock = _NSConcreteStackBlock;
  v45 = *(_QWORD *)"";
  v46 = sub_100524B50;
  v47 = (ValueMetadata *)&unk_10126C928;
  v12 = _Block_copy(&aBlock);
  v13 = objc_msgSend(v0, "elementWithUncachedProvider:", v12, swift_release(v49).n128_f64[0]);
  _Block_release(v12);
  v14 = v13;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  v18 = swift_allocObject(&unk_10126C8E8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v48 = (unint64_t)sub_10056F054;
  v49 = v18;
  aBlock = _NSConcreteStackBlock;
  v45 = *(_QWORD *)"";
  v46 = sub_100524B50;
  v47 = (ValueMetadata *)&unk_10126C950;
  v19 = _Block_copy(&aBlock);
  v20 = objc_msgSend(v0, "elementWithUncachedProvider:", v19, swift_release(v49).n128_f64[0]);
  _Block_release(v19);
  v21 = v20;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
  specialized Array._endMutation()(v24);
  v47 = &type metadata for CRLFeatureFlags;
  v48 = sub_1004DB6DC();
  LOBYTE(aBlock) = 7;
  v25 = isFeatureEnabled(_:)(&aBlock);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
  if ((v25 & 1) == 0)
  {
    v26 = swift_allocObject(&unk_10126C8E8, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16);
    v48 = (unint64_t)sub_10056F05C;
    v49 = v26;
    aBlock = _NSConcreteStackBlock;
    v45 = *(_QWORD *)"";
    v46 = sub_100524B50;
    v47 = (ValueMetadata *)&unk_10126C978;
    v27 = _Block_copy(&aBlock);
    v28 = objc_msgSend(v0, "elementWithUncachedProvider:", v27, swift_release(v49).n128_f64[0]);
    _Block_release(v27);
    v29 = swift_allocObject(v42, 40, 7);
    *(_OWORD *)(v29 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v29 + 32) = v28;
    aBlock = (void **)v29;
    specialized Array._endMutation()(v29);
    v30 = (UIMenuElementSize)aBlock;
    v31 = v28;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v52.value.super.isa = 0;
    v52.is_nil = 0;
    v33 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v52, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v30, v41).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
    v35 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v34 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v35 >= v34 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
    v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
    specialized Array._endMutation()(v36);

  }
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v53.value.super.isa = 0;
  v53.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v53, 0, 0xFFFFFFFFFFFFFFFFLL, v50, v41).super.super.isa;

  return isa;
}

void sub_10056C330(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    goto LABEL_15;
  v6 = (char *)Strong;
  v7 = Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate;
  v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);
  if (!v8)
  {

LABEL_15:
    a1(_swiftEmptyArrayStorage);
    return;
  }
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 8);
  v11 = (char *)objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "editingCoordinator");
  v12 = v11;
  if (v11)
  {
    v13 = *(id *)&v11[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];

    LOBYTE(v12) = sub_1006F2CE0();
  }
  v14 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents];
  v15 = (uint64_t)_swiftEmptyArrayStorage;
  v36 = _swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain_n(v14, 2);
    for (i = 0; i != v16; ++i)
    {
      v35 = *(_QWORD *)(v14 + 8 * i + 32);
      sub_10056C6D4(&v36, (double *)&v35, v9, v10, v12 & 1);
    }
    swift_bridgeObjectRelease_n(v14, 2);
    v15 = (uint64_t)v36;
  }
  v36 = (_QWORD *)v15;
  if ((v12 & 1) == 0)
    goto LABEL_13;
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v19 = String._bridgeToObjectiveC()();
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  swift_bridgeObjectRetain(v24);
  v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22, v24, 0, 0, 0, 0, 0, 0, 0, 0, 1, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  v26 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v27 = swift_allocObject(v26, 48, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v27 + 32) = v22;
  *(_QWORD *)(v27 + 40) = v24;
  v28 = v25;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v28, "setAccessibilityUserInputLabels:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  if (!((unint64_t)v15 >> 62))
  {
    v30 = v28;
LABEL_12:
    sub_100CFBC30(0, 0, (uint64_t)v28);

    v15 = (uint64_t)v36;
LABEL_13:
    a1((_QWORD *)v15);
    swift_bridgeObjectRelease(v15);

    swift_unknownObjectRelease(v9);
    return;
  }
  if (v15 < 0)
    v31 = v15;
  else
    v31 = v15 & 0xFFFFFFFFFFFFFF8;
  v32 = v28;
  swift_bridgeObjectRetain(v15);
  v33 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v15);
  if ((v33 & 0x8000000000000000) == 0)
    goto LABEL_12;
  __break(1u);
  v34 = v36;
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v34);
  __break(1u);
}

void sub_10056C6D4(_QWORD *a1, double *a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned __int8 v7;
  double v8;
  char *v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Class v33;
  uint64_t v34;

  v7 = a5 ^ 1;
  v8 = *a2;
  v9 = (char *)objc_opt_self(NSNumberFormatter);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  v11 = objc_msgSend(v9, "localizedStringFromNumber:numberStyle:", isa, 3);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "viewScale");
  v16 = (v15 == v8) & v7;
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v17 = swift_allocObject(&unk_10126C8E8, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = swift_allocObject(&unk_10126CA50, 32, 7);
  *(_QWORD *)(v18 + 16) = v17;
  *(double *)(v18 + 24) = v8;
  v19 = (char *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v12, v14, 0, 0, 0, 0, 0, 0, 0, 0, v16, sub_10056F124, v18);
  v20 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v21 = swift_allocObject(v20, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100EF5E40;
  v22 = v8 * 100.0;
  v23 = v8 * 100.0;
  if ((~COERCE__INT64(v8 * 100.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v23 = -9.22337204e18;
  if (v22 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v23 = 9.22337204e18;
  if (v22 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v24 = v21;
  v25 = (uint64_t)v22;
  v26 = objc_allocWithZone((Class)NSNumber);
  v27 = v19;
  v28 = objc_msgSend(v26, "initWithInteger:", v25);
  v29 = objc_msgSend(v9, "localizedStringFromNumber:numberStyle:", v28, 0);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  *(_QWORD *)(v24 + 32) = v30;
  *(_QWORD *)(v24 + 40) = v32;
  v33 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "setAccessibilityUserInputLabels:", v33, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v9 = v27;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v19 = *(char **)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v23 = *(double *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if ((unint64_t)v19 >= *(_QWORD *)&v23 >> 1)
LABEL_9:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(*(_QWORD *)&v23 > 1uLL, v19 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v9);
  specialized Array._endMutation()(v34);

}

void sub_10056C9C8(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 1;

  }
  swift_beginAccess(v4, &v10, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v4);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);
    if (v8)
    {
      v9 = v8;
      sub_100C1B690(a1);
      sub_10056E680();

      swift_unknownObjectRelease(v9);
    }
    else
    {

    }
  }
}

void sub_10056CA9C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);
    v9 = *(_QWORD *)(v7 + 8);

    if (v8)
    {
      if (objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "hasSelection"))
      {
        v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v11 = String._bridgeToObjectiveC()();
        v12 = String._bridgeToObjectiveC()();
        v13 = objc_msgSend(v10, "localizedStringForKey:value:table:", v11, v12, 0);

        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
        v16 = v15;

        sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
        v17 = swift_allocObject(&unk_10126C9D8, 32, 7);
        *(_QWORD *)(v17 + 24) = v9;
        swift_unknownObjectWeakInit(v17 + 16);
        v18 = swift_allocObject(&unk_10126C8E8, 24, 7);
        swift_beginAccess(v4, v26, 0, 0);
        v19 = (void *)swift_unknownObjectWeakLoadStrong(v4);
        swift_unknownObjectWeakInit(v18 + 16);

        v20 = swift_allocObject(&unk_10126CA28, 32, 7);
        *(_QWORD *)(v20 + 16) = v18;
        *(_QWORD *)(v20 + 24) = v17;
        v21 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14, v16, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10056F0E0, v20);
        v22 = sub_1004B804C((uint64_t *)&unk_1013E4180);
        v23 = swift_allocObject(v22, 40, 7);
        *(_OWORD *)(v23 + 16) = xmmword_100EEF400;
        *(_QWORD *)(v23 + 32) = v21;
        v25 = v23;
        specialized Array._endMutation()(v23);
        v24 = v21;
        a1(v25);
        swift_unknownObjectRelease(v8);

        swift_bridgeObjectRelease(v25);
        return;
      }
      swift_unknownObjectRelease(v8);
    }
  }
  a1((uint64_t)_swiftEmptyArrayStorage);
}

void sub_10056CD58(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);
    v9 = *(_QWORD *)(v7 + 8);

    if (v8)
    {
      v10 = (char *)objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "board");
      if (v10)
      {
        v11 = v10;
        v12 = (char *)*(id *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];

        v13 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
        v14 = *(_QWORD **)&v12[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
        if (!v14)
        {
          sub_100740DA4();
          v14 = *(_QWORD **)&v12[v13];
        }
        v15 = (uint64_t)(v14 ? v14 : _swiftEmptyArrayStorage);
        swift_bridgeObjectRetain(v14);

        if ((unint64_t)v15 >> 62)
        {
          v32 = v15 < 0 ? v15 : v15 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v15);
          v16 = _CocoaArrayWrapper.endIndex.getter(v32);
          swift_bridgeObjectRelease(v15);
        }
        else
        {
          v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v15);
        if (v16 >= 1)
        {
          v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v18 = String._bridgeToObjectiveC()();
          v19 = String._bridgeToObjectiveC()();
          v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

          v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
          v23 = v22;

          sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
          v24 = swift_allocObject(&unk_10126C9D8, 32, 7);
          *(_QWORD *)(v24 + 24) = v9;
          swift_unknownObjectWeakInit(v24 + 16);
          v25 = swift_allocObject(&unk_10126C8E8, 24, 7);
          swift_beginAccess(v4, v34, 0, 0);
          v26 = (void *)swift_unknownObjectWeakLoadStrong(v4);
          swift_unknownObjectWeakInit(v25 + 16);

          v27 = swift_allocObject(&unk_10126CA00, 32, 7);
          *(_QWORD *)(v27 + 16) = v25;
          *(_QWORD *)(v27 + 24) = v24;
          v28 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v21, v23, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10056F0BC, v27);
          v29 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v30 = swift_allocObject(v29, 40, 7);
          *(_OWORD *)(v30 + 16) = xmmword_100EEF400;
          *(_QWORD *)(v30 + 32) = v28;
          v33 = v30;
          specialized Array._endMutation()(v30);
          v31 = v28;
          a1(v33);
          swift_unknownObjectRelease(v8);

          swift_bridgeObjectRelease(v33);
          return;
        }
      }
      swift_unknownObjectRelease(v8);
    }
  }
  a1((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_10056D0BC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *Strong;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v5 = a2 + 16;
  v6 = a3 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 1;

  }
  swift_beginAccess(v6, &v10, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v6);
  if (result)
  {
    v9 = result;
    objc_msgSend(*(id *)(result + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), *a4);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

double sub_10056D168(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  double result;
  void *v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v40, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong
    && (v6 = (void *)Strong,
        v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate),
        v6,
        v7))
  {
    v37 = a1;
    v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled;
    v9 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled);
    if (v9 == 2)
    {
      v36 = sub_100C2B92C();
      *(_BYTE *)(v7 + v8) = v36 & 1;
    }
    else
    {
      v36 = v9 & 1;
    }
    v11 = (void *)objc_opt_self(NSBundle);
    v12 = objc_msgSend(v11, "mainBundle");
    v13 = String._bridgeToObjectiveC()();
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v12, "localizedStringForKey:value:table:", v13, v14, 0);

    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    v19 = objc_msgSend(v11, "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    if ((v36 & 1) != 0)
      v26 = v25;
    else
      v26 = v18;
    if ((v36 & 1) != 0)
      v27 = v16;
    else
      v27 = v23;
    if ((v36 & 1) != 0)
      v28 = v18;
    else
      v28 = v25;
    swift_bridgeObjectRelease(v26);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v29 = swift_allocObject(&unk_10126C8E8, 24, 7);
    swift_beginAccess(v4, v39, 0, 0);
    v30 = (void *)swift_unknownObjectWeakLoadStrong(v4);
    swift_unknownObjectWeakInit(v29 + 16);

    v31 = swift_allocObject(&unk_10126C9B0, 25, 7);
    *(_QWORD *)(v31 + 16) = v29;
    *(_BYTE *)(v31 + 24) = v36 & 1;
    v32 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v27, v28, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10056F088, v31);
    v33 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v34 = swift_allocObject(v33, 40, 7);
    *(_OWORD *)(v34 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v34 + 32) = v32;
    v38 = v34;
    specialized Array._endMutation()(v34);
    v35 = v32;
    v37(v38);
    swift_unknownObjectRelease(v7);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v38).n128_u64[0];
  }
  else
  {
    a1((uint64_t)_swiftEmptyArrayStorage);
  }
  return result;
}

void sub_10056D4CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);

    if (v7)
    {
      sub_100C2B1E8((a3 & 1) == 0);
      swift_unknownObjectRelease(v7);
    }
  }
}

void sub_10056D550()
{
  char *v0;
  Class v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t Strong;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void **v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  void **v70;
  Class isa;
  void **aBlock;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t);
  void *v75;
  void (*v76)(uint64_t);
  uint64_t v77;
  objc_super v78;

  v78.receiver = v0;
  v78.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  objc_msgSendSuper2(&v78, "viewDidLoad");
  v1 = sub_10056BDC4();
  v2 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v1;

  v4 = sub_10056BA4C();
  v5 = *(id *)&v0[v2];
  objc_msgSend(v4, "setMenu:", v5);

  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = v6;
  v8 = sub_10056BA4C();
  objc_msgSend(v7, "addSubview:", v8);

  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate]);
  if (Strong)
  {
    v10 = Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "viewScale");
    swift_unknownObjectRelease(v10);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 247, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2u, 247, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  sub_10056E680();
  v11 = (void *)objc_opt_self(NSNotificationCenter);
  v12 = objc_msgSend(v11, "defaultCenter");
  v13 = swift_allocObject(&unk_10126C8E8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v76 = sub_10056F130;
  v77 = v13;
  aBlock = _NSConcreteStackBlock;
  v73 = *(_QWORD *)"";
  v74 = sub_100568280;
  v75 = &unk_10126CA68;
  v14 = _Block_copy(&aBlock);
  v15 = objc_msgSend(v12, "addObserverForName:object:queue:usingBlock:", CFSTR("CRLCanvasUpdateZoomNotification"), 0, 0, v14, swift_release(v77).n128_f64[0]);
  _Block_release(v14);

  v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomUpdateObserver];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomUpdateObserver] = v15;
  swift_unknownObjectRelease(v16);
  v17 = objc_msgSend(v11, "defaultCenter");
  v18 = swift_allocObject(&unk_10126C8E8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v76 = sub_10056F138;
  v77 = v18;
  aBlock = _NSConcreteStackBlock;
  v73 = *(_QWORD *)"";
  v74 = sub_100568280;
  v75 = &unk_10126CA90;
  v19 = _Block_copy(&aBlock);
  v20 = objc_msgSend(v17, "addObserverForName:object:queue:usingBlock:", CFSTR("CRLCanvasDidZoomNotification"), 0, 0, v19, swift_release(v77).n128_f64[0]);
  _Block_release(v19);

  v21 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomDidChangeObserver];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomDidChangeObserver] = v20;
  swift_unknownObjectRelease(v21);
  v22 = objc_msgSend(v11, "defaultCenter");
  v23 = swift_allocObject(&unk_10126C8E8, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16);
  v76 = sub_10056F140;
  v77 = v23;
  aBlock = _NSConcreteStackBlock;
  v73 = *(_QWORD *)"";
  v74 = sub_100568280;
  v75 = &unk_10126CAB8;
  v24 = _Block_copy(&aBlock);
  v25 = objc_msgSend(v22, "addObserverForName:object:queue:usingBlock:", UIContentSizeCategoryDidChangeNotification, 0, 0, v24, swift_release(v77).n128_f64[0]);
  _Block_release(v24);

  v26 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_contentSizeCategoryChangeObserver];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_contentSizeCategoryChangeObserver] = v25;
  swift_unknownObjectRelease(v26);
  v27 = sub_10056BA4C();
  v28 = objc_msgSend(v27, "widthAnchor");

  v29 = objc_msgSend(v28, "constraintEqualToConstant:", 81.0);
  v30 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint;
  v31 = *(void **)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint] = v29;

  v32 = sub_10056BA4C();
  v33 = objc_msgSend(v32, "heightAnchor");

  v34 = objc_msgSend(v33, "constraintEqualToConstant:", 44.0);
  v35 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint;
  v36 = *(void **)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint] = v34;

  v37 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v38 = swift_allocObject(v37, 80, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100EF8FC0;
  v39 = *(void **)&v0[v30];
  if (!v39)
    goto LABEL_13;
  v40 = (void **)v38;
  *(_QWORD *)(v38 + 32) = v39;
  v41 = *(void **)&v0[v35];
  if (!v41)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)(v38 + 40) = v41;
  v42 = v39;
  v43 = v41;
  v44 = sub_10056BA4C();
  v45 = objc_msgSend(v44, "topAnchor");

  v46 = objc_msgSend(v0, "view");
  if (!v46)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v47 = v46;
  v48 = objc_msgSend(v46, "topAnchor");

  v49 = objc_msgSend(v45, "constraintEqualToAnchor:", v48);
  v40[6] = v49;
  v50 = sub_10056BA4C();
  v51 = objc_msgSend(v50, "leadingAnchor");

  v52 = objc_msgSend(v0, "view");
  if (!v52)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, "leadingAnchor");

  v55 = objc_msgSend(v51, "constraintEqualToAnchor:", v54);
  v40[7] = v55;
  v56 = sub_10056BA4C();
  v57 = objc_msgSend(v56, "trailingAnchor");

  v58 = objc_msgSend(v0, "view");
  if (!v58)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v59 = v58;
  v60 = objc_msgSend(v58, "trailingAnchor");

  v61 = objc_msgSend(v57, "constraintEqualToAnchor:", v60);
  v40[8] = v61;
  v62 = sub_10056BA4C();
  v63 = objc_msgSend(v62, "bottomAnchor");

  v64 = objc_msgSend(v0, "view");
  if (v64)
  {
    v65 = v64;
    v66 = (void *)objc_opt_self(NSLayoutConstraint);
    v67 = objc_msgSend(v65, "bottomAnchor");

    v68 = objc_msgSend(v63, "constraintEqualToAnchor:", v67);
    v40[9] = v68;
    aBlock = v40;
    specialized Array._endMutation()(v69);
    v70 = aBlock;
    sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v66, "activateConstraints:", isa, swift_bridgeObjectRelease(v70).n128_f64[0]);

    return;
  }
LABEL_18:
  __break(1u);
}

void sub_10056DD20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);
    if (!v5)
    {
LABEL_11:

      return;
    }
    v6 = v5;
    v7 = *(id *)(v5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
    v8 = swift_unknownObjectRelease(v6);
    Notification.object.getter(v12, v8);
    if (v12[3])
    {
      v9 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
      if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
      {
        v10 = v11;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        if ((static NSObject.== infix(_:_:)(v7, v10) & 1) != 0)
        {
          objc_msgSend(v10, "currentViewScale");
          sub_10056E680();
        }

        v4 = v7;
        v7 = v10;
        goto LABEL_10;
      }
    }
    else
    {
      sub_1004D28EC((uint64_t)v12);
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 253, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2u, 253, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_10:

    v4 = v7;
    goto LABEL_11;
  }
}

void sub_10056DEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  UIAccessibilityNotifications v12;
  id v13;
  void *v14;
  _QWORD v15[4];
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate);
    if (v5)
    {
      v6 = v5;
      v7 = *(id *)(v5 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
      v8 = swift_unknownObjectRelease(v6);
      Notification.object.getter(v15, v8);
      if (v15[3])
      {
        v9 = sub_1004B8930(0, &qword_1013E4890, off_101229918);
        if ((swift_dynamicCast(&v14, v15, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
        {
          v10 = v14;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
          if ((static NSObject.== infix(_:_:)(v7, v10) & 1) == 0
            || (objc_msgSend(v10, "currentViewScale"),
                sub_10056E680(),
                v11 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange,
                *((_BYTE *)v4
                + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange) != 1))
          {

            v7 = v10;
            goto LABEL_12;
          }
          v12 = UIAccessibilityLayoutChangedNotification;
          v13 = sub_10056BA4C();
          UIAccessibilityPostNotification(v12, v13);

          *((_BYTE *)v4 + v11) = 0;
          goto LABEL_8;
        }
      }
      else
      {
        sub_1004D28EC((uint64_t)v15);
      }
      sub_100757E04(&_mh_execute_header, (uint64_t)"viewDidLoad()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2, 264, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewDidLoad()", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSCanvasZoomControlViewController.swift", 107, 2u, 264, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      goto LABEL_12;
    }
LABEL_8:
    v7 = v4;
LABEL_12:

  }
}

void sub_10056E124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10056E3EC();

  }
}

void sub_10056E1FC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v2 = v1;
  v3 = objc_msgSend(v1, "layer");

  if (qword_1013DCA80 != -1)
    swift_once(&qword_1013DCA80, sub_10056B9CC);
  v4 = objc_msgSend((id)qword_1013E2DC8, "CGColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "view");
  if (!v5)
    goto LABEL_11;
  v6 = v5;
  v7 = objc_msgSend(v5, "layer");

  objc_msgSend(v7, "setCornerRadius:", 10.0);
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "layer");

  if (qword_1013DCA98 != -1)
    swift_once(&qword_1013DCA98, sub_10056BA34);
  objc_msgSend(v10, "setCornerCurve:", qword_1013E2DE0);

  v11 = objc_msgSend(v0, "view");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "layer");

    objc_msgSend(v13, "setMaskedCorners:", 5);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_10056E3EC()
{
  uint64_t v0;
  NSNumber v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t inited;
  NSString *v7;
  id v8;
  unint64_t v9;
  Class isa;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double Width;
  double Height;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  _BYTE v26[72];
  CGRect v27;
  CGRect v28;

  v1.super.super.isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  v2 = sub_10056ED2C();
  v3 = objc_msgSend((id)objc_opt_self(NSNumberFormatter), "localizedStringFromNumber:numberStyle:", v1.super.super.isa, 3);
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = v3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v5, v26);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_101401710, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v2;
  v7 = NSFontAttributeName;
  v8 = v2;
  v9 = sub_1008D4FE0(inited);
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v4, "boundingRectWithSize:options:attributes:context:", 0, isa, 0, 1.79769313e308, 1.79769313e308);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v27.origin.x = v12;
  v27.origin.y = v14;
  v27.size.width = v16;
  v27.size.height = v18;
  Width = CGRectGetWidth(v27);
  v28.origin.x = v12;
  v28.origin.y = v14;
  v28.size.width = v16;
  v28.size.height = v18;
  Height = CGRectGetHeight(v28);

  v21 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint);
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v21, "setConstant:", fmax(ceil(Width) + 32.0, 81.0));
  v22 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint);
  if (!v22)
  {
LABEL_9:
    __break(1u);
    return;
  }
  objc_msgSend(v22, "setConstant:", fmax(ceil(Height) + 10.0, 44.0));
  v23 = sub_10056BA4C();
  v24 = objc_msgSend(v23, "titleLabel");

  if (v24)
  {
    v25 = sub_10056ED2C();
    objc_msgSend(v24, "setFont:", v25);

  }
}

void sub_10056E680()
{
  void *v0;
  Class isa;
  id v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  uint64_t v27;
  id v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Class v35;

  v0 = (void *)objc_opt_self(NSNumberFormatter);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  v2 = objc_msgSend(v0, "localizedStringFromNumber:numberStyle:", isa, 3);

  v3 = v2;
  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v5 = v4;
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v8 = v7;
  v9 = sub_10056BA4C();
  objc_msgSend(v9, "setTitle:forState:", v3, 0);

  v10 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5A10;
  *(_QWORD *)(v11 + 32) = v6;
  *(_QWORD *)(v11 + 40) = v8;
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v12, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  *(_QWORD *)(v11 + 48) = v17;
  *(_QWORD *)(v11 + 56) = v19;
  v20 = sub_10056BA4C();
  v21 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v22 = sub_100500464();
  BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v21, v22);
  v24 = v23;
  swift_bridgeObjectRelease(v11);
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setAccessibilityLabel:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v26 = sub_10056BA4C();
  v27 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100EF5E40;
  v28 = objc_msgSend(v12, "mainBundle");
  v29 = String._bridgeToObjectiveC()();
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v28, "localizedStringForKey:value:table:", v29, v30, 0);

  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  *(_QWORD *)(v27 + 32) = v32;
  *(_QWORD *)(v27 + 40) = v34;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "setAccessibilityUserInputLabels:", v35, swift_bridgeObjectRelease(v27).n128_f64[0]);

}

id sub_10056E9A8(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  char *v6;
  NSString v7;
  id v8;
  objc_super v10;

  v6 = &v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_defaultViewScale] = 0x3FF0000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomUpdateObserver] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomDidChangeObserver] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_contentSizeCategoryChangeObserver] = 0;
  v3[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 0;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id sub_10056EB28(void *a1)
{
  _BYTE *v1;
  char *v3;
  id v4;
  objc_super v6;

  v3 = &v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_defaultViewScale] = 0x3FF0000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomUpdateObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_zoomDidChangeObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController____lazy_storage___button] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_buttonHeightConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_contentSizeCategoryChangeObserver] = 0;
  v1[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_shouldRefocusZoomButtonUponNextZoomChange] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id sub_10056EC34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSCanvasZoomControlViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSCanvasZoomControlViewController()
{
  return objc_opt_self(_TtC8Freeform37CRLiOSCanvasZoomControlViewController);
}

id sub_10056ED2C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  char v6;
  id v7;
  id v8;
  id v9;
  char v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Class isa;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v21;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EEF400;
  v2 = (void *)objc_opt_self(UITraitCollection);
  v3 = objc_msgSend(v2, "currentTraitCollection");
  *(_QWORD *)(v1 + 32) = v3;
  v21 = v1;
  specialized Array._endMutation()(v3);
  v4 = objc_msgSend(v2, "currentTraitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  if (qword_1013DCA88 != -1)
    swift_once(&qword_1013DCA88, sub_10056BA04);
  v6 = static UIContentSizeCategory.< infix(_:_:)(v5, qword_1013E2DD0);

  if ((v6 & 1) != 0)
  {
    v7 = objc_msgSend(v2, "traitCollectionWithPreferredContentSizeCategory:", qword_1013E2DD0);
LABEL_9:
    v11 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v13 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v12 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
    specialized Array._endMutation()(v14);
    goto LABEL_12;
  }
  v8 = objc_msgSend(v2, "currentTraitCollection");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  if (qword_1013DCA90 != -1)
    swift_once(&qword_1013DCA90, sub_10056BA1C);
  v10 = static UIContentSizeCategory.> infix(_:_:)(v9, qword_1013E2DD8);

  if ((v10 & 1) != 0)
  {
    v7 = objc_msgSend(v2, "traitCollectionWithPreferredContentSizeCategory:", qword_1013E2DD8);
    goto LABEL_9;
  }
LABEL_12:
  sub_1004B8930(0, &qword_1013E1430, UITraitCollection_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v2, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v17 = (void *)objc_opt_self(UIFont);
  v18 = objc_msgSend(v17, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleHeadline, v16);
  objc_msgSend(v18, "pointSize");
  v19 = objc_msgSend(v17, "monospacedDigitSystemFontOfSize:weight:");

  return v19;
}

uint64_t sub_10056F008()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10056F02C(void (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t v2;

  sub_10056C330(a1, a2, v2);
}

uint64_t sub_10056F034(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10056F044(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10056F04C(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_10056CA9C(a1, a2, v2);
}

void sub_10056F054(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_10056CD58(a1, a2, v2);
}

double sub_10056F05C(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  return sub_10056D168(a1, a2, v2);
}

uint64_t sub_10056F064()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10056F088(uint64_t a1)
{
  uint64_t v1;

  sub_10056D4CC(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_10056F094()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10056F0BC(uint64_t a1)
{
  uint64_t v1;

  return sub_10056D0BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (SEL *)&selRef_zoomToFitAllContent);
}

uint64_t sub_10056F0E0(uint64_t a1)
{
  uint64_t v1;

  return sub_10056D0BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (SEL *)&selRef_zoomToCurrentSelection);
}

uint64_t sub_10056F100()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10056F124(uint64_t a1)
{
  uint64_t v1;

  sub_10056C9C8(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16));
}

void sub_10056F130(uint64_t a1)
{
  uint64_t v1;

  sub_10056DD20(a1, v1);
}

void sub_10056F138(uint64_t a1)
{
  uint64_t v1;

  sub_10056DEFC(a1, v1);
}

void sub_10056F140(uint64_t a1)
{
  uint64_t v1;

  sub_10056E124(a1, v1);
}

Swift::Int sub_10056F178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v7, v1, v2);
  v3 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  dispatch thunk of Hashable.hash(into:)(v7, v1, v2);
  dispatch thunk of Hashable.hash(into:)(v7, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_10056F264(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = type metadata accessor for UUID(0);
  v4 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
  v5 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v6 = *v5;
  v7 = v5[1];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
  return dispatch thunk of Hashable.hash(into:)(a1, v3, v4);
}

Swift::Int sub_10056F340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, a1);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v3);
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v5 = *v4;
  v6 = v4[1];
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v3);
  dispatch thunk of Hashable.hash(into:)(v8, v2, v3);
  return Hasher._finalize()();
}

void sub_10056F42C(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t, __n128);
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t inited;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  char *v112;
  id v113;
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t);
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  char v152;
  void *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v167;
  _QWORD v168[2];
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  int64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  uint64_t v180;
  __int128 v181;
  NSString *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  void (*v192)(char *, uint64_t, uint64_t);
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  void (*v200)(char *, uint64_t, __n128);
  char *v201;
  id v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209[24];
  uint64_t v210;
  _BYTE v211[24];
  char v212[24];
  _QWORD v213[3];
  _QWORD v214[3];
  _QWORD v215[6];

  v191 = a2;
  v187 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v187);
  v186 = (char *)v168 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v7 = (char *)v168 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v168 - v9;
  __chkstk_darwin(v11);
  v185 = (uint64_t)v168 - v12;
  v13 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v13);
  v189 = (uint64_t)v168 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = type metadata accessor for UUID(0);
  v199 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v190 = (char *)v168 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v198 = (char *)v168 - v17;
  __chkstk_darwin(v18);
  v197 = (char *)v168 - v19;
  v20 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest(0);
  v183 = *(_QWORD *)(v20 - 8);
  v184 = v20;
  __chkstk_darwin(v20);
  v177 = (uint64_t)v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v196 = (uint64_t)v168 - v23;
  v178 = v24;
  __chkstk_darwin(v25);
  v203 = (uint64_t)v168 - v26;
  v170 = v10;
  v171 = v7;
  v169 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v27 = a1;
    else
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v28 = __CocoaSet.makeIterator()(v27);
    v29 = type metadata accessor for CRLAsset();
    v30 = sub_1004B7878((unint64_t *)&unk_1013E4650, (uint64_t (*)(uint64_t))type metadata accessor for CRLAsset, (uint64_t)&protocol conformance descriptor for NSObject);
    v31 = Set.Iterator.init(_cocoa:)(v215, v28, v29, v30);
    a1 = v215[0];
    v175 = v215[1];
    v32 = v215[2];
    v33 = v215[3];
    v34 = v215[4];
  }
  else
  {
    v35 = -1 << *(_BYTE *)(a1 + 32);
    v36 = *(_QWORD *)(a1 + 56);
    v175 = a1 + 56;
    v32 = ~v35;
    v37 = -v35;
    if (v37 < 64)
      v38 = ~(-1 << v37);
    else
      v38 = -1;
    v34 = v38 & v36;
    swift_bridgeObjectRetain(a1);
    v33 = 0;
  }
  v168[1] = v32;
  v173 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v174 = (unint64_t)(v32 + 64) >> 6;
  v39 = _swiftEmptyArrayStorage;
  v182 = CKCurrentUserDefaultName;
  v181 = xmmword_100EF5E40;
  v172 = (char *)&type metadata for Swift.AnyObject + 8;
  v176 = a1;
  while (a1 < 0)
  {
    v43 = __CocoaSet.Iterator.next()(v31);
    if (!v43)
      goto LABEL_52;
    v44 = v43;
    v213[0] = v43;
    v45 = type metadata accessor for CRLAsset();
    swift_unknownObjectRetain(v44);
    swift_dynamicCast(v214, v213, v172, v45, 7);
    v46 = (id)v214[0];
    swift_unknownObjectRelease(v44);
    v42 = v33;
    v40 = v34;
    if (!v46)
      goto LABEL_52;
LABEL_34:
    v194 = v40;
    v195 = v42;
    v50 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    v51 = v203 + *(int *)(v184 + 24);
    v52 = v191;
    v201 = v191;
    v53 = (char *)v46;
    v193 = v51;
    UUID.init()(v53);
    v202 = v53;
    v54 = &v53[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
    v55 = *((_QWORD *)v54 + 3);
    v56 = *((_QWORD *)v54 + 4);
    sub_1004BB5A4(v54, v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 24))(v55, v56);
    v57 = *(_QWORD *)&v52[v50];
    v58 = v57 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v57 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v209, 0, 0);
    v59 = v58;
    v60 = v189;
    sub_1004B8460(v59, v189, type metadata accessor for CRLBoardCRDTData);
    swift_retain(v57);
    v61 = sub_1004B804C(&qword_1013E1A80);
    v62 = v197;
    CRRegister.wrappedValue.getter(v61);
    sub_1004B84A4(v60, type metadata accessor for CRLBoardCRDTData);
    v63 = swift_release(v57);
    v64 = (uint64_t *)(*(_QWORD *)&v52[v50] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    v66 = *v64;
    v65 = v64[1];
    v67 = *(void (**)(char *, char *, uint64_t, __n128))(v199 + 16);
    v67(v198, v62, v204, v63);
    v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v182);
    v70 = v66 == v68 && v65 == v69;
    v192 = (void (*)(char *, uint64_t, uint64_t))v67;
    if (v70
      || (v71 = v69,
          v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v65, v68, v69, 0),
          swift_bridgeObjectRetain(v65),
          v73 = swift_bridgeObjectRelease(v71),
          (v72 & 1) != 0))
    {
      v73 = swift_bridgeObjectRelease(v65);
      v66 = 0;
      v65 = 0xE000000000000000;
    }
    v74 = v199;
    v75 = v204;
    v200 = *(void (**)(char *, uint64_t, __n128))(v199 + 8);
    v200(v197, v204, v73);
    v76 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    v77 = (uint64_t)v186;
    v76(v186, v198, v75);
    v78 = (_QWORD *)(v77 + *(int *)(v187 + 20));
    *v78 = v66;
    v78[1] = v65;
    v79 = v185;
    sub_1004B84E0(v77, v185, type metadata accessor for CRLBoardIdentifierStorage);
    v80 = v79;
    v81 = v203;
    sub_1004B84E0(v80, v203, type metadata accessor for CRLBoardIdentifier);

    sub_1004B8460(v81, v196, type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
    if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
      v39 = (_QWORD *)sub_100D109B0(0, v39[2] + 1, 1, (unint64_t)v39);
    v83 = v39[2];
    v82 = v39[3];
    if (v83 >= v82 >> 1)
      v39 = (_QWORD *)sub_100D109B0(v82 > 1, v83 + 1, 1, (unint64_t)v39);
    v39[2] = v83 + 1;
    v84 = *(unsigned __int8 *)(v183 + 80);
    sub_1004B84E0(v196, (uint64_t)v39 + ((v84 + 32) & ~v84) + *(_QWORD *)(v183 + 72) * v83, type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
    v85 = *((_QWORD *)v54 + 3);
    v86 = *((_QWORD *)v54 + 4);
    sub_1004BB5A4(v54, v85);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v86 + 64))(v85, v86) & 1) != 0)
    {
      v180 = (v84 + 32) & ~v84;
      v188 = v39;
      if (qword_1013DD8C0 != -1)
        swift_once(&qword_1013DD8C0, sub_100A0685C);
      swift_beginAccess(&static OS_os_log.assetManagement, &v206, 0, 0);
      v87 = (void *)static OS_os_log.assetManagement;
      v88 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v88, &v205);
      *(_OWORD *)(inited + 16) = v181;
      v91 = *((_QWORD *)v54 + 3);
      v90 = *((_QWORD *)v54 + 4);
      sub_1004BB5A4(v54, v91);
      v92 = *(uint64_t (**)(uint64_t, uint64_t))(v90 + 24);
      v179 = v87;
      v93 = v190;
      v94 = v92(v91, v90);
      v95 = UUID.uuidString.getter(v94);
      v97 = v96;
      v98 = v204;
      ((void (*)(char *, uint64_t))v200)(v93, v204);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v95;
      *(_QWORD *)(inited + 40) = v97;
      v100 = static os_log_type_t.default.getter(v99);
      v101 = v179;
      sub_100A06EBC((uint64_t)v179, &_mh_execute_header, v100, "Observing on asset download for asset: %{public}@", 49, 2, inited);
      swift_setDeallocating(inited);
      v102 = *(_QWORD *)(inited + 16);
      v103 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v102, v103);

      v192(v93, v193, v98);
      v104 = v177;
      sub_1004B8460(v203, v177, type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
      v105 = v180;
      v106 = swift_allocObject(&unk_10126CAF0, v180 + v178, v84 | 7);
      v108 = v201;
      v107 = v202;
      *(_QWORD *)(v106 + 16) = v201;
      *(_QWORD *)(v106 + 24) = v107;
      sub_1004B84E0(v104, v106 + v105, type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
      v109 = *((_QWORD *)v54 + 3);
      v110 = *((_QWORD *)v54 + 4);
      sub_1004BB5A4(v54, v109);
      v111 = *(void (**)(char *, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v110 + 72);
      v112 = v108;
      v113 = v107;
      v111(v93, 14, sub_100570DA4, v106, v109, v110);
      v114 = swift_release(v106);
      v200(v93, v204, v114);
      v115 = *((_QWORD *)v54 + 3);
      v116 = *((_QWORD *)v54 + 4);
      sub_1004BB5A4(v54, v115);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v116 + 64))(v115, v116) & 1) != 0)
      {
        v117 = *((_QWORD *)v54 + 3);
        v118 = *((_QWORD *)v54 + 4);
        sub_1004BB5A4(v54, v117);
        (*(void (**)(uint64_t, uint64_t))(v118 + 88))(v117, v118);
      }
      a1 = v176;
      v39 = v188;
    }
    else
    {
      v119 = v39;
      if (qword_1013DD8C0 != -1)
        swift_once(&qword_1013DD8C0, sub_100A0685C);
      swift_beginAccess(&static OS_os_log.assetManagement, &v208, 0, 0);
      v120 = (void *)static OS_os_log.assetManagement;
      v121 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v122 = swift_initStackObject(v121, &v207);
      *(_OWORD *)(v122 + 16) = v181;
      v123 = *((_QWORD *)v54 + 3);
      v124 = *((_QWORD *)v54 + 4);
      sub_1004BB5A4(v54, v123);
      v125 = *(uint64_t (**)(uint64_t, uint64_t))(v124 + 24);
      v113 = v120;
      v126 = v190;
      v127 = v125(v123, v124);
      v128 = UUID.uuidString.getter(v127);
      v130 = v129;
      ((void (*)(char *, uint64_t))v200)(v126, v204);
      *(_QWORD *)(v122 + 56) = &type metadata for String;
      *(_QWORD *)(v122 + 64) = sub_1004CFC2C();
      *(_QWORD *)(v122 + 32) = v128;
      *(_QWORD *)(v122 + 40) = v130;
      v132 = static os_log_type_t.default.getter(v131);
      sub_100A06EBC((uint64_t)v113, &_mh_execute_header, v132, "We are trying to registerAssetsNeedingDownload when the needsDownload is false for asset: %{public}@", 100, 2, v122);
      swift_setDeallocating(v122);
      v133 = *(_QWORD *)(v122 + 16);
      v134 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(v122 + 32, v133, v134);

      v39 = v119;
    }
    v34 = v194;
    v33 = v195;

    v31 = (_QWORD *)sub_1004B84A4(v203, type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
  }
  if (v34)
  {
    v40 = (v34 - 1) & v34;
    v41 = __clz(__rbit64(v34)) | (v33 << 6);
    v42 = v33;
    goto LABEL_33;
  }
  v47 = v33 + 1;
  if (__OFADD__(v33, 1))
  {
    __break(1u);
    return;
  }
  if (v47 >= v174)
    goto LABEL_52;
  v48 = *(_QWORD *)(v175 + 8 * v47);
  v42 = v33 + 1;
  if (v48)
    goto LABEL_32;
  v42 = v33 + 2;
  if (v33 + 2 >= v174)
    goto LABEL_52;
  v48 = *(_QWORD *)(v175 + 8 * v42);
  if (v48)
    goto LABEL_32;
  v42 = v33 + 3;
  if (v33 + 3 >= v174)
    goto LABEL_52;
  v48 = *(_QWORD *)(v175 + 8 * v42);
  if (v48)
    goto LABEL_32;
  v42 = v33 + 4;
  if (v33 + 4 >= v174)
    goto LABEL_52;
  v48 = *(_QWORD *)(v175 + 8 * v42);
  if (v48)
  {
LABEL_32:
    v40 = (v48 - 1) & v48;
    v41 = __clz(__rbit64(v48)) + (v42 << 6);
LABEL_33:
    v46 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v41);
    if (!v46)
      goto LABEL_52;
    goto LABEL_34;
  }
  v49 = v33 + 5;
  while (v174 != v49)
  {
    v48 = *(_QWORD *)(v175 + 8 * v49++);
    if (v48)
    {
      v42 = v49 - 1;
      goto LABEL_32;
    }
  }
LABEL_52:
  sub_1004D284C(a1);
  v135 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v136 = v191;
  v137 = *(_QWORD *)&v191[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v138 = v137 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v137 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v214, 0, 0);
  v139 = v138;
  v140 = v189;
  sub_1004B8460(v139, v189, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v137);
  v141 = sub_1004B804C(&qword_1013E1A80);
  v142 = (uint64_t)v190;
  CRRegister.wrappedValue.getter(v141);
  sub_1004B84A4(v140, type metadata accessor for CRLBoardCRDTData);
  swift_release(v137);
  v143 = (uint64_t *)(*(_QWORD *)&v136[v135] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v144 = *v143;
  v145 = v143[1];
  swift_bridgeObjectRetain(v145);
  v146 = (uint64_t)v170;
  sub_10067AFD0(v142, v144, v145, (uint64_t)v170);
  v147 = v169;
  v148 = (_QWORD *)(v169 + 112);
  swift_beginAccess(v169 + 112, v213, 0, 0);
  v149 = *(_QWORD *)(v147 + 112);
  v150 = *(_QWORD *)(v149 + 16);
  v188 = v39;
  if (v150)
  {
    swift_bridgeObjectRetain(v149);
    v151 = sub_100843264(v146);
    if ((v152 & 1) != 0)
    {
      v153 = *(void **)(*(_QWORD *)(v149 + 56) + 8 * v151);
      swift_bridgeObjectRetain(v153);
    }
    else
    {
      v153 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease(v149);
  }
  else
  {
    v153 = &_swiftEmptySetSingleton;
  }
  sub_1004B84A4(v146, type metadata accessor for CRLBoardIdentifier);
  v154 = v191;
  v155 = *(_QWORD *)&v191[v135];
  v156 = v155 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v155 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v212, 0, 0);
  v157 = v156;
  v158 = v189;
  sub_1004B8460(v157, v189, type metadata accessor for CRLBoardCRDTData);
  swift_retain(v155);
  v159 = (uint64_t)v190;
  CRRegister.wrappedValue.getter(v141);
  sub_1004B84A4(v158, type metadata accessor for CRLBoardCRDTData);
  swift_release(v155);
  v160 = (uint64_t *)(*(_QWORD *)&v154[v135] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v161 = *v160;
  v162 = v160[1];
  swift_bridgeObjectRetain(v162);
  v163 = (uint64_t)v171;
  sub_10067AFD0(v159, v161, v162, (uint64_t)v171);
  v164 = (uint64_t)v188;
  v165 = sub_100CE50D4((uint64_t)v188, (uint64_t)v153);
  swift_bridgeObjectRelease(v164);
  swift_beginAccess(v148, v211, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v148);
  v210 = *v148;
  *v148 = 0x8000000000000000;
  sub_100827228(v165, v163, isUniquelyReferenced_nonNull_native);
  v167 = *v148;
  *v148 = v210;
  swift_bridgeObjectRelease(v167);
  sub_1004B84A4(v163, type metadata accessor for CRLBoardIdentifier);
  swift_endAccess(v211);
}

void sub_1005701BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t inited;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  Class isa;
  double v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD v35[3];
  _BYTE v36[112];

  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
    {
      v34 = a3;
      v33 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1013DCAA0 != -1)
        swift_once(&qword_1013DCAA0, sub_100570B08);
      v32 = qword_10147E9B8;
      v14 = sub_1004B804C(&qword_1013E49B0);
      inited = swift_initStackObject(v14, v36);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v35[0] = 0x6564496472616F62;
      v35[1] = 0xEF7265696669746ELL;
      AnyHashable.init<A>(_:)(v35, &type metadata for String, &protocol witness table for String);
      *(_QWORD *)(inited + 96) = type metadata accessor for CRLBoardIdentifier(0);
      v16 = sub_10050D1B0((_QWORD *)(inited + 72));
      v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v35, 0, 0);
      sub_1004B8460(v19, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
      swift_retain(v18);
      v20 = sub_1004B804C(&qword_1013E1A80);
      CRRegister.wrappedValue.getter(v20);
      sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
      swift_release(v18);
      v21 = (uint64_t *)(*(_QWORD *)(a2 + v17) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      v22 = *v21;
      v23 = v21[1];
      swift_bridgeObjectRetain(v23);
      sub_10067AFD0((uint64_t)v13, v22, v23, (uint64_t)v16);
      v24 = sub_1008D5828(inited);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(v24).n128_u64[0];
      v27 = v33;
      objc_msgSend(v33, "postNotificationName:object:userInfo:", v32, 0, isa, v26);

      a3 = v34;
    }
    v28 = a4
        + *(int *)(type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest(0) + 24);
    v29 = (_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
    v30 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
    v31 = v29[4];
    sub_1004BB5A4(v29, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 80))(v28, v30, v31);
  }
}

uint64_t sub_1005704B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper()
{
  return objc_opt_self(_TtC8Freeform44CRLBoardPreviewImageCacheAssetDownloadHelper);
}

uint64_t *sub_1005704F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t, __n128);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __n128 v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v7 - 8) + 16);
    ((void (*)(uint64_t *, uint64_t *, uint64_t))v8)(a1, a2, v7);
    v9 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = swift_bridgeObjectRetain(v12);
    v8(v14, v15, v7, v16);
    ((void (*)(char *, char *, uint64_t))v8)((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v7);
  }
  return a1;
}

uint64_t sub_1005705D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UUID(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v6 = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v5 + 20) + 8));
  ((void (*)(uint64_t, uint64_t, __n128))v8)(a1 + *(int *)(a2 + 20), v4, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 24), v4);
}

uint64_t sub_100570668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = swift_bridgeObjectRetain(v11);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(v13, v14, v6, v15);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10057071C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v12 = v9[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  v13 = swift_bridgeObjectRelease(v12);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6, v13);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_1005707D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v8 + 20)) = *(_OWORD *)(a2 + *(int *)(v8 + 20));
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10057086C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  v13 = v9[1];
  *v9 = v12;
  v9[1] = v11;
  v14 = swift_bridgeObjectRelease(v13);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v7)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6, v14);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_100570914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100570920);
}

uint64_t sub_100570920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100570994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005709A0);
}

uint64_t sub_1005709A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for UUID(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E2F88;
  if (!qword_1013E2F88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
  return result;
}

uint64_t sub_100570A58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      swift_initStructMetadata(a1, 256, 3, &v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100570ADC()
{
  return sub_1004B7878(qword_1013E2FC8, type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest, (uint64_t)&unk_100EF9088);
}

NSString sub_100570B08()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147E9B8 = (uint64_t)result;
  return result;
}

uint64_t sub_100570B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v21;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - v8;
  v10 = static UUID.== infix(_:_:)(a1);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  if ((v10 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
LABEL_12:
    v18 = 0;
    return v18 & 1;
  }
  v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v12 = *(_QWORD *)&v9[v11];
  v13 = *(_QWORD *)&v9[v11 + 8];
  v14 = &v6[v11];
  v15 = *((_QWORD *)v14 + 1);
  if (v12 == *(_QWORD *)v14 && v13 == v15)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, *(_QWORD *)v14, v15, 0);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    v18 = 0;
    if ((v17 & 1) == 0)
      return v18 & 1;
  }
  v19 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest(0);
  if ((static UUID.== infix(_:_:)(a1 + *(int *)(v19 + 20)) & 1) == 0)
    goto LABEL_12;
  v18 = static UUID.== infix(_:_:)(a1 + *(int *)(v19 + 24));
  return v18 & 1;
}

uint64_t sub_100570CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  __n128 v11;

  v1 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  v7 = v0 + v4;
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = type metadata accessor for CRLBoardIdentifierStorage(0);
  v11 = swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v10 + 20) + 8));
  ((void (*)(uint64_t, uint64_t, __n128))v9)(v7 + *(int *)(v1 + 20), v8, v11);
  v9(v7 + *(int *)(v1 + 24), v8);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100570DA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest(0)
                                      - 8)
                          + 80);
  sub_1005701BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_100570DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v12[5];

  v5 = *(_QWORD *)(a1 + 200);
  v6 = *(_QWORD *)(a1 + 208);
  v7 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData(255, v5, v6, a4);
  result = type metadata accessor for Optional(319, v7);
  if (v10 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(result - 8) + 64;
    v12[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v12[3] = &unk_100EF9138;
    result = type metadata accessor for CRLWPAttributeDictionary(319, v5, v6, v9);
    if (v11 <= 0x3F)
    {
      v12[4] = *(_QWORD *)(result - 8) + 64;
      result = swift_initClassMetadata2(a1, 0, 5, v12, a1 + 216);
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_100570EB8(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a5;
  v24 = a2;
  v25 = a3;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a6 = a1;
  v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v20)
  {
    type metadata accessor for CRLWPFormatTextCommand.CoalescingData(0, a4, v23, v17);
    (*(void (**)(void))(*(_QWORD *)v20 + 760))();
    sub_1004D29BC((uint64_t)&v15[*(int *)(v13 + 20)], (uint64_t)v19);
    v21 = a1;
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v19, v9);
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
    CRAttributedString.cursor(range:)(v24, v25, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  }
  else
  {
    __break(1u);
  }
}

void sub_10057106C(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[2];
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v3;
  if (*v3 == *a1)
  {
    v30 = a2;
    v18 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (!v18)
    {
      __break(1u);
LABEL_8:
      __break(1u);
      return;
    }
    v19 = (char *)v3 + *(int *)(v30 + 36);
    (*(void (**)(__n128))(*(_QWORD *)v18 + 760))(v14);
    sub_1004D29BC((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v16);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
    v29 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v29(v9, v16, v6);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    v20 = CRAttributedString.range(of:)(v19, v6);
    v28[0] = v21;
    v28[1] = v20;
    v23 = v22;
    v24 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v25 = v24(v9, v6);
    if ((v23 & 1) == 0)
    {
      v26 = *(_QWORD *)(*v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
      if (v26)
      {
        v27 = (char *)a1 + *(int *)(v30 + 36);
        (*(void (**)(uint64_t))(*(_QWORD *)v26 + 760))(v25);
        sub_1004D29BC((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v16);
        sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
        v29(v9, v16, v6);
        sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
        CRAttributedString.range(of:)(v27, v6);
        v24(v9, v6);
        return;
      }
      goto LABEL_8;
    }
  }
}

uint64_t sub_1005712E8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9[24];

  v3 = (uint64_t *)(swift_isaMask & *v1);
  v4 = (char *)v1 + v3[27];
  swift_beginAccess(v4, v9, 0, 0);
  v6 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData(255, v3[25], v3[26], v5);
  v7 = type metadata accessor for Optional(0, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
}

uint64_t sub_100571374(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = (uint64_t *)(swift_isaMask & *v1);
  v4 = (char *)v1 + v3[27];
  swift_beginAccess(v4, v9, 33, 0);
  v6 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData(255, v3[25], v3[26], v5);
  v7 = type metadata accessor for Optional(0, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v4, a1, v7);
  return swift_endAccess(v9);
}

void sub_100571408(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v6 = v4;
  v25 = a3;
  v7 = (_QWORD *)(swift_isaMask & *v4);
  v8 = v7[26];
  v27 = v7[25];
  v9 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData(255, v27, v8, a4);
  v10 = type metadata accessor for Optional(0, v9);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v23 - v11);
  v13 = *(_QWORD *)((char *)v6 + v7[29]);
  v26 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  v14 = *(void **)(v13 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v14)
  {
    __break(1u);
    goto LABEL_7;
  }
  v15 = (_QWORD *)((char *)v6 + v7[30]);
  v16 = *v15;
  v17 = v15[1];
  v18 = v14;
  sub_100570EB8(v18, v16, v17, v27, v8, v12);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v12, 0, 1, v9);
  sub_100571374((uint64_t)v12);
  sub_100DBEE64(v13, (uint64_t)&off_10127C5E0);
  if (v5)
    return;
  v24 = v8;
  v19 = v27;
  v20 = *(void **)(v13 + v26);
  if (!v20)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v21 = (uint64_t)v6 + *(_QWORD *)((swift_isaMask & *v6) + 0xF8);
  v22 = v20;
  sub_1007DC12C(v21, v16, v17, v19, v24);

  sub_100DB0D78(v13, (uint64_t)&off_10127C5E0, v25);
}

id sub_1005715C8(void *a1, uint64_t a2)
{
  return sub_100571634(a1, a2, (void (*)(void))sub_1005715D4);
}

uint64_t sub_1005715D4()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, "debugDescription");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

id sub_100571628(void *a1, uint64_t a2)
{
  return sub_100571634(a1, a2, (void (*)(void))sub_10057168C);
}

id sub_100571634(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_10057168C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  void *object;
  objc_super v14;
  uint64_t v15;
  uint64_t v16;

  v5 = (objc_class *)type metadata accessor for CRLWPFormatTextCommand(0, *(_QWORD *)((swift_isaMask & *v4) + 0xC8), *(_QWORD *)((swift_isaMask & *v4) + 0xD0), a4);
  v14.receiver = v4;
  v14.super_class = v5;
  v6 = objc_msgSendSuper2(&v14, "description");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v15 = v7;
  v16 = v9;
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = sub_100571A98();
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  return v15;
}

uint64_t sub_10057173C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;

  v5 = v4;
  v7 = swift_isaMask & *v4;
  v8 = *(_QWORD *)(v7 + 0xC8);
  v9 = *(_QWORD *)(v7 + 208);
  v10 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData(255, v8, v9, a4);
  v11 = type metadata accessor for Optional(0, v10);
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - v15;
  v17 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v46 - v22;
  v25 = type metadata accessor for CRLWPFormatTextCommand(0, v8, v9, v24);
  v48 = a1;
  v26 = swift_dynamicCastClass(a1, v25);
  if (!v26)
    goto LABEL_17;
  v27 = (_QWORD *)v26;
  v47 = v20;
  sub_1005712E8((uint64_t)v16);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v28(v16, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v50);
LABEL_17:
    v42 = 0;
    return v42 & 1;
  }
  v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v29(v23, v16, v10);
  sub_1005712E8((uint64_t)v13);
  if (v28(v13, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v10);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v50);
    goto LABEL_17;
  }
  v30 = v17;
  v31 = v47;
  v29(v47, v13, v10);
  if (*(_QWORD *)((char *)v27 + *(_QWORD *)((swift_isaMask & *v27) + 0xE8)) != *(_QWORD *)((char *)v5
                                                                                            + *(_QWORD *)((*v5 & swift_isaMask) + 0xE8)))
  {
    v32 = *(void (**)(char *, uint64_t))(v17 + 8);
    v32(v31, v10);
    v32(v23, v10);
    goto LABEL_17;
  }
  v33 = *(_QWORD *)((char *)v27 + *(_QWORD *)((swift_isaMask & *v27) + 0xF8));
  v34 = *(_QWORD *)((char *)v5 + *(_QWORD *)((*v5 & swift_isaMask) + 0xF8));
  v35 = v48;
  swift_bridgeObjectRetain(v33);
  v37 = sub_1008D9630(v36, v34);
  swift_bridgeObjectRelease(v33);
  if ((v37 & 1) == 0)
    goto LABEL_15;
  v38 = *(_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0xE0));
  if (*(_QWORD *)(v34 + 16) <= *(_QWORD *)(v38 + 16) >> 3)
  {
    v51 = *(_QWORD **)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0xE0));
    swift_bridgeObjectRetain(v38);
    sub_100DB6428(v34);
    v39 = v51;
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)((char *)v5 + *(_QWORD *)((swift_isaMask & *v5) + 0xE0)));
    v39 = sub_100DB7F7C(v34, v38);
  }
  v40 = v39[2];
  swift_bridgeObjectRelease(v39);
  if (!v40)
  {
LABEL_15:

    v44 = *(void (**)(char *, uint64_t))(v30 + 8);
    v44(v31, v10);
    v44(v23, v10);
    goto LABEL_17;
  }
  sub_10057106C(v31, v10);
  v42 = v41;

  v43 = *(void (**)(char *, uint64_t))(v30 + 8);
  v43(v31, v10);
  v43(v23, v10);
  return v42 & 1;
}

uint64_t sub_100571A98()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t *v2;
  id v3;
  NSString v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  id v19;
  uint64_t KeyPath;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  NSString v27;
  NSString v28;
  char v29;
  id v30;
  NSString v31;
  NSString v32;
  NSString v33;
  uint64_t v34;
  unsigned __int8 v35;

  v1 = (uint64_t *)(swift_isaMask & *v0);
  v2 = (_QWORD *)((char *)v0 + v1[31]);
  if (*(_QWORD *)(*v2 + 16) >= 2uLL)
  {
    v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v4 = String._bridgeToObjectiveC()();
    v5 = String._bridgeToObjectiveC()();
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, v6);
    goto LABEL_51;
  }
  v8 = sub_100857EB8(*v2);
  v10 = v9;
  if (!v9)
    return v10;
  v11 = v8;
  v12 = v8 == 1684828002 && v9 == 0xE400000000000000;
  if (v12
    || (_stringCompareWithSmolCheck(_:_:expecting:)(1684828002, 0xE400000000000000, v8, v9, 0) & 1) != 0
    || (v11 == 0x6E696C7265646E75 ? (v13 = v10 == 0xE900000000000065) : (v13 = 0),
        v13
     || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C7265646E75, 0xE900000000000065, v11, v10, 0) & 1) != 0
     || (v11 == 0x63696C617469 ? (v14 = v10 == 0xE600000000000000) : (v14 = 0),
         v14
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x63696C617469, 0xE600000000000000, v11, v10, 0) & 1) != 0
      || (v11 == 0x6874656B69727473 ? (v15 = v10 == 0xED00006867756F72) : (v15 = 0),
          v15
       || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6874656B69727473, 0xED00006867756F72, v11, v10, 0) & 1) != 0
       || (v11 == 0x657A6953746E6F66 ? (v16 = v10 == 0xE800000000000000) : (v16 = 0),
           v16
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657A6953746E6F66, 0xE800000000000000, v11, v10, 0) & 1) != 0
        || (v11 == 0x656D614E746E6F66 ? (v17 = v10 == 0xE800000000000000) : (v17 = 0),
            v17
         || (_stringCompareWithSmolCheck(_:_:expecting:)(0x656D614E746E6F66, 0xE800000000000000, v11, v10, 0) & 1) != 0
         || (v11 == 0x6574636172616863 ? (v18 = v10 == 0xED00006C6C694672) : (v18 = 0),
             v18
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6574636172616863, 0xED00006C6C694672, v11, v10, 0) & 1) != 0
          || v11 == 0x6C7974537473696CLL && v10 == 0xE900000000000065
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6C7974537473696CLL, 0xE900000000000065, v11, v10, 0) & 1) != 0)))))))
  {
    swift_bridgeObjectRelease(v10);
    v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v4 = String._bridgeToObjectiveC()();
    v5 = String._bridgeToObjectiveC()();
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, v6);
LABEL_51:
    v19 = v7;

LABEL_52:
    goto LABEL_53;
  }
  if (v11 == 0xD000000000000012 && v10 == 0x8000000100FAA3D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100FAA3D0, v11, v10, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease(v10);
    KeyPath = swift_getKeyPath(&unk_100EF91A8);
    __chkstk_darwin(KeyPath);
    v22 = (uint64_t *)swift_getKeyPath(&unk_100EF91C8);
    v24 = type metadata accessor for CRLWPAttributeDictionary(0, v1[25], v1[26], v23);
    v25 = sub_100573144();
    sub_1007CB364(v22, v24, v25, &v34);
    swift_release(v22);
    if (v35 != 255 && (v35 & 1) == 0)
    {
      switch(v34)
      {
        case 0:
          v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v27 = String._bridgeToObjectiveC()();
          v28 = String._bridgeToObjectiveC()();
          v6 = String._bridgeToObjectiveC()();
          v19 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, v6);

          goto LABEL_52;
        case 1:
        case 2:
        case 3:
        case 4:
          v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v4 = String._bridgeToObjectiveC()();
          v5 = String._bridgeToObjectiveC()();
          v6 = String._bridgeToObjectiveC()();
          v7 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, v6);
          goto LABEL_51;
        default:
          return 0;
      }
    }
    return 0;
  }
  if (v11 == 0x7061726761726170 && v10 == 0xEE006C6576654C68)
  {
    swift_bridgeObjectRelease(0xEE006C6576654C68);
  }
  else
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7061726761726170, 0xEE006C6576654C68, v11, v10, 0);
    swift_bridgeObjectRelease(v10);
    if ((v29 & 1) == 0)
      return 0;
  }
  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v31 = String._bridgeToObjectiveC()();
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v30, "localizedStringForKey:value:table:", v31, v32, v33);

LABEL_53:
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);

  return v10;
}

void sub_1005729C4()
{
  sub_100573188();
}

uint64_t sub_1005729E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)((swift_isaMask & *v4) + 0xD0);
  v6 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0xD8);
  v7 = *(_QWORD *)((swift_isaMask & *v4) + 0xC8);
  v8 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData(255, v7, v5, a4);
  v9 = type metadata accessor for Optional(0, v8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0xE0)));

  v10 = (char *)v4 + *(_QWORD *)((swift_isaMask & *v4) + 0xF8);
  v12 = type metadata accessor for CRLWPAttributeDictionary(0, v7, v5, v11);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
}

id sub_100572ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for CRLWPFormatTextCommand(0, *(_QWORD *)((swift_isaMask & *v4) + 0xC8), *(_QWORD *)((swift_isaMask & *v4) + 0xD0), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_100572B08(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)((swift_isaMask & *a1) + 0xD0);
  v6 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0xD8);
  v7 = *(_QWORD *)((swift_isaMask & *a1) + 0xC8);
  v8 = type metadata accessor for CRLWPFormatTextCommand.CoalescingData(255, v7, v5, a4);
  v9 = type metadata accessor for Optional(0, v8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0xE0)));

  v10 = (char *)a1 + *(_QWORD *)((swift_isaMask & *a1) + 0xF8);
  v12 = type metadata accessor for CRLWPAttributeDictionary(0, v7, v5, v11);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
}

uint64_t type metadata accessor for CRLWPFormatTextCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLWPFormatTextCommand);
}

uint64_t type metadata accessor for CRLWPFormatTextCommand.CoalescingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLWPFormatTextCommand.CoalescingData);
}

uint64_t sub_100572C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void sub_100572C08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10057300C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
  }
}

void **sub_100572C80(void **a1, void **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v6 = *(int *)(a3 + 36);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = v5;
    v10 = sub_1004B804C(qword_1013E3050);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
  }
  return a1;
}

uint64_t sub_100572D08(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 36);
  v5 = sub_1004B804C(qword_1013E3050);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void **sub_100572D54(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 36);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = v4;
  v9 = sub_1004B804C(qword_1013E3050);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
  return a1;
}

void **sub_100572DB8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 36);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1004B804C(qword_1013E3050);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_QWORD *sub_100572E2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1004B804C(qword_1013E3050);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_100572E8C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1004B804C(qword_1013E3050);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100572EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100572F08);
}

uint64_t sub_100572F08(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(qword_1013E3050);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_100572F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100572F94);
}

char *sub_100572F94(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1004B804C(qword_1013E3050);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

void sub_10057300C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1013E30D8)
  {
    v2 = sub_1004CB6A4(&qword_1013E30E0);
    v3 = sub_1005730A4((unint64_t *)&qword_1013E30E8, (uint64_t)&protocol conformance descriptor for CRAttributedString<A>.Cursor);
    v4 = sub_1005730A4(&qword_1013E30F0, (uint64_t)&protocol conformance descriptor for CRAttributedString<A>.Cursor);
    v5 = type metadata accessor for CursorRange(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1013E30D8);
  }
}

uint64_t sub_1005730A4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1004CB6A4(&qword_1013E30E0);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005730E8()
{
  return sub_100571A98();
}

uint64_t sub_100573110()
{
  return 8;
}

uint64_t sub_10057311C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100573124(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100573138(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_100573144()
{
  unint64_t result;

  result = qword_1013E30F8;
  if (!qword_1013E30F8)
  {
    result = swift_getWitnessTable(&unk_100F0D8D0, &type metadata for CRLWPParagraphAlignmentAttribute);
    atomic_store(result, (unint64_t *)&qword_1013E30F8);
  }
  return result;
}

void sub_100573188()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLWPFormatTextCommand", 31, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1005731B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x695474736574616CLL;
  else
    return 25705;
}

uint64_t sub_1005731F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100574A90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100573214()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_100573220@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

void sub_10057323C(_QWORD *a1@<X8>)
{
  *a1 = &off_101264168;
}

uint64_t sub_10057324C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1005748F8();
  v5 = sub_100574940();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100573290(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100574940();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005732B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100574940();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005732E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char v18;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E33D8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100574940();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardInteractionOwner.CodingKeys, &type metadata for CRLBoardInteractionOwner.CodingKeys, v11, v9, v10);
  v18 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v18, v5, v12, v13);
  if (!v2)
  {
    v14 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for CRLBoardInteractionOwner(0) + 20));
    v17 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, &v17, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100573430@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v29 = a2;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  v33 = v5;
  __chkstk_darwin(v4);
  v30 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1004B804C(&qword_1013E33D0);
  v7 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardInteractionOwner(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v14);
  v15 = sub_100574940();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardInteractionOwner.CodingKeys, &type metadata for CRLBoardInteractionOwner.CodingKeys, v15, v14, v13);
  if (v2)
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  v27 = v10;
  v28 = v12;
  v16 = v7;
  v17 = v33;
  v35 = 0;
  v18 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v19 = v30;
  v20 = v31;
  v21 = v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v32, &v35, v31, v32, v18);
  v22 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v23 = (uint64_t)v28;
  v22(v28, v19, v21);
  v34 = 1;
  v24 = KeyedDecodingContainer.decode(_:forKey:)(&v34, v20);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v20);
  *(_QWORD *)(v23 + *(int *)(v27 + 20)) = v24;
  sub_100574B8C(v23, v29);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return sub_1004B84A4(v23, type metadata accessor for CRLBoardInteractionOwner);
}

Swift::Int sub_1005736A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  v3 = type metadata accessor for UUID(0);
  v4 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v6, v3, v4);
  Hasher._combine(_:)(*(_QWORD *)(v1 + *(int *)(a1 + 20)));
  return Hasher._finalize()();
}

void sub_100573728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  Hasher._combine(_:)(*(_QWORD *)(v2 + *(int *)(a2 + 20)));
}

Swift::Int sub_100573798(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, a1);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v7, v4, v5);
  Hasher._combine(_:)(*(_QWORD *)(v2 + *(int *)(a2 + 20)));
  return Hasher._finalize()();
}

BOOL sub_10057381C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (static UUID.== infix(_:_:)() & 1) != 0
      && *(_QWORD *)(a1 + *(int *)(a3 + 20)) == *(_QWORD *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_10057386C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100573430(a1, a2);
}

uint64_t sub_100573880(_QWORD *a1)
{
  return sub_1005732E0(a1);
}

uint64_t sub_100573894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100574B8C(v1, a1);
}

uint64_t sub_1005738A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013E3370, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF93C8);
  v7 = sub_1004B7878(&qword_1013E33C8, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF9400);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100573934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E33E0, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF9428);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_100573998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E33E0, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF9428);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1005739F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E33E0, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF9428);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100573A44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLBoardInteractionOwnershipCoordinator()
{
  return objc_opt_self(_TtC8Freeform39CRLBoardInteractionOwnershipCoordinator);
}

uint64_t *sub_100573A90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100573B18(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_100573B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100573BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100573C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100573C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100573CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100573CC8);
}

uint64_t sub_100573CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100573D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100573D10);
}

uint64_t sub_100573D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLBoardInteractionOwner(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E3270, (uint64_t)&nominal type descriptor for CRLBoardInteractionOwner);
}

uint64_t sub_100573D64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100573DD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v13);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for UUID(0);
      v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v15(a1, a2, v14);
      v16 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v16 + 20));
      v17 = sub_1004B804C(&qword_1013E32B0);
      v18 = *(int *)(v17 + 48);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v15((uint64_t *)((char *)a1 + v18), (uint64_t *)((char *)a2 + v18), v14);
      *(_QWORD *)&v19[*(int *)(v16 + 20)] = *(_QWORD *)&v20[*(int *)(v16 + 20)];
      v21 = *(int *)(v17 + 64);
      v22 = *(_OWORD *)((char *)a2 + v21 + 24);
      *(_OWORD *)((char *)a1 + v21 + 24) = v22;
      (**(void (***)(void))(v22 - 8))();
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
      v11 = *(int *)(sub_1004B804C(&qword_1013E32A8) + 48);
      v12 = *(_OWORD *)((char *)a2 + v11 + 24);
      *(_OWORD *)((char *)a1 + v11 + 24) = v12;
      (**(void (***)(void))(v12 - 8))();
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_100573F98(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v6 = type metadata accessor for UUID(0);
    v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v7(a1, v6);
    v8 = sub_1004B804C(&qword_1013E32B0);
    v7(a1 + *(int *)(v8 + 48), v6);
    v5 = (int *)(v8 + 64);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = (int *)(sub_1004B804C(&qword_1013E32A8) + 48);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + *v5));
}

char *sub_100574058(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = type metadata accessor for UUID(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(a1, a2, v11);
    v13 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(_QWORD *)&a1[*(int *)(v13 + 20)] = *(_QWORD *)&a2[*(int *)(v13 + 20)];
    v14 = sub_1004B804C(&qword_1013E32B0);
    v15 = *(int *)(v14 + 48);
    v16 = &a1[v15];
    v17 = &a2[v15];
    v12(&a1[v15], &a2[v15], v11);
    *(_QWORD *)&v16[*(int *)(v13 + 20)] = *(_QWORD *)&v17[*(int *)(v13 + 20)];
    v18 = *(int *)(v14 + 64);
    v19 = *(_OWORD *)&a2[v18 + 24];
    *(_OWORD *)&a1[v18 + 24] = v19;
    (**(void (***)(void))(v19 - 8))();
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
    v9 = *(int *)(sub_1004B804C(&qword_1013E32A8) + 48);
    v10 = *(_OWORD *)&a2[v9 + 24];
    *(_OWORD *)&a1[v9 + 24] = v10;
    (**(void (***)(void))(v10 - 8))();
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_1005741F0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardInteractionOwnershipUpdate);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for UUID(0);
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v13(a1, a2, v12);
      v14 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(_QWORD *)&a1[*(int *)(v14 + 20)] = *(_QWORD *)&a2[*(int *)(v14 + 20)];
      v15 = sub_1004B804C(&qword_1013E32B0);
      v16 = *(int *)(v15 + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v13(&a1[v16], &a2[v16], v12);
      *(_QWORD *)&v17[*(int *)(v14 + 20)] = *(_QWORD *)&v18[*(int *)(v14 + 20)];
      v19 = *(int *)(v15 + 64);
      v20 = &a1[v19];
      v21 = *(_QWORD *)&a2[v19 + 24];
      *((_QWORD *)v20 + 3) = v21;
      *((_QWORD *)v20 + 4) = *(_QWORD *)&a2[v19 + 32];
      (**(void (***)(void))(v21 - 8))();
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      v9 = *(int *)(sub_1004B804C(&qword_1013E32A8) + 48);
      v10 = &a1[v9];
      v11 = *(_QWORD *)&a2[v9 + 24];
      *((_QWORD *)v10 + 3) = v11;
      *((_QWORD *)v10 + 4) = *(_QWORD *)&a2[v9 + 32];
      (**(void (***)(void))(v11 - 8))();
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardInteractionOwnershipUpdate(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E3328, (uint64_t)&nominal type descriptor for CRLBoardInteractionOwnershipUpdate);
}

char *sub_1005743BC(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for UUID(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(a1, a2, v13);
    v15 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
    v16 = sub_1004B804C(&qword_1013E32B0);
    v17 = *(int *)(v16 + 48);
    v18 = &a1[v17];
    v19 = &a2[v17];
    v14(&a1[v17], &a2[v17], v13);
    *(_QWORD *)&v18[*(int *)(v15 + 20)] = *(_QWORD *)&v19[*(int *)(v15 + 20)];
    v20 = *(int *)(v16 + 64);
    v21 = &a1[v20];
    v22 = &a2[v20];
    *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for CRLBoardInteractionOwner(0);
    *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
    v9 = *(int *)(sub_1004B804C(&qword_1013E32A8) + 48);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_100574544(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, type metadata accessor for CRLBoardInteractionOwnershipUpdate);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for UUID(0);
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v14(a1, a2, v13);
      v15 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
      v16 = sub_1004B804C(&qword_1013E32B0);
      v17 = *(int *)(v16 + 48);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v14(&a1[v17], &a2[v17], v13);
      *(_QWORD *)&v18[*(int *)(v15 + 20)] = *(_QWORD *)&v19[*(int *)(v15 + 20)];
      v20 = *(int *)(v16 + 64);
      v21 = &a1[v20];
      v22 = &a2[v20];
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      v23 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v23;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = type metadata accessor for CRLBoardInteractionOwner(0);
      *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
      v9 = *(int *)(sub_1004B804C(&qword_1013E32A8) + 48);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1005746E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _BYTE v6[32];
  _QWORD v7[2];

  result = type metadata accessor for CRLBoardInteractionOwner(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v6, v4, "(");
    v7[0] = v6;
    swift_getTupleTypeLayout3(v5, v4, v4, "(");
    v7[1] = v5;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v7);
    return 0;
  }
  return result;
}

uint64_t sub_100574788()
{
  return sub_1004B7878(&qword_1013E3360, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF92D0);
}

uint64_t sub_1005747B4()
{
  return sub_1004B7878(&qword_1013E3368, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF9318);
}

uint64_t sub_1005747E0()
{
  return sub_1004B7878(&qword_1013E3370, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF93C8);
}

uint64_t sub_10057480C()
{
  return sub_1004B7878(&qword_1013E3378, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF93A0);
}

uint64_t sub_100574838()
{
  return sub_1004B7878(&qword_1013E3380, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF9378);
}

unint64_t sub_100574868()
{
  unint64_t result;

  result = qword_1013E3388;
  if (!qword_1013E3388)
  {
    result = swift_getWitnessTable(&unk_100EF9470, &type metadata for CRLBoardInteractionOwner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E3388);
  }
  return result;
}

unint64_t sub_1005748B0()
{
  unint64_t result;

  result = qword_1013E3390;
  if (!qword_1013E3390)
  {
    result = swift_getWitnessTable(&unk_100EF9580, &type metadata for CRLBoardInteractionOwner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E3390);
  }
  return result;
}

unint64_t sub_1005748F8()
{
  unint64_t result;

  result = qword_1013E3398;
  if (!qword_1013E3398)
  {
    result = swift_getWitnessTable(&unk_100EF9548, &type metadata for CRLBoardInteractionOwner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E3398);
  }
  return result;
}

unint64_t sub_100574940()
{
  unint64_t result;

  result = qword_1013E33A0;
  if (!qword_1013E33A0)
  {
    result = swift_getWitnessTable(&unk_100EF94A8, &type metadata for CRLBoardInteractionOwner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E33A0);
  }
  return result;
}

unint64_t sub_100574988()
{
  unint64_t result;

  result = qword_1013E33A8;
  if (!qword_1013E33A8)
  {
    result = swift_getWitnessTable(&unk_100EF9520, &type metadata for CRLBoardInteractionOwner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E33A8);
  }
  return result;
}

unint64_t sub_1005749D0()
{
  unint64_t result;

  result = qword_1013E33B0;
  if (!qword_1013E33B0)
  {
    result = swift_getWitnessTable(&unk_100EF94F8, &type metadata for CRLBoardInteractionOwner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E33B0);
  }
  return result;
}

unint64_t sub_100574A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E33B8;
  if (!qword_1013E33B8)
  {
    v1 = sub_1004CB6A4(&qword_1013E33C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013E33B8);
  }
  return result;
}

uint64_t sub_100574A64()
{
  return sub_1004B7878(&qword_1013E33C8, type metadata accessor for CRLBoardInteractionOwner, (uint64_t)&unk_100EF9400);
}

uint64_t sub_100574A90(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x695474736574616CLL && a2 == 0xEF706D617473656DLL)
  {
    swift_bridgeObjectRelease(0xEF706D617473656DLL);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x695474736574616CLL, 0xEF706D617473656DLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_100574B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardInteractionOwner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CRLBoardInteractionOwner.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100574C1C + 4 * byte_100EF9205[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100574C50 + 4 * byte_100EF9200[v4]))();
}

uint64_t sub_100574C50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100574C58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100574C60);
  return result;
}

uint64_t sub_100574C6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100574C74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100574C78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100574C80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardInteractionOwner.CodingKeys()
{
  return &type metadata for CRLBoardInteractionOwner.CodingKeys;
}

unint64_t sub_100574CA0()
{
  unint64_t result;

  result = qword_1013E33E8;
  if (!qword_1013E33E8)
  {
    result = swift_getWitnessTable(&unk_100EF9694, &type metadata for CRLBoardInteractionOwner.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013E33E8);
  }
  return result;
}

unint64_t sub_100574CE8()
{
  unint64_t result;

  result = qword_1013E33F0;
  if (!qword_1013E33F0)
  {
    result = swift_getWitnessTable(&unk_100EF9750, &type metadata for CRLInsertFilesToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E33F0);
  }
  return result;
}

unint64_t sub_100574D30()
{
  unint64_t result;

  result = qword_1013E33F8;
  if (!qword_1013E33F8)
  {
    result = swift_getWitnessTable(&unk_100EF9778, &type metadata for CRLInsertFilesToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E33F8);
  }
  return result;
}

uint64_t sub_100574D74(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_1011177A4, 1) + 8);
}

uint64_t sub_100574D98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10111777C, 1);
}

uint64_t sub_100574DA8()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100574DC8()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t sub_100574DF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  unsigned int v63;
  uint64_t v64;
  char *v65;
  char *v66;
  unsigned int v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t *v79;
  _QWORD v80[2];
  _QWORD v81[7];

  v79 = a1;
  v78 = type metadata accessor for InputConnectionBehavior(0);
  v74 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v77 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v73 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v76 = (char *)&v61 - v5;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v72 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v8);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  v70 = v21;
  __chkstk_darwin(v21);
  v75 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v66 = (char *)&v61 - v25;
  v71 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v28(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter title for a board", 27, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100FB4010);
  static Locale.current.getter(v29);
  v63 = v27;
  v30 = v11;
  v64 = v11;
  v28(v14, v27, v11);
  v62 = v28;
  v65 = v10;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter description for a board", 33, 2);
  v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v69(v10, 0, 1, v21);
  v31 = type metadata accessor for CRLBoardEntity(0);
  v32 = v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v72, 1, 1, v31);
  v33 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v33);
  v28(v14, v27, v30);
  v34 = v75;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Prompt for selecting a board from the list", 42, 2);
  v35 = v76;
  IntentDialog.init(_:)(v34);
  v36 = type metadata accessor for IntentDialog(0);
  v37 = v35;
  v38 = v35;
  v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v68 = v39;
  v39(v37, 0, 1, v36);
  v40 = v73;
  v39(v73, 1, 1, v36);
  v67 = enum case for InputConnectionBehavior.default(_:);
  v74 = *(_QWORD *)(v74 + 104);
  v41 = v77;
  ((void (*)(char *))v74)(v77);
  v42 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v43 = v66;
  v44 = v65;
  v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v66, v65, v32, v38, v40, v41, v42);
  *v79 = v45;
  v73 = (char *)sub_1004B804C(&qword_1013E3430);
  v46 = String.LocalizationValue.init(stringLiteral:)(0x73656C6946, 0xE500000000000000);
  static Locale.current.getter(v46);
  v47 = v63;
  v48 = v64;
  v49 = v62;
  v62(v14, v63, v64);
  v50 = v43;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Intent parameter title for files", 32, 2);
  v51 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000025, 0x8000000100FB40C0);
  static Locale.current.getter(v51);
  v49(v14, v47, v48);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Parameter description for files", 31, 2);
  v69(v44, 0, 1, v70);
  v81[0] = 0;
  v52 = String.LocalizationValue.init(stringLiteral:)(0x6966206863696857, 0xEC0000003F73656CLL);
  static Locale.current.getter(v52);
  v49(v14, v47, v48);
  v53 = v75;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0x6E497070414C5243, 0xED000073746E6574, v17, v14, "Prompt for selecting files to insert", 36, 2);
  v54 = v76;
  IntentDialog.init(_:)(v53);
  v68(v54, 0, 1, v36);
  v55 = v77;
  ((void (*)(char *, _QWORD, uint64_t))v74)(v77, v67, v78);
  v56 = IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)(v50, v44, v81, &off_101264788, v54, v55);
  v57 = v79;
  v79[1] = v56;
  sub_1004B804C(&qword_1013E1128);
  v80[0] = 0xD00000000000001FLL;
  v80[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v80, &type metadata for String, &protocol witness table for String);
  v58 = type metadata accessor for AppDependencyManager(0);
  v59 = static AppDependencyManager.shared.getter(v58);
  v57[2] = AppDependency.__allocating_init(key:manager:)(v81, v59);
  v57[6] = (uint64_t)&type metadata for CRLInsertFilesToBoardIntentPerformer;
  v57[7] = (uint64_t)&off_101273518;
  result = swift_allocObject(&unk_10126CFE8, 56, 7);
  v57[3] = result;
  *(_QWORD *)(result + 40) = &type metadata for CRLAppIntentsBoardItemsImporter;
  *(_QWORD *)(result + 48) = &off_10127EC60;
  return result;
}

uint64_t sub_100575608(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2[10] = a1;
  v2[11] = v1;
  v3 = type metadata accessor for CRLBoardEntity(0);
  v2[12] = v3;
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v4);
  v2[14] = swift_task_alloc(v4);
  v5 = sub_1004B804C(&qword_1013E1110);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v2[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[17] = v7;
  v2[18] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v2[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource(0);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IntentDialog(0);
  v2[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[23] = v12;
  v2[24] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100575748, 0, 0);
}

uint64_t sub_100575748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRelease(v1);
  if (v2)
  {
    v3 = *(_QWORD **)(v0 + 112);
    sub_1004BB5A4((_QWORD *)(*(_QWORD *)(v0 + 88) + 24), *(_QWORD *)(*(_QWORD *)(v0 + 88) + 48));
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 64));
    v4 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 200) = v4;
    v5 = IntentParameter.wrappedValue.getter(v3);
    AppDependency.wrappedValue.getter(v5);
    *(_QWORD *)(v0 + 40) = &type metadata for CRLBoardLibraryProvidingDependency;
    *(_QWORD *)(v0 + 48) = &off_10129B490;
    v6 = (_QWORD *)swift_task_alloc(dword_1013E8A0C);
    *(_QWORD *)(v0 + 208) = v6;
    *v6 = v0;
    v6[1] = sub_100575A0C;
    return sub_100635C9C(v4, *(_QWORD *)(v0 + 112), v0 + 16);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 192);
    v30 = *(_QWORD *)(v0 + 176);
    v11 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    v16 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100FB4140);
    static Locale.current.getter(v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v15);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)(v10, 0x6E497070414C5243, 0xED000073746E6574, v11, v13, "Dialog text to request missing app intent parameter", 51, 2);
    v17 = IntentDialog.init(_:)(v9);
    v18 = IntentParameter.projectedValue.getter(v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v14, v29, v30);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v30);
    v19 = type metadata accessor for AppIntentError(0);
    v20 = sub_1004B7878(&qword_1013E3458, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v19, v20, 0, 0);
    IntentParameter.needsValueError(_:)(v14);
    swift_release(v18);
    sub_100576238(v14);
    swift_willThrow(v21);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v29, v30);
    v22 = *(_QWORD *)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 112);
    v26 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 192));
    swift_task_dealloc(v23);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100575A0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 208);
  *(_QWORD *)(*(_QWORD *)v2 + 216) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[25];
    sub_1005761B8(v4[14]);
    swift_bridgeObjectRelease(v6);
    v7 = sub_100575BE4;
  }
  else
  {
    v8 = v4 + 2;
    v9 = v4[25];
    v10 = v4[14];
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v9);
    sub_1005761B8(v10);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    v7 = sub_100575ABC;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100575ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD **)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = IntentParameter.wrappedValue.getter(v4);
  v7 = IntentParameter.projectedValue.getter(v6);
  *(_QWORD *)(v0 + 72) = v7;
  v8 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v9 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v4, v0 + 72, v5, &type metadata for CRLOpenBoardIntent, v8, v9);
  swift_release(v7);
  sub_1005761B8((uint64_t)v4);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100575BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100575C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147E9C0);
  sub_1004F2A1C(v10, (uint64_t)qword_10147E9C0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x656C694620646441, 0xE900000000000073);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100575E0C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013E3460);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013E3468);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100576174();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 2, &type metadata for CRLInsertFilesToBoardIntent, v6);
  v7._countAndFlagsBits = 543450177;
  v7._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100EF97C0);
  v9 = sub_1004B804C(&qword_1013E3470);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100EF97E8);
  v12 = sub_1004B804C(&qword_1013E3478);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLInsertFilesToBoardIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLInsertFilesToBoardIntent, v6);
}

uint64_t sub_100575FC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DCAA8 != -1)
    swift_once(&qword_1013DCAA8, sub_100575C80);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147E9C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100576040(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013E3444);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100575608(a1);
}

uint64_t sub_100576094(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100576174();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLInsertFilesToBoardIntent()
{
  return &type metadata for CRLInsertFilesToBoardIntent;
}

uint64_t sub_1005760CC()
{
  return sub_1004CBA30(&qword_1013E3408, &qword_1013E3410, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1005760F8()
{
  return sub_1004CBA30(&qword_1013E3418, &qword_1013E3420, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100576124()
{
  return sub_1004CBA30(&qword_1013E3428, &qword_1013E3420, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100576150()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

unint64_t sub_100576174()
{
  unint64_t result;

  result = qword_1013E3438;
  if (!qword_1013E3438)
  {
    result = swift_getWitnessTable(&unk_100EF96C0, &type metadata for CRLInsertFilesToBoardIntent);
    atomic_store(result, &qword_1013E3438);
  }
  return result;
}

uint64_t sub_1005761B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005761F4()
{
  unint64_t result;

  result = qword_1013E3450;
  if (!qword_1013E3450)
  {
    result = swift_getWitnessTable(&unk_100F11B90, &type metadata for CRLOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013E3450);
  }
  return result;
}

uint64_t sub_100576238(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E1110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100576278@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005762A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t CRLAssetDownloadObserverStatus.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];

  result = 0x72676F72506E692ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x737365636375732ELL;
      break;
    case 2:
      result = 0x6572756C6961662ELL;
      break;
    case 3:
      result = 0x6C6C65636E61632ELL;
      break;
    default:
      v10[1] = v2;
      v10[2] = v1;
      v10[3] = v3;
      v10[4] = v4;
      v8 = a1;
      type metadata accessor for CRLAssetDownloadObserverStatus(0);
      v10[0] = v8;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v9, v10, v9, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t CRLAssetDownloadObserverStatus.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];

  result = 0x72676F72506E692ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x737365636375732ELL;
      break;
    case 2:
      result = 0x6572756C6961662ELL;
      break;
    case 3:
      result = 0x6C6C65636E61632ELL;
      break;
    default:
      v10[1] = v2;
      v10[2] = v1;
      v10[3] = v3;
      v10[4] = v4;
      v8 = a1;
      type metadata accessor for CRLAssetDownloadObserverStatus(0);
      v10[0] = v8;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v9, v10, v9, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_100576450()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;

  result = 0x72676F72506E692ELL;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 0x737365636375732ELL;
      break;
    case 2:
      result = 0x6572756C6961662ELL;
      break;
    case 3:
      result = 0x6C6C65636E61632ELL;
      break;
    default:
      v2 = *v0;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(0x72676F72506E692ELL, &v2, 0x72676F72506E692ELL, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_10057650C()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;

  result = 0x72676F72506E692ELL;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 0x737365636375732ELL;
      break;
    case 2:
      result = 0x6572756C6961662ELL;
      break;
    case 3:
      result = 0x6C6C65636E61632ELL;
      break;
    default:
      v2 = *v0;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(0x72676F72506E692ELL, &v2, 0x72676F72506E692ELL, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1005765C8(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t, _QWORD, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  id v45;
  NSURL *v46;
  void *v47;
  void *v48;
  NSURL *v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  __n128 v71;
  uint64_t (*v72)(char *, uint64_t);
  unint64_t v74;
  _BYTE *v75;
  id v76;
  uint64_t v77;
  __n128 v78;
  id v79;
  __n128 v80;
  char *v81;
  void (*v82)(char *, uint64_t, __n128);
  id v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  void *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  void (*v90)(uint64_t, _QWORD, uint64_t);
  uint64_t v91;
  id v92;

  v85 = a6;
  v90 = a4;
  v91 = a5;
  v9 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v9);
  v88 = (uint64_t)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v87 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v89 = (char *)&v81 - v22;
  *(_QWORD *)&v24 = __chkstk_darwin(v23).n128_u64[0];
  v26 = (char *)&v81 - v25;
  v86 = a3;
  v27 = a3;
  v29 = v28;
  objc_msgSend(v27, "setCompletedUnitCount:", 1, v24);
  sub_1005773FC(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v29) == 1)
  {
    sub_1005534BC((uint64_t)v17);
    if (a2)
    {
      v30 = a2;
    }
    else
    {
      v74 = sub_100577444();
      v30 = swift_allocError(&type metadata for CRLSerializationError, v74, 0, 0);
      *v75 = 10;
    }
    swift_errorRetain(a2);
    v90(v30, 0, 1);
    return swift_errorRelease(v30);
  }
  else
  {
    v84 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v84(v26, v17, v29);
    v31 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    v92 = 0;
    v32 = objc_msgSend(v31, "initWithError:", &v92);
    v33 = v92;
    if (v32)
    {
      v34 = v32;
      v35 = v92;
      v83 = v34;
      v36 = objc_msgSend(v34, "URL");
      v37 = v87;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v36);

      v39 = UUID.init()(v38);
      v40 = UUID.uuidString.getter(v39);
      v42 = v41;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v43 = v89;
      URL.appendingPathComponent(_:)(v40, v42);
      v44 = swift_bridgeObjectRelease();
      v82 = *(void (**)(char *, uint64_t, __n128))(v19 + 8);
      v82(v37, v29, v44);
      v45 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
      URL._bridgeToObjectiveC()(v46);
      v48 = v47;
      URL._bridgeToObjectiveC()(v49);
      v51 = v50;
      v92 = 0;
      LOBYTE(v42) = objc_msgSend(v45, "copyItemAtURL:toURL:error:", v48, v50, &v92);

      v52 = v92;
      if ((v42 & 1) != 0)
      {
        v53 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v88, 1, 1, v53);
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v37, v43, v29);
        v54 = *(unsigned __int8 *)(v19 + 80);
        v55 = (v54 + 40) & ~v54;
        v56 = (v20 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
        v57 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
        v58 = (v57 + 23) & 0xFFFFFFFFFFFFFFF8;
        v59 = (char *)swift_allocObject(&unk_10126D0F8, v58 + 8, v54 | 7);
        *((_QWORD *)v59 + 2) = 0;
        *((_QWORD *)v59 + 3) = 0;
        v81 = v26;
        v60 = v84;
        v61 = v85;
        *((_QWORD *)v59 + 4) = v85;
        v60(&v59[v55], v37, v29);
        v62 = v29;
        v63 = v86;
        *(_QWORD *)&v59[v56] = v86;
        v64 = &v59[v57];
        v65 = v91;
        *(_QWORD *)v64 = v90;
        *((_QWORD *)v64 + 1) = v65;
        v66 = v83;
        *(_QWORD *)&v59[v58] = v83;
        v67 = v52;
        swift_retain(v61);
        v68 = v63;
        swift_retain(v65);
        v69 = v66;
        v70 = sub_100521B98(v88, (uint64_t)&unk_1013E3610, (uint64_t)v59);

        v71 = swift_release(v70);
        v72 = (uint64_t (*)(char *, uint64_t))v82;
        v82(v89, v62, v71);
        return v72(v81, v62);
      }
      v79 = v92;
      v77 = _convertNSErrorToError(_:)(v52);

      swift_willThrow(v80);
      ((void (*)(char *, uint64_t))v82)(v43, v29);
    }
    else
    {
      v76 = v92;
      v77 = _convertNSErrorToError(_:)(v33);

      swift_willThrow(v78);
    }
    swift_errorRetain(v77);
    v90(v77, 0, 1);
    swift_errorRelease(v77);
    swift_errorRelease(v77);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v26, v29);
  }
}

uint64_t sub_100576B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;

  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v10 = (_QWORD *)swift_task_alloc(dword_1013E361C);
  v8[5] = v10;
  *v10 = v8;
  v10[1] = sub_100576B6C;
  return sub_100576CB0(a5);
}

uint64_t sub_100576B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 40);
  *(_QWORD *)(*v3 + 48) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_100576C50;
  }
  else
  {
    *(_QWORD *)(v6 + 56) = a2;
    *(_QWORD *)(v6 + 64) = a1;
    v8 = sub_100576BE4;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100576BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, _QWORD);
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(void (**)(uint64_t, uint64_t, _QWORD))(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), "setCompletedUnitCount:", 2);
  v4 = swift_unknownObjectRetain(v1);
  v3(v4, v2, 0);
  swift_unknownObjectRelease_n(v1, 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100576C50()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD, uint64_t);

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 24);
  swift_errorRetain(v1);
  v2(v1, 0, 1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100576CB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100576D10, 0, 0);
}

uint64_t sub_100576D10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t CoordinatorChannelProvider;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t Coordinator;
  _QWORD *v10;
  _QWORD *v11;

  v2 = v0[5];
  v1 = v0[6];
  v4 = v0[3];
  v3 = v0[4];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, v0[2], v3);
  CoordinatorChannelProvider = type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider(0);
  v6 = swift_allocObject(CoordinatorChannelProvider, *(unsigned int *)(CoordinatorChannelProvider + 48), *(unsigned __int16 *)(CoordinatorChannelProvider + 52));
  v0[7] = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6+ OBJC_IVAR____TtCC8Freeform28CRLItemProviderReadAssistantP33_EF9C16D469B33CFEED27B42BD64D986830ReadCoordinatorChannelProvider_directoryURL, v1, v3);
  v7 = *(void **)(v4 + 16);
  v8 = *(void **)(v4 + 24);
  Coordinator = type metadata accessor for CRLSerializableObjectReadCoordinator(0);
  v10 = (_QWORD *)swift_allocObject(Coordinator, *(unsigned int *)(Coordinator + 48), *(unsigned __int16 *)(Coordinator + 52));
  swift_retain(v6);
  v0[8] = sub_1005B462C(v6, (uint64_t)v7, (uint64_t)v8, 7, v10);
  v11 = (_QWORD *)swift_task_alloc(dword_10140121C);
  v0[9] = v11;
  *v11 = v0;
  v11[1] = sub_100576E08;
  return sub_1009EEEF4();
}

uint64_t sub_100576E08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 72);
  *(_QWORD *)(*v3 + 80) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_100576ECC;
  }
  else
  {
    *(_QWORD *)(v6 + 88) = a2;
    *(_QWORD *)(v6 + 96) = a1;
    v8 = sub_100576E80;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100576E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88));
}

uint64_t sub_100576ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100576F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSString v6;
  NSString v7;
  NSString v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Bool v16;
  uint64_t v17;
  uint64_t v18;
  id v20;
  uint64_t v21;
  char *v22;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v22 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - v4;
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v7, "pathExtension");

  if (!v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v11 = v10;
    v8 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  v12 = objc_msgSend(v6, "stringByAppendingPathComponent:", v8, v9);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  URL.appendingPathComponent(_:)(v13, v15);
  swift_bridgeObjectRelease(v15);
  v16 = URL.checkResourceIsReachable()();
  if (v17)
  {
    swift_errorRelease(v17);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
    return 0;
  }
  if (!v16)
    goto LABEL_7;
  v18 = (uint64_t)v22;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v22, v5, v0);
  objc_allocWithZone((Class)CRLFileIOChannel);
  v20 = sub_100865298(v18);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  return v20;
}

uint64_t sub_100577124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC8Freeform28CRLItemProviderReadAssistantP33_EF9C16D469B33CFEED27B42BD64D986830ReadCoordinatorChannelProvider_directoryURL;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

id sub_100577174(uint64_t a1, uint64_t a2)
{
  return sub_1005771C4(a1, a2, 0x617461646174656DLL, (id)0xE800000000000000);
}

id sub_10057719C(uint64_t a1, uint64_t a2)
{
  return sub_1005771C4(a1, a2, 0x737463656A626FLL, (id)0xE700000000000000);
}

id sub_1005771C4(uint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v17;

  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - v12;
  URL.appendingPathComponent(_:)(a3, a4);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v14 = objc_allocWithZone((Class)CRLFileIOChannel);
  v15 = sub_100865298((uint64_t)v10);
  if (!v4)
    a4 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return a4;
}

id sub_1005772E0()
{
  return sub_100576F14();
}

uint64_t sub_100577300()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for CRLItemProviderReadAssistant()
{
  return objc_opt_self(_TtC8Freeform28CRLItemProviderReadAssistant);
}

uint64_t sub_10057734C()
{
  return type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider(0);
}

uint64_t type metadata accessor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E3560;
  if (!qword_1013E3560)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLItemProviderReadAssistant.ReadCoordinatorChannelProvider);
  return result;
}

uint64_t sub_100577390(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1005773FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100577444()
{
  unint64_t result;

  result = qword_1013E3600;
  if (!qword_1013E3600)
  {
    result = swift_getWitnessTable(&unk_100EF6230, &type metadata for CRLSerializationError);
    atomic_store(result, &qword_1013E3600);
  }
  return result;
}

uint64_t sub_100577488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_10057754C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t *v10;

  v2 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = *(_QWORD *)(v0 + v4);
  v8 = swift_task_alloc(dword_1013E360C);
  v9 = *(_OWORD *)(v0 + v5);
  *(_QWORD *)(v1 + 16) = v8;
  *(_QWORD *)v8 = v1;
  *(_QWORD *)(v8 + 8) = sub_1004CF80C;
  *(_OWORD *)(v8 + 24) = v9;
  *(_QWORD *)(v8 + 16) = v7;
  v10 = (uint64_t *)swift_task_alloc(dword_1013E361C);
  *(_QWORD *)(v8 + 40) = v10;
  *v10 = v8;
  v10[1] = (uint64_t)sub_100576B6C;
  return sub_100576CB0(v6);
}

uint64_t sub_100577720(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *), uint64_t a7, void *a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Class isa;
  double v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  id v62;
  id v63;
  uint64_t v64;
  void (*v65)(_QWORD *);
  uint64_t v66;
  char v67[72];
  char v68[32];

  v63 = a8;
  v64 = a7;
  v65 = a6;
  v59 = a4;
  v60 = a5;
  v62 = a3;
  v58 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v61 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s24ImportableRichTextObjectOMa(0);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - v16;
  v18 = sub_1004B804C(&qword_1013E36A0);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  v23 = (char *)&v58 - v22;
  v24 = _s18LoadedRichTextTypeOMa(0);
  __chkstk_darwin(v24);
  v26 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v68, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v28 = (void *)result;
    sub_1004CB7BC(a1, (uint64_t)v23, &qword_1013E36A0);
    if (swift_getEnumCaseMultiPayload(v23, v18) == 1)
    {
      sub_1004CB800((uint64_t)v23, &qword_1013E36A0);
      sub_1004CB7BC(a1, (uint64_t)v20, &qword_1013E36A0);
      if (swift_getEnumCaseMultiPayload(v20, v18) == 1)
      {
        v29 = *v20;
        v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v30, v67);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v66 = v29;
        swift_errorRetain(v29);
        v32 = sub_1004B804C(&qword_1013E0210);
        v33 = String.init<A>(describing:)(&v66, v32);
        v35 = v34;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v33;
        *(_QWORD *)(inited + 40) = v35;
        sub_100757E04(&_mh_execute_header, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2, 54, "Error importing rich text file: %@", 34, 2u, inited);
        sub_1004F5394(inited, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2u, 54, (uint64_t)"Error importing rich text file: %@", 34, 2u);
        swift_setDeallocating(inited);
        v36 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 1, v36);
        v65(_swiftEmptyArrayStorage);

        return swift_errorRelease(v29);
      }
      else
      {

        return sub_1004CB800((uint64_t)v20, &qword_1013E36A0);
      }
    }
    else
    {
      sub_1005793C4((uint64_t)v23, (uint64_t)v26);
      v37 = objc_msgSend(v62, "suggestedName");
      if (v37)
      {
        v38 = v37;
        v39 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        v41 = v40;

      }
      else
      {
        v39 = 0;
        v41 = 0;
      }
      v42 = v17;
      v43 = v61;
      sub_100577C9C(v39, v41, v59, (uint64_t)v26, v60, v42);
      swift_bridgeObjectRelease(v41);
      sub_1004B8460((uint64_t)v42, (uint64_t)v14, _s24ImportableRichTextObjectOMa);
      if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
      {
        v44 = (void *)*v14;
        v45 = objc_msgSend(v63, "providersForBoardItemsFromImportedRichText:", *v14);
        v46 = sub_1004B804C(&qword_1013E3690);
        v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

        v65((_QWORD *)v47);
        swift_bridgeObjectRelease(v47);

      }
      else
      {
        v48 = v58;
        (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v43, v14, v58);
        v49 = sub_1004B804C(&qword_1013E1910);
        v50 = *(unsigned __int8 *)(v10 + 80);
        v51 = (v50 + 32) & ~v50;
        v52 = swift_allocObject(v49, v51 + *(_QWORD *)(v10 + 72), v50 | 7);
        *(_OWORD *)(v52 + 16) = xmmword_100EF5E40;
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v52 + v51, v43, v48);
        isa = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v54 = swift_bridgeObjectRelease(v52).n128_u64[0];
        v55 = objc_msgSend(v63, "providersForBoardItemsFromURLs:", isa, v54);

        if (v55)
        {
          v56 = sub_1004B804C(&qword_1013E3690);
          v57 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);

        }
        else
        {
          v57 = _swiftEmptyArrayStorage;
        }
        v65(v57);
        swift_bridgeObjectRelease(v57);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v48);
      }
      sub_1004B84A4((uint64_t)v42, _s24ImportableRichTextObjectOMa);
      return sub_1004B84A4((uint64_t)v26, _s18LoadedRichTextTypeOMa);
    }
  }
  return result;
}

uint64_t sub_100577C9C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t (*v21)(_QWORD);
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  NSString v29;
  double v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  void *v38;
  __n128 v39;
  void *v40;
  uint64_t v41;
  uint64_t inited;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v52[3];
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  char v57[72];

  v52[2] = a1;
  v53 = a2;
  v54 = a3;
  v55 = a6;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v52 - v13;
  v15 = _s18LoadedRichTextTypeOMa(0);
  __chkstk_darwin(v15);
  v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (id *)((char *)v52 - v19);
  sub_1004B8460(a4, (uint64_t)v52 - v19, v21);
  if (swift_getEnumCaseMultiPayload(v20, v15) == 1)
  {
    v22 = *(void **)((char *)v20 + *(int *)(sub_1004B804C(&qword_1013E36A8) + 48));
    (*(void (**)(void **, uint64_t))(v9 + 8))(v20, v8);
  }
  else
  {
    v22 = *v20;
  }
  if ((uint64_t)objc_msgSend(v22, "length") <= a5)
    goto LABEL_14;
  sub_1004B8460(a4, (uint64_t)v17, _s18LoadedRichTextTypeOMa);
  if (swift_getEnumCaseMultiPayload(v17, v15) != 1)
  {
    sub_1004B84A4((uint64_t)v17, _s18LoadedRichTextTypeOMa);
    v25 = v53;
    if (v53)
    {
      v26 = v53;
    }
    else
    {
      v27 = objc_msgSend(v52[1], "defaultTextFileName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v26 = v28;

    }
    swift_bridgeObjectRetain(v25);
    v29 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v26).n128_u64[0];
    v56 = 0;
    v31 = objc_msgSend(v22, "crl_writeToFileUsingName:type:error:", v29, v54, &v56, v30);

    v32 = v56;
    if (v31)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v33 = v32;

      v24 = v55;
      (*(void (**)(_QWORD *, char *, uint64_t))(v9 + 32))(v55, v11, v8);
      goto LABEL_12;
    }
    v37 = v56;
    v38 = (void *)_convertNSErrorToError(_:)(v32);

    swift_willThrow(v39);
    sub_100579408();
    v40 = (void *)static OS_os_log.default.getter();
    v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v41, v57);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v56 = v38;
    swift_errorRetain(v38);
    v43 = sub_1004B804C(&qword_1013E0210);
    v44 = String.init<A>(describing:)(&v56, v43);
    v46 = v45;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v47 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v47;
    *(_QWORD *)(inited + 32) = v44;
    *(_QWORD *)(inited + 40) = v46;
    v48 = static os_log_type_t.error.getter(v47);
    sub_100A06EBC((uint64_t)v40, &_mh_execute_header, v48, "Error trying to write long string to a file", 43, 2, inited);
    swift_errorRelease(v38);
    swift_setDeallocating(inited);
    v49 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v49);

LABEL_14:
    v50 = v55;
    *v55 = v22;
    v34 = _s24ImportableRichTextObjectOMa(0);
    v35 = v50;
    v36 = 1;
    return swift_storeEnumTagMultiPayload(v35, v34, v36);
  }

  v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v23(v14, v17, v8);
  v24 = v55;
  v23((char *)v55, v14, v8);
LABEL_12:
  v34 = _s24ImportableRichTextObjectOMa(0);
  v35 = v24;
  v36 = 0;
  return swift_storeEnumTagMultiPayload(v35, v34, v36);
}

void sub_10057817C(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_1004B804C(&qword_1013E3690);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

uint64_t sub_1005781D4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(_QWORD);
  uint64_t v42;
  unint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  id v48;
  NSURL *v49;
  void *v50;
  void *v51;
  NSURL *v52;
  void *v53;
  void *v54;
  unsigned int v55;
  id v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t *v72;
  char *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void (*v78)(char *, _QWORD, uint64_t);
  char *v79;
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t *);
  id v86;
  uint64_t v87;

  v75 = a6;
  v76 = a3;
  v84 = a5;
  v85 = a4;
  v82 = type metadata accessor for URL.DirectoryHint(0);
  v80 = *(char **)(v82 - 8);
  __chkstk_darwin(v82);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v9 - 8);
  v78 = (void (*)(char *, _QWORD, uint64_t))v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1004B804C(&qword_1013E36A0);
  __chkstk_darwin(v83);
  v81 = (uint64_t *)((char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v74 - v14);
  v16 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v16);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v74 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v74 - v23;
  __chkstk_darwin(v25);
  v79 = (char *)&v74 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)&v74 - v28;
  sub_1004CB7BC(a1, (uint64_t)v18, &qword_1013E04D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1004CB800((uint64_t)v18, &qword_1013E04D0);
    v30 = v76;
    if (v76)
      v31 = v76;
    else
      v31 = objc_msgSend((id)objc_opt_self(NSError), "crl_fileReadCorruptedFileErrorWithUserInfo:", 0);
    *v15 = (uint64_t)v31;
    swift_storeEnumTagMultiPayload(v15, v83, 1);
    swift_errorRetain(v30);
    v85(v15);
    return sub_1004CB800((uint64_t)v15, &qword_1013E36A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v29, v18, v19);
    v32 = (void *)objc_opt_self(NSFileManager);
    v33 = objc_msgSend(v32, "defaultManager");
    v34 = objc_msgSend(v33, "temporaryDirectory");

    static URL._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v36 = UUID.init()(v35);
    v37 = (void *)UUID.uuidString.getter(v36);
    v39 = v38;
    (*(void (**)(char *, void (*)(char *, _QWORD, uint64_t)))(v77 + 8))(v11, v78);
    v86 = v37;
    v87 = v39;
    v40 = v80;
    v41 = (void (*)(_QWORD))*((_QWORD *)v80 + 13);
    LODWORD(v77) = enum case for URL.DirectoryHint.inferFromPath(_:);
    v42 = v82;
    v78 = (void (*)(char *, _QWORD, uint64_t))v41;
    v41(v8);
    v43 = sub_1004D292C();
    v44 = v79;
    v76 = (void *)v43;
    URL.appending<A>(path:directoryHint:)(&v86, v8, &type metadata for String);
    v45 = (void (*)(char *, uint64_t))*((_QWORD *)v40 + 1);
    v80 = v8;
    v45(v8, v42);
    v46 = swift_bridgeObjectRelease(v87);
    v47 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    v47(v24, v19, v46);
    v48 = objc_msgSend(v32, "defaultManager");
    URL.deletingLastPathComponent()();
    URL._bridgeToObjectiveC()(v49);
    v51 = v50;
    ((void (*)(char *, uint64_t))v47)(v24, v19);
    URL._bridgeToObjectiveC()(v52);
    v54 = v53;
    v86 = 0;
    v55 = objc_msgSend(v48, "copyItemAtURL:toURL:error:", v51, v53, &v86);

    v56 = v86;
    if (v55)
    {
      v57 = (uint64_t)v74;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v74, v29, v19);
      v58 = objc_allocWithZone((Class)NSMutableAttributedString);
      v59 = v75;
      swift_bridgeObjectRetain(v75);
      v60 = sub_1005789D4(v57, v59, 0);
      v75 = *(int *)(sub_1004B804C(&qword_1013E36A8) + 48);
      v86 = (id)URL.lastPathComponent.getter(v61);
      v87 = v62;
      v63 = v80;
      v64 = v82;
      v78(v80, v77, v82);
      v65 = v81;
      URL.appending<A>(path:directoryHint:)(&v86, v63, &type metadata for String);
      v45(v63, v64);
      swift_bridgeObjectRelease(v87);
      *(uint64_t *)((char *)v65 + v75) = (uint64_t)v60;
      v66 = _s18LoadedRichTextTypeOMa(0);
      swift_storeEnumTagMultiPayload(v65, v66, 1);
      swift_storeEnumTagMultiPayload(v65, v83, 0);
      v67 = v60;
      v85(v65);

      v68 = (uint64_t)v65;
    }
    else
    {
      v69 = v56;
      v70 = _convertNSErrorToError(_:)(v56);

      swift_willThrow(v71);
      v72 = v81;
      *v81 = v70;
      swift_storeEnumTagMultiPayload(v72, v83, 1);
      swift_errorRetain(v70);
      v85(v72);
      swift_errorRelease(v70);
      v68 = (uint64_t)v72;
    }
    sub_1004CB800(v68, &qword_1013E36A0);
    ((void (*)(char *, uint64_t))v47)(v44, v19);
    return ((uint64_t (*)(char *, uint64_t))v47)(v29, v19);
  }
}

uint64_t sub_1005787C8(uint64_t a1, unint64_t a2, void *a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  _BYTE v23[16];

  v11 = sub_1004B804C(&qword_1013E36A0);
  __chkstk_darwin(v11);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v23[-v15];
  if (a2 >> 60 == 15)
  {
    if (a3)
      v17 = a3;
    else
      v17 = objc_msgSend((id)objc_opt_self(NSError), "crl_fileReadCorruptedFileErrorWithUserInfo:", 0);
    *v16 = v17;
    swift_storeEnumTagMultiPayload(v16, v11, 1);
    swift_errorRetain(a3);
    a4(v16);
  }
  else
  {
    v18 = objc_allocWithZone((Class)NSMutableAttributedString);
    sub_10057939C(a1, a2);
    sub_10057939C(a1, a2);
    swift_bridgeObjectRetain(a6);
    v19 = sub_10057928C(a1, a2, a6, 0);
    sub_1004BE2FC(a1, a2);
    *v13 = v19;
    v20 = _s18LoadedRichTextTypeOMa(0);
    swift_storeEnumTagMultiPayload(v13, v20, 0);
    swift_storeEnumTagMultiPayload(v13, v11, 0);
    v21 = v19;
    a4(v13);

    sub_1004BE2FC(a1, a2);
    v16 = v13;
  }
  return sub_1004CB800((uint64_t)v16, &qword_1013E36A0);
}

id sub_1005789D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  void *v8;
  void *v9;
  Class isa;
  id v11;
  id v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  id v20;

  v4 = v3;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v9 = v8;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_100579244();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v20 = 0;
  v11 = objc_msgSend(v4, "initWithURL:options:documentAttributes:error:", v9, isa, a3, &v20, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v12 = v20;
  if (v11)
  {
    v13 = type metadata accessor for URL(0);
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v15 = v12;
    v14(a1, v13);
  }
  else
  {
    v16 = v20;
    _convertNSErrorToError(_:)(v12);

    swift_willThrow(v17);
    v18 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
  }
  return v11;
}

uint64_t sub_100578B30(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSString *v23;
  id v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  uint64_t result;
  NSString *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _BYTE v40[72];

  v36 = a3;
  v37 = a4;
  v38 = a1;
  v5 = type metadata accessor for UTType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v35 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v35 - v16;
  v18 = sub_1004B804C(&qword_1013E3698);
  inited = swift_initStackObject(v18, v40);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSDocumentTypeDocumentOption;
  if (a2 < 3)
  {
    v20 = inited;
    v21 = *(void **)*(&off_10126D1E0 + a2);
    type metadata accessor for DocumentType(0);
    *(_QWORD *)(v20 + 64) = v22;
    *(_QWORD *)(v20 + 40) = v21;
    v23 = NSDocumentTypeDocumentOption;
    v24 = v21;
    v25 = sub_1008D60F0(v20);
    if (a2)
    {
      if (a2 != 2)
      {
        static UTType.rtfd.getter();
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v17, v14, v5);
        v26 = (_QWORD *)swift_allocObject(&unk_10126D1C8, 40, 7);
        v26[2] = v36;
        v30 = v37;
        v26[3] = v37;
        v26[4] = v25;
        v31 = swift_retain(v30);
        v29 = NSItemProvider.loadFileRepresentation(for:openInPlace:completionHandler:)(v17, 0, sub_100579224, v26, v31);
        v11 = v17;
        goto LABEL_8;
      }
      static UTType.flatRTFD.getter();
    }
    else
    {
      static UTType.rtf.getter();
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v5);
    v26 = (_QWORD *)swift_allocObject(&unk_10126D1A0, 40, 7);
    v26[2] = v36;
    v27 = v37;
    v26[3] = v37;
    v26[4] = v25;
    v28 = swift_retain(v27);
    v29 = NSItemProvider.loadDataRepresentation(for:completionHandler:)(v11, sub_1005791E8, v26, v28);
LABEL_8:
    v32 = swift_release(v26);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v11, v5, v32);
    return v29;
  }
  v39 = a2;
  v34 = NSDocumentTypeDocumentOption;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLSupportedRichTextType, &v39, &type metadata for CRLSupportedRichTextType, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_100578DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (**a7)(_QWORD, _QWORD))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  unint64_t v21;
  char v22;
  char v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  Class isa;
  _QWORD v37[2];
  uint64_t v38;
  _BYTE v39[72];

  v37[1] = a6;
  v38 = a5;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UTType(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject(&unk_10126D128, 24, 7);
  *(_QWORD *)(v19 + 16) = a7;
  _Block_copy(a7);
  v20 = swift_bridgeObjectRetain(a4);
  UTType.init(_:)(a3, a4, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013E3620);
LABEL_5:
    v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v32, v39);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = a3;
    *(_QWORD *)(inited + 40) = a4;
    swift_bridgeObjectRetain(a4);
    sub_100757E04(&_mh_execute_header, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2, 32, "Unsupported rich text UTType: %@", 32, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"richTextBoardItemProviders(for:factory:uti:maximumCharacterLimit:completion:)", 77, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLiOSItemProviderItemSource.swift", 95, 2u, 32, (uint64_t)"Unsupported rich text UTType: %@", 32, 2u);
    swift_setDeallocating(inited);
    v34 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v34);
    sub_1004B804C(&qword_1013E3690);
    isa = Array._bridgeToObjectiveC()().super.isa;
    ((void (**)(_QWORD, Class))a7)[2](a7, isa);
    swift_release(v19);

    return 0;
  }
  v37[0] = a1;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v21 = sub_10071249C((uint64_t)v18);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if ((v23 & 1) != 0)
    goto LABEL_5;
  v24 = objc_msgSend(objc_allocWithZone((Class)CRLBoardItemProviderFactory), "initWithBoardItemFactory:", a2);
  v25 = swift_allocObject(&unk_10126D150, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = (_QWORD *)swift_allocObject(&unk_10126D178, 72, 7);
  v27 = (void *)v37[0];
  v26[2] = v25;
  v26[3] = v27;
  v28 = v38;
  v26[4] = v21;
  v26[5] = v28;
  v26[6] = sub_100579168;
  v26[7] = v19;
  v26[8] = v24;
  swift_retain(v25);
  v29 = v27;
  swift_retain(v19);
  v30 = v24;
  v31 = sub_100578B30((uint64_t)v29, v21, (uint64_t)sub_1005791D0, (uint64_t)v26);
  swift_release(v19);

  swift_release(v25);
  swift_release(v26);
  return v31;
}

uint64_t sub_100579144()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100579168(uint64_t a1)
{
  uint64_t v1;

  sub_10057817C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100579170()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100579194()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1005791D0(uint64_t a1)
{
  uint64_t v1;

  return sub_100577720(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(_QWORD *))(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1005791E8(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1005787C8(a1, a2, a3, *(void (**)(_QWORD *))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1005791F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100579224(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1005781D4(a1, a2, a3, *(void (**)(uint64_t *))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t _s18LoadedRichTextTypeOMa(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E37C8, (uint64_t)&_s18LoadedRichTextTypeOMn);
}

unint64_t sub_100579244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DEDC0;
  if (!qword_1013DEDC0)
  {
    type metadata accessor for DocumentReadingOptionKey(255);
    result = swift_getWitnessTable(&unk_100EF44E8, v1);
    atomic_store(result, (unint64_t *)&qword_1013DEDC0);
  }
  return result;
}

id sub_10057928C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  Class isa;
  Class v8;
  id v9;
  id v10;
  id v11;
  id v12;
  __n128 v13;
  id v15;

  isa = Data._bridgeToObjectiveC()().super.isa;
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_100579244();
  v8 = Dictionary._bridgeToObjectiveC()().super.isa;
  v15 = 0;
  v9 = objc_msgSend(v4, "initWithData:options:documentAttributes:error:", isa, v8, a4, &v15, swift_bridgeObjectRelease(a3).n128_f64[0]);

  v10 = v15;
  if (v9)
  {
    v11 = v15;
  }
  else
  {
    v12 = v15;
    _convertNSErrorToError(_:)(v10);

    swift_willThrow(v13);
  }
  return v9;
}

uint64_t sub_10057939C(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1004BE310(result, a2);
  return result;
}

uint64_t _s24ImportableRichTextObjectOMa(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E3720, (uint64_t)&_s24ImportableRichTextObjectOMn);
}

uint64_t sub_1005793C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s18LoadedRichTextTypeOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100579408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E7C00;
  if (!qword_1013E7C00)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E7C00);
  }
  return result;
}

char *sub_100579444(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v12);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

void sub_100579500(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v3 = type metadata accessor for URL(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void **sub_100579550(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *a2;
    *a1 = *a2;
    v7 = v6;
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void **sub_1005795E0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, _s24ImportableRichTextObjectOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = v6;
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v11 = type metadata accessor for URL(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void *sub_100579688(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_100579710(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, _s24ImportableRichTextObjectOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1005797B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

char *sub_100579820(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for URL(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_1004B804C(&qword_1013E36A8) + 48);
      v9 = *(char **)((char *)a2 + v8);
      *(_QWORD *)&a1[v8] = v9;
      v10 = v9;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = *a2;
      *(_QWORD *)a1 = *a2;
      v16 = v15;
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void sub_1005798F8(id *a1, uint64_t a2)
{
  id *v2;
  uint64_t v3;

  v2 = a1;
  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for URL(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    v2 = (id *)((char *)v2 + *(int *)(sub_1004B804C(&qword_1013E36A8) + 48));
  }

}

void **sub_100579954(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(sub_1004B804C(&qword_1013E36A8) + 48);
    v8 = *(void **)((char *)a2 + v7);
    *(void **)((char *)a1 + v7) = v8;
    v9 = v8;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = *a2;
    *a1 = *a2;
    v14 = v13;
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void **sub_100579A00(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, _s18LoadedRichTextTypeOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(sub_1004B804C(&qword_1013E36A8) + 48);
      v8 = *(void **)((char *)a2 + v7);
      *(void **)((char *)a1 + v7) = v8;
      v9 = v8;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      v14 = v13;
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

char *sub_100579AC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = sub_1004B804C(&qword_1013E36A8);
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100579B68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1004B84A4((uint64_t)a1, _s18LoadedRichTextTypeOMa);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = sub_1004B804C(&qword_1013E36A8);
      *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100579C24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.UnknownObject + 64);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

id sub_100579DB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardViewControllerTransitioningDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSBoardViewControllerTransitioningDelegate()
{
  return objc_opt_self(_TtC8Freeform46CRLiOSBoardViewControllerTransitioningDelegate);
}

void sub_100579E08(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;

  v4 = objc_opt_self(UINavigationController);
  v5 = swift_dynamicCastObjCClass(a1, v4);
  if (!v5)
    goto LABEL_35;
  v6 = (void *)v5;
  v7 = a1;
  v8 = objc_msgSend(v6, "viewControllers");
  v9 = sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v24 = v10;
    else
      v24 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v10);
    if (v25)
      goto LABEL_4;
LABEL_23:

    swift_bridgeObjectRelease(v10);
    goto LABEL_24;
  }
  if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_23;
LABEL_4:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
  }
  else
  {
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v11 = *(id *)(v10 + 32);
  }
  v12 = v11;
  swift_bridgeObjectRelease(v10);
  v13 = type metadata accessor for CRLiOSBoardViewController(0);
  if (swift_dynamicCastClass(v12, v13))
  {
    v14 = objc_opt_self(UISplitViewController);
    v15 = swift_dynamicCastObjCClass(a2, v14);
    if (!v15)
    {

LABEL_15:
      goto LABEL_24;
    }
    v16 = (void *)v15;
    v17 = a2;
    v18 = objc_msgSend(v16, "viewControllerForColumn:", 2);
    if (v18)
    {
      v19 = v18;
      v20 = objc_opt_self(UINavigationController);
      v21 = (void *)swift_dynamicCastObjCClass(v19, v20);
      if (v21)
      {
        v22 = objc_msgSend(v21, "topViewController");

        if (v22)
        {
          v23 = type metadata accessor for CRLiOSFolderGridViewController(0);
          if (swift_dynamicCastClass(v22, v23))
            return;

        }
        goto LABEL_15;
      }

    }
  }

LABEL_24:
  v26 = v7;
  v27 = objc_msgSend(v6, "topViewController");
  if (v27)
  {
    v28 = v27;
    v29 = type metadata accessor for CRLiOSBoardViewController(0);
    if (swift_dynamicCastClass(v28, v29))
    {
      v30 = objc_opt_self(UINavigationController);
      v31 = swift_dynamicCastObjCClass(a2, v30);
      if (v31)
      {
        v32 = (void *)v31;
        v33 = a2;
        v34 = objc_msgSend(v32, "topViewController");

        if (!v34)
        {
LABEL_33:
          v26 = v28;
          goto LABEL_34;
        }
        if (swift_dynamicCastClass(v34, v29))
          return;
      }
      else
      {
        v34 = v26;
      }
    }
    else
    {
      v34 = v28;
      v28 = v26;
    }

    goto LABEL_33;
  }
LABEL_34:

LABEL_35:
  sub_100757E04(&_mh_execute_header, (uint64_t)"transitioningViewControllers(presentedViewController:presentingViewController:)", 79, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewControllerTransitioningDelegate.swift", 116, 2, 50, "CRLiOSBoardViewControllerTransitioningDelegate could not find expected view controllers to transition between.", 110, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"transitioningViewControllers(presentedViewController:presentingViewController:)", 79, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewControllerTransitioningDelegate.swift", 116, 2u, 50, (uint64_t)"CRLiOSBoardViewControllerTransitioningDelegate could not find expected view controllers to transition between.", 110, 2u);
}

id sub_10057A184(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  char *v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  id result;
  void *v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t ObjectType;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  char v79;
  id v80;
  id v81;
  uint64_t v82;
  char v83;
  void *v84;
  id v85;
  __int128 v86;
  unsigned __int8 v87;
  __int128 v88;
  id v89;
  id v90;
  void (*v91)(_OWORD *__return_ptr, uint64_t, uint64_t);
  id v92;
  id v93;
  uint64_t v94;
  id v95;
  double v96;
  double v97;
  double v98;
  double v99;
  id v100;
  id v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  id v107;
  uint64_t v108;
  id v109;
  char *v110;
  _BYTE *v111;
  id v112;
  char *v113;
  char *v114;
  _QWORD *v115;
  id v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  id v127;
  char v128[24];
  _OWORD v129[2];
  char v130;
  _QWORD v131[4];
  char v132;
  _OWORD v133[2];
  char v134;

  v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10);
  *(_QWORD *)&v122 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v108 - v13;
  __chkstk_darwin(v15);
  v120 = (uint64_t)&v108 - v16;
  __chkstk_darwin(v17);
  *(_QWORD *)&v125 = (char *)&v108 - v18;
  v19 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v19);
  v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v108 - v23;
  __chkstk_darwin(v25);
  *(_QWORD *)&v123 = (char *)&v108 - v26;
  __chkstk_darwin(v27);
  *(_QWORD *)&v124 = (char *)&v108 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v108 - v30;
  sub_100579E08(a1, a2);
  if (!v32)
    goto LABEL_22;
  v34 = v32;
  v35 = v33;
  v36 = type metadata accessor for CRLiOSFolderGridViewController(0);
  v37 = swift_dynamicCastClass(v34, v36);
  if (!v37)
  {

LABEL_22:
    v82 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    v83 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v31, 1, 1, v82);
    v84 = 0;
    v85 = 0;
    v86 = 0uLL;
    v87 = 2;
    v88 = 0uLL;
    goto LABEL_23;
  }
  v121 = v14;
  v38 = (_BYTE *)v37;
  v116 = v34;
  v111 = v38;
  result = objc_msgSend(v38, "collectionView");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v40 = result;
  v41 = objc_msgSend(result, "visibleCells");

  v42 = sub_1004B8930(0, (unint64_t *)&qword_1013E3840, UICollectionViewCell_ptr);
  v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);

  v44 = sub_1005B99A0(v43);
  swift_bridgeObjectRelease(v43);
  if (!v44)
  {

    v80 = v116;
    goto LABEL_22;
  }
  v109 = a2;
  v113 = v31;
  v114 = v21;
  v112 = v35;
  v45 = *(char **)(*(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v46 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v47 = *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v115 = v44;
  v48 = v47 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v47 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v128, 0, 0);
  sub_1004B8460(v48, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  v49 = v45;
  swift_retain(v47);
  v50 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v50);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_release(v47);
  v51 = (uint64_t *)(*(_QWORD *)&v45[v46] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v52 = *v51;
  v53 = v51[1];
  swift_bridgeObjectRetain(v53);
  sub_10067AFD0((uint64_t)v9, v52, v53, v125);

  v54 = v115;
  v55 = v115[2];
  if (!v55)
  {
LABEL_21:
    swift_bridgeObjectRelease(v54);
    sub_1004B84A4(v125, type metadata accessor for CRLBoardIdentifier);

    v81 = v116;
    v21 = v114;
    v31 = v113;
    goto LABEL_22;
  }
  v110 = v24;
  v56 = v123;
  v119 = v123 + 8;
  swift_bridgeObjectRetain(v115);
  v57 = v54 + 5;
  v58 = v120;
  v59 = v124;
  while (1)
  {
    v61 = (void *)*(v57 - 1);
    v60 = *v57;
    ObjectType = swift_getObjectType(v61);
    v63 = *(void (**)(uint64_t, uint64_t))(v60 + 24);
    v127 = v61;
    v126 = ObjectType;
    v63(ObjectType, v60);
    v64 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    v65 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v59, 1, v64) == 1)
      goto LABEL_8;
    sub_10057B540(v59, v56);
    if (swift_getEnumCaseMultiPayload(v56, v64) != 2)
    {
      sub_1004B84A4(v56, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_8:
      sub_1004CB800(v59, (uint64_t *)&unk_1013E3830);
      goto LABEL_9;
    }
    v117 = v65;
    v118 = v63;
    v66 = sub_1004B804C((uint64_t *)&unk_1013EA630);
    swift_bridgeObjectRelease(*(_QWORD *)(v119 + *(int *)(v66 + 48)));
    sub_1004DB5FC(v56, v58);
    v67 = v125;
    v68 = static UUID.== infix(_:_:)(v58);
    v69 = v58;
    v70 = v58;
    v71 = (uint64_t)v121;
    sub_1004B8460(v69, (uint64_t)v121, type metadata accessor for CRLBoardIdentifier);
    v72 = v67;
    v73 = v122;
    sub_1004B8460(v72, v122, type metadata accessor for CRLBoardIdentifier);
    if ((v68 & 1) == 0)
    {
      sub_1004B84A4(v73, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v71, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4(v70, type metadata accessor for CRLBoardIdentifier);
      v58 = v70;
      v56 = v123;
      v59 = v124;
      goto LABEL_8;
    }
    v74 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v75 = *(_QWORD *)(v71 + v74);
    v76 = *(_QWORD *)(v71 + v74 + 8);
    v77 = (_QWORD *)(v73 + v74);
    v78 = v77[1];
    if (v75 == *v77 && v76 == v78)
      break;
    v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v76, *v77, v78, 0);
    sub_1004B84A4(v73, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v121, type metadata accessor for CRLBoardIdentifier);
    v58 = v120;
    sub_1004B84A4(v120, type metadata accessor for CRLBoardIdentifier);
    v59 = v124;
    sub_1004CB800(v124, (uint64_t *)&unk_1013E3830);
    v56 = v123;
    if ((v79 & 1) != 0)
      goto LABEL_25;
LABEL_9:

    v57 += 2;
    if (!--v55)
    {
      v54 = v115;
      swift_bridgeObjectRelease(v115);
      v24 = v110;
      goto LABEL_21;
    }
  }
  sub_1004B84A4(v73, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v121, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v120, type metadata accessor for CRLBoardIdentifier);
  sub_1004CB800(v124, (uint64_t *)&unk_1013E3830);
LABEL_25:
  swift_bridgeObjectRelease_n(v115, 2);
  sub_1004B84A4(v125, type metadata accessor for CRLBoardIdentifier);
  v87 = v111[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout];
  v84 = *(void **)&v111[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache];
  v91 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v60 + 96);
  v85 = v127;
  v92 = v127;
  v93 = v84;
  v94 = v126;
  v91(v129, v126, v60);
  v125 = v129[0];
  v124 = v129[1];
  v83 = v130;
  sub_10057B588((uint64_t)v129, (uint64_t)v131);
  if ((v132 & 1) != 0)
  {

    v95 = v116;
    v31 = v113;
    (*(void (**)(void))(v117 + 56))();
    v24 = v110;
    v21 = v114;
    v86 = v125;
    v88 = v124;
  }
  else
  {
    v96 = *(double *)v131;
    v97 = *(double *)&v131[1];
    v98 = *(double *)&v131[2];
    v99 = *(double *)&v131[3];
    v100 = v92;
    v101 = objc_msgSend(v109, "view");
    objc_msgSend(v100, "convertRect:toView:", v101, v96, v97, v98, v99);
    v125 = v102;
    v122 = v103;
    v124 = v104;
    v123 = v105;

    *(_QWORD *)&v106 = v125;
    *((_QWORD *)&v106 + 1) = v122;
    v125 = v106;
    *(_QWORD *)&v106 = v124;
    *((_QWORD *)&v106 + 1) = v123;
    v124 = v106;
    v31 = v113;
    v118(v94, v60);

    v107 = v116;
    v88 = v124;
    v86 = v125;
    v83 = 0;
    v24 = v110;
    v21 = v114;
  }
LABEL_23:
  v133[0] = v86;
  v133[1] = v88;
  v134 = v83;
  sub_10057B540((uint64_t)v31, (uint64_t)v24);
  v89 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(0));
  sub_10057B540((uint64_t)v24, (uint64_t)v21);
  v90 = sub_10067926C(1, v87, (uint64_t)v133, (uint64_t)v85, (uint64_t)v21, v84);

  sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E3830);
  sub_1004CB800((uint64_t)v31, (uint64_t *)&unk_1013E3830);
  return v90;
}

void sub_10057ABA0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  id v26;
  void *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  id v57;
  uint64_t *v58;
  uint64_t v59;
  char v60;
  void *v61;
  void *v62;
  __int128 v63;
  unsigned __int8 v64;
  __int128 v65;
  char *v66;
  void *v67;
  id v68;
  void *v69;
  Class isa;
  id v71;
  void *v72;
  Class v73;
  id v74;
  uint64_t ObjectType;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_OWORD *__return_ptr, uint64_t, uint64_t);
  id v80;
  id v81;
  id v82;
  id v83;
  double v84;
  double v85;
  double v86;
  double v87;
  id v88;
  id v89;
  id v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  id v95;
  uint64_t v96;
  id v97;
  id v98;
  int v99;
  void *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  __int128 v110;
  id v111;
  char *v112;
  char v113[24];
  char v114[24];
  _OWORD v115[2];
  char v116;
  _QWORD v117[4];
  char v118;
  _OWORD v119[2];
  char v120;
  uint64_t v121;
  uint64_t v122;

  v2 = sub_1004B804C((uint64_t *)&unk_101407260);
  __chkstk_darwin(v2);
  *(_QWORD *)&v110 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v109 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v13);
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v96 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v96 - v20;
  *(_QWORD *)&v23 = __chkstk_darwin(v22).n128_u64[0];
  v25 = (char *)&v96 - v24;
  v26 = objc_msgSend(a1, "presentingViewController", v23);
  if (!v26)
    goto LABEL_10;
  v111 = v26;
  sub_100579E08(a1, v26);
  v112 = v28;
  if (!v27)
  {
    v58 = &v121;
LABEL_9:

LABEL_10:
    v59 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    v60 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v25, 1, 1, v59);
    v61 = 0;
    v62 = 0;
    v63 = 0uLL;
    v64 = 2;
    v65 = 0uLL;
    goto LABEL_27;
  }
  v29 = v27;
  v30 = type metadata accessor for CRLiOSFolderGridViewController(0);
  v31 = swift_dynamicCastClass(v29, v30);
  if (!v31)
  {

    v58 = &v122;
    goto LABEL_9;
  }
  v108 = v5;
  v107 = v4;
  v101 = v15;
  v102 = v18;
  v99 = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
  v32 = (uint64_t)v25;
  v33 = *(void **)(v31 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache);
  *(_QWORD *)&v106 = v31;
  *(_QWORD *)&v105 = v32 + *(int *)(sub_1004B804C((uint64_t *)&unk_1013EA630) + 48);
  *(_QWORD *)&v104 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator;
  v34 = *(char **)(*(_QWORD *)&v112[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v103 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v36 = v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v114, 0, 0);
  sub_1004B8460(v36, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  v98 = v29;
  v100 = v33;
  v37 = v33;
  v25 = (char *)v32;
  v97 = v37;
  v38 = v34;
  swift_retain(v35);
  v39 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v39);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release(v35);
  v40 = (uint64_t *)(*(_QWORD *)&v34[v103] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v41 = *v40;
  v42 = v40[1];
  swift_bridgeObjectRetain(v42);
  sub_10067AFD0((uint64_t)v12, v41, v42, v32);

  v43 = *(char **)(*(_QWORD *)&v112[v104] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v44 = *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v44, v113, 0, 0);
  sub_1004B8460(v44, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  v45 = v43;
  v46 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v46);
  v47 = v119[0];
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);

  *(_OWORD *)v105 = v47;
  v48 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  swift_storeEnumTagMultiPayload(v32, v48, 2);
  v49 = *(_QWORD *)(v48 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v32, 0, 1, v48);
  v50 = (void *)v106;
  v51 = sub_100B787A8();
  sub_10057B540(v32, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v21, 1, v48) == 1)
  {

    __break(1u);
LABEL_30:

    __break(1u);
    goto LABEL_31;
  }
  v53 = v110;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v21, v52);

  sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
  v54 = v108;
  v55 = v107;
  v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v53, 1, v107);
  v18 = v102;
  v15 = v101;
  if (v56 == 1)
  {

    v57 = v98;
    sub_1004CB800(v53, (uint64_t *)&unk_101407260);
LABEL_25:
    v62 = 0;
    v63 = 0uLL;
    v60 = 1;
    v65 = 0uLL;
LABEL_26:
    v61 = v100;
    v64 = v99;
    goto LABEL_27;
  }
  v66 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v109, v53, v55);
  v67 = v50;
  v68 = objc_msgSend(v50, "collectionView");
  if (!v68)
    goto LABEL_30;
  v69 = v68;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v69, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 0, 0);

  v71 = objc_msgSend(v67, "collectionView");
  if (v71)
  {
    v72 = v71;
    v73 = IndexPath._bridgeToObjectiveC()().super.isa;
    v74 = objc_msgSend(v72, "cellForItemAtIndexPath:", v73);

    if (v74)
    {
      ObjectType = swift_getObjectType(v74);
      v76 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLFolderCollectionViewItem);
      if (v76)
        v77 = v76;
      else
        v77 = 0;
      if (v76)
        v62 = v74;
      else
        v62 = 0;
      if (v62)
      {
        v78 = swift_getObjectType(v62);
        v79 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v77 + 96);
        v80 = v74;
        v79(v115, v78, v77);
        v110 = v115[0];
        v106 = v115[1];
        v60 = v116;
        sub_10057B588((uint64_t)v115, (uint64_t)v117);
        if ((v118 & 1) == 0)
        {
          v84 = *(double *)v117;
          v85 = *(double *)&v117[1];
          v86 = *(double *)&v117[2];
          v87 = *(double *)&v117[3];
          v88 = v80;
          v89 = v111;
          v90 = objc_msgSend(v111, "view");
          objc_msgSend(v62, "convertRect:toView:", v90, v84, v85, v86, v87);
          v110 = v91;
          v104 = v92;
          v106 = v93;
          v105 = v94;
          v95 = v98;

          (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v107);
          *(_QWORD *)&v65 = v106;
          *(_QWORD *)&v63 = v110;
          v60 = 0;
          *((_QWORD *)&v63 + 1) = v104;
          *((_QWORD *)&v65 + 1) = v105;
          goto LABEL_26;
        }
        (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v107);

        v81 = v98;
        v61 = v100;
        v64 = v99;
        v63 = v110;
        v65 = v106;
LABEL_27:
        v119[0] = v63;
        v119[1] = v65;
        v120 = v60;
        sub_10057B540((uint64_t)v25, (uint64_t)v18);
        v83 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(0));
        sub_10057B540((uint64_t)v18, (uint64_t)v15);
        sub_10067926C(0, v64, (uint64_t)v119, (uint64_t)v62, (uint64_t)v15, v61);

        sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E3830);
        sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E3830);
        return;
      }

      v55 = v107;
    }
    v82 = v98;

    (*(void (**)(char *, uint64_t))(v108 + 8))(v66, v55);
    goto LABEL_25;
  }
LABEL_31:

  __break(1u);
}

uint64_t sub_10057B540(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10057B588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E1B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_10057B5D0(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  _OWORD *v8;
  _OWORD *v9;
  int v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char v16;
  char *v17;
  char v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  char v25;
  char *v26;
  char *v27;
  char *v28;
  __int128 v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char v34;
  __int128 v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  __int128 v40;
  _OWORD *v41;
  _OWORD *v42;
  char *v43;
  __int128 v44;
  char v45;
  __int128 v46;
  _OWORD *v47;
  _OWORD *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v82;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v8 = a1 + 24;
    v9 = a2 + 3;
    v10 = *((unsigned __int8 *)a2 + 280);
    v11 = v5;
    switch(v10)
    {
      case 0:
        v12 = a2[6];
        if (v12)
        {
          *((_QWORD *)a1 + 6) = v12;
          (**((void (***)(uint64_t, _OWORD *))v12 - 1))((uint64_t)(a1 + 24), v9);
        }
        else
        {
          v40 = v9[1];
          *v8 = *v9;
          *(_OWORD *)(a1 + 40) = v40;
        }
        v41 = a1 + 56;
        v42 = a2 + 7;
        v43 = a2[10];
        if (v43)
        {
          *((_QWORD *)a1 + 10) = v43;
          (**((void (***)(_OWORD *, _OWORD *))v43 - 1))(v41, v42);
        }
        else
        {
          v51 = *(_OWORD *)(a2 + 9);
          *v41 = *v42;
          *(_OWORD *)(a1 + 72) = v51;
        }
        a1[280] = 0;
        break;
      case 1:
        v13 = a2[6];
        if (v13)
        {
          *((_QWORD *)a1 + 6) = v13;
          (**((void (***)(uint64_t, _OWORD *))v13 - 1))((uint64_t)(a1 + 24), v9);
        }
        else
        {
          v44 = v9[1];
          *v8 = *v9;
          *(_OWORD *)(a1 + 40) = v44;
        }
        v45 = 1;
        goto LABEL_47;
      case 18:
        v14 = a2[3];
        v15 = a2[4];
        *((_QWORD *)a1 + 3) = v14;
        *((_QWORD *)a1 + 4) = v15;
        v16 = 18;
        goto LABEL_16;
      case 19:
        v17 = *(char **)v9;
        *((_QWORD *)a1 + 3) = *(_QWORD *)v9;
        v18 = 19;
        goto LABEL_29;
      case 20:
        v14 = a2[3];
        v15 = a2[4];
        *((_QWORD *)a1 + 3) = v14;
        *((_QWORD *)a1 + 4) = v15;
        v16 = 20;
        goto LABEL_16;
      case 21:
        v17 = *(char **)v9;
        *((_QWORD *)a1 + 3) = *(_QWORD *)v9;
        v18 = 21;
        goto LABEL_29;
      case 28:
        v14 = a2[3];
        v15 = a2[4];
        *((_QWORD *)a1 + 3) = v14;
        *((_QWORD *)a1 + 4) = v15;
        v16 = 28;
        goto LABEL_16;
      case 29:
        v17 = *(char **)v9;
        *((_QWORD *)a1 + 3) = *(_QWORD *)v9;
        v18 = 29;
        goto LABEL_29;
      case 30:
        v14 = a2[3];
        v15 = a2[4];
        *((_QWORD *)a1 + 3) = v14;
        *((_QWORD *)a1 + 4) = v15;
        v16 = 30;
LABEL_16:
        a1[280] = v16;
        v19 = v14;
        v20 = v15;
        break;
      case 31:
        v17 = *(char **)v9;
        *((_QWORD *)a1 + 3) = *(_QWORD *)v9;
        v18 = 31;
        goto LABEL_29;
      case 32:
        v21 = a2[3];
        v22 = a2[4];
        *((_QWORD *)a1 + 3) = v21;
        *((_QWORD *)a1 + 4) = v22;
        v23 = 32;
        goto LABEL_25;
      case 33:
        v24 = *(_QWORD *)v9;
        *((_QWORD *)a1 + 3) = *(_QWORD *)v9;
        v25 = 33;
        goto LABEL_27;
      case 34:
        v26 = a2[6];
        if (v26)
        {
          *((_QWORD *)a1 + 6) = v26;
          (**((void (***)(uint64_t, _OWORD *))v26 - 1))((uint64_t)(a1 + 24), v9);
        }
        else
        {
          v46 = v9[1];
          *v8 = *v9;
          *(_OWORD *)(a1 + 40) = v46;
        }
        v47 = a1 + 56;
        v48 = a2 + 7;
        v49 = a2[10];
        if (v49)
        {
          *((_QWORD *)a1 + 10) = v49;
          (**((void (***)(_OWORD *, _OWORD *))v49 - 1))(v47, v48);
        }
        else
        {
          v52 = *(_OWORD *)(a2 + 9);
          *v47 = *v48;
          *(_OWORD *)(a1 + 72) = v52;
        }
        v45 = 34;
        goto LABEL_47;
      case 35:
        v27 = a2[6];
        if (v27)
        {
          *((_QWORD *)a1 + 6) = v27;
          (**((void (***)(uint64_t, _OWORD *))v27 - 1))((uint64_t)(a1 + 24), v9);
        }
        else
        {
          v50 = v9[1];
          *v8 = *v9;
          *(_OWORD *)(a1 + 40) = v50;
        }
        v45 = 35;
LABEL_47:
        a1[280] = v45;
        break;
      case 36:
        v21 = a2[3];
        v22 = a2[4];
        *((_QWORD *)a1 + 3) = v21;
        *((_QWORD *)a1 + 4) = v22;
        v23 = 36;
LABEL_25:
        a1[280] = v23;
        swift_bridgeObjectRetain(v21);
        swift_bridgeObjectRetain(v22);
        break;
      case 37:
        v24 = *(_QWORD *)v9;
        *((_QWORD *)a1 + 3) = *(_QWORD *)v9;
        v25 = 37;
LABEL_27:
        a1[280] = v25;
        swift_bridgeObjectRetain(v24);
        break;
      case 58:
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        a1[56] = *((_BYTE *)a2 + 56);
        v17 = a2[8];
        *((_QWORD *)a1 + 8) = v17;
        a1[72] = *((_BYTE *)a2 + 72);
        v18 = 58;
LABEL_29:
        a1[280] = v18;
        v28 = v17;
        break;
      case 63:
        v29 = v9[1];
        *v8 = *v9;
        *(_OWORD *)(a1 + 40) = v29;
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
        v30 = a2[11];
        v31 = a2[12];
        *((_QWORD *)a1 + 11) = v30;
        *((_QWORD *)a1 + 12) = v31;
        v32 = a2[13];
        v33 = a2[14];
        *((_QWORD *)a1 + 13) = v32;
        *((_QWORD *)a1 + 14) = v33;
        v34 = 63;
        goto LABEL_32;
      case 64:
        v35 = v9[1];
        *v8 = *v9;
        *(_OWORD *)(a1 + 40) = v35;
        v30 = a2[7];
        v31 = a2[8];
        *((_QWORD *)a1 + 7) = v30;
        *((_QWORD *)a1 + 8) = v31;
        v32 = a2[9];
        v33 = a2[10];
        *((_QWORD *)a1 + 9) = v32;
        *((_QWORD *)a1 + 10) = v33;
        v34 = 64;
LABEL_32:
        a1[280] = v34;
        v36 = v30;
        v37 = v31;
        v38 = v32;
        v39 = v33;
        break;
      default:
        memcpy(a1 + 24, v9, 0x101uLL);
        break;
    }
    v53 = a2[36];
    *((_QWORD *)a1 + 36) = v53;
    *((_DWORD *)a1 + 74) = *((_DWORD *)a2 + 74);
    v54 = a3[5];
    v55 = &a1[v54];
    v56 = (uint64_t)a2 + v54;
    v57 = type metadata accessor for UUID(0);
    v58 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
    v59 = v53;
    v58(v55, v56, v57);
    swift_unknownObjectWeakCopyInit(&a1[a3[6]], (char *)a2 + a3[6]);
    v60 = a3[7];
    v61 = &a1[v60];
    v62 = (char *)a2 + v60;
    v63 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v64 = *(_QWORD *)(v63 - 8);
    v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
    if (v65(v62, 1, v63))
    {
      v66 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    }
    else
    {
      v58(v61, (uint64_t)v62, v57);
      v67 = *(int *)(v63 + 20);
      v68 = &v61[v67];
      v69 = &v62[v67];
      v70 = *((_QWORD *)v69 + 1);
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = v70;
      v71 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v64 + 56);
      v72 = swift_retain(v70);
      v71(v61, 0, 1, v63, v72);
    }
    v73 = a3[8];
    v74 = &a1[v73];
    v75 = (char *)a2 + v73;
    if (v65(v75, 1, v63))
    {
      v76 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      v58(v74, (uint64_t)v75, v57);
      v77 = *(int *)(v63 + 20);
      v78 = &v74[v77];
      v79 = &v75[v77];
      v80 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v80;
      v81 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v64 + 56);
      v82 = swift_retain(v80);
      v81(v74, 0, 1, v63, v82);
    }
  }
  return a1;
}

double sub_10057BAAC(uint64_t a1, int *a2)
{
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  __n128 v12;
  uint64_t v13;
  double result;

  v4 = (_QWORD *)(a1 + 24);
  switch(*(_BYTE *)(a1 + 280))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(a1 + 48))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
      if (*(_QWORD *)(a1 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 56));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(a1 + 48))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v5 = *(void **)(a1 + 32);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v5 = (void *)*v4;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease(*v4);
      break;
    case 0x3A:
      v5 = *(void **)(a1 + 64);
      goto LABEL_4;
    case 0x3F:

      v5 = *(void **)(a1 + 112);
      goto LABEL_4;
    case 0x40:

      v5 = *(void **)(a1 + 80);
LABEL_4:

      break;
    default:
      break;
  }

  v6 = a1 + a2[5];
  v7 = type metadata accessor for UUID(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  swift_unknownObjectWeakDestroy(a1 + a2[6]);
  v9 = a1 + a2[7];
  v10 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    v8(v9, v7);
    v12 = swift_release(*(_QWORD *)(v9 + *(int *)(v10 + 20) + 8));
  }
  v13 = a1 + a2[8];
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(v13, 1, v10, v12))
  {
    v8(v13, v7);
    *(_QWORD *)&result = swift_release(*(_QWORD *)(v13 + *(int *)(v10 + 20) + 8)).n128_u64[0];
  }
  return result;
}

uint64_t sub_10057BC98(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  _OWORD *v7;
  _OWORD *v8;
  int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __int128 v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  __int128 v34;
  id v35;
  id v36;
  id v37;
  id v38;
  __int128 v39;
  __int128 v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v80;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 280);
  v10 = v6;
  switch(v9)
  {
    case 0:
      v11 = *(_QWORD *)(a2 + 48);
      if (v11)
      {
        *(_QWORD *)(a1 + 48) = v11;
        (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v7, v8);
      }
      else
      {
        v46 = v8[1];
        *v7 = *v8;
        v7[1] = v46;
      }
      v47 = (_OWORD *)(a1 + 56);
      v48 = (_OWORD *)(a2 + 56);
      v49 = *(_QWORD *)(a2 + 80);
      if (v49)
      {
        *(_QWORD *)(a1 + 80) = v49;
        (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
      }
      else
      {
        v50 = *(_OWORD *)(a2 + 72);
        *v47 = *v48;
        *(_OWORD *)(a1 + 72) = v50;
      }
      *(_BYTE *)(a1 + 280) = 0;
      break;
    case 1:
      v12 = *(_QWORD *)(a2 + 48);
      if (v12)
      {
        *(_QWORD *)(a1 + 48) = v12;
        (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v7, v8);
      }
      else
      {
        v39 = v8[1];
        *v7 = *v8;
        v7[1] = v39;
      }
      *(_BYTE *)(a1 + 280) = 1;
      break;
    case 18:
      v13 = *(void **)(a2 + 24);
      v14 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v15 = 18;
      goto LABEL_14;
    case 19:
      v16 = *(void **)v8;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
      v17 = 19;
      goto LABEL_27;
    case 20:
      v13 = *(void **)(a2 + 24);
      v14 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v15 = 20;
      goto LABEL_14;
    case 21:
      v16 = *(void **)v8;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
      v17 = 21;
      goto LABEL_27;
    case 28:
      v13 = *(void **)(a2 + 24);
      v14 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v15 = 28;
      goto LABEL_14;
    case 29:
      v16 = *(void **)v8;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
      v17 = 29;
      goto LABEL_27;
    case 30:
      v13 = *(void **)(a2 + 24);
      v14 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v15 = 30;
LABEL_14:
      *(_BYTE *)(a1 + 280) = v15;
      v18 = v13;
      v19 = v14;
      break;
    case 31:
      v16 = *(void **)v8;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
      v17 = 31;
      goto LABEL_27;
    case 32:
      v20 = *(_QWORD *)(a2 + 24);
      v21 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v20;
      *(_QWORD *)(a1 + 32) = v21;
      v22 = 32;
      goto LABEL_23;
    case 33:
      v23 = *(_QWORD *)v8;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
      v24 = 33;
      goto LABEL_25;
    case 34:
      v25 = *(_QWORD *)(a2 + 48);
      if (v25)
      {
        *(_QWORD *)(a1 + 48) = v25;
        (**(void (***)(_OWORD *, _OWORD *))(v25 - 8))(v7, v8);
      }
      else
      {
        v40 = v8[1];
        *v7 = *v8;
        v7[1] = v40;
      }
      v41 = (_OWORD *)(a1 + 56);
      v42 = (_OWORD *)(a2 + 56);
      v43 = *(_QWORD *)(a2 + 80);
      if (v43)
      {
        *(_QWORD *)(a1 + 80) = v43;
        (**(void (***)(_OWORD *, _OWORD *))(v43 - 8))(v41, v42);
      }
      else
      {
        v45 = *(_OWORD *)(a2 + 72);
        *v41 = *v42;
        *(_OWORD *)(a1 + 72) = v45;
      }
      *(_BYTE *)(a1 + 280) = 34;
      break;
    case 35:
      v26 = *(_QWORD *)(a2 + 48);
      if (v26)
      {
        *(_QWORD *)(a1 + 48) = v26;
        (**(void (***)(_OWORD *, _OWORD *))(v26 - 8))(v7, v8);
      }
      else
      {
        v44 = v8[1];
        *v7 = *v8;
        v7[1] = v44;
      }
      *(_BYTE *)(a1 + 280) = 35;
      break;
    case 36:
      v20 = *(_QWORD *)(a2 + 24);
      v21 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v20;
      *(_QWORD *)(a1 + 32) = v21;
      v22 = 36;
LABEL_23:
      *(_BYTE *)(a1 + 280) = v22;
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v21);
      break;
    case 37:
      v23 = *(_QWORD *)v8;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
      v24 = 37;
LABEL_25:
      *(_BYTE *)(a1 + 280) = v24;
      swift_bridgeObjectRetain(v23);
      break;
    case 58:
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v16 = *(void **)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v16;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      v17 = 58;
LABEL_27:
      *(_BYTE *)(a1 + 280) = v17;
      v27 = v16;
      break;
    case 63:
      v28 = v8[1];
      *v7 = *v8;
      v7[1] = v28;
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      v29 = *(void **)(a2 + 88);
      v30 = *(void **)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v29;
      *(_QWORD *)(a1 + 96) = v30;
      v31 = *(void **)(a2 + 104);
      v32 = *(void **)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v31;
      *(_QWORD *)(a1 + 112) = v32;
      v33 = 63;
      goto LABEL_30;
    case 64:
      v34 = v8[1];
      *v7 = *v8;
      v7[1] = v34;
      v29 = *(void **)(a2 + 56);
      v30 = *(void **)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v29;
      *(_QWORD *)(a1 + 64) = v30;
      v31 = *(void **)(a2 + 72);
      v32 = *(void **)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v31;
      *(_QWORD *)(a1 + 80) = v32;
      v33 = 64;
LABEL_30:
      *(_BYTE *)(a1 + 280) = v33;
      v35 = v29;
      v36 = v30;
      v37 = v31;
      v38 = v32;
      break;
    default:
      memcpy(v7, v8, 0x101uLL);
      break;
  }
  v51 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 288) = v51;
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  v52 = a3[5];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = type metadata accessor for UUID(0);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
  v57 = v51;
  v56(v53, v54, v55);
  swift_unknownObjectWeakCopyInit(a1 + a3[6], a2 + a3[6]);
  v58 = a3[7];
  v59 = (char *)(a1 + v58);
  v60 = (char *)(a2 + v58);
  v61 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  if (v63(v60, 1, v61))
  {
    v64 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v56((uint64_t)v59, (uint64_t)v60, v55);
    v65 = *(int *)(v61 + 20);
    v66 = &v59[v65];
    v67 = &v60[v65];
    v68 = *((_QWORD *)v67 + 1);
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *((_QWORD *)v66 + 1) = v68;
    v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v62 + 56);
    v70 = swift_retain(v68);
    v69(v59, 0, 1, v61, v70);
  }
  v71 = a3[8];
  v72 = (char *)(a1 + v71);
  v73 = (char *)(a2 + v71);
  if (v63(v73, 1, v61))
  {
    v74 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    v56((uint64_t)v72, (uint64_t)v73, v55);
    v75 = *(int *)(v61 + 20);
    v76 = &v72[v75];
    v77 = &v73[v75];
    v78 = *((_QWORD *)v77 + 1);
    *(_QWORD *)v76 = *(_QWORD *)v77;
    *((_QWORD *)v76 + 1) = v78;
    v79 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v62 + 56);
    v80 = swift_retain(v78);
    v79(v72, 0, 1, v61, v80);
  }
  return a1;
}

uint64_t sub_10057C154(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  id v28;
  __int128 v29;
  __int128 v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  char v35;
  __int128 v36;
  id v37;
  id v38;
  id v39;
  id v40;
  __int128 v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  __int128 v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v86;
  uint64_t v87;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (a1 != a2)
  {
    v9 = (_OWORD *)(a1 + 24);
    v10 = (_OWORD *)(a2 + 24);
    sub_1004EA730((_QWORD *)(a1 + 24));
    switch(*(_BYTE *)(a2 + 280))
    {
      case 0:
        v11 = *(_QWORD *)(a2 + 48);
        if (v11)
        {
          *(_QWORD *)(a1 + 48) = v11;
          (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v41 = *(_OWORD *)(a2 + 40);
          *v9 = *v10;
          *(_OWORD *)(a1 + 40) = v41;
        }
        v42 = (_OWORD *)(a1 + 56);
        v43 = (_OWORD *)(a2 + 56);
        v44 = *(_QWORD *)(a2 + 80);
        if (v44)
        {
          *(_QWORD *)(a1 + 80) = v44;
          (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v42, v43);
        }
        else
        {
          v52 = *(_OWORD *)(a2 + 72);
          *v42 = *v43;
          *(_OWORD *)(a1 + 72) = v52;
        }
        *(_BYTE *)(a1 + 280) = 0;
        break;
      case 1:
        v12 = *(_QWORD *)(a2 + 48);
        if (v12)
        {
          *(_QWORD *)(a1 + 48) = v12;
          (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v45 = *(_OWORD *)(a2 + 40);
          *v9 = *v10;
          *(_OWORD *)(a1 + 40) = v45;
        }
        v46 = 1;
        goto LABEL_46;
      case 0x12:
        v13 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v13;
        v14 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v14;
        v15 = 18;
        goto LABEL_15;
      case 0x13:
        v16 = *(void **)v10;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v10;
        v17 = 19;
        goto LABEL_28;
      case 0x14:
        v13 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v13;
        v14 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v14;
        v15 = 20;
        goto LABEL_15;
      case 0x15:
        v16 = *(void **)v10;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v10;
        v17 = 21;
        goto LABEL_28;
      case 0x1C:
        v13 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v13;
        v14 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v14;
        v15 = 28;
        goto LABEL_15;
      case 0x1D:
        v16 = *(void **)v10;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v10;
        v17 = 29;
        goto LABEL_28;
      case 0x1E:
        v13 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v13;
        v14 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v14;
        v15 = 30;
LABEL_15:
        *(_BYTE *)(a1 + 280) = v15;
        v18 = v13;
        v19 = v14;
        break;
      case 0x1F:
        v16 = *(void **)v10;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v10;
        v17 = 31;
        goto LABEL_28;
      case 0x20:
        v20 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v20;
        v21 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v21;
        v22 = 32;
        goto LABEL_24;
      case 0x21:
        v23 = *(_QWORD *)v10;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v10;
        v24 = 33;
        goto LABEL_26;
      case 0x22:
        v25 = *(_QWORD *)(a2 + 48);
        if (v25)
        {
          *(_QWORD *)(a1 + 48) = v25;
          (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v47 = *(_OWORD *)(a2 + 40);
          *v9 = *v10;
          *(_OWORD *)(a1 + 40) = v47;
        }
        v48 = (_OWORD *)(a1 + 56);
        v49 = (_OWORD *)(a2 + 56);
        v50 = *(_QWORD *)(a2 + 80);
        if (v50)
        {
          *(_QWORD *)(a1 + 80) = v50;
          (**(void (***)(_OWORD *, _OWORD *))(v50 - 8))(v48, v49);
        }
        else
        {
          v53 = *(_OWORD *)(a2 + 72);
          *v48 = *v49;
          *(_OWORD *)(a1 + 72) = v53;
        }
        v46 = 34;
        goto LABEL_46;
      case 0x23:
        v26 = *(_QWORD *)(a2 + 48);
        if (v26)
        {
          *(_QWORD *)(a1 + 48) = v26;
          (**(void (***)(uint64_t, uint64_t))(v26 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v51 = *(_OWORD *)(a2 + 40);
          *v9 = *v10;
          *(_OWORD *)(a1 + 40) = v51;
        }
        v46 = 35;
LABEL_46:
        *(_BYTE *)(a1 + 280) = v46;
        break;
      case 0x24:
        v20 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v20;
        v21 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v21;
        v22 = 36;
LABEL_24:
        *(_BYTE *)(a1 + 280) = v22;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v21);
        break;
      case 0x25:
        v23 = *(_QWORD *)v10;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v10;
        v24 = 37;
LABEL_26:
        *(_BYTE *)(a1 + 280) = v24;
        swift_bridgeObjectRetain(v23);
        break;
      case 0x3A:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v27 = *(_OWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = v27;
        v16 = *(void **)(a2 + 64);
        *(_QWORD *)(a1 + 64) = v16;
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        v17 = 58;
LABEL_28:
        *(_BYTE *)(a1 + 280) = v17;
        v28 = v16;
        break;
      case 0x3F:
        v29 = *(_OWORD *)(a2 + 40);
        *v9 = *v10;
        *(_OWORD *)(a1 + 40) = v29;
        v30 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v30;
        v31 = *(void **)(a2 + 88);
        *(_QWORD *)(a1 + 88) = v31;
        v32 = *(void **)(a2 + 96);
        *(_QWORD *)(a1 + 96) = v32;
        v33 = *(void **)(a2 + 104);
        *(_QWORD *)(a1 + 104) = v33;
        v34 = *(void **)(a2 + 112);
        *(_QWORD *)(a1 + 112) = v34;
        v35 = 63;
        goto LABEL_31;
      case 0x40:
        v36 = *(_OWORD *)(a2 + 40);
        *v9 = *v10;
        *(_OWORD *)(a1 + 40) = v36;
        v31 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v31;
        v32 = *(void **)(a2 + 64);
        *(_QWORD *)(a1 + 64) = v32;
        v33 = *(void **)(a2 + 72);
        *(_QWORD *)(a1 + 72) = v33;
        v34 = *(void **)(a2 + 80);
        *(_QWORD *)(a1 + 80) = v34;
        v35 = 64;
LABEL_31:
        *(_BYTE *)(a1 + 280) = v35;
        v37 = v31;
        v38 = v32;
        v39 = v33;
        v40 = v34;
        break;
      default:
        memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
        break;
    }
  }
  v54 = *(void **)(a1 + 288);
  v55 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 288) = v55;
  v56 = v55;

  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
  *(_BYTE *)(a1 + 298) = *(_BYTE *)(a2 + 298);
  *(_BYTE *)(a1 + 299) = *(_BYTE *)(a2 + 299);
  v57 = a3[5];
  v58 = a1 + v57;
  v59 = a2 + v57;
  v60 = type metadata accessor for UUID(0);
  v100 = *(_QWORD *)(v60 - 8);
  v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 24);
  v99(v58, v59, v60);
  swift_unknownObjectWeakCopyAssign(a1 + a3[6], a2 + a3[6]);
  v61 = a3[7];
  v62 = (char *)(a1 + v61);
  v63 = (char *)(a2 + v61);
  v64 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v62, v63, v60);
      v69 = *(int *)(v64 + 20);
      v70 = &v62[v69];
      v71 = &v63[v69];
      v72 = *((_QWORD *)v71 + 1);
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = v72;
      v73 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v65 + 56);
      v74 = swift_retain(v72);
      v73(v62, 0, 1, v64, v74);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v68)
  {
    sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_52:
    v75 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    goto LABEL_53;
  }
  v99((uint64_t)v62, (uint64_t)v63, v60);
  v89 = *(int *)(v64 + 20);
  v90 = &v62[v89];
  v91 = &v63[v89];
  v92 = *((_QWORD *)v91 + 1);
  v93 = *((_QWORD *)v90 + 1);
  *(_QWORD *)v90 = *(_QWORD *)v91;
  *((_QWORD *)v90 + 1) = v92;
  swift_retain(v92);
  swift_release(v93);
LABEL_53:
  v76 = a3[8];
  v77 = (char *)(a1 + v76);
  v78 = (char *)(a2 + v76);
  v79 = v66((char *)(a1 + v76), 1, v64);
  v80 = v66(v78, 1, v64);
  if (!v79)
  {
    if (!v80)
    {
      v99((uint64_t)v77, (uint64_t)v78, v60);
      v94 = *(int *)(v64 + 20);
      v95 = &v77[v94];
      v96 = &v78[v94];
      v97 = *((_QWORD *)v96 + 1);
      v98 = *((_QWORD *)v95 + 1);
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = v97;
      swift_retain(v97);
      swift_release(v98);
      return a1;
    }
    sub_1004B84A4((uint64_t)v77, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_58;
  }
  if (v80)
  {
LABEL_58:
    v87 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v77, v78, v60);
  v81 = *(int *)(v64 + 20);
  v82 = &v77[v81];
  v83 = &v78[v81];
  v84 = *((_QWORD *)v83 + 1);
  *(_QWORD *)v82 = *(_QWORD *)v83;
  *((_QWORD *)v82 + 1) = v84;
  v85 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v65 + 56);
  v86 = swift_retain(v84);
  v85(v77, 0, 1, v64, v86);
  return a1;
}

char *sub_10057C794(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  memcpy(a1, a2, 0x12CuLL);
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for UUID(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  swift_unknownObjectWeakTakeInit(&a1[a3[6]], &a2[a3[6]]);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    *(_OWORD *)&v12[*(int *)(v14 + 20)] = *(_OWORD *)&v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  if (v16(v20, 1, v14))
  {
    v21 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v10(v19, v20, v9);
    *(_OWORD *)&v19[*(int *)(v14 + 20)] = *(_OWORD *)&v20[*(int *)(v14 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_10057C928(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  if (a1 != a2)
  {
    sub_1004EA730((_QWORD *)(a1 + 24));
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
  }
  v7 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);

  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_WORD *)(a1 + 297) = *(_WORD *)(a2 + 297);
  *(_BYTE *)(a1 + 299) = *(_BYTE *)(a2 + 299);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for UUID(0);
  v33 = *(_QWORD *)(v11 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(v9, v10, v11);
  swift_unknownObjectWeakTakeAssign(a1 + a3[6], a2 + a3[6]);
  v12 = a3[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v13, v14, v11);
      *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v19)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_8:
    v20 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_9;
  }
  v32((uint64_t)v13, (uint64_t)v14, v11);
  v28 = *(int *)(v15 + 20);
  v29 = *(_QWORD *)&v13[v28 + 8];
  *(_OWORD *)&v13[v28] = *(_OWORD *)&v14[v28];
  swift_release(v29);
LABEL_9:
  v21 = a3[8];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = v17((char *)(a1 + v21), 1, v15);
  v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      v32((uint64_t)v22, (uint64_t)v23, v11);
      v30 = *(int *)(v15 + 20);
      v31 = *(_QWORD *)&v22[v30 + 8];
      *(_OWORD *)&v22[v30] = *(_OWORD *)&v23[v30];
      swift_release(v31);
      return a1;
    }
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_14;
  }
  if (v25)
  {
LABEL_14:
    v26 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v22, v23, v11);
  *(_OWORD *)&v22[*(int *)(v15 + 20)] = *(_OWORD *)&v23[*(int *)(v15 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
  return a1;
}

uint64_t sub_10057CBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10057CC08);
}

uint64_t sub_10057CC08(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013E06C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_10057CCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10057CCB8);
}

char *sub_10057CCB8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1004B804C(&qword_1013E06C0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for CRLBasicLayerAnimation(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E38A8;
  if (!qword_1013E38A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBasicLayerAnimation);
  return result;
}

void sub_10057CD94(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v6[0] = &unk_100EF9BD8;
  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100EF9BF0;
    sub_1004EAE54(319);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_10057CE2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  Swift::String v6;
  uint64_t v7;
  _OWORD __src[19];
  _BYTE v9[40];
  _QWORD __dst[38];

  v2 = v1;
  sub_1004E90B0((uint64_t)a1, (uint64_t)v9);
  v4 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(__src, v9, v4, &type metadata for CRLBasicLayerAnimation.Def, 6))
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    memcpy(__dst, __src, 0x12CuLL);
    return sub_10057DE54((uint64_t)__dst, v2);
  }
  else
  {
    memset(__src, 0, 300);
    sub_1004CB800((uint64_t)__src, (uint64_t *)&unk_101406CB0);
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(69);
    v6._object = (void *)0x8000000100FB4580;
    v6._countAndFlagsBits = 0xD000000000000043;
    String.append(_:)(v6);
    v7 = type metadata accessor for CRLBasicLayerAnimation(0);
    _print_unlocked<A, B>(_:_:)(v2, __dst, v7, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, __dst[0], __dst[1], "Freeform/CRLBasicLayerAnimation.swift", 37, 2, 52, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10057CF94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v13;
  _BYTE v16[40];

  v3 = sub_1004B804C(&qword_1013E3900);
  __chkstk_darwin(v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLBasicLayerAnimation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1004E90B0(a1, (uint64_t)v16);
  v10 = sub_1004B804C(&qword_1013E8700);
  v11 = swift_dynamicCast(v5, v16, v10, v6, 6);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v11)
  {
    v12(v5, 0, 1, v6);
    sub_10057DE88((uint64_t)v5, (uint64_t)v9);
    v13 = sub_100D26678((uint64_t)v9, v1);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBasicLayerAnimation);
  }
  else
  {
    v12(v5, 1, 1, v6);
    sub_1004CB800((uint64_t)v5, &qword_1013E3900);
    v13 = 0;
  }
  return v13 & 1;
}

float sub_10057D0E0(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  double v10;
  float v11;
  float v12;
  _OWORD v14[5];
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for CRLBasicLayerAnimation(0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + *(int *)(v3 + 24));
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1004E91D4(v1, (uint64_t)v14);
    sub_1008A5E84();

    sub_1004E9210((uint64_t)v14);
    v6 = v17;
    v7 = v18;
    sub_1004BB5A4(v16, v17);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v14, v6, v7);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v16);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
    v15 = 0;
  }
  v8 = CACurrentMediaTime();
  v9 = sub_10057D1F4((uint64_t)v14, v8);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F04B0);
  *(float *)&v10 = a1;
  objc_msgSend(v9, "solveForInput:", v10);
  v12 = v11;

  return v12;
}

id sub_10057D1F4(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  char v51;
  _BYTE v52[88];

  v3 = v2;
  sub_1004CB7BC(a1, (uint64_t)v52, (uint64_t *)&unk_1013F04B0);
  sub_1004CB7BC((uint64_t)v52, (uint64_t)&v44, (uint64_t *)&unk_1013F04B0);
  v5 = v49;
  sub_1004CB800((uint64_t)&v44, (uint64_t *)&unk_1013F04B0);
  if (!v5)
  {
    v6 = type metadata accessor for CRLBasicLayerAnimation(0);
    Strong = swift_unknownObjectWeakLoadStrong(v2 + *(int *)(v6 + 24));
    if (Strong)
    {
      v8 = (void *)Strong;
      sub_1004E91D4(v2, (uint64_t)&v44);
      sub_1008A5E84();

      sub_1004E9210((uint64_t)&v44);
      v9 = *((_QWORD *)&v39 + 1);
      v10 = v40;
      sub_1004BB5A4(&v38, *((uint64_t *)&v39 + 1));
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v10 + 48))(&v44, v9, v10);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v38);
    }
    else
    {
      v44 = 0u;
      v45 = 0u;
      v46 = 0u;
      v47 = 0u;
      v48 = 0u;
      v49 = 0;
    }
    sub_1004CB800((uint64_t)v52, (uint64_t *)&unk_1013F04B0);
    sub_1004EB2BC((uint64_t)&v44, (uint64_t)v52);
  }
  sub_1004E91D4(v2, (uint64_t)&v44);
  sub_1008A51D4();
  sub_1008A4EC8(v11);
  v13 = v12;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v15 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v14);

  sub_1004E9210((uint64_t)&v44);
  sub_1004CB7BC((uint64_t)v52, (uint64_t)&v38, (uint64_t *)&unk_1013F04B0);
  if (v43)
  {
    v47 = v41;
    v48 = v42;
    v49 = v43;
    v44 = v38;
    v45 = v39;
    v46 = v40;
    sub_1004CB7BC((uint64_t)&v44, (uint64_t)&v38, &qword_1013E0230);
    v16 = *((_QWORD *)&v39 + 1);
    if (*((_QWORD *)&v39 + 1))
    {
      v17 = sub_1004BB5A4(&v38, *((uint64_t *)&v39 + 1));
      v18 = *(_QWORD *)(v16 - 8);
      v19 = __chkstk_darwin(v17);
      v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
      v22 = _bridgeAnythingToObjectiveC<A>(_:)(v21, v16);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v38);
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v15, "setFromValue:", v22);
    swift_unknownObjectRelease(v22);
    sub_1004CB7BC((uint64_t)&v46, (uint64_t)&v38, &qword_1013E0230);
    v23 = *((_QWORD *)&v39 + 1);
    if (*((_QWORD *)&v39 + 1))
    {
      v24 = sub_1004BB5A4(&v38, *((uint64_t *)&v39 + 1));
      v25 = *(_QWORD *)(v23 - 8);
      v26 = __chkstk_darwin(v24);
      v28 = (char *)&v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v25 + 16))(v28, v26);
      v29 = _bridgeAnythingToObjectiveC<A>(_:)(v28, v23);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v23);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v38);
    }
    else
    {
      v29 = 0;
    }
    objc_msgSend(v15, "setToValue:", v29);
    swift_unknownObjectRelease(v29);
    sub_1004E9164(&v44);
  }
  else
  {
    sub_1004CB800((uint64_t)&v38, (uint64_t *)&unk_1013F04B0);
  }
  objc_msgSend(v15, "setBeginTime:", *(double *)(v3 + 8) + a2);
  objc_msgSend(v15, "setDuration:", *(double *)(v3 + 16));
  objc_msgSend(v15, "setTimingFunction:", *(_QWORD *)v3);
  sub_1004E91D4(v3, (uint64_t)&v44);
  v30 = v50;
  if (v50)
  {
    v31 = v15;
    v32 = v30;
  }
  else
  {
    v32 = objc_msgSend(v15, "fillMode");
  }
  v33 = v30;
  sub_1004E9210((uint64_t)&v44);
  objc_msgSend(v15, "setFillMode:", v32);

  sub_1004E91D4(v3, (uint64_t)&v44);
  if (v51 == 2)
  {
    v34 = objc_msgSend(v15, "isRemovedOnCompletion");
  }
  else
  {
    v34 = (id)(v51 & 1);
    v35 = v15;
  }
  sub_1004E9210((uint64_t)&v44);
  objc_msgSend(v15, "setRemovedOnCompletion:", v34);

  sub_1004CB800((uint64_t)v52, (uint64_t *)&unk_1013F04B0);
  return v15;
}

uint64_t sub_10057D680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_10057D6C0(uint64_t a1)
{
  uint64_t v1;

  return swift_unknownObjectWeakLoadStrong(v1 + *(int *)(a1 + 24));
}

uint64_t sub_10057D6CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = (uint64_t)&type metadata for CRLBasicLayerAnimation.Def;
  a1[4] = sub_1004EB138();
  v3 = swift_allocObject(&unk_10126D398, 316, 7);
  *a1 = v3;
  return sub_1004E91D4(v1, v3 + 16);
}

void (*sub_10057D71C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v3[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v3[4] = sub_1004EB138();
  v4 = swift_allocObject(&unk_10126D398, 316, 7);
  *v3 = v4;
  sub_1004E91D4(v1, v4 + 16);
  return sub_10057D798;
}

void sub_10057D798(uint64_t *a1, char a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_1004E90B0(*a1, (uint64_t)(v2 + 5));
    sub_10057CE2C(v2 + 5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2);
  }
  else
  {
    sub_10057CE2C((_QWORD *)*a1);
  }
  free(v2);
}

uint64_t sub_10057D800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004CB7BC(v2 + *(int *)(a1 + 28), a2, &qword_1013E06C0);
}

uint64_t sub_10057D828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1004CB7BC(v2 + *(int *)(a1 + 32), a2, &qword_1013E06C0);
}

Swift::Int sub_10057D854()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_10057D8CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_10057D930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

double sub_10057D9A4()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void sub_10057D9AC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

double (*sub_10057D9B4(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 8);
  return sub_10057D9D0;
}

double sub_10057D9D0(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8) = *(_QWORD *)a1;
  return result;
}

double sub_10057D9E0()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_10057D9E8()
{
  return sub_1004B7878(&qword_1013E38F0, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9C58);
}

uint64_t sub_10057DA14(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_1013E38F8, type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&unk_100EF9C18);
  *(_QWORD *)(a1 + 48) = result;
  return result;
}

id sub_10057DA50(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v6;
  NSString v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  int v27;
  id v28;
  id v29;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[3];
  uint64_t v40;

  v3 = v2;
  sub_1008A51D4();
  sub_1008A4EC8(v6);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v7);

  sub_1004CB7BC(a1, (uint64_t)&v32, (uint64_t *)&unk_1013F04B0);
  if (v37)
  {
    v39[1] = v35;
    v39[2] = v36;
    v40 = v37;
    v38[0] = v32;
    v38[1] = v33;
    v39[0] = v34;
    sub_1004CB7BC((uint64_t)v38, (uint64_t)&v32, &qword_1013E0230);
    v9 = *((_QWORD *)&v33 + 1);
    if (*((_QWORD *)&v33 + 1))
    {
      v10 = sub_1004BB5A4(&v32, *((uint64_t *)&v33 + 1));
      v11 = *(_QWORD *)(v9 - 8);
      v12 = __chkstk_darwin(v10);
      v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
      v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v9);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v32);
    }
    else
    {
      v15 = 0;
    }
    objc_msgSend(v8, "setFromValue:", v15);
    swift_unknownObjectRelease(v15);
    sub_1004CB7BC((uint64_t)v39, (uint64_t)&v32, &qword_1013E0230);
    v16 = *((_QWORD *)&v33 + 1);
    if (*((_QWORD *)&v33 + 1))
    {
      v17 = sub_1004BB5A4(&v32, *((uint64_t *)&v33 + 1));
      v18 = *(_QWORD *)(v16 - 8);
      v19 = __chkstk_darwin(v17);
      v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
      v22 = _bridgeAnythingToObjectiveC<A>(_:)(v21, v16);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v32);
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v8, "setToValue:", v22);
    swift_unknownObjectRelease(v22);
    sub_1004E9164(v38);
  }
  else
  {
    sub_1004CB800((uint64_t)&v32, (uint64_t *)&unk_1013F04B0);
  }
  objc_msgSend(v8, "setBeginTime:", *(double *)(v3 + 8) + a2);
  objc_msgSend(v8, "setDuration:", *(double *)(v3 + 16));
  objc_msgSend(v8, "setTimingFunction:", *(_QWORD *)v3);
  v23 = *(void **)(v3 + 288);
  if (v23)
  {
    v24 = v8;
    v25 = v23;
  }
  else
  {
    v25 = objc_msgSend(v8, "fillMode");
  }
  v26 = v23;
  objc_msgSend(v8, "setFillMode:", v25);

  v27 = *(unsigned __int8 *)(v3 + 298);
  if (v27 == 2)
  {
    v28 = objc_msgSend(v8, "isRemovedOnCompletion");
  }
  else
  {
    v28 = (id)(v27 & 1);
    v29 = v8;
  }
  objc_msgSend(v8, "setRemovedOnCompletion:", v28);

  return v8;
}

uint64_t sub_10057DDB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10057E090((uint64_t *)(v1 + 24), a1);
}

__int128 *sub_10057DDBC(__int128 *a1)
{
  uint64_t v1;

  return sub_10057EBF0(a1, (__int128 *)(v1 + 24));
}

void *sub_10057DDC4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 288);
  v2 = v1;
  return v1;
}

void sub_10057DDE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = a1;
}

uint64_t sub_10057DE10()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 296);
}

uint64_t sub_10057DE18(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 296) = result;
  return result;
}

uint64_t sub_10057DE20()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 297);
}

uint64_t sub_10057DE28(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 297) = result;
  return result;
}

uint64_t sub_10057DE30()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 298);
}

uint64_t sub_10057DE38(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 298) = result;
  return result;
}

uint64_t sub_10057DE40()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 299);
}

uint64_t sub_10057DE48(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 299) = result;
  return result;
}

uint64_t sub_10057DE54(uint64_t a1, uint64_t a2)
{
  assignWithTake for CRLBasicLayerAnimation.Def(a2, a1);
  return a2;
}

uint64_t sub_10057DE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBasicLayerAnimation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10057DED0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  int v15;
  int v16;
  _BOOL4 v17;
  int v18;
  int v19;
  _BOOL4 v20;
  int v21;
  int v22;
  _BOOL4 v24;

  sub_100511A70();
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_25;
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8))
    goto LABEL_25;
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
    goto LABEL_25;
  sub_1008A7624((uint64_t *)(a1 + 24));
  if ((v4 & 1) == 0)
    goto LABEL_25;
  v5 = *(_QWORD *)(a1 + 288);
  v6 = *(_QWORD *)(a2 + 288);
  if (!v5)
  {
    if (!v6)
      goto LABEL_13;
LABEL_25:
    v14 = 0;
    return v14 & 1;
  }
  if (!v6)
    goto LABEL_25;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = v8;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v12 = v10;
  if (v7 == v11 && v9 == v10)
  {
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v11, v10, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v12);
    v14 = 0;
    if ((v13 & 1) == 0)
      return v14 & 1;
  }
LABEL_13:
  v15 = *(unsigned __int8 *)(a1 + 296);
  v16 = *(unsigned __int8 *)(a2 + 296);
  if (v15 == 2)
  {
    if (v16 != 2)
      goto LABEL_25;
  }
  else
  {
    v14 = 0;
    v17 = (v15 & 1) == 0;
    if (v16 == 2 || ((v17 ^ v16) & 1) == 0)
      return v14 & 1;
  }
  v18 = *(unsigned __int8 *)(a1 + 297);
  v19 = *(unsigned __int8 *)(a2 + 297);
  if (v18 == 2)
  {
    if (v19 != 2)
      goto LABEL_25;
  }
  else
  {
    v14 = 0;
    v20 = (v18 & 1) == 0;
    if (v19 == 2 || ((v20 ^ v19) & 1) == 0)
      return v14 & 1;
  }
  v21 = *(unsigned __int8 *)(a1 + 298);
  v22 = *(unsigned __int8 *)(a2 + 298);
  if (v21 == 2)
  {
    if (v22 != 2)
      goto LABEL_25;
LABEL_29:
    v14 = *(_BYTE *)(a1 + 299) ^ *(_BYTE *)(a2 + 299) ^ 1;
    return v14 & 1;
  }
  v14 = 0;
  v24 = (v21 & 1) == 0;
  if (v22 != 2 && ((v24 ^ v22) & 1) != 0)
    goto LABEL_29;
  return v14 & 1;
}

uint64_t sub_10057E090(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for CRLLayerPropertyTransitionDescriptor(a2, a1);
  return a2;
}

uint64_t sub_10057E0CC()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v1 = (_QWORD *)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = (void *)*v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease(*v1);
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

void destroy for CRLBasicLayerAnimation.Def(uint64_t a1)
{
  _QWORD *v2;
  void *v3;

  v2 = (_QWORD *)(a1 + 24);
  switch(*(_BYTE *)(a1 + 280))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(a1 + 48))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2);
      if (*(_QWORD *)(a1 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 56));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(a1 + 48))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v2);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v3 = *(void **)(a1 + 32);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v3 = (void *)*v2;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease(*v2);
      break;
    case 0x3A:
      v3 = *(void **)(a1 + 64);
      goto LABEL_4;
    case 0x3F:

      v3 = *(void **)(a1 + 112);
      goto LABEL_4;
    case 0x40:

      v3 = *(void **)(a1 + 80);
LABEL_4:

      break;
    default:
      break;
  }

}

uint64_t initializeWithCopy for CRLBasicLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  _OWORD *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  __int128 v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char v31;
  __int128 v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD *v45;
  _OWORD *v46;
  uint64_t v47;
  __int128 v48;
  void *v49;
  id v50;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = (_OWORD *)(a1 + 24);
  v6 = (_OWORD *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 280);
  v8 = v4;
  switch(v7)
  {
    case 0:
      v9 = *(_QWORD *)(a2 + 48);
      if (v9)
      {
        *(_QWORD *)(a1 + 48) = v9;
        (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v5, v6);
      }
      else
      {
        v44 = v6[1];
        *v5 = *v6;
        v5[1] = v44;
      }
      v45 = (_OWORD *)(a1 + 56);
      v46 = (_OWORD *)(a2 + 56);
      v47 = *(_QWORD *)(a2 + 80);
      if (v47)
      {
        *(_QWORD *)(a1 + 80) = v47;
        (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
      }
      else
      {
        v48 = *(_OWORD *)(a2 + 72);
        *v45 = *v46;
        *(_OWORD *)(a1 + 72) = v48;
      }
      *(_BYTE *)(a1 + 280) = 0;
      break;
    case 1:
      v10 = *(_QWORD *)(a2 + 48);
      if (v10)
      {
        *(_QWORD *)(a1 + 48) = v10;
        (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v5, v6);
      }
      else
      {
        v37 = v6[1];
        *v5 = *v6;
        v5[1] = v37;
      }
      *(_BYTE *)(a1 + 280) = 1;
      break;
    case 18:
      v11 = *(void **)(a2 + 24);
      v12 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = v12;
      v13 = 18;
      goto LABEL_14;
    case 19:
      v14 = *(void **)v6;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
      v15 = 19;
      goto LABEL_27;
    case 20:
      v11 = *(void **)(a2 + 24);
      v12 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = v12;
      v13 = 20;
      goto LABEL_14;
    case 21:
      v14 = *(void **)v6;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
      v15 = 21;
      goto LABEL_27;
    case 28:
      v11 = *(void **)(a2 + 24);
      v12 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = v12;
      v13 = 28;
      goto LABEL_14;
    case 29:
      v14 = *(void **)v6;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
      v15 = 29;
      goto LABEL_27;
    case 30:
      v11 = *(void **)(a2 + 24);
      v12 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = v12;
      v13 = 30;
LABEL_14:
      *(_BYTE *)(a1 + 280) = v13;
      v16 = v11;
      v17 = v12;
      break;
    case 31:
      v14 = *(void **)v6;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
      v15 = 31;
      goto LABEL_27;
    case 32:
      v18 = *(_QWORD *)(a2 + 24);
      v19 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v18;
      *(_QWORD *)(a1 + 32) = v19;
      v20 = 32;
      goto LABEL_23;
    case 33:
      v21 = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
      v22 = 33;
      goto LABEL_25;
    case 34:
      v23 = *(_QWORD *)(a2 + 48);
      if (v23)
      {
        *(_QWORD *)(a1 + 48) = v23;
        (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v5, v6);
      }
      else
      {
        v38 = v6[1];
        *v5 = *v6;
        v5[1] = v38;
      }
      v39 = (_OWORD *)(a1 + 56);
      v40 = (_OWORD *)(a2 + 56);
      v41 = *(_QWORD *)(a2 + 80);
      if (v41)
      {
        *(_QWORD *)(a1 + 80) = v41;
        (**(void (***)(_OWORD *, _OWORD *))(v41 - 8))(v39, v40);
      }
      else
      {
        v43 = *(_OWORD *)(a2 + 72);
        *v39 = *v40;
        *(_OWORD *)(a1 + 72) = v43;
      }
      *(_BYTE *)(a1 + 280) = 34;
      break;
    case 35:
      v24 = *(_QWORD *)(a2 + 48);
      if (v24)
      {
        *(_QWORD *)(a1 + 48) = v24;
        (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v5, v6);
      }
      else
      {
        v42 = v6[1];
        *v5 = *v6;
        v5[1] = v42;
      }
      *(_BYTE *)(a1 + 280) = 35;
      break;
    case 36:
      v18 = *(_QWORD *)(a2 + 24);
      v19 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v18;
      *(_QWORD *)(a1 + 32) = v19;
      v20 = 36;
LABEL_23:
      *(_BYTE *)(a1 + 280) = v20;
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRetain(v19);
      break;
    case 37:
      v21 = *(_QWORD *)v6;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
      v22 = 37;
LABEL_25:
      *(_BYTE *)(a1 + 280) = v22;
      swift_bridgeObjectRetain(v21);
      break;
    case 58:
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v14 = *(void **)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v14;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      v15 = 58;
LABEL_27:
      *(_BYTE *)(a1 + 280) = v15;
      v25 = v14;
      break;
    case 63:
      v26 = v6[1];
      *v5 = *v6;
      v5[1] = v26;
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      v27 = *(void **)(a2 + 88);
      v28 = *(void **)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v27;
      *(_QWORD *)(a1 + 96) = v28;
      v29 = *(void **)(a2 + 104);
      v30 = *(void **)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v29;
      *(_QWORD *)(a1 + 112) = v30;
      v31 = 63;
      goto LABEL_30;
    case 64:
      v32 = v6[1];
      *v5 = *v6;
      v5[1] = v32;
      v27 = *(void **)(a2 + 56);
      v28 = *(void **)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v27;
      *(_QWORD *)(a1 + 64) = v28;
      v29 = *(void **)(a2 + 72);
      v30 = *(void **)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v29;
      *(_QWORD *)(a1 + 80) = v30;
      v31 = 64;
LABEL_30:
      *(_BYTE *)(a1 + 280) = v31;
      v33 = v27;
      v34 = v28;
      v35 = v29;
      v36 = v30;
      break;
    default:
      memcpy(v5, v6, 0x101uLL);
      break;
  }
  v49 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 288) = v49;
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  v50 = v49;
  return a1;
}

uint64_t assignWithCopy for CRLBasicLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  id v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  __int128 v34;
  id v35;
  id v36;
  id v37;
  id v38;
  __int128 v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  __int128 v43;
  char v44;
  __int128 v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  void *v52;
  void *v53;
  id v54;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (a1 != a2)
  {
    v7 = (_OWORD *)(a1 + 24);
    v8 = (_OWORD *)(a2 + 24);
    sub_1004EA730((_QWORD *)(a1 + 24));
    switch(*(_BYTE *)(a2 + 280))
    {
      case 0:
        v9 = *(_QWORD *)(a2 + 48);
        if (v9)
        {
          *(_QWORD *)(a1 + 48) = v9;
          (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v39 = *(_OWORD *)(a2 + 40);
          *v7 = *v8;
          *(_OWORD *)(a1 + 40) = v39;
        }
        v40 = (_OWORD *)(a1 + 56);
        v41 = (_OWORD *)(a2 + 56);
        v42 = *(_QWORD *)(a2 + 80);
        if (v42)
        {
          *(_QWORD *)(a1 + 80) = v42;
          (**(void (***)(_OWORD *, _OWORD *))(v42 - 8))(v40, v41);
        }
        else
        {
          v50 = *(_OWORD *)(a2 + 72);
          *v40 = *v41;
          *(_OWORD *)(a1 + 72) = v50;
        }
        *(_BYTE *)(a1 + 280) = 0;
        break;
      case 1:
        v10 = *(_QWORD *)(a2 + 48);
        if (v10)
        {
          *(_QWORD *)(a1 + 48) = v10;
          (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v43 = *(_OWORD *)(a2 + 40);
          *v7 = *v8;
          *(_OWORD *)(a1 + 40) = v43;
        }
        v44 = 1;
        goto LABEL_46;
      case 0x12:
        v11 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v11;
        v12 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v12;
        v13 = 18;
        goto LABEL_15;
      case 0x13:
        v14 = *(void **)v8;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
        v15 = 19;
        goto LABEL_28;
      case 0x14:
        v11 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v11;
        v12 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v12;
        v13 = 20;
        goto LABEL_15;
      case 0x15:
        v14 = *(void **)v8;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
        v15 = 21;
        goto LABEL_28;
      case 0x1C:
        v11 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v11;
        v12 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v12;
        v13 = 28;
        goto LABEL_15;
      case 0x1D:
        v14 = *(void **)v8;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
        v15 = 29;
        goto LABEL_28;
      case 0x1E:
        v11 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v11;
        v12 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v12;
        v13 = 30;
LABEL_15:
        *(_BYTE *)(a1 + 280) = v13;
        v16 = v11;
        v17 = v12;
        break;
      case 0x1F:
        v14 = *(void **)v8;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
        v15 = 31;
        goto LABEL_28;
      case 0x20:
        v18 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v18;
        v19 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v19;
        v20 = 32;
        goto LABEL_24;
      case 0x21:
        v21 = *(_QWORD *)v8;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
        v22 = 33;
        goto LABEL_26;
      case 0x22:
        v23 = *(_QWORD *)(a2 + 48);
        if (v23)
        {
          *(_QWORD *)(a1 + 48) = v23;
          (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v45 = *(_OWORD *)(a2 + 40);
          *v7 = *v8;
          *(_OWORD *)(a1 + 40) = v45;
        }
        v46 = (_OWORD *)(a1 + 56);
        v47 = (_OWORD *)(a2 + 56);
        v48 = *(_QWORD *)(a2 + 80);
        if (v48)
        {
          *(_QWORD *)(a1 + 80) = v48;
          (**(void (***)(_OWORD *, _OWORD *))(v48 - 8))(v46, v47);
        }
        else
        {
          v51 = *(_OWORD *)(a2 + 72);
          *v46 = *v47;
          *(_OWORD *)(a1 + 72) = v51;
        }
        v44 = 34;
        goto LABEL_46;
      case 0x23:
        v24 = *(_QWORD *)(a2 + 48);
        if (v24)
        {
          *(_QWORD *)(a1 + 48) = v24;
          (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1 + 24, a2 + 24);
        }
        else
        {
          v49 = *(_OWORD *)(a2 + 40);
          *v7 = *v8;
          *(_OWORD *)(a1 + 40) = v49;
        }
        v44 = 35;
LABEL_46:
        *(_BYTE *)(a1 + 280) = v44;
        break;
      case 0x24:
        v18 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v18;
        v19 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v19;
        v20 = 36;
LABEL_24:
        *(_BYTE *)(a1 + 280) = v20;
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRetain(v19);
        break;
      case 0x25:
        v21 = *(_QWORD *)v8;
        *(_QWORD *)(a1 + 24) = *(_QWORD *)v8;
        v22 = 37;
LABEL_26:
        *(_BYTE *)(a1 + 280) = v22;
        swift_bridgeObjectRetain(v21);
        break;
      case 0x3A:
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v25 = *(_OWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = v25;
        v14 = *(void **)(a2 + 64);
        *(_QWORD *)(a1 + 64) = v14;
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        v15 = 58;
LABEL_28:
        *(_BYTE *)(a1 + 280) = v15;
        v26 = v14;
        break;
      case 0x3F:
        v27 = *(_OWORD *)(a2 + 40);
        *v7 = *v8;
        *(_OWORD *)(a1 + 40) = v27;
        v28 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v28;
        v29 = *(void **)(a2 + 88);
        *(_QWORD *)(a1 + 88) = v29;
        v30 = *(void **)(a2 + 96);
        *(_QWORD *)(a1 + 96) = v30;
        v31 = *(void **)(a2 + 104);
        *(_QWORD *)(a1 + 104) = v31;
        v32 = *(void **)(a2 + 112);
        *(_QWORD *)(a1 + 112) = v32;
        v33 = 63;
        goto LABEL_31;
      case 0x40:
        v34 = *(_OWORD *)(a2 + 40);
        *v7 = *v8;
        *(_OWORD *)(a1 + 40) = v34;
        v29 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v29;
        v30 = *(void **)(a2 + 64);
        *(_QWORD *)(a1 + 64) = v30;
        v31 = *(void **)(a2 + 72);
        *(_QWORD *)(a1 + 72) = v31;
        v32 = *(void **)(a2 + 80);
        *(_QWORD *)(a1 + 80) = v32;
        v33 = 64;
LABEL_31:
        *(_BYTE *)(a1 + 280) = v33;
        v35 = v29;
        v36 = v30;
        v37 = v31;
        v38 = v32;
        break;
      default:
        memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
        break;
    }
  }
  v52 = *(void **)(a1 + 288);
  v53 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 288) = v53;
  v54 = v53;

  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
  *(_BYTE *)(a1 + 298) = *(_BYTE *)(a2 + 298);
  *(_BYTE *)(a1 + 299) = *(_BYTE *)(a2 + 299);
  return a1;
}

void *initializeWithTake for CRLBasicLayerAnimation.Def(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x12CuLL);
}

uint64_t assignWithTake for CRLBasicLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  if (a1 != a2)
  {
    sub_1004EA730((_QWORD *)(a1 + 24));
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x101uLL);
  }
  v5 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);

  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_WORD *)(a1 + 297) = *(_WORD *)(a2 + 297);
  *(_BYTE *)(a1 + 299) = *(_BYTE *)(a2 + 299);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBasicLayerAnimation.Def(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 300))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBasicLayerAnimation.Def(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 300) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 300) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBasicLayerAnimation.Def()
{
  return &type metadata for CRLBasicLayerAnimation.Def;
}

unint64_t sub_10057EB88(uint64_t a1)
{
  unint64_t result;

  result = sub_10057EBAC();
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

unint64_t sub_10057EBAC()
{
  unint64_t result;

  result = qword_1013E3908;
  if (!qword_1013E3908)
  {
    result = swift_getWitnessTable(&unk_100EF9D20, &type metadata for CRLBasicLayerAnimation.Def);
    atomic_store(result, (unint64_t *)&qword_1013E3908);
  }
  return result;
}

__int128 *sub_10057EBF0(__int128 *a1, __int128 *a2)
{
  assignWithTake for CRLLayerPropertyTransitionDescriptor(a2, a1);
  return a2;
}

uint64_t sub_10057EC2C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  char v19;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v8 = (char *)&v21 - v7;
  v9 = objc_msgSend(v1, "url", v6);
  if (v9)
  {
    v10 = v9;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v9);

    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 0, 1, v11);
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  }
  sub_10057EE1C((uint64_t)v4, (uint64_t)v8);
  type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11);
  if ((_DWORD)v13 == 1)
  {
    sub_1005534BC((uint64_t)v8);
LABEL_17:
    v19 = 0;
    return v19 & 1;
  }
  v14 = URL.scheme.getter(v13);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  if (!v16)
    goto LABEL_17;
  v17 = v14 == 1886680168 && v16 == 0xE400000000000000;
  if (v17
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 1886680168, 0xE400000000000000, 0) & 1) != 0
    || (v14 == 0x7370747468 ? (v18 = v16 == 0xE500000000000000) : (v18 = 0), v18))
  {
    swift_bridgeObjectRelease();
    v19 = 1;
  }
  else
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, 0x7370747468, 0xE500000000000000, 0);
    swift_bridgeObjectRelease();
  }
  return v19 & 1;
}

uint64_t sub_10057EE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E04D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10057F078(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSString v4;

  v3 = *(_QWORD *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_10057F204()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  Swift::String v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v14;

  v1 = 0x65746F6D6572;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant))
  {
    v1 = 0x6C61636F6CLL;
    v2 = 0xE500000000000000;
  }
  else
  {
    v2 = 0xE600000000000000;
  }
  v14 = v1;
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = 58;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_displayName);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_displayName + 8);
  swift_bridgeObjectRetain(v2);
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v2);
  v7._countAndFlagsBits = 58;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8 = swift_bridgeObjectRelease(v2);
  v9 = UUID.uuidString.getter(v8);
  v11 = v10;
  swift_bridgeObjectRetain(v2);
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v11);
  return v14;
}

uint64_t sub_10057F340(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  void *v4;
  char v5;
  void *v7;
  _BYTE v8[24];
  uint64_t v9;

  ObjectType = swift_getObjectType(v1);
  sub_1004F370C(a1, (uint64_t)v8);
  if (!v9)
  {
    sub_1004CB800((uint64_t)v8, &qword_1013E0230);
    goto LABEL_5;
  }
  if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) == 0)
  {
LABEL_5:
    v5 = 0;
    return v5 & 1;
  }
  v4 = v7;
  v5 = static UUID.== infix(_:_:)(v1 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID);

  return v5 & 1;
}

id sub_10057F5E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorPresence(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10057F6DC()
{
  return type metadata accessor for CRLCollaboratorPresence(0);
}

uint64_t type metadata accessor for CRLCollaboratorPresence(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E3940;
  if (!qword_1013E3940)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCollaboratorPresence);
  return result;
}

uint64_t sub_10057F720(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  char *v12;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      v8 = "\b";
      v9 = &unk_100EF9DA0;
      v10 = &unk_100EF9DA0;
      v11 = &unk_100EF9DB8;
      v12 = (char *)&value witness table for Builtin.Int64 + 64;
      result = swift_updateClassMetadata2(a1, 256, 8, &v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

id sub_10057F7D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  _BYTE *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  Class isa;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  objc_class *v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;

  LODWORD(v45) = a4;
  v8 = sub_1004B804C(&qword_1013F4270);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PersonNameComponents(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_owner], 0);
  swift_unknownObjectWeakAssign(v15, a1);
  v16 = &v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID];
  v17 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v17 - 8);
  v44 = v17;
  v18 = *(void (**)(char *, uint64_t))(v43 + 16);
  v46 = a2;
  v18(v16, a2);
  v19 = &v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_joinTime];
  v20 = type metadata accessor for Date(0);
  v42 = *(_QWORD *)(v20 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v21(v19, a3, v20);
  v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_isLocalParticipant] = v45;
  v45 = a3;
  v21(&v4[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime], a3, v20);
  v22 = v4;
  v23 = sub_10063B4E0();
  v24 = (uint64_t *)&v22[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_displayName];
  *v24 = v23;
  v24[1] = v25;
  sub_10063ABC4((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1004CB800((uint64_t)v10, &qword_1013F4270);
LABEL_8:
    v29 = sub_10063B4E0();
    v31 = v33;
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v26 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
  isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v26, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
  v31 = v30;

  if ((v31 & 0x2000000000000000) != 0)
    v32 = HIBYTE(v31) & 0xF;
  else
    v32 = v29 & 0xFFFFFFFFFFFFLL;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!v32)
  {
    swift_bridgeObjectRelease(v31);
    goto LABEL_8;
  }
LABEL_9:
  v34 = (uint64_t *)&v22[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_shortDisplayName];
  *v34 = v29;
  v34[1] = v31;
  v35 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
  sub_100766864(v35);
  v37 = v36;

  *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex] = v37;
  v38 = (objc_class *)type metadata accessor for CRLCollaboratorPresence(0);
  v47.receiver = v22;
  v47.super_class = v38;
  v39 = objc_msgSendSuper2(&v47, "init");
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v20);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v44);
  return v39;
}

uint64_t sub_10057FAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double *v19;

  v1 = v0;
  v18 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 24) = _swiftEmptyArrayStorage;
  v11 = v1 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_1004B7878((unint64_t *)&qword_1013E3A70, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = sub_1004B804C(&qword_1013FF6B0);
  v16 = sub_1004CBA30((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v5, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v18);
  *(_QWORD *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000027, 0x8000000100FB48E0, v10, v7, v4, 0);
  return v1;
}

void sub_10057FCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char v72[24];
  char v73[112];
  char v74[8];

  v1 = type metadata accessor for CRLBoardIdentifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v58 - v6;
  v8 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(v0 + 16);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v67 = v10;
    if (qword_1013DD870 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD870, sub_100A059E0);
LABEL_3:
  swift_beginAccess(&static OS_os_log.dataSync, v74, 0, 0);
  v17 = (void *)static OS_os_log.dataSync;
  v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v18, v73);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v66 = (_QWORD *)inited;
  v20 = inited + 32;
  swift_beginAccess(v0 + 24, v72, 0, 0);
  v21 = *(_QWORD *)(v0 + 24);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v60 = v20;
    v61 = v0;
    v64 = v1;
    v65 = v5;
    v71 = _swiftEmptyArrayStorage;
    v62 = v17;
    v23 = v17;
    swift_bridgeObjectRetain(v21);
    sub_1006006EC(0, v22, 0);
    v24 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v59 = v21;
    v25 = v21 + v24;
    v63 = v2;
    v68 = *(_QWORD *)(v2 + 72);
    do
    {
      sub_1004E1B3C(v25, (uint64_t)v7);
      v26 = type metadata accessor for CRLBoardIdentifierStorage(0);
      v27 = (uint64_t *)&v7[*(int *)(v26 + 20)];
      v29 = *v27;
      v28 = (void *)v27[1];
      v30 = (void *)0x8000000100FB4970;
      if (*v27)
        v31 = 0;
      else
        v31 = v28 == (void *)0xE000000000000000;
      v32 = 0xD000000000000012;
      if (!v31)
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v28, 0, 0xE000000000000000, 0);
        if ((v26 & 1) == 0)
        {
          swift_bridgeObjectRetain(v28);
          v32 = v29;
          v30 = v28;
        }
      }
      v69 = UUID.uuidString.getter(v26);
      v70 = v33;
      v34._countAndFlagsBits = 15418;
      v34._object = (void *)0xE200000000000000;
      String.append(_:)(v34);
      v35._countAndFlagsBits = v32;
      v35._object = v30;
      String.append(_:)(v35);
      swift_bridgeObjectRelease(v30);
      v36._countAndFlagsBits = 62;
      v36._object = (void *)0xE100000000000000;
      String.append(_:)(v36);
      v37 = v69;
      v38 = v70;
      sub_1004BBB8C((uint64_t)v7);
      v39 = v71;
      if ((swift_isUniquelyReferenced_nonNull_native(v71) & 1) == 0)
      {
        sub_1006006EC(0, v39[2] + 1, 1);
        v39 = v71;
      }
      v41 = v39[2];
      v40 = v39[3];
      if (v41 >= v40 >> 1)
      {
        sub_1006006EC(v40 > 1, v41 + 1, 1);
        v39 = v71;
      }
      v39[2] = v41 + 1;
      v42 = &v39[2 * v41];
      v42[4] = v37;
      v42[5] = v38;
      v25 += v68;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease(v59);
    v5 = v65;
    v1 = v64;
    v2 = v63;
    v17 = v62;
    v0 = v61;
    v20 = v60;
  }
  else
  {
    v43 = v17;
    v39 = _swiftEmptyArrayStorage;
  }
  v44 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v45 = v66;
  v66[7] = v44;
  v45[8] = sub_1004CBA30((unint64_t *)&unk_1013F6610, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
  v45[4] = v39;
  v46 = v0 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard, &v69, 0, 0);
  v47 = v46;
  v48 = (uint64_t)v67;
  sub_1005815E0(v47, (uint64_t)v67);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v48, 1, v1))
  {
    sub_100581628(v48);
    v49 = 0;
    v50 = 0;
  }
  else
  {
    sub_1004E1B3C(v48, (uint64_t)v5);
    sub_100581628(v48);
    v49 = sub_10067AD38();
    v50 = v51;
    sub_1004BBB8C((uint64_t)v5);
  }
  v45[12] = &type metadata for String;
  v45[13] = sub_1004CFC2C();
  v53 = 7104878;
  if (v50)
    v53 = v49;
  v54 = 0xE300000000000000;
  if (v50)
    v54 = v50;
  v45[9] = v53;
  v45[10] = v54;
  v55 = static os_log_type_t.default.getter(v52);
  sub_100A06EBC((uint64_t)v17, &_mh_execute_header, v55, "CRLSyncPriorityProvider current state: openBoards %{public}@, currentFocusedBoard %{public}@", 92, 2, (uint64_t)v45);
  swift_setDeallocating(v45);
  v56 = v45[2];
  v57 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v20, v56, v57);

}

uint64_t sub_100580240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  _BYTE v42[24];

  v3 = sub_1004B804C((uint64_t *)&unk_1013E3A80);
  __chkstk_darwin(v3);
  v40 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v39 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v39 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v39 - v12;
  v14 = type metadata accessor for DispatchPredicate(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v1 + 16);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  v19 = v18;
  v20 = _dispatchPreconditionTest(_:)(v17);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v22 = v1 + 24;
  swift_beginAccess(v1 + 24, v42, 0, 0);
  v23 = *(_QWORD *)(v1 + 24);
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
    goto LABEL_16;
  v25 = v23 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v26 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain(v23);
  v27 = 0;
  while (1)
  {
    v28 = static UUID.== infix(_:_:)(v25);
    sub_1004E1B3C(v25, (uint64_t)v13);
    sub_1004E1B3C(a1, (uint64_t)v11);
    if ((v28 & 1) == 0)
    {
      sub_1004BBB8C((uint64_t)v11);
      sub_1004BBB8C((uint64_t)v13);
      goto LABEL_5;
    }
    v29 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v30 = *(_QWORD *)&v13[v29];
    v31 = *(_QWORD *)&v13[v29 + 8];
    v32 = &v11[v29];
    v33 = *((_QWORD *)v32 + 1);
    if (v30 == *(_QWORD *)v32 && v31 == v33)
      break;
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, *(_QWORD *)v32, v33, 0);
    sub_1004BBB8C((uint64_t)v11);
    sub_1004BBB8C((uint64_t)v13);
    if ((v35 & 1) != 0)
      goto LABEL_15;
LABEL_5:
    ++v27;
    v25 += v26;
    if (v24 == v27)
    {
      swift_bridgeObjectRelease(v23);
      goto LABEL_16;
    }
  }
  sub_1004BBB8C((uint64_t)v11);
  sub_1004BBB8C((uint64_t)v13);
LABEL_15:
  swift_bridgeObjectRelease(v23);
  swift_beginAccess(v22, v41, 33, 0);
  v36 = v39;
  sub_100C5C878(v27, v39);
  sub_1004BBB8C(v36);
  swift_endAccess(v41);
LABEL_16:
  swift_beginAccess(v22, v41, 33, 0);
  v37 = a1;
  v38 = v40;
  sub_1004E1B3C(v37, v40);
  sub_100CFC420(0, 0, v38);
  return swift_endAccess(v41);
}

void sub_100580530(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(void **)(v2 + 16);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  v10 = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    __chkstk_darwin(v10);
    *(&v13 - 2) = a1;
    swift_beginAccess(v2 + 24, v14, 33, 0);
    sub_1009A1904((uint64_t (*)(unint64_t, __n128))sub_100581668, (uint64_t)(&v13 - 4));
    v12 = *(_QWORD *)(*(_QWORD *)(v2 + 24) + 16);
    if (v12 >= v11)
    {
      sub_100CFED48(v11, v12);
      swift_endAccess(v14);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100580660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v17;
  uint64_t v19;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v19 - v8;
  v10 = static UUID.== infix(_:_:)(a1);
  sub_1004E1B3C(a1, (uint64_t)v9);
  sub_1004E1B3C(a2, (uint64_t)v7);
  if ((v10 & 1) != 0)
  {
    v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v12 = *(_QWORD *)&v9[v11];
    v13 = *(_QWORD *)&v9[v11 + 8];
    v14 = &v7[v11];
    v15 = *((_QWORD *)v14 + 1);
    if (v12 == *(_QWORD *)v14 && v13 == v15)
      v17 = 1;
    else
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, *(_QWORD *)v14, v15, 0);
  }
  else
  {
    v17 = 0;
  }
  sub_1004BBB8C((uint64_t)v7);
  sub_1004BBB8C((uint64_t)v9);
  return v17 & 1;
}

uint64_t sub_100580770()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  sub_100581628(v0 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005807B0()
{
  return type metadata accessor for CRLSyncPriorityProvider(0);
}

uint64_t type metadata accessor for CRLSyncPriorityProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E3980;
  if (!qword_1013E3980)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSyncPriorityProvider);
  return result;
}

void sub_1005807F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10058087C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_10058087C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013E3990)
  {
    v2 = type metadata accessor for CRLBoardIdentifier(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013E3990);
  }
}

void sub_1005808D0(uint64_t a1@<X0>, double **a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  Class isa;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Class v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  _BYTE v58[24];
  uint64_t v59;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v8);
  v51 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v52 = (uint64_t)&v46 - v14;
  swift_beginAccess(a1 + 24, v58, 0, 0);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = _swiftEmptyArrayStorage;
  v49 = v10;
  if (v16)
  {
    v47 = a1;
    v48 = a2;
    v59 = (uint64_t)_swiftEmptyArrayStorage;
    v18 = v15;
    swift_bridgeObjectRetain(v15);
    specialized ContiguousArray.reserveCapacity(_:)(v16);
    v19 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v20 = *(unsigned __int8 *)(v10 + 80);
    v46 = v18;
    v21 = v18 + ((v20 + 32) & ~v20);
    v54 = *(_QWORD *)(v10 + 72);
    v55 = v19;
    v53 = CKCurrentUserDefaultName;
    v56 = v5;
    do
    {
      sub_1004E1B3C(v21, (uint64_t)v12);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v12, v4);
      v32 = (uint64_t *)&v12[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
      v23 = *v32;
      v25 = (void *)v32[1];
      if (*v32)
        v33 = 0;
      else
        v33 = v25 == (void *)0xE000000000000000;
      if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, 0, 0xE000000000000000, 0) & 1) != 0)
      {
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
        v23 = v22;
        v25 = v24;
      }
      else
      {
        swift_bridgeObjectRetain(v25);
      }
      v57._countAndFlagsBits = 0x5F6472616F42;
      v57._object = (void *)0xE600000000000000;
      v26._countAndFlagsBits = UUID.uuidString.getter(v22);
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
      v27._countAndFlagsBits = v23;
      v27._object = v25;
      isa = CKRecordZoneID.init(zoneName:ownerName:)(v57, v27).super.isa;
      v5 = v56;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v4);
      v29 = sub_1004BBB8C((uint64_t)v12);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v30 = *(_QWORD *)(v59 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
      v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, isa);
      specialized ContiguousArray._endMutation()(v31);
      v21 += v54;
      --v16;
    }
    while (v16);
    v17 = (double *)v59;
    swift_bridgeObjectRelease();
    a1 = v47;
    a2 = v48;
  }
  v59 = (uint64_t)v17;
  v34 = a1 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard, &v57, 0, 0);
  v35 = v34;
  v36 = v51;
  sub_1005815E0(v35, v51);
  v33 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v36, 1, v50) == 1;
  v37 = v52;
  if (v33)
  {
    sub_100581628(v36);
LABEL_19:
    *a2 = v17;
    return;
  }
  sub_1004DB5FC(v36, v52);
  swift_bridgeObjectRetain(v17);
  v38 = sub_100B4AD90(v37);
  sub_100C1A67C((uint64_t)v38, (uint64_t)v17);
  v40 = v39;
  v42 = v41;
  swift_bridgeObjectRelease();

  if ((v42 & 1) != 0)
  {
    sub_1004BBB8C(v37);
    goto LABEL_19;
  }
  v43 = sub_100C5C9AC(v40);
  if (!((unint64_t)v59 >> 62)
    || (v59 < 0 ? (v44 = v59) : (v44 = v59 & 0xFFFFFFFFFFFFFF8),
        swift_bridgeObjectRetain(v59),
        v45 = _CocoaArrayWrapper.endIndex.getter(v44),
        swift_bridgeObjectRelease(),
        (v45 & 0x8000000000000000) == 0))
  {
    sub_100CFC43C(0, 0, v43);
    sub_1004BBB8C(v37);
    v17 = (double *)v59;
    goto LABEL_19;
  }
  __break(1u);
}

double sub_100580CD0(uint64_t a1)
{
  return sub_100580E4C(a1, (uint64_t)&unk_10126D670, (uint64_t)sub_100581440, (uint64_t)&unk_10126D688);
}

void sub_100580CEC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v13, 0, 0);
  v2 = (void *)static OS_os_log.dataSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, &v12);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v2;
  v6 = sub_10067AD38();
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v10, "Prioritizing sync for %{public}@ because boardWillOpened", 56, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  sub_100580240(a1);
  sub_10057FCE4();
}

double sub_100580E30(uint64_t a1)
{
  return sub_100580E4C(a1, (uint64_t)&unk_10126D620, (uint64_t)sub_1005811EC, (uint64_t)&unk_10126D638);
}

double sub_100580E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v28 = a3;
  v29 = a4;
  v6 = v4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(v6 + 16);
  sub_1004E1B3C(a1, (uint64_t)v17);
  v18 = *(unsigned __int8 *)(v15 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = (v16 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(a2, v20 + 8, v18 | 7);
  sub_1004DB5FC((uint64_t)v17, v21 + v19);
  *(_QWORD *)(v21 + v20) = v6;
  aBlock[4] = v28;
  v35 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = v29;
  v22 = _Block_copy(aBlock);
  v23 = swift_retain(v6);
  static DispatchQoS.unspecified.getter(v23);
  v33 = _swiftEmptyArrayStorage;
  v24 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v26 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v25, v26, v8, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v31);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

void sub_1005810A4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v13, 0, 0);
  v2 = (void *)static OS_os_log.dataSync;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v3, &v12);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v2;
  v6 = sub_10067AD38();
  v8 = v7;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v8;
  v10 = static os_log_type_t.default.getter(v9);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v10, "Deprioritizing sync for %{public}@ because boardWillClosed", 58, 2, inited);
  swift_setDeallocating(inited);
  v11 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v11);

  sub_100580530(a1);
  sub_10057FCE4();
}

uint64_t sub_1005811EC()
{
  return sub_100581500((uint64_t (*)(unint64_t, _QWORD))sub_1005810A4);
}

uint64_t sub_1005811F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100581208(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_100581210(uint64_t a1)
{
  return sub_100580E4C(a1, (uint64_t)&unk_10126D6C0, (uint64_t)sub_1005814F4, (uint64_t)&unk_10126D6D8);
}

void sub_10058122C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];
  _BYTE v24[72];
  _BYTE v25[24];

  v4 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v23[-v8 - 8];
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, v25, 0, 0);
  v10 = (void *)static OS_os_log.dataSync;
  v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v11, v24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v13 = v10;
  v14 = sub_10067AD38();
  v16 = v15;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v14;
  *(_QWORD *)(inited + 40) = v16;
  v18 = static os_log_type_t.default.getter(v17);
  sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v18, "Prioritizing sync for %{public}@ because boardWasFocused", 56, 2, inited);
  swift_setDeallocating(inited);
  v19 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v19);

  sub_1004E1B3C(a1, (uint64_t)v9);
  v20 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 0, 1, v20);
  sub_100581550((uint64_t)v9, (uint64_t)v6);
  v21 = a2 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8Freeform23CRLSyncPriorityProvider_currentFocusedBoard, v23, 33, 0);
  sub_100581598((uint64_t)v6, v21);
  swift_endAccess(v23);
  sub_100580240(a1);
  sub_10057FCE4();
}

uint64_t sub_100581440()
{
  return sub_100581500((uint64_t (*)(unint64_t, _QWORD))sub_100580CEC);
}

uint64_t sub_100581450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + *(int *)(v8 + 20) + 8));
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1005814F4()
{
  return sub_100581500((uint64_t (*)(unint64_t, _QWORD))sub_10058122C);
}

uint64_t sub_100581500(uint64_t (*a1)(unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100581550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E0270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100581598(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E0270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005815E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E0270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100581628(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E0270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100581668(uint64_t a1)
{
  uint64_t v1;

  return sub_100580660(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_100581694(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E3B10);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E3AE8);
  v2[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[9] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[10] = swift_task_alloc(v6);
  v2[11] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v2[12] = v7;
  v2[13] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[14] = v8;
  v2[15] = v9;
  return swift_task_switch(sub_100581764, v8, v9);
}

uint64_t sub_100581764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 48) + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_result;
  swift_beginAccess(v4, v0 + 16, 0, 0);
  sub_1004CB7BC(v4, v3, (uint64_t *)&unk_1013E3B10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v5 = *(_QWORD *)(v0 + 48);
    v6 = sub_1004CB800(*(_QWORD *)(v0 + 56), (uint64_t *)&unk_1013E3B10);
    v7 = static MainActor.shared.getter(v6);
    *(_QWORD *)(v0 + 128) = v7;
    v8 = swift_task_alloc(32);
    *(_QWORD *)(v0 + 136) = v8;
    *(_QWORD *)(v8 + 16) = v5;
    v9 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 144) = v9;
    v10 = sub_1004B804C(&qword_1013E04D0);
    *v9 = v0;
    v9[1] = sub_10058196C;
    return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 40), v7, &protocol witness table for MainActor, 0x52726F4674696177, 0xEF2928746C757365, sub_10058237C, v8, v10);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 64);
    swift_release(*(_QWORD *)(v0 + 104));
    sub_1004C4938(v15, v13, &qword_1013E3AE8);
    sub_1004C4938(v13, v12, &qword_1013E3AE8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v14);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 40);
    if (EnumCaseMultiPayload == 1)
    {
      sub_1004CB800(v17, &qword_1013E3AE8);
      v19 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    }
    else
    {
      sub_1004C4938(v17, *(_QWORD *)(v0 + 40), &qword_1013E04D0);
    }
    v20 = *(_QWORD *)(v0 + 80);
    v21 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10058196C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 136);
  v3 = *(_QWORD *)(*v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005819D4, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_1005819D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100581A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  CKRecordID v15;
  Swift::String v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v4 = sub_1004B804C(&qword_1013E3B08);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v17[-v8];
  v10 = a2 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_continuation;
  swift_beginAccess(v10, v18, 0, 0);
  sub_1004CB7BC(v10, (uint64_t)v9, &qword_1013E3B08);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E3AF8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
  sub_1004CB800((uint64_t)v9, &qword_1013E3B08);
  if (v13 == 1)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v6, a1, v11);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    swift_beginAccess(v10, v17, 33, 0);
    sub_100582338((uint64_t)v6, v10, &qword_1013E3B08);
    return swift_endAccess(v17);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"waitForResult()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLQAImportFileDocumentPickerDelegate.swift", 113, 2, 20, "This method should only be called once.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"This method should only be called once.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"waitForResult()", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLQAImportFileDocumentPickerDelegate.swift", 113, 2u, 20, (uint64_t)"This method should only be called once.", 39, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100581C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v3 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v3);
  v28 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E3AE8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v29 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E3B08);
  __chkstk_darwin(v8);
  v31 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E3AF8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C((uint64_t *)&unk_1013E3B10);
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  sub_1004CB7BC(a1, (uint64_t)v19, &qword_1013E3AE8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  v20 = v1 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_result;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_result, v33, 33, 0);
  sub_100582338((uint64_t)v19, v20, (uint64_t *)&unk_1013E3B10);
  swift_endAccess(v33);
  v21 = v1 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_continuation;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform37CRLQAImportFileDocumentPickerDelegate_continuation, v33, 0, 0);
  sub_1004CB7BC(v21, (uint64_t)v12, &qword_1013E3B08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_1004CB800((uint64_t)v12, &qword_1013E3B08);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v23 = v29;
  sub_1004CB7BC(v30, v29, &qword_1013E3AE8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v5);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    CheckedContinuation.resume(throwing:)(EnumCaseMultiPayload, v13);
  }
  else
  {
    v25 = v23;
    v26 = v28;
    sub_1004C4938(v25, v28, &qword_1013E04D0);
    CheckedContinuation.resume(returning:)(v26, v13);
  }
  v27 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v31, 1, 1, v13);
  swift_beginAccess(v21, v32, 33, 0);
  sub_100582338(v27, v21, &qword_1013E3B08);
  swift_endAccess(v32);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

id sub_100582180()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLQAImportFileDocumentPickerDelegate(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100582200()
{
  return type metadata accessor for CRLQAImportFileDocumentPickerDelegate(0);
}

uint64_t type metadata accessor for CRLQAImportFileDocumentPickerDelegate(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E3AC8;
  if (!qword_1013E3AC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLQAImportFileDocumentPickerDelegate);
  return result;
}

void sub_100582244(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1005822EC(319, &qword_1013E3AE0, &qword_1013E3AE8);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1005822EC(319, &qword_1013E3AF0, (uint64_t *)&unk_1013E3AF8);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void sub_1005822EC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_1004CB6A4(a3);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_100582338(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1004B804C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10058237C(uint64_t a1)
{
  uint64_t v1;

  return sub_100581A20(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100582384(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1004B804C(&qword_1013E3AE8);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (v5)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v4, a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v4, v8, 1, v6);
  swift_storeEnumTagMultiPayload(v4, v2, 0);
  sub_100581C70((uint64_t)v4);
  return sub_1004CB800((uint64_t)v4, &qword_1013E3AE8);
}

uint64_t sub_100582478()
{
  return 9;
}

_QWORD *sub_100582484(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v30[24];
  _BYTE v31[24];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v30[-v9];
  v11 = sub_1004B804C(&qword_1013F5530);
  v12 = __chkstk_darwin(v11);
  v14 = &v30[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v16 = &v30[-v15];
  v17 = *(_QWORD *)(v4 + 632);
  v18 = (uint64_t)v2 + v17;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v17, v30, 0, 0);
    sub_100583AC4(v18, (uint64_t)v14);
    v19 = sub_1004CBA30(&qword_1013E2A20, &qword_1013F5530, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v11, v19);
    sub_100583B50((uint64_t)v14);
    v20 = (uint64_t)v2 + *(_QWORD *)(*v2 + 752);
    swift_beginAccess(v20, v31, 0, 0);
    sub_1004B8460(v20, (uint64_t)v8, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
    v21 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
    CRStruct_1.copy(renamingReferences:)(0, v5, v21);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v17, v31, 0, 0);
    sub_100583AC4(v18, (uint64_t)v16);
    v22 = (uint64_t)v2 + *(_QWORD *)(*v2 + 752);
    swift_beginAccess(v22, v30, 0, 0);
    sub_1004B8460(v22, (uint64_t)v10, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  }
  v23 = v2[4];
  v24 = v2[5];
  v27 = v2 + 2;
  v25 = v2[2];
  v26 = v27[1];
  v28 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_100583B0C((uint64_t)v10, v28 + *(_QWORD *)(*(_QWORD *)v28 + 752));
  *(_QWORD *)(v28 + qword_10140A310) = 0;
  sub_1004C4938((uint64_t)v16, v28 + *(_QWORD *)(*(_QWORD *)v28 + 632), &qword_1013F5530);
  return sub_1005E1000(v26, v23, v24, v25);
}

uint64_t sub_100582720()
{
  uint64_t v0;

  sub_100583B50(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632));

  sub_1004B84A4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E3B48, (uint64_t)&nominal type descriptor for CRLFreehandDrawingShapeItemData);
}

char *sub_10058278C(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v28);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1014148A0);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_1004B804C(&qword_1013E0A88);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = (char *)a2 + v13;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&a1[v8[7]], (char *)a2 + v8[7], v16);
    v18 = v8[8];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = sub_1004B804C(&qword_1013F55A0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v8[9];
    v23 = *(uint64_t *)((char *)a2 + v22);
    *(_QWORD *)&a1[v22] = v23;
    v24 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
    v25 = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)&a1[v24] = v25;
    v26 = *(int *)(a3 + 20);
    v27 = *(uint64_t *)((char *)a2 + v26);
    *(_QWORD *)&a1[v26] = v27;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v27);
  }
  return a1;
}

double sub_100582914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  v4 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v6 = a1 + v5[5];
  v7 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + v5[6];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + v5[7], v9);
  v11 = a1 + v5[8];
  v12 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + v5[9]));
  v13 = type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(v13 + 20)));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  return result;
}

uint64_t sub_100582A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  v21 = v7[9];
  v22 = *(_QWORD *)(a2 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  v23 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = *(int *)(a3 + 20);
  v26 = *(_QWORD *)(a2 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v26);
  return a1;
}

uint64_t sub_100582B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v7[9];
  v22 = *(_QWORD *)(a2 + v21);
  v23 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v25 = *(_QWORD *)(a2 + v24);
  v26 = *(_QWORD *)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  v27 = *(int *)(a3 + 20);
  v28 = *(_QWORD *)(a2 + v27);
  v29 = *(_QWORD *)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  return a1;
}

uint64_t sub_100582CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_QWORD *)(a1 + v7[9]) = *(_QWORD *)(a2 + v7[9]);
  v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(_QWORD *)(a1 + *(int *)(v21 + 20)) = *(_QWORD *)(a2 + *(int *)(v21 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100582E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1004B804C((uint64_t *)&unk_1014148A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1004B804C(&qword_1013E0A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = v7[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  v17 = v7[8];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1004B804C(&qword_1013F55A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  v21 = v7[9];
  v22 = *(_QWORD *)(a1 + v21);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  swift_bridgeObjectRelease(v22);
  v23 = *(int *)(type metadata accessor for CRLShapeItemCRDTData(0) + 20);
  v24 = *(_QWORD *)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  swift_bridgeObjectRelease(v24);
  v25 = *(int *)(a3 + 20);
  v26 = *(_QWORD *)(a1 + v25);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  swift_bridgeObjectRelease(v26);
  return a1;
}

uint64_t sub_100582F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100582FA0);
}

uint64_t sub_100582FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CRLShapeItemCRDTData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10058301C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100583028);
}

uint64_t sub_100583028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLShapeItemCRDTData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013E3F10, (uint64_t)&nominal type descriptor for CRLFreehandDrawingShapeCRDTData);
}

uint64_t sub_1005830B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for CRLShapeItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100583128()
{
  uint64_t result;

  qword_10147EA10 = 97;
  *(_QWORD *)algn_10147EA18 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100EFA190);
  qword_10147EA20 = result;
  return result;
}

uint64_t sub_100583164(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E3F68, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA000);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_1005831A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1005831FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.apply(_:)(a1, a2, v4);
}

uint64_t sub_10058324C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_10058329C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100583304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100583354(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.merge(delta:)(a1, a2, v4);
}

uint64_t sub_1005833A8()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1013DCAB0 != -1)
    swift_once(&qword_1013DCAB0, sub_100583128);
  v0 = qword_10147EA10;
  v1 = qword_10147EA20;
  swift_bridgeObjectRetain(*(_QWORD *)algn_10147EA18);
  swift_retain(v1);
  return v0;
}

uint64_t sub_10058341C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100583474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1005834DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_10058352C()
{
  sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_10058356C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1005835BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.merge(_:)(a1, a2, v4);
}

uint64_t sub_10058360C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E3F48, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA0C8);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100583670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013E3F48, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA0C8);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_1005836E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100583724(uint64_t a1)
{
  uint64_t v1;

  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(a1 + 20)));
}

uint64_t sub_100583730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 20);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + v4));
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100583764())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100583778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _OWORD v5[7];
  _BYTE v6[232];
  _OWORD v7[3];
  uint64_t v8;
  _BYTE v9[232];

  memset(v5, 0, sizeof(v5));
  sub_1004C39E8((uint64_t)v9);
  sub_1004C4938((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013F1530);
  memset(v7, 0, sizeof(v7));
  v8 = 0;
  sub_100C085D8((uint64_t)v5, (uint64_t)v6, (uint64_t)v7, (uint64_t)v7, a2, 0.0);
  result = type metadata accessor for CRLShapeItemCRDTData(0);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(a2 + *(int *)(a1 + 20)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100583824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.init(from:)(a1, a2, v4);
}

uint64_t sub_100583888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.encode(to:)(a1, a2, v4);
}

uint64_t sub_1005838E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E3F90, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA148);
  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100583934()
{
  return sub_1004B7878(&qword_1013E3F48, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA0C8);
}

uint64_t sub_100583960()
{
  return sub_1004B7878(&qword_1013E3F50, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)"987");
}

uint64_t sub_10058398C()
{
  return sub_1004B7878(&qword_1013E3F58, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EF9F68);
}

uint64_t sub_1005839B8()
{
  return sub_1004B7878(&qword_1013E3F60, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EF9FC8);
}

uint64_t sub_1005839E4()
{
  return sub_1004B7878(&qword_1013E3F68, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA000);
}

uint64_t sub_100583A10()
{
  return sub_1004CBA30(&qword_1013E3F70, &qword_1013E3F78, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
}

uint64_t sub_100583A3C()
{
  return sub_1004B7878(&qword_1013E3F80, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA060);
}

uint64_t sub_100583A68(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013E3F48, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA0C8);
  result = sub_1004B7878(&qword_1013E3F88, type metadata accessor for CRLFreehandDrawingShapeCRDTData, (uint64_t)&unk_100EFA0A0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100583AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F5530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100583B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100583B50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F5530);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100583B90()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EFA2A8);
  v2 = swift_getKeyPath(&unk_100EFA2D0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100583C00()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EFA260);
  v2 = swift_getKeyPath(&unk_100EFA288);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100583C70()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EFA218);
  v2 = swift_getKeyPath(&unk_100EFA240);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100583CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__connectionStatus;
  v2 = sub_1004B804C(&qword_1013E4110);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__searchString;
  v4 = sub_1004B804C(&qword_1013E4118);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__searchComplete;
  v6 = sub_1004B804C(&qword_10140B9D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100583D8C()
{
  return type metadata accessor for CRLEmptyFolderViewDataSource(0);
}

uint64_t type metadata accessor for CRLEmptyFolderViewDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1013E3FD8;
  if (!qword_1013E3FD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLEmptyFolderViewDataSource);
  return result;
}

void sub_100583DD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[3];

  sub_100583EA0(319, &qword_1013E3FE8, (uint64_t)&type metadata for CRLiCloudConnectionStatus);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100583EA0(319, (unint64_t *)&unk_1013E3FF0, (uint64_t)&type metadata for String);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100583EA0(319, (unint64_t *)&qword_1013E8B60, (uint64_t)&type metadata for Bool);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 3, v8, a1 + 80);
      }
    }
  }
}

void sub_100583EA0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_100583EE4@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLEmptyFolderViewDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

NSString sub_100583F20()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10147EA28 = (uint64_t)result;
  return result;
}

id sub_100583F54()
{
  if (qword_1013DCAB8 != -1)
    swift_once(&qword_1013DCAB8, sub_100583F20);
  qword_10147EA30 = qword_10147EA28;
  return (id)qword_10147EA28;
}

void *sub_100583FDC()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100583FE8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v14[2];
  _BYTE v15[24];

  v7 = sub_1004B804C(&qword_10140B9D0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__searchComplete;
  v15[0] = 0;
  Published.init(initialValue:)(v15, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__connectionStatus, v15, 33, 0);
  LOBYTE(v14[0]) = a1;
  Published.init(initialValue:)(v14, &type metadata for CRLiCloudConnectionStatus);
  swift_endAccess(v15);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform28CRLEmptyFolderViewDataSource__searchString, v15, 33, 0);
  v14[0] = a2;
  v14[1] = a3;
  Published.init(initialValue:)(v14, &type metadata for String);
  swift_endAccess(v15);
  return v3;
}

void sub_10058413C()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  id v7;
  void *v8;
  uint64_t ObjectType;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  if (objc_msgSend(v0, "hasSinglePreviewableInfo"))
  {
    v1 = objc_msgSend(v0, "boardItems");
    v2 = type metadata accessor for CRLBoardItem(0);
    v3 = sub_10058528C();
    v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

    v5 = sub_100857E90(v4);
    *(_QWORD *)&v6 = swift_bridgeObjectRelease(v4).n128_u64[0];
    if (v5)
    {
      v7 = objc_msgSend(v0, "interactiveCanvasController", v6);
      if (v7
        && (v8 = v7, v14 = objc_msgSend(v7, "repForInfo:", v5),
                     v8,
                     v14))
      {
        ObjectType = swift_getObjectType(v14);
        v10 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLPreviewableCanvasRep);
        v11 = v14;
        if (v10)
          v12 = v14;
        else
          v12 = 0;
        if (v12)
        {
          objc_msgSend(v12, "enterPreviewMode");
          v11 = (void *)v5;
        }
        else
        {
          v14 = (id)v5;
        }

        v13 = v14;
      }
      else
      {
        v13 = (void *)v5;
      }

    }
  }
}

id sub_1005842AC()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;

  v1 = objc_msgSend(v0, "boardItems");
  v2 = type metadata accessor for CRLBoardItem(0);
  v3 = sub_10058528C();
  v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v1, v2, v3);

  if ((v4 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = v4;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    v6 = __CocoaSet.count.getter(v5);
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 16);
  }
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v4).n128_u64[0];
  if (v6 == 1)
    return objc_msgSend(v0, "hasPreviewableInfos", v7);
  else
    return 0;
}

void CRLBoardItemEditor.accessibilityDescriptionEditor(_:didEndEditingWith:)(void *a1, uint64_t a2)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  if (!a2)
  {
    v3 = objc_msgSend(a1, "accessibilityDescriptionToSubmit");
    if (!v3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v5 = v4;
      v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v5);
      v3 = v6;
    }
    v7 = v3;
    objc_msgSend(v2, "setAccessibilityDescription:");

  }
}

void sub_100584558(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  Class isa;
  id v51;
  void *v52;
  uint64_t v53;
  id v54;
  unsigned __int8 *v55;
  _QWORD *v56;

  if (a1)
  {
    v2 = v1;
    v3 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x130);
    v56 = a1;
    v4 = v3();
    v53 = v5;
    v54 = (id)v4;
    v6 = (void *)objc_opt_self(NSBundle);
    v7 = objc_msgSend(v6, "mainBundle");
    v8 = String._bridgeToObjectiveC()();
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14 = objc_msgSend(v6, "mainBundle");
    v15 = String._bridgeToObjectiveC()();
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v21 = objc_msgSend(v6, "mainBundle");
    v22 = String._bridgeToObjectiveC()();
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v21, "localizedStringForKey:value:table:", v22, v23, 0);

    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28 = objc_msgSend(v2, "placeholderString:", v56);
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    v32 = objc_allocWithZone((Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController());
    v33 = v2;
    v55 = sub_100584C44((uint64_t)v54, v53, v11, v13, v18, v20, v25, v27, v29, v31, v33, v32);
    v34 = objc_msgSend(v33, "interactiveCanvasController");
    if (v34
      && (v35 = v34, v36 = objc_msgSend(v34, "layerHost"), v35, v36))
    {
      if ((objc_msgSend(v36, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v37 = objc_msgSend(v36, "asiOSCVC");
        swift_unknownObjectRelease(v36);
        v38 = objc_msgSend(v37, "presentedViewController");
        if (v38)
        {
          v39 = v38;
          objc_msgSend(v38, "dismissViewControllerAnimated:completion:", 1, 0);

        }
        v40 = objc_msgSend(v37, "miniFormatterPresenter");
        if (v40)
        {
          v41 = v40;
          objc_msgSend(v40, "dismissMiniFormatter");
          swift_unknownObjectRelease(v41);
        }
        v42 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v55);
        v43 = objc_msgSend(v42, "sheetPresentationController");
        if (v43)
        {

        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"launchEditAccessibilityDescription(boardItem:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemEditor.swift", 88, 2, 113, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"launchEditAccessibilityDescription(boardItem:)", 46, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLBoardItemEditor.swift", 88, 2u, 113, (uint64_t)"invalid nil value found", 23, 2u);
        }
        v44 = objc_msgSend(v42, "sheetPresentationController");
        if (v44)
        {
          v45 = v44;
          v46 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v47 = swift_allocObject(v46, 48, 7);
          *(_OWORD *)(v47 + 16) = xmmword_100EF5560;
          v48 = (void *)objc_opt_self(UISheetPresentationControllerDetent);
          *(_QWORD *)(v47 + 32) = objc_msgSend(v48, "mediumDetent");
          v49 = objc_msgSend(v48, "largeDetent");
          *(_QWORD *)(v47 + 40) = v49;
          specialized Array._endMutation()(v49);
          sub_100585250();
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v45, "setDetents:", isa, swift_bridgeObjectRelease(v47).n128_f64[0]);

          objc_msgSend(v45, "setPrefersEdgeAttachedInCompactHeight:", 1);
          objc_msgSend(v45, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);

        }
        v51 = objc_msgSend(v42, "presentationController");
        if (v51)
        {
          v52 = v51;
          objc_msgSend(v51, "setDelegate:", v55);

        }
        objc_msgSend(v37, "presentViewController:animated:completion:", v42, 1, 0);

      }
      else
      {

        swift_unknownObjectRelease(v36);
      }
    }
    else
    {

    }
  }
}

unsigned __int8 *sub_100584C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, _BYTE *a12)
{
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  objc_super v30;

  swift_bridgeObjectRelease(a8);
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCancelled] = 0;
  v18 = swift_unknownObjectWeakInit(&a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_delegate]);
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = 0;
  *(_QWORD *)&a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView] = 0;
  v19 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_initialAccessibilityDescription];
  *v19 = a1;
  v19[1] = a2;
  swift_unknownObjectWeakAssign(v18, a11);
  v20 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_titleText];
  *v20 = a3;
  v20[1] = a4;
  v21 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_subtitleText];
  *v21 = a5;
  v21[1] = a6;
  v22 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_placeholderText];
  *v22 = a9;
  v22[1] = a10;
  v30.receiver = a12;
  v30.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  v23 = (unsigned __int8 *)objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
  v24 = objc_msgSend(v23, "traitCollection");
  v25 = objc_msgSend(v24, "horizontalSizeClass");
  if (v25 != (id)1)
    LOBYTE(v25) = objc_msgSend(v24, "verticalSizeClass") == (id)1;
  v26 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact;
  v23[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = v25;
  sub_1009FEDE0((char)v25);
  LODWORD(v26) = v23[v26];

  if ((_DWORD)v26)
    v27 = 1;
  else
    v27 = 2;
  objc_msgSend(v23, "setModalPresentationStyle:", v27);

  v28 = v23;
  objc_msgSend(v28, "setModalInPresentation:", 0);

  return v28;
}

void sub_100584E18(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t ObjectType;
  id v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v34;
  _QWORD v35[5];
  void *v36;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = type metadata accessor for CRLBoardItem(0);
    v6 = sub_10058528C();
    v7 = Set.Iterator.init(_cocoa:)(v35, v4, v5, v6);
    v2 = v35[0];
    v32 = v35[1];
    v8 = v35[2];
    v9 = v35[3];
    v10 = v35[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = v12;
    v9 = 0;
  }
  v30 = v8;
  v31 = (unint64_t)(v8 + 64) >> 6;
  while (v2 < 0)
  {
    v19 = __CocoaSet.Iterator.next()(v7);
    if (!v19)
      goto LABEL_43;
    v20 = v19;
    v34 = v19;
    v21 = type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v15 = v36;
    swift_unknownObjectRelease(v20);
    v18 = v9;
    v16 = v10;
    if (!v15)
      goto LABEL_43;
LABEL_36:
    v25 = objc_msgSend(a2, "interactiveCanvasController", v30);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, "repForInfo:createIfNeeded:", v15, 1);

      if (v27)
      {
        ObjectType = swift_getObjectType(v27);
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for CRLPreviewableCanvasRep))
          v29 = v27;
        else
          v29 = 0;

        if (v29)
        {

LABEL_43:
          sub_1004D284C(v2);
          return;
        }
        v15 = v27;
      }
    }

    v9 = v18;
    v10 = v16;
  }
  if (v10)
  {
    v16 = (v10 - 1) & v10;
    v17 = __clz(__rbit64(v10)) | (v9 << 6);
    v18 = v9;
LABEL_35:
    v15 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v17);
    if (!v15)
      goto LABEL_43;
    goto LABEL_36;
  }
  v22 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v22 >= v31)
      goto LABEL_43;
    v23 = *(_QWORD *)(v32 + 8 * v22);
    v18 = v9 + 1;
    if (!v23)
    {
      v18 = v9 + 2;
      if (v9 + 2 >= v31)
        goto LABEL_43;
      v23 = *(_QWORD *)(v32 + 8 * v18);
      if (!v23)
      {
        v18 = v9 + 3;
        if (v9 + 3 >= v31)
          goto LABEL_43;
        v23 = *(_QWORD *)(v32 + 8 * v18);
        if (!v23)
        {
          v18 = v9 + 4;
          if (v9 + 4 >= v31)
            goto LABEL_43;
          v23 = *(_QWORD *)(v32 + 8 * v18);
          if (!v23)
          {
            v18 = v9 + 5;
            if (v9 + 5 >= v31)
              goto LABEL_43;
            v23 = *(_QWORD *)(v32 + 8 * v18);
            if (!v23)
            {
              v24 = v9 + 6;
              while (v31 != v24)
              {
                v23 = *(_QWORD *)(v32 + 8 * v24++);
                if (v23)
                {
                  v18 = v24 - 1;
                  goto LABEL_34;
                }
              }
              goto LABEL_43;
            }
          }
        }
      }
    }
LABEL_34:
    v16 = (v23 - 1) & v23;
    v17 = __clz(__rbit64(v23)) + (v18 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t sub_10058513C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;

  v1 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD8))();
  v3 = v2;
  if (String.count.getter(v1, v2) > 0)
    return v1;
  swift_bridgeObjectRelease(v3);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  return v9;
}

unint64_t sub_100585250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10140BD30;
  if (!qword_10140BD30)
  {
    v1 = objc_opt_self(UISheetPresentationControllerDetent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10140BD30);
  }
  return result;
}

unint64_t sub_10058528C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4190;
  if (!qword_1013E4190)
  {
    v1 = type metadata accessor for CRLBoardItem(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013E4190);
  }
  return result;
}

id sub_1005853C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  Class isa;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v14;
  Class v15;
  id v16;
  _BYTE v17[24];

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs, v17, 0, 0);
    v6 = *v5;
    type metadata accessor for UUID(0);
    swift_bridgeObjectRetain(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v4, "resolveToSiblingsWithUuids:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v9 = type metadata accessor for CRLBoardItem(0);
    v10 = sub_10058528C();
    v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

    v12 = sub_100585688(v11, a1);
    swift_bridgeObjectRelease(v11);
    return v12;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, "Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2u, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u);
    v14 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    v15 = Set._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend(v14, "selectionPathForInfos:", v15);

    return v16;
  }
}

id sub_100585688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  id v43;
  NSSet v44;
  id v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  NSSet v52;
  id v53;
  id v54;
  int v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  id result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int *v80;
  uint64_t v81;
  int v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char v96;
  objc_class *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t *v102;
  void *v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t, uint64_t);
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void *v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  void *v134;
  id v135;
  id v136;
  id v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  id v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  objc_super v162;
  char v163[32];

  v5 = sub_1004B804C(qword_1013E3050);
  v148 = *(_QWORD *)(v5 - 8);
  v149 = v5;
  __chkstk_darwin(v5);
  v147 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v156 = *(_QWORD *)(v7 - 8);
  v157 = v7;
  __chkstk_darwin(v7);
  v155 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v152);
  v153 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10);
  v154 = (uint64_t)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E30E0);
  v160 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v146 = (char *)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v145 = (char *)&v140 - v16;
  v17 = __chkstk_darwin(v15);
  v150 = (char *)&v140 - v18;
  v19 = __chkstk_darwin(v17);
  v151 = (char *)&v140 - v20;
  __chkstk_darwin(v19);
  v158 = (char *)&v140 - v21;
  v22 = sub_1004B804C(&qword_1013E41D8);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v140 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23);
  v159 = (uint64_t)&v140 - v27;
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v140 - v29;
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v140 - v32;
  v34 = __chkstk_darwin(v31);
  v36 = (char *)&v140 - v35;
  __chkstk_darwin(v34);
  v38 = (char *)&v140 - v37;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_6;
LABEL_9:
    v43 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    v44.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v45 = objc_msgSend(v43, "selectionPathForInfos:", v44.super.isa);
LABEL_42:
    v54 = v45;

    return v54;
  }
  if (a1 < 0)
    v39 = a1;
  else
    v39 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!__CocoaSet.count.getter(v39))
    goto LABEL_9;
LABEL_6:
  v143 = v30;
  v161 = v2;
  v144 = v12;
  v40 = a2 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_userInfo;
  swift_beginAccess(v40, v163, 0, 0);
  sub_10058650C(v40, (uint64_t)v38);
  v41 = type metadata accessor for CRLPersistableSelectionPath.UserInfo(0);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48);
  if (v42(v38, 1, v41) == 1)
  {
    sub_100586554((uint64_t)v38);
LABEL_16:
    v49 = *(id *)(v161 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    sub_100DC0590(a1);
    v51 = v50;
    v52.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v53 = objc_msgSend(v49, "selectionPathForInfos:", v52.super.isa, swift_bridgeObjectRelease(v51).n128_f64[0]);
    goto LABEL_17;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v38, v41);
  sub_1004B84A4((uint64_t)v38, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
  if (EnumCaseMultiPayload != 2)
    goto LABEL_16;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v47 = a1;
    else
      v47 = a1 & 0xFFFFFFFFFFFFFF8;
    v48 = __CocoaSet.count.getter(v47);
  }
  else
  {
    v48 = *(_QWORD *)(a1 + 16);
  }
  sub_100588D60(v48, 1, &_mh_execute_header, (uint64_t)"selectionPathFrom(boardItems:persistableSelectionPath:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2u, 81);
  swift_bridgeObjectRetain(a1);
  v52.super.isa = (Class)sub_100857E90(v74);
  swift_bridgeObjectRelease(a1);
  if (!v52.super.isa)
    goto LABEL_41;
  v75 = type metadata accessor for CRLGroupItem(0);
  v76 = swift_dynamicCastClass(v52.super.isa, v75);
  if (!v76)
  {

LABEL_41:
    sub_100757E04(&_mh_execute_header, (uint64_t)"selectionPathFrom(boardItems:persistableSelectionPath:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 84, "The item in a GroupSelection should be a CRLGroupItem", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(boardItems:persistableSelectionPath:)", 55, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2u, 84, (uint64_t)"The item in a GroupSelection should be a CRLGroupItem", 53, 2u);
    v43 = *(id *)(v161 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    v44.super.isa = Set._bridgeToObjectiveC()().super.isa;
    v45 = objc_msgSend(v43, "selectionPathForInfos:", v44.super.isa);
    goto LABEL_42;
  }
  v77 = v76;
  v49 = *(id *)(v161 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
  v53 = objc_msgSend(v49, "selectionPathForNothingSelectedInsideGroup:", v77);
LABEL_17:
  v54 = v53;

  sub_10058650C(v40, (uint64_t)v36);
  if (v42(v36, 1, v41) == 1)
    goto LABEL_27;
  sub_10058650C((uint64_t)v36, (uint64_t)v33);
  v55 = swift_getEnumCaseMultiPayload(v33, v41);
  if (v55 != 1)
  {
    if (!v55)
    {
      v56 = *(void (**)(char *, uint64_t))(v160 + 8);
      v56(v33, v144);
      goto LABEL_22;
    }
    sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
LABEL_27:
    sub_100586554((uint64_t)v36);
    goto LABEL_28;
  }
  v57 = sub_1004B804C(&qword_1013E41E0);
  v56 = *(void (**)(char *, uint64_t))(v160 + 8);
  v58 = v144;
  v56(&v33[*(int *)(v57 + 48)], v144);
  v56(v33, v58);
LABEL_22:
  sub_100586554((uint64_t)v36);
  swift_bridgeObjectRetain(a1);
  v60 = (void *)sub_100857E90(v59);
  swift_bridgeObjectRelease(a1);
  if (!v60)
  {
LABEL_28:
    sub_10058650C(v40, (uint64_t)v25);
    if (v42(v25, 1, v41) != 1)
    {
      v66 = swift_getEnumCaseMultiPayload(v25, v41);
      sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
      if (v66 == 3)
      {
        swift_bridgeObjectRetain(a1);
        v68 = (void *)sub_100857E90(v67);
        swift_bridgeObjectRelease(a1);
        if (v68)
        {
          v69 = type metadata accessor for CRLShapeItem(0);
          v70 = swift_dynamicCastClass(v68, v69);

          if (v70)
          {
            v71 = objc_msgSend(objc_allocWithZone((Class)CRLPathSelection), "init");
            v72 = objc_msgSend(v54, "selectionPathWithAppendedSelection:", v71);

            return v72;
          }
        }
      }
      return v54;
    }
    v65 = (uint64_t)v25;
    goto LABEL_30;
  }
  v61 = type metadata accessor for CRLWPShapeItem(0);
  v62 = swift_dynamicCastClass(v60, v61);
  if (!v62)
  {

    goto LABEL_28;
  }
  v63 = v62;
  v64 = (uint64_t)v143;
  sub_10058650C(v40, (uint64_t)v143);
  if (v42((char *)v64, 1, v41) != 1)
  {
    v78 = v159;
    sub_10058650C(v64, v159);
    v79 = swift_getEnumCaseMultiPayload(v78, v41);
    if (v79 == 1)
    {
      v141 = v60;
      v142 = v54;
      v109 = v78 + *(int *)(sub_1004B804C(&qword_1013E41E0) + 48);
      v110 = v160;
      v111 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 32);
      v112 = v151;
      v113 = v63;
      v114 = v144;
      v111(v151, v78, v144);
      v115 = v150;
      result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v150, v109, v114);
      v159 = v113;
      v116 = *(void **)(v113 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (!v116)
      {
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v158 = (char *)OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
      v117 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v118 = v145;
      v117(v145, v112, v114);
      v119 = v146;
      v117(v146, v115, v114);
      v120 = sub_1005730A4((unint64_t *)&qword_1013E30E8, (uint64_t)&protocol conformance descriptor for CRAttributedString<A>.Cursor);
      v121 = sub_1005730A4(&qword_1013E30F0, (uint64_t)&protocol conformance descriptor for CRAttributedString<A>.Cursor);
      v122 = v116;
      v123 = v147;
      result = (id)CursorRange.init(lowerBound:upperBound:)(v118, v119, v114, v120, v121);
      v124 = *(_QWORD *)&v122[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
      if (!v124)
      {
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
      v125 = (uint64_t)v153;
      (*(void (**)(id))(*(_QWORD *)v124 + 760))(result);
      v126 = v154;
      sub_1004D29BC(v125 + *(int *)(v152 + 20), v154);
      sub_1004B84A4(v125, type metadata accessor for CRLWPShapeItemCRDTData);
      v127 = v155;
      v128 = v156;
      v129 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v155, v126, v157);
      sub_1004B84A4(v126, type metadata accessor for CRLWPStorageCRDTData);
      v130 = CRAttributedString.range(of:)(v123, v129);
      v132 = v131;
      LOBYTE(v125) = v133;
      (*(void (**)(char *, uint64_t))(v128 + 8))(v127, v129);

      result = (id)(*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v123, v149);
      if ((v125 & 1) != 0)
      {

        v56(v150, v114);
        v56(v151, v114);
        goto LABEL_63;
      }
      if (!__OFSUB__(v132, v130))
      {
        v134 = *(void **)&v158[v159];
        if (v134)
        {
          v135 = *(id *)(v161 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
          v136 = v134;
          v137 = objc_msgSend(v135, "selectionPathForRange:onStorage:", v130, v132 - v130, v136);

          v56(v150, v114);
          v138 = v151;
          v139 = (uint64_t)v143;
          goto LABEL_67;
        }
        goto LABEL_74;
      }
      __break(1u);
    }
    else
    {
      if (v79)
      {

        sub_1004B84A4(v78, type metadata accessor for CRLPersistableSelectionPath.UserInfo);
        goto LABEL_60;
      }
      v80 = (int *)sub_1004B804C(&qword_1013E41E8);
      v81 = *(_QWORD *)(v78 + v80[12]);
      v82 = *(unsigned __int8 *)(v78 + v80[16]);
      v83 = *(char **)(v78 + v80[20]);
      result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v160 + 32))(v158, v78, v144);
      v84 = v63;
      v85 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
      v159 = v84;
      v86 = *(char **)(v84 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v86)
      {
        v151 = v83;
        LODWORD(v160) = v82;
        v141 = v60;
        v142 = v54;
        v87 = *(_QWORD *)&v86[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
        if (v87)
        {
          v88 = (uint64_t)v153;
          (*(void (**)(id))(*(_QWORD *)v87 + 760))(result);
          v89 = v154;
          sub_1004D29BC(v88 + *(int *)(v152 + 20), v154);
          v90 = v86;
          sub_1004B84A4(v88, type metadata accessor for CRLWPShapeItemCRDTData);
          v92 = v155;
          v91 = v156;
          v93 = v157;
          (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v155, v89, v157);
          sub_1004B84A4(v89, type metadata accessor for CRLWPStorageCRDTData);
          v94 = v158;
          v95 = CRAttributedString.index(of:)(v158, v93);
          LOBYTE(v89) = v96;
          (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);

          if ((v89 & 1) == 0)
          {
            v97 = (objc_class *)type metadata accessor for CRLTextRange();
            v98 = (char *)objc_allocWithZone(v97);
            v99 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
            *(_QWORD *)&v98[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
            v100 = OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge;
            *(_QWORD *)&v98[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
            v101 = v98;
            NSNotFound.getter(v101);
            v102 = (uint64_t *)&v101[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
            *v102 = v95;
            v102[1] = v95;
            *(_QWORD *)&v98[v99] = v81;
            *(_QWORD *)&v98[v100] = v151;

            v162.receiver = v101;
            v162.super_class = v97;
            result = objc_msgSendSuper2(&v162, "init");
            v103 = result;
            v104 = *(void **)(v159 + v85);
            if (!(_DWORD)v160)
            {
              if (v104)
              {
                v108 = objc_retain(*(id *)(v161
                                         + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator));
                v105 = v104;
                v107 = objc_msgSend(v108, "selectionPathForTextRange:onStorage:", v103, v105);
                goto LABEL_66;
              }
LABEL_76:
              __break(1u);
              return result;
            }
            if (v104)
            {
              v105 = objc_retain(*(id *)(v161
                                       + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator));
              v106 = v104;
              v107 = objc_msgSend(v105, "visualSelectionPathForTextRange:onStorage:", v103, v106);
              v108 = v103;
              v103 = v106;
LABEL_66:
              v114 = v144;
              v139 = (uint64_t)v143;
              v137 = v107;

              v138 = v158;
LABEL_67:
              v56(v138, v114);
              sub_100586554(v139);
              v54 = v142;
              if (v137)
              {

                return v137;
              }
              return v54;
            }
LABEL_75:
            __break(1u);
            goto LABEL_76;
          }
          v56(v94, v144);

LABEL_63:
          sub_100586554((uint64_t)v143);
          return v142;
        }
        goto LABEL_71;
      }
    }
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }

LABEL_60:
  v65 = (uint64_t)v143;
LABEL_30:
  sub_100586554(v65);
  return v54;
}

id sub_100586484()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionPathValidator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSelectionPathValidator()
{
  return objc_opt_self(_TtC8Freeform25CRLSelectionPathValidator);
}

uint64_t sub_10058650C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E41D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100586554(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E41D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100586594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  Class isa;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  Class v16;
  id v17;
  uint64_t v18;
  Class v19;
  Class v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  Class v25;
  uint64_t v27;
  _BYTE v28[24];

  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board);
  if (Strong)
  {
    v7 = (void *)Strong;
    v27 = a1;
    v8 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs, v28, 0, 0);
    v9 = *v8;
    type metadata accessor for UUID(0);
    swift_bridgeObjectRetain(v9);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v11 = objc_msgSend(v7, "parentMapOfItemsFrom:", isa);

    v12 = type metadata accessor for CRLBoardItem(0);
    v13 = sub_1004B804C(&qword_1013E41F0);
    v14 = sub_10058528C();
    v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v11, v12, v13, v14);

    v16 = Array._bridgeToObjectiveC()().super.isa;
    v17 = objc_msgSend(v7, "resolveToSiblingsWithUuids:", v16, swift_bridgeObjectRelease(v9).n128_f64[0]);

    v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v17, v12, v14);
    v19 = Dictionary._bridgeToObjectiveC()().super.isa;
    v20 = Set._bridgeToObjectiveC()().super.isa;
    v21 = (id)(*(uint64_t (**)(uint64_t, Class, Class))(a3 + 16))(a3, v19, v20);

    if (v21)
    {
      v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v21, v12, v14);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v15);

      v23 = sub_100585688(v22, v27);
      swift_bridgeObjectRelease(v22);
    }
    else
    {

      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v15);
      return 0;
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:selectableBoardItemsFromParentMapAndSiblings:)", 89, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 56, "Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:selectableBoardItemsFromParentMapAndSiblings:)", 89, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2u, 56, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u);
    v24 = *(id *)(a2 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
    v25 = Set._bridgeToObjectiveC()().super.isa;
    v23 = objc_msgSend(v24, "selectionPathForInfos:", v25);

  }
  return v23;
}

id sub_10058693C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStickyNoteLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPStickyNoteLayout()
{
  return objc_opt_self(_TtC8Freeform21CRLWPStickyNoteLayout);
}

uint64_t destroy for CRLBoardViewState(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = result;
  v2 = *(_QWORD *)(result + 48);
  if (v2 >> 60 != 15)
    result = sub_1004BBBC8(*(_QWORD *)(result + 40), v2);
  v3 = *(_QWORD *)(v1 + 64);
  if (v3 >> 60 != 15)
    return sub_1004BBBC8(*(_QWORD *)(v1 + 56), v3);
  return result;
}

uint64_t initializeWithCopy for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = (uint64_t *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v4;
  }
  else
  {
    v6 = *v4;
    sub_1004BE310(*v4, *(_QWORD *)(a2 + 48));
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v5;
  }
  v7 = (uint64_t *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v7;
  }
  else
  {
    v9 = *v7;
    sub_1004BE310(*v7, *(_QWORD *)(a2 + 64));
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v8;
  }
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = (_OWORD *)(a1 + 40);
  v6 = (uint64_t *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_1004BE310(*v6, *(_QWORD *)(a2 + 48));
      *(_QWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 48) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_100586C00(a1 + 40);
LABEL_6:
    *v5 = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v9 = *v6;
  sub_1004BE310(*v6, *(_QWORD *)(a2 + 48));
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v7;
  sub_1004BBBC8(v10, v11);
LABEL_8:
  v12 = (uint64_t *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      v15 = *v12;
      sub_1004BE310(*v12, *(_QWORD *)(a2 + 64));
      v16 = *(_QWORD *)(a1 + 56);
      v17 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v13;
      sub_1004BBBC8(v16, v17);
      goto LABEL_15;
    }
    sub_100586C00(a1 + 56);
    goto LABEL_13;
  }
  if (v13 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v12;
    goto LABEL_15;
  }
  v14 = *v12;
  sub_1004BE310(*v12, *(_QWORD *)(a2 + 64));
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v13;
LABEL_15:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t sub_100586C00(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for Data - 1) + 8))();
  return a1;
}

__n128 initializeWithTake for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CRLBoardViewState(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 48);
  if (v7 >> 60 == 15)
  {
    sub_100586C00(a1 + 40);
LABEL_4:
    *v4 = *v5;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)v5;
  *(_QWORD *)(a1 + 48) = v7;
  sub_1004BBBC8(v8, v6);
LABEL_6:
  v9 = (_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  if (v10 >> 60 != 15)
  {
    v11 = *(_QWORD *)(a2 + 64);
    if (v11 >> 60 != 15)
    {
      v12 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = *v9;
      *(_QWORD *)(a1 + 64) = v11;
      sub_1004BBBC8(v12, v10);
      goto LABEL_11;
    }
    sub_100586C00(a1 + 56);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v9;
LABEL_11:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardViewState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 72);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardViewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 72) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardViewState()
{
  return &type metadata for CRLBoardViewState;
}

uint64_t sub_100586E00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100586E38 + 4 * byte_100EFA330[a1]))(0x6C61635377656976, 0xE900000000000065);
}

uint64_t sub_100586E38()
{
  return 0x4F746E65746E6F63;
}

unint64_t sub_100586E5C()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_100586E94()
{
  return 0xD000000000000019;
}

uint64_t sub_100586EB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100586EE8 + 4 * byte_100EFA335[a1]))(0x6C61635377656976, 0xE900000000000065);
}

uint64_t sub_100586EE8()
{
  return 0x4F746E65746E6F63;
}

unint64_t sub_100586F0C()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_100586F44()
{
  return 0xD000000000000019;
}

void sub_100586F60(char *a1)
{
  sub_10083C9A0(*a1);
}

void sub_100586F6C()
{
  char *v0;

  sub_10074BD8C(*v0);
}

void sub_100586F74(uint64_t a1)
{
  char *v1;

  sub_10083D280(a1, *v1);
}

void sub_100586F7C(uint64_t a1)
{
  char *v1;

  sub_10083D844(a1, *v1);
}

unint64_t sub_100586F84@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1005876BC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100586FB0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100586E00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100586FD8()
{
  unsigned __int8 *v0;

  return sub_100586EB0(*v0);
}

unint64_t sub_100586FE0@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1005876BC(a1);
  *a2 = result;
  return result;
}

void sub_100587004(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100587010(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100587A38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100587038(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100587A38();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100587060(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  char v26;
  _BYTE v27[16];

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013E4240);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100587A38();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardViewState.CodingKeys, &type metadata for CRLBoardViewState.CodingKeys, v11, v9, v10);
  *(_QWORD *)&v25 = *(_QWORD *)v3;
  v26 = 0;
  v12 = sub_100587B04();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v26, v5, &type metadata for CGFloat, v12);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v25 = *(_OWORD *)(v3 + 8);
  v26 = 1;
  type metadata accessor for CGPoint(0);
  v14 = v13;
  v15 = sub_100587B48(&qword_1013E4248, (uint64_t)&protocol conformance descriptor for CGPoint);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v26, v5, v14, v15);
  sub_100587B88(v3 + 24, (uint64_t)v27);
  sub_100587B88((uint64_t)v27, (uint64_t)&v25);
  v26 = 2;
  v16 = sub_1004B804C(&qword_1013E4250);
  v17 = sub_100587BD0();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v26, v5, v16, v17);
  v19 = *(_QWORD *)(v3 + 48);
  if (v19 >> 60 != 15)
  {
    v20 = *(_QWORD *)(v3 + 40);
    *(_QWORD *)&v25 = v20;
    *((_QWORD *)&v25 + 1) = v19;
    v26 = 3;
    sub_1004BE310(v20, v19);
    v21 = sub_100587C2C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v26, v5, &type metadata for Data, v21);
    sub_1004BE2FC(v20, v19);
  }
  v22 = *(_QWORD *)(v3 + 64);
  if (v22 >> 60 == 15)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v23 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)&v25 = v23;
  *((_QWORD *)&v25 + 1) = v22;
  v26 = 4;
  sub_1004BE310(v23, v22);
  v24 = sub_100587C2C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v25, &v26, v5, &type metadata for Data, v24);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1004BE2FC(v23, v22);
}

