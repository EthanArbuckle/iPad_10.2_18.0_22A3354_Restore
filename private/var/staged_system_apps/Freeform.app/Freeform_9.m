void sub_10082DD78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = type metadata accessor for CodingUserInfoKey(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4E88);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    *v1 = v8;
    return;
  }
  v24 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_1004CB6E8(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    sub_10050CB14(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    swift_release(v6);
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10082DFB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = type metadata accessor for URL(0);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UUID(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4E10);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    swift_release(v3);
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return;
  }
  v6 = v4;
  v7 = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    swift_release(v42);
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_10082E294()
{
  sub_10082E7D4(type metadata accessor for CRLBoardPreviewImageCache.Item, &qword_1013F4E18);
}

void sub_10082E2A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  char v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_1004B804C(&qword_1013F4F68);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v17 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v16;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v17;
    v18 = v16;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10082E448()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1004B804C(&qword_1013F4EC8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 2 * v15;
    v17 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_WORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    swift_retain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10082E5EC()
{
  sub_1008344D4(&qword_1013F4EC0);
}

void sub_10082E5F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  id v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1004B804C(&qword_1013F51C8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = 8 * v15;
    v19 = *(void **)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    v22 = *(_OWORD *)(v17 + 24);
    *(_OWORD *)v21 = *(_OWORD *)v17;
    *(_QWORD *)(v21 + 16) = v20;
    *(_OWORD *)(v21 + 24) = v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    v23 = (id)v22;
    v24 = v19;
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10082E7C0()
{
  sub_10082E7D4(type metadata accessor for CRLBoardIdentifier, &qword_1013F51B8);
}

void sub_10082E7D4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - v7;
  sub_1004B804C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v29 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v31 + 72) * v21;
    sub_1004B8460(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = 8 * v21;
    v24 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    sub_1004B84E0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v24;
    swift_bridgeObjectRetain(v24);
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10082EA04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F51C0);
  v24 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v24 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    swift_bridgeObjectRetain(v19);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10082EC34()
{
  sub_10082EDFC(type metadata accessor for CRLBoardIdentifier, &qword_1013F4E60);
}

void sub_10082EC48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1004B804C(&qword_1013F5070);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    sub_1004BE310(v16, *((unint64_t *)&v16 + 1));
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10082EDF0()
{
  sub_1008344D4(&qword_1013F5068);
}

void sub_10082EDFC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - v7;
  sub_1004B804C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v29 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v31 + 72) * v21;
    sub_1004B8460(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = 8 * v21;
    v24 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    sub_1004B84E0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v24;
    swift_retain(v24);
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10082F02C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;

  v1 = type metadata accessor for CRLBoardIdentifier(0);
  v39 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4E00);
  v35 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v41 = v4;
  if (!v5)
  {
    swift_release(v3);
    v33 = v41;
    v32 = v35;
LABEL_28:
    *v32 = v33;
    return;
  }
  v6 = v4;
  v7 = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)v7 >= v3 + 64 + 8 * v8)
  {
    memmove(v7, (const void *)(v3 + 64), 8 * v8);
    v6 = v41;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v40 = v3;
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v36 = v3 + 64;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v14 = (uint64_t)v38;
  v15 = v41;
  while (1)
  {
    if (v13)
    {
      v42 = (v13 - 1) & v13;
      v43 = v10;
      v16 = __clz(__rbit64(v13)) | (v10 << 6);
      v17 = v40;
      goto LABEL_12;
    }
    v28 = v10 + 1;
    v17 = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v37)
      goto LABEL_26;
    v29 = *(_QWORD *)(v36 + 8 * v28);
    v30 = v10 + 1;
    if (!v29)
    {
      v30 = v10 + 2;
      if (v10 + 2 >= v37)
        goto LABEL_26;
      v29 = *(_QWORD *)(v36 + 8 * v30);
      if (!v29)
        break;
    }
LABEL_25:
    v42 = (v29 - 1) & v29;
    v43 = v30;
    v16 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v39 + 72) * v16;
    sub_1004B8460(*(_QWORD *)(v17 + 48) + v18, v14, type metadata accessor for CRLBoardIdentifier);
    v19 = 40 * v16;
    v20 = *(_QWORD *)(v17 + 56) + 40 * v16;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v24 = *(_QWORD *)(v20 + 16);
    v23 = *(void **)(v20 + 24);
    v25 = *(_BYTE *)(v20 + 32);
    sub_1004B84E0(v14, *(_QWORD *)(v15 + 48) + v18, type metadata accessor for CRLBoardIdentifier);
    v26 = *(_QWORD *)(v15 + 56) + v19;
    *(_QWORD *)v26 = v21;
    *(_QWORD *)(v26 + 8) = v22;
    *(_QWORD *)(v26 + 16) = v24;
    *(_QWORD *)(v26 + 24) = v23;
    *(_BYTE *)(v26 + 32) = v25;
    v27 = v23;
    swift_retain(v21);
    swift_retain(v22);
    swift_retain(v24);
    v13 = v42;
    v10 = v43;
  }
  v31 = v10 + 3;
  if (v10 + 3 >= v37)
  {
LABEL_26:
    swift_release(v40);
    v32 = v35;
    v33 = v41;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v36 + 8 * v31);
  if (v29)
  {
    v30 = v10 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v37)
      goto LABEL_26;
    v29 = *(_QWORD *)(v36 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10082F2D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4E58);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v26 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v29 + 72) * v16;
    sub_1004B8460(*(_QWORD *)(v5 + 48) + v17, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    v18 = 16 * v16;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v16);
    v21 = *v19;
    v20 = v19[1];
    sub_1004B84E0((uint64_t)v4, *(_QWORD *)(v7 + 48) + v17, type metadata accessor for CRLBoardIdentifier);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    swift_bridgeObjectRetain(v20);
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    swift_release(v5);
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10082F518()
{
  sub_10082F7E0(type metadata accessor for CRLBoardIdentifier, &qword_1013F4E48);
}

void sub_10082F52C()
{
  sub_10082F564(type metadata accessor for CRLBoardViewModelMetadata, type metadata accessor for CRLBoardIdentifier, &qword_1013F4E30);
}

void sub_10082F548()
{
  sub_10082F564(type metadata accessor for CRLBoardEntity, type metadata accessor for CRLBoardIdentifier, &qword_1013F4E20);
}

void sub_10082F564(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = a1(0);
  v34 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - v8;
  v10 = a2(0);
  v33 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - v11;
  sub_1004B804C(a3);
  v30 = v3;
  v13 = *v3;
  v14 = static _DictionaryStorage.copy(original:)(*v3);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_23:
    swift_release(v13);
    *v30 = v15;
    return;
  }
  v16 = (void *)(v14 + 64);
  v17 = (unint64_t)((1 << *(_BYTE *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)v16 >= v13 + 64 + 8 * v17)
    memmove(v16, (const void *)(v13 + 64), 8 * v17);
  v18 = 0;
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v13 + 16);
  v19 = 1 << *(_BYTE *)(v13 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & *(_QWORD *)(v13 + 64);
  v31 = v13 + 64;
  v32 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v32)
      goto LABEL_23;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v18;
    if (!v27)
    {
      v18 = v26 + 1;
      if (v26 + 1 >= v32)
        goto LABEL_23;
      v27 = *(_QWORD *)(v31 + 8 * v18);
      if (!v27)
        break;
    }
LABEL_22:
    v21 = (v27 - 1) & v27;
    v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    v24 = *(_QWORD *)(v33 + 72) * v23;
    sub_1004B8460(*(_QWORD *)(v13 + 48) + v24, (uint64_t)v12, a2);
    v25 = *(_QWORD *)(v34 + 72) * v23;
    sub_1004B8460(*(_QWORD *)(v13 + 56) + v25, (uint64_t)v9, a1);
    sub_1004B84E0((uint64_t)v12, *(_QWORD *)(v15 + 48) + v24, a2);
    sub_1004B84E0((uint64_t)v9, *(_QWORD *)(v15 + 56) + v25, a1);
  }
  v28 = v26 + 2;
  if (v28 >= v32)
    goto LABEL_23;
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v18 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v18 >= v32)
      goto LABEL_23;
    v27 = *(_QWORD *)(v31 + 8 * v18);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_10082F7E0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = v2;
  v6 = a1(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  sub_1004B804C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v30 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v31 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v26 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v15;
    if (!v27)
    {
      v15 = v26 + 1;
      if (v26 + 1 >= v19)
        goto LABEL_26;
      v27 = *(_QWORD *)(v31 + 8 * v15);
      if (!v27)
        break;
    }
LABEL_25:
    v18 = (v27 - 1) & v27;
    v21 = __clz(__rbit64(v27)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v32 + 72) * v21;
    sub_1004B8460(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = 8 * v21;
    v24 = *(void **)(*(_QWORD *)(v9 + 56) + v23);
    sub_1004B84E0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v24;
    v25 = v24;
  }
  v28 = v26 + 2;
  if (v28 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v30;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v15 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v15);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10082FA0C()
{
  sub_10082F7E0(type metadata accessor for CRLBoardIdentifier, &qword_1013F4EE0);
}

void sub_10082FA20()
{
  sub_1008344D4(&qword_1013F5198);
}

void sub_10082FA2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_1004B804C(&qword_1013F4EF8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v18);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10082FBD8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1004B804C(&qword_1013F5138);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(void **)v19;
    v21 = *(_BYTE *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_BYTE *)(v22 + 8) = v21;
    v23 = v17;
    sub_10059BC74(v20, v21);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10082FDA0()
{
  sub_1008344D4(&qword_1013F4F28);
}

void sub_10082FDAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27[2];

  v1 = v0;
  sub_1004B804C(&qword_1013F5158);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v6)
    memmove(v5, (const void *)(v2 + 64), 8 * v6);
  v26 = v2 + 64;
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v22 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v12)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v8;
    if (!v23)
    {
      v8 = v22 + 1;
      if (v22 + 1 >= v12)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v8);
      if (!v23)
        break;
    }
LABEL_25:
    v11 = (v23 - 1) & v23;
    v14 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_12:
    v15 = 24 * v14;
    v16 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v17 = *(_BYTE *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = 40 * v14;
    sub_1004E90B0(*(_QWORD *)(v2 + 56) + 40 * v14, (uint64_t)v27);
    v21 = *(_QWORD *)(v4 + 48) + v15;
    *(_BYTE *)v21 = v17;
    *(_QWORD *)(v21 + 8) = v18;
    *(_QWORD *)(v21 + 16) = v19;
    sub_1004DB728(v27, *(_QWORD *)(v4 + 56) + v20);
    swift_bridgeObjectRetain(v19);
  }
  v24 = v22 + 2;
  if (v24 >= v12)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v8 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v8);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10082FFA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_1004B804C(&qword_1013F5180);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100830148()
{
  sub_100830314(&qword_1013F5090);
}

void sub_100830154()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1004B804C(&qword_1013F5098);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v23 = v20;
    v23[1] = v21;
    v23[2] = v22;
    swift_retain(v20);
    swift_retain(v21);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100830314(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  sub_1004B804C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_retain(v18);
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1008304AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1004B804C(&qword_1013F5010);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100830664()
{
  sub_100830AEC(&qword_1013F4E80);
}

void sub_100830670()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1004B804C(&qword_1013F4E78);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10083080C()
{
  sub_100831F74(&qword_1013F5108);
}

void sub_100830818()
{
  sub_100834F90(&qword_1013F5168);
}

void sub_100830824()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  const void *v38;
  int64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v1 - 8);
  v42 = v1;
  __chkstk_darwin(v1);
  v40 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F5160);
  v37 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v44 = v4;
  if (!v5)
  {
    swift_release(v3);
    v36 = v44;
    v35 = v37;
LABEL_28:
    *v35 = v36;
    return;
  }
  v6 = v4;
  v7 = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v38 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)v7 >= v3 + 64 + 8 * v8)
  {
    memmove(v7, v38, 8 * v8);
    v6 = v44;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v43 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v39 = (unint64_t)(v11 + 63) >> 6;
  v15 = v40;
  v14 = v41;
  v16 = v42;
  while (1)
  {
    if (v13)
    {
      v45 = (v13 - 1) & v13;
      v46 = v10;
      v17 = __clz(__rbit64(v13)) | (v10 << 6);
      v18 = v43;
      goto LABEL_12;
    }
    v31 = v10 + 1;
    v18 = v43;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v31 >= v39)
      goto LABEL_26;
    v32 = *((_QWORD *)v38 + v31);
    v33 = v10 + 1;
    if (!v32)
    {
      v33 = v10 + 2;
      if (v10 + 2 >= v39)
        goto LABEL_26;
      v32 = *((_QWORD *)v38 + v33);
      if (!v32)
        break;
    }
LABEL_25:
    v45 = (v32 - 1) & v32;
    v46 = v33;
    v17 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v14 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v18 + 48) + v19, v16);
    v20 = 48 * v17;
    v21 = *(_QWORD *)(v18 + 56) + 48 * v17;
    v22 = *(void **)v21;
    v23 = *(void **)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 40);
    v47 = *(_QWORD *)(v21 + 32);
    v48 = v24;
    v27 = v44;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v44 + 48) + v19, v15, v16);
    v28 = (_QWORD *)(*(_QWORD *)(v27 + 56) + v20);
    *v28 = v22;
    v28[1] = v23;
    v28[2] = v48;
    v28[3] = v25;
    v28[4] = v47;
    v28[5] = v26;
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v26);
    v29 = v22;
    v30 = v23;
    v13 = v45;
    v10 = v46;
  }
  v34 = v10 + 3;
  if (v10 + 3 >= v39)
  {
LABEL_26:
    swift_release(v43);
    v35 = v37;
    v36 = v44;
    goto LABEL_28;
  }
  v32 = *((_QWORD *)v38 + v34);
  if (v32)
  {
    v33 = v10 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v33 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v33 >= v39)
      goto LABEL_26;
    v32 = *((_QWORD *)v38 + v33);
    ++v34;
    if (v32)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100830AE0()
{
  sub_100830AEC(&qword_1013F4EE8);
}

void sub_100830AEC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v2 = v1;
  sub_1004B804C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v26 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v14)
      goto LABEL_26;
    v27 = *(_QWORD *)(v7 + 8 * v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v14)
        goto LABEL_26;
      v27 = *(_QWORD *)(v7 + 8 * v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v16 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = *(_QWORD *)(v3 + 56);
    v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v17);
    v20 = *v19;
    v21 = v19[1];
    v23 = *(_QWORD *)(v18 + v17);
    v22 = *(_QWORD *)(v18 + v17 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v24 = v20;
    v24[1] = v21;
    v25 = (_QWORD *)(*(_QWORD *)(v5 + 56) + v17);
    *v25 = v23;
    v25[1] = v22;
    swift_retain(v22);
    swift_bridgeObjectRetain(v21);
    swift_retain(v23);
  }
  v28 = v26 + 2;
  if (v28 >= v14)
    goto LABEL_26;
  v27 = *(_QWORD *)(v7 + 8 * v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v27 = *(_QWORD *)(v7 + 8 * v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100830CAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1004B804C(&qword_1013F2128);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1004CB6E8(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_10050CB14(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100830E90()
{
  sub_100831474(&qword_1013F51E0);
}

void sub_100830E9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v1 = v0;
  sub_1004B804C(&qword_1013F5150);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v12 = (v20 - 1) & v20;
    v15 = v22 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10083102C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD v27[7];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F5140);
  v6 = *v0;
  v7 = static _DictionaryStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_28:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 64 + 8 * v10)
    memmove(v9, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 56 * v18;
    sub_10062E59C((_QWORD *)(*(_QWORD *)(v6 + 56) + v20), v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    sub_10062E5D8((uint64_t)v27, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    swift_release(v6);
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10083126C()
{
  sub_1008344D4(&qword_1013F5148);
}

void sub_100831278()
{
  sub_1008327E0((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_1013F50B8);
}

void sub_10083128C()
{
  sub_100831B48(type metadata accessor for CRLThrottleInfo, &qword_1013F50F0);
}

void sub_1008312A0()
{
  sub_10083472C(type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState, &qword_1013F50F8);
}

void sub_1008312B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1004B804C(&qword_1013F5120);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_retain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10083145C()
{
  sub_100834F90(&qword_1013F5118);
}

void sub_100831468()
{
  sub_100831474(&qword_1013F4F48);
}

void sub_100831474(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v2 = v1;
  sub_1004B804C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v22 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v14)
      goto LABEL_26;
    v23 = *(_QWORD *)(v7 + 8 * v22);
    ++v10;
    if (!v23)
    {
      v10 = v22 + 1;
      if (v22 + 1 >= v14)
        goto LABEL_26;
      v23 = *(_QWORD *)(v7 + 8 * v10);
      if (!v23)
        break;
    }
LABEL_25:
    v13 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    v21 = v19;
  }
  v24 = v22 + 2;
  if (v24 >= v14)
    goto LABEL_26;
  v23 = *(_QWORD *)(v7 + 8 * v24);
  if (v23)
  {
    v10 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v23 = *(_QWORD *)(v7 + 8 * v10);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100831610()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1004B804C(&qword_1013F5130);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_retain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1008317B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1004B804C(&qword_1013F5110);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10083196C()
{
  sub_100831F74(&qword_1013F4F50);
}

void sub_100831978()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  __int128 v23;

  v1 = v0;
  sub_1004B804C(&qword_1013F5128);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v23 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v23;
    v19 = v17;
    swift_unknownObjectRetain(v23);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100831B34()
{
  sub_100831B48(type metadata accessor for CRLZoneSyncResultScenarios, &qword_1013F50E0);
}

void sub_100831B48(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v5 = v2;
  v6 = a1(0);
  v32 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - v7;
  sub_1004B804C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v30 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v31 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v26 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v26);
    ++v15;
    if (!v27)
    {
      v15 = v26 + 1;
      if (v26 + 1 >= v19)
        goto LABEL_26;
      v27 = *(_QWORD *)(v31 + 8 * v15);
      if (!v27)
        break;
    }
LABEL_25:
    v18 = (v27 - 1) & v27;
    v21 = __clz(__rbit64(v27)) + (v15 << 6);
LABEL_12:
    v22 = 8 * v21;
    v23 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * v21);
    v24 = *(_QWORD *)(v32 + 72) * v21;
    sub_1004B8460(*(_QWORD *)(v9 + 56) + v24, (uint64_t)v8, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 48) + v22) = v23;
    sub_1004B84E0((uint64_t)v8, *(_QWORD *)(v11 + 56) + v24, a1);
    v25 = v23;
  }
  v28 = v26 + 2;
  if (v28 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v30;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v31 + 8 * v28);
  if (v27)
  {
    v15 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v27 = *(_QWORD *)(v31 + 8 * v15);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100831D70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  unint64_t v21;
  void *v22;
  uint64_t *v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;

  sub_1004B804C(&qword_1013F50A0);
  v28 = v0;
  v1 = *v0;
  v2 = static _DictionaryStorage.copy(original:)(*v0);
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    swift_release(v1);
    *v28 = v3;
    return;
  }
  v4 = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v5)
    memmove(v4, (const void *)(v1 + 64), 8 * v5);
  v29 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    v25 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v11)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v7;
    if (!v26)
    {
      v7 = v25 + 1;
      if (v25 + 1 >= v11)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v7);
      if (!v26)
        break;
    }
LABEL_25:
    v10 = (v26 - 1) & v26;
    v13 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_12:
    v14 = 8 * v13;
    v15 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v13);
    v16 = 40 * v13;
    v17 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = (void *)v17[2];
    v21 = v17[3];
    v22 = (void *)v17[4];
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + v14) = v15;
    v23 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v16);
    *v23 = v18;
    v23[1] = v19;
    v23[2] = (uint64_t)v20;
    v23[3] = v21;
    v23[4] = (uint64_t)v22;
    v24 = v15;
    sub_1007B0D28(v18, v19, v20, v21, v22);
  }
  v27 = v25 + 2;
  if (v27 >= v11)
    goto LABEL_26;
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v7 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v7 >= v11)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v7);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100831F68()
{
  sub_100831F74(&qword_1013F50D8);
}

void sub_100831F74(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  sub_1004B804C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain(v19);
    swift_retain(v21);
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100832120()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1004B804C(&qword_1013F50E8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = (void *)v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    v23 = v20;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1008322CC()
{
  sub_1008322E0(_s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa, &qword_1013F5018);
}

void sub_1008322E0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v39 = (char *)&v34 - v5;
  v38 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(a2);
  v34 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    swift_release(v8);
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return;
  }
  v11 = v9;
  v12 = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)v12 >= v8 + 64 + 8 * v13)
  {
    memmove(v12, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; sub_1004B84E0(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_1004B8460(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    swift_release(v42);
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1008325A4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - v7;
  sub_1004B804C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v29 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v31 + 72) * v21;
    sub_1004B8460(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = 8 * v21;
    v24 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + v23);
    sub_1004B84E0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + v23) = v24;
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1008327CC()
{
  sub_1008327E0((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_1013F50B0);
}

void sub_1008327E0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - v6;
  sub_1004B804C(a2);
  v28 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    swift_release(v8);
    *v28 = v10;
    return;
  }
  v11 = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)v11 >= v8 + 64 + 8 * v12)
    memmove(v11, (const void *)(v8 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = v8 + 64;
  v30 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v14;
    if (!v25)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v30)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v14);
      if (!v25)
        break;
    }
LABEL_25:
    v17 = (v25 - 1) & v25;
    v19 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(void **)(*(_QWORD *)(v8 + 56) + v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    v23 = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v30)
    goto LABEL_26;
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v14 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v14 >= v30)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v14);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100832A08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1004B804C(&qword_1013F50A8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    sub_1004BE310(v19, *((unint64_t *)&v19 + 1));
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100832BB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v37 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F5058);
  v31 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = *(_QWORD *)(v5 + 16);
  v39 = v6;
  if (!v7)
  {
    swift_release(v5);
    v29 = v39;
    v28 = v31;
LABEL_25:
    *v28 = v29;
    return;
  }
  v8 = v6;
  v9 = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)v9 >= v5 + 64 + 8 * v10)
  {
    memmove(v9, (const void *)(v5 + 64), 8 * v10);
    v8 = v39;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v38 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v32 = v5 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  v16 = v36;
  for (i = v39;
        ;
        (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v11 << 6);
      v20 = v38;
      goto LABEL_9;
    }
    v25 = v11 + 1;
    v20 = v38;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_23;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_22:
    v14 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    v21 = *(_QWORD *)(v37 + 72) * v19;
    sub_1004B8460(*(_QWORD *)(v20 + 48) + v21, v15, type metadata accessor for CRLBoardIdentifier);
    v22 = *(_QWORD *)(v1 + 72) * v19;
    v23 = *(_QWORD *)(v20 + 56) + v22;
    v24 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v35, v23, v16);
    sub_1004B84E0(v15, *(_QWORD *)(i + 48) + v21, type metadata accessor for CRLBoardIdentifier);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    swift_release(v38);
    v28 = v31;
    v29 = v39;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_100832E80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1004B804C(&qword_1013F5050);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_10083302C()
{
  sub_1008344D4(&qword_1013F5030);
}

void sub_100833038()
{
  sub_10082EDFC(type metadata accessor for CRLGloballyScopedBoardIdentifier, &qword_1013F5040);
}

void sub_10083304C()
{
  sub_100833C50(type metadata accessor for CRLGloballyScopedBoardIdentifier, &qword_1013F5048);
}

void sub_100833060()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1004B804C(&qword_1013F5028);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    v17 = v16;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100833200()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1004B804C(&qword_1013F5020);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 8 * v15;
    v21 = *(void **)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    v23 = v21;
    swift_bridgeObjectRetain(v19);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1008333B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1004B804C(&qword_1013F4F90);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(void **)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = 8 * v15;
    v22 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v21);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v24 = *(_BYTE *)(v17 + 24);
    *(_QWORD *)v23 = *(_QWORD *)v17;
    *(_QWORD *)(v23 + 8) = v19;
    *(_QWORD *)(v23 + 16) = v20;
    *(_BYTE *)(v23 + 24) = v24;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v22;
    sub_1004DD884(v18, v19, v20, v24);
    swift_bridgeObjectRetain(v22);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100833578()
{
  sub_1008339B8((uint64_t (*)(_QWORD))&type metadata accessor for URL, &qword_1013F5000);
}

void sub_10083358C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  _OWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v1 = v0;
  sub_1004B804C(&qword_1013F4FF8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    sub_1004B8968(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v26);
    v16 = (__int128 *)(*(_QWORD *)(v2 + 56) + 32 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = *v16;
    v19 = v16[1];
    v20 = v27;
    v21 = v26[1];
    *(_OWORD *)v17 = v26[0];
    *(_OWORD *)(v17 + 16) = v21;
    *(_QWORD *)(v17 + 32) = v20;
    v22 = (_OWORD *)(*(_QWORD *)(v4 + 56) + 32 * v15);
    *v22 = v18;
    v22[1] = v19;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100833768()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4E38);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v25 = v1;
  v8 = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v10)
    memmove(v8, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_1004B8460(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20);
    sub_1004B84E0((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    swift_release(v5);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100833998()
{
  sub_1008344D4(&qword_1013F4DF0);
}

void sub_1008339A4()
{
  sub_1008339B8((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_1013F4EB0);
}

void sub_1008339B8(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v6 = (char *)&v33 - v5;
  sub_1004B804C(a2);
  v34 = v2;
  v7 = *v2;
  v8 = static _DictionaryStorage.copy(original:)(*v2);
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    swift_release(v7);
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return;
  }
  v10 = v8;
  v11 = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)v11 >= v7 + 64 + 8 * v12)
  {
    memmove(v11, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    swift_bridgeObjectRetain(v23);
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    swift_release(v7);
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100833C14()
{
  sub_10082EDFC(type metadata accessor for CRLBoardIdentifier, &qword_1013F4E40);
}

void sub_100833C28()
{
  sub_1008344D4(&qword_1013F4F20);
}

void sub_100833C34()
{
  sub_10082F564(type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLAssetReferrerIdentifier, &qword_1013F5190);
}

void sub_100833C50(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v2;
  v6 = a1(0);
  v30 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  sub_1004B804C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v28 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v29 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v15;
    if (!v25)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v19)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v15);
      if (!v25)
        break;
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    v22 = *(_QWORD *)(v30 + 72) * v21;
    sub_1004B8460(*(_QWORD *)(v9 + 48) + v22, (uint64_t)v8, a1);
    v23 = *(_BYTE *)(*(_QWORD *)(v9 + 56) + v21);
    sub_1004B84E0((uint64_t)v8, *(_QWORD *)(v11 + 48) + v22, a1);
    *(_BYTE *)(*(_QWORD *)(v11 + 56) + v21) = v23;
  }
  v26 = v24 + 2;
  if (v26 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v15);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100833E74()
{
  sub_10082EDFC(type metadata accessor for CRLBoardIdentifier, &qword_1013F5078);
}

void sub_100833E88()
{
  sub_100833E9C((uint64_t *)&unk_101406470, &qword_1013F4EB8);
}

void sub_100833E9C(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = sub_1004B804C(a1);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(a2);
  v34 = v2;
  v8 = *v2;
  v9 = static _DictionaryStorage.copy(original:)(*v2);
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    swift_release(v8);
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return;
  }
  v11 = v9;
  v12 = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)v12 >= v8 + 64 + 8 * v13)
  {
    memmove(v12, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; sub_1004C4938(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_1004CB7BC(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    swift_release(v42);
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_10083415C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  sub_1004B804C(&qword_1013F4FC0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1008342E8()
{
  sub_100834F90(&qword_1013F4FA8);
}

void sub_1008342F4()
{
  sub_100834300(&qword_1013F4F98);
}

void sub_100834300(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];

  v2 = v1;
  sub_1004B804C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 32 * v16;
    sub_1004CB6E8(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v24);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    sub_10050CB14(v24, (_OWORD *)(*(_QWORD *)(v5 + 56) + v19));
    v20 = v18;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1008344BC()
{
  sub_100834F90(&qword_1013F4F70);
}

void sub_1008344C8()
{
  sub_1008344D4(&qword_1013F4F60);
}

void sub_1008344D4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(a1);
  v26 = v1;
  v7 = *v1;
  v8 = static _DictionaryStorage.copy(original:)(*v1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    swift_release(v7);
    *v26 = v9;
    return;
  }
  v10 = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)v10 >= v7 + 64 + 8 * v11)
    memmove(v10, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    swift_retain(v21);
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100834704()
{
  sub_1008322E0(type metadata accessor for CRLBoardItemPeerSyncUpdate, &qword_1013F4F58);
}

void sub_100834718()
{
  sub_10083472C(type metadata accessor for CRLSyncScheduledActivity, &qword_1013F4F38);
}

void sub_10083472C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v2;
  v6 = a1(0);
  v30 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - v7;
  sub_1004B804C(a2);
  v9 = *v2;
  v10 = static _DictionaryStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_28:
    *v5 = v11;
    return;
  }
  v28 = v5;
  v12 = (void *)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 64 + 8 * v13)
    memmove(v12, (const void *)(v9 + 64), 8 * v13);
  v29 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v15;
    if (!v25)
    {
      v15 = v24 + 1;
      if (v24 + 1 >= v19)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v15);
      if (!v25)
        break;
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    v22 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + v21);
    v23 = *(_QWORD *)(v30 + 72) * v21;
    sub_1004B8460(*(_QWORD *)(v9 + 56) + v23, (uint64_t)v8, a1);
    *(_BYTE *)(*(_QWORD *)(v11 + 48) + v21) = v22;
    sub_1004B84E0((uint64_t)v8, *(_QWORD *)(v11 + 56) + v23, a1);
  }
  v26 = v24 + 2;
  if (v26 >= v19)
  {
LABEL_26:
    swift_release(v9);
    v5 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v15);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_10083494C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1004B804C(&qword_1013F4F40);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    swift_retain(*((_QWORD *)&v16 + 1));
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100834AF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v30 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4F88);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v27 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v28 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v29 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v29)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v30 + 72) * v16;
    sub_1004B8460(*(_QWORD *)(v5 + 48) + v17, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    v18 = 16 * v16;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v16);
    v20 = *v19;
    v21 = (void *)v19[1];
    sub_1004B84E0((uint64_t)v4, *(_QWORD *)(v7 + 48) + v17, type metadata accessor for CRLBoardIdentifier);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v22 = v20;
    v22[1] = v21;
    v23 = v21;
    swift_retain(v20);
  }
  v26 = v24 + 2;
  if (v26 >= v29)
  {
LABEL_26:
    swift_release(v5);
    v1 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100834D3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4F80);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    swift_release(v5);
LABEL_28:
    *v1 = v7;
    return;
  }
  v24 = v1;
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v26 + 72) * v17;
    sub_1004B8460(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
    v19 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
    sub_1004B84E0((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for CRLBoardIdentifier);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_26:
    swift_release(v5);
    v1 = v24;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_100834F68()
{
  sub_10082F564(type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata, type metadata accessor for CRLBoardIdentifier, &qword_1013F4E50);
}

void sub_100834F84()
{
  sub_100834F90(&qword_1013F4F08);
}

void sub_100834F90(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  sub_1004B804C(a1);
  v3 = *v1;
  v4 = static _DictionaryStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 64 + 8 * v8)
    memmove(v6, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    swift_bridgeObjectRetain(v19);
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100835130()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B804C(&qword_1013F4F00);
  v23 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    swift_release(v5);
    *v23 = v7;
    return;
  }
  v8 = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)v8 >= v5 + 64 + 8 * v9)
    memmove(v8, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v16) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_100835350()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v1 = v0;
  sub_1004B804C(&qword_1013F4EF0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    sub_1004B8968(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v27);
    v16 = *(_QWORD *)(v2 + 56) + 24 * v15;
    v17 = *(void **)v16;
    v18 = *(void **)(v16 + 8);
    v19 = *(void **)(v16 + 16);
    v20 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v21 = v27[0];
    v22 = v27[1];
    *(_QWORD *)(v20 + 32) = v28;
    *(_OWORD *)v20 = v21;
    *(_OWORD *)(v20 + 16) = v22;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 56) + 24 * v15);
    *v23 = v17;
    v23[1] = v18;
    v23[2] = v19;
    sub_100836CEC(v17, v18, v19);
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_10083553C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  __n128 v9;
  void *v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_10083568C((unint64_t *)((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    if (v1)
      swift_willThrow(v9);
    else
      return v8;
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    v2 = sub_10083568C((unint64_t *)v10, v6, v2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v2;
}

uint64_t sub_10083568C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  v23 = a2;
  v24 = a1;
  v28 = sub_1004B804C(&qword_1013F4DD8);
  __chkstk_darwin(v28);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = *(_QWORD *)(a3 + 64);
  v25 = 0;
  v26 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_5;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v27)
      return sub_100835C60(v24, v23, v25, (_QWORD *)a3);
    v20 = *(_QWORD *)(v26 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v27)
        return sub_100835C60(v24, v23, v25, (_QWORD *)a3);
      v20 = *(_QWORD *)(v26 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v27)
          return sub_100835C60(v24, v23, v25, (_QWORD *)a3);
        v20 = *(_QWORD *)(v26 + 8 * v11);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v15 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_5:
    sub_1004B8460(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v7 + 72) * v17, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v17);
    sub_1004B8460((uint64_t)v10, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)&v5[*(int *)(v28 + 48)] = v18;
    sub_1004CB800((uint64_t)v5, &qword_1013F4DD8);
    result = sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    if (v18)
    {
      *(unint64_t *)((char *)v24 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
        return sub_100835C60(v24, v23, v25, (_QWORD *)a3);
      }
    }
  }
  v21 = v19 + 3;
  if (v21 >= v27)
    return sub_100835C60(v24, v23, v25, (_QWORD *)a3);
  v20 = *(_QWORD *)(v26 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v27)
      return sub_100835C60(v24, v23, v25, (_QWORD *)a3);
    v20 = *(_QWORD *)(v26 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100835910(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v47 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v47 - 8);
  v8 = __chkstk_darwin(v47);
  v46 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v42 = (char *)&v38 - v10;
  if (!a3)
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (uint64_t)a4;
  }
  sub_1004B804C(&qword_1013F4F30);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v12 = result;
  v39 = a1;
  v40 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 64;
  v41 = a4;
  v16 = v47;
  while (1)
  {
    if (v13)
    {
      v44 = (v13 - 1) & v13;
      v45 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v40)
        return v12;
      v19 = v39[v18];
      v20 = v14 + 1;
      if (!v19)
      {
        v20 = v14 + 2;
        if (v14 + 2 >= v40)
          return v12;
        v19 = v39[v20];
        if (!v19)
        {
          v20 = v14 + 3;
          if (v14 + 3 >= v40)
            return v12;
          v19 = v39[v20];
          if (!v19)
          {
            v21 = v14 + 4;
            if (v14 + 4 >= v40)
              return v12;
            v19 = v39[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v40)
                  return v12;
                v19 = v39[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      v44 = (v19 - 1) & v19;
      v45 = v20;
      v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v22 = v42;
    v23 = v43;
    v24 = *(_QWORD *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v42, a4[6] + v24 * v17, v16);
    v25 = *(_QWORD *)(a4[7] + 8 * v17);
    v26 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v26(v46, v22, v16);
    v27 = *(_QWORD *)(v12 + 40);
    v28 = sub_1005034A0((unint64_t *)&qword_1013DE630, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    swift_retain(v25);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v16, v28);
    v29 = -1 << *(_BYTE *)(v12 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v15 + 8 * v31);
      }
      while (v36 == -1);
      v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(_QWORD *)(v15 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v12 + 48) + v32 * v24, v46, v47);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v32) = v25;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v41;
    v13 = v44;
    v14 = v45;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_100835C60(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Swift::Int result;
  Swift::Int v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[9];

  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v46 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v45 = (uint64_t)&v41 - v12;
  if (!a3)
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (Swift::Int)a4;
  }
  sub_1004B804C(&qword_1013F4DE0);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v14 = result;
  v42 = a1;
  v43 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v44 = a4;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v47 = v16;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v43)
        return v14;
      v21 = v42[v20];
      v22 = v16 + 1;
      if (!v21)
      {
        v22 = v16 + 2;
        if (v16 + 2 >= v43)
          return v14;
        v21 = v42[v22];
        if (!v21)
        {
          v22 = v16 + 3;
          if (v16 + 3 >= v43)
            return v14;
          v21 = v42[v22];
          if (!v21)
          {
            v23 = v16 + 4;
            if (v16 + 4 >= v43)
              return v14;
            v21 = v42[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v43)
                  return v14;
                v21 = v42[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v47 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = v45;
    v25 = *(_QWORD *)(v46 + 72);
    sub_1004B8460(a4[6] + v25 * v19, v45, type metadata accessor for CRLBoardIdentifier);
    v26 = *(_QWORD *)(a4[7] + 8 * v19);
    sub_1004B84E0(v24, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    Hasher.init(_seed:)(v48, *(_QWORD *)(v14 + 40));
    v27 = type metadata accessor for UUID(0);
    v28 = sub_1005034A0((unint64_t *)&qword_1013DE630, 255, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v48, v27, v28);
    v29 = &v11[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v30 = *(_QWORD *)v29;
    v31 = *((_QWORD *)v29 + 1);
    swift_bridgeObjectRetain(v31);
    String.hash(into:)(v48, v30, v31);
    swift_bridgeObjectRelease(v31);
    result = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v14 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6))) != 0)
    {
      v35 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v17 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v38 = v34 == v37;
        if (v34 == v37)
          v34 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v34);
      }
      while (v39 == -1);
      v35 = __clz(__rbit64(~v39)) + (v34 << 6);
    }
    *(_QWORD *)(v17 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    result = sub_1004B84E0((uint64_t)v11, *(_QWORD *)(v14 + 48) + v35 * v25, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v35) = v26;
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v44;
    v16 = v47;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_100835FF0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  if (!a3)
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain(a4);
    return v4;
  }
  sub_1004B804C(&qword_1013F4F08);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = 8 * v13;
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17);
    v19 = *(_QWORD *)(v8 + 40);
    v20 = *(id *)(*(_QWORD *)(v4 + 48) + v17);
    swift_bridgeObjectRetain(v18);
    result = NSObject._rawHashValue(seed:)(v19);
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v29) = v20;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v29) = v18;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

BOOL sub_100836284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v17;
  _BOOL8 result;
  uint64_t Marks;
  uint64_t v20;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - v8;
  v10 = static UUID.== infix(_:_:)(a1);
  sub_1004B8460(a1, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  sub_1004B8460(a2, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  if ((v10 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    return 0;
  }
  v11 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v12 = *(_QWORD *)&v9[v11];
  v13 = *(_QWORD *)&v9[v11 + 8];
  v14 = &v6[v11];
  v15 = *((_QWORD *)v14 + 1);
  if (v12 == *(_QWORD *)v14 && v13 == v15)
  {
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
LABEL_10:
    Marks = type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row(0);
    if (*(_QWORD *)(a1 + *(int *)(Marks + 20)) == *(_QWORD *)(a2 + *(int *)(Marks + 20)))
      return *(_DWORD *)(a1 + *(int *)(Marks + 24)) == *(_DWORD *)(a2 + *(int *)(Marks + 24));
    return 0;
  }
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, *(_QWORD *)v14, v15, 0);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  result = 0;
  if ((v17 & 1) != 0)
    goto LABEL_10;
  return result;
}

uint64_t *sub_100836418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double *v34;

  v0 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v0);
  v29 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for URL(0);
  v28 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v32 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v13);
  v34 = _swiftEmptyArrayStorage;
  v14 = sub_1005034A0((unint64_t *)&qword_1013E3A70, 255, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = &qword_1013FF6B0;
  v16 = sub_1004B804C(&qword_1013FF6B0);
  v17 = sub_1004CBA30((unint64_t *)&qword_1013E3A78, &qword_1013FF6B0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v16, v17, v7, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  v18 = v9;
  v19 = v32;
  v20 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001CLL, 0x8000000100FD6E30, v12, v18, v6, 0);
  type metadata accessor for CRLBoardDataStoreProvider();
  v21 = v33;
  sub_100BF5490();
  if (v21)
  {

  }
  else
  {
    v23 = v28;
    v22 = (uint64_t)v29;
    v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v29, v19, v30);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v22, 0, 1, v24);
    v25 = type metadata accessor for CRLSideStore();
    swift_allocObject(v25, 64, 7);
    v26 = v20;
    v15 = sub_100810290(v22, v26);
    OS_dispatch_queue.sync<A>(execute:)(sub_100836E58, v15, (char *)&type metadata for () + 8);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v24);

  }
  return v15;
}

uint64_t sub_100836778(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  Swift::String v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    swift_bridgeObjectRetain(a2);
    v3._countAndFlagsBits = 46;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    v5 = a1;
    v4 = (void *)a2;
  }
  else
  {
    v5 = 0;
    v4 = (void *)0xE000000000000000;
  }
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6._object = (void *)0x8000000100FD6350;
  v6._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = v5;
  v8._object = v4;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0x6E6F6973726576;
  v9._object = (void *)0xE700000000000000;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 8236;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = v5;
  v11._object = v4;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v4);
  v12._countAndFlagsBits = 0x7265746E756F63;
  v12._object = (void *)0xE700000000000000;
  String.append(_:)(v12);
  return v5;
}

void sub_1008368B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  id v10;
  void (*v11)(_QWORD *, uint64_t);
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  sqlite3_int64 v30;
  void *v31;
  void (*v32)(_QWORD *, uint64_t, uint64_t);
  id v33;
  char v34;
  uint64_t (*v35)(_QWORD *, uint64_t);
  sqlite3_stmt **v36;
  int v37;
  void *v38;
  id v39;
  int v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  void *v44;
  id v45;
  char v46;
  void (*v47)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v48)(_QWORD *, uint64_t);
  uint64_t v49;
  unint64_t v50;
  _BYTE v51[32];

  v2 = v0;
  v3 = type metadata accessor for DispatchPredicate(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (void (**)(_QWORD *, uint64_t, uint64_t))((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v0 + 24);
  *v6 = v7;
  v8 = enum case for DispatchPredicate.onQueue(_:);
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 + 104);
  v9(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  v10 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v6);
  v11 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
  v11(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v47 = v9;
  v48 = (uint64_t (*)(_QWORD *, uint64_t))v11;
  v49 = 0;
  v50 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  v12._object = (void *)0x8000000100FD6430;
  String.append(_:)(v12);
  v13._object = (void *)0x8000000100FD6330;
  v13._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x202020202820;
  v14._object = (void *)0xE600000000000000;
  String.append(_:)(v14);
  v15._object = (void *)0x8000000100FD6350;
  v15._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x20202020202CLL;
  v16._object = (void *)0xE600000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x6E6F6973726576;
  v17._object = (void *)0xE700000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x20202020202CLL;
  v18._object = (void *)0xE600000000000000;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x7265746E756F63;
  v19._object = (void *)0xE700000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0xD000000000000016;
  v20._object = (void *)0x8000000100FD6450;
  String.append(_:)(v20);
  v21 = v49;
  v22 = v50;
  v23 = *(_QWORD *)(v2 + 16);
  v24 = type metadata accessor for SQLiteStatement();
  swift_initStackObject(v24, v51);
  swift_retain(v23);
  v26 = sub_1006B77CC(v25, v21, v22);
  swift_release(v23);
  if (v1)
    return;
  v27 = sub_10067BA88();
  v29 = v28;
  sub_1006B5E80(v27, v28);
  sub_1004BBBC8(v27, v29);
  v30 = sub_1001E9730();
  sub_1006B5B50(v30, 2);
  v31 = *(void **)(*(_QWORD *)(v26 + 16) + 32);
  *v6 = v31;
  v32 = v47;
  v47(v6, v8, v3);
  v33 = v31;
  v34 = _dispatchPreconditionTest(_:)(v6);
  v35 = v48;
  v48(v6, v3);
  if ((v34 & 1) == 0)
    goto LABEL_15;
  v36 = (sqlite3_stmt **)(v26 + 24);
  swift_beginAccess(v26 + 24, &v49, 1, 0);
  v37 = sqlite3_step(*(sqlite3_stmt **)(v26 + 24));
  if (v37 != 101)
    goto LABEL_11;
  v38 = *(void **)(*(_QWORD *)(v26 + 16) + 32);
  *v6 = v38;
  v32(v6, v8, v3);
  v39 = v38;
  v8 = _dispatchPreconditionTest(_:)(v6);
  v37 = v35(v6, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    v40 = v37;
    v41 = sub_1006B79EC();
    swift_allocError(&type metadata for SQLiteError, v41, 0, 0);
    *(_DWORD *)v42 = v40;
    *(_QWORD *)(v42 + 8) = 0;
    *(_QWORD *)(v42 + 16) = 0;
    swift_willThrow(v43);
    v44 = *(void **)(*(_QWORD *)(v26 + 16) + 32);
    *v6 = v44;
    v32(v6, v8, v3);
    v45 = v44;
    v46 = _dispatchPreconditionTest(_:)(v6);
    v35(v6, v3);
    if ((v46 & 1) != 0)
      goto LABEL_12;
LABEL_16:
    __break(1u);
  }
LABEL_12:
  if (*v36)
  {
    sqlite3_finalize(*v36);
    *v36 = 0;
  }
  swift_release(v26);
}

id sub_100836CEC(id result, void *a2, void *a3)
{
  id v4;
  id v5;

  if (result)
  {
    v4 = result;
    v5 = a2;
    return a3;
  }
  return result;
}

unint64_t sub_100836D28()
{
  unint64_t result;

  result = qword_1013F4FD0;
  if (!qword_1013F4FD0)
  {
    result = swift_getWitnessTable(&unk_100EF63BC, &type metadata for CRLSQLSchemaVersionError);
    atomic_store(result, (unint64_t *)&qword_1013F4FD0);
  }
  return result;
}

uint64_t sub_100836D6C()
{
  uint64_t v0;

  return sub_10080F3CC(**(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), **(unsigned __int8 **)(v0 + 40)) & 1;
}

uint64_t sub_100836D94()
{
  uint64_t v0;

  return sub_10081295C(v0);
}

double sub_100836D9C()
{
  uint64_t v0;

  return sub_100812FB8(v0);
}

uint64_t type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F5240;
  if (!qword_1013F5240)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSideStore.BoardLoadMarksColumn.Row);
  return result;
}

uint64_t sub_100836DE0(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLSyncSaveResult(a2, a1);
  return a2;
}

uint64_t *sub_100836E1C(uint64_t a1, uint64_t *a2)
{
  assignWithTake for CRLSyncSaveResult(a2, a1);
  return a2;
}

void sub_100836E58()
{
  sub_10080F700();
}

uint64_t sub_100836E6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100836EB0(uint64_t a1, uint64_t a2)
{
  assignWithTake for CRLMathCalculationControllerExpression(a2, a1);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CRLSideStore.BoardLoadMarksColumn(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100836F38 + 4 * byte_100F0F2E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100836F6C + 4 * byte_100F0F2E0[v4]))();
}

uint64_t sub_100836F6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100836F74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100836F7CLL);
  return result;
}

uint64_t sub_100836F88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100836F90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100836F94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100836F9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSideStore.BoardLoadMarksColumn()
{
  return &type metadata for CRLSideStore.BoardLoadMarksColumn;
}

uint64_t *sub_100836FB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t sub_100837068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_1008370EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100837188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  v8 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100837200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_100837288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100837294);
}

uint64_t sub_100837294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1008372D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008372DC);
}

uint64_t sub_1008372DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardIdentifier(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_10083731C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLSideStore.Table(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1008373E0 + 4 * byte_100F0F2EA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100837400 + 4 * byte_100F0F2EF[v4]))();
}

_BYTE *sub_1008373E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100837400(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100837408(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100837410(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100837418(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100837420(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLSideStore.Table()
{
  return &type metadata for CRLSideStore.Table;
}

uint64_t storeEnumTagSinglePayload for CRLSideStore.SchemaVersion(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100837488 + 4 * byte_100F0F2F9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1008374BC + 4 * byte_100F0F2F4[v4]))();
}

uint64_t sub_1008374BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008374C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008374CCLL);
  return result;
}

uint64_t sub_1008374D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008374E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1008374E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008374EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSideStore.SchemaVersion()
{
  return &type metadata for CRLSideStore.SchemaVersion;
}

unint64_t sub_10083750C()
{
  unint64_t result;

  result = qword_1013F5280;
  if (!qword_1013F5280)
  {
    result = swift_getWitnessTable(&unk_100F0F5D8, &type metadata for CRLSideStore.Table);
    atomic_store(result, (unint64_t *)&qword_1013F5280);
  }
  return result;
}

uint64_t sub_100837550()
{
  return sub_1005034A0(&qword_1013F5288, 255, type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row, (uint64_t)&unk_100F0F600);
}

uint64_t sub_100837580()
{
  return sub_1004CBA30(&qword_1013F5290, &qword_1013F5298, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1008375AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1008375D0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1008375D0()
{
  unint64_t result;

  result = qword_1013F52D0;
  if (!qword_1013F52D0)
  {
    result = swift_getWitnessTable(&unk_100F0F678, &type metadata for CRLSideStore.BoardLoadMarksColumn);
    atomic_store(result, (unint64_t *)&qword_1013F52D0);
  }
  return result;
}

unint64_t sub_100837618()
{
  unint64_t result;

  result = qword_1013F52D8;
  if (!qword_1013F52D8)
  {
    result = swift_getWitnessTable(&unk_100F0F70C, &type metadata for CRLSideStore.BoardLoadMarksColumn);
    atomic_store(result, (unint64_t *)&qword_1013F52D8);
  }
  return result;
}

void sub_100837674()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLUSDZPlayPauseKnobTracker();
  objc_msgSendSuper2(&v5, "beginMovingKnob");
  v1 = objc_msgSend(v0, "knob");
  v2 = type metadata accessor for CRLUSDZPlayPauseKnob();
  v3 = swift_dynamicCastClass(v1, v2);
  if (v3)
  {
    v4 = *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked) = 1;
    if ((v4 & 1) == 0)
      sub_1005CA188();
  }

}

void sub_10083773C()
{
  char *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  int v7;
  objc_super v8;
  objc_super v9;

  v1 = (objc_class *)type metadata accessor for CRLUSDZPlayPauseKnobTracker();
  v9.receiver = v0;
  v9.super_class = v1;
  objc_msgSendSuper2(&v9, "endMovingKnob");
  v2 = objc_msgSend(v0, "knob");
  v3 = type metadata accessor for CRLUSDZPlayPauseKnob();
  v4 = swift_dynamicCastClass(v2, v3);
  if (v4)
  {
    v5 = (_BYTE *)v4;
    objc_msgSend(v0, "currentPosition");
    if (objc_msgSend(v5, "isHitByUnscaledPoint:inputType:", 0))
    {
      v6 = (v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying] & 1) == 0;
      v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying] = v6;
      sub_1005CA188();
      sub_1004BB5A4(&v0[OBJC_IVAR____TtC8Freeform27CRLUSDZPlayPauseKnobTracker_delegate], *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform27CRLUSDZPlayPauseKnobTracker_delegate + 24]);
      sub_1009D74A8(v6);
    }
    v7 = v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked];
    v5[OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isBeingTracked] = 0;
    if (v7 == 1)
      sub_1005CA188();
    v8.receiver = v0;
    v8.super_class = v1;
    objc_msgSendSuper2(&v8, "endMovingKnob");
  }

}

id sub_100837910()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZPlayPauseKnobTracker();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLUSDZPlayPauseKnobTracker()
{
  return objc_opt_self(_TtC8Freeform27CRLUSDZPlayPauseKnobTracker);
}

uint64_t sub_100837970(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 104);
}

uint64_t sub_1008379C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLCheckedContinuationOnceCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLCheckedContinuationOnceCollection);
}

double sub_1008379F8()
{
  uint64_t v0;
  _UNKNOWN ****v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v1 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v1 == &off_1014007D0)
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v2 = 0;
  swift_beginAccess(v2 + qword_101480208, v5, 32, 0);
  swift_retain(v1);
  v3 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v3);
  swift_endAccess(v5);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_100837A98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  _QWORD *Strong;
  void *v21;
  char v22;
  void *v23;
  uint64_t result;
  CKRecordID v25;
  Swift::String v26;
  _BYTE v28[24];

  v2 = v1;
  v4 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v28[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v28[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (v13 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = v13, v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x2F0))(), v14, (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_1014007D0)
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v17 = 0;
    sub_1004B8460(a1, (uint64_t)v12, type metadata accessor for CRLURLItemAtomicDataStruct);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_beginAccess(v17 + qword_101480208, v28, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_retain(v16);
    v18 = sub_1004B804C(&qword_1013EF360);
    CRRegister.wrappedValue.setter(v6, v18, v19);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_endAccess(v28);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_release(v16);
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    if (!Strong
      || (v21 = Strong,
          v22 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v21,
          (v22 & 1) == 0))
    {
      v23 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload) = 0;

    }
    return sub_1004B84A4(a1, type metadata accessor for CRLURLItemAtomicDataStruct);
  }
  return result;
}

Class sub_100838230()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _UNKNOWN ****v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  void (*v30)(char *, char *);
  _UNKNOWN ****v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  _DWORD *v46;
  uint64_t v47;
  char *v48;
  id v49;
  void *v50;
  os_unfair_lock_s *v51;
  id v52;
  void *v53;
  char *v54;
  void *v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  objc_super v60;
  _BYTE v61[24];

  v1 = v0;
  v2 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - v9;
  v11 = type metadata accessor for UUID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v57 - v17;
  v19 = OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload;
  v20 = *(char **)&v0[OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload];
  if (v20)
  {
    v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    v57 = v16;
    v58 = v15;
    sub_1004BB5A4(&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v21);
    v23 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
    v59 = v20;
    v23(v21, v22);
    v24 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v24 == &off_1014007D0)
      v25 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v25 = 0;
    swift_beginAccess(v25 + qword_101480208, v61, 32, 0);
    swift_retain(v24);
    v26 = sub_1004B804C(&qword_1013EF360);
    CRRegister.wrappedValue.getter(v26);
    swift_endAccess(v61);
    swift_release(v24);
    sub_1004B8460((uint64_t)v4, (uint64_t)v10, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLURLItemAtomicDataStruct);
    v27 = v57;
    v28 = v58;
    (*((void (**)(char *, char *, char *))v57 + 2))(v13, v10, v58);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLAssetData);
    v29 = static UUID.== infix(_:_:)(v18);
    v30 = (void (*)(char *, char *))*((_QWORD *)v27 + 1);
    v30(v13, v28);
    v30(v18, v28);
    if ((v29 & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"metadataPayload", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItem.swift", 81, 2, 47, "Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"metadataPayload", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItem.swift", 81, 2u, 47, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u);
    }
    return (Class)v59;
  }
  else
  {
    v32 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v32 == &off_1014007D0)
      v33 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v33 = 0;
    swift_beginAccess(v33 + qword_101480208, v61, 32, 0);
    swift_retain(v32);
    v34 = sub_1004B804C(&qword_1013EF360);
    CRRegister.wrappedValue.getter(v34);
    swift_endAccess(v61);
    swift_release(v32);
    sub_1004B8460((uint64_t)v4, (uint64_t)v7, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLURLItemAtomicDataStruct);
    v35 = (char *)objc_msgSend(v0, "store");
    v36 = *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v36 + 16));
    v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    v38 = *(void **)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v38)
    {
      v39 = *(id *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      v59 = (char *)type metadata accessor for CRLAssetManager();
      v40 = (char *)objc_allocWithZone((Class)v59);
      v58 = &v40[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
      swift_unknownObjectWeakInit(&v40[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
      v41 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      v42 = type metadata accessor for CRLUnfairLock();
      v43 = v1;
      v44 = swift_allocObject(v42, 24, 7);
      v57 = v35;
      v45 = v40;
      v46 = (_DWORD *)swift_slowAlloc(4, -1);
      *v46 = 0;
      *(_QWORD *)(v44 + 16) = v46;
      atomic_thread_fence(memory_order_acq_rel);
      *(_QWORD *)&v40[v41] = v44;
      v1 = v43;
      *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      v47 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(_QWORD *)&v45[v47] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
      *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      v48 = v57;
      swift_unknownObjectWeakAssign(v58, v57);

      v60.receiver = v45;
      v60.super_class = (Class)v59;
      v49 = objc_msgSendSuper2(&v60, "init");

      v50 = *(void **)&v35[v37];
      *(_QWORD *)&v35[v37] = v49;
      v39 = v49;

      v38 = 0;
    }
    v51 = *(os_unfair_lock_s **)(v36 + 16);
    v52 = v38;
    os_unfair_lock_unlock(v51);

    v53 = (void *)sub_100CF7F90(v7, v1, v39);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
    v54 = v1;
    v55 = *(void **)&v1[v19];
    *(_QWORD *)&v54[v19] = v53;
    v56 = v53;

    return (Class)v56;
  }
}

uint64_t sub_1008388BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  _UNKNOWN ****v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[24];

  v3 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for UTType(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  static UTType.url.getter(v11);
  LOBYTE(a1) = static UTType.== infix(_:_:)(a1, v13);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  if ((a1 & 1) != 0)
  {
    v14 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v14 == &off_1014007D0)
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v15 = 0;
    swift_beginAccess(v15 + qword_101480208, v23, 32, 0);
    swift_retain(v14);
    v16 = sub_1004B804C(&qword_1013EF360);
    CRRegister.wrappedValue.getter(v16);
    swift_endAccess(v23);
    swift_release(v14);
    v17 = &v5[*(int *)(v3 + 20)];
    v18 = type metadata accessor for URL(0);
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v8, v17, v18);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLURLItemAtomicDataStruct);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 1, v18);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18) != 1)
    {
      v20 = URL.dataRepresentation.getter();
      (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v8, v18);
      return v20;
    }
    sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
  }
  return 0;
}

uint64_t sub_100838BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _UNKNOWN ****v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v1 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v1);
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v7 == &off_1014007D0)
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v8 = 0;
  swift_beginAccess(v8 + qword_101480208, v17, 32, 0);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v9);
  swift_endAccess(v17);
  swift_release(v7);
  v10 = &v3[*(int *)(v1 + 20)];
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v6, v10, v11);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLURLItemAtomicDataStruct);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  v13 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11);
  if ((_DWORD)v13 == 1)
  {
    sub_1004CB800((uint64_t)v6, &qword_1013E04D0);
    return 0;
  }
  else
  {
    v14 = URL.absoluteString.getter(v13);
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v6, v11);
  }
  return v14;
}

char *sub_100838E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  uint64_t v40;
  void *v41;
  char *v42;
  objc_class *v43;
  id v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_super v54;
  _BYTE v55[32];
  _BYTE v56[24];
  _BYTE v57[32];
  char *v58;

  v53 = a4;
  v49 = a2;
  v5 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v50 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v47 = (uint64_t)v46 - v14;
  __chkstk_darwin(v15);
  v48 = (uint64_t)v46 - v16;
  __chkstk_darwin(v17);
  v52 = (uint64_t)v46 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)v46 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)v46 - v23;
  v51 = v4;
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v25);
  v26 = sub_1009DD614(1);
  swift_release(v25);
  v27 = (char *)v26 + *(_QWORD *)(*v26 + 632);
  swift_beginAccess(v27, v57, 0, 0);
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_retain(v26);
  v28 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  CRRegister.wrappedValue.getter(v28);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v24, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_release(v26);
  v29 = (uint64_t)v58;
  sub_1009DD8B4(v53);
  if (v29)
  {
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
  }
  else
  {
    v53 = 0;
    v46[1] = v8;
    v30 = v52;
    sub_1004CB7BC(v49, v52, (uint64_t *)&unk_1013E1A50);
    v58 = v24;
    v31 = (uint64_t)v24;
    v32 = v48;
    sub_1004CB7BC(v31, v48, (uint64_t *)&unk_1013E1A50);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33) == 1)
    {
      v35 = (uint64_t)v21;
      sub_1004C4938(v32, (uint64_t)v21, (uint64_t *)&unk_1013E1A50);
      swift_retain(v26);
      sub_1004CB800(v52, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v21, v52, v33);
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v35 = (uint64_t)v21;
      v36(v21, 0, 1, v33);
    }
    v37 = v47;
    sub_1004CB7BC(v35, v47, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v27, v56, 33, 0);
    v38 = v50;
    sub_1004CB7BC(v37, v50, (uint64_t *)&unk_1013E1A50);
    v39 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v55, v28);
    sub_100582338(v38, v40, (uint64_t *)&unk_1013E1A50);
    v39(v55, 0);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v56);
    sub_1004CB800(v35, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v41 = *(void **)(v51 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v42 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLURLItem(0));
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload] = 0;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v41;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v26;
    v43 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v54.receiver = v42;
    v54.super_class = v43;
    v44 = v41;
    v27 = (char *)objc_msgSendSuper2(&v54, "init");
    sub_1004CB800((uint64_t)v58, (uint64_t *)&unk_1013E1A50);
  }
  return v27;
}

uint64_t sub_1008393E4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

id sub_100839518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, __n128);
  __n128 v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  objc_super v10;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = *(uint64_t (**)(_QWORD, __n128))(*(_QWORD *)v2 + 440);
  v4 = swift_retain(v2);
  v5 = v3(0, v4);
  swift_release(v2);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v7 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLURLItem(0));
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v6;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v5;
  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v8 = v6;
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t sub_1008395E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  _UNKNOWN ****v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  CKRecordID v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _QWORD v34[3];
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  v10 = sub_1004B804C(&qword_1013F53D0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLURLItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v30 = a1;
    swift_unknownObjectRetain(a1);
    v29 = sub_100B0C360(v15, v2);
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 != &off_1014007D0)
      v16 = 0;
    v17 = (uint64_t)v16 + qword_101480208;
    swift_beginAccess((char *)v16 + qword_101480208, v33, 0, 0);
    sub_1004B8460(v17, (uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
    v18 = *(_UNKNOWN *****)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 != &off_1014007D0)
      v18 = 0;
    v19 = (uint64_t)v18 + qword_101480208;
    swift_beginAccess((char *)v18 + qword_101480208, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
    v20 = sub_10083BC7C(&qword_1013F53E0, (uint64_t)&unk_100F20674);
    CRStruct_1.actionUndoingDifference(from:)(v6, v4, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
    v21 = sub_1004B804C(&qword_1013F53D8);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
    {
      sub_1004CB800((uint64_t)v12, &qword_1013F53D0);
      memset(v34, 0, sizeof(v34));
      v35 = 1;
    }
    else
    {
      v35 = v21;
      v23 = sub_10050D1B0(v34);
      (*(void (**)(_QWORD *, char *, uint64_t))(v22 + 32))(v23, v12, v21);
    }
    v24 = v29;
    swift_beginAccess(v29 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v31, 33, 0);
    sub_10083DA20((uint64_t)v34, 7);
    swift_endAccess(v31);
    swift_unknownObjectRelease(v30);
    return v24;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItem.swift", 81, 2, 112, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItem.swift", 81, 2u, 112, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100839978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN ****v23;
  uint64_t v24;
  _UNKNOWN ****v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  double *v39;
  uint64_t result;
  CKRecordID v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  _BYTE v52[24];
  _BYTE v53[24];

  v3 = sub_1004B804C(&qword_1013F53E8);
  v48 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v46 = (uint64_t)&v44 - v7;
  v47 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v47);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - v11;
  v13 = sub_1004B804C(&qword_1013F53F0);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - v17;
  v19 = type metadata accessor for CRLURLItem(0);
  v20 = swift_dynamicCastClass(a1, v19);
  if (v20)
  {
    v21 = v20;
    v49 = v3;
    v50 = v18;
    v45 = v5;
    v22 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v21, v22))
    {
      v23 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v23 != &off_1014007D0)
        v23 = 0;
      v24 = (uint64_t)v23 + qword_101480208;
      swift_beginAccess((char *)v23 + qword_101480208, v53, 0, 0);
      sub_1004B8460(v24, (uint64_t)v12, type metadata accessor for CRLURLItemCRDTData);
      v25 = *(_UNKNOWN *****)(v21 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v25 != &off_1014007D0)
        v25 = 0;
      v26 = (uint64_t)v25 + qword_101480208;
      swift_beginAccess((char *)v25 + qword_101480208, v52, 0, 0);
      sub_1004B8460(v26, (uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
      v27 = sub_10083BC7C(&qword_1013F53F8, (uint64_t)&unk_100F204CC);
      swift_unknownObjectRetain(a1);
      v28 = (uint64_t)v50;
      CRType.observableDifference(from:)(v9, v47, v27);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLURLItemCRDTData);
      sub_1004CB7BC(v28, (uint64_t)v15, &qword_1013F53F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v15, 1, v49) == 1)
      {
        v29 = &qword_1013F53F0;
        v30 = (uint64_t)v15;
      }
      else
      {
        v31 = v46;
        sub_1004C4938((uint64_t)v15, v46, &qword_1013E9C40);
        v32 = (uint64_t)v45;
        sub_1004CB7BC(v31, (uint64_t)v45, &qword_1013E9C40);
        v33 = type metadata accessor for CRValueObservableDifference(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) != 1)
        {
          sub_1004CB800(v32, &qword_1013E9C40);
          v34 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v38 = *((_QWORD *)v34 + 2);
          v37 = *((_QWORD *)v34 + 3);
          if (v38 >= v37 >> 1)
            v34 = (double *)sub_100D0EF94((_QWORD *)(v37 > 1), v38 + 1, 1, v34);
          *((_QWORD *)v34 + 2) = v38 + 1;
          v39 = &v34[2 * v38];
          v39[4] = 3.58302061e160;
          v39[5] = -3.91910665e202;
          sub_1004CB800(v31, &qword_1013F53E8);
          if (*((_QWORD *)v34 + 2))
            goto LABEL_12;
          goto LABEL_16;
        }
        sub_1004CB800(v31, &qword_1013F53E8);
        v29 = &qword_1013E9C40;
        v30 = v32;
      }
      sub_1004CB800(v30, v29);
      v34 = _swiftEmptyArrayStorage;
      if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
      {
LABEL_12:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v51 = _swiftEmptyDictionarySingleton;
        sub_100825A20((uint64_t)v34, 7, isUniquelyReferenced_nonNull_native);
        v36 = v51;
        swift_unknownObjectRelease(a1);
        swift_bridgeObjectRelease();
LABEL_17:
        sub_1004CB800(v28, &qword_1013F53F0);
        return (uint64_t)v36;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(a1);
      v36 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    swift_unknownObjectRetain(a1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItem.swift", 81, 2, 124, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItem.swift", 81, 2u, 124, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v41, *(Swift::String *)&v42);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_100839F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  int v21;
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  _UNKNOWN ****v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F53D0);
  __chkstk_darwin(v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v28[-v9 - 8];
  v11 = sub_1004B804C(&qword_1013F53D8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1007770E0(a1);
  if (!v2)
  {
    v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v28, 0, 0);
    v16 = *v15;
    if (!*(_QWORD *)(v16 + 16))
    {
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 1;
LABEL_8:
      v19 = (uint64_t *)&unk_1013DFC00;
      v20 = &v29;
LABEL_9:
      sub_1004CB800((uint64_t)v20, v19);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_10:
      sub_1004CB800((uint64_t)v10, &qword_1013F53D0);
      return;
    }
    swift_bridgeObjectRetain(v16);
    v17 = sub_1008431EC(7);
    if ((v18 & 1) != 0)
    {
      sub_1004CB7BC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v29, &qword_1013E0230);
    }
    else
    {
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 1;
    }
    swift_bridgeObjectRelease();
    if (v32 == 1)
      goto LABEL_8;
    sub_1004C4938((uint64_t)&v29, (uint64_t)v33, &qword_1013E0230);
    if (!v34)
    {
      v19 = &qword_1013E0230;
      v20 = (uint64_t *)v33;
      goto LABEL_9;
    }
    v21 = swift_dynamicCast(v10, v33, (char *)&type metadata for Any + 8, v11, 6);
    v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
    v22(v10, v21 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      goto LABEL_10;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v23 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v23 == &off_1014007D0)
      v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v24 = 0;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v14, v11);
    v22(v7, 0, 1, v11);
    swift_beginAccess(v24 + qword_101480208, v33, 33, 0);
    v25 = type metadata accessor for CRLURLItemCRDTData(0);
    v26 = sub_10083BC7C(&qword_1013F53E0, (uint64_t)&unk_100F20674);
    swift_retain(v23);
    CRStruct_1.apply(_:)(v7, v25, v26);
    swift_endAccess(v33);
    swift_release(v23);
    sub_1004CB800((uint64_t)v7, &qword_1013F53D0);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_10083A290(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_10083A2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  void *v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _BYTE v32[32];
  _BYTE v33[24];
  _BYTE v34[24];
  void *v35;
  uint64_t v36;

  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xED00006174614472, 0x617461446C7275, 0xE700000000000000, 0);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    v6 = *(_QWORD *)(v4 + 16);
    if (v6)
    {
      v7 = OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload;
      v8 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
      swift_bridgeObjectRetain(v4);
      v9 = (_QWORD *)(v4 + 40);
      do
      {
        v11 = *(v9 - 1);
        v10 = *v9;
        v12 = v11 == 0x614463696D6F7461 && v10 == 0xEA00000000006174;
        if (v12
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x614463696D6F7461, 0xEA00000000006174, *(v9 - 1), *v9, 0) & 1) != 0)
        {
          v13 = *(void **)(v0 + v7);
          *(_QWORD *)(v0 + v7) = 0;

          v35 = &type metadata for Bool;
          v34[0] = 1;
          swift_beginAccess(v8, v33, 33, 0);
          sub_1004CB7BC((uint64_t)v34, (uint64_t)v32, &qword_1013E0230);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
          v15 = *v8;
          v31 = (_QWORD *)*v8;
          *v8 = 0x8000000000000000;
          v17 = sub_100843260(49);
          v18 = *(_QWORD *)(v15 + 16);
          v19 = (v16 & 1) == 0;
          v20 = v18 + v19;
          if (__OFADD__(v18, v19))
          {
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            type metadata accessor for CRLChangeProperty(0);
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v30);
            __break(1u);
            JUMPOUT(0x10083A77CLL);
          }
          v21 = v16;
          if (*(_QWORD *)(v15 + 24) >= v20)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_10082C8D0();
          }
          else
          {
            sub_100814B68(v20, isUniquelyReferenced_nonNull_native);
            v22 = sub_100843260(49);
            if ((v21 & 1) != (v23 & 1))
              goto LABEL_27;
            v17 = v22;
          }
          if ((v21 & 1) != 0)
          {
            sub_100582338((uint64_t)v32, v31[7] + 32 * v17, &qword_1013E0230);
          }
          else
          {
            v31[(v17 >> 6) + 8] |= 1 << v17;
            *(_QWORD *)(v31[6] + 8 * v17) = 49;
            sub_1004C4938((uint64_t)v32, v31[7] + 32 * v17, &qword_1013E0230);
            v24 = v31[2];
            v25 = __OFADD__(v24, 1);
            v26 = v24 + 1;
            if (v25)
              goto LABEL_26;
            v31[2] = v26;
          }
          *v8 = v31;
          swift_bridgeObjectRelease();
          swift_endAccess(v33);
          sub_1004CB800((uint64_t)v34, &qword_1013E0230);
        }
        else
        {
          v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v27, &v36);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v11;
          *(_QWORD *)(inited + 40) = v10;
          swift_bridgeObjectRetain(v10);
          swift_setDeallocating(inited);
          v29 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v29);
        }
        v9 += 2;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_getObjectType(v2);
    sub_10077C7C0(v1, v4, v3, v2, v0);
  }
}

_QWORD *sub_10083A7F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD *v11;
  _UNKNOWN ****v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _BYTE v25[24];

  v1 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v1);
  v3 = &v25[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_1007763B0();
  v12 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v12 == &off_1014007D0)
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v13 = 0;
  swift_beginAccess(v13 + qword_101480208, v25, 32, 0);
  swift_retain(v12);
  v14 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v14);
  swift_endAccess(v25);
  v15 = swift_release(v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t, __n128))(v8 + 16))(v6, &v3[*(int *)(v1 + 20)], v7, v15);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLURLItemAtomicDataStruct);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v6, &qword_1013E04D0);
  }
  else
  {
    v16 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v17 = URL.absoluteString.getter(v16);
    v19 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100D0EF94(0, v11[2] + 1, 1, v11);
    v21 = v11[2];
    v20 = v11[3];
    if (v21 >= v20 >> 1)
      v11 = sub_100D0EF94((_QWORD *)(v20 > 1), v21 + 1, 1, v11);
    v11[2] = v21 + 1;
    v22 = &v11[2 * v21];
    v22[4] = v17;
    v22[5] = v19;
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11;
}

void sub_10083AA68()
{
  uint64_t v0;

}

id sub_10083AA78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10083AABC()
{
  return type metadata accessor for CRLURLItem(0);
}

uint64_t type metadata accessor for CRLURLItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F53C0;
  if (!qword_1013F53C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLURLItem);
  return result;
}

uint64_t sub_10083AB00(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 1000);
}

uint64_t sub_10083AB40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _UNKNOWN ****v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];

  v3 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 == &off_1014007D0)
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v7 = 0;
  swift_beginAccess(v7 + qword_101480208, v14, 32, 0);
  swift_retain(v6);
  v8 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v8);
  swift_endAccess(v14);
  swift_release(v6);
  v9 = &v5[*(int *)(v3 + 20)];
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v11 + 16))(a1, v9, v10);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLURLItemAtomicDataStruct);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
}

id sub_10083AC7C(uint64_t a1, uint64_t a2, _BYTE *a3, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  id v32;
  _QWORD *v33;
  id v34;
  double v35;
  float v36;
  double v37;
  float v38;
  double v39;
  float v40;
  double v41;
  float v42;
  double v43;
  float v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  _BYTE *v48;
  uint64_t v49;
  float *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _BYTE *v67;
  void (*v68)(_BYTE *, uint64_t);
  _QWORD *v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  objc_class *v76;
  id v77;
  uint64_t ObjectType;
  _BYTE v80[4];
  unsigned int v81;
  void (*v82)(_BYTE *, uint64_t, uint64_t, uint64_t);
  id v83;
  uint64_t v84;
  _BYTE *v85;
  void (*v86)(_BYTE *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  id v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  _BYTE *v106;
  objc_super v107;
  char v108;
  _OWORD v109[8];
  _BYTE v110[136];

  v106 = a3;
  v101 = a2;
  v99 = a1;
  v95 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v95);
  v96 = &v80[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v105 = type metadata accessor for URL(0);
  v94 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v93 = &v80[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v80[-v9];
  v11 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v11);
  v97 = &v80[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v98 = &v80[-v14];
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v89 = &v80[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v88 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v88);
  v91 = &v80[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v104 = &v80[-v20];
  v21 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v21);
  v85 = &v80[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  v25 = &v80[-v24];
  v84 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v84);
  v27 = &v80[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  v100 = v4;
  v103 = &v80[-v29];
  v92 = v10;
  if (a4)
  {
    v30 = v4;
    v31 = a4;
  }
  else
  {
    v32 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    v33 = v4;
    v31 = objc_msgSend(v32, "init");
  }
  v86 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16);
  v86(v25, v101, v15);
  v82 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v82(v25, 0, 1, v15);
  v90 = a4;
  v34 = v31;
  objc_msgSend(v34, "position");
  v36 = v35;
  v38 = v37;
  objc_msgSend(v34, "size");
  v40 = v39;
  v42 = v41;
  objc_msgSend(v34, "angle");
  v44 = v43;
  v81 = objc_msgSend(v34, "widthValid");
  v45 = objc_msgSend(v34, "heightValid");
  v46 = objc_msgSend(v34, "horizontalFlip");
  v47 = objc_msgSend(v34, "verticalFlip");
  v83 = v34;

  v87 = v16;
  v48 = v85;
  sub_1004CB7BC((uint64_t)v25, (uint64_t)v85, (uint64_t *)&unk_1013E1A50);
  v102 = v15;
  v82(v27, 1, 1, v15);
  v49 = v84;
  *(_QWORD *)&v27[*(int *)(v84 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338((uint64_t)v48, (uint64_t)v27, (uint64_t *)&unk_1013E1A50);
  v50 = (float *)&v27[*(int *)(v49 + 20)];
  *v50 = v36;
  v50[1] = v38;
  v50[2] = v40;
  v50[3] = v42;
  v50[4] = v44;
  *((_BYTE *)v50 + 20) = v81;
  *((_BYTE *)v50 + 21) = v45;
  *((_BYTE *)v50 + 22) = v46;
  *((_BYTE *)v50 + 23) = v47;
  *((_QWORD *)v50 + 3) = _swiftEmptyDictionarySingleton;
  v51 = v103;
  sub_1004B84E0((uint64_t)v27, (uint64_t)v103, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460((uint64_t)v51, (uint64_t)v27, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004C3A10(v109);
  v52 = sub_1004C4938((uint64_t)v109, (uint64_t)v110, (uint64_t *)&unk_1013F02D0);
  v53 = (uint64_t)v89;
  UUID.init()(v52);
  v54 = v104;
  sub_100D5EF54(v53, (uint64_t)v27, 0, 0, 0, 0xE000000000000000, (uint64_t)v110, (uint64_t)v104);
  v108 = 1;
  v55 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.setter(&v108, v55, v56);
  v57 = v94;
  v58 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v94 + 16);
  v59 = v92;
  v60 = v105;
  v58(v92, (uint64_t)v106, v105);
  if (qword_1013DDE28 != -1)
    swift_once(&qword_1013DDE28, sub_100C88730);
  v61 = v102;
  v62 = sub_1004F2A1C(v102, (uint64_t)qword_101481278);
  v63 = (uint64_t)v96;
  v86(v96, v62, v61);
  v64 = v95;
  v65 = (_QWORD *)(v63 + *(int *)(v95 + 20));
  *v65 = 0;
  v65[1] = 0xE000000000000000;
  *(_QWORD *)(v63 + *(int *)(v64 + 24)) = _swiftEmptyDictionarySingleton;
  v66 = (uint64_t)v93;
  v58(v93, (uint64_t)v59, v60);
  v67 = v98;
  sub_1009DDBD4(v63, v66, (uint64_t)v98);
  v68 = *(void (**)(_BYTE *, uint64_t))(v57 + 8);
  v68(v59, v60);
  v69 = v100;

  v70 = v91;
  sub_1004CB7BC((uint64_t)v54, (uint64_t)v91, (uint64_t *)&unk_1013F02C0);
  v71 = v97;
  sub_1004B8460((uint64_t)v67, (uint64_t)v97, type metadata accessor for CRLURLItemCRDTData);
  v72 = type metadata accessor for CRLURLItemData(0);
  v73 = swift_allocObject(v72, *(unsigned int *)(v72 + 48), *(unsigned __int16 *)(v72 + 52));
  sub_1004B84E0((uint64_t)v71, v73 + qword_101480208, type metadata accessor for CRLURLItemCRDTData);
  sub_1004C4938((uint64_t)v70, v73 + *(_QWORD *)(*(_QWORD *)v73 + 632), (uint64_t *)&unk_1013F02C0);
  v74 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  v75 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLURLItem(0));
  *(_QWORD *)&v75[OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload] = 0;
  *(_QWORD *)&v75[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v99;
  *(_QWORD *)&v75[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v74;
  v76 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v107.receiver = v75;
  v107.super_class = v76;
  v77 = objc_msgSendSuper2(&v107, "init");

  v68(v106, v105);
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v101, v102);
  sub_1004B84A4((uint64_t)v67, type metadata accessor for CRLURLItemCRDTData);
  sub_1004CB800((uint64_t)v104, (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4((uint64_t)v103, type metadata accessor for CRLBoardItemParentAffinity);
  ObjectType = swift_getObjectType(v69);
  swift_deallocPartialClassInstance(v69, ObjectType, *(unsigned int *)((swift_isaMask & *v69) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v69) + 0x34));
  return v77;
}

id sub_10083B4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  id v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  id v34;
  double v35;
  float v36;
  double v37;
  float v38;
  double v39;
  float v40;
  double v41;
  float v42;
  double v43;
  float v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  objc_class *v71;
  id v72;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  unsigned int v75;
  void (*v76)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  objc_super v100;
  char v101;
  _OWORD v102[8];
  _BYTE v103[136];

  v97 = a4;
  v98 = a3;
  v91 = a1;
  v92 = type metadata accessor for URL(0);
  v96 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v88 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v8);
  v85 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLAssetData(0);
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  __chkstk_darwin(v10);
  v86 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v12);
  v87 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v90 = (uint64_t)&v74 - v15;
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v80 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v79);
  v84 = (uint64_t)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v99 = (uint64_t)&v74 - v21;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v22);
  v78 = (uint64_t)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v74 - v25;
  v77 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v77);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v29);
  v95 = (uint64_t)&v74 - v31;
  if (a5)
    v32 = a5;
  else
    v32 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v93 = a2;
  v74 = v33;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v26, a2, v16, v30);
  v89 = v17;
  v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v76(v26, 0, 1, v16);
  v81 = a5;
  v34 = v32;
  objc_msgSend(v34, "position");
  v36 = v35;
  v38 = v37;
  objc_msgSend(v34, "size");
  v40 = v39;
  v42 = v41;
  objc_msgSend(v34, "angle");
  v44 = v43;
  v75 = objc_msgSend(v34, "widthValid");
  v45 = objc_msgSend(v34, "heightValid");
  v46 = objc_msgSend(v34, "horizontalFlip");
  v47 = objc_msgSend(v34, "verticalFlip");

  v48 = v78;
  sub_1004CB7BC((uint64_t)v26, v78, (uint64_t *)&unk_1013E1A50);
  v94 = v16;
  v76(v28, 1, 1, v16);
  v49 = v77;
  *(_QWORD *)&v28[*(int *)(v77 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338(v48, (uint64_t)v28, (uint64_t *)&unk_1013E1A50);
  v50 = &v28[*(int *)(v49 + 20)];
  *(float *)v50 = v36;
  *((float *)v50 + 1) = v38;
  *((float *)v50 + 2) = v40;
  *((float *)v50 + 3) = v42;
  *((float *)v50 + 4) = v44;
  v50[20] = v75;
  v50[21] = v45;
  v50[22] = v46;
  v50[23] = v47;
  *((_QWORD *)v50 + 3) = _swiftEmptyDictionarySingleton;
  v51 = v95;
  sub_1004B84E0((uint64_t)v28, v95, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460(v51, (uint64_t)v28, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004C3A10(v102);
  v52 = sub_1004C4938((uint64_t)v102, (uint64_t)v103, (uint64_t *)&unk_1013F02D0);
  v53 = (uint64_t)v80;
  UUID.init()(v52);
  sub_100D5EF54(v53, (uint64_t)v28, 0, 0, 0, 0xE000000000000000, (uint64_t)v103, v99);
  v101 = 1;
  v54 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.setter(&v101, v54, v55);
  v56 = v85;
  sub_1004CB7BC(v98, v85, (uint64_t *)&unk_1013E9BE0);
  v57 = v83;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v56, 1, v83) == 1)
  {
    v58 = v86;
    if (qword_1013DDE28 != -1)
      swift_once(&qword_1013DDE28, sub_100C88730);
    v59 = v94;
    v60 = sub_1004F2A1C(v94, (uint64_t)qword_101481278);
    v74(v58, v60, v59);
    v61 = (_QWORD *)(v58 + *(int *)(v57 + 20));
    *v61 = 0;
    v61[1] = 0xE000000000000000;
    *(_QWORD *)(v58 + *(int *)(v57 + 24)) = _swiftEmptyDictionarySingleton;
    sub_1004CB800(v56, (uint64_t *)&unk_1013E9BE0);
  }
  else
  {
    v58 = v86;
    sub_1004B84E0(v56, v86, type metadata accessor for CRLAssetData);
  }
  v62 = (uint64_t)v88;
  v63 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v88, v97, v92);
  v64 = v90;
  sub_1009DDBD4(v58, v62, v90);
  v65 = v84;
  sub_1004CB7BC(v99, v84, (uint64_t *)&unk_1013F02C0);
  v66 = v87;
  sub_1004B8460(v64, v87, type metadata accessor for CRLURLItemCRDTData);
  v67 = type metadata accessor for CRLURLItemData(0);
  v68 = swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
  sub_1004B84E0(v66, v68 + qword_101480208, type metadata accessor for CRLURLItemCRDTData);
  sub_1004C4938(v65, v68 + *(_QWORD *)(*(_QWORD *)v68 + 632), (uint64_t *)&unk_1013F02C0);
  v69 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  v70 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLURLItem(0));
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload] = 0;
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v91;
  *(_QWORD *)&v70[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v69;
  v71 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v100.receiver = v70;
  v100.super_class = v71;
  v72 = objc_msgSendSuper2(&v100, "init");

  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v97, v63);
  sub_1004CB800(v98, (uint64_t *)&unk_1013E9BE0);
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v93, v94);
  sub_1004B84A4(v64, type metadata accessor for CRLURLItemCRDTData);
  sub_1004CB800(v99, (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v95, type metadata accessor for CRLBoardItemParentAffinity);
  return v72;
}

uint64_t sub_10083BC7C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CRLURLItemCRDTData(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10083BCBC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10083BD20(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10083BDA0 + 4 * byte_100F0F855[a2]))(0x52436E6F6D6D6F63);
}

uint64_t sub_10083BDA0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x52436E6F6D6D6F63 && v1 == 0xEE00617461445444)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x52436E6F6D6D6F63, 0xEE00617461445444, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEE00617461445444);
  return v2 & 1;
}

uint64_t sub_10083BE58(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6572646C696863;
  else
    v3 = 1835365481;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6E6572646C696863;
  else
    v5 = 1835365481;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10083BEF4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F4E796B63697473;
  else
    v3 = 0x786F6274786574;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEA00000000006574;
  if ((a2 & 1) != 0)
    v5 = 0x6F4E796B63697473;
  else
    v5 = 0x786F6274786574;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006574;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10083BF9C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6863746566;
  else
    v3 = 1702257011;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6863746566;
  else
    v5 = 1702257011;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10083C034(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 1835365481;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x73616C43657A6973;
    else
      v4 = 0x73746E65746E6F63;
    if (v3 == 1)
      v5 = 0xE900000000000073;
    else
      v5 = 0xED0000656C616353;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x73616C43657A6973;
      else
        v2 = 0x73746E65746E6F63;
      if (v6 == 1)
        v7 = 0xE900000000000073;
      else
        v7 = 0xED0000656C616353;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 1835365481;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v4 != 1835365481)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10083C15C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x49656C6261646F63;
  else
    v3 = 0x654B70756B6F6F6CLL;
  if (v2)
    v4 = 0xE900000000000079;
  else
    v4 = 0xEC0000006567616DLL;
  if ((a2 & 1) != 0)
    v5 = 0x49656C6261646F63;
  else
    v5 = 0x654B70756B6F6F6CLL;
  if ((a2 & 1) != 0)
    v6 = 0xEC0000006567616DLL;
  else
    v6 = 0xE900000000000079;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_10083C20C(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 2003789939;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 1701079400;
    else
      v4 = 0x656C67676F74;
    if (v3 == 1)
      v5 = 0xE400000000000000;
    else
      v5 = 0xE600000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 1701079400;
      else
        v2 = 0x656C67676F74;
      if (v6 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE600000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 2003789939;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v4 != 2003789939)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10083C2FC(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x657469726F766166;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x69726F7661666E75;
    else
      v4 = 0x656C67676F74;
    if (v3 == 1)
      v5 = 0xEA00000000006574;
    else
      v5 = 0xE600000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x69726F7661666E75;
      else
        v2 = 0x656C67676F74;
      if (v6 == 1)
        v7 = 0xEA00000000006574;
      else
        v7 = 0xE600000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = 0x657469726F766166;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v4 != 0x657469726F766166)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

void sub_10083C414(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10083C45C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10083C4DC + 4 * byte_100F0F860[a2]))(1701734764);
}

uint64_t sub_10083C4DC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701734764 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1701734764, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE400000000000000);
  return v2 & 1;
}

void sub_10083C5AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10083C5EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10083C65C + 4 * byte_100F0F86A[a2]))(0x63696C617469);
}

uint64_t sub_10083C65C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x63696C617469 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x63696C617469, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_10083C710(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10083C76C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10083C858 + 4 * byte_100F0F876[a2]))(0x6472616F42);
}

uint64_t sub_10083C858(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6472616F42 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6472616F42, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_10083C9A0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10083CA04(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10083CA84 + 4 * byte_100F0F883[a2]))(0x4F746E65746E6F63);
}

uint64_t sub_10083CA84(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x4F746E65746E6F63 && v1 == 0xED00007465736666)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x4F746E65746E6F63, 0xED00007465736666, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xED00007465736666);
  return v2 & 1;
}

void sub_10083CB48(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10083CB90(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10083CC28 + 4 * byte_100F0F890[a2]))(1702194274);
}

uint64_t sub_10083CC28(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1702194274 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 1702194274, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE400000000000000);
  return v2 & 1;
}

uint64_t sub_10083CD20(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8;
  unint64_t v9;
  const char *v10;
  const char *v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  const char *v15;
  char v16;

  v8 = 0xD000000000000029;
  v9 = 0x8000000100FAA6F0;
  switch(a2)
  {
    case 0uLL:
      goto LABEL_11;
    case 1uLL:
      v8 = 0xD000000000000023;
      v10 = "com.apple.Freeform.system.font.thin";
      goto LABEL_10;
    case 2uLL:
      v11 = "com.apple.Freeform.system.font.light";
      goto LABEL_15;
    case 3uLL:
      v8 = 0xD000000000000026;
      v10 = "com.apple.Freeform.system.font.regular";
      goto LABEL_10;
    case 4uLL:
      v8 = 0xD000000000000025;
      v10 = "com.apple.Freeform.system.font.medium";
      goto LABEL_10;
    case 5uLL:
      v8 = 0xD000000000000027;
      v10 = "com.apple.Freeform.system.font.semibold";
      goto LABEL_10;
    case 6uLL:
      v8 = 0xD000000000000023;
      v10 = "com.apple.Freeform.system.font.bold";
LABEL_10:
      v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      goto LABEL_11;
    case 7uLL:
      v11 = "com.apple.Freeform.system.font.heavy";
      goto LABEL_15;
    case 8uLL:
      v11 = "com.apple.Freeform.system.font.black";
LABEL_15:
      v9 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      v8 = 0xD000000000000024;
      if (a4 > 8)
        goto LABEL_16;
      goto LABEL_11;
    default:
      v8 = a1;
      v9 = a2;
      if (a4 <= 8)
      {
LABEL_11:
        v12 = 0xD000000000000029;
        v13 = 0x8000000100FAA6F0;
        switch(a4)
        {
          case 0uLL:
            goto LABEL_24;
          case 1uLL:
            v12 = 0xD000000000000023;
            v14 = "com.apple.Freeform.system.font.thin";
            goto LABEL_23;
          case 2uLL:
            v15 = "com.apple.Freeform.system.font.light";
            goto LABEL_28;
          case 3uLL:
            v12 = 0xD000000000000026;
            v14 = "com.apple.Freeform.system.font.regular";
            goto LABEL_23;
          case 4uLL:
            v12 = 0xD000000000000025;
            v14 = "com.apple.Freeform.system.font.medium";
            goto LABEL_23;
          case 5uLL:
            v12 = 0xD000000000000027;
            v14 = "com.apple.Freeform.system.font.semibold";
            goto LABEL_23;
          case 6uLL:
            v12 = 0xD000000000000023;
            v14 = "com.apple.Freeform.system.font.bold";
LABEL_23:
            v13 = (unint64_t)(v14 - 32) | 0x8000000000000000;
LABEL_24:
            if (v8 != v12)
              goto LABEL_31;
            goto LABEL_29;
          case 7uLL:
            v15 = "com.apple.Freeform.system.font.heavy";
            goto LABEL_28;
          case 8uLL:
            v15 = "com.apple.Freeform.system.font.black";
LABEL_28:
            v13 = (unint64_t)(v15 - 32) | 0x8000000000000000;
            v12 = 0xD000000000000024;
            if (v8 == 0xD000000000000024)
              goto LABEL_29;
            goto LABEL_31;
          default:
            break;
        }
      }
LABEL_16:
      v12 = a3;
      v13 = a4;
      if (v8 != a3)
        goto LABEL_31;
LABEL_29:
      if (v9 == v13)
        v16 = 1;
      else
LABEL_31:
        v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v12, v13, 0);
      sub_1004C4924(a1, a2);
      sub_1004C4924(a3, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16 & 1;
  }
}

uint64_t sub_10083CF60(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 7889261;
  else
    v2 = 7235949;
  if ((a2 & 1) != 0)
    v3 = 7889261;
  else
    v3 = 7235949;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE300000000000000, v3, 0xE300000000000000, 0);
  swift_bridgeObjectRelease_n(0xE300000000000000, 2);
  return v4 & 1;
}

void sub_10083CFCC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10083D010(uint64_t a1)
{
  String.hash(into:)(a1, 0x52436E6F6D6D6F63, 0xEE00617461445444);
  return swift_bridgeObjectRelease(0xEE00617461445444);
}

void sub_10083D0A0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10083D0DC(uint64_t a1)
{
  String.hash(into:)(a1, 1701734764, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

void sub_10083D154(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10083D198(uint64_t a1)
{
  String.hash(into:)(a1, 0x6472616F42, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_10083D280(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10083D2C4(uint64_t a1)
{
  String.hash(into:)(a1, 0x4F746E65746E6F63, 0xED00007465736666);
  return swift_bridgeObjectRelease(0xED00007465736666);
}

void sub_10083D350(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_10083D38C(uint64_t a1)
{
  String.hash(into:)(a1, 1702194274, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

double sub_10083D41C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  const char *v6;
  const char *v7;
  double result;

  v4 = 0xD000000000000029;
  v5 = 0x8000000100FAA6F0;
  switch(a3)
  {
    case 0uLL:
      break;
    case 1uLL:
      v4 = 0xD000000000000023;
      v6 = "com.apple.Freeform.system.font.thin";
      goto LABEL_9;
    case 2uLL:
      v7 = "com.apple.Freeform.system.font.light";
      goto LABEL_12;
    case 3uLL:
      v4 = 0xD000000000000026;
      v6 = "com.apple.Freeform.system.font.regular";
      goto LABEL_9;
    case 4uLL:
      v4 = 0xD000000000000025;
      v6 = "com.apple.Freeform.system.font.medium";
      goto LABEL_9;
    case 5uLL:
      v4 = 0xD000000000000027;
      v6 = "com.apple.Freeform.system.font.semibold";
      goto LABEL_9;
    case 6uLL:
      v4 = 0xD000000000000023;
      v6 = "com.apple.Freeform.system.font.bold";
LABEL_9:
      v5 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 7uLL:
      v7 = "com.apple.Freeform.system.font.heavy";
      goto LABEL_12;
    case 8uLL:
      v7 = "com.apple.Freeform.system.font.black";
LABEL_12:
      v5 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      v4 = 0xD000000000000024;
      break;
    default:
      v4 = a2;
      v5 = a3;
      break;
  }
  sub_1004C4924(a2, a3);
  String.hash(into:)(a1, v4, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_10083D530(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10083D580()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x52436E6F6D6D6F63, 0xEE00617461445444);
  swift_bridgeObjectRelease(0xEE00617461445444);
  return Hasher._finalize()();
}

void sub_10083D624(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10083D66C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 1701734764, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

void sub_10083D6F8(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10083D748()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6472616F42, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_10083D844(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10083D894()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x4F746E65746E6F63, 0xED00007465736666);
  swift_bridgeObjectRelease(0xED00007465736666);
  return Hasher._finalize()();
}

void sub_10083D934(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_10083D97C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 1702194274, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

double sub_10083DA20(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (*(_QWORD *)(a1 + 24) == 1)
  {
    sub_1004CB800(a1, (uint64_t *)&unk_1013DFC00);
    sub_100846D40(a2, v8);
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013DFC00);
  }
  else
  {
    sub_1004C4938(a1, (uint64_t)v8, &qword_1013E0230);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v7 = *v2;
    *v2 = 0x8000000000000000;
    sub_1008257E4((uint64_t)v8, a2, isUniquelyReferenced_nonNull_native);
    v6 = *v2;
    *v2 = v7;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_10083DAD8(uint64_t a1, Swift::UInt a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    sub_1004CB800(a1, (uint64_t *)&unk_1013DFC00);
    v5 = sub_1008432EC(a2);
    if ((v6 & 1) != 0)
    {
      v7 = v5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
      v9 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10082C8D0();
        v9 = v13;
      }
      sub_1004C4938(*(_QWORD *)(v9 + 56) + 32 * v7, (uint64_t)v15, &qword_1013E0230);
      sub_100519F64(v7, v9);
      v10 = *v3;
      *v3 = v9;
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      memset(v15, 0, 24);
      v15[3] = 1;
    }
    sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013DFC00);
  }
  else
  {
    sub_1004C4938(a1, (uint64_t)v15, &qword_1013E0230);
    v11 = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_1008258FC((uint64_t)v15, a2, v11);
    v12 = *v2;
    *v2 = v14;
    swift_bridgeObjectRelease(v12);
  }
}

uint64_t sub_10083DC00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1700);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1004CB800(a1, (uint64_t *)&unk_1013E1700);
    sub_100846E28(a2, (uint64_t)v8);
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1700);
  }
  else
  {
    sub_1004C4938(a1, (uint64_t)v11, (uint64_t *)&unk_1013F13A0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_100825B60((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v16);
    v17 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_10083DD84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1004CB800(a1, (uint64_t *)&unk_1013E1A50);
    sub_10084707C(a2, (uint64_t)v8);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_100826288((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 8))(a2, v9, v17);
  }
}

uint64_t sub_10083DEF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E1528);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLRealTimeEnter(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1004CB800(a1, &qword_1013E1528);
    sub_100847D68(a2, type metadata accessor for CRLRealTimeEnter, (void (*)(unint64_t, uint64_t))sub_10051A848, sub_10082D72C, (uint64_t)v8);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_1004CB800((uint64_t)v8, &qword_1013E1528);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v12, type metadata accessor for CRLRealTimeEnter);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v20 = *v3;
    *v3 = 0x8000000000000000;
    sub_100826438((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v17 = *v3;
    *v3 = v20;
    swift_bridgeObjectRelease(v17);
    v18 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a2, v18);
  }
}

void sub_10083E090(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  __n128 v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013EB4C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E1798);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1004CB800(a1, &qword_1013EB4C8);
    v13 = sub_100843D6C(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v18 = *v3;
      v24 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_10082D740();
        v18 = v24;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, v9);
      sub_10051A854(v16, v18);
      v19 = *v3;
      *v3 = v18;
      v14 = swift_bridgeObjectRelease(v19);
      v20 = 0;
    }
    else
    {
      v20 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, v20, 1, v9, v14);
    sub_1004CB800((uint64_t)v8, &qword_1013EB4C8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v21 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v24 = *v3;
    *v3 = 0x8000000000000000;
    sub_10082644C((uint64_t)v12, a2, v21);
    v22 = *v3;
    *v3 = v24;
    swift_bridgeObjectRelease(v22);
  }
}

uint64_t sub_10083E26C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_10050CB14((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v9 = *v2;
    *v2 = 0x8000000000000000;
    sub_1008269C4(v10, a2, isUniquelyReferenced_nonNull_native);
    v5 = *v2;
    *v2 = v9;
    swift_bridgeObjectRelease(v5);
    v6 = type metadata accessor for CodingUserInfoKey(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
  }
  else
  {
    sub_1004CB800(a1, &qword_1013E0230);
    sub_10084739C(a2, v10);
    v8 = type metadata accessor for CodingUserInfoKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a2, v8);
    return sub_1004CB800((uint64_t)v10, &qword_1013E0230);
  }
}

uint64_t sub_10083E350(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardEntity(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1004CB800(a1, &qword_1013FE140);
    sub_100848588(a2, type metadata accessor for CRLBoardEntity, (void (*)(unint64_t, uint64_t))sub_10051B750, sub_10082F548, (uint64_t)v8);
    sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_1004CB800((uint64_t)v8, &qword_1013FE140);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v11, type metadata accessor for CRLBoardEntity);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_100827704((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v17;
    swift_bridgeObjectRelease(v15);
    return sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t sub_10083E4D0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[56];

  if (*a1)
  {
    sub_10062E5D8((uint64_t)a1, (uint64_t)v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v9 = *v2;
    *v2 = 0x8000000000000000;
    sub_1008285D4((uint64_t)v10, a2, isUniquelyReferenced_nonNull_native);
    v5 = *v2;
    *v2 = v9;
    swift_bridgeObjectRelease(v5);
    v6 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
  }
  else
  {
    sub_1004CB800((uint64_t)a1, &qword_1013F07B0);
    sub_100847A38(a2, (uint64_t)v10);
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a2, v8);
    return sub_1004CB800((uint64_t)v10, &qword_1013F07B0);
  }
}

double sub_10083E5B4(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013F1EF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLThrottleInfo(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1004CB800(a1, &qword_1013F1EF0);
    sub_100847C34((uint64_t)a2, type metadata accessor for CRLThrottleInfo, sub_10051C898, sub_10083128C, (uint64_t)v8);

    sub_1004CB800((uint64_t)v8, &qword_1013F1EF0);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v12, type metadata accessor for CRLThrottleInfo);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_100828760((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;

    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

double sub_10083E720(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013F20B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLZoneSyncResultScenarios(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1004CB800(a1, &qword_1013F20B0);
    sub_100847C34((uint64_t)a2, type metadata accessor for CRLZoneSyncResultScenarios, sub_10051C8B0, sub_100831B34, (uint64_t)v8);

    sub_1004CB800((uint64_t)v8, &qword_1013F20B0);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v12, type metadata accessor for CRLZoneSyncResultScenarios);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_100828A64((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;

    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_10083E88C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013F2768);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1004CB800(a1, &qword_1013F2768);
    sub_100847D68(a2, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa, (void (*)(unint64_t, uint64_t))sub_10051CAA0, sub_1008322CC, (uint64_t)v8);
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_1004CB800((uint64_t)v8, &qword_1013F2768);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v12, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v20 = *v3;
    *v3 = 0x8000000000000000;
    sub_100828E40((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v17 = *v3;
    *v3 = v20;
    swift_bridgeObjectRelease(v17);
    v18 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a2, v18);
  }
}

uint64_t sub_10083EA24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1004CB800(a1, &qword_1013E04F0);
    sub_100847EB4(a2, (uint64_t)v8);
    sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_1004CB800((uint64_t)v8, &qword_1013E04F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_100829428((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    swift_bridgeObjectRelease();
    return sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

double sub_10083EB98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  unint64_t v8;
  double result;
  char v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v16 = *v2;
    *v2 = 0x8000000000000000;
    sub_10082976C(a1, a2, isUniquelyReferenced_nonNull_native);
    v7 = *v2;
    *v2 = v16;
  }
  else
  {
    v8 = sub_100843D6C(a2);
    if ((v10 & 1) == 0)
      return result;
    v11 = v8;
    v12 = swift_isUniquelyReferenced_nonNull_native(*v2);
    v13 = *v2;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!v12)
    {
      sub_100833060();
      v13 = v17;
    }
    v14 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v11);
    sub_10051CDB0(v11, v13);
    v15 = *v3;
    *v3 = v13;

    v7 = v15;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

double sub_10083EC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_1004CB800(a1, (uint64_t *)&unk_1013E1A50);
    sub_100848108(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease(a3);
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_100829B4C((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    v17 = *v4;
    *v4 = v19;
    swift_bridgeObjectRelease(a3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_10083EDE8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1004CB800(a1, &qword_1013E0270);
    sub_100848238(a2, (uint64_t)v8);
    sub_1004B84A4(a2, type metadata accessor for CRLAssetReferrerIdentifier);
    return sub_1004CB800((uint64_t)v8, &qword_1013E0270);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_100829CC4((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v18;
    swift_bridgeObjectRelease(v16);
    return sub_1004B84A4(a2, type metadata accessor for CRLAssetReferrerIdentifier);
  }
}

void sub_10083EF50(uint64_t a1, void *a2)
{
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_10050CB14((_OWORD *)a1, v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v5 = *v2;
    *v2 = 0x8000000000000000;
    sub_10082A2CC(v6, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v5;

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1004CB800(a1, &qword_1013E0230);
    sub_10084838C((uint64_t)a2, v6);

    sub_1004CB800((uint64_t)v6, &qword_1013E0230);
  }
}

double sub_10083F008(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v5 = a2 & 1;
  v6 = sub_1004B804C(&qword_1013F5480);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLSyncScheduledActivity(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_1004CB800(a1, &qword_1013F5480);
    sub_100848470(v5, (uint64_t)v8);
    sub_1004CB800((uint64_t)v8, &qword_1013F5480);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v12, type metadata accessor for CRLSyncScheduledActivity);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_10082A450((uint64_t)v12, v5, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_10083F150(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E4690);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1004CB800(a1, &qword_1013E4690);
    sub_100848588(a2, type metadata accessor for CRLBoardViewModelMetadata, (void (*)(unint64_t, uint64_t))sub_10051E068, sub_10082F52C, (uint64_t)v8);
    sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_1004CB800((uint64_t)v8, &qword_1013E4690);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v11, type metadata accessor for CRLBoardViewModelMetadata);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_10082A6AC((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v17;
    swift_bridgeObjectRelease(v15);
    return sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t sub_10083F2D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013F5478);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1004CB800(a1, &qword_1013F5478);
    sub_100848588(a2, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata, (void (*)(unint64_t, uint64_t))sub_10051E074, sub_100834F68, (uint64_t)v8);
    sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
    return sub_1004CB800((uint64_t)v8, &qword_1013F5478);
  }
  else
  {
    sub_1004B84E0(a1, (uint64_t)v11, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_10082A6C0((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v15 = *v3;
    *v3 = v17;
    swift_bridgeObjectRelease(v15);
    return sub_1004B84A4(a2, type metadata accessor for CRLBoardIdentifier);
  }
}

uint64_t *CRLMathCalculationController.mathHintsModeChangedNotificationName.unsafeMutableAddressor()
{
  if (qword_1013DD250 != -1)
    swift_once(&qword_1013DD250, sub_100840384);
  return &static CRLMathCalculationController.mathHintsModeChangedNotificationName;
}

unint64_t CRLMathHintsMode.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

double *sub_10083F4A0()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  char *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  __n128 v42;
  uint64_t v43;
  Swift::Int v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  id v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSString v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  Class isa;
  id v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  double *v93;
  unint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  id v104;
  NSString v105;
  id v106;
  NSString v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  Class v112;
  id v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  int v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  _BOOL4 v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  id v138;
  uint64_t v139;
  _QWORD v140[3];
  char v141[8];
  _QWORD v142[3];
  char v143[8];
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E1748);
  v3 = __chkstk_darwin(v2);
  v133 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for CalculateExpression.TokenType(0, v3);
  v128 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v127 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = (unint64_t)_swiftEmptyArrayStorage;
  v7 = CalculateExpression.expression.getter(v6);
  v9 = v8;
  v10 = CalculateExpression.plain.getter();
  v11 = dispatch thunk of CalculateExpression.PlainExpression.tokens.getter();
  swift_release(v10);
  v12 = v11;
  if (v11 >> 62)
  {
LABEL_66:
    if (v12 < 0)
      v96 = v12;
    else
      v96 = v12 & 0xFFFFFFFFFFFFFF8;
    v97 = v12;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v96);
    swift_bridgeObjectRelease(v97);
    v12 = v97;
    if (v13)
      goto LABEL_3;
  }
  else
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
LABEL_3:
      v118 = v1;
      v134 = 0;
      v14 = 0;
      v126 = v12 & 0xC000000000000001;
      v120 = v12 & 0xFFFFFFFFFFFFFF8;
      v122 = v12;
      v119 = v12 + 32;
      v125 = enum case for CalculateExpression.TokenType.literal(_:);
      v121 = enum case for CalculateExpression.TokenType.variable(_:);
      v15 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0)
        v15 = v7 & 0xFFFFFFFFFFFFLL;
      v16 = 11;
      if (((v9 >> 60) & ((v7 & 0x800000000000000) == 0)) == 0)
        v16 = 7;
      v132 = v16 | (v15 << 16);
      v124 = 4 * v15;
      v1 = 15;
      v131 = v9;
      v130 = v7;
      v123 = v13;
      while (1)
      {
        if (v126)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v122);
          v18 = v12;
          v19 = __OFADD__(v14, 1);
          v20 = v14 + 1;
          if (v19)
            goto LABEL_63;
        }
        else
        {
          if (v14 >= *(_QWORD *)(v120 + 16))
            goto LABEL_65;
          v18 = *(_QWORD *)(v119 + 8 * v14);
          swift_retain(v18);
          v19 = __OFADD__(v14, 1);
          v20 = v14 + 1;
          if (v19)
          {
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
        }
        v21 = dispatch thunk of CalculateExpression.Token.text.getter();
        v23 = v22;
        if (String.count.getter(v21, v22) < 2)
        {
          v136 = 0;
          v25 = 0xE000000000000000;
        }
        else
        {
          v136 = sub_100842DA0(v21, v23);
          v25 = v24;
        }
        v26 = objc_msgSend(objc_allocWithZone((Class)PKMathRecognitionToken), "init");
        v27 = v127;
        CalculateExpression.Token.type.getter();
        v28 = (*(uint64_t (**)(char *, uint64_t))(v128 + 88))(v27, v129);
        if (v28 == v125)
        {
          v12 = (uint64_t)objc_msgSend(v26, "setType:", 1);
        }
        else if (v28 == v121)
        {
          v12 = (uint64_t)objc_msgSend(v26, "setType:", 2);
        }
        else
        {
          objc_msgSend(v26, "setType:", 0);
          v12 = (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v127, v129);
        }
        if (v124 < v1 >> 14)
          goto LABEL_64;
        v135 = v20;
        v138 = v26;
        v139 = v18;
        swift_bridgeObjectRetain(v9);
        v29 = String.subscript.getter(v1, v132, v7, v9);
        v31 = v30;
        v33 = v32;
        v35 = v34;
        swift_bridgeObjectRelease(v9);
        v146 = v29;
        v147 = v31;
        v148 = v33;
        v149 = v35;
        v144 = v21;
        v145 = v23;
        v36 = type metadata accessor for Locale(0);
        v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
        v38 = (uint64_t)v133;
        v37(v133, 1, 1, v36);
        v39 = sub_1006318F0();
        v137 = sub_1004D292C();
        v40 = StringProtocol.range<A>(of:options:range:locale:)(&v144, 0, 0, 0, 1, v38, &type metadata for Substring, &type metadata for String, v39, v137);
        LOBYTE(v29) = v41;
        sub_1004CB800(v38, &qword_1013E1748);
        swift_bridgeObjectRelease(v149);
        if ((v29 & 1) != 0)
        {
          swift_bridgeObjectRelease(v23);
          v79 = HIBYTE(v25) & 0xF;
          if ((v25 & 0x2000000000000000) == 0)
            v79 = v136 & 0xFFFFFFFFFFFFLL;
          if (!v79)
            goto LABEL_60;
          v80 = v131;
          swift_bridgeObjectRetain(v131);
          v81 = String.subscript.getter(v1, v132, v130, v80);
          v83 = v82;
          v85 = v84;
          v87 = v86;
          v88 = v80;
          v21 = v136;
          v89 = swift_bridgeObjectRelease(v88);
          v146 = v81;
          v147 = v83;
          v148 = v85;
          v149 = v87;
          v144 = v21;
          v145 = v25;
          v90 = (uint64_t)v133;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v37)(v133, 1, 1, v36, v89);
          v40 = StringProtocol.range<A>(of:options:range:locale:)(&v144, 0, 0, 0, 1, v90, &type metadata for Substring, &type metadata for String, v39, v137);
          LOBYTE(v81) = v91;
          sub_1004CB800(v90, &qword_1013E1748);
          v42 = swift_bridgeObjectRelease(v149);
          if ((v81 & 1) != 0)
          {
LABEL_60:
            swift_bridgeObjectRelease(v25);
            swift_bridgeObjectRelease(v131);
            sub_100757E04(&_mh_execute_header, (uint64_t)"pkTokens", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 387, "Error parsing calculate tokens", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
            v93 = _swiftEmptyArrayStorage;
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pkTokens", 8, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 387, (uint64_t)"Error parsing calculate tokens", 30, 2u);
            swift_bridgeObjectRelease(v122);
            v94 = v150;
            swift_release(v139);

            swift_bridgeObjectRelease(v94);
            return v93;
          }
          v23 = v25;
          if ((v25 & 0x1000000000000000) == 0)
          {
LABEL_28:
            v43 = HIBYTE(v23) & 0xF;
            if ((v23 & 0x2000000000000000) == 0)
              v43 = v21;
            v44 = String.UTF16View._nativeGetOffset(for:)((v43 << 16) | 7, v21, v23, v42);
            goto LABEL_31;
          }
        }
        else
        {
          v42 = swift_bridgeObjectRelease(v25);
          if ((v23 & 0x1000000000000000) == 0)
            goto LABEL_28;
        }
        v44 = String.UTF16View._foreignCount()();
LABEL_31:
        v136 = v44;
        v46 = v138;
        v45 = v139;
        if (objc_msgSend(v138, "type", v118)
          || (v47 = dispatch thunk of CalculateExpression.Token.errors.getter(),
              v48 = *(_QWORD *)(v47 + 16),
              swift_bridgeObjectRelease(v47),
              v48))
        {
          v49 = v40;
          v144 = (uint64_t)_swiftEmptyArrayStorage;
          v50 = dispatch thunk of CalculateExpression.Token.errors.getter();
          v51 = v50;
          v52 = *(_QWORD *)(v50 + 16);
          if (v52)
          {
            v53 = (_QWORD *)(v50 + 32);
            do
            {
              v54 = *v53;
              swift_getErrorValue(*v53, v143, v142);
              v55 = v142[1];
              v56 = v142[2];
              swift_errorRetain(v54);
              v57 = Error.localizedDescription.getter(v55, v56);
              v59 = v58;
              v60 = HIBYTE(v58) & 0xF;
              if ((v58 & 0x2000000000000000) == 0)
                v60 = v57 & 0xFFFFFFFFFFFFLL;
              if (v60)
              {
                v61 = objc_msgSend(objc_allocWithZone((Class)PKMathRecognitionError), "init");
                v62 = String._bridgeToObjectiveC()();
                objc_msgSend(v61, "setErrorString:", v62, swift_bridgeObjectRelease(v59).n128_f64[0]);

                v63 = v61;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
                v65 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v64 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v65 >= v64 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
                v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v63);
                specialized Array._endMutation()(v66);

              }
              else
              {
                swift_bridgeObjectRelease(v58);
              }
              swift_errorRelease(v54);
              ++v53;
              --v52;
            }
            while (v52);
          }
          swift_bridgeObjectRelease(v51);
          v7 = v130;
          v9 = v131;
          v146 = v130;
          v147 = v131;
          v40 = v49;
          v67 = String.Index.utf16Offset<A>(in:)(&v146, v49, &type metadata for String, v137);
          v68 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v69 = swift_bridgeObjectRelease(v23).n128_u64[0];
          v46 = v138;
          objc_msgSend(v138, "setText:", v68, v69);

          v70 = v136;
          objc_msgSend(v46, "setCharacterRange:", v67, v136);
          v71 = v144;
          sub_1004B8930(0, &qword_1013F5498, PKMathRecognitionError_ptr);
          swift_bridgeObjectRetain(v71);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v46, "setErrors:", isa, swift_bridgeObjectRelease(v71).n128_f64[0]);

          v73 = v46;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
          v75 = *(_QWORD *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v74 = *(_QWORD *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v75 >= v74 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1);
          v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v73);
          specialized Array._endMutation()(v76);
          v77 = v144;
          v45 = v139;
          v14 = v135;
          if (v134)
          {
            swift_bridgeObjectRelease(v144);
            v17 = 1;
          }
          else
          {
            if ((unint64_t)v144 >> 62)
            {
              if (v144 < 0)
                v92 = v144;
              else
                v92 = v144 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v144);
              v78 = _CocoaArrayWrapper.endIndex.getter(v92);
              swift_bridgeObjectRelease(v77);
            }
            else
            {
              v78 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease(v77);
            v17 = v78 != 0;
          }
          v134 = v17;
        }
        else
        {
          swift_bridgeObjectRelease(v23);
          v9 = v131;
          v7 = v130;
          v14 = v135;
          v70 = v136;
        }
        v1 = String.index(_:offsetBy:)(v40, v70, v7, v9);
        swift_release(v45);

        if (v14 == v123)
        {
          v95 = swift_bridgeObjectRelease(v122);
          if (!v134)
            goto LABEL_71;
          goto LABEL_79;
        }
      }
    }
  }
  v95 = swift_bridgeObjectRelease(v12);
LABEL_71:
  v98 = CalculateExpression.error.getter(v95);
  if (v98)
  {
    v99 = v98;
    swift_getErrorValue(v98, v141, v140);
    v100 = Error.localizedDescription.getter(v140[1], v140[2]);
    v102 = v101;
    swift_errorRelease(v99);
    v103 = HIBYTE(v102) & 0xF;
    if ((v102 & 0x2000000000000000) == 0)
      v103 = v100 & 0xFFFFFFFFFFFFLL;
    if (!v103)
    {
      swift_bridgeObjectRelease(v102);
      goto LABEL_79;
    }
    v104 = objc_msgSend(objc_allocWithZone((Class)PKMathRecognitionError), "init");
    v105 = String._bridgeToObjectiveC()();
    objc_msgSend(v104, "setErrorString:", v105, swift_bridgeObjectRelease(v102).n128_f64[0]);

    v106 = objc_msgSend(objc_allocWithZone((Class)PKMathRecognitionToken), "init");
    objc_msgSend(v106, "setType:", 5);
    objc_msgSend(v106, "setCharacterRange:", 0, String.count.getter(v7, v9));
    v107 = String._bridgeToObjectiveC()();
    objc_msgSend(v106, "setText:", v107, swift_bridgeObjectRelease(v9).n128_f64[0]);

    v108 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v109 = swift_allocObject(v108, 40, 7);
    *(_OWORD *)(v109 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v109 + 32) = v104;
    v146 = v109;
    specialized Array._endMutation()(v109);
    v110 = v146;
    sub_1004B8930(0, &qword_1013F5498, PKMathRecognitionError_ptr);
    v111 = v104;
    v112 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v106, "setErrors:", v112, swift_bridgeObjectRelease(v110).n128_f64[0]);

    v113 = v106;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v113);
    v115 = *(_QWORD *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v114 = *(_QWORD *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v115 >= v114 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, v115 + 1, 1);
    v116 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v115, v113);
    specialized Array._endMutation()(v116);

  }
  else
  {
LABEL_79:
    swift_bridgeObjectRelease(v9);
  }
  return (double *)v150;
}

_UNKNOWN **static CRLMathHintsMode.allCases.getter()
{
  return &off_101264F00;
}

uint64_t sub_1008400AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10084A630();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100840108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10084A630();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_100840154(_QWORD *a1@<X8>)
{
  *a1 = &off_101263CB8;
}

Class sub_1008401C8(uint64_t a1, uint64_t a2, _QWORD *a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t *v7;
  uint64_t v8;
  Class isa;
  _BYTE v11[24];

  v7 = (uint64_t *)(a1 + *a3);
  swift_beginAccess(v7, v11, 0, 0);
  v8 = *v7;
  type metadata accessor for UUID(0);
  sub_1004B8930(0, a4, a5);
  sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

double sub_1008402A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5, _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  double result;
  _BYTE v17[24];

  v11 = type metadata accessor for UUID(0);
  v12 = sub_1004B8930(0, a4, a5);
  v13 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, v11, v12, v13);
  v15 = (uint64_t *)(a1 + *a6);
  swift_beginAccess(v15, v17, 1, 0);
  *v15 = v14;
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

NSString sub_100840384()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static CRLMathCalculationController.mathHintsModeChangedNotificationName = (uint64_t)result;
  return result;
}

id static CRLMathCalculationController.mathHintsModeChangedNotificationName.getter()
{
  if (qword_1013DD250 != -1)
    swift_once(&qword_1013DD250, sub_100840384);
  return (id)static CRLMathCalculationController.mathHintsModeChangedNotificationName;
}

char *sub_100840438()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  __n128 v24;
  objc_class *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  id v36;
  objc_super v37;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions;
  v15 = v0;
  *(_QWORD *)&v0[v14] = sub_1008D7958((uint64_t)_swiftEmptyArrayStorage);
  v16 = OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressions;
  *(_QWORD *)&v15[v16] = sub_1008D7AF8((uint64_t)_swiftEmptyArrayStorage);
  v17 = OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroups;
  *(_QWORD *)&v15[v17] = sub_1008D7B0C((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_mathHintsUserDefaultsObserver] = 0;
  v18 = type metadata accessor for CalculateDocument(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_calculateDocument] = CalculateDocument.init()();
  v19 = sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
  static OS_dispatch_queue.Attributes.concurrent.getter(v19);
  static DispatchQoS.unspecified.getter(v20);
  v21 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v22(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  v23 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000043, 0x8000000100FD72B0, v10, v13, v7, 0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressionsQueue] = v23;
  static OS_dispatch_queue.Attributes.concurrent.getter(v23);
  static DispatchQoS.unspecified.getter(v24);
  v22(v7, v21, v4);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroupsQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000042, 0x8000000100FD7300, v10, v13, v7, 0);

  v25 = (objc_class *)type metadata accessor for CRLMathCalculationController();
  v37.receiver = v15;
  v37.super_class = v25;
  v26 = objc_msgSendSuper2(&v37, "init");
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v3, 1, 1, v27);
  v28 = swift_allocObject(&unk_101281AD8, 32, 7);
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)(v28 + 24) = 0;
  v29 = (char *)v26;
  v30 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013F5490, v28);
  swift_release(v30);
  v36 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  KeyPath = swift_getKeyPath(&unk_100F0FB08);
  v32 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_100849D50, 0, &protocol witness table for NSObject);

  swift_release(KeyPath);
  v33 = *(void **)&v29[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_mathHintsUserDefaultsObserver];
  *(_QWORD *)&v29[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_mathHintsUserDefaultsObserver] = v32;

  return v29;
}

uint64_t sub_1008407B0()
{
  return swift_task_switch(sub_1008407C4, 0, 0);
}

uint64_t sub_1008407C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100840830, v2, v3);
}

uint64_t sub_100840830()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  if (qword_1013DD698 != -1)
    swift_once(&qword_1013DD698, sub_1009EC40C);
  return swift_task_switch(sub_100840894, 0, 0);
}

uint64_t sub_100840894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 32) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10053457C, v3, v4);
}

id CRLMathCalculationController.__deallocating_deinit()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  objc_super v5;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_mathHintsUserDefaultsObserver];
  if (v2)
  {
    v3 = v2;
    dispatch thunk of NSKeyValueObservation.invalidate()();

  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CRLMathCalculationController();
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t type metadata accessor for CRLMathCalculationController()
{
  return objc_opt_self(_TtC8Freeform28CRLMathCalculationController);
}

void CRLMathCalculationController.beginTrackingResultsFor(expression:parentDrawingLayout:withSingleDrawingSortIndex:onUpdate:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*v22)(_BYTE *, uint64_t);
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  double v34;
  _BYTE v35[24];

  v29 = a2;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = __chkstk_darwin(v14);
  v17 = &v30[-v16 - 8];
  CalculateExpression.id.getter(v15);
  v18 = (_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions);
  swift_beginAccess(v5 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions, v35, 0, 0);
  v19 = *v18;
  if (*(_QWORD *)(*v18 + 16))
  {
    swift_bridgeObjectRetain(*v18);
    v20 = sub_100842EFC((uint64_t)v17);
    if ((v21 & 1) != 0)
    {
      sub_10062E59C((_QWORD *)(*(_QWORD *)(v19 + 56) + 56 * v20), &v31);
    }
    else
    {
      v34 = 0.0;
      v32 = 0u;
      v33 = 0u;
      v31 = 0u;
    }
    swift_bridgeObjectRelease(v19);
  }
  else
  {
    v34 = 0.0;
    v32 = 0u;
    v33 = 0u;
    v31 = 0u;
  }
  v22 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
  v22(v17, v10);
  v23 = v31;
  sub_1004CB800((uint64_t)&v31, &qword_1013F07B0);
  if (v23)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"beginTrackingResultsFor(expression:parentDrawingLayout:withSingleDrawingSortIndex:onUpdate:)", 92, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 93, "Tried to track a CalculateExpression that is already being tracked", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginTrackingResultsFor(expression:parentDrawingLayout:withSingleDrawingSortIndex:onUpdate:)", 92, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 93, (uint64_t)"Tried to track a CalculateExpression that is already being tracked", 66, 2u);
  }
  else
  {
    CalculateExpression.id.getter(v24);
    *(_QWORD *)&v31 = a3;
    *((_QWORD *)&v31 + 1) = a4;
    *(_QWORD *)&v33 = 0;
    v32 = a1;
    swift_unknownObjectWeakInit((char *)&v33 + 8);
    v34 = a5;
    swift_beginAccess(v18, v30, 33, 0);
    swift_retain(a4);
    swift_retain(a1);
    sub_10083E4D0(&v31, (uint64_t)v13);
    swift_endAccess(v30);
    v26 = CalculateExpression.id.getter(v25);
    __chkstk_darwin(v26);
    __chkstk_darwin(v27);
    withObservationTracking<A>(_:onChange:)(sub_100842F94, v28, sub_100842FA0, &v29 - 6, (char *)&type metadata for () + 8);
    v22(v13, v10);
    sub_100840E9C();
  }
}

uint64_t CRLMathCalculationController.stopTrackingResultsFor(expression:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  _BYTE *v5;
  double v6;
  double (*v7)(_BYTE *, uint64_t, double);
  __n128 v8;
  double v9;
  __n128 v10;
  double v11;
  _BYTE v13[24];
  _BYTE v14[56];

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  CalculateExpression.id.getter(v3);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions, v13, 33, 0);
  v6 = sub_100847A38((uint64_t)v5, (uint64_t)v14);
  v7 = *(double (**)(_BYTE *, uint64_t, double))(v2 + 8);
  v7(v5, v1, v6);
  sub_1004CB800((uint64_t)v14, &qword_1013F07B0);
  swift_endAccess(v13);
  CalculateExpression.id.getter(v8);
  v9 = sub_100842070((uint64_t)v5);
  v10.n128_f64[0] = v7(v5, v1, v9);
  CalculateExpression.id.getter(v10);
  v11 = sub_100842984((uint64_t)v5);
  v7(v5, v1, v11);
  return sub_100840E9C();
}

uint64_t sub_100840E9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  double *v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  __n128 v12;
  unint64_t v14[2];
  uint64_t v15;
  double *v16;
  _BYTE v17[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions);
  swift_beginAccess(v1, v17, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain_n(v2, 2);
  v3 = sub_1005FF9A0(v2);
  swift_bridgeObjectRelease(v2);
  v14[0] = (unint64_t)v3;
  sub_1008486DC(v14);
  swift_bridgeObjectRelease(v2);
  v4 = v14[0];
  v5 = *(_QWORD *)(v14[0] + 16);
  if (v5)
  {
    v16 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    v6 = (_QWORD *)(v4 + 32);
    do
    {
      sub_10062E59C(v6, v14);
      v7 = v15;
      swift_retain(v15);
      v8 = sub_1007634F4((uint64_t)v14);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = *((_QWORD *)v16 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
      specialized ContiguousArray._endMutation()(v10);
      v6 += 7;
      --v5;
    }
    while (v5);
    v11 = v16;
    v12 = swift_release(v4);
  }
  else
  {
    v12 = swift_release(v14[0]);
    v11 = _swiftEmptyArrayStorage;
  }
  return dispatch thunk of CalculateDocument.expressions.setter(v11, v12);
}

void sub_100841000(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v4;
  double v5;
  double x;
  double v7;
  id v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double y;
  double v18;
  BOOL v19;
  double v20;
  double v21;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + 40);
  v4 = Strong;
  v5 = 0.0;
  x = 0.0;
  v7 = 0.0;
  if (Strong)
  {
    v8 = objc_msgSend(Strong, "pureGeometryInRoot");

    if (!v8)
    {
      __break(1u);
      goto LABEL_36;
    }
    objc_msgSend(v8, "frame");
    x = v9;
    v7 = v10;

  }
  v11 = (void *)swift_unknownObjectWeakLoadStrong(a2 + 40);
  v12 = v11;
  v13 = 0.0;
  if (!v11)
    goto LABEL_7;
  v14 = objc_msgSend(v11, "pureGeometryInRoot");

  if (!v14)
  {
LABEL_36:
    __break(1u);
    return;
  }
  objc_msgSend(v14, "frame");
  v5 = v15;
  v13 = v16;

LABEL_7:
  if (v4)
  {
    if (v12)
      goto LABEL_9;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 129, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 129, (uint64_t)"invalid nil value found", 23, 2u);
    if (v12)
      goto LABEL_9;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 130, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 130, (uint64_t)"invalid nil value found", 23, 2u);
LABEL_9:
  if (v4)
  {
    y = v7;
  }
  else
  {
    x = CGPointZero.x;
    y = CGPointZero.y;
  }
  if (v12)
  {
    v18 = v13;
  }
  else
  {
    v5 = CGPointZero.x;
    v18 = CGPointZero.y;
  }
  v19 = vabdd_f64(x, v18) > 16.0 || x == v5;
  if (!v19 || y >= v18 && v18 >= y)
  {
    if (sub_1003A91F4())
    {
      if (v5 < x || x < v5)
        return;
    }
    else if (x < v5 || v5 < x)
    {
      return;
    }
    v20 = *(double *)(a1 + 48);
    v21 = *(double *)(a2 + 48);
    if (v20 >= v21 && v21 >= v20)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 166, "Should not get a tie when sorting calculate expressions.", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 166, (uint64_t)"Should not get a tie when sorting calculate expressions.", 56, 2u);
    }
  }
}

uint64_t CRLMathCalculationController.observedExpression(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  _QWORD v9[2];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions);
  swift_beginAccess(v3, v15, 0, 0);
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain(v4);
    v5 = sub_100842EFC(a1);
    if ((v6 & 1) != 0)
    {
      sub_10062E59C((_QWORD *)(*(_QWORD *)(v4 + 56) + 56 * v5), &v11);
    }
    else
    {
      v14 = 0;
      v12 = 0u;
      v13 = 0u;
      v11 = 0u;
    }
    swift_bridgeObjectRelease(v4);
    if ((_QWORD)v11)
    {
      sub_10062E59C(&v11, v9);
      sub_1004CB800((uint64_t)&v11, &qword_1013F07B0);
      v7 = v10;
      swift_retain(v10);
      sub_1007634F4((uint64_t)v9);
      return v7;
    }
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    v11 = 0u;
  }
  sub_1004CB800((uint64_t)&v11, &qword_1013F07B0);
  return 0;
}

void (*CRLMathCalculationController.mathHintsMode.modify(uint64_t *a1))(uint64_t *a1)
{
  *a1 = -[CRLMathCalculationController mathHintsMode]_0();
  return sub_1008414D8;
}

void sub_1008414D8(uint64_t *a1)
{
  _s8Freeform28CRLMathCalculationControllerC13mathHintsModeAA0bfG0Ovs_0(*a1);
}

void sub_1008414E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  id v28;
  id v29;
  char v30;
  uint64_t v31;
  void (*v32)(_QWORD, __n128);
  void *Strong;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, __n128);
  __n128 v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  _QWORD v45[5];
  _QWORD v46[2];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char v51[24];
  void (*v52)(_QWORD, __n128);
  uint64_t v53;
  void *v54;
  _QWORD v55[3];

  v43 = a3;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = CalculateExpression.expression.getter(v9);
  v12 = v11;
  v13 = (void *)CalculateExpression.result.getter(v10);
  v15 = CalculateExpression.error.getter(v14);
  if (v15)
  {
    v52 = (void (*)(_QWORD, __n128))v15;
    v16 = sub_1004B804C(&qword_1013E0210);
    v17 = sub_1004B8930(0, &qword_1013F54B8, CalculateError_ptr);
    if (swift_dynamicCast(&v47, &v52, v16, v17, 6))
      v18 = (void *)v47;
    else
      v18 = 0;
  }
  else
  {
    v18 = 0;
  }
  swift_bridgeObjectRelease(v12);
  v19 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v19 = v10 & 0xFFFFFFFFFFFFLL;
  if (!v19)
  {

LABEL_13:
    return;
  }
  v20 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions);
  swift_beginAccess(v20, v51, 0, 0);
  v21 = *v20;
  if (!*(_QWORD *)(*v20 + 16))
  {
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    v47 = 0u;
LABEL_24:

    sub_1004CB800((uint64_t)&v47, &qword_1013F07B0);
    return;
  }
  swift_bridgeObjectRetain(*v20);
  v22 = sub_100842EFC(v43);
  if ((v23 & 1) != 0)
  {
    sub_10062E59C((_QWORD *)(*(_QWORD *)(v21 + 56) + 56 * v22), &v47);
  }
  else
  {
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    v47 = 0u;
  }
  swift_bridgeObjectRelease(v21);
  if (!(_QWORD)v47)
    goto LABEL_24;
  sub_10062E5D8((uint64_t)&v47, (uint64_t)&v52);
  v24 = v54;
  if (!v13)
  {
    if (!v54)
    {
      sub_10062E59C(&v52, &v47);
      v28 = (id)v49;
      if (v18)
        goto LABEL_21;
LABEL_34:
      v41 = v28;
      sub_1007634F4((uint64_t)&v47);
      if (!v28)
      {
LABEL_36:
        sub_1007634F4((uint64_t)&v52);

        goto LABEL_13;
      }

      goto LABEL_28;
    }
LABEL_26:
    sub_10062E59C(&v52, &v47);
    goto LABEL_27;
  }
  if (!v54)
    goto LABEL_26;
  sub_1004B8930(0, (unint64_t *)&unk_1013F54C0, CalculateResult_ptr);
  v25 = v24;
  v26 = v13;
  v27 = static NSObject.== infix(_:_:)(v26, v25);

  sub_10062E59C(&v52, &v47);
  if ((v27 & 1) == 0)
    goto LABEL_27;
  v28 = (id)v49;
  if (!v18)
    goto LABEL_34;
LABEL_21:
  if (v28)
  {
    sub_1004B8930(0, &qword_1013F54B8, CalculateError_ptr);
    v29 = v28;
    v28 = v18;
    v30 = static NSObject.== infix(_:_:)(v28, v29);
    sub_1007634F4((uint64_t)&v47);

    if ((v30 & 1) != 0)
      goto LABEL_36;
    goto LABEL_28;
  }
LABEL_27:
  sub_1007634F4((uint64_t)&v47);
LABEL_28:
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v43, v5);
  v32 = v52;
  v31 = v53;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v55);
  v34 = v55[1];
  v45[0] = v32;
  v45[1] = v31;
  v45[2] = a1;
  v45[3] = v13;
  v45[4] = v18;
  swift_unknownObjectWeakInit(v46);
  v35 = v18;
  swift_retain(v31);
  swift_retain(a1);
  v36 = v13;

  v46[1] = v34;
  swift_beginAccess(v20, v44, 33, 0);
  sub_10083E4D0(v45, (uint64_t)v8);
  v37 = swift_endAccess(v44);
  if ((CalculateExpression.needsEvaluation.getter(v37) & 1) != 0
    || (CalculateExpression.isEvaluating.getter() & 1) != 0)
  {

  }
  else
  {
    v39 = v52;
    v38 = v53;
    v40 = swift_retain(v53);
    v39(a1, v40);

    swift_release(v38);
  }
  sub_1007634F4((uint64_t)&v52);
}

uint64_t (*sub_1008418E4(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v6);
  v10 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a2, v6, v9);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = (v11 + 24) & ~v11;
  v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_101281BA0, v13 + 8, v11 | 7);
  *(_QWORD *)(v14 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14 + v12, v10, v6);
  *(_QWORD *)(v14 + v13) = a3;
  v15 = a1;
  swift_retain(a3);
  return sub_10084A7A0;
}

void sub_1008419D4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23[24];

  v6 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &a1[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions];
  swift_beginAccess(&a1[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressions], v23, 0, 0);
  v10 = *(_QWORD *)v9;
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain(v10);
    v11 = sub_100842EFC(a2);
    if ((v12 & 1) != 0)
    {
      sub_10062E59C((_QWORD *)(*(_QWORD *)(v10 + 56) + 56 * v11), &v19);
    }
    else
    {
      v22 = 0;
      v20 = 0u;
      v21 = 0u;
      v19 = 0u;
    }
    swift_bridgeObjectRelease(v10);
    if ((_QWORD)v19)
    {
      sub_1004CB800((uint64_t)&v19, &qword_1013F07B0);
      v13 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
      type metadata accessor for MainActor(0);
      v14 = a1;
      swift_retain(a3);
      v16 = static MainActor.shared.getter(v15);
      v17 = (_QWORD *)swift_allocObject(&unk_101281BC8, 48, 7);
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v14;
      v17[5] = a3;
      v18 = sub_100521B98((uint64_t)v8, (uint64_t)&unk_1013F54B0, (uint64_t)v17);
      swift_release(v18);
      return;
    }
  }
  else
  {
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
    v19 = 0u;
  }
  sub_1004CB800((uint64_t)&v19, &qword_1013F07B0);
}

uint64_t sub_100841B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for UUID(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100841C14, v9, v10);
}

uint64_t sub_100841C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = swift_release(*(_QWORD *)(v0 + 56));
  CalculateExpression.id.getter(v6);
  v7 = (_QWORD *)swift_task_alloc(48);
  v7[2] = v4;
  v7[3] = v5;
  v7[4] = v1;
  v8 = (_QWORD *)swift_task_alloc(48);
  v8[2] = v5;
  v8[3] = v1;
  v8[4] = v4;
  withObservationTracking<A>(_:onChange:)(sub_10084A8AC, v7, sub_10084A8D8, v8, (char *)&type metadata for () + 8);
  swift_task_dealloc(v8);
  swift_task_dealloc(v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CRLMathCalculationController.pkMathRecognitionViewControllerSolvingStyle.getter()
{
  unint64_t v0;
  uint64_t result;
  unint64_t v2;

  v0 = -[CRLMathCalculationController mathHintsMode]_0();
  if (v0 < 3)
    return 2 - v0;
  v2 = v0;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLMathHintsMode, &v2, &type metadata for CRLMathHintsMode, &type metadata for Int);
  __break(1u);
  return result;
}

double sub_100841D9C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  __n128 v16;
  double result;
  _QWORD aBlock[5];
  uint64_t v19;

  v3 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchWorkItemFlags.barrier.getter(v11);
  v12 = swift_allocObject(&unk_101281A88, 32, 7);
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_100765950;
  v19 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101281AA0;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  v15 = a1;
  static DispatchQoS.unspecified.getter(v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v10, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_100841F18(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  _QWORD *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  _BYTE v17[24];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)&v6 = __chkstk_darwin(v4).n128_u64[0];
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = objc_msgSend(a2, "uuid", v6);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v9);

  v10 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressions);
  swift_beginAccess(v10, v17, 33, 0);
  v11 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
  v16 = *v10;
  *v10 = 0x8000000000000000;
  sub_100828754((uint64_t)v11, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  v13 = *v10;
  *v10 = v16;
  v14 = swift_bridgeObjectRelease(v13);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v8, v4, v14);
  return swift_endAccess(v17);
}

double sub_100842070(uint64_t a1)
{
  return sub_1008429A8(a1, &OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressionsQueue, (uint64_t)&unk_101281B50, (uint64_t)sub_10084A698, (uint64_t)&unk_101281B68);
}

void sub_100842094(uint64_t a1, uint64_t a2)
{
  sub_100842BAC(a1, a2, &OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressions, sub_100831278, (void (*)(unint64_t, uint64_t))sub_10051A11C);
}

void sub_1008420BC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v3);
  v19 = 0;
  v7 = *(NSObject **)&v1[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressionsQueue];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(&unk_101281A10, v9 + v5, v8 | 7);
  *(_QWORD *)(v10 + 16) = &v19;
  *(_QWORD *)(v10 + 24) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v11 = swift_allocObject(&unk_101281A38, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_10084A4EC;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1005B72B0;
  v18 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_101281A50;
  v12 = _Block_copy(aBlock);
  v13 = v18;
  v14 = v1;
  swift_retain(v11);
  swift_release(v13);
  dispatch_sync(v7, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v11, "", 98, 281, 38, 1);
  swift_release(v11);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v10);
}

void sub_100842278(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v3);
  v19 = 0;
  v7 = *(NSObject **)&v1[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroupsQueue];
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(&unk_101281998, v9 + v5, v8 | 7);
  *(_QWORD *)(v10 + 16) = &v19;
  *(_QWORD *)(v10 + 24) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v11 = swift_allocObject(&unk_1012819C0, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_10084A458;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1005B71BC;
  v18 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100618D24;
  aBlock[3] = &unk_1012819D8;
  v12 = _Block_copy(aBlock);
  v13 = v18;
  v14 = v1;
  swift_retain(v11);
  swift_release(v13);
  dispatch_sync(v7, v12);
  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v11, "", 98, 291, 47, 1);
  swift_release(v11);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v10);
}

void sub_100842428(void **a1, uint64_t a2, uint64_t a3)
{
  sub_100842434(a1, a2, a3, &OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroups);
}

void sub_100842434(void **a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  id v11;
  void *v12;
  _BYTE v13[24];

  v6 = (uint64_t *)(a2 + *a4);
  swift_beginAccess(v6, v13, 0, 0);
  v7 = *v6;
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain(v7);
    v8 = sub_100842EFC(a3);
    if ((v9 & 1) != 0)
    {
      v10 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v8);
      v11 = v10;
    }
    else
    {
      v10 = 0;
    }
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v10 = 0;
  }
  v12 = *a1;
  *a1 = v10;

}

id sub_1008424DC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v14;

  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  v12 = (void *)a4(v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

double sub_100842584(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  char *v22;
  __n128 v23;
  double result;
  _QWORD v25[2];
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v26 = a2;
  v4 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroupsQueue];
  static DispatchWorkItemFlags.barrier.getter(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_101281948, v17 + 8, v15 | 7);
  *(_QWORD *)(v18 + 16) = v2;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v18 + v16, v10, v7);
  v19 = v26;
  *(_QWORD *)(v18 + v17) = v26;
  aBlock[4] = sub_10084A430;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101281960;
  v20 = _Block_copy(aBlock);
  v21 = v19;
  v22 = v2;
  static DispatchQoS.unspecified.getter(v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v13, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  return result;
}

uint64_t sub_10084278C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  _QWORD *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  __n128 v15;
  void *v16;
  uint64_t v18;
  _BYTE v19[24];

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a2, v6, v8);
  v11 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroups);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroups, v19, 33, 0);
  if (a3)
  {
    v12 = a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
    v18 = *v11;
    *v11 = 0x8000000000000000;
    sub_100829148((uint64_t)v12, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
    v14 = *v11;
    *v11 = v18;
    v15 = swift_bridgeObjectRelease(v14);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v10, v6, v15);
  }
  else
  {
    v16 = (void *)sub_100846F80((uint64_t)v10, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_1008327CC);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);

  }
  return swift_endAccess(v19);
}

double sub_100842984(uint64_t a1)
{
  return sub_1008429A8(a1, &OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroupsQueue, (uint64_t)&unk_101281B00, (uint64_t)sub_10084A678, (uint64_t)&unk_101281B18);
}

double sub_1008429A8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  __n128 v23;
  double result;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v29 = a5;
  v26 = a3;
  v27 = a4;
  v8 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v28 = type metadata accessor for DispatchWorkItemFlags(0);
  v14 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = *(_QWORD *)&v5[*a2];
  static DispatchWorkItemFlags.barrier.getter(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v18 = *(unsigned __int8 *)(v12 + 80);
  v19 = (v18 + 24) & ~v18;
  v20 = swift_allocObject(v26, v19 + v13, v18 | 7);
  *(_QWORD *)(v20 + 16) = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20 + v19, (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = v27;
  v33 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = v29;
  v21 = _Block_copy(aBlock);
  v22 = v5;
  static DispatchQoS.unspecified.getter(v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v16, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v28);
  *(_QWORD *)&result = swift_release(v33).n128_u64[0];
  return result;
}

void sub_100842B90(uint64_t a1, uint64_t a2)
{
  sub_100842BAC(a1, a2, &OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroups, sub_1008327CC, (void (*)(unint64_t, uint64_t))sub_10051A11C);
}

void sub_100842BAC(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(void), void (*a5)(unint64_t, uint64_t))
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v8 = (_QWORD *)(a1 + *a3);
  swift_beginAccess(v8, v19, 33, 0);
  v9 = *v8;
  swift_bridgeObjectRetain(*v8);
  v10 = sub_100842EFC(a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease(v9);
  v12 = 0;
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
    v14 = *v8;
    v18 = *v8;
    *v8 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a4();
      v14 = v18;
    }
    v15 = *(_QWORD *)(v14 + 48);
    v16 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v10, v16);
    v12 = *(void **)(*(_QWORD *)(v18 + 56) + 8 * v10);
    a5(v10, v18);
    v17 = *v8;
    *v8 = v18;
    swift_bridgeObjectRelease(v17);
  }
  swift_endAccess(v19);

}

uint64_t sub_100842CC0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t CRLMathCalculationController.crlaxExpressionsInOrder.getter()
{
  return dispatch thunk of CalculateDocument.expressions.getter();
}

uint64_t sub_100842DA0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  unint64_t v9;
  Swift::String v10;

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  v5 = 4 * v3;
  v6 = 15;
  while (1)
  {
    v7._countAndFlagsBits = String.subscript.getter(v6, a1, a2);
    object = v7._object;
    String.append(_:)(v7);
    swift_bridgeObjectRelease(object);
    v9 = String.index(_:offsetBy:)(v6, 1, a1, a2);
    if (v5 == v9 >> 14)
      break;
    v6 = v9;
    v10._countAndFlagsBits = 32;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
  }
  return 0;
}

unint64_t sub_100842E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_10084434C(a1, v3);
}

unint64_t sub_100842E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_100844188(a1, a2, v5);
}

unint64_t sub_100842EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_100844A64(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (unint64_t *)&qword_1013E4880, (uint64_t)&protocol conformance descriptor for UUID);
}

void sub_100842F94()
{
  uint64_t *v0;

  sub_1008414E0(v0[2], v0[3], v0[4]);
}

uint64_t (*sub_100842FA0())()
{
  uint64_t v0;

  return sub_1008418E4(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_100842FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v3 = *(_QWORD *)(v1 + 40);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  v7 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_100845BAC(a1, v7);
}

unint64_t sub_10084303C(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  Swift::Int v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, *(_QWORD *)(v3 + 40));
  Hasher._combine(_:)(a1 + 5);
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(a3);
    String.hash(into:)(v9, a2, a3);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v7 = Hasher._finalize()();
  return sub_100844268(a1, a2, a3, v7);
}

unint64_t sub_1008430EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  Swift::Int v10;
  _QWORD v13[9];

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v13, *(_QWORD *)(v1 + 40));
  v7 = *(_QWORD *)(a1 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
  v9 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v13, v3, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10 = Hasher._finalize()();
  return sub_1008443E8(a1, v10);
}

uint64_t sub_1008431EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, *(_QWORD *)(v1 + 40));
  v3 = CRLTransactablePropertyMapKeys.rawValue.getter(a1);
  v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  v6 = Hasher._finalize()();
  return sub_10084458C(a1, v6);
}

unint64_t sub_100843264(uint64_t a1)
{
  return sub_100843590(a1, type metadata accessor for CRLBoardIdentifier);
}

unint64_t sub_100843270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100844DE0(a1, v4, (unint64_t *)&qword_1013E6268, off_1012299A0);
}

unint64_t sub_1008432BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100844898(a1, v4);
}

unint64_t sub_1008432EC(Swift::UInt a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10084434C(a1, v3);
}

unint64_t sub_100843350(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10084495C(a1, v4, (void (*)(_QWORD))type metadata accessor for CRLCollaborationParticipant);
}

unint64_t sub_100843394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for URL(0);
  v6 = sub_1004B7878((unint64_t *)&unk_1013F3CD0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_100844A64(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (unint64_t *)&qword_1013E87F8, (uint64_t)&protocol conformance descriptor for URL);
}

void sub_10084342C(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_100843488()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x52436E6F6D6D6F63, 0xEE00617461445444);
  swift_bridgeObjectRelease(0xEE00617461445444);
  v1 = Hasher._finalize()();
  return sub_100844B94(v0, v1);
}

unint64_t sub_100843538(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100844DE0(a1, v4, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
}

unint64_t sub_100843584(uint64_t a1)
{
  return sub_100843590(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

unint64_t sub_100843590(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, *(_QWORD *)(v2 + 40));
  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v12, v5, v6);
  v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(v12, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = Hasher._finalize()();
  return sub_100844EF0(a1, v10, a2);
}

unint64_t sub_100843668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100844DE0(a1, v4, &qword_1013E8E40, TUHandle_ptr);
}

uint64_t sub_1008436B8(uint64_t a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  sub_100BCF9A8();
  v3 = Hasher._finalize()();
  return sub_10084510C(a1, v3);
}

unint64_t sub_100843710(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for CodingUserInfoKey(0);
  v6 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, &protocol witness table for CodingUserInfoKey);
  return sub_100845550(a1, v6);
}

unint64_t sub_100843760(uint64_t a1)
{
  return sub_100843FA8(a1, (void (*)(_QWORD *))sub_10058A3F0, type metadata accessor for CRLBoardPreviewImageCache.Item, (uint64_t (*)(char *, uint64_t))sub_10059CBF0);
}

unint64_t sub_10084377C(unsigned __int16 a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:bytes:count:)(*(_QWORD *)(v1 + 40), a1, 2);
  return sub_100845678(a1, v3);
}

unint64_t sub_1008437B0(uint64_t a1)
{
  uint64_t v1;
  id v3;
  Swift::Int v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(*(_QWORD *)a1);
  Hasher._combine(_:)(*(_QWORD *)(a1 + 8));
  Hasher._combine(_:)(*(_QWORD *)(a1 + 16));
  v3 = *(id *)(a1 + 24);
  NSObject.hash(into:)(v6);
  sub_100557460(a1);
  Selector.hash(into:)(v6, *(_QWORD *)(a1 + 32));
  v4 = Hasher._finalize()();
  return sub_100845718((uint64_t *)a1, v4);
}

unint64_t sub_100843848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100844DE0(a1, v4, &qword_1013E8810, CKRecordID_ptr);
}

unint64_t sub_100843894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100844DE0(a1, v4, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
}

unint64_t sub_1008438E0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  v4 = a1 & 1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1 & 1);
  v5 = Hasher._finalize()();
  return sub_100845854(v4, v5);
}

unint64_t sub_10084393C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10084495C(a1, v4, (void (*)(_QWORD))type metadata accessor for CRLContainerItem);
}

void sub_100843980(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_1008439D4()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 1701734764, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  v1 = Hasher._finalize()();
  return sub_100845910(v0, v1);
}

unint64_t sub_100843A6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100844DE0(a1, v4, (unint64_t *)&qword_10140B930, NSValue_ptr);
}

unint64_t sub_100843AB8(Swift::UInt a1, Swift::UInt a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  v5 = Hasher._finalize()();
  return sub_100845B30(a1, a2, v5);
}

unint64_t sub_100843B24(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x6863746566;
  else
    v5 = 1702257011;
  if ((a1 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = Hasher._finalize()();
  return sub_100845D20(v4, v7);
}

unint64_t sub_100843BAC(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x69726F7661666E75;
    else
      v3 = 0x656C67676F74;
    if (a1 == 1)
      v4 = 0xEA00000000006574;
    else
      v4 = 0xE600000000000000;
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x657469726F766166;
  }
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease();
  v5 = Hasher._finalize()();
  return sub_100845E4C(a1, v5);
}

void sub_100843C60(char a1)
{
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v1 + 40));
  __asm { BR              X10 }
}

uint64_t sub_100843CB0()
{
  uint64_t v0;
  Swift::Int v1;
  uint64_t v3;

  String.hash(into:)(&v3, 0x63696C617469, 0xE600000000000000);
  swift_bridgeObjectRelease();
  v1 = Hasher._finalize()();
  return sub_100845FEC(v0, v1);
}

unint64_t sub_100843D38(double a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;

  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = a1;
  else
    v3 = 0.0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), *(_QWORD *)&v3);
  return sub_1008461CC(v4, a1);
}

unint64_t sub_100843D6C(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_100846264(a1, v3);
}

unint64_t sub_100843DD0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v1 + 40));
  if (a1)
  {
    if (a1 == 1)
      v3 = 1701079400;
    else
      v3 = 0x656C67676F74;
    if (a1 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE600000000000000;
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 2003789939;
  }
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease();
  v5 = Hasher._finalize()();
  return sub_100846304(a1, v5);
}

unint64_t sub_100843E70(uint64_t a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  Swift::Int v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, *(_QWORD *)(v4 + 40));
  sub_1009E3D90((uint64_t)v11, a1, (uint64_t)a2, a3, a4);
  v9 = Hasher._finalize()();
  return sub_10084647C(a1, a2, a3, a4, v9);
}

unint64_t sub_100843EF4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  Swift::Int v7;
  _QWORD v9[9];

  v2 = v1;
  Hasher.init(_seed:)(v9, *(_QWORD *)(v2 + 40));
  v4 = a1 & 1;
  if ((a1 & 1) != 0)
    v5 = 0x6F4E796B63697473;
  else
    v5 = 0x786F6274786574;
  if ((a1 & 1) != 0)
    v6 = 0xEA00000000006574;
  else
    v6 = 0xE700000000000000;
  String.hash(into:)(v9, v5, v6);
  swift_bridgeObjectRelease();
  v7 = Hasher._finalize()();
  return sub_100846628(v4, v7);
}

unint64_t sub_100843F8C(uint64_t a1)
{
  return sub_100843FA8(a1, (void (*)(_QWORD *))sub_1004BC2D8, type metadata accessor for CRLAssetReferrerIdentifier, (uint64_t (*)(char *, uint64_t))sub_1004BDCB8);
}

unint64_t sub_100843FA8(uint64_t a1, void (*a2)(_QWORD *), uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v4;
  Swift::Int v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, *(_QWORD *)(v4 + 40));
  a2(v11);
  v9 = Hasher._finalize()();
  return sub_100846768(a1, v9, a3, a4);
}

unint64_t sub_100844028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10084495C(a1, v4, (void (*)(_QWORD))type metadata accessor for CRLBoardItem);
}

unint64_t sub_10084406C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10084495C(a1, v4, (void (*)(_QWORD))type metadata accessor for CRLSceneInfo);
}

unint64_t sub_1008440B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_10084495C(a1, v4, (void (*)(_QWORD))type metadata accessor for CRLWPListStyle);
}

unint64_t sub_1008440F4(char a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(qword_100F0FB30[a1]);
  v3 = Hasher._finalize()();
  return sub_100846874(a1, v3);
}

uint64_t sub_100844158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_10083D934(*(_QWORD *)(v1 + 40), a1);
  return sub_100846928(a1, v3);
}

unint64_t sub_100844188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100844268(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v10 = a1;
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    do
    {
      v13 = (unsigned __int8 *)(v12 + 24 * v7);
      if (*v13 == v10)
      {
        v14 = *((_QWORD *)v13 + 2);
        if (v14)
        {
          if (a3)
          {
            v15 = *((_QWORD *)v13 + 1);
            v16 = v15 == a2 && v14 == a3;
            if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v14, a2, a3, 0) & 1) != 0)
              return v7;
          }
        }
        else if (!a3)
        {
          return v7;
        }
      }
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_10084434C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1008443E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = type metadata accessor for UUID(0);
  v29 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v23 - v9;
  v30 = v2;
  v11 = -1 << *(_BYTE *)(v2 + 32);
  v12 = a2 & ~v11;
  v28 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v24 = ~v11;
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(_QWORD *)(a1 + 24);
    v27 = v13;
    ObjectType = swift_getObjectType(v13);
    v26 = v14;
    v15 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
    do
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * v12);
      v17 = *(_QWORD *)(v16 + 24);
      v18 = swift_getObjectType(*(_QWORD *)(v16 + 16));
      v19 = *(void (**)(uint64_t, uint64_t))(v17 + 32);
      swift_retain(v16);
      v19(v18, v17);
      v15(ObjectType, v26);
      v20 = static UUID.== infix(_:_:)(v10);
      v21 = *(void (**)(char *, uint64_t))(v29 + 8);
      v21(v8, v5);
      v21(v10, v5);
      swift_release(v16);
      if ((v20 & 1) != 0)
        break;
      v12 = (v12 + 1) & v24;
    }
    while (((*(_QWORD *)(v28 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

uint64_t sub_10084458C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_100844898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1004B8968(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_1004B89A4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10084495C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    a3(0);
    v8 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v9 = static NSObject.== infix(_:_:)(v8, a1);

    if ((v9 & 1) == 0)
    {
      v10 = ~v5;
      for (i = (i + 1) & v10; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v10)
      {
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v12 = static NSObject.== infix(_:_:)(v11, a1);

        if ((v12 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_100844A64(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1004B7878(v21, v20, v22);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v19);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_100844B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_100844DE0(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t i;
  id v9;
  char v10;
  uint64_t v11;
  id v12;
  char v13;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  i = a2 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1004B8930(0, a3, a4);
    v9 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
    v10 = static NSObject.== infix(_:_:)(v9, a1);

    if ((v10 & 1) == 0)
    {
      v11 = ~v6;
      for (i = (i + 1) & v11; ((*(_QWORD *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v11)
      {
        v12 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * i);
        v13 = static NSObject.== infix(_:_:)(v12, a1);

        if ((v13 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_100844EF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v29;
  uint64_t v31;
  uint64_t v32;

  v7 = a3(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v31 - v12;
  __chkstk_darwin(v11);
  v16 = (char *)&v31 - v15;
  v32 = v3;
  v17 = -1 << *(_BYTE *)(v3 + 32);
  v18 = a2 & ~v17;
  if (((*(_QWORD *)(v3 + 64 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v19 = v3 + 64;
    v20 = ~v17;
    v21 = *(_QWORD *)(v14 + 72);
    do
    {
      sub_1004B8460(*(_QWORD *)(v32 + 48) + v21 * v18, (uint64_t)v16, a3);
      v22 = static UUID.== infix(_:_:)(v16);
      sub_1004B8460((uint64_t)v16, (uint64_t)v13, a3);
      sub_1004B8460(a1, (uint64_t)v10, a3);
      if ((v22 & 1) != 0)
      {
        v23 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v24 = *(_QWORD *)&v13[v23];
        v25 = *(_QWORD *)&v13[v23 + 8];
        v26 = &v10[v23];
        v27 = *((_QWORD *)v26 + 1);
        if (v24 == *(_QWORD *)v26 && v25 == v27)
        {
          sub_1004B84A4((uint64_t)v10, a3);
          sub_1004B84A4((uint64_t)v13, a3);
          sub_1004B84A4((uint64_t)v16, a3);
          return v18;
        }
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *(_QWORD *)v26, v27, 0);
        sub_1004B84A4((uint64_t)v10, a3);
        sub_1004B84A4((uint64_t)v13, a3);
        sub_1004B84A4((uint64_t)v16, a3);
        if ((v29 & 1) != 0)
          return v18;
      }
      else
      {
        sub_1004B84A4((uint64_t)v10, a3);
        sub_1004B84A4((uint64_t)v13, a3);
        sub_1004B84A4((uint64_t)v16, a3);
      }
      v18 = (v18 + 1) & v20;
    }
    while (((*(_QWORD *)(v19 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0);
  }
  return v18;
}

uint64_t sub_10084510C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v22[11];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for UUID(0);
  v22[9] = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C(&qword_1013E8798);
  __chkstk_darwin(v25);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v15 = (char *)v22 - v13;
  v16 = -1 << *(_BYTE *)(v2 + 32);
  v17 = a2 & ~v16;
  v24 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    v22[6] = v14;
    v22[3] = v7;
    v22[10] = ~v16;
    v23 = *(_QWORD *)(v12 + 72);
    v22[7] = v2;
    v22[8] = a1;
    v22[5] = v5;
    sub_1004B8460(*(_QWORD *)(v2 + 48) + v23 * v17, (uint64_t)v22 - v13, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v18 = (uint64_t)&v9[*(int *)(v25 + 48)];
    sub_1004B8460((uint64_t)v15, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_1004B8460(a1, v18, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v19 = sub_1004B804C(&qword_1013E1790);
    v20 = (char *)&loc_1008452D8
        + 4
        * byte_100F0F920[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v9, 5, v19)];
    __asm { BR              X9 }
  }
  return a2 & ~v16;
}

unint64_t sub_100845550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v17 = a1;
  v5 = type metadata accessor for CodingUserInfoKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v17);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_100845678(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100845718(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v17;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v8 = ~v4;
    v9 = *a1;
    do
    {
      v10 = *(_QWORD *)(v6 + 48);
      v11 = (_QWORD *)(v10 + 40 * v5);
      if (*v11 == v9 && *(_QWORD *)(v10 + 40 * v5 + 8) == a1[1] && v11[2] == a1[2])
      {
        v12 = (void *)v11[3];
        v17 = v11[4];
        sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
        v13 = a1[3];
        v14 = v12;
        if ((static NSObject.== infix(_:_:)(v14, v13) & 1) != 0)
        {
          v15 = static Selector.== infix(_:_:)(v17, a1[4]);

          if ((v15 & 1) != 0)
            return v5;
        }
        else
        {

        }
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_100845854(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_100845910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_100845B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v10 = *v8;
      v9 = v8[1];
      if (v10 == a1 && v9 == a2)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_100845BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2);
      return v5;
    }
    v13 = v11;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      v15 = ~v4;
      v5 = (v5 + 1) & v15;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
          v9 = v17;
          v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19)
            break;
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            v5 = (v5 + 1) & v15;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_100845D20(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6863746566;
    else
      v6 = 1702257011;
    if ((a1 & 1) != 0)
      v7 = 0xE500000000000000;
    else
      v7 = 0xE400000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6863746566 : 1702257011;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE500000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_100845E4C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0x69726F7661666E75;
          v8 = 0xEA00000000006574;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v8 = 0xE600000000000000;
          v7 = 0x656C67676F74;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE800000000000000;
            v10 = 0x657469726F766166;
            if (v7 != 0x657469726F766166)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v8 = 0xE800000000000000;
        v7 = 0x657469726F766166;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x69726F7661666E75;
      else
        v10 = 0x656C67676F74;
      if (v9 == 1)
        v11 = 0xEA00000000006574;
      else
        v11 = 0xE600000000000000;
      if (v7 != v10)
        goto LABEL_19;
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n(v8, 2);
        return v4;
      }
LABEL_19:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v10, v11, 0);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

uint64_t sub_100845FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1008461CC(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100846264(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_100846304(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xE400000000000000;
          v8 = 1701079400;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v7 = 0xE600000000000000;
          v8 = 0x656C67676F74;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xE400000000000000;
            v10 = 2003789939;
            if (v8 != 2003789939)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v7 = 0xE400000000000000;
        v8 = 2003789939;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 1701079400;
      else
        v10 = 0x656C67676F74;
      if (v9 == 1)
        v11 = 0xE400000000000000;
      else
        v11 = 0xE600000000000000;
      if (v8 != v10)
        goto LABEL_19;
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n(v7, 2);
        return v4;
      }
LABEL_19:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, v10, v11, 0);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_10084647C(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;

  v6 = a5 & ~(-1 << *(_BYTE *)(v5 + 32));
  if (((*(_QWORD *)(v5 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v26 = -1 << *(_BYTE *)(v5 + 32);
    v8 = *(_QWORD *)(v5 + 48) + 32 * v6;
    v9 = *(id *)v8;
    v10 = *(void **)(v8 + 8);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = *(_BYTE *)(v8 + 24);
    sub_1004DD884(*(id *)v8, v10, v11, v12);
    HIDWORD(v28) = a4;
    LOBYTE(a1) = sub_1009E554C((uint64_t)v9, (uint64_t)v10, v11, v12, a1, (uint64_t)a2, a3, a4, v5 + 64, v26, v28, (id)a1, a2, a3);
    sub_1004DD8B8(v9, v10, v11, v12);
    if ((a1 & 1) == 0)
    {
      v16 = v25;
      v17 = ~v27;
      v6 = (v6 + 1) & ~v27;
      if (((*(_QWORD *)(v25 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      {
        do
        {
          v18 = *(_QWORD *)(v5 + 48) + 32 * v6;
          v19 = *(id *)v18;
          v20 = *(void **)(v18 + 8);
          v21 = *(_QWORD *)(v18 + 16);
          v22 = *(_BYTE *)(v18 + 24);
          sub_1004DD884(*(id *)v18, v20, v21, v22);
          v23 = sub_1009E554C((uint64_t)v19, (uint64_t)v20, v21, v22, (uint64_t)v30, (uint64_t)v31, v32, SBYTE4(v29), v25, v27, v29, v30, v31, v32);
          sub_1004DD8B8(v19, v20, v21, v22);
          if ((v23 & 1) != 0)
            break;
          v6 = (v6 + 1) & v17;
        }
        while (((*(_QWORD *)(v16 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
      }
    }
  }
  return v6;
}

unint64_t sub_100846628(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x6F4E796B63697473;
    else
      v6 = 0x786F6274786574;
    if ((a1 & 1) != 0)
      v7 = 0xEA00000000006574;
    else
      v7 = 0xE700000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x6F4E796B63697473 : 0x786F6274786574;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xEA00000000006574 : 0xE700000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n(v7, 2);
  }
  return v4;
}

unint64_t sub_100846768(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v19;

  v9 = a3(0);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - v11;
  v13 = -1 << *(_BYTE *)(v4 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v4 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_1004B8460(*(_QWORD *)(v4 + 48) + v16 * v14, (uint64_t)v12, a3);
      v17 = a4(v12, a1);
      sub_1004B84A4((uint64_t)v12, a3);
      if ((v17 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v4 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_100846874(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = qword_100F0FB30[a1];
    v8 = *(_QWORD *)(v2 + 48);
    if (qword_100F0FB30[*(char *)(v8 + result)] != v7)
    {
      v9 = ~v5;
      for (result = (result + 1) & v9;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v9)
      {
        if (qword_100F0FB30[*(char *)(v8 + result)] == v7)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_100846928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_100846B80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain(*v2);
  v4 = sub_100842EFC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082C13C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_10051945C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100846C6C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_1008430EC(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082C378();
    v8 = v12;
  }
  swift_release(*(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v5));
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v5);
  sub_1005196FC(v5, v8);
  v10 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v10);
  return v9;
}

void sub_100846D40(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1008431EC(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v12 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10082C6F0();
      v10 = v12;
    }
    sub_1004C4938(*(_QWORD *)(v10 + 56) + 32 * v7, (uint64_t)a2, &qword_1013E0230);
    sub_100519C80(v7, v10);
    v11 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 1;
  }
}

uint64_t sub_100846E14(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10082CAB4);
}

uint64_t sub_100846E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100842EFC(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v21 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10082CC74();
      v10 = v21;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_1004C4938(v13 + *(_QWORD *)(v15 + 72) * v7, a2, (uint64_t *)&unk_1013F13A0);
    sub_10051A120(v7, v10);
    v16 = *v3;
    *v3 = v10;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 0, 1, v14, v17);
  }
  else
  {
    v19 = sub_1004B804C((uint64_t *)&unk_1013F13A0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19, v20);
  }
}

uint64_t sub_100846F6C(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10082CC88);
}

uint64_t sub_100846F80(uint64_t a1, void (*a2)(unint64_t, uint64_t), void (*a3)(void))
{
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = v3;
  v8 = *v6;
  swift_bridgeObjectRetain(*v6);
  v9 = sub_100842EFC(a1);
  LOBYTE(a1) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
  v12 = *v6;
  v18 = *v6;
  *v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    v12 = v18;
  }
  v13 = *(_QWORD *)(v12 + 48);
  v14 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v9, v14);
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v9);
  a2(v9, v12);
  v16 = *v6;
  *v6 = v12;
  swift_bridgeObjectRelease(v16);
  return v15;
}

uint64_t sub_100847068(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10082CC94);
}

uint64_t sub_10084707C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100842EFC(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v20 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10082D4AC();
      v10 = v20;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for UUID(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(_QWORD *)(v13 + 72) * v7;
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11 + v14, v12);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 32))(a2, *(_QWORD *)(v10 + 56) + v14, v12);
    sub_10051A58C(v7, v10);
    v15 = *v3;
    *v3 = v10;
    v16 = swift_bridgeObjectRelease(v15);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v13 + 56))(a2, 0, 1, v12, v16);
  }
  else
  {
    v18 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18, v19);
  }
}

uint64_t sub_1008471AC(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10082D720);
}

uint64_t sub_1008471C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100847D68(a1, type metadata accessor for CRLRealTimeEnter, (void (*)(unint64_t, uint64_t))sub_10051A848, sub_10082D72C, a2);
}

uint64_t sub_1008471DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100843270(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082D964();
    v8 = v12;
  }

  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_10051AA44(v5, v8);
  v10 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v10);
  return v9;
}

uint64_t sub_1008472A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100842EFC(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082D970();
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, v10);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 24 * v5);
  sub_10051AA48(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

double sub_10084739C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100843710(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10082DD78();
      v10 = v15;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for CodingUserInfoKey(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    sub_10050CB14((_OWORD *)(*(_QWORD *)(v10 + 56) + 32 * v7), a2);
    sub_10051ACF4(v7, v10);
    v13 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_100847498(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10082E5EC);
}

uint64_t sub_1008474AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_1008437B0(a1);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082E5F8();
    v8 = v12;
  }

  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_10051AF78(v5, v8);
  v10 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v10);
  return v9;
}

uint64_t sub_100847574(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain(*v2);
  v4 = sub_100843590(a1, type metadata accessor for CRLBoardIdentifier);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082E7C0();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  sub_1004B84A4(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, type metadata accessor for CRLBoardIdentifier);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_10051B1B8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100847654(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain(*v2);
  v4 = sub_100842EFC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082EA04();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_10051B4A4(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10084772C(uint64_t a1)
{
  return sub_100847854(a1, type metadata accessor for CRLBoardIdentifier, (void (*)(unint64_t, uint64_t))sub_10051B744, sub_10082EC34);
}

uint64_t sub_100847748(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  swift_bridgeObjectRetain(*v2);
  v5 = sub_100843FA8(a1, (void (*)(_QWORD *))sub_10058A3F0, type metadata accessor for CRLBoardPreviewImageCache.Item, (uint64_t (*)(char *, uint64_t))sub_10059CBF0);
  LOBYTE(a1) = v6;
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v8 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082E294();
    v8 = v14;
  }
  v9 = *(_QWORD *)(v8 + 48);
  v10 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  sub_1004B84A4(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  sub_10051B75C(v5, v8);
  v12 = *v2;
  *v2 = v8;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100847838(uint64_t a1)
{
  return sub_100847854(a1, type metadata accessor for CRLBoardIdentifier, (void (*)(unint64_t, uint64_t))sub_10051B744, sub_10082FA0C);
}

uint64_t sub_100847854(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(unint64_t, uint64_t), void (*a4)(void))
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v8 = v4;
  v10 = *v8;
  swift_bridgeObjectRetain(*v8);
  v11 = sub_100843590(a1, a2);
  LOBYTE(a1) = v12;
  swift_bridgeObjectRelease(v10);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
  v14 = *v8;
  v20 = *v8;
  *v8 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    v14 = v20;
  }
  v15 = *(_QWORD *)(v14 + 48);
  v16 = a2(0);
  sub_1004B84A4(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v11, a2);
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v11);
  a3(v11, v14);
  v18 = *v8;
  *v8 = v14;
  swift_bridgeObjectRelease(v18);
  return v17;
}

uint64_t sub_100847948(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10082FA20);
}

uint64_t sub_10084795C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100842E98(a1, a2);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10082FA2C();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_10051BDE4(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

double sub_100847A38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100842EFC(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10083102C();
      v10 = v15;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    sub_10062E5D8(*(_QWORD *)(v10 + 56) + 56 * v7, a2);
    sub_10051C5BC(v7, v10);
    v13 = *v3;
    *v3 = v10;
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    *(_QWORD *)(a2 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_100847B40(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10083126C);
}

uint64_t sub_100847B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100847C34(a1, type metadata accessor for CRLThrottleInfo, sub_10051C898, sub_10083128C, a2);
}

uint64_t sub_100847B70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain(*v2);
  v4 = sub_100843894(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100831610();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_10051C40C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100847C34@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v9;
  unint64_t v12;
  char v13;
  __n128 v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;

  v9 = v5;
  swift_bridgeObjectRetain(*v9);
  v12 = sub_100843894(a1);
  LOBYTE(a1) = v13;
  v14 = swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    v16 = *v9;
    v24 = *v9;
    *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v16 = v24;
    }

    v17 = *(_QWORD *)(v16 + 56);
    v18 = a2(0);
    v19 = *(_QWORD *)(v18 - 8);
    sub_1004B84E0(v17 + *(_QWORD *)(v19 + 72) * v12, a5, a2);
    a3(v12, v16);
    *v9 = v16;
    v20 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v19 + 56))(a5, 0, 1, v18, v20);
  }
  else
  {
    v22 = ((uint64_t (*)(_QWORD, __n128))a2)(0, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v22 - 8) + 56))(a5, 1, 1, v22, v23);
  }
}

uint64_t sub_100847D68@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v9;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __n128 v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;

  v9 = v5;
  v12 = *v9;
  swift_bridgeObjectRetain(*v9);
  v13 = sub_100842EFC(a1);
  LOBYTE(a1) = v14;
  v15 = swift_bridgeObjectRelease(v12);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    v17 = *v9;
    v28 = *v9;
    *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v17 = v28;
    }
    v18 = *(_QWORD *)(v17 + 48);
    v19 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v13, v19);
    v20 = *(_QWORD *)(v17 + 56);
    v21 = a2(0);
    v22 = *(_QWORD *)(v21 - 8);
    sub_1004B84E0(v20 + *(_QWORD *)(v22 + 72) * v13, a5, a2);
    a3(v13, v17);
    v23 = *v9;
    *v9 = v17;
    v24 = swift_bridgeObjectRelease(v23);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v22 + 56))(a5, 0, 1, v21, v24);
  }
  else
  {
    v26 = ((uint64_t (*)(_QWORD, __n128))a2)(0, v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 56))(a5, 1, 1, v26, v27);
  }
}

uint64_t sub_100847EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;

  v3 = v2;
  swift_bridgeObjectRetain(*v3);
  v6 = sub_100843590(a1, type metadata accessor for CRLBoardIdentifier);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100832BB4();
      v9 = v19;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for CRLBoardIdentifier(0);
    sub_1004B84A4(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, type metadata accessor for CRLBoardIdentifier);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_10051CAAC(v6, v9);
    *v3 = v9;
    v15 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v14 + 56))(a2, 0, 1, v13, v15);
  }
  else
  {
    v17 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17, v18);
  }
}

uint64_t sub_100847FF8(uint64_t a1)
{
  return sub_100846F80(a1, (void (*)(unint64_t, uint64_t))sub_10051A11C, sub_10083302C);
}

uint64_t sub_10084800C(uint64_t a1)
{
  return sub_100847854(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier, (void (*)(unint64_t, uint64_t))sub_10051CAB8, sub_100833038);
}

uint64_t sub_100848028(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain(*v2);
  v4 = sub_100843590(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10083304C();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  sub_1004B84A4(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + v4);
  sub_10051CAC4(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100848108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_100842E98(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v21 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1008339A4();
      v12 = v21;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    v13 = *(_QWORD *)(v12 + 56);
    v14 = type metadata accessor for UUID(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a3, v13 + *(_QWORD *)(v15 + 72) * v9, v14);
    sub_10051CF74(v9, v12);
    v16 = *v4;
    *v4 = v12;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a3, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19, v20);
  }
}

uint64_t sub_100848238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_100843FA8(a1, (void (*)(_QWORD *))sub_1004BC2D8, type metadata accessor for CRLAssetReferrerIdentifier, (uint64_t (*)(char *, uint64_t))sub_1004BDCB8);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v21 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100833C34();
      v10 = v21;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for CRLAssetReferrerIdentifier(0);
    sub_1004B84A4(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, type metadata accessor for CRLAssetReferrerIdentifier);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for CRLBoardIdentifier(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_1004B84E0(v13 + *(_QWORD *)(v15 + 72) * v7, a2, type metadata accessor for CRLBoardIdentifier);
    sub_10051D188(v7, v10);
    v16 = *v3;
    *v3 = v10;
    v17 = swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v15 + 56))(a2, 0, 1, v14, v17);
  }
  else
  {
    v19 = type metadata accessor for CRLBoardIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v19 - 8) + 56))(a2, 1, 1, v19, v20);
  }
}

double sub_10084838C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain(*v3);
  v6 = sub_100842FB0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1008342F4();
      v9 = v11;
    }

    sub_10050CB14((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_10051D998(v6, v9);
    *v3 = v9;
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_100848470@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  char v5;
  unint64_t v6;
  char v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;

  v3 = v2;
  v5 = a1 & 1;
  swift_bridgeObjectRetain(*v3);
  v6 = sub_100843B24(v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100834718();
      v10 = v18;
    }
    v11 = *(_QWORD *)(v10 + 56);
    v12 = type metadata accessor for CRLSyncScheduledActivity(0);
    v13 = *(_QWORD *)(v12 - 8);
    sub_1004B84E0(v11 + *(_QWORD *)(v13 + 72) * v6, a2, type metadata accessor for CRLSyncScheduledActivity);
    sub_10051DE3C(v6, v10);
    *v3 = v10;
    v14 = swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v13 + 56))(a2, 0, 1, v12, v14);
  }
  else
  {
    v16 = type metadata accessor for CRLSyncScheduledActivity(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16, v17);
  }
}

uint64_t sub_100848588@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(unint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v9;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __n128 v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;

  v9 = v5;
  v12 = *v9;
  swift_bridgeObjectRetain(*v9);
  v13 = sub_100843590(a1, type metadata accessor for CRLBoardIdentifier);
  LOBYTE(a1) = v14;
  v15 = swift_bridgeObjectRelease(v12);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
    v17 = *v9;
    v28 = *v9;
    *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v17 = v28;
    }
    v18 = *(_QWORD *)(v17 + 48);
    v19 = type metadata accessor for CRLBoardIdentifier(0);
    sub_1004B84A4(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v13, type metadata accessor for CRLBoardIdentifier);
    v20 = *(_QWORD *)(v17 + 56);
    v21 = a2(0);
    v22 = *(_QWORD *)(v21 - 8);
    sub_1004B84E0(v20 + *(_QWORD *)(v22 + 72) * v13, a5, a2);
    a3(v13, v17);
    v23 = *v9;
    *v9 = v17;
    v24 = swift_bridgeObjectRelease(v23);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v22 + 56))(a5, 0, 1, v21, v24);
  }
  else
  {
    v26 = ((uint64_t (*)(_QWORD, __n128))a2)(0, v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 56))(a5, 1, 1, v26, v27);
  }
}

void sub_1008486DC(unint64_t *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100D16830(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100848744(v4);
  *a1 = v2;
}

void sub_100848744(uint64_t *a1)
{
  Swift::Int v2;
  Swift::Int v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  CGFloat y;
  char *v10;
  Swift::Int v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  double v17;
  double x;
  id v19;
  double v20;
  double v21;
  void *v22;
  void *v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  int v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int v33;
  Swift::Int v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t *v37;
  Swift::Int v38;
  Swift::Int v39;
  _QWORD *v40;
  void *v41;
  void *v42;
  double v43;
  double v44;
  id v45;
  double v46;
  double v47;
  void *v48;
  void *v49;
  id v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  double *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  int v120;
  double *v121;
  Swift::Int v122;
  uint64_t v123;
  char *v124;
  Swift::Int v125;
  Swift::Int v126;
  Swift::Int v127;
  int v128;
  uint64_t v129;
  Swift::Int v130;
  double *v131;
  uint64_t v132;
  uint64_t *v133;
  _QWORD v134[5];
  uint64_t v135;
  double v136;
  _QWORD v137[5];
  uint64_t v138;
  double v139;

  v2 = a1[1];
  v3 = _minimumMergeRunLength(_:)(v2);
  if (v3 >= v2)
  {
    if (v2 < 0)
      goto LABEL_194;
    if (v2)
      sub_1008494D4(0, v2, 1, a1);
    return;
  }
  if (v2 >= 0)
    v4 = v2;
  else
    v4 = v2 + 1;
  if (v2 < -1)
    goto LABEL_206;
  v5 = _swiftEmptyArrayStorage;
  v122 = v3;
  v133 = a1;
  if (v2 < 2)
  {
    v131 = &_swiftEmptyArrayStorage[4];
    if (v2 != 1)
    {
      v61 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
      v121 = _swiftEmptyArrayStorage;
      v10 = (char *)_swiftEmptyArrayStorage;
LABEL_157:
      if (v61 >= 2)
      {
        v114 = *v133;
        do
        {
          v115 = v61 - 2;
          if (v61 < 2)
            goto LABEL_188;
          if (!v114)
            goto LABEL_205;
          v116 = *(_QWORD *)&v10[16 * v115 + 32];
          v117 = *(_QWORD *)&v10[16 * v61 + 24];
          sub_100849928(v114 + 56 * v116, (_QWORD *)(v114 + 56 * *(_QWORD *)&v10[16 * v61 + 16]), (_QWORD *)(v114 + 56 * v117), (unint64_t)v131);
          if (v132)
            break;
          if (v117 < v116)
            goto LABEL_190;
          if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
            v10 = sub_100D1664C((uint64_t)v10);
          if (v115 >= *((_QWORD *)v10 + 2))
            goto LABEL_191;
          v118 = &v10[16 * v115 + 32];
          *(_QWORD *)v118 = v116;
          *((_QWORD *)v118 + 1) = v117;
          v119 = *((_QWORD *)v10 + 2);
          if (v61 > v119)
            goto LABEL_192;
          memmove(&v10[16 * v61 + 16], &v10[16 * v61 + 32], 16 * (v119 - v61));
          *((_QWORD *)v10 + 2) = v119 - 1;
          v61 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_170:
      v113 = v10;
LABEL_171:
      swift_bridgeObjectRelease(v113);
      v121[2] = 0.0;
      swift_bridgeObjectRelease(v121);
      return;
    }
    v121 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v4 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v4 >> 1, &type metadata for CRLMathCalculationControllerExpression);
    *(_QWORD *)(v7 + 16) = v6;
    v121 = (double *)v7;
    v131 = (double *)(v7 + 32);
  }
  v8 = 0;
  y = CGPointZero.y;
  v10 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v11 = v8++;
    v127 = v11;
    if (v8 >= v2)
      goto LABEL_61;
    v12 = *v133;
    sub_10062E59C((_QWORD *)(*v133 + 56 * v8), v137);
    v123 = v12;
    sub_10062E59C((_QWORD *)(v12 + 56 * v11), v134);
    sub_100841000((uint64_t)v137, (uint64_t)v134);
    v128 = v13;
    if (v132)
    {
      sub_1007634F4((uint64_t)v134);
      sub_1007634F4((uint64_t)v137);
      goto LABEL_170;
    }
    sub_1007634F4((uint64_t)v134);
    sub_1007634F4((uint64_t)v137);
    v8 = v11 + 2;
    v125 = v2;
    if (v11 + 2 >= v2)
      goto LABEL_49;
    v14 = (_QWORD *)(v12 + 56 * v11 + 56);
    do
    {
      sub_10062E59C(v14 + 7, v137);
      sub_10062E59C(v14, v134);
      v15 = (void *)swift_unknownObjectWeakLoadStrong(&v138);
      v16 = v15;
      v17 = y;
      x = CGPointZero.x;
      if (v15)
      {
        v19 = objc_msgSend(v15, "pureGeometryInRoot");

        if (!v19)
          goto LABEL_202;
        objc_msgSend(v19, "frame");
        x = v20;
        v17 = v21;

      }
      v22 = (void *)swift_unknownObjectWeakLoadStrong(&v135);
      v23 = v22;
      if (v22)
      {
        v24 = objc_msgSend(v22, "pureGeometryInRoot");

        if (!v24)
          goto LABEL_203;
        objc_msgSend(v24, "frame");
        v26 = v25;
        v28 = v27;

        if (v16)
        {
LABEL_24:
          if (!v23)
            goto LABEL_38;
          goto LABEL_25;
        }
      }
      else
      {
        v26 = 0.0;
        v28 = 0.0;
        if (v16)
          goto LABEL_24;
      }
      sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 129, "invalid nil value found", 23, 2u, (uint64_t)v5);
      v5 = _swiftEmptyArrayStorage;
      v2 = v125;
      v11 = v127;
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 129, (uint64_t)"invalid nil value found", 23, 2u);
      if (!v23)
      {
LABEL_38:
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 130, "invalid nil value found", 23, 2u, (uint64_t)v5);
        v2 = v125;
        v5 = _swiftEmptyArrayStorage;
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 130, (uint64_t)"invalid nil value found", 23, 2u);
        v28 = y;
        v26 = CGPointZero.x;
      }
LABEL_25:
      if (vabdd_f64(x, v28) > 16.0 || x == v26)
      {
        if (v17 < v28)
          goto LABEL_42;
        if (v28 < v17)
          goto LABEL_45;
      }
      if (sub_1003A91F4())
      {
        if (v26 < x)
          goto LABEL_42;
        if (x < v26)
          goto LABEL_45;
      }
      else
      {
        if (x < v26)
          goto LABEL_42;
        if (v26 < x)
          goto LABEL_45;
      }
      if (v139 < v136)
      {
LABEL_42:
        v30 = 1;
        goto LABEL_46;
      }
      if (v136 >= v139)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 166, "Should not get a tie when sorting calculate expressions.", 56, 2u, (uint64_t)v5);
        v2 = v125;
        v11 = v127;
        sub_1004F5394((uint64_t)v5, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 166, (uint64_t)"Should not get a tie when sorting calculate expressions.", 56, 2u);
      }
LABEL_45:
      v30 = 0;
LABEL_46:
      sub_1007634F4((uint64_t)v134);
      sub_1007634F4((uint64_t)v137);
      if (((v128 ^ v30) & 1) != 0)
        goto LABEL_49;
      ++v8;
      v14 += 7;
    }
    while (v2 != v8);
    v8 = v2;
LABEL_49:
    if ((v128 & 1) != 0)
      break;
LABEL_61:
    if (v8 >= v2)
      goto LABEL_104;
    if (__OFSUB__(v8, v11))
      goto LABEL_193;
    if (v8 - v11 >= v122)
      goto LABEL_104;
    if (__OFADD__(v11, v122))
      goto LABEL_195;
    if (v11 + v122 >= v2)
      v35 = v2;
    else
      v35 = v11 + v122;
    if (v35 < v11)
    {
LABEL_196:
      __break(1u);
      goto LABEL_197;
    }
    if (v8 == v35)
      goto LABEL_104;
    v124 = v10;
    v126 = v35;
    v36 = 56 * v8;
    v37 = v133;
    while (2)
    {
      v38 = v11;
      v129 = v36;
      v39 = v8;
      while (1)
      {
        v40 = (_QWORD *)(*v37 + v36);
        sub_10062E59C(v40, v137);
        sub_10062E59C(v40 - 7, v134);
        v41 = (void *)swift_unknownObjectWeakLoadStrong(&v138);
        v42 = v41;
        v43 = y;
        v44 = CGPointZero.x;
        if (v41)
        {
          v45 = objc_msgSend(v41, "pureGeometryInRoot");

          if (!v45)
            goto LABEL_199;
          objc_msgSend(v45, "frame");
          v44 = v46;
          v43 = v47;

        }
        v48 = (void *)swift_unknownObjectWeakLoadStrong(&v135);
        v49 = v48;
        if (v48)
        {
          v50 = objc_msgSend(v48, "pureGeometryInRoot");

          if (!v50)
            goto LABEL_200;
          objc_msgSend(v50, "frame");
          v52 = v51;
          v54 = v53;

          if (!v42)
          {
LABEL_93:
            sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 129, "invalid nil value found", 23, 2u, (uint64_t)v5);
            v5 = _swiftEmptyArrayStorage;
            v37 = v133;
            v8 = v39;
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 129, (uint64_t)"invalid nil value found", 23, 2u);
            if (v49)
              goto LABEL_81;
            goto LABEL_94;
          }
        }
        else
        {
          v52 = 0.0;
          v54 = 0.0;
          if (!v42)
            goto LABEL_93;
        }
        if (v49)
          goto LABEL_81;
LABEL_94:
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 130, "invalid nil value found", 23, 2u, (uint64_t)v5);
        v37 = v133;
        v8 = v39;
        sub_1004F5394((uint64_t)v5, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 130, (uint64_t)"invalid nil value found", 23, 2u);
        v54 = y;
        v52 = CGPointZero.x;
LABEL_81:
        if (vabdd_f64(v44, v54) > 16.0 || v44 == v52)
        {
          if (v43 < v54)
            goto LABEL_98;
          if (v54 < v43)
            goto LABEL_71;
        }
        if (!sub_1003A91F4())
          break;
        if (v52 >= v44)
        {
          if (v44 < v52)
            goto LABEL_71;
          goto LABEL_97;
        }
LABEL_98:
        sub_1007634F4((uint64_t)v134);
        sub_1007634F4((uint64_t)v137);
        v56 = *v37;
        if (!*v37)
          goto LABEL_198;
        v57 = v56 + v36;
        v58 = v56 + v36 - 56;
        sub_10062E5D8(v56 + v36, (uint64_t)v137);
        swift_arrayInitWithTakeFrontToBack(v57, v58, 1, &type metadata for CRLMathCalculationControllerExpression);
        sub_10062E5D8((uint64_t)v137, v58);
        v36 -= 56;
        if (v8 == ++v38)
          goto LABEL_72;
      }
      if (v44 < v52)
        goto LABEL_98;
      if (v52 < v44)
        goto LABEL_71;
LABEL_97:
      if (v139 < v136)
        goto LABEL_98;
      if (v136 >= v139)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 166, "Should not get a tie when sorting calculate expressions.", 56, 2u, (uint64_t)v5);
        v8 = v39;
        sub_1004F5394((uint64_t)v5, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 166, (uint64_t)"Should not get a tie when sorting calculate expressions.", 56, 2u);
      }
LABEL_71:
      sub_1007634F4((uint64_t)v134);
      sub_1007634F4((uint64_t)v137);
LABEL_72:
      ++v8;
      v11 = v127;
      v36 = v129 + 56;
      if (v8 != v126)
        continue;
      break;
    }
    v8 = v126;
    v10 = v124;
LABEL_104:
    if (v8 < v11)
      goto LABEL_189;
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      v10 = sub_100D15FCC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v60 = *((_QWORD *)v10 + 2);
    v59 = *((_QWORD *)v10 + 3);
    v61 = v60 + 1;
    if (v60 >= v59 >> 1)
      v10 = sub_100D15FCC((char *)(v59 > 1), v60 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v61;
    v62 = v10 + 32;
    v63 = &v10[16 * v60 + 32];
    *(_QWORD *)v63 = v11;
    *((_QWORD *)v63 + 1) = v8;
    if (v60)
    {
      v130 = v8;
      while (1)
      {
        v64 = v61 - 1;
        if (v61 >= 4)
        {
          v69 = &v62[16 * v61];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_177;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_178;
          v76 = v61 - 2;
          v77 = &v62[16 * v61 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_180;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_183;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_187;
            v92 = v67 < v102;
            goto LABEL_142;
          }
        }
        else
        {
          if (v61 != 3)
          {
            v93 = *((_QWORD *)v10 + 4);
            v94 = *((_QWORD *)v10 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_136;
          }
          v66 = *((_QWORD *)v10 + 4);
          v65 = *((_QWORD *)v10 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_179;
        v76 = v61 - 2;
        v82 = &v62[16 * v61 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_182;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_185;
        if (__OFADD__(v86, v91))
          goto LABEL_186;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_142:
          if (v92)
            v64 = v76;
          goto LABEL_144;
        }
LABEL_136:
        if ((v87 & 1) != 0)
          goto LABEL_181;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_184;
        if (v98 < v86)
          goto LABEL_153;
LABEL_144:
        v103 = v64 - 1;
        if (v64 - 1 >= v61)
        {
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
          goto LABEL_196;
        }
        if (!*v133)
          goto LABEL_201;
        v104 = v5;
        v105 = v10;
        v106 = &v62[16 * v103];
        v107 = *(_QWORD *)v106;
        v108 = v62;
        v109 = v64;
        v110 = &v62[16 * v64];
        v111 = *((_QWORD *)v110 + 1);
        sub_100849928(*v133 + 56 * *(_QWORD *)v106, (_QWORD *)(*v133 + 56 * *(_QWORD *)v110), (_QWORD *)(*v133 + 56 * v111), (unint64_t)v131);
        if (v132)
        {
          v113 = v105;
          goto LABEL_171;
        }
        if (v111 < v107)
          goto LABEL_174;
        if (v109 > *((_QWORD *)v105 + 2))
          goto LABEL_175;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v108[16 * v103 + 8] = v111;
        v112 = *((_QWORD *)v105 + 2);
        if (v109 >= v112)
          goto LABEL_176;
        v10 = v105;
        v61 = v112 - 1;
        memmove(v110, v110 + 16, 16 * (v112 - 1 - v109));
        v62 = v108;
        *((_QWORD *)v105 + 2) = v112 - 1;
        v5 = v104;
        v8 = v130;
        if (v112 <= 2)
          goto LABEL_153;
      }
    }
    v61 = 1;
LABEL_153:
    v2 = v133[1];
    if (v8 >= v2)
      goto LABEL_157;
  }
  if (v8 >= v11)
  {
    if (v11 < v8)
    {
      v31 = v123 + 56 * v8 - 56;
      v32 = v123 + 56 * v11;
      v33 = v8;
      v34 = v11;
      do
      {
        if (v34 != --v33)
        {
          if (!v123)
            goto LABEL_204;
          sub_10062E5D8(v32, (uint64_t)v137);
          if (v34 >= v33)
            swift_arrayInitWithTakeBackToFront(v32);
          else
            swift_arrayInitWithTakeFrontToBack(v32, v31, 1, &type metadata for CRLMathCalculationControllerExpression);
          sub_10062E5D8((uint64_t)v137, v31);
        }
        ++v34;
        v31 -= 56;
        v32 += 56;
      }
      while (v34 < v33);
      v2 = v125;
    }
    goto LABEL_61;
  }
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
LABEL_206:
  LOBYTE(v120) = 2;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, v120, 936, 0);
  __break(1u);
}

void sub_1008494D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  CGFloat y;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  double v11;
  double x;
  id v13;
  double v14;
  double v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v29;
  uint64_t v31;
  _QWORD v32[5];
  uint64_t v33;
  double v34;
  _QWORD v35[5];
  uint64_t v36;
  double v37;

  v31 = a3;
  if (a3 == a2)
    return;
  v4 = a4;
  y = CGPointZero.y;
  v6 = 56 * a3;
LABEL_6:
  v7 = a1;
  v29 = v6;
  while (1)
  {
    v8 = (_QWORD *)(*v4 + v6);
    sub_10062E59C(v8, v35);
    sub_10062E59C(v8 - 7, v32);
    v9 = (void *)swift_unknownObjectWeakLoadStrong(&v36);
    v10 = v9;
    v11 = y;
    x = CGPointZero.x;
    if (v9)
    {
      v13 = objc_msgSend(v9, "pureGeometryInRoot");

      if (!v13)
        goto LABEL_37;
      objc_msgSend(v13, "frame");
      x = v14;
      v11 = v15;

    }
    v16 = (void *)swift_unknownObjectWeakLoadStrong(&v33);
    v17 = v16;
    if (v16)
    {
      v18 = objc_msgSend(v16, "pureGeometryInRoot");

      if (!v18)
        goto LABEL_38;
      objc_msgSend(v18, "frame");
      v20 = v19;
      v22 = v21;

      if (!v10)
      {
LABEL_26:
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 129, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
        v4 = a4;
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 129, (uint64_t)"invalid nil value found", 23, 2u);
        if (v17)
          goto LABEL_14;
        goto LABEL_27;
      }
    }
    else
    {
      v20 = 0.0;
      v22 = 0.0;
      if (!v10)
        goto LABEL_26;
    }
    if (v17)
      goto LABEL_14;
LABEL_27:
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 130, "invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v4 = a4;
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 130, (uint64_t)"invalid nil value found", 23, 2u);
    v22 = y;
    v20 = CGPointZero.x;
LABEL_14:
    if (vabdd_f64(x, v22) > 16.0 || x == v20)
    {
      if (v11 < v22)
        goto LABEL_31;
      if (v22 < v11)
        goto LABEL_4;
    }
    if (sub_1003A91F4())
    {
      if (v20 < x)
        goto LABEL_31;
      if (x < v20)
        goto LABEL_4;
    }
    else
    {
      if (x < v20)
        goto LABEL_31;
      if (v20 < x)
        goto LABEL_4;
    }
    if (v37 >= v34)
    {
      if (v34 >= v37)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateCalculateDocument()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2, 166, "Should not get a tie when sorting calculate expressions.", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateCalculateDocument()", 25, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLMathCalculationController.swift", 98, 2u, 166, (uint64_t)"Should not get a tie when sorting calculate expressions.", 56, 2u);
      }
LABEL_4:
      sub_1007634F4((uint64_t)v32);
      sub_1007634F4((uint64_t)v35);
LABEL_5:
      v6 = v29 + 56;
      if (++v31 == a2)
        return;
      goto LABEL_6;
    }
LABEL_31:
    sub_1007634F4((uint64_t)v32);
    sub_1007634F4((uint64_t)v35);
    v24 = *v4;
    if (!*v4)
      break;
    v25 = v24 + v6;
    v26 = v24 + v6 - 56;
    sub_10062E5D8(v24 + v6, (uint64_t)v35);
    swift_arrayInitWithTakeFrontToBack(v25, v26, 1, &type metadata for CRLMathCalculationControllerExpression);
    sub_10062E5D8((uint64_t)v35, v26);
    v6 -= 56;
    if (v31 == ++v7)
      goto LABEL_5;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_100849928(unint64_t a1, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  char v21;
  char v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t result;
  _QWORD v27[7];
  _QWORD v28[7];
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  v5 = (_QWORD *)a4;
  v6 = a3;
  v7 = a2;
  v9 = (uint64_t)a2 - a1;
  v10 = (uint64_t)((uint64_t)a2 - a1) / 56;
  v11 = (char *)a3 - (char *)a2;
  v12 = ((char *)a3 - (char *)a2) / 56;
  v31 = (_QWORD *)a1;
  v30 = (_QWORD *)a4;
  if (v10 >= v12)
  {
    if (v11 >= -55)
    {
      if (a4 < (unint64_t)a2 || (unint64_t)&a2[7 * v12] <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, ((char *)a3 - (char *)a2) / 56, &type metadata for CRLMathCalculationControllerExpression);
      }
      else if ((_QWORD *)a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v19 = &v5[7 * v12];
      v29 = (unint64_t)v19;
      v31 = v7;
      if (a1 >= (unint64_t)v7 || v11 < 56)
        goto LABEL_53;
      while (1)
      {
        sub_10062E59C(v19 - 7, v28);
        v20 = v7 - 7;
        sub_10062E59C(v7 - 7, v27);
        sub_100841000((uint64_t)v28, (uint64_t)v27);
        if (v4)
          goto LABEL_52;
        v22 = v21;
        v23 = (unint64_t)(v6 - 7);
        sub_1007634F4((uint64_t)v27);
        sub_1007634F4((uint64_t)v28);
        if ((v22 & 1) != 0)
        {
          if (v6 < v7 || v23 >= (unint64_t)v7)
          {
            swift_arrayInitWithTakeFrontToBack(v6 - 7, v7 - 7, 1, &type metadata for CRLMathCalculationControllerExpression);
          }
          else if (v6 != v7)
          {
            swift_arrayInitWithTakeBackToFront(v6 - 7);
          }
          v31 -= 7;
        }
        else
        {
          v24 = (_QWORD *)v29;
          v25 = v29 - 56;
          v29 -= 56;
          if (v6 < v24 || v23 >= (unint64_t)v24)
          {
            swift_arrayInitWithTakeFrontToBack(v6 - 7, v25, 1, &type metadata for CRLMathCalculationControllerExpression);
          }
          else if (v6 != v24)
          {
            swift_arrayInitWithTakeBackToFront(v6 - 7);
          }
          v20 = v7;
        }
        v19 = (_QWORD *)v29;
        if (v29 > (unint64_t)v5)
        {
          v7 = v20;
          v6 -= 7;
          if ((unint64_t)v20 > a1)
            continue;
        }
        goto LABEL_53;
      }
    }
  }
  else if (v9 >= -55)
  {
    if (a4 < a1 || a1 + 56 * v10 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v10, &type metadata for CRLMathCalculationControllerExpression);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v13 = (unint64_t)&v5[7 * v10];
    v29 = v13;
    if (v7 >= v6 || v9 < 56)
      goto LABEL_53;
    while (1)
    {
      sub_10062E59C(v7, v28);
      sub_10062E59C(v5, v27);
      sub_100841000((uint64_t)v28, (uint64_t)v27);
      if (v4)
        break;
      v15 = v14;
      sub_1007634F4((uint64_t)v27);
      sub_1007634F4((uint64_t)v28);
      v16 = (unint64_t)v31;
      if ((v15 & 1) != 0)
      {
        v17 = (unint64_t)(v7 + 7);
        if (v31 < v7 || (unint64_t)v31 >= v17)
        {
          swift_arrayInitWithTakeFrontToBack(v31, v7, 1, &type metadata for CRLMathCalculationControllerExpression);
        }
        else if (v31 == v7)
        {
          v16 = (unint64_t)v7;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v31);
        }
      }
      else
      {
        v18 = (unint64_t)(v30 + 7);
        if (v31 < v30 || (unint64_t)v31 >= v18)
        {
          swift_arrayInitWithTakeFrontToBack(v31, v30, 1, &type metadata for CRLMathCalculationControllerExpression);
        }
        else if (v31 != v30)
        {
          swift_arrayInitWithTakeBackToFront(v31);
        }
        v30 = (_QWORD *)v18;
        v17 = (unint64_t)v7;
      }
      v31 = (_QWORD *)(v16 + 56);
      v5 = v30;
      if ((unint64_t)v30 < v13)
      {
        v7 = (_QWORD *)v17;
        if (v17 < (unint64_t)v6)
          continue;
      }
      goto LABEL_53;
    }
LABEL_52:
    sub_1007634F4((uint64_t)v27);
    sub_1007634F4((uint64_t)v28);
LABEL_53:
    sub_100D164CC((unint64_t *)&v31, (unint64_t *)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100849D50()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v1 = v0;
  if (qword_1013DD250 != -1)
  {
    swift_once(&qword_1013DD250, sub_100840384);
    v0 = v1;
  }
  objc_msgSend(v0, "postNotificationName:object:userInfo:", static CRLMathCalculationController.mathHintsModeChangedNotificationName, 0, 0);

}

uint64_t sub_100849DD8(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

uint64_t sub_100849E04()
{
  uint64_t v0;
  Swift::Int v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, *(_QWORD *)(v0 + 40));
  String.hash(into:)(v3, 0x617453656B617761, 0xEA00000000006574);
  v1 = Hasher._finalize()();
  return sub_100849DD8(v1);
}

void _s8Freeform28CRLMathCalculationControllerC13mathHintsModeAA0bfG0Ovs_0(uint64_t a1)
{
  char v2;
  char v3;
  _BYTE *v4;
  id v5;
  _QWORD v6[3];
  ValueMetadata *v7;
  unint64_t v8;

  v7 = &type metadata for CRLPencilAndPaperFeatureFlags;
  v8 = sub_10054E910();
  LOBYTE(v6[0]) = 0;
  v2 = isFeatureEnabled(_:)(v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
  if ((v2 & 1) != 0)
  {
    v7 = &type metadata for CRLFeatureFlags;
    v8 = sub_1004DB6DC();
    LOBYTE(v6[0]) = 14;
    v3 = isFeatureEnabled(_:)(v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
    if ((v3 & 1) != 0)
    {
      if (qword_1013DD618 != -1)
        swift_once(&qword_1013DD618, sub_1009A4410);
      v4 = (_BYTE *)(qword_1013FF120
                   + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v6, 0, 0);
      if (*v4 == 1)
      {
        v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        objc_msgSend(v5, "setInteger:forKey:", a1, CFSTR("CRLMathRecognitionMode"));

      }
    }
  }
}

unint64_t sub_10084A0D0()
{
  unint64_t result;

  result = qword_1013F5418;
  if (!qword_1013F5418)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLMathHintsMode, &type metadata for CRLMathHintsMode);
    atomic_store(result, (unint64_t *)&qword_1013F5418);
  }
  return result;
}

unint64_t sub_10084A118()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F5420;
  if (!qword_1013F5420)
  {
    v1 = sub_1004CB6A4(&qword_1013F5428);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F5420);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMathHintsMode()
{
  return &type metadata for CRLMathHintsMode;
}

uint64_t destroy for CRLMathCalculationControllerExpression(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));

  return swift_unknownObjectWeakDestroy(a1 + 40);
}

_QWORD *initializeWithCopy for CRLMathCalculationControllerExpression(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  id v9;
  id v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = (void *)a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = a2 + 5;
  swift_retain(v4);
  swift_retain(v5);
  v9 = v6;
  v10 = v7;
  swift_unknownObjectWeakCopyInit(a1 + 5, v8);
  a1[6] = a2[6];
  return a1;
}

_QWORD *assignWithCopy for CRLMathCalculationControllerExpression(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a1[3];
  v9 = (void *)a2[3];
  a1[3] = v9;
  v10 = v9;

  v11 = (void *)a1[4];
  v12 = (void *)a2[4];
  a1[4] = v12;
  v13 = v12;

  swift_unknownObjectWeakCopyAssign(a1 + 5, a2 + 5);
  a1[6] = a2[6];
  return a1;
}

uint64_t initializeWithTake for CRLMathCalculationControllerExpression(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakTakeInit(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for CRLMathCalculationControllerExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v7 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  swift_unknownObjectWeakTakeAssign(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for CRLMathCalculationControllerExpression()
{
  return &type metadata for CRLMathCalculationControllerExpression;
}

uint64_t sub_10084A3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10084A430()
{
  return sub_10084A7AC((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_10084278C);
}

uint64_t sub_10084A43C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10084A44C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_10084A458()
{
  sub_10084A4F8(&OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroups);
}

uint64_t sub_10084A464()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10084A478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10084A4EC()
{
  sub_10084A4F8(&OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressions);
}

void sub_10084A4F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  sub_100842434(*(void ***)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t sub_10084A53C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10084A54C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10084A578()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10084A59C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013F548C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CFD00;
  return swift_task_switch(sub_1008407C4, 0, 0);
}

const char *sub_10084A5F4()
{
  return "CRLMathRecognitionMode";
}

id sub_10084A600@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "CRLMathRecognitionMode");
  *a2 = result;
  return result;
}

unint64_t sub_10084A630()
{
  unint64_t result;

  result = qword_1013F54A0;
  if (!qword_1013F54A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRLMathHintsMode, &type metadata for CRLMathHintsMode);
    atomic_store(result, &qword_1013F54A0);
  }
  return result;
}

void sub_10084A678()
{
  sub_10084A6B4(&OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_expressionStrokeGroups, sub_1008327CC, (void (*)(unint64_t, uint64_t))sub_10051A11C);
}

void sub_10084A698()
{
  sub_10084A6B4(&OBJC_IVAR____TtC8Freeform28CRLMathCalculationController_pkExpressions, sub_100831278, (void (*)(unint64_t, uint64_t))sub_10051A11C);
}

void sub_10084A6B4(_QWORD *a1, void (*a2)(void), void (*a3)(unint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  sub_100842BAC(*(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7), a1, a2, a3);
}

uint64_t sub_10084A710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10084A7A0()
{
  return sub_10084A7AC((uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_1008419D4);
}

uint64_t sub_10084A7AC(uint64_t (*a1)(_QWORD, unint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *(_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10084A800()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10084A834(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1013F54AC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1004CF80C;
  return sub_100841B80(a1, v4, v5, v7, v6);
}

void sub_10084A8DC(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _DWORD v12[4];

  v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v8 = type metadata accessor for CRLWPShapeItemData(0);
  v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v9 + 760))();
  swift_retain(v7);
  v10 = sub_1004B804C(&qword_1013F55A0);
  CRRegister.wrappedValue.getter(v10);
  v11 = v12[3];
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData);
  swift_release(v7);
  *a2 = v11;
}

void sub_10084AA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v12)
  {
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v13)
    {
      (*(void (**)(__n128))(*(_QWORD *)v13 + 760))(v9);
      sub_1004B8460((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
      v14 = v12;
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v11, v1);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
      v15 = (void *)CRAttributedString.attributedString.getter(v1);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      objc_msgSend(v15, "length");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10084AC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  void *v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 288);
  v5 = swift_retain(v3);
  v6 = (void *)v4(v5);
  LODWORD(v3) = objc_msgSend(v6, "widthValid", swift_release(v3).n128_f64[0]);

  if (!(_DWORD)v3)
    return 1;
  v7 = *(_QWORD *)(v1 + v2);
  v8 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 288);
  v9 = swift_retain(v7);
  v10 = (void *)v8(v9);
  LODWORD(v7) = objc_msgSend(v10, "heightValid", swift_release(v7).n128_f64[0]);

  return v7 ^ 1;
}

char *sub_10084AD30(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_10084AD70(a1, a2);
}

char *sub_10084AD70(void *a1, uint64_t a2)
{
  _BYTE *v2;
  id v5;
  double v6;
  id v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char *v15;
  id v16;
  objc_super v18;
  _QWORD v19[31];
  _BYTE v20[248];

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage] = 0;
  v2[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textIsVertical] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v5 = a1;
  *(_QWORD *)&v6 = swift_retain(a2).n128_u64[0];
  v7 = objc_msgSendSuper2(&v18, "init", v6);
  sub_10054F488((uint64_t)v20);
  sub_1004C4938((uint64_t)v20, (uint64_t)v19, &qword_1013E1B50);
  v8 = objc_allocWithZone((Class)type metadata accessor for CRLWPStorage());
  v9 = v5;
  swift_retain(a2);
  v10 = (char *)v7;
  v11 = sub_1007E7114(v9, a2, v19);

  swift_release(a2);
  v12 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  v13 = *(void **)&v10[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage] = v11;

  v14 = *(void **)&v10[v12];
  if (v14)
  {
    v15 = v10;
    v16 = v14;
    sub_1007D5210((uint64_t)v10);

  }
  swift_release(a2);
  return v10;
}

BOOL sub_10084AF04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  void *v12;
  id v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v1)
    return 0;
  v2 = v0;
  v3 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v5 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 288);
  v6 = v1;
  v7 = swift_retain(v4);
  v8 = (void *)v5(v7);
  LODWORD(v4) = objc_msgSend(v8, "widthValid", swift_release(v4).n128_f64[0]);

  if ((_DWORD)v4)
  {
    v9 = *(_QWORD *)(v2 + v3);
    v10 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 288);
    v11 = swift_retain(v9);
    v12 = (void *)v10(v11);
    LOBYTE(v9) = objc_msgSend(v12, "heightValid", swift_release(v9).n128_f64[0]);

    if ((v9 & 1) != 0)
    {

      return 0;
    }
  }
  v14 = objc_msgSend(v6, "characterCount");

  return v14 == 0;
}

void sub_10084B10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v12)
  {
    v13 = *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v13)
    {
      (*(void (**)(__n128))(*(_QWORD *)v13 + 760))(v9);
      sub_1004B8460((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
      v14 = v12;
      sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v11, v1);
      sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
      v15 = (void *)CRAttributedString.attributedString.getter(v1);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v16 = objc_msgSend(v15, "string");

      static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    }
    else
    {
      __break(1u);
    }
  }
}

char *sub_10084B344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _QWORD);
  uint64_t v44;
  void *v45;
  id v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[32];
  _BYTE v57[24];
  _BYTE v58[24];
  char *v59;

  v55 = a4;
  v51 = a2;
  v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v53 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v52 = (uint64_t)&v48 - v14;
  __chkstk_darwin(v15);
  v49 = (uint64_t)&v48 - v16;
  __chkstk_darwin(v17);
  v50 = (uint64_t)&v48 - v18;
  __chkstk_darwin(v19);
  v48 = (char *)&v48 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v48 - v22;
  v54 = v4;
  v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v25 = type metadata accessor for CRLWPShapeItemData(0);
  v26 = *(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v24, v25, 0, 0, 0)+ 440);
  v27 = swift_retain(v24);
  v28 = v26(1, v27);
  swift_release(v24);
  v29 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 632);
  swift_beginAccess(v29, v58, 0, 0);
  sub_1004CB7BC(v29, (uint64_t)v10, &qword_1013F5530);
  swift_retain(v28);
  v30 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v30);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
  sub_1004CB800((uint64_t)v10, &qword_1013F5530);
  swift_release(v28);
  swift_beginAccess(v29, v56, 33, 0);
  v31 = (char *)v29;
  v32 = (uint64_t)v59;
  sub_100D3D738(v55);
  swift_endAccess(v56);
  if (v32)
  {
    swift_release(v28);
    sub_1004CB800((uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    v33 = (uint64_t)v48;
    v55 = v8;
    v34 = v50;
    sub_1004CB7BC(v51, v50, (uint64_t *)&unk_1013E1A50);
    v59 = v23;
    v35 = (uint64_t)v23;
    v36 = v49;
    sub_1004CB7BC(v35, v49, (uint64_t *)&unk_1013E1A50);
    v37 = type metadata accessor for UUID(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37);
    v51 = v30;
    if (v39 == 1)
    {
      v40 = v33;
      sub_1004C4938(v36, v33, (uint64_t *)&unk_1013E1A50);
      swift_retain(v28);
      sub_1004CB800(v34, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v28);
      sub_1004CB800(v36, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v33, v34, v37);
      v40 = v33;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v37);
    }
    v41 = v52;
    sub_1004CB7BC(v40, v52, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v29, v57, 33, 0);
    v42 = v53;
    sub_1004CB7BC(v41, v53, (uint64_t *)&unk_1013E1A50);
    v43 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v56, v51);
    sub_100582338(v42, v44, (uint64_t *)&unk_1013E1A50);
    v43(v56, 0);
    sub_1004CB800(v41, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v57);
    sub_1004CB800(v40, (uint64_t *)&unk_1013E1A50);
    swift_release(v28);
    v45 = *(void **)(v54 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v46 = objc_allocWithZone((Class)type metadata accessor for CRLWPShapeItem(0));
    v31 = sub_10084AD70(v45, v28);
    sub_1004CB800((uint64_t)v59, (uint64_t *)&unk_1013E1A50);
  }
  return v31;
}

uint64_t sub_10084B7F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  void *v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t (*v17)(__n128);
  __n128 v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 288);
  v5 = swift_retain(v3);
  v6 = (void *)v4(v5);
  LODWORD(v3) = objc_msgSend(v6, "widthValid", swift_release(v3).n128_f64[0]);

  if ((_DWORD)v3
    && (v7 = *(_QWORD *)(v1 + v2),
        v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v7 + 288),
        v9 = swift_retain(v7),
        v10 = (void *)v8(v9),
        LOBYTE(v7) = objc_msgSend(v10, "heightValid", swift_release(v7).n128_f64[0]),
        v10,
        (v7 & 1) != 0))
  {
    v11 = *(_QWORD **)(v1 + v2);
    v12 = *(uint64_t (**)(void))(*v11 + 408);
    v13 = v12();
    if ((v14 & 1) != 0 && v13 == 1)
    {
      v15 = *v11;
      result = swift_conformsToProtocol2(*v11, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (result)
      {
        v17 = *(uint64_t (**)(__n128))(v15 + 704);
        v18 = swift_retain(v11);
        v19 = (void *)v17(v18);
        v20 = objc_msgSend(v19, "inferredAccessibilityDescriptionNoShapeNames", swift_release(v11).n128_f64[0]);

        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        return v21;
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v27 = ((uint64_t (*)(uint64_t))v12)(v13);
      return sub_1007776BC(v27, v28 & 1);
    }
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v23 = String._bridgeToObjectiveC()();
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    return v26;
  }
  return result;
}

uint64_t sub_10084BA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(__n128);
  __n128 v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  __n128 v9;
  void *v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t (*v17)(__n128);
  __n128 v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *(uint64_t (**)(__n128))(*(_QWORD *)v3 + 288);
  v5 = swift_retain(v3);
  v6 = (void *)v4(v5);
  LODWORD(v3) = objc_msgSend(v6, "widthValid", swift_release(v3).n128_f64[0]);

  if ((_DWORD)v3
    && (v7 = *(_QWORD *)(v1 + v2),
        v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v7 + 288),
        v9 = swift_retain(v7),
        v10 = (void *)v8(v9),
        LOBYTE(v7) = objc_msgSend(v10, "heightValid", swift_release(v7).n128_f64[0]),
        v10,
        (v7 & 1) != 0))
  {
    v11 = *(_QWORD **)(v1 + v2);
    v12 = *(uint64_t (**)(void))(*v11 + 408);
    v13 = v12();
    if ((v14 & 1) != 0 && v13 == 1)
    {
      v15 = *v11;
      result = swift_conformsToProtocol2(*v11, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (result)
      {
        v17 = *(uint64_t (**)(__n128))(v15 + 704);
        v18 = swift_retain(v11);
        v19 = (void *)v17(v18);
        v20 = objc_msgSend(v19, "inferredLocalizedAccessibilityDescriptionPlaceholder", swift_release(v11).n128_f64[0]);

        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        return v21;
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v27 = ((uint64_t (*)(uint64_t))v12)(v13);
      return sub_100777BC0(v27, v28 & 1);
    }
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v23 = String._bridgeToObjectiveC()();
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    return v26;
  }
  return result;
}

void sub_10084BC10()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  BOOL v4;
  int64_t v5;
  id v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v1)
  {
    v6 = v1;
    v2 = objc_msgSend(v6, "range");
    v4 = __OFADD__(v2, v3);
    v5 = (int64_t)v2 + v3;
    if (v4)
    {
      __break(1u);
    }
    else if (v5 >= (uint64_t)v2)
    {
      sub_1007D876C((uint64_t)v2, v5, 0, 0xE000000000000000, 1);

      return;
    }
    __break(1u);
  }
  __break(1u);
}

float sub_10084BE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  _DWORD v10[4];

  v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v5 = type metadata accessor for CRLWPShapeItemData(0);
  v6 = swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v6 + 760))();
  swift_retain(v4);
  v7 = sub_1004B804C(&qword_1013F55A0);
  CRRegister.wrappedValue.getter(v7);
  v8 = *(float *)&v10[3];
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLWPShapeItemCRDTData);
  swift_release(v4);
  return v8;
}

void sub_10084BF58(float a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, __n128);
  __n128 v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  __n128 v13;
  CKRecordID v14;
  Swift::String v15;
  float v16;
  _BYTE v17[32];

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = type metadata accessor for CRLWPShapeItemData(0);
    v9 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0)+ 776);
    v10 = swift_retain(v7);
    v11 = (void (*)(_BYTE *, _QWORD))v9(v17, v10);
    type metadata accessor for CRLWPShapeItemCRDTData(0);
    v16 = a1;
    v12 = sub_1004B804C(&qword_1013F55A0);
    CRRegister.wrappedValue.setter(&v16, v12, v13);
    v11(v17, 0);
    swift_release(v7);
  }
}

uint64_t sub_10084C1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = type metadata accessor for CRLWPShapeItemData(0);
  swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0);
  swift_retain(v1);
  v3 = sub_1005603D8();
  swift_release(v1);
  return v3;
}

void sub_10084C27C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, __n128);
  __n128 v12;
  void (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  __n128 v15;
  CKRecordID v16;
  Swift::String v17;
  uint64_t v18;
  char v19;
  _BYTE v20[32];

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = type metadata accessor for CRLWPShapeItemData(0);
    v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0);
    if ((unint64_t)(a1 - 1) >= 3)
      v10 = 0;
    else
      v10 = a1;
    v11 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)v9 + 776);
    v12 = swift_retain(v7);
    v13 = (void (*)(_BYTE *, _QWORD))v11(v20, v12);
    type metadata accessor for CRLWPShapeItemCRDTData(0);
    v18 = v10;
    v19 = 0;
    type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
    v14 = sub_1004B804C(&qword_1013E27E8);
    CRRegister.wrappedValue.setter(&v18, v14, v15);
    v13(v20, 0);
    swift_release(v7);
  }
}

uint64_t sub_10084C5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];

  v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v5 = type metadata accessor for CRLWPShapeItemData(0);
  v6 = swift_dynamicCastClassUnconditional(v4, v5, 0, 0, 0);
  (*(void (**)(void))(*(_QWORD *)v6 + 760))();
  type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  swift_retain(v4);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.getter(v7);
  v8 = v10[15];
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLWPShapeItemCRDTData);
  swift_release(v4);
  return v8;
}

void sub_10084C6E8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, __n128);
  __n128 v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  __n128 v13;
  CKRecordID v14;
  Swift::String v15;
  char v16;
  _BYTE v17[32];

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = type metadata accessor for CRLWPShapeItemData(0);
    v9 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0)+ 776);
    v10 = swift_retain(v7);
    v11 = (void (*)(_BYTE *, _QWORD))v9(v17, v10);
    type metadata accessor for CRLWPShapeItemCRDTData(0);
    v16 = a1 & 1;
    type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
    v12 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    CRRegister.wrappedValue.setter(&v16, v12, v13);
    v11(v17, 0);
    swift_release(v7);
  }
}

double sub_10084C8F0(double a1, double a2)
{
  uint64_t v2;
  void *v3;
  double v4;
  int v7;
  id v8;
  char *v9;
  uint64_t v10;
  double v12;
  unsigned int v13;
  double v14;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  v4 = 0.0;
  if (v3)
  {
    v7 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textIsVertical);
    v8 = v3;
    if ((uint64_t)objc_msgSend(v8, "paragraphCount") >= 1
      && (v9 = (char *)objc_msgSend(v8, "paragraphStyleAtCharIndex:effectiveRange:", 0, 0)) != 0)
    {
      v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_alignment];

      switch(v10)
      {
        case 1:

          if (v7)
            v4 = a2;
          else
            v4 = a1;
          break;
        case 2:

          if (v7)
            v12 = a2;
          else
            v12 = a1;
          v4 = v12 * 0.5;
          break;
        case 4:
          v13 = objc_msgSend(v8, "isWritingDirectionRightToLeftForParagraphAtParIndex:", 0);

          if (v7)
            v14 = a2;
          else
            v14 = a1;
          if (v13)
            v4 = v14;
          else
            v4 = 0.0;
          break;
        default:
          goto LABEL_5;
      }
    }
    else
    {
LABEL_5:

    }
  }
  return v4;
}

void sub_10084CA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = type metadata accessor for CRLWPShapeItemData(0);
  swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0);
  swift_retain(v1);
  sub_1005603D8();
  swift_release(v1);
}

double sub_10084CB0C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  int v13;
  double v14;
  double v15;

  v5 = objc_opt_self(CRLWPShapeLayout);
  v6 = swift_dynamicCastObjCClass(a2, v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = a2;
    objc_msgSend(v7, "pathBoundsWithoutStroke");
    v10 = v9;
    v12 = v11;
    v13 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textIsVertical);
    if ((objc_msgSend(a1, "widthValid") & 1) != 0)
    {
      v14 = 0.0;
      if ((objc_msgSend(a1, "heightValid") & 1) == 0)
      {
        if (!v13)
          goto LABEL_11;
        goto LABEL_9;
      }
    }
    else if ((v13 & 1) != 0)
    {
      sub_10084CA34();
      v14 = v15;
      if ((objc_msgSend(a1, "heightValid") & 1) == 0)
LABEL_9:
        sub_10084C8F0(v10, v12);
    }
    else
    {
      v14 = sub_10084C8F0(v10, v12);
      if ((objc_msgSend(a1, "heightValid") & 1) == 0)
LABEL_11:
        sub_10084CA34();
    }

    return v14;
  }
  return 0.0;
}

double sub_10084CCBC(void *a1, double a2, double a3)
{
  uint64_t v3;
  int v7;
  double v8;
  double v9;

  v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textIsVertical);
  if ((objc_msgSend(a1, "widthValid") & 1) != 0)
  {
    v8 = 0.0;
    if ((objc_msgSend(a1, "heightValid") & 1) == 0)
    {
      if (!v7)
        goto LABEL_9;
      goto LABEL_7;
    }
  }
  else if ((v7 & 1) != 0)
  {
    sub_10084CA34();
    v8 = v9;
    if ((objc_msgSend(a1, "heightValid") & 1) == 0)
LABEL_7:
      sub_10084C8F0(a2, a3);
  }
  else
  {
    v8 = sub_10084C8F0(a2, a3);
    if ((objc_msgSend(a1, "heightValid") & 1) == 0)
LABEL_9:
      sub_10084CA34();
  }
  return v8;
}

CGFloat sub_10084CE14@<D0>(void *a1@<X0>, _OWORD *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v4;
  double v9;
  double v10;
  double v11;
  char v12;
  unsigned __int8 v13;
  double v14;
  double v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  CGFloat result;
  __int128 v19;
  __int128 v20;
  CGAffineTransform v21;
  CGAffineTransform v22;

  v9 = 0.0;
  if (objc_msgSend(a1, "widthValid"))
    v10 = a3;
  else
    v10 = 0.0;
  if (objc_msgSend(a1, "heightValid"))
    v11 = a4;
  else
    v11 = 0.0;
  objc_msgSend(a1, "transformBasedOnRect:", 0.0, 0.0, v10, v11);
  v12 = *(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textIsVertical);
  if ((objc_msgSend(a1, "widthValid") & 1) != 0)
  {
    v13 = objc_msgSend(a1, "heightValid");
    v14 = 0.0;
    if ((v13 & 1) == 0)
    {
      if ((v12 & 1) == 0)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else if ((v12 & 1) != 0)
  {
    sub_10084CA34();
    v9 = v15;
    v16 = objc_msgSend(a1, "heightValid");
    v14 = 0.0;
    if ((v16 & 1) == 0)
LABEL_13:
      v14 = sub_10084C8F0(a3, a4);
  }
  else
  {
    v9 = sub_10084C8F0(a3, a4);
    v17 = objc_msgSend(a1, "heightValid");
    v14 = 0.0;
    if ((v17 & 1) == 0)
LABEL_15:
      sub_10084CA34();
  }
  CGAffineTransformTranslate(&v21, &v22, -v9, -v14);
  result = v21.a;
  v19 = *(_OWORD *)&v21.c;
  v20 = *(_OWORD *)&v21.tx;
  *a2 = *(_OWORD *)&v21.a;
  a2[1] = v19;
  a2[2] = v20;
  return result;
}

void *sub_10084D020@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  _BYTE __src[888];

  sub_100C8E820(v1, 1, (uint64_t)__src);
  a1[3] = (uint64_t)&type metadata for CRLWPShapePresetData;
  a1[4] = sub_1008514C4();
  v3 = swift_allocObject(&unk_101281D28, 896, 7);
  *a1 = v3;
  return memcpy((void *)(v3 + 16), __src, 0x370uLL);
}

BOOL sub_10084D094(unsigned __int8 a1)
{
  _QWORD *v1;
  int v3;
  uint64_t v4;
  char v6;

  v3 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v1) + 0x440))();
  if (v3 != 6 && v3 == a1)
    return 1;
  v4 = a1 + 1;
  if (v4 == 5)
    return 1;
  v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x440))();
  if (v6 == 6)
    return 0;
  return !v6 && v4 == 6;
}

uint64_t sub_10084D164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  void *v23;
  id v24;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v3 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v4 = *v3;
  result = swift_conformsToProtocol2(*v3, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v6 = *(uint64_t (**)(uint64_t))(v4 + 704);
    v7 = swift_retain(v3);
    v8 = v6(v7);
    v9 = objc_msgSend((id)v8, "bezierPath", swift_release(v3).n128_f64[0]);

    LOBYTE(v8) = objc_msgSend(v9, "isLineSegment");
    if ((v8 & 1) != 0)
      return 0;
    v10 = *(_QWORD **)(v1 + v2);
    v11 = *v10;
    result = swift_conformsToProtocol2(*v10, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (result)
    {
      v12 = *(uint64_t (**)(uint64_t))(v11 + 704);
      v13 = swift_retain(v10);
      v14 = v12(v13);
      v15 = objc_msgSend((id)v14, "bezierPath", swift_release(v10).n128_f64[0]);

      LOBYTE(v14) = objc_msgSend(v15, "isLineSegment");
      if ((v14 & 1) == 0)
      {
        v16 = *(_QWORD *)(v1 + v2);
        v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 288);
        v18 = swift_retain(v16);
        v19 = (void *)v17(v18);
        LODWORD(v16) = objc_msgSend(v19, "widthValid", swift_release(v16).n128_f64[0]);

        if ((_DWORD)v16)
        {
          v20 = *(_QWORD *)(v1 + v2);
          v21 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 288);
          v22 = swift_retain(v20);
          v23 = (void *)v21(v22);
          v24 = objc_msgSend(v23, "heightValid", swift_release(v20).n128_f64[0]);

          return (uint64_t)v24;
        }
      }
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10084D33C()
{
  return sub_10084D4F0(&qword_1013F5620, off_101229A48);
}

uint64_t sub_10084D394()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v2, "isKindOfClass:", swift_getObjCClassFromMetadata(v3, v4)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  return sub_1004B8930(0, &qword_1013F5618, off_101229A50);
}

uint64_t sub_10084D4DC()
{
  return sub_10084D4F0((unint64_t *)&qword_1013F5610, off_101229A40);
}

uint64_t sub_10084D4F0(unint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v6, "isKindOfClass:", swift_getObjCClassFromMetadata(v7, v8)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  return sub_1004B8930(0, a1, a2);
}

char *sub_10084D610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, __n128);
  __n128 v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = type metadata accessor for CRLWPShapeItemData(0);
  v4 = *(uint64_t (**)(_QWORD, __n128))(*(_QWORD *)swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                                                + 440);
  v5 = swift_retain(v2);
  v6 = v4(0, v5);
  swift_release(v2);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v8 = objc_allocWithZone((Class)type metadata accessor for CRLWPShapeItem(0));
  return sub_10084AD70(v7, v6);
}

uint64_t sub_10084D6C4(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  CKRecordID v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  _QWORD v44[3];
  uint64_t v45;

  v3 = (int *)sub_1004B804C((uint64_t *)&unk_1013F55B0);
  v40 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - v10;
  v12 = sub_1004B804C(&qword_1013F55A8);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLWPShapeItem(0);
  v16 = swift_dynamicCastClass(a1, v15);
  if (v16)
  {
    v17 = v16;
    v42 = a1;
    swift_unknownObjectRetain(a1);
    v41 = sub_100B0C360(v17, v1);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v19 = type metadata accessor for CRLWPShapeItemData(0);
    v20 = swift_dynamicCastClassUnconditional(v18, v19, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v20 + 760))();
    v21 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v19, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v21 + 760))();
    v22 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
    CRStruct_4.actionUndoingDifference(from:)(v8, v6, v22);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v14, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v14, &qword_1013F55A8);
      memset(v44, 0, sizeof(v44));
      v45 = 1;
    }
    else
    {
      v23 = v3[12];
      v24 = (uint64_t)&v14[v23];
      v25 = v3[16];
      v26 = (uint64_t)&v14[v25];
      v27 = v3[20];
      v28 = (uint64_t)&v14[v27];
      v29 = (uint64_t)&v5[v23];
      v30 = (uint64_t)&v5[v25];
      v31 = (uint64_t)&v5[v27];
      sub_1004C4938((uint64_t)v14, (uint64_t)v5, &qword_1013F55C0);
      sub_1004C4938(v24, v29, &qword_1013F55C8);
      sub_1004C4938(v26, v30, &qword_1013F55D0);
      sub_1004C4938(v28, v31, &qword_1013F55D8);
      v45 = (uint64_t)v3;
      v32 = sub_10050D1B0(v44);
      v33 = (uint64_t)v32 + v3[12];
      v34 = (uint64_t)v32 + v3[16];
      v35 = (uint64_t)v32 + v3[20];
      sub_1004C4938((uint64_t)v5, (uint64_t)v32, &qword_1013F55C0);
      sub_1004C4938(v29, v33, &qword_1013F55C8);
      sub_1004C4938(v30, v34, &qword_1013F55D0);
      sub_1004C4938(v31, v35, &qword_1013F55D8);
    }
    v36 = v41;
    swift_beginAccess(v41 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v43, 33, 0);
    sub_10083DA20((uint64_t)v44, 5);
    swift_endAccess(v43);
    swift_unknownObjectRelease(v42);
    return v36;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2, 310, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2u, 310, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v38, v39);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10084DB30(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  unint64_t v65;
  unint64_t v66;
  double *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  double *v76;
  uint64_t result;
  CKRecordID v78;
  Swift::String v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v3 = (int *)sub_1004B804C(&qword_1013F55E8);
  v88 = (int *)*((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v87 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v86 = (char *)&v80 - v6;
  __chkstk_darwin(v7);
  v83 = (uint64_t)&v80 - v8;
  __chkstk_darwin(v9);
  v89 = (uint64_t)&v80 - v10;
  v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v80 - v15;
  v17 = sub_1004B804C((uint64_t *)&unk_1013F55F0);
  __chkstk_darwin(v17);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v80 - v21;
  v23 = type metadata accessor for CRLWPShapeItem(0);
  v24 = swift_dynamicCastClass(a1, v23);
  if (v24)
  {
    v25 = v24;
    v91 = a1;
    v26 = swift_unknownObjectRetain(a1);
    v90 = sub_100B0C638(v25, v1, v26);
    v27 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v28 = type metadata accessor for CRLWPShapeItemData(0);
    v29 = swift_dynamicCastClassUnconditional(v27, v28, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v29 + 760))();
    v30 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v28, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v30 + 760))();
    v31 = sub_1004B7878(&qword_1013E29A0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8818);
    CRType.observableDifference(from:)(v13, v11, v31);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004CB7BC((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1013F55F0);
    v32 = (uint64_t)v22;
    if ((*((unsigned int (**)(char *, uint64_t, int *))v88 + 6))(v19, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013F55F0);
      v33 = _swiftEmptyArrayStorage;
      v34 = v90;
      if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
      {
LABEL_4:
        if (*(_QWORD *)(v34 + 16) && (v35 = sub_1008431EC(5), (v36 & 1) != 0))
        {
          v93 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
          swift_bridgeObjectRetain(v93);
          sub_10061EAEC((uint64_t)v33);
          v37 = v93;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
          v92 = v34;
          sub_100825A20(v37, 5, isUniquelyReferenced_nonNull_native);
          v34 = v92;
        }
        else
        {
          v56 = swift_isUniquelyReferenced_nonNull_native(v34);
          v93 = v34;
          sub_100825A20((uint64_t)v33, 5, v56);
          v34 = v93;
        }
        swift_unknownObjectRelease(v91);
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    else
    {
      v81 = v22;
      v39 = v3[12];
      v40 = v89;
      v41 = v89 + v39;
      v42 = v3[16];
      v43 = v89 + v42;
      v44 = v3[20];
      v45 = v89 + v44;
      v46 = (uint64_t)&v19[v39];
      v47 = (uint64_t)&v19[v42];
      v48 = (uint64_t)&v19[v44];
      sub_1004C4938((uint64_t)v19, v89, &qword_1013F5600);
      sub_1004C4938(v46, v41, &qword_1013F5540);
      sub_1004C4938(v47, v43, &qword_1013F5550);
      sub_1004C4938(v48, v45, &qword_1013E9C40);
      v49 = v83;
      v50 = v83 + v3[12];
      v51 = v83 + v3[16];
      v88 = v3;
      v52 = v83 + v3[20];
      sub_1004CB7BC(v40, v83, &qword_1013F5600);
      v85 = v41;
      sub_1004CB7BC(v41, v50, &qword_1013F5540);
      v82 = v43;
      sub_1004CB7BC(v43, v51, &qword_1013F5550);
      v84 = v45;
      sub_1004CB7BC(v45, v52, &qword_1013E9C40);
      v53 = sub_1004B804C(&qword_1013F5608);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v49, 1, v53) == 1)
      {
        sub_1004CB800(v52, &qword_1013E9C40);
        sub_1004CB800(v51, &qword_1013F5550);
        sub_1004CB800(v50, &qword_1013F5540);
        sub_1004CB800(v49, &qword_1013F5600);
        v32 = (uint64_t)v81;
        v34 = v90;
        v55 = (uint64_t)v86;
        v54 = (uint64_t)v87;
      }
      else
      {
        sub_1004CB800(v49, &qword_1013F5600);
        sub_1004CB800(v52, &qword_1013E9C40);
        sub_1004CB800(v51, &qword_1013F5550);
        sub_1004CB800(v50, &qword_1013F5540);
        v34 = v90;
        v32 = (uint64_t)v81;
        v55 = (uint64_t)v86;
        v54 = (uint64_t)v87;
        if (!*(_QWORD *)(v90 + 16) || (sub_1008431EC(5), (v57 & 1) == 0))
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2, 331, "If superData has changed, super should have built keys for it already.", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v32 = (uint64_t)v81;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2u, 331, (uint64_t)"If superData has changed, super should have built keys for it already.", 70, 2u);
        }
      }
      v58 = v89;
      v59 = v55 + v88[12];
      v60 = v55 + v88[16];
      v61 = v55 + v88[20];
      sub_1004CB7BC(v89, v55, &qword_1013F5600);
      sub_1004CB7BC(v85, v59, &qword_1013F5540);
      v62 = v82;
      sub_1004CB7BC(v82, v60, &qword_1013F5550);
      sub_1004CB7BC(v84, v61, &qword_1013E9C40);
      v63 = sub_1004B804C(&qword_1013F5548);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v59, 1, v63) == 1)
      {
        sub_1004CB800(v61, &qword_1013E9C40);
        sub_1004CB800(v60, &qword_1013F5550);
        sub_1004CB800(v59, &qword_1013F5540);
        sub_1004CB800(v55, &qword_1013F5600);
        v33 = _swiftEmptyArrayStorage;
        v64 = v88;
      }
      else
      {
        sub_1004CB800(v59, &qword_1013F5540);
        sub_1004CB800(v61, &qword_1013E9C40);
        sub_1004CB800(v60, &qword_1013F5550);
        sub_1004CB800(v55, &qword_1013F5600);
        v33 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
        v66 = *((_QWORD *)v33 + 2);
        v65 = *((_QWORD *)v33 + 3);
        if (v66 >= v65 >> 1)
          v33 = (double *)sub_100D0EF94((_QWORD *)(v65 > 1), v66 + 1, 1, v33);
        v64 = v88;
        *((_QWORD *)v33 + 2) = v66 + 1;
        v67 = &v33[2 * v66];
        v67[4] = -2.31584178e77;
        *((_QWORD *)v67 + 5) = 0x8000000100FD75D0;
        v62 = v82;
      }
      v68 = v54 + v64[12];
      v69 = v54 + v64[16];
      v70 = v54 + v64[20];
      sub_1004CB7BC(v58, v54, &qword_1013F5600);
      sub_1004CB7BC(v85, v68, &qword_1013F5540);
      sub_1004CB7BC(v62, v69, &qword_1013F5550);
      sub_1004CB7BC(v84, v70, &qword_1013E9C40);
      v71 = sub_1004B804C((uint64_t *)&unk_1013F5558);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v69, 1, v71) == 1)
      {
        sub_1004CB800(v58, &qword_1013F55E8);
        sub_1004CB800(v70, &qword_1013E9C40);
        sub_1004CB800(v69, &qword_1013F5550);
        sub_1004CB800(v68, &qword_1013F5540);
        v72 = &qword_1013F5600;
        v73 = v54;
      }
      else
      {
        sub_1004CB800(v69, &qword_1013F5550);
        sub_1004CB800(v70, &qword_1013E9C40);
        sub_1004CB800(v68, &qword_1013F5540);
        sub_1004CB800(v54, &qword_1013F5600);
        if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
          v33 = (double *)sub_100D0EF94(0, *((_QWORD *)v33 + 2) + 1, 1, v33);
        v75 = *((_QWORD *)v33 + 2);
        v74 = *((_QWORD *)v33 + 3);
        if (v75 >= v74 >> 1)
          v33 = (double *)sub_100D0EF94((_QWORD *)(v74 > 1), v75 + 1, 1, v33);
        *((_QWORD *)v33 + 2) = v75 + 1;
        v76 = &v33[2 * v75];
        v76[4] = -2.31584178e77;
        *((_QWORD *)v76 + 5) = 0x8000000100FD75B0;
        v72 = &qword_1013F55E8;
        v73 = v58;
      }
      sub_1004CB800(v73, v72);
      if (*((_QWORD *)v33 + 2))
        goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v91);
LABEL_28:
    sub_1004CB800(v32, (uint64_t *)&unk_1013F55F0);
    return v34;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2, 322, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2u, 322, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v78, v79);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_10084E5A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  void (*v24)(char *, _QWORD, uint64_t, int *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_BYTE *, __n128);
  __n128 v38;
  void (*v39)(_BYTE *, _QWORD);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  void (*v46)(char *, _QWORD, uint64_t, int *);
  _BYTE v47[24];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[24];
  uint64_t v53;
  char *v54;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F55A8);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - v9;
  v11 = (int *)sub_1004B804C((uint64_t *)&unk_1013F55B0);
  v12 = *((_QWORD *)v11 - 1);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007770E0(a1);
  if (!v2)
  {
    v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v47, 0, 0);
    v16 = *v15;
    if (*(_QWORD *)(v16 + 16))
    {
      swift_bridgeObjectRetain(v16);
      v17 = sub_1008431EC(5);
      if ((v18 & 1) != 0)
      {
        sub_1004CB7BC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v48, &qword_1013E0230);
      }
      else
      {
        v48 = 0;
        v49 = 0;
        v50 = 0;
        v51 = 1;
      }
      swift_bridgeObjectRelease();
      if (v51 != 1)
      {
        sub_1004C4938((uint64_t)&v48, (uint64_t)v52, &qword_1013E0230);
        if (v53)
        {
          v23 = swift_dynamicCast(v10, v52, (char *)&type metadata for Any + 8, v11, 6);
          v24 = *(void (**)(char *, _QWORD, uint64_t, int *))(v12 + 56);
          v24(v10, v23 ^ 1u, 1, v11);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11) != 1)
          {
            v25 = v11[12];
            v26 = (uint64_t)&v14[v25];
            v27 = v11[16];
            v28 = (uint64_t)&v14[v27];
            v44 = &v14[v27];
            v45 = &v14[v25];
            v29 = v11[20];
            v54 = &v14[v29];
            v46 = v24;
            v30 = (uint64_t)&v10[v25];
            v42 = &v10[v27];
            v43 = &v10[v29];
            sub_1004C4938((uint64_t)v10, (uint64_t)v14, &qword_1013F55C0);
            sub_1004C4938(v30, v26, &qword_1013F55C8);
            sub_1004C4938((uint64_t)v42, v28, &qword_1013F55D0);
            sub_1004C4938((uint64_t)v43, (uint64_t)v54, &qword_1013F55D8);
            v31 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            v32 = type metadata accessor for CRLWPShapeItemData(0);
            v33 = swift_dynamicCastClassUnconditional(v31, v32, 0, 0, 0);
            v34 = (uint64_t)&v7[v11[12]];
            v35 = (uint64_t)&v7[v11[16]];
            v36 = (uint64_t)&v7[v11[20]];
            sub_1004CB7BC((uint64_t)v14, (uint64_t)v7, &qword_1013F55C0);
            sub_1004CB7BC((uint64_t)v45, v34, &qword_1013F55C8);
            sub_1004CB7BC((uint64_t)v44, v35, &qword_1013F55D0);
            sub_1004CB7BC((uint64_t)v54, v36, &qword_1013F55D8);
            v46(v7, 0, 1, v11);
            v37 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)v33 + 776);
            v38 = swift_retain(v31);
            v39 = (void (*)(_BYTE *, _QWORD))v37(v52, v38);
            v40 = type metadata accessor for CRLWPShapeItemCRDTData(0);
            v41 = sub_1004B7878(&qword_1013F55E0, type metadata accessor for CRLWPShapeItemCRDTData, (uint64_t)&unk_100EF8990);
            CRStruct_4.apply(_:)(v7, v40, v41);
            sub_1004CB800((uint64_t)v7, &qword_1013F55A8);
            v39(v52, 0);
            swift_release(v31);
            v21 = (uint64_t *)&unk_1013F55B0;
            v22 = (uint64_t)v14;
            goto LABEL_11;
          }
LABEL_10:
          v21 = &qword_1013F55A8;
          v22 = (uint64_t)v10;
LABEL_11:
          sub_1004CB800(v22, v21);
          return;
        }
        v19 = &qword_1013E0230;
        v20 = (uint64_t *)v52;
LABEL_9:
        sub_1004CB800((uint64_t)v20, v19);
        (*(void (**)(char *, uint64_t, uint64_t, int *))(v12 + 56))(v10, 1, 1, v11);
        goto LABEL_10;
      }
    }
    else
    {
      v48 = 0;
      v49 = 0;
      v50 = 0;
      v51 = 1;
    }
    v19 = (uint64_t *)&unk_1013DFC00;
    v20 = &v48;
    goto LABEL_9;
  }
}

void sub_10084E9B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  BOOL v88;
  uint64_t v89;
  void *v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  double *v122;
  unint64_t v123;
  unint64_t v124;
  double *v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char v135;
  unint64_t v136;
  uint64_t v137;
  _BOOL8 v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  char v146;
  uint64_t v147;
  _BOOL8 v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  char v152;
  _QWORD *v153;
  uint64_t v154;
  BOOL v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  char v173;
  unint64_t v174;
  uint64_t v175;
  _BOOL8 v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  char v184;
  uint64_t v185;
  _BOOL8 v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  char v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *ObjectType;
  uint64_t v197;
  double *v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t (*v210)(uint64_t, uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  char *v214;
  double *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  _QWORD *v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  _QWORD *v244;
  char v245[8];
  char v246[8];
  uint64_t v247;
  unsigned __int8 v248;
  void *v249;

  v6 = v5;
  v218 = a2;
  v11 = sub_1004B804C(&qword_1013F5538);
  __chkstk_darwin(v11);
  v13 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v201 - v15;
  v223 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v223);
  v222 = (uint64_t)&v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v221 = (uint64_t)&v201 - v19;
  v20 = sub_1004B804C(&qword_1013F5540);
  __chkstk_darwin(v20);
  v22 = (char *)&v201 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_1004B804C(&qword_1013F5548);
  v220 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v216 = (uint64_t)&v201 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v217 = (uint64_t)&v201 - v25;
  __chkstk_darwin(v26);
  v225 = (uint64_t)&v201 - v27;
  v240 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  __chkstk_darwin(v240);
  v235 = (uint64_t)&v201 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v234 = (uint64_t)&v201 - v30;
  v243 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v243);
  v219 = (char *)&v201 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v239 = (char *)&v201 - v33;
  __chkstk_darwin(v34);
  v241 = (char *)&v201 - v35;
  v36 = sub_1004B804C(&qword_1013F5550);
  __chkstk_darwin(v36);
  v233 = (char *)&v201 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = sub_1004B804C((uint64_t *)&unk_1013F5558);
  v231 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v230 = (uint64_t)&v201 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for CRLWPShapeItem(0);
  v40 = swift_dynamicCastClass(a4, v39);
  if (!v40)
    return;
  v41 = a5;
  v42 = *(_QWORD *)(v40 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v242 = type metadata accessor for CRLWPShapeItemData(0);
  v237 = swift_dynamicCastClassUnconditional(v42, v242, 0, 0, 0);
  if (a3 != 5)
  {
    ObjectType = (_QWORD *)swift_getObjectType(a4);
    swift_unknownObjectRetain(a4);
    swift_retain(v42);
    sub_10092658C(a1, v218, a3, a4, v6, ObjectType, v41);
    swift_unknownObjectRelease(a4);
    swift_release(v42);
    return;
  }
  v207 = v42;
  v43 = v218;
  v238 = *(_QWORD *)(v218 + 16);
  if (!v238)
  {
    swift_unknownObjectRetain(a4);
    v197 = v207;
    swift_retain(v207);
    v198 = _swiftEmptyArrayStorage;
    if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
      goto LABEL_94;
    goto LABEL_96;
  }
  v214 = v22;
  v206 = v16;
  v205 = v13;
  v203 = v41;
  v202 = a1;
  v44 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  v212 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  v236 = v218 + 32;
  v204 = a4;
  swift_unknownObjectRetain(a4);
  swift_retain(v207);
  swift_bridgeObjectRetain(v43);
  v45 = 0;
  v215 = _swiftEmptyArrayStorage;
  v226 = (unint64_t)"allowsChangeShape";
  v229 = 0x8000000100FD75B0;
  v209 = (unint64_t)"wpShapeStyleData";
  v213 = 0x8000000100FD75D0;
  v227 = v6;
  while (1)
  {
    v48 = (uint64_t *)(v236 + 16 * v45);
    v49 = *v48;
    v50 = v48[1];
    if ((*v48 != 0xD000000000000010 || v50 != v229)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, v226 | 0x8000000000000000, v49, v50, 0) & 1) == 0)
    {
      break;
    }
    v51 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v52 = swift_dynamicCastClassUnconditional(*(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v242, 0, 0, 0);
    v53 = (uint64_t)v241;
    (*(void (**)(uint64_t))(*(_QWORD *)v52 + 760))(v52);
    v54 = v243;
    v55 = v234;
    sub_1004B8460(v53 + *(int *)(v243 + 24), v234, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    v56 = sub_1004B84A4(v53, type metadata accessor for CRLWPShapeItemCRDTData);
    v57 = (uint64_t)v239;
    (*(void (**)(uint64_t))(*(_QWORD *)v237 + 760))(v56);
    v58 = v57 + *(int *)(v54 + 24);
    v59 = v235;
    sub_1004B8460(v58, v235, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1004B84A4(v57, type metadata accessor for CRLWPShapeItemCRDTData);
    v60 = sub_1004B7878((unint64_t *)&unk_1013F5580, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData, (uint64_t)&unk_100EF8A54);
    v61 = v233;
    CRType.observableDifference(from:)(v59, v240, v60);
    v62 = (uint64_t)v61;
    sub_1004B84A4(v59, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    sub_1004B84A4(v55, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
    v63 = v232;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v231 + 48))(v61, 1, v232) == 1)
    {
      v46 = (uint64_t)v61;
      v47 = &qword_1013F5550;
    }
    else
    {
      v64 = *(int *)(v63 + 48);
      v65 = v63;
      v66 = v230;
      v67 = v230 + v64;
      v68 = *(int *)(v65 + 64);
      v69 = v230 + v68;
      v70 = v62;
      v71 = v62 + v64;
      v72 = v70 + v68;
      sub_1004C4938(v70, v230, &qword_1013E9C40);
      sub_1004C4938(v71, v67, &qword_1013E9C40);
      v228 = v69;
      sub_1004C4938(v72, v69, &qword_1013E9C40);
      v73 = type metadata accessor for CRValueObservableDifference(0);
      v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48);
      if (v74(v66, 1, v73) != 1)
      {
        v75 = *(_QWORD *)((char *)v227 + v51);
        v76 = swift_dynamicCastClassUnconditional(v75, v242, 0, 0, 0);
        v77 = (uint64_t)v241;
        (*(void (**)(uint64_t))(*(_QWORD *)v76 + 760))(v76);
        swift_retain(v75);
        v78 = sub_1004B804C(&qword_1013F55A0);
        CRRegister.wrappedValue.getter(v78);
        v79 = v247;
        sub_1004B84A4(v77, type metadata accessor for CRLWPShapeItemCRDTData);
        v80 = v75;
        v6 = v227;
        swift_release(v80);
        v249 = &type metadata for Float;
        LODWORD(v247) = v79;
        swift_beginAccess(v44, v246, 33, 0);
        sub_1004CB7BC((uint64_t)&v247, (uint64_t)v245, &qword_1013E0230);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v44);
        v244 = (_QWORD *)*v44;
        *v44 = 0x8000000000000000;
        sub_1008258FC((uint64_t)v245, 29, isUniquelyReferenced_nonNull_native);
        *v44 = v244;
        swift_bridgeObjectRelease();
        swift_endAccess(v246);
        sub_1004CB800((uint64_t)&v247, &qword_1013E0230);
      }
      if (v74(v67, 1, v73) != 1)
      {
        v82 = *(_QWORD *)((char *)v6 + v51);
        v83 = swift_dynamicCastClassUnconditional(v82, v242, 0, 0, 0);
        v84 = (uint64_t)v219;
        (*(void (**)(uint64_t))(*(_QWORD *)v83 + 760))(v83);
        swift_retain(v82);
        v85 = sub_1004B804C(&qword_1013E27E8);
        CRRegister.wrappedValue.getter(v85);
        v86 = v247;
        v87 = v248;
        sub_1004B84A4(v84, type metadata accessor for CRLWPShapeItemCRDTData);
        swift_release(v82);
        v88 = v87 == 0;
        v6 = v227;
        if (v88)
          v89 = v86;
        else
          v89 = 0;
        type metadata accessor for CRLWPVerticalAlignment(0);
        v249 = v90;
        v247 = v89;
        swift_beginAccess(v44, v246, 33, 0);
        sub_1004CB7BC((uint64_t)&v247, (uint64_t)v245, &qword_1013E0230);
        v91 = swift_isUniquelyReferenced_nonNull_native(*v44);
        v244 = (_QWORD *)*v44;
        *v44 = 0x8000000000000000;
        sub_1008258FC((uint64_t)v245, 30, v91);
        *v44 = v244;
        swift_bridgeObjectRelease();
        swift_endAccess(v246);
        sub_1004CB800((uint64_t)&v247, &qword_1013E0230);
      }
      if (v74(v228, 1, v73) != 1)
      {
        v92 = *(_QWORD *)((char *)v6 + v51);
        v93 = swift_dynamicCastClassUnconditional(v92, v242, 0, 0, 0);
        v94 = (uint64_t)v241;
        (*(void (**)(uint64_t))(*(_QWORD *)v93 + 760))(v93);
        swift_retain(v92);
        v95 = sub_1004B804C((uint64_t *)&unk_1013F5590);
        CRRegister.wrappedValue.getter(v95);
        v96 = v247;
        sub_1004B84A4(v94, type metadata accessor for CRLWPShapeItemCRDTData);
        swift_release(v92);
        v249 = &type metadata for Bool;
        LOBYTE(v247) = v96;
        swift_beginAccess(v44, v246, 33, 0);
        sub_1004CB7BC((uint64_t)&v247, (uint64_t)v245, &qword_1013E0230);
        v97 = swift_isUniquelyReferenced_nonNull_native(*v44);
        v244 = (_QWORD *)*v44;
        *v44 = 0x8000000000000000;
        sub_1008258FC((uint64_t)v245, 31, v97);
        *v44 = v244;
        swift_bridgeObjectRelease();
        swift_endAccess(v246);
        sub_1004CB800((uint64_t)&v247, &qword_1013E0230);
      }
      v46 = v230;
      v47 = (uint64_t *)&unk_1013F5558;
    }
    sub_1004CB800(v46, v47);
LABEL_7:
    if (++v45 == v238)
    {
      swift_bridgeObjectRelease();
      a4 = v204;
      v41 = v203;
      a1 = v202;
      v197 = v207;
      v198 = v215;
      if (*((_QWORD *)v215 + 2))
      {
LABEL_94:
        v199 = (_QWORD *)swift_getObjectType(a4);
        sub_10092658C(a1, (uint64_t)v198, 5, a4, v6, v199, v41);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease(a4);
        swift_release(v197);
        return;
      }
LABEL_96:
      swift_unknownObjectRelease(a4);
      swift_release(v197);
      swift_bridgeObjectRelease();
      return;
    }
  }
  if ((v49 != 0xD000000000000013 || v50 != v213)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, v209 | 0x8000000000000000, v49, v50, 0) & 1) == 0)
  {
    swift_bridgeObjectRetain(v50);
    if ((swift_isUniquelyReferenced_nonNull_native(v215) & 1) != 0)
      v122 = v215;
    else
      v122 = (double *)sub_100D0EF94(0, *((_QWORD *)v215 + 2) + 1, 1, v215);
    v124 = *((_QWORD *)v122 + 2);
    v123 = *((_QWORD *)v122 + 3);
    if (v124 >= v123 >> 1)
      v122 = (double *)sub_100D0EF94((_QWORD *)(v123 > 1), v124 + 1, 1, v122);
    *((_QWORD *)v122 + 2) = v124 + 1;
    v215 = v122;
    v125 = &v122[2 * v124];
    *((_QWORD *)v125 + 4) = v49;
    *((_QWORD *)v125 + 5) = v50;
    goto LABEL_7;
  }
  v98 = swift_dynamicCastClassUnconditional(*(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v242, 0, 0, 0);
  v99 = (uint64_t)v241;
  (*(void (**)(uint64_t))(*(_QWORD *)v98 + 760))(v98);
  v100 = v243;
  v101 = v221;
  sub_1004B8460(v99 + *(int *)(v243 + 20), v221, type metadata accessor for CRLWPStorageCRDTData);
  v102 = sub_1004B84A4(v99, type metadata accessor for CRLWPShapeItemCRDTData);
  v103 = (uint64_t)v239;
  (*(void (**)(uint64_t))(*(_QWORD *)v237 + 760))(v102);
  v104 = v103 + *(int *)(v100 + 20);
  v105 = v222;
  sub_1004B8460(v104, v222, type metadata accessor for CRLWPStorageCRDTData);
  sub_1004B84A4(v103, type metadata accessor for CRLWPShapeItemCRDTData);
  v106 = sub_1004B7878(&qword_1013F35B0, type metadata accessor for CRLWPStorageCRDTData, (uint64_t)&unk_100F0CB68);
  v107 = (uint64_t)v214;
  CRType.observableDifference(from:)(v105, v223, v106);
  sub_1004B84A4(v105, type metadata accessor for CRLWPStorageCRDTData);
  sub_1004B84A4(v101, type metadata accessor for CRLWPStorageCRDTData);
  v108 = v224;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v220 + 48))(v107, 1, v224) == 1)
  {
    v109 = v107;
    v110 = &qword_1013F5540;
LABEL_89:
    sub_1004CB800(v109, v110);
    v195 = *(_QWORD *)((char *)v6 + v212);
    if (!v195)
      goto LABEL_106;
    *(_BYTE *)(v195 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
    *(_BYTE *)(v195 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges) = 0;
    goto LABEL_7;
  }
  v111 = *(int *)(v108 + 48);
  v112 = v225;
  v113 = v225 + v111;
  v114 = v107 + v111;
  sub_1004C4938(v107, v225, &qword_1013F5538);
  sub_1004C4938(v114, v113, &qword_1013F5538);
  v115 = v217;
  v116 = v217 + *(int *)(v108 + 48);
  sub_1004CB7BC(v112, v217, &qword_1013F5538);
  v228 = v113;
  sub_1004CB7BC(v113, v116, &qword_1013F5538);
  v117 = v115;
  v118 = (uint64_t)v206;
  sub_1004C4938(v117, (uint64_t)v206, &qword_1013F5538);
  v119 = sub_1004B804C(&qword_1013F5568);
  v120 = *(_QWORD *)(v119 - 8);
  v210 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
  v121 = v210(v118, 1, v119);
  v211 = v119;
  v208 = v120;
  if (v121 == 1)
  {
    sub_1004CB800(v116, &qword_1013F5538);
    sub_1004CB800(v118, &qword_1013F5538);
    goto LABEL_60;
  }
  v126 = CRAttributedString.ObservableDifference.edits.getter(v119);
  (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v118, v119);
  sub_1004CB800(v116, &qword_1013F5538);
  v127 = *(_QWORD *)(v126 + 16);
  if (!v127)
  {
    swift_bridgeObjectRelease();
    v108 = v224;
LABEL_60:
    v6 = v227;
    goto LABEL_61;
  }
  v201 = v126;
  v128 = (_BYTE *)(v126 + 56);
  while (1)
  {
    v130 = *((_QWORD *)v128 - 3);
    v129 = *((_QWORD *)v128 - 2);
    v131 = *((_QWORD *)v128 - 1);
    if (*v128 == 1)
      break;
    v249 = (void *)sub_1004B804C((uint64_t *)&unk_1013F5570);
    v143 = swift_allocObject(&unk_101281D00, 48, 7);
    v247 = v143;
    *(_QWORD *)(v143 + 16) = v130;
    *(_QWORD *)(v143 + 24) = v129;
    *(_QWORD *)(v143 + 32) = v131;
    *(_BYTE *)(v143 + 40) = 0;
    swift_beginAccess(v44, v246, 33, 0);
    sub_1004CB7BC((uint64_t)&v247, (uint64_t)v245, &qword_1013E0230);
    v144 = swift_isUniquelyReferenced_nonNull_native(*v44);
    v244 = (_QWORD *)*v44;
    v145 = v244;
    *v44 = 0x8000000000000000;
    v136 = sub_100843260(26);
    v147 = v145[2];
    v148 = (v146 & 1) == 0;
    v149 = v147 + v148;
    if (__OFADD__(v147, v148))
      goto LABEL_99;
    v150 = v146;
    if (v145[3] >= v149)
    {
      if ((v144 & 1) == 0)
        sub_10082C8D0();
    }
    else
    {
      sub_100814B68(v149, v144);
      v151 = sub_100843260(26);
      if ((v150 & 1) != (v152 & 1))
        goto LABEL_107;
      v136 = v151;
    }
    v153 = v244;
    if ((v150 & 1) == 0)
    {
      v244[(v136 >> 6) + 8] |= 1 << v136;
      *(_QWORD *)(v153[6] + 8 * v136) = 26;
      sub_1004C4938((uint64_t)v245, v153[7] + 32 * v136, &qword_1013E0230);
      v157 = v153[2];
      v155 = __OFADD__(v157, 1);
      v156 = v157 + 1;
      if (v155)
        goto LABEL_103;
      goto LABEL_57;
    }
LABEL_36:
    sub_100582338((uint64_t)v245, v153[7] + 32 * v136, &qword_1013E0230);
LABEL_37:
    *v44 = v153;
    swift_bridgeObjectRelease();
    swift_endAccess(v246);
    sub_1004CB800((uint64_t)&v247, &qword_1013E0230);
    v128 += 32;
    if (!--v127)
    {
      swift_bridgeObjectRelease();
      v6 = v227;
      v108 = v224;
LABEL_61:
      v158 = *(int *)(v108 + 48);
      v159 = v216;
      v160 = v216 + v158;
      sub_1004CB7BC(v225, v216, &qword_1013F5538);
      sub_1004CB7BC(v228, v160, &qword_1013F5538);
      v161 = (uint64_t)v205;
      sub_1004C4938(v160, (uint64_t)v205, &qword_1013F5538);
      v162 = v211;
      if (v210(v161, 1, v211) == 1)
      {
        sub_1004CB800(v159, &qword_1013F5538);
        sub_1004CB800(v161, &qword_1013F5538);
LABEL_88:
        v109 = v225;
        v110 = &qword_1013F5548;
        goto LABEL_89;
      }
      v163 = CRAttributedString.ObservableDifference.edits.getter(v162);
      (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v161, v162);
      sub_1004CB800(v159, &qword_1013F5538);
      v164 = v163;
      v165 = *(_QWORD *)(v163 + 16);
      if (!v165)
      {
LABEL_87:
        swift_bridgeObjectRelease();
        v6 = v227;
        goto LABEL_88;
      }
      v228 = v164;
      v166 = (_BYTE *)(v164 + 56);
      while (1)
      {
        v168 = *((_QWORD *)v166 - 3);
        v167 = *((_QWORD *)v166 - 2);
        v169 = *((_QWORD *)v166 - 1);
        if (*v166 == 1)
        {
          v249 = (void *)sub_1004B804C((uint64_t *)&unk_1013F5570);
          v170 = swift_allocObject(&unk_101281D00, 48, 7);
          v247 = v170;
          *(_QWORD *)(v170 + 16) = v168;
          *(_QWORD *)(v170 + 24) = v167;
          *(_QWORD *)(v170 + 32) = v169;
          *(_BYTE *)(v170 + 40) = 1;
          swift_beginAccess(v44, v246, 33, 0);
          sub_1004CB7BC((uint64_t)&v247, (uint64_t)v245, &qword_1013E0230);
          v171 = swift_isUniquelyReferenced_nonNull_native(*v44);
          v244 = (_QWORD *)*v44;
          v172 = v244;
          *v44 = 0x8000000000000000;
          v174 = sub_100843260(27);
          v175 = v172[2];
          v176 = (v173 & 1) == 0;
          v177 = v175 + v176;
          if (__OFADD__(v175, v176))
            goto LABEL_101;
          v178 = v173;
          if (v172[3] >= v177)
          {
            if ((v171 & 1) == 0)
              sub_10082C8D0();
          }
          else
          {
            sub_100814B68(v177, v171);
            v179 = sub_100843260(27);
            if ((v178 & 1) != (v180 & 1))
              goto LABEL_107;
            v174 = v179;
          }
          v191 = v244;
          if ((v178 & 1) == 0)
          {
            v244[(v174 >> 6) + 8] |= 1 << v174;
            *(_QWORD *)(v191[6] + 8 * v174) = 27;
            sub_1004C4938((uint64_t)v245, v191[7] + 32 * v174, &qword_1013E0230);
            v192 = v191[2];
            v155 = __OFADD__(v192, 1);
            v193 = v192 + 1;
            if (v155)
              goto LABEL_104;
LABEL_86:
            v191[2] = v193;
            goto LABEL_66;
          }
        }
        else
        {
          v249 = (void *)sub_1004B804C((uint64_t *)&unk_1013F5570);
          v181 = swift_allocObject(&unk_101281D00, 48, 7);
          v247 = v181;
          *(_QWORD *)(v181 + 16) = v168;
          *(_QWORD *)(v181 + 24) = v167;
          *(_QWORD *)(v181 + 32) = v169;
          *(_BYTE *)(v181 + 40) = 0;
          swift_beginAccess(v44, v246, 33, 0);
          sub_1004CB7BC((uint64_t)&v247, (uint64_t)v245, &qword_1013E0230);
          v182 = swift_isUniquelyReferenced_nonNull_native(*v44);
          v244 = (_QWORD *)*v44;
          v183 = v244;
          *v44 = 0x8000000000000000;
          v174 = sub_100843260(28);
          v185 = v183[2];
          v186 = (v184 & 1) == 0;
          v187 = v185 + v186;
          if (__OFADD__(v185, v186))
            goto LABEL_100;
          v188 = v184;
          if (v183[3] >= v187)
          {
            if ((v182 & 1) == 0)
              sub_10082C8D0();
          }
          else
          {
            sub_100814B68(v187, v182);
            v189 = sub_100843260(28);
            if ((v188 & 1) != (v190 & 1))
              goto LABEL_107;
            v174 = v189;
          }
          v191 = v244;
          if ((v188 & 1) == 0)
          {
            v244[(v174 >> 6) + 8] |= 1 << v174;
            *(_QWORD *)(v191[6] + 8 * v174) = 28;
            sub_1004C4938((uint64_t)v245, v191[7] + 32 * v174, &qword_1013E0230);
            v194 = v191[2];
            v155 = __OFADD__(v194, 1);
            v193 = v194 + 1;
            if (v155)
              goto LABEL_105;
            goto LABEL_86;
          }
        }
        sub_100582338((uint64_t)v245, v191[7] + 32 * v174, &qword_1013E0230);
LABEL_66:
        *v44 = v191;
        swift_bridgeObjectRelease();
        swift_endAccess(v246);
        sub_1004CB800((uint64_t)&v247, &qword_1013E0230);
        v166 += 32;
        if (!--v165)
          goto LABEL_87;
      }
    }
  }
  v249 = (void *)sub_1004B804C((uint64_t *)&unk_1013F5570);
  v132 = swift_allocObject(&unk_101281D00, 48, 7);
  v247 = v132;
  *(_QWORD *)(v132 + 16) = v130;
  *(_QWORD *)(v132 + 24) = v129;
  *(_QWORD *)(v132 + 32) = v131;
  *(_BYTE *)(v132 + 40) = 1;
  swift_beginAccess(v44, v246, 33, 0);
  sub_1004CB7BC((uint64_t)&v247, (uint64_t)v245, &qword_1013E0230);
  v133 = swift_isUniquelyReferenced_nonNull_native(*v44);
  v244 = (_QWORD *)*v44;
  v134 = v244;
  *v44 = 0x8000000000000000;
  v136 = sub_100843260(25);
  v137 = v134[2];
  v138 = (v135 & 1) == 0;
  v139 = v137 + v138;
  if (!__OFADD__(v137, v138))
  {
    v140 = v135;
    if (v134[3] >= v139)
    {
      if ((v133 & 1) == 0)
        sub_10082C8D0();
    }
    else
    {
      sub_100814B68(v139, v133);
      v141 = sub_100843260(25);
      if ((v140 & 1) != (v142 & 1))
        goto LABEL_107;
      v136 = v141;
    }
    v153 = v244;
    if ((v140 & 1) == 0)
    {
      v244[(v136 >> 6) + 8] |= 1 << v136;
      *(_QWORD *)(v153[6] + 8 * v136) = 25;
      sub_1004C4938((uint64_t)v245, v153[7] + 32 * v136, &qword_1013E0230);
      v154 = v153[2];
      v155 = __OFADD__(v154, 1);
      v156 = v154 + 1;
      if (v155)
        goto LABEL_102;
LABEL_57:
      v153[2] = v156;
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  type metadata accessor for CRLChangeProperty(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v200);
  __break(1u);
}

double *sub_100850084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double *result;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1007763B0();
  v12 = result;
  v13 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v13)
    return (double *)v12;
  v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v14)
  {
    (*(void (**)(void))(*(_QWORD *)v14 + 760))();
    sub_1004B8460((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10, type metadata accessor for CRLWPStorageCRDTData);
    v15 = v13;
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPStorageCRDTData);
    v16 = (void *)CRAttributedString.attributedString.getter(v1);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v17 = objc_msgSend(v16, "string");

    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0)
      v21 = v18 & 0xFFFFFFFFFFFFLL;
    if (v21)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
        v12 = sub_100D0EF94(0, v12[2] + 1, 1, v12);
      v23 = v12[2];
      v22 = v12[3];
      if (v23 >= v22 >> 1)
        v12 = sub_100D0EF94((_QWORD *)(v22 > 1), v23 + 1, 1, v12);
      v12[2] = v23 + 1;
      v24 = &v12[2 * v23];
      v24[4] = v18;
      v24[5] = v20;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return (double *)v12;
  }
  __break(1u);
  return result;
}

void sub_1008502E0()
{
  uint64_t v0;

}

id sub_1008502F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPShapeItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100850334()
{
  return type metadata accessor for CRLWPShapeItem(0);
}

uint64_t type metadata accessor for CRLWPShapeItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F54F8;
  if (!qword_1013F54F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLWPShapeItem);
  return result;
}

uint64_t sub_100850378(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\b";
  v2[1] = &unk_100F0FBD8;
  return swift_updateClassMetadata2(a1, 256, 2, v2, a1 + 1336);
}

void *sub_100850468(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;

  v3 = type metadata accessor for CRLBoardItemSelection();
  v5 = objc_msgSend(a1, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v3, v4));
  v6 = v5;
  if (!v5)
    return v6;
  v7 = swift_dynamicCastClass(v5, v3);
  if (!v7)
    goto LABEL_17;
  v8 = v7;
  v9 = OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems;
  v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v10 + 16) == 1)
      goto LABEL_10;
LABEL_17:

    return 0;
  }
  if (v10 < 0)
    v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems);
  else
    v11 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v7 + OBJC_IVAR____TtC8Freeform21CRLBoardItemSelection_boardItems));
  v12 = __CocoaSet.count.getter(v11);
  swift_bridgeObjectRelease();
  if (v12 != 1)
    goto LABEL_17;
LABEL_10:
  v13 = *(_QWORD *)(v8 + v9);
  swift_bridgeObjectRetain(v13);
  v14 = sub_100622190(v1, v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
    goto LABEL_17;
  v15 = sub_1004B8930(0, (unint64_t *)&qword_1013EFD40, off_101229A38);
  v17 = objc_msgSend(a1, "mostSpecificSelectionOfClass:", swift_getObjCClassFromMetadata(v15, v16));
  if (!v17)
    goto LABEL_17;
  v18 = v17;
  v19 = objc_opt_self(CRLWPSelection);
  v20 = swift_dynamicCastObjCClass(v18, v19);
  if (!v20)
  {

    goto LABEL_17;
  }
  v21 = objc_msgSend(a1, "indexForSelection:", v20);
  v22 = objc_msgSend(a1, "indexForSelection:", v8);

  if (v22 >= v21)
    return 0;
  v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
  if (v6)
    v23 = v6;
  return v6;
}

id sub_100850754()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v1)
    return objc_msgSend(objc_allocWithZone((Class)NSEnumerator), "init");
  v2 = (void *)objc_opt_self(NSArray);
  v3 = v1;
  v4 = objc_msgSend(v2, "arrayWithObject:", v3);
  v5 = objc_msgSend(v4, "objectEnumerator");

  return v5;
}

uint64_t sub_100850830@<X0>(void *a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, float a9@<S0>, unsigned __int8 a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  char v45;
  float v46;

  v38 = a4;
  v41 = a8;
  v42 = a6;
  v40 = a5;
  v36 = a2;
  v37 = a3;
  v39 = a10;
  v13 = sub_1004B804C((uint64_t *)&unk_1013F5510);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C((uint64_t *)&unk_1013F1500);
  __chkstk_darwin(v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for CRLShapeItemCRDTData(0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v28 = (char *)&v35 - v27;
  sub_100924CCC(a1, v36, v37, v38, 0.0, 1, (uint64_t)&v35 - v27);
  if ((unint64_t)(a7 - 1) >= 3)
    v29 = 0;
  else
    v29 = a7;
  v46 = a9;
  CRRegister.init(wrappedValue:)(&v46, &type metadata for Float, &protocol witness table for Float);
  v44 = v29;
  v45 = 0;
  v30 = sub_1004B804C((uint64_t *)&unk_1013F5520);
  v31 = sub_100850B18();
  CRRegister.init(wrappedValue:)(&v44, v30, v31);
  v43 = v39;
  CRRegister.init(wrappedValue:)(&v43, &type metadata for Bool, &protocol witness table for Bool);
  *(_QWORD *)&v22[*(int *)(v19 + 28)] = &_swiftEmptyDictionarySingleton;
  sub_1004B8460((uint64_t)v28, (uint64_t)v26, type metadata accessor for CRLShapeItemCRDTData);
  sub_1004B8460(v40, (uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  v32 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v18, 0, 1, v32);
  sub_1004B8460((uint64_t)v22, (uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
  v33 = v42;
  sub_1006A1C78(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1006A1CF4);
  sub_10055EA9C((uint64_t)v26, (uint64_t)v18, (uint64_t)v15, (uint64_t)v33, v41);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLWPShapeItemCRDTData.WPShapeStyleData);
  return sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLShapeItemCRDTData);
}

unint64_t sub_100850B18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E2868;
  if (!qword_1013E2868)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013F5520);
    result = swift_getWitnessTable(&protocol conformance descriptor for CRExtensible<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013E2868);
  }
  return result;
}

id sub_100850B64(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void *a5, void *a6, void *a7, void *a8, float a9, void *a10, void *a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  _BYTE v40[4];
  int v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;

  v14 = v13;
  v46 = a8;
  v47 = a7;
  v49 = (uint64_t)a6;
  v50 = a2;
  v42 = a11;
  v43 = a10;
  v44 = a12;
  v45 = a3;
  v41 = a13;
  v21 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  v22 = __chkstk_darwin(v21);
  v24 = &v40[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v26 = &v40[-v25];
  v27 = sub_1004B804C(&qword_1013F5530);
  v28 = __chkstk_darwin(v27);
  v30 = &v40[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  v32 = &v40[-v31];
  v48 = a1;
  sub_100924F24(a2, a5, a6, 0, 0, (uint64_t)&v40[-v31]);
  v33 = v45;
  sub_100850830(v46, v47, v43, v42, v45, a4, v44, (uint64_t)v26, a9, v41);
  sub_1006A1C78(a4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
  sub_1004CB7BC((uint64_t)v32, (uint64_t)v30, &qword_1013F5530);
  sub_1004B8460((uint64_t)v26, (uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
  v34 = type metadata accessor for CRLWPShapeItemData(0);
  v35 = swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  sub_100708908((uint64_t)v24, v35 + *(_QWORD *)(*(_QWORD *)v35 + 752));
  *(_QWORD *)(v35 + qword_10140A310) = 0;
  sub_1004C4938((uint64_t)v30, v35 + *(_QWORD *)(*(_QWORD *)v35 + 632), &qword_1013F5530);
  v36 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  v37 = (id)(*(uint64_t (**)(id, _QWORD *))(v14 + 1432))(v48, v36);
  sub_10092345C(v49);

  sub_1004B84A4(v33, type metadata accessor for CRLWPStorageCRDTData);
  v38 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v50, v38);
  sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1004CB800((uint64_t)v32, &qword_1013F5530);
  return v37;
}

void sub_100850E20(void *a1, char *a2, void *a3, _QWORD *a4, void *a5, void *a6, void *a7, void *a8, float a9, void *a10, void *a11, uint64_t a12, char a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  id v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  char *v88;
  _QWORD aBlock[5];
  uint64_t v90;

  v71 = a8;
  v72 = a7;
  v87 = a6;
  v70 = a5;
  v73 = a4;
  v88 = a2;
  v78 = a1;
  v15 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  v16 = __chkstk_darwin(v15);
  v76 = (uint64_t)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v79 = (uint64_t)&v66 - v18;
  v19 = sub_1004B804C(&qword_1013F5530);
  v20 = __chkstk_darwin(v19);
  v74 = (uint64_t)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v86 = (uint64_t)&v66 - v22;
  v23 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v23 - 8);
  v85 = v23;
  __chkstk_darwin(v23);
  v83 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for CRLWPStorageCRDTData(0);
  v26 = __chkstk_darwin(v25);
  v75 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v77 = (char *)&v66 - v28;
  v29 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = __chkstk_darwin(v29);
  v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v31);
  v36 = (char *)&v66 - v35;
  __chkstk_darwin(v34);
  v81 = (char *)&v66 - v37;
  v38 = sub_100559A64();
  v39 = a3;
  v69 = v38;
  CRAttributedString.init(_:)();
  v82 = v30;
  v40 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v41 = v29;
  v40(v36, v33, v29);
  v42 = objc_msgSend(v39, "length");
  v43 = swift_allocObject(&unk_101281C88, 24, 7);
  *(_QWORD *)(v43 + 16) = v36;
  v44 = swift_allocObject(&unk_101281CB0, 32, 7);
  *(_QWORD *)(v44 + 16) = sub_100559AB8;
  *(_QWORD *)(v44 + 24) = v43;
  aBlock[4] = sub_100559AD0;
  v90 = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100D3DC24;
  aBlock[3] = &unk_101281CC8;
  v45 = _Block_copy(aBlock);
  v46 = v90;
  swift_retain(v44);
  objc_msgSend(v39, "enumerateAttributesInRange:options:usingBlock:", 0, v42, 0, v45, swift_release(v46).n128_f64[0]);

  _Block_release(v45);
  LOBYTE(v46) = swift_isEscapingClosureAtFileLocation(v44, "", 78, 624, 125, 1);
  v47 = swift_release(v44);
  if ((v46 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v67 = a12;
    v66 = a11;
    v48 = v81;
    v68 = v41;
    ((void (*)(char *, char *, uint64_t, __n128))v40)(v81, v36, v41, v47);
    v49 = swift_release(v43);
    v50 = (uint64_t)v77;
    (*(void (**)(char *, char *, uint64_t, __n128))(v82 + 16))(v77, v48, v41, v49);
    CRAttributedString.init(_:)(32, 0xE100000000000000, &type metadata for CRLTextAttributeScope, v69);
    *(_QWORD *)(v50 + *(int *)(v25 + 24)) = &_swiftEmptyDictionarySingleton;
    v51 = (uint64_t)v83;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v83, v88, v85);
    v52 = v75;
    sub_1004B8460(v50, v75, type metadata accessor for CRLWPStorageCRDTData);
    v53 = v86;
    v54 = v78;
    v55 = v80;
    sub_100924F24(v51, v70, v87, 0, 0, v86);
    v56 = v79;
    v57 = v73;
    sub_100850830(v71, v72, a10, v66, v52, v73, v67, v79, a9, a13 & 1);
    sub_1006A1C78(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100562F88);
    v58 = v74;
    sub_1004CB7BC(v53, v74, &qword_1013F5530);
    v59 = v76;
    sub_1004B8460(v56, v76, type metadata accessor for CRLWPShapeItemCRDTData);
    v60 = type metadata accessor for CRLWPShapeItemData(0);
    v61 = swift_allocObject(v60, *(unsigned int *)(v60 + 48), *(unsigned __int16 *)(v60 + 52));
    sub_100708908(v59, v61 + *(_QWORD *)(*(_QWORD *)v61 + 752));
    *(_QWORD *)(v61 + qword_10140A310) = 0;
    sub_1004C4938(v58, v61 + *(_QWORD *)(*(_QWORD *)v61 + 632), &qword_1013F5530);
    v62 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
    v63 = (id)(*(uint64_t (**)(void *, _QWORD *))(v55 + 1432))(v54, v62);
    sub_10092345C((uint64_t)v87);

    sub_1004B84A4(v52, type metadata accessor for CRLWPStorageCRDTData);
    v64 = *(void (**)(char *, uint64_t))(v84 + 8);
    v65 = v85;
    v64(v83, v85);
    sub_1004B84A4(v56, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1004CB800(v86, &qword_1013F5530);
    v64(v88, v65);
    sub_1004B84A4(v50, type metadata accessor for CRLWPStorageCRDTData);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v68);
  }
}

uint64_t sub_10085147C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10085148C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10085149C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008514AC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1008514B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1008514C4()
{
  unint64_t result;

  result = qword_1013F5628;
  if (!qword_1013F5628)
  {
    result = swift_getWitnessTable(&unk_100F31398, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F5628);
  }
  return result;
}

uint64_t sub_100851508()
{
  uint64_t v0;
  int v1;

  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 160))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 216))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 344))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 440))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 536))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 592))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 632);
  if (v1 != 255)
    sub_1004C4230(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 624), v1 & 1);
  if (*(_QWORD *)(v0 + 776))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 896, 7);
}

uint64_t sub_100851690(char *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  objc_class *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(__n128);
  char *v13;
  _QWORD *v14;
  __n128 v15;
  __n128 v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t, __n128);
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  objc_class *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(__n128);
  char *v31;
  char *v32;
  __n128 v33;
  char *v34;
  __n128 v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t, __n128);
  char *v59;
  uint64_t v60;
  char *v61;
  objc_super v62;
  objc_super v63;
  unint64_t v64;
  _OWORD v65[15];
  uint64_t v66;
  _BYTE v67[16];
  _BYTE v68[600];
  _BYTE v69[32];

  v3 = type metadata accessor for UUID(0);
  v60 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v68, a1, sizeof(v68));
  v64 = sub_100928490(v68);
  v61 = a1;
  sub_1004C4938((uint64_t)(a1 + 856), (uint64_t)v67, (uint64_t *)&unk_1013F5520);
  sub_1004C4938((uint64_t)v67, (uint64_t)v69, (uint64_t *)&unk_1013F5520);
  if (v69[8])
    v6 = 0;
  else
    v6 = v69[0];
  v55 = v6;
  KeyPath = swift_getKeyPath(&unk_100F0FBF8);
  v8 = (objc_class *)sub_1004B804C((uint64_t *)&unk_1013EFC40);
  v9 = objc_allocWithZone(v8);
  v10 = (_QWORD *)((char *)v9 + *(_QWORD *)((swift_isaMask & *v9) + 0xF0));
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  v57 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v12 = *(void (**)(__n128))(*(_QWORD *)v11 + 256);
  v59 = v1;
  v13 = v1;
  v14 = v9;
  v15 = swift_retain(v11);
  v12(v15);
  v16 = swift_release(v11);
  v17 = (char *)v14 + *(_QWORD *)((swift_isaMask & *v14) + 0xD8);
  v18 = *(void (**)(char *, char *, uint64_t, __n128))(v60 + 32);
  v56 = v5;
  v60 = v3;
  v58 = v18;
  v18(v17, v5, v3, v16);
  *(_QWORD *)((char *)v14 + *(_QWORD *)((swift_isaMask & *v14) + 0xE0)) = v55;
  *(_QWORD *)((char *)v14 + *(_QWORD *)((swift_isaMask & *v14) + 0xE8)) = KeyPath;
  swift_retain(KeyPath);

  v63.receiver = v14;
  v63.super_class = v8;
  v19 = objc_msgSendSuper2(&v63, "init");

  swift_release(KeyPath);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
  specialized Array._endMutation()(v23);
  v24 = *((_DWORD *)v61 + 212);
  v25 = swift_getKeyPath(&unk_100F0FC20);
  v26 = (objc_class *)sub_1004B804C((uint64_t *)&unk_1013F5630);
  v27 = objc_allocWithZone(v26);
  v28 = (_QWORD *)((char *)v27 + *(_QWORD *)((swift_isaMask & *v27) + 0xF0));
  *v28 = 0;
  v28[1] = 0xE000000000000000;
  v29 = *(_QWORD *)&v59[v57];
  v30 = *(void (**)(__n128))(*(_QWORD *)v29 + 256);
  v31 = v13;
  v32 = v27;
  v33 = swift_retain(v29);
  v34 = v56;
  v30(v33);
  v35 = swift_release(v29);
  v58(&v32[*(_QWORD *)((swift_isaMask & *(_QWORD *)v32) + 0xD8)], v34, v60, v35);
  *(_DWORD *)&v32[*(_QWORD *)((swift_isaMask & *(_QWORD *)v32) + 0xE0)] = v24;
  *(_QWORD *)&v32[*(_QWORD *)((swift_isaMask & *(_QWORD *)v32) + 0xE8)] = v25;
  swift_retain(v25);

  v62.receiver = v32;
  v62.super_class = v26;
  v36 = objc_msgSendSuper2(&v62, "init");

  swift_release(v25);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
  v39 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v38 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v39 >= v38 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
  v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v36);
  specialized Array._endMutation()(v40);
  v41 = *(void **)&v31[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
  if (!v41)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commandsToApplyStyle(_:store:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2, 247, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToApplyStyle(_:store:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2u, 247, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return v64;
  }
  v42 = v41;
  v43 = objc_msgSend(v42, "range");
  v45 = v44;
  result = NSNotFound.getter(v43);
  if (v43 == (id)result)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commandsToApplyStyle(_:store:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2, 248, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToApplyStyle(_:store:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLWPShapeItem.swift", 85, 2u, 248, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_14:

    return v64;
  }
  if (!__OFADD__(v43, v45))
  {
    v66 = *((_QWORD *)v61 + 105);
    v47 = *(_OWORD *)(v61 + 808);
    v65[12] = *(_OWORD *)(v61 + 792);
    v65[13] = v47;
    v65[14] = *(_OWORD *)(v61 + 824);
    v48 = *(_OWORD *)(v61 + 744);
    v65[8] = *(_OWORD *)(v61 + 728);
    v65[9] = v48;
    v49 = *(_OWORD *)(v61 + 776);
    v65[10] = *(_OWORD *)(v61 + 760);
    v65[11] = v49;
    v50 = *(_OWORD *)(v61 + 680);
    v65[4] = *(_OWORD *)(v61 + 664);
    v65[5] = v50;
    v51 = *(_OWORD *)(v61 + 712);
    v65[6] = *(_OWORD *)(v61 + 696);
    v65[7] = v51;
    v52 = *(_OWORD *)(v61 + 616);
    v65[0] = *(_OWORD *)(v61 + 600);
    v65[1] = v52;
    v53 = *(_OWORD *)(v61 + 648);
    v65[2] = *(_OWORD *)(v61 + 632);
    v65[3] = v53;
    sub_1007CDA88((uint64_t)v65, (uint64_t)v43, (uint64_t)v43 + v45, v31);
    sub_10061FCEC(v54);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_100851C58(float *a1)
{
  sub_10084BF58(*a1);
}

void sub_100851C7C()
{
  id v0;
  NSString v1;
  unsigned __int8 v2;
  char v3;

  if (objc_msgSend((id)objc_opt_self(CRLInternalOSUtilities), "isInternalOSInstall"))
  {
    v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v1 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend(v0, "BOOLForKey:", v1);

    v3 = v2 ^ 1;
  }
  else
  {
    v3 = 0;
  }
  byte_10147F898 = v3;
}

id sub_100851D38()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(CRLInternalOSUtilities), "isInternalOSInstall");
  byte_10147F899 = (char)result;
  return result;
}

uint64_t sub_100851D68@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int (*v15)(_QWORD, _QWORD, _QWORD);
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  id v27;
  Swift::String v28;
  void *object;
  Swift::String v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v39;
  void (*v40)(_QWORD *, _QWORD, __n128);
  __n128 v41;
  unint64_t *v42;
  unint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v45;
  unint64_t v46;
  __n128 v47;
  __n128 v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t (*v52)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[4];
  uint64_t v58;
  unint64_t v59;

  v56 = a2;
  v7 = type metadata accessor for URLComponents(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for URLQueryItem(0);
  v55 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v54 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E8868);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(string:)(0xD000000000000012, 0x8000000100FD77A0);
  v15 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v8 + 48);
  if (!v15(v14, 1, v7))
  {
    v17 = sub_1004B804C(&qword_1013E98F8);
    v52 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))v15;
    v49 = swift_allocObject(v17, ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ 6 * *(_QWORD *)(v55 + 72), *(unsigned __int8 *)(v55 + 80) | 7);
    *(_OWORD *)(v49 + 16) = xmmword_100EFD140;
    URLQueryItem.init(name:value:)(0x6E656E6F706D6F43, 0xED0000656D614E74, 0x6D726F6665657246, 0xE800000000000000, (__n128)xmmword_100EFD140);
    URLQueryItem.init(name:value:)(0xD000000000000010, 0x8000000100FD77C0, 0x736775422077654ELL, 0xE800000000000000, v18);
    v50 = a3;
    v51 = v7;
    v57[0] = 1452296;
    v19 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v21 = v20;
    URLQueryItem.init(name:value:)(0x6E656E6F706D6F43, 0xEB00000000444974, v19, v20, v22);
    v23 = swift_bridgeObjectRelease(v21);
    a3 = v50;
    v7 = v51;
    URLQueryItem.init(name:value:)(0xD00000000000001ALL, 0x8000000100FD77E0, 49, 0xE100000000000000, v23);
    URLQueryItem.init(name:value:)(0x6C43656369766544, 0xED00007365737361, 0x6850692C64615069, 0xEF63614D2C656E6FLL, v24);
    v15 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v52;
    URLQueryItem.init(name:value:)(0x676169446F747541, 0xEF73636974736F6ELL, 0xD000000000000010, 0x8000000100FD7800, v25);
    URLComponents.queryItems.setter(v49, v26);
  }
  v58 = 0;
  v59 = 0xE000000000000000;
  if (a1)
  {
    v27 = a1;
    v28._countAndFlagsBits = sub_10085240C((uint64_t)v27);
    object = v28._object;
    String.append(_:)(v28);

    v16 = swift_bridgeObjectRelease(object);
  }
  if (a3)
  {
    v30._countAndFlagsBits = v56;
    v30._object = a3;
    String.append(_:)(v30);
  }
  v32 = v58;
  v31 = v59;
  v33 = HIBYTE(v59) & 0xF;
  if ((v59 & 0x2000000000000000) == 0)
    v33 = v58 & 0xFFFFFFFFFFFFLL;
  if (!v33 || ((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v15)(v14, 1, v7, v16))
  {
    v34 = swift_bridgeObjectRelease(v31);
LABEL_12:
    v35 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v15)(v14, 1, v7, v34);
    goto LABEL_13;
  }
  v40 = (void (*)(_QWORD *, _QWORD, __n128))URLComponents.queryItems.modify(v57);
  if (!*v39)
  {
    v48 = swift_bridgeObjectRelease(v31);
    v40(v57, 0, v48);
    goto LABEL_12;
  }
  v42 = v39;
  URLQueryItem.init(name:value:)(0x7470697263736544, 0xEB000000006E6F69, v32, v31, v41);
  swift_bridgeObjectRelease(v31);
  v43 = *v42;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v42);
  *v42 = v43;
  v52 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v43 = sub_100D10448(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
    *v42 = v43;
  }
  v46 = *(_QWORD *)(v43 + 16);
  v45 = *(_QWORD *)(v43 + 24);
  if (v46 >= v45 >> 1)
  {
    v43 = sub_100D10448(v45 > 1, v46 + 1, 1, v43);
    *v42 = v43;
  }
  *(_QWORD *)(v43 + 16) = v46 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v43+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v46, v54, v53);
  ((void (*)(_QWORD *, _QWORD))v40)(v57, 0);
  v35 = v52(v14, 1, v7, v47);
LABEL_13:
  if (v35)
  {
    v36 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a4, 1, 1, v36);
  }
  else
  {
    v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v10, v14, v7);
    URLComponents.url.getter(v37);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_1008523CC((uint64_t)v14);
}

void sub_1008522BC()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  unint64_t v4;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  v4 = sub_1008D711C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100852384();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "openURL:options:completionHandler:", v3, isa, 0, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

unint64_t sub_100852384()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DEE88;
  if (!qword_1013DEE88)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = swift_getWitnessTable(&unk_100EF47EC, v1);
    atomic_store(result, (unint64_t *)&qword_1013DEE88);
  }
  return result;
}

uint64_t sub_1008523CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013E8868);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10085240C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  Swift::String v24;
  void *object;
  _QWORD v27[3];
  _BYTE v28[24];
  uint64_t v29;
  unint64_t v30;

  v2 = type metadata accessor for UUID(0);
  __chkstk_darwin(v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0x203A6472616F42;
  v30 = 0xE700000000000000;
  v11 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v12, v28, 0, 0);
  sub_1004D48C8(v12, (uint64_t)v10);
  v13 = sub_1004B804C(&qword_1013E1980);
  CRRegister.wrappedValue.getter(v13);
  v14 = v27[0];
  v15 = (void *)v27[1];
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  v17._countAndFlagsBits = 2108704;
  v17._object = (void *)0xE300000000000000;
  String.append(_:)(v17);
  v18 = *(_QWORD *)(a1 + v11);
  v19 = v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v18 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v27, 0, 0);
  sub_1004D48C8(v19, (uint64_t)v10);
  swift_retain(v18);
  v20 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v20);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  swift_release(v18);
  v21 = (uint64_t *)(*(_QWORD *)(a1 + v11) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v22 = *v21;
  v23 = v21[1];
  swift_bridgeObjectRetain(v23);
  sub_10067AFD0((uint64_t)v4, v22, v23, (uint64_t)v7);
  v24._countAndFlagsBits = sub_10067AD38();
  object = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(object);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
  return v29;
}

__uint64_t static CRLRealTimeSyncMonotonicClock.currentTime.getter()
{
  return clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
}

ValueMetadata *type metadata accessor for CRLRealTimeSyncMonotonicClock()
{
  return &type metadata for CRLRealTimeSyncMonotonicClock;
}

uint64_t sub_100852680()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281FE8;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 0x200000000;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8 & 0xFFFFFFFFFFLL;
}

void sub_1008527B4(float a1)
{
  uint64_t v1;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _QWORD v22[5];
  uint64_t v23;

  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 56) = &type metadata for Float;
  *(_QWORD *)(v11 + 64) = &protocol witness table for Float;
  *(float *)(v11 + 32) = a1;
  static String.localizedStringWithFormat(_:_:)(v7, v9, v11);
  v13 = v12;
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v9);
  LODWORD(v9) = UIAccessibilityAnnouncementNotification;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  UIAccessibilityPostNotification(v9, v14);

  v15 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v16 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  v22[4] = sub_100500184;
  v23 = v16;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = *(_QWORD *)"";
  v22[2] = sub_100541BD8;
  v22[3] = &unk_101281FC0;
  v17 = _Block_copy(v22);
  v18 = v23;
  swift_retain(v16);
  objc_msgSend(v15, "enumerateEditorsOnStackUsingBlock:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  swift_beginAccess(v16 + 16, v22, 0, 0);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v16 + 24);
  swift_unknownObjectRetain(v19);
  swift_release(v16);
  if (v19)
  {
    ObjectType = swift_getObjectType(v19);
    (*(void (**)(uint64_t, uint64_t, float))(v20 + 32))(ObjectType, v20, a1);
    swift_unknownObjectRelease(v19);
  }
}

uint64_t sub_100852A28()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281F98;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 0;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_100852B68()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281F70;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 2;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 72))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_100852C9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281F48;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 2;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_100852DD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281F20;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 2;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 104))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_100852F04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281EF8;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 2;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 136))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_100853038()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281ED0;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 0;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 200))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_100853178()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281EA8;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 0;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 216))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_1008532B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281E80;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 512;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 272))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

uint64_t sub_1008533EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = swift_allocObject(&unk_101281E40, 32, 7);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  v10[4] = sub_100500184;
  v11 = v2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(_QWORD *)"";
  v10[2] = sub_100541BD8;
  v10[3] = &unk_101281E58;
  v3 = _Block_copy(v10);
  v4 = v11;
  swift_retain(v2);
  objc_msgSend(v1, "enumerateEditorsOnStackUsingBlock:", v3, swift_release(v4).n128_f64[0]);
  _Block_release(v3);
  swift_beginAccess(v2 + 16, v10, 0, 0);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  swift_unknownObjectRetain(v5);
  swift_release(v2);
  if (!v5)
    return 0;
  ObjectType = swift_getObjectType(v5);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 168))(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  return v8;
}

id sub_10085352C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterTextDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterTextDataProvider()
{
  return objc_opt_self(_TtC8Freeform32CRLMiniFormatterTextDataProvider);
}

uint64_t sub_10085357C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008535A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008535B0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t *sub_100853608(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = type metadata accessor for AttributedString(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v16 + 48);
    v18 = swift_bridgeObjectRetain(v12);
    if (v17(v14, 1, v15, v18))
    {
      v19 = sub_1004B804C(&qword_1013E5380);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = type metadata accessor for URL(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_1004B804C(&qword_1013E04D0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v27 = a3[8];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = type metadata accessor for UTType(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_1004B804C((uint64_t *)&unk_1013E3620);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
  }
  return a1;
}

uint64_t sub_100853840(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  v5 = a1 + a2[6];
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + a2[7];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = a1 + a2[8];
  v12 = type metadata accessor for UTType(0);
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return result;
}

uint64_t sub_10085396C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (void *)(a1 + v8);
  v13 = (const void *)(a2 + v8);
  v14 = type metadata accessor for AttributedString(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v15 + 48);
  v17 = swift_bridgeObjectRetain(v11);
  if (v16(v13, 1, v14, v17))
  {
    v18 = sub_1004B804C(&qword_1013E5380);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v19 = a3[7];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[8];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = type metadata accessor for UTType(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_1004B804C((uint64_t *)&unk_1013E3620);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(v26, v27, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

uint64_t sub_100853B78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = type metadata accessor for AttributedString(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = sub_1004B804C(&qword_1013E5380);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    v28 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_13:
  v29 = a3[8];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = type metadata accessor for UTType(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_18;
  }
  if (v36)
  {
LABEL_18:
    v37 = sub_1004B804C((uint64_t *)&unk_1013E3620);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_100853E64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for AttributedString(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_1004B804C(&qword_1013E5380);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[8];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = type metadata accessor for UTType(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_1004B804C((uint64_t *)&unk_1013E3620);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_100854058(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for AttributedString(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = sub_1004B804C(&qword_1013E5380);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  v21 = a3[7];
  v22 = (void *)(a1 + v21);
  v23 = (void *)(a2 + v21);
  v24 = type metadata accessor for URL(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
LABEL_12:
    v29 = sub_1004B804C(&qword_1013E04D0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_13:
  v30 = a3[8];
  v31 = (void *)(a1 + v30);
  v32 = (void *)(a2 + v30);
  v33 = type metadata accessor for UTType(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 40))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_18;
  }
  if (v37)
  {
LABEL_18:
    v38 = sub_1004B804C((uint64_t *)&unk_1013E3620);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v31, v32, v33);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t sub_100854334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100854340);
}

uint64_t sub_100854340(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[5] + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_1004B804C(&qword_1013E5380);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[6];
    }
    else
    {
      v15 = sub_1004B804C(&qword_1013E04D0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[7];
      }
      else
      {
        v13 = sub_1004B804C((uint64_t *)&unk_1013E3620);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_10085444C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100854458);
}

uint64_t sub_100854458(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = a2;
      return result;
    }
    v13 = sub_1004B804C(&qword_1013E5380);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = sub_1004B804C(&qword_1013E04D0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v10 = sub_1004B804C((uint64_t *)&unk_1013E3620);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLSEManifestItem(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F56C0, (uint64_t)&nominal type descriptor for CRLSEManifestItem);
}

void sub_100854568(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_100F0FCD8;
    sub_1007018C8(319, &qword_1013F56D0, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1007018C8(319, (unint64_t *)&qword_1013EAAF0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_1007018C8(319, (unint64_t *)&unk_1013F56D8, (uint64_t (*)(uint64_t))&type metadata accessor for UTType);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 5, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t *sub_10085465C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[7];
    v20 = *(uint64_t *)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = v20;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
  }
  return a1;
}

uint64_t sub_10085477C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
}

char *sub_100854804(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = *(_QWORD *)&a2[v17];
  *(_QWORD *)&a1[v17] = v18;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v18);
  return a1;
}

char *sub_1008548F8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease();
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = *(_QWORD *)&a2[v20];
  *(_QWORD *)&a1[v20] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100854A68(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  return a1;
}

char *sub_100854B38(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100854C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100854C8C);
}

uint64_t sub_100854C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100854D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100854D1C);
}

uint64_t sub_100854D1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLSEImportManifest(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F5770, (uint64_t)&nominal type descriptor for CRLSEImportManifest);
}

void sub_100854DB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_1007018C8(319, (unint64_t *)&qword_1013E6950, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100F0FCD8;
    v4[2] = &unk_100F0FD08;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_100854E48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F5810);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100855E48();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSEImportManifest.CodingKeys, &type metadata for CRLSEImportManifest.CodingKeys, v11, v9, v10);
  v29 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v3, &v29, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLSEImportManifest(0);
    v15 = (uint64_t *)(v3 + v14[5]);
    v16 = *v15;
    v17 = v15[1];
    v28 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v28, v5);
    v18 = (uint64_t *)(v3 + v14[6]);
    v19 = *v18;
    v20 = v18[1];
    v27 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v19, v20, &v27, v5);
    v26 = *(_QWORD *)(v3 + v14[7]);
    v25 = 3;
    v21 = sub_1004B804C(&qword_1013F57C0);
    v22 = sub_100855ED0(&qword_1013F5818, &qword_1013F5820, (uint64_t)&unk_100F0FD48, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v26, &v25, v5, v21, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100855040(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v34 = a2;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1004B804C(&qword_1013F57B0);
  v7 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLSEImportManifest(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = &v12[*(int *)(v10 + 20)];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v39 = v14;
  v36 = v10;
  v37 = *(int *)(v10 + 28);
  v38 = a1;
  *(_QWORD *)&v12[v37] = _swiftEmptyArrayStorage;
  v16 = a1[3];
  v15 = a1[4];
  sub_1004BB5A4(a1, v16);
  v17 = sub_100855E48();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSEImportManifest.CodingKeys, &type metadata for CRLSEImportManifest.CodingKeys, v17, v16, v15);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v38);
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = v7;
    v44 = 0;
    v19 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v20 = v35;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v13, &v44, v35, v13, v19);
    sub_100582338((uint64_t)v6, (uint64_t)v12, (uint64_t *)&unk_1013E1A50);
    v43 = 1;
    v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v43, v20);
    v23 = v22;
    v24 = (uint64_t *)v39;
    swift_bridgeObjectRelease();
    *v24 = v21;
    v24[1] = v23;
    v42 = 2;
    v25 = KeyedDecodingContainer.decode(_:forKey:)(&v42, v20);
    v26 = (uint64_t *)&v12[*(int *)(v36 + 24)];
    *v26 = v25;
    v26[1] = v27;
    v28 = v20;
    v29 = sub_1004B804C(&qword_1013F57C0);
    v41 = 3;
    v30 = sub_100855ED0(&qword_1013F57C8, &qword_1013F57D0, (uint64_t)&unk_100F0FD70, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v29, &v41, v28, v29, v30);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v35);
    v31 = v40;
    v32 = v37;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v12[v32] = v31;
    sub_1004B8460((uint64_t)v12, v34, type metadata accessor for CRLSEImportManifest);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v38);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLSEImportManifest);
  }
}

uint64_t sub_1008553F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100855428 + 4 * byte_100F0FCA0[*v0]))(0x4955556472616F62, 0xE900000000000044);
}

uint64_t sub_100855428()
{
  return 0x6D614E72656E776FLL;
}

uint64_t sub_100855440()
{
  return 0x656C746974;
}

uint64_t sub_100855454()
{
  return 0x736D657469;
}

uint64_t sub_100855468@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10085629C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10085548C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100855E48();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008554B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100855E48();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1008554DC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100855040(a1, a2);
}

uint64_t sub_1008554F0(_QWORD *a1)
{
  return sub_100854E48(a1);
}

uint64_t sub_100855504(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F57F8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_100855E8C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSEManifestItem.CodingKeys, &type metadata for CRLSEManifestItem.CodingKeys, v11, v9, v10);
  v33 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1004B7878(&qword_1013E4860, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v33, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for CRLSEManifestItem(0);
    v15 = (uint64_t *)(v3 + v14[5]);
    v16 = *v15;
    v17 = v15[1];
    v32 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v32, v5);
    v18 = v3 + v14[6];
    v31 = 2;
    v19 = type metadata accessor for AttributedString(0);
    v20 = sub_1004B7878(&qword_1013F5800, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v18, &v31, v5, v19, v20);
    v21 = v3 + v14[7];
    v30 = 3;
    v22 = type metadata accessor for URL(0);
    v23 = sub_1004B7878(&qword_1013F3D18, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v21, &v30, v5, v22, v23);
    v24 = v3 + v14[8];
    v29 = 4;
    v25 = type metadata accessor for UTType(0);
    v26 = sub_1004B7878(&qword_1013F5808, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v24, &v29, v5, v25, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10085577C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v51 = a2;
  v3 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v3);
  v52 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v5);
  v53 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v7);
  v54 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for UUID(0);
  v58 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v56 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1004B804C(&qword_1013F57D8);
  v57 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLSEManifestItem(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &v14[*(int *)(v15 + 20)];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v65 = (uint64_t *)v16;
  v17 = (uint64_t)&v14[*(int *)(v15 + 24)];
  v18 = type metadata accessor for AttributedString(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v63 = v17;
  v19(v17, 1, 1, v18);
  v20 = (uint64_t)&v14[*(int *)(v12 + 28)];
  v21 = type metadata accessor for URL(0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v62 = v20;
  v22(v20, 1, 1, v21);
  v23 = (uint64_t)&v14[*(int *)(v12 + 32)];
  v24 = type metadata accessor for UTType(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v61 = v23;
  v25(v23, 1, 1, v24);
  v27 = a1[3];
  v26 = a1[4];
  sub_1004BB5A4(a1, v27);
  v28 = sub_100855E8C();
  v59 = v11;
  v29 = v64;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLSEManifestItem.CodingKeys, &type metadata for CRLSEManifestItem.CodingKeys, v28, v27, v26);
  if (v29)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    v36 = v62;
    v37 = v63;
    v38 = v61;
    swift_bridgeObjectRelease();
    sub_1004CB800(v37, &qword_1013E5380);
    sub_1004CB800(v36, &qword_1013E04D0);
    return sub_1004CB800(v38, (uint64_t *)&unk_1013E3620);
  }
  else
  {
    v30 = v18;
    v49 = v24;
    v50 = v21;
    v31 = (uint64_t)v54;
    v32 = v58;
    v64 = a1;
    v70 = 0;
    v33 = sub_1004B7878(&qword_1013E4810, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v35 = v55;
    v34 = v56;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v55, &v70, v60, v55, v33);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v14, v34, v35);
    v69 = 1;
    v39 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v69, v60);
    v40 = v65;
    *v65 = v39;
    v40[1] = v41;
    v68 = 2;
    v42 = sub_1004B7878(&qword_1013F57E8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v30, &v68, v60, v30, v42);
    sub_100582338(v31, v63, &qword_1013E5380);
    v67 = 3;
    v43 = sub_1004B7878(&qword_1013F3CE8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v44 = (uint64_t)v53;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v50, &v67, v60, v50, v43);
    sub_100582338(v44, v62, &qword_1013E04D0);
    v66 = 4;
    v45 = sub_1004B7878(&qword_1013F57F0, (uint64_t (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
    v46 = (uint64_t)v52;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v49, &v66, v60, v49, v45);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v60);
    sub_100582338(v46, v61, (uint64_t *)&unk_1013E3620);
    sub_1004B8460((uint64_t)v14, v51, type metadata accessor for CRLSEManifestItem);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v64);
    return sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLSEManifestItem);
  }
}

uint64_t sub_100855D20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100855D50 + 4 * byte_100F0FCA4[*v0]))(0x444955556D657469, 0xE800000000000000);
}

uint64_t sub_100855D50()
{
  return 0x656C746974;
}

uint64_t sub_100855D64()
{
  return 0x7475626972747461;
}

uint64_t sub_100855D88()
{
  return 7107189;
}

uint64_t sub_100855D98()
{
  return 0x495455616964656DLL;
}

uint64_t sub_100855DAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100856454(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100855DD0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100855E8C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100855DF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100855E8C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100855E20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10085577C(a1, a2);
}

uint64_t sub_100855E34(_QWORD *a1)
{
  return sub_100855504(a1);
}

unint64_t sub_100855E48()
{
  unint64_t result;

  result = qword_1013F57B8;
  if (!qword_1013F57B8)
  {
    result = swift_getWitnessTable(&unk_100F0FF8C, &type metadata for CRLSEImportManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F57B8);
  }
  return result;
}

unint64_t sub_100855E8C()
{
  unint64_t result;

  result = qword_1013F57E0;
  if (!qword_1013F57E0)
  {
    result = swift_getWitnessTable(&unk_100F0FF3C, &type metadata for CRLSEManifestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F57E0);
  }
  return result;
}

uint64_t sub_100855ED0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_1004CB6A4(&qword_1013F57C0);
    sub_1004B7878(a2, type metadata accessor for CRLSEManifestItem, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLSEManifestItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100855FA0 + 4 * byte_100F0FCAE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100855FD4 + 4 * byte_100F0FCA9[v4]))();
}

uint64_t sub_100855FD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100855FDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100855FE4);
  return result;
}

uint64_t sub_100855FF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100855FF8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100855FFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100856004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSEManifestItem.CodingKeys()
{
  return &type metadata for CRLSEManifestItem.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CRLSEImportManifest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10085606C + 4 * byte_100F0FCB8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1008560A0 + 4 * byte_100F0FCB3[v4]))();
}

uint64_t sub_1008560A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008560A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008560B0);
  return result;
}

uint64_t sub_1008560BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008560C4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1008560C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008560D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSEImportManifest.CodingKeys()
{
  return &type metadata for CRLSEImportManifest.CodingKeys;
}

unint64_t sub_1008560F0()
{
  unint64_t result;

  result = qword_1013F5828;
  if (!qword_1013F5828)
  {
    result = swift_getWitnessTable(&unk_100F0FE5C, &type metadata for CRLSEImportManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5828);
  }
  return result;
}

unint64_t sub_100856138()
{
  unint64_t result;

  result = qword_1013F5830;
  if (!qword_1013F5830)
  {
    result = swift_getWitnessTable(&unk_100F0FF14, &type metadata for CRLSEManifestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5830);
  }
  return result;
}

unint64_t sub_100856180()
{
  unint64_t result;

  result = qword_1013F5838;
  if (!qword_1013F5838)
  {
    result = swift_getWitnessTable(&unk_100F0FE84, &type metadata for CRLSEManifestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5838);
  }
  return result;
}

unint64_t sub_1008561C8()
{
  unint64_t result;

  result = qword_1013F5840;
  if (!qword_1013F5840)
  {
    result = swift_getWitnessTable(&unk_100F0FEAC, &type metadata for CRLSEManifestItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5840);
  }
  return result;
}

unint64_t sub_100856210()
{
  unint64_t result;

  result = qword_1013F5848;
  if (!qword_1013F5848)
  {
    result = swift_getWitnessTable(&unk_100F0FDCC, &type metadata for CRLSEImportManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5848);
  }
  return result;
}

unint64_t sub_100856258()
{
  unint64_t result;

  result = qword_1013F5850;
  if (!qword_1013F5850)
  {
    result = swift_getWitnessTable(&unk_100F0FDF4, &type metadata for CRLSEImportManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5850);
  }
  return result;
}

uint64_t sub_10085629C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x4955556472616F62 && a2 == 0xE900000000000044)
  {
    v5 = 0xE900000000000044;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4955556472616F62, 0xE900000000000044, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6D614E72656E776FLL && a2 == 0xE900000000000065)
  {
    v7 = 0xE900000000000065;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D614E72656E776FLL, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v8 = 0xE500000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736D657469, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100856454(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;

  if (a1 == 0x444955556D657469 && a2 == 0xE800000000000000)
  {
    v5 = 0xE800000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x444955556D657469, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEE00747865546465)
  {
    v8 = 0xEE00747865546465;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEE00747865546465, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v9 = 0xE300000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x495455616964656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 4;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x495455616964656DLL, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_10085667C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  id v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;

  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v9 = type metadata accessor for CRLURLEditor();
  v11 = v9;
  if (v9)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9, v10);
  else
    ObjCClassFromMetadata = 0;
  v13 = objc_msgSend(v8, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  if (!swift_dynamicCastClass(v13, v11))
  {
    v17 = swift_unknownObjectRelease(v13);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v17);
    goto LABEL_8;
  }
  sub_100714C58((uint64_t)v3);
  v14 = swift_unknownObjectRelease(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v14) == 1)
  {
LABEL_8:
    sub_1004CB800((uint64_t)v3, &qword_1013E04D0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v15 = sub_10085694C();
  v16 = dispatch thunk of CustomStringConvertible.description.getter(v4, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

double sub_100856828()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  char *v7;
  double result;
  _QWORD v9[4];

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
  v2 = type metadata accessor for CRLURLEditor();
  v4 = v2;
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v6 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  if (swift_dynamicCastClass(v6, v4))
  {
    v9[3] = type metadata accessor for CRLMiniFormatterURLDataProvider();
    v9[0] = v0;
    v7 = v0;
    sub_1007128CC();
    swift_unknownObjectRelease(v6);
    sub_1004CB800((uint64_t)v9, &qword_1013E0230);
  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

id sub_1008568FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterURLDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterURLDataProvider()
{
  return objc_opt_self(_TtC8Freeform31CRLMiniFormatterURLDataProvider);
}

unint64_t sub_10085694C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FA4A0;
  if (!qword_1013FA4A0)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, &qword_1013FA4A0);
  }
  return result;
}

uint64_t sub_100856994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_10147F8A0);
  sub_1004F2A1C(v17, (uint64_t)qword_10147F8A0);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x657469726F766146, 0xE800000000000000);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Entity type name", 16, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

unint64_t sub_100856BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t result;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;

  v0 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v0);
  v68 = (char *)v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v2);
  v67 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v49[0] - 8);
  __chkstk_darwin(v49[0]);
  v6 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v64 = v13;
  __chkstk_darwin(v13);
  v58 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013F58F0);
  v17 = sub_1004B804C(&qword_1013F58F8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  v66 = v17;
  v20 = *(_QWORD *)(v18 + 72);
  v21 = *(unsigned __int8 *)(v18 + 80);
  v22 = (v21 + 32) & ~v21;
  v55 = v20;
  v56 = 2 * v20;
  v23 = swift_allocObject(v16, v22 + 3 * v20, v21 | 7);
  v60 = xmmword_100EF5550;
  v57 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_100EF5550;
  v65 = v23 + v22;
  v54 = v23 + v22 + *(int *)(v19 + 48);
  *(_BYTE *)(v23 + v22) = 0;
  v24 = String.LocalizationValue.init(stringLiteral:)(0x657469726F766146, 0xE800000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v27 = v49[0];
  v26(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v49[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, 0, 0, 256);
  v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v63(v67, 1, 1, v13);
  v28 = type metadata accessor for DisplayRepresentation.Image(0);
  v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v62 = v28;
  v61(v68, 1, 1, v28);
  v53 = sub_1004B804C(&qword_1013EDDA0);
  v29 = *(_QWORD *)(v14 + 72);
  v30 = *(unsigned __int8 *)(v14 + 80);
  v59 = 2 * v29;
  v49[1] = v29;
  v51 = ((v30 + 32) & ~v30) + 3 * v29;
  v52 = (v30 + 32) & ~v30;
  v50 = v30 | 7;
  v31 = swift_allocObject(v53, v51, v30 | 7);
  *(_OWORD *)(v31 + 16) = v60;
  v32 = String.LocalizationValue.init(stringLiteral:)(1702260556, 0xE400000000000000);
  static Locale.current.getter(v32);
  v26(v6, v25, v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Favorite operation name synonym", 31, 2);
  v33 = String.LocalizationValue.init(stringLiteral:)(0x7472616548, 0xE500000000000000);
  static Locale.current.getter(v33);
  v26(v6, v25, v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Favorite operation name synonym", 31, 2);
  v34 = String.LocalizationValue.init(stringLiteral:)(1701538124, 0xE400000000000000);
  static Locale.current.getter(v34);
  v35 = v27;
  v26(v6, v25, v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Favorite operation name synonym", 31, 2);
  v37 = v67;
  v36 = v68;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v58, v67, v68, v31);
  v38 = (_BYTE *)(v65 + v55);
  v55 += v65 + *(int *)(v66 + 48);
  *v38 = 1;
  v39 = String.LocalizationValue.init(stringLiteral:)(0x69726F7661666E55, 0xEA00000000006574);
  static Locale.current.getter(v39);
  v26(v6, v25, v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, 0, 0, 256);
  v63(v37, 1, 1, v64);
  v61(v36, 1, 1, v62);
  v40 = swift_allocObject(v53, v51, v50);
  *(_OWORD *)(v40 + 16) = v60;
  v41 = String.LocalizationValue.init(stringLiteral:)(0x74726165686E55, 0xE700000000000000);
  static Locale.current.getter(v41);
  v26(v6, v25, v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Unfavorite operation name synonym", 33, 2);
  v42 = String.LocalizationValue.init(stringLiteral:)(0x656B696C6E55, 0xE600000000000000);
  static Locale.current.getter(v42);
  v26(v6, v25, v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Unfavorite operation name synonym", 33, 2);
  v43 = String.LocalizationValue.init(stringLiteral:)(0x656B696C736944, 0xE700000000000000);
  static Locale.current.getter(v43);
  v26(v6, v25, v27);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, "Unfavorite operation name synonym", 33, 2);
  v44 = v58;
  v46 = v67;
  v45 = v68;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v58, v67, v68, v40);
  *(_BYTE *)(v65 + v56) = 2;
  v47 = String.LocalizationValue.init(stringLiteral:)(0x656C67676F54, 0xE600000000000000);
  static Locale.current.getter(v47);
  v26(v6, v25, v35);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0x6E497070414C5243, 0xED000073746E6574, v9, v6, 0, 0, 256);
  v63(v46, 1, 1, v64);
  v61(v45, 1, 1, v62);
  DisplayRepresentation.init(title:subtitle:image:)(v44, v46, v45);
  result = sub_1008D7B20(v57);
  qword_10147F8B8 = result;
  return result;
}

uint64_t sub_100857400(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10083C2FC(*a1, *a2);
}

unint64_t sub_100857410()
{
  unint64_t result;

  result = qword_1013F5880;
  if (!qword_1013F5880)
  {
    result = swift_getWitnessTable(&unk_100F1000C, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F5880);
  }
  return result;
}

Swift::Int sub_100857454()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xEA00000000006574;
  v3 = 0x69726F7661666E75;
  if (v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x657469726F766166;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1008574F4(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xEA00000000006574;
  v3 = 0x69726F7661666E75;
  if (*v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x657469726F766166;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100857570(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xEA00000000006574;
  v4 = 0x69726F7661666E75;
  if (v2 != 1)
  {
    v4 = 0x656C67676F74;
    v3 = 0xE600000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x657469726F766166;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_10085760C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100857C38(*a1);
  *a2 = result;
  return result;
}

void sub_100857638(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xEA00000000006574;
  v5 = 0x69726F7661666E75;
  if (v2 != 1)
  {
    v5 = 0x656C67676F74;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x657469726F766166;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_10085769C()
{
  unint64_t result;

  result = qword_1013F5888;
  if (!qword_1013F5888)
  {
    result = swift_getWitnessTable(&unk_100F100EC, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F5888);
  }
  return result;
}

unint64_t sub_1008576E4()
{
  unint64_t result;

  result = qword_1013F5890;
  if (!qword_1013F5890)
  {
    result = swift_getWitnessTable(&unk_100F10124, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F5890);
  }
  return result;
}

unint64_t sub_10085772C()
{
  unint64_t result;

  result = qword_1013F5898;
  if (!qword_1013F5898)
  {
    result = swift_getWitnessTable(&unk_100F10074, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F5898);
  }
  return result;
}

unint64_t sub_100857774()
{
  unint64_t result;

  result = qword_1013F58A0;
  if (!qword_1013F58A0)
  {
    result = swift_getWitnessTable(&unk_100F10154, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58A0);
  }
  return result;
}

unint64_t sub_1008577BC()
{
  unint64_t result;

  result = qword_1013F58A8;
  if (!qword_1013F58A8)
  {
    result = swift_getWitnessTable(&unk_100F1017C, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58A8);
  }
  return result;
}

unint64_t sub_100857804()
{
  unint64_t result;

  result = qword_1013F58B0;
  if (!qword_1013F58B0)
  {
    result = swift_getWitnessTable(&unk_100F101A4, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58B0);
  }
  return result;
}

unint64_t sub_10085784C()
{
  unint64_t result;

  result = qword_1013F58B8;
  if (!qword_1013F58B8)
  {
    result = swift_getWitnessTable(&unk_100F101FC, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58B8);
  }
  return result;
}

uint64_t sub_100857890@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DD268 != -1)
    swift_once(&qword_1013DD268, sub_100856994);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_10147F8A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_100857900(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100857940();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100857940()
{
  unint64_t result;

  result = qword_1013F58C0;
  if (!qword_1013F58C0)
  {
    result = swift_getWitnessTable(&unk_100F100AC, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58C0);
  }
  return result;
}

uint64_t sub_100857984(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100857940();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1008579C0()
{
  unint64_t result;

  result = qword_1013F58C8;
  if (!qword_1013F58C8)
  {
    result = swift_getWitnessTable(&unk_100F1023C, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58C8);
  }
  return result;
}

unint64_t sub_100857A08()
{
  unint64_t result;

  result = qword_1013F58D0;
  if (!qword_1013F58D0)
  {
    result = swift_getWitnessTable(&unk_100F10264, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58D0);
  }
  return result;
}

unint64_t sub_100857A50()
{
  unint64_t result;

  result = qword_1013F58D8;
  if (!qword_1013F58D8)
  {
    result = swift_getWitnessTable(&unk_100F10034, &type metadata for CRLFavoriteOperation);
    atomic_store(result, (unint64_t *)&qword_1013F58D8);
  }
  return result;
}

double sub_100857A94()
{
  double result;

  if (qword_1013DD270 != -1)
    swift_once(&qword_1013DD270, sub_100856BC4);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_10147F8B8).n128_u64[0];
  return result;
}

uint64_t sub_100857AD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10085784C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100857B10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F58E0;
  if (!qword_1013F58E0)
  {
    v1 = sub_1004CB6A4(&qword_1013F58E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F58E0);
  }
  return result;
}

void sub_100857B5C(_QWORD *a1@<X8>)
{
  *a1 = &off_101263F70;
}

uint64_t storeEnumTagSinglePayload for CRLFavoriteOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100857BB8 + 4 * byte_100F10005[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100857BEC + 4 * asc_100F10000[v4]))();
}

uint64_t sub_100857BEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100857BF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100857BFCLL);
  return result;
}

uint64_t sub_100857C08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100857C10);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100857C14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100857C1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFavoriteOperation()
{
  return &type metadata for CRLFavoriteOperation;
}

unint64_t sub_100857C38(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101264F38, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_100857C80(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;

  result = sub_100CE0488(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  else
    return sub_1005C3BF0(result, v3, 0, a1);
}

unint64_t sub_100857CF8(uint64_t a1)
{
  unint64_t result;
  int v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_100CE0488(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  v5 = result;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  if (result == v6)
    v7 = 0;
  else
    v7 = sub_1005C3C44(result, v3, 0, a1);
  return v7 | ((unint64_t)(v5 == v6) << 32);
}

uint64_t sub_100857D88@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;

  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  ObjectType = swift_getObjectType(v3);
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRetain(v5);
  v8 = dispatch thunk of _AnyIndexBox._typeID.getter(ObjectType, v4);
  v9 = swift_getObjectType(v5);
  result = dispatch thunk of _AnyIndexBox._typeID.getter(v9, v6);
  if (v8 == result)
  {
    v11 = dispatch thunk of _AnyIndexBox._isEqual(to:)(v5, v6, ObjectType, v4);
    swift_unknownObjectRelease(v5);
    if ((v11 & 1) != 0)
    {
      result = swift_unknownObjectRelease(v3);
      a2[1] = 0u;
      a2[2] = 0u;
      *a2 = 0u;
    }
    else
    {
      dispatch thunk of _AnyCollectionBox.subscript.getter(v3, v4);
      return swift_unknownObjectRelease(v3);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100857E90(uint64_t a1)
{
  return sub_1008581D4(a1, sub_1005C461C, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t, __n128))sub_1005C3C98);
}

uint64_t sub_100857EA4(uint64_t a1)
{
  return sub_1008581D4(a1, sub_1005C461C, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t, __n128))sub_1005C3CA4);
}

uint64_t sub_100857EB8(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_100CE0488(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_1005C4E78(result, v3, 0, a1);
  swift_bridgeObjectRetain(v6);
  return v5;
}

unint64_t sub_100857F34(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v13;
  _QWORD v14[2];

  v2 = HIBYTE(a2) & 0xF;
  v3 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    v7 = sub_100858958(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v11 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v7 & 0xFFFFFFFFFFFF0000, a1, a2);
    }
    else
    {
      v8 = v7 >> 16;
      if ((a2 & 0x2000000000000000) != 0)
      {
        v14[0] = a1;
        v14[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        v9 = v14;
        v10 = v2;
      }
      else
      {
        if ((a1 & 0x1000000000000000) != 0)
        {
          v9 = (_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          v9 = (_QWORD *)_StringObject.sharedUTF8.getter(a1, a2);
          v3 = v13;
        }
        v10 = v3;
      }
      v11 = _decodeScalar(_:startingAt:)(v9, v10, v8);
    }
  }
  else
  {
    v11 = 0;
  }
  LOBYTE(v14[0]) = v4 == 0;
  return v11 | ((unint64_t)(v4 == 0) << 32);
}

uint64_t sub_100858010(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return String.subscript.getter(15, a1, a2);
  else
    return 0;
}

uint64_t sub_100858050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;

  result = sub_100CE0488(a1);
  if ((v6 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result != 1 << *(_BYTE *)(a1 + 32))
    return sub_1005C4288(result, v5, a1, a2);
  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1008580C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100858110(a1, (uint64_t (*)(void))sub_100CE0488, type metadata accessor for CRLBoardIdentifier, (void (*)(void))sub_1005C427C, a2);
}

uint64_t sub_1008580E0(uint64_t a1)
{
  return sub_1008581D4(a1, sub_1005C461C, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t, __n128))sub_1005C453C);
}

uint64_t sub_1008580F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100858110(a1, (uint64_t (*)(void))sub_100CE0488, type metadata accessor for CRLBoardLibraryViewModel.Item, (void (*)(void))sub_1005C4564, a2);
}

uint64_t sub_100858110@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  result = a2();
  if ((v11 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v10)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v12 = a3(0);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a5;
    v15 = 1;
  }
  else
  {
    a4();
    v12 = a3(0);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v14 = a5;
    v15 = 0;
  }
  return v13(v14, v15, 1, v12);
}

uint64_t sub_1008581C0(uint64_t a1)
{
  return sub_1008581D4(a1, sub_1005C461C, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t, __n128))sub_1005C4608);
}

uint64_t sub_1008581D4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t, __n128))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __n128 v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;

  v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    v7 = __CocoaSet.startIndex.getter(v6);
    v9 = v8;
    v10 = __CocoaSet.endIndex.getter(v6);
    v12 = static __CocoaSet.Index.== infix(_:_:)(v7, v9, v10, v11);
    v13 = swift_bridgeObjectRelease(v10);
    if ((v12 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = a2(a1);
  if ((v17 & 1) == 0)
  {
    v9 = v16;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v16)
    {
      v7 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_100503494(v7, v9, v5 != 0);
        return 0;
      }
LABEL_10:
      v14 = a3(v7, v9, v5 != 0, a1, v13);
      sub_100503494(v7, v9, v5 != 0);
      return v14;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Error.publicDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t DynamicType;
  uint64_t MetatypeMetadata;
  uint64_t v26;
  void *v27;
  void *v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  double v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  void *object;
  uint64_t v57;
  char *v58;
  char v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  __int128 v91;
  _QWORD v92[5];

  v3 = v2;
  v86 = a2;
  v5 = sub_1004B804C(&qword_1013F5900);
  __chkstk_darwin(v5);
  v88 = (uint64_t)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Mirror.DisplayStyle(0);
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  v8 = __chkstk_darwin(v7);
  v83 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (char *)&v76 - v10;
  v11 = type metadata accessor for Mirror(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v87 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 - 8);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v76 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v76 - v22;
  v89 = v3;
  DynamicType = swift_getDynamicType(v3, a1, 0);
  *(_QWORD *)&v91 = DynamicType;
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v26 = String.init<A>(reflecting:)(&v91, MetatypeMetadata);
  v28 = v27;
  v29 = sub_1008588B0();
  if (!swift_dynamicCastMetatype(DynamicType, v29))
  {
    v34 = v82;
    v35 = v83;
    v78 = v18;
    v79 = v21;
    v80 = v26;
    v81 = v12;
    v86 = v11;
    v92[1] = a1;
    v36 = (char *)sub_10050D1B0(&v91);
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v37(v36, v89, a1);
    v38 = v87;
    v39 = Mirror.init(reflecting:)(&v91);
    v40 = v88;
    Mirror.displayStyle.getter(v39);
    v41 = v84;
    v42 = v40;
    v43 = v85;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v42, 1, v85) == 1)
    {
      (*(void (**)(char *, uint64_t))(v81 + 8))(v38, v86);
      sub_1004CB800(v88, &qword_1013F5900);
      return v80;
    }
    v57 = a1;
    v77 = v15;
    v58 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v34, v88, v43);
    (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v35, enum case for Mirror.DisplayStyle.enum(_:), v43);
    v59 = static Mirror.DisplayStyle.== infix(_:_:)(v34, v35);
    v60 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
    v61 = v60(v35, v43);
    if ((v59 & 1) == 0)
    {
      *(_QWORD *)&v91 = 0;
      *((_QWORD *)&v91 + 1) = 0xE000000000000000;
      v67._countAndFlagsBits = v80;
      v67._object = v28;
      String.append(_:)(v67);
      swift_bridgeObjectRelease(v28);
      v68._countAndFlagsBits = 40;
      v68._object = (void *)0xE100000000000000;
      String.append(_:)(v68);
      _print_unlocked<A, B>(_:_:)(v34, &v91, v43, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v69._countAndFlagsBits = 41;
      v69._object = (void *)0xE100000000000000;
      String.append(_:)(v69);
      v44 = v91;
      v60(v58, v43);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v87, v86);
      return v44;
    }
    v62 = (_QWORD *)Mirror.children.getter(v61);
    sub_100857D88(v62, &v91);
    swift_release(v62);
    if (v92[3])
    {
      v63 = (void *)*((_QWORD *)&v91 + 1);
      v64 = v91;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v92);
      v65 = v79;
      v37(v79, v89, v57);
      v66 = v78;
      if (v63)
      {
LABEL_16:
        (*(void (**)(char *, uint64_t))(v77 + 8))(v65, v57);
        v71 = v86;
        v72 = v81;
        *(_QWORD *)&v91 = v80;
        *((_QWORD *)&v91 + 1) = v28;
        v73._countAndFlagsBits = 46;
        v73._object = (void *)0xE100000000000000;
        String.append(_:)(v73);
        v74._countAndFlagsBits = v64;
        v74._object = v63;
        String.append(_:)(v74);
        v75 = swift_bridgeObjectRelease(v63);
        v44 = v91;
        ((void (*)(char *, uint64_t, __n128))v60)(v58, v85, v75);
        (*(void (**)(char *, uint64_t))(v72 + 8))(v87, v71);
        return v44;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)&v91, &qword_1013F5908);
      v65 = v79;
      v37(v79, v89, v57);
      v66 = v78;
    }
    v37(v66, (uint64_t)v65, v57);
    v64 = String.init<A>(describing:)(v66, v57);
    v63 = v70;
    goto LABEL_16;
  }
  v30 = swift_bridgeObjectRelease(v28);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v23, v89, a1, v30);
  v31 = v86;
  v32 = _getErrorEmbeddedNSError<A>(_:)(v23, a1, v86);
  if (v32)
  {
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, a1);
  }
  else
  {
    v33 = swift_allocError(a1, v31, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v45, v23, a1);
  }
  v46 = (void *)_convertErrorToNSError(_:)(v33);
  swift_errorRelease(v33);
  *(_QWORD *)&v91 = 0;
  *((_QWORD *)&v91 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  *(_QWORD *)&v47 = swift_bridgeObjectRelease(*((_QWORD *)&v91 + 1)).n128_u64[0];
  *(_QWORD *)&v91 = 0x20726F727245534ELL;
  *((_QWORD *)&v91 + 1) = 0xEF3D6E69616D6F44;
  v48 = objc_msgSend(v46, "domain", v47);
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
  v51 = v50;

  v52._countAndFlagsBits = v49;
  v52._object = v51;
  String.append(_:)(v52);
  swift_bridgeObjectRelease(v51);
  v53._countAndFlagsBits = 0x3D65646F4320;
  v53._object = (void *)0xE600000000000000;
  String.append(_:)(v53);
  v90 = objc_msgSend(v46, "code");
  v54._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v54._object;
  String.append(_:)(v54);

  swift_bridgeObjectRelease(object);
  return v91;
}

unint64_t sub_1008588B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F95B0;
  if (!qword_1013F95B0)
  {
    v1 = objc_opt_self(NSError);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F95B0);
  }
  return result;
}

uint64_t Error.fullDescription.getter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  __chkstk_darwin(a1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  return String.init<A>(reflecting:)(v3, a1);
}

unint64_t sub_100858958(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1008589F4(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_100858A60(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1008589F4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_100BF1410(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_100858A60(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v10 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            v7 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        v12 = result >> 16;
        v6 = _StringObject.sharedUTF8.getter(a2, a3);
        v5 = v12;
        if (v12 != v9)
          goto LABEL_9;
      }
      return v5 << 16;
    }
    v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v8 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v8)
      return _StringGuts.foreignScalarAlign(_:)();
  }
  return result;
}

id CRLiOSParticipantContactViewController.__allocating_init(contact:doneAction:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return CRLiOSParticipantContactViewController.init(contact:doneAction:)(a1, a2);
}

double sub_100858BA0()
{
  double result;

  result = 500.0;
  xmmword_1013F5910 = xmmword_100F102C0;
  return result;
}

id CRLiOSParticipantContactViewController.init(contact:doneAction:)(void *a1, void *a2)
{
  char *v2;
  void *v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Class isa;
  id v13;
  id v14;
  objc_super v16;
  UIAction_optional v17;
  UIMenu_optional v18;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSParticipantContactViewController_contact] = a1;
  v5 = (void *)objc_opt_self(CNContactViewController);
  v6 = v2;
  v7 = a1;
  v8 = objc_msgSend(v5, "viewControllerForContact:", v7);
  v9 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  objc_msgSend(v8, "setContactStore:", v9);

  objc_msgSend(v8, "setAllowsEditing:", 0);
  v10 = objc_msgSend(v8, "navigationItem");
  sub_100858D4C();
  v11 = a2;
  v17.value.super.super.isa = (Class)a2;
  v17.is_nil = 0;
  isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v17, v18).super.super.isa;
  objc_msgSend(v10, "setRightBarButtonItem:", isa);

  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform38CRLiOSParticipantContactViewController_contactViewController] = v8;
  v13 = v8;

  v16.receiver = v6;
  v16.super_class = (Class)type metadata accessor for CRLiOSParticipantContactViewController();
  v14 = objc_msgSendSuper2(&v16, "initWithRootViewController:", v13);
  objc_msgSend(v14, "setModalInPresentation:", 0);

  return v14;
}

unint64_t sub_100858D4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E19A0;
  if (!qword_1013E19A0)
  {
    v1 = objc_opt_self(UIBarButtonItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E19A0);
  }
  return result;
}

uint64_t type metadata accessor for CRLiOSParticipantContactViewController()
{
  return objc_opt_self(_TtC8Freeform38CRLiOSParticipantContactViewController);
}

Swift::Void __swiftcall CRLiOSParticipantContactViewController.viewDidLayoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for CRLiOSParticipantContactViewController();
  objc_msgSendSuper2(&v1, "viewDidLayoutSubviews");
  if (qword_1013DD278 != -1)
    swift_once(&qword_1013DD278, sub_100858BA0);
  objc_msgSend(v0, "setPreferredContentSize:", xmmword_1013F5910);
}

id CRLiOSParticipantContactViewController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(a1, a2);
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata(v3, a2);
  return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

void CRLiOSParticipantContactViewController.init(navigationBarClass:toolbarClass:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSParticipantContactViewController", 47, "init(navigationBarClass:toolbarClass:)", 38, 0);
  __break(1u);
}

id CRLiOSParticipantContactViewController.__allocating_init(rootViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithRootViewController:", a1);

  return v3;
}

void CRLiOSParticipantContactViewController.init(rootViewController:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSParticipantContactViewController", 47, "init(rootViewController:)", 25, 0);
  __break(1u);
}

void CRLiOSParticipantContactViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSParticipantContactViewController", 47, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id CRLiOSParticipantContactViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSParticipantContactViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

ValueMetadata *type metadata accessor for CRLTipConnectionLinesOnSelection()
{
  return &type metadata for CRLTipConnectionLinesOnSelection;
}

uint64_t sub_100859130()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E6D60);
  sub_100501DE0(v0, qword_10147F8C0);
  sub_1004F2A1C(v0, (uint64_t)qword_10147F8C0);
  return Tips.Event.init<>(id:)(0xD000000000000023, 0x8000000100FD7A00);
}

uint64_t sub_100859194(uint64_t a1)
{
  return sub_100859250(a1, qword_10147F8D8, 0xD000000000000024, 0x8000000100FD7A30);
}

uint64_t sub_1008591B8(uint64_t a1)
{
  return sub_100859250(a1, qword_10147F8F0, 0x655341657661682BLL, 0xEF6E6F697463656CLL);
}

uint64_t sub_1008591E4(uint64_t a1)
{
  return sub_100859250(a1, qword_10147F908, 0xD000000000000010, 0x8000000100FB9630);
}

uint64_t sub_100859208(uint64_t a1)
{
  return sub_100859250(a1, qword_10147F920, 0xD000000000000013, 0x8000000100FB9610);
}

uint64_t sub_10085922C(uint64_t a1)
{
  return sub_100859250(a1, qword_10147F938, 0xD000000000000014, 0x8000000100FD7A60);
}

uint64_t sub_100859250(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipConnectionLinesOnSelection, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipConnectionLinesOnSelection, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1008592F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t KeyPath;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  __chkstk_darwin(v3);
  v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  v43 = v6;
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E6D80);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E6D88);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1004B804C(&qword_1013F5970);
  v38 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v9, v19);
  KeyPath = swift_getKeyPath(&unk_100F103C0);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v12, KeyPath, v9, v19);
  v21 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v21);
  v22 = swift_getKeyPath(&unk_100F103F8);
  v23 = sub_1004CBA30(&qword_1013F5978, &qword_1013E6D88, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v16, v22, v13, v23);
  v24 = swift_release(v22);
  (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v16, v13, v24);
  v44 = 1;
  static PredicateExpressions.build_Arg<A>(_:)(&v44, &type metadata for Int);
  v26 = v39;
  v25 = v40;
  v27 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v37, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v40);
  v28 = sub_1004B804C(&qword_1013F5980);
  v29 = v41;
  v41[3] = v28;
  v29[4] = sub_10085A054();
  sub_10050D1B0(v29);
  v30 = sub_1004CBA30(&qword_1013F5998, &qword_1013F5970, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v31 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v32 = v36;
  v33 = v42;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v18, v8, v27, v36, v42, v30, v31, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v18, v32);
}

uint64_t sub_100859648()
{
  return sub_10085989C();
}

uint64_t sub_100859670()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void *v19;

  v0 = sub_1004B804C(&qword_1013F5960);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Tips.IgnoresDisplayFrequency(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F5968);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.IgnoresDisplayFrequency.init(_:)(1, v11);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v8, v5, &protocol witness table for Tips.IgnoresDisplayFrequency);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = v5;
  v19 = &protocol witness table for Tips.IgnoresDisplayFrequency;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>, 1);
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)(v13, v9, OpaqueTypeConformance2);
  v18 = v9;
  v19 = (void *)OpaqueTypeConformance2;
  v15 = swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>, 1);
  v16 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)(v4, v0, v15);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v16;
}

uint64_t sub_100859818@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054F4F8();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_100859858()
{
  unint64_t result;

  result = qword_1013F5958;
  if (!qword_1013F5958)
  {
    result = swift_getWitnessTable(&unk_100F10324, &type metadata for CRLTipConnectionLinesOnSelection);
    atomic_store(result, (unint64_t *)&qword_1013F5958);
  }
  return result;
}

uint64_t sub_10085989C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_1008599A0()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_100859A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50[24];
  char v51[24];
  char v52[24];
  char v53[24];
  char v54[32];

  v0 = sub_1004B804C(&qword_1013E6D60);
  v48 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v49 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Tips.Rule(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD2A8 != -1)
    swift_once(&qword_1013DD2A8, sub_10085922C);
  v11 = sub_1004F2A1C(v2, (uint64_t)qword_10147F938);
  v12 = swift_beginAccess(v11, v54, 0, 0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v13(v6, v11, v2, v12);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v47 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  v15 = v7;
  if (qword_1013DD288 != -1)
    swift_once(&qword_1013DD288, sub_100859194);
  v16 = sub_1004F2A1C(v2, (uint64_t)qword_10147F8D8);
  v17 = swift_beginAccess(v16, v53, 0, 0);
  v13(v6, v16, v2, v17);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v46 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v15);
  if (qword_1013DD290 != -1)
    swift_once(&qword_1013DD290, sub_1008591B8);
  v18 = sub_1004F2A1C(v2, (uint64_t)qword_10147F8F0);
  v19 = swift_beginAccess(v18, v52, 0, 0);
  v13(v6, v18, v2, v19);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v20 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v15);
  if (qword_1013DD298 != -1)
    swift_once(&qword_1013DD298, sub_1008591E4);
  v21 = sub_1004F2A1C(v2, (uint64_t)qword_10147F908);
  v22 = swift_beginAccess(v21, v51, 0, 0);
  v13(v6, v21, v2, v22);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v23 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v15);
  v24 = v15;
  if (qword_1013DD2A0 != -1)
    swift_once(&qword_1013DD2A0, sub_100859208);
  v25 = sub_1004F2A1C(v2, (uint64_t)qword_10147F920);
  v26 = swift_beginAccess(v25, v50, 0, 0);
  v13(v6, v25, v2, v26);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v27 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v24);
  if (qword_1013DD280 != -1)
    swift_once(&qword_1013DD280, sub_100859130);
  v28 = sub_1004F2A1C(v0, (uint64_t)qword_10147F8C0);
  v29 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v49, v28, v0);
  v30 = type metadata accessor for Tips.EmptyDonation(0);
  v31 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v32 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v29, sub_1008592F0, 0, v30, v31, v32);
  v33 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v24);
  v34 = static Tips.RuleBuilder.buildPartialBlock(first:)(v47);
  v35 = swift_bridgeObjectRelease();
  v36 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v34, v46, v35);
  swift_bridgeObjectRelease();
  v37 = swift_bridgeObjectRelease();
  v38 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v36, v20, v37);
  swift_bridgeObjectRelease();
  v39 = swift_bridgeObjectRelease();
  v40 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v38, v23, v39);
  swift_bridgeObjectRelease();
  v41 = swift_bridgeObjectRelease();
  v42 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v40, v27, v41);
  swift_bridgeObjectRelease();
  v43 = swift_bridgeObjectRelease();
  v44 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v42, v33, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v44;
}

unint64_t sub_10085A054()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F5988;
  if (!qword_1013F5988)
  {
    v1 = sub_1004CB6A4(&qword_1013F5980);
    sub_10085A0D8();
    sub_1004CBA30(&qword_1013E6DE0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F5988);
  }
  return result;
}

unint64_t sub_10085A0D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F5990;
  if (!qword_1013F5990)
  {
    v1 = sub_1004CB6A4(&qword_1013F5970);
    sub_1005EA664();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.KeyPath<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F5990);
  }
  return result;
}

id sub_10085A270(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for CRLSceneCaptureSnapshotLayer();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_10085A2B8(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  const char *v12;
  id v13;
  objc_super v14;

  v14.receiver = a1;
  v14.super_class = (Class)type metadata accessor for CRLSceneCaptureSnapshotLayer();
  v12 = *a7;
  v13 = v14.receiver;
  objc_msgSendSuper2(&v14, v12, a2, a3, a4, a5);
  objc_msgSend(v13, "setNeedsDisplay", v14.receiver, v14.super_class);

}

void sub_10085A374(void *a1, double a2, double a3, uint64_t a4, const char **a5)
{
  const char *v8;
  id v9;
  objc_super v10;

  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for CRLSceneCaptureSnapshotLayer();
  v8 = *a5;
  v9 = v10.receiver;
  objc_msgSendSuper2(&v10, v8, a2, a3);
  objc_msgSend(v9, "setNeedsDisplay", v10.receiver, v10.super_class);

}

id sub_10085A468()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSceneCaptureSnapshotLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSceneCaptureSnapshotLayer()
{
  return objc_opt_self(_TtC8Freeform28CRLSceneCaptureSnapshotLayer);
}

id sub_10085A4C8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  objc_class *ObjectType;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  objc_super v14;
  _BYTE v15[24];
  _BYTE v16[40];

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v9 = (uint64_t)&v4[OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardDataManaging];
  *(_OWORD *)v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_chunkSizes] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_dataCache] = _swiftEmptyDictionarySingleton;
  v4[OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_hasReachedLastChunk] = 0;
  sub_1004E90B0((uint64_t)a1, (uint64_t)v16);
  swift_beginAccess(v9, v15, 33, 0);
  v10 = v4;
  sub_10085A93C((uint64_t)v16, v9);
  swift_endAccess(v15);
  v11 = &v10[OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardType];
  *(_QWORD *)v11 = a2;
  *((_QWORD *)v11 + 1) = a3;

  v14.receiver = v10;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, "init");
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v12;
}

uint64_t sub_10085A5D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  void *object;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardType);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardType + 8);
  if (a1 < 1)
  {
    swift_bridgeObjectRetain(v2);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    v4._countAndFlagsBits = 46;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v5._object;
    String.append(_:)(v5);
    swift_bridgeObjectRelease(object);
  }
  return v3;
}

uint64_t type metadata accessor for CRLPasteboardReadChannel()
{
  return objc_opt_self(_TtC8Freeform24CRLPasteboardReadChannel);
}

uint64_t sub_10085A93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F5A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10085A984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t *v50;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  Class isa;
  id v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  Swift::String v68;
  Swift::String v69;
  __n128 v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char v93[24];
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  char v97[24];
  _QWORD v98[3];
  uint64_t v99;
  uint64_t v100;

  v86 = a4;
  v88 = a1;
  v6 = type metadata accessor for DispatchData(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardDataManaging;
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardDataManaging, v97, 0, 0);
  sub_10085B500(v10, (uint64_t)&v94);
  if (!v95)
  {
    v35 = sub_10085B548((uint64_t)&v94);
LABEL_21:
    v36 = static DispatchData.empty.getter(v35);
    v37 = (void *)DispatchData._bridgeToObjectiveC()(v36);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    goto LABEL_55;
  }
  sub_1004DB728(&v94, (uint64_t)v98);
  if (a2 <= 0)
  {
    v35 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v98);
    goto LABEL_21;
  }
  v80 = v7;
  v81 = v9;
  v82 = v6;
  v83 = a3;
  v89 = a2;
  v11 = v88;
  if (v88 < 0)
  {
    v16 = 0;
    v18 = 0;
    v33 = 0;
    v15 = 0;
    v19 = 0xF000000000000000;
    goto LABEL_24;
  }
  v12 = a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_chunkSizes;
  v13 = OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_hasReachedLastChunk;
  v87 = (_QWORD *)(a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardType);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_chunkSizes, v93, 0, 0);
  v14 = (_QWORD *)v13;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0xF000000000000000;
  v85 = v14;
  while (1)
  {
    if (v15 >= *(_QWORD *)(*(_QWORD *)v12 + 16))
    {
      v20 = *((unsigned __int8 *)v14 + a3);
      if (v20 != 1)
      {
        v21 = (uint64_t)v18;
        v22 = v99;
        v23 = v100;
        sub_1004BB5A4(v98, v99);
        v24 = *v87;
        v25 = v87[1];
        if (v15)
        {
          *(_QWORD *)&v94 = *v87;
          *((_QWORD *)&v94 + 1) = v25;
          swift_bridgeObjectRetain(v25);
          v26._countAndFlagsBits = 46;
          v26._object = (void *)0xE100000000000000;
          String.append(_:)(v26);
          v91 = v15;
          v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          String.append(_:)(v27);
          v28 = swift_bridgeObjectRelease();
          v25 = *((_QWORD *)&v94 + 1);
          v24 = v94;
        }
        else
        {
          v28 = swift_bridgeObjectRetain(v87[1]);
        }
        v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v23 + 8))(v24, v25, v22, v23, v28);
        v31 = v30;
        sub_1004BE2FC(v21, v19);
        swift_bridgeObjectRelease();
        if (v31 >> 60 != 15)
          __asm { BR              X9 }
        v16 = 0;
        LOBYTE(v20) = 1;
        v32 = v83;
        v14 = v85;
        *((_BYTE *)v85 + v83) = 1;
        v18 = (_QWORD *)v29;
        v19 = v31;
        a3 = v32;
        a2 = v89;
        v11 = v88;
      }
    }
    else
    {
      LOBYTE(v20) = 0;
      v16 = *(_QWORD *)(*(_QWORD *)v12 + 8 * v15 + 32);
    }
    v33 = v17 + v16;
    if (__OFADD__(v17, v16))
    {
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v33 > v11)
      break;
    v34 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_57;
    ++v15;
    v17 += v16;
    if ((v20 & 1) != 0)
    {
      v15 = v34;
      goto LABEL_24;
    }
  }
  v33 = v17;
LABEL_24:
  if (__OFADD__(v33, v16))
  {
    __break(1u);
    JUMPOUT(0x10085B3E0);
  }
  if (v33 + v16 <= v11)
  {
    sub_1004BE2FC((uint64_t)v18, v19);
    goto LABEL_54;
  }
  v87 = v18;
  if (v19 >> 60 != 15)
  {
    sub_1004E90B0((uint64_t)v98, (uint64_t)&v94);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v94);
    v46 = v18;
    v44 = v19;
LABEL_34:
    v50 = (unint64_t *)(a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_dataCache);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_dataCache, &v91, 33, 0);
    sub_10057939C((uint64_t)v87, v19);
    sub_1004BE310((uint64_t)v46, v44);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v50);
    v90 = *v50;
    *v50 = 0x8000000000000000;
    v45 = a3;
    sub_1008292EC((uint64_t)v46, v44, v15, isUniquelyReferenced_nonNull_native);
    *v50 = v90;
    swift_bridgeObjectRelease();
    swift_endAccess(&v91);
    v87 = v46;
    sub_1004BBBC8((uint64_t)v46, v44);
LABEL_35:
    v52 = OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_pasteboardType;
    v84 = v45 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_chunkSizes;
    swift_beginAccess(v45 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_chunkSizes, &v94, 0, 0);
    v53 = v11 - v33;
    v54 = v87;
    if (!__OFSUB__(v11, v33))
    {
      v85 = (_QWORD *)(v83 + v52);
      if (!__OFSUB__(v16, v53))
      {
        if (v16 - v53 >= a2)
          v55 = a2;
        else
          v55 = v16 - v53;
        if (!__OFADD__(v53, v55))
        {
          if (v53 + v55 >= v53)
          {
            sub_1004BE310((uint64_t)v87, v44);
            v87 = v54;
            v89 = v44;
            v56 = Data.subdata(in:)(v11 - v33, v53 + v55, v54, v44);
            v58 = v57;
            isa = Data._bridgeToObjectiveC()().super.isa;
            sub_1004BBBC8(v56, v58);
            v60 = -[objc_class crl_dispatchData](isa, "crl_dispatchData");

            (*(void (**)(uint64_t, _QWORD, id, _QWORD))(v86 + 16))(v86, 0, v60, 0);
            v61 = __OFADD__(v11, v55);
            v62 = v11 + v55;
            if (!v61)
            {
              v61 = __OFSUB__(a2, v55);
              v63 = a2 - v55;
              if (!v61)
              {
                if (v63 < 1)
                {
                  v74 = v87;
                  v75 = v89;
                  sub_1004BE2FC((uint64_t)v87, v89);

                  sub_1004BBBC8((uint64_t)v74, v75);
                  goto LABEL_54;
                }
                v88 = v62;
                if (!__OFADD__(v15, 1))
                {
                  if (!__OFADD__(v33, v16))
                  {
                    v65 = v99;
                    v64 = v100;
                    sub_1004BB5A4(v98, v99);
                    v66 = *v85;
                    v67 = v85[1];
                    if ((uint64_t)(v15 + 1) <= 0)
                    {
                      v70 = swift_bridgeObjectRetain(v85[1]);
                    }
                    else
                    {
                      v91 = *v85;
                      v92 = v67;
                      swift_bridgeObjectRetain(v67);
                      v68._countAndFlagsBits = 46;
                      v68._object = (void *)0xE100000000000000;
                      String.append(_:)(v68);
                      v90 = v15 + 1;
                      v69._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
                      String.append(_:)(v69);
                      v70 = swift_bridgeObjectRelease();
                      v66 = v91;
                      v67 = v92;
                    }
                    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t, __n128))(v64 + 8))(v66, v67, v65, v64, v70);
                    v72 = v71;
                    v73 = v87;
                    sub_1004BE2FC((uint64_t)v87, v89);
                    swift_bridgeObjectRelease();
                    if (v72 >> 60 != 15)
                      __asm { BR              X9 }

                    sub_1004BBBC8((uint64_t)v73, v89);
                    *(_BYTE *)(v83 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_hasReachedLastChunk) = 1;
                    goto LABEL_54;
                  }
LABEL_65:
                  __break(1u);
                  JUMPOUT(0x10085B3D4);
                }
LABEL_64:
                __break(1u);
                goto LABEL_65;
              }
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
LABEL_62:
            __break(1u);
            goto LABEL_63;
          }
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v38 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_dataCache);
  swift_beginAccess(a3 + OBJC_IVAR____TtC8Freeform24CRLPasteboardReadChannel_dataCache, &v94, 32, 0);
  v39 = *v38;
  if (*(_QWORD *)(*v38 + 16))
  {
    v40 = sub_100842E60(v15);
    if ((v41 & 1) != 0)
    {
      v42 = *(_QWORD *)(v39 + 56) + 16 * v40;
      v43 = *(_QWORD **)v42;
      v44 = *(_QWORD *)(v42 + 8);
      swift_endAccess(&v94);
      v87 = v43;
      sub_1004BE310((uint64_t)v43, v44);
      v45 = v83;
      goto LABEL_35;
    }
  }
  swift_endAccess(&v94);
  sub_1004E90B0((uint64_t)v98, (uint64_t)&v94);
  v47 = v96;
  sub_1004BB5A4(&v94, v95);
  v48 = sub_10085A5D4(v15);
  v46 = (_QWORD *)(*(uint64_t (**)(uint64_t))(v47 + 8))(v48);
  v44 = v49;
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v94);
  if (v44 >> 60 != 15)
  {
    sub_1004BE310((uint64_t)v46, v44);
    a3 = v83;
    a2 = v89;
    v11 = v88;
    goto LABEL_34;
  }
LABEL_54:
  v76 = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v98);
  v77 = v81;
  v78 = static DispatchData.empty.getter(v76);
  v37 = (void *)DispatchData._bridgeToObjectiveC()(v78);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v82);
LABEL_55:
  (*(void (**)(uint64_t, uint64_t, void *, _QWORD))(v86 + 16))(v86, 1, v37, 0);

}

uint64_t sub_10085B500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F5A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10085B548(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F5A80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CRLPresentedPopoverTextEditingBehaviorProvidingSwiftHelper()
{
  return objc_opt_self(_TtC8Freeform58CRLPresentedPopoverTextEditingBehaviorProvidingSwiftHelper);
}

uint64_t sub_10085B61C(void *a1)
{
  unint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];
  uint64_t v10;
  void *v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  if (!a1)
    return 2;
  v11 = a1;
  v2 = sub_10085B6E4();
  v3 = a1;
  v4 = sub_1004B804C(&qword_1013F5AB8);
  if ((swift_dynamicCast(v9, &v11, v2, v4, 6) & 1) == 0)
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_10085B720((uint64_t)v9);
    return 2;
  }
  sub_1004DB728(v9, (uint64_t)v12);
  v5 = v13;
  v6 = v14;
  sub_1004BB5A4(v12, v13);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v12);
  return v7;
}

unint64_t sub_10085B6E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F6620;
  if (!qword_1013F6620)
  {
    v1 = objc_opt_self(UIViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F6620);
  }
  return result;
}

uint64_t sub_10085B720(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F5AC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10085B760(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  _BYTE *v6;
  char *v13;
  id v14;
  id v15;
  id v16;
  double v17;
  double v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  char *v26;
  uint64_t v27;
  id v28;
  _QWORD v30[3];
  uint64_t ObjectType;
  objc_super v32;

  v6[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_wantsLinkViewSublayerTransformAdjustedHitTestFrame] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_backgroundLayer] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_lineWidth] = 0x4000000000000000;
  v32.receiver = v6;
  v32.super_class = (Class)type metadata accessor for CRLIndeterminateRoundSpinnerView();
  v13 = (char *)objc_msgSendSuper2(&v32, "initWithFrame:", a3, a4, a5, a6);
  v14 = objc_msgSend(v13, "layer");
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v16 = objc_msgSend(v15, "CGColor");

  objc_msgSend(v14, "setBackgroundColor:", v16);
  objc_msgSend(v13, "bounds");
  v19 = sub_10085C3E0(v17, v18);
  v20 = objc_msgSend(v13, "layer");
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "addSublayer:", v19);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"addBackgroundLayer()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2, 106, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addBackgroundLayer()", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2u, 106, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v22 = *(void **)&v13[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_backgroundLayer];
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_backgroundLayer] = v19;

  v23 = sub_10085BE5C();
  v24 = *(void **)&v13[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer];
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer] = v23;

  ObjectType = swift_getObjectType(a1);
  v30[0] = a1;
  v25 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v26 = v13;
  swift_unknownObjectRetain(a1);
  v27 = _bridgeAnythingToObjectiveC<A>(_:)(v30, ObjectType);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v30);
  v28 = objc_msgSend(v25, "initWithTarget:action:", v27, a2);
  swift_unknownObjectRelease(v27);
  objc_msgSend(v26, "addGestureRecognizer:", v28);

  swift_unknownObjectRelease(a1);
  return v26;
}

id sub_10085BAE0(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  id v8;
  objc_super v9;
  objc_super v10;
  CGPoint v11;
  CGRect v12;

  if (*((_BYTE *)v3
       + OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_wantsLinkViewSublayerTransformAdjustedHitTestFrame) == 1)
  {
    if (!objc_msgSend(v3, "isHidden"))
    {
      v12.origin.x = sub_10085BC18();
      v11.x = a2;
      v11.y = a3;
      if (CGRectContainsPoint(v12, v11))
        return v3;
    }
    v9.receiver = v3;
    v9.super_class = (Class)type metadata accessor for CRLIndeterminateRoundSpinnerView();
    v8 = objc_msgSendSuper2(&v9, "hitTest:withEvent:", a1, a2, a3);
  }
  else
  {
    v10.receiver = v3;
    v10.super_class = (Class)type metadata accessor for CRLIndeterminateRoundSpinnerView();
    v8 = objc_msgSendSuper2(&v10, "hitTest:withEvent:", a1, a2, a3);
  }
  return v8;
}

double sub_10085BC18()
{
  _BYTE *v0;
  id v1;
  void *v2;
  CGFloat v3;
  double v4;
  double v5;
  CGRect v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  if ((v0[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_wantsLinkViewSublayerTransformAdjustedHitTestFrame] & 1) == 0)
  {
  }
  v1 = objc_msgSend(v0, "superview");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "frame");
    v3 = CGRectGetWidth(v7) * 0.5;
    objc_msgSend(v0, "frame");
    v4 = v3 - CGRectGetWidth(v8) * 0.5;
    objc_msgSend(v2, "frame");
    CGRectGetHeight(v9);
    objc_msgSend(v0, "frame");
    CGRectGetHeight(v10);
    objc_msgSend(v0, "frame");
    CGRectGetWidth(v11);
    objc_msgSend(v0, "frame");
    CGRectGetHeight(v12);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"adjustedFrame", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2, 78, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"adjustedFrame", 13, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2u, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    objc_msgSend(v0, "frame");
    return v5;
  }
  return v4;
}

id sub_10085BE5C()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  id v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;

  v1 = objc_msgSend(v0, "layer");
  if (v1)
  {
    v2 = v1;
    v3 = sub_10085C1E4();
    v5 = sub_10085C078(v3, v4);
    v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_backgroundLayer];
    if (v6)
      objc_msgSend(v6, "addSublayer:", v5);
    objc_msgSend(v5, "setAnchorPoint:", 0.5, 0.5);
    v7 = v5;
    objc_msgSend(v2, "bounds");
    objc_msgSend(v7, "setPosition:", sub_100061400(v8, v9, v10, v11));

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"addSpinnerLayer()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2, 91, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSpinnerLayer()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2u, 91, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  return v7;
}

void sub_10085BFB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v1 = OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_spinnerLayer);
  if (v2
    || (v3 = sub_10085BE5C(),
        v4 = *(void **)(v0 + v1),
        *(_QWORD *)(v0 + v1) = v3,
        v4,
        (v2 = *(void **)(v0 + v1)) != 0))
  {
    objc_msgSend(v2, "removeAllAnimations");
    v5 = *(void **)(v0 + v1);
    if (v5)
    {
      v6 = v5;
      v7 = sub_10085C534();
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "addAnimation:forKey:", v7, v8);

    }
  }
}

id sub_10085C078(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  CGMutablePathRef Mutable;
  double v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  double v12;
  id v13;
  id v14;
  _QWORD v16[6];

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  objc_msgSend(v6, "setFrame:", 0.0, 0.0, a1, a2);
  Mutable = CGPathCreateMutable();
  v8 = sub_10005FDDC();
  v12 = sub_100061400(v8, v9, v10, v11);
  v16[0] = 0x3FF0000000000000;
  v16[1] = 0;
  v16[2] = 0;
  v16[3] = 0x3FF0000000000000;
  v16[4] = 0;
  v16[5] = 0;
  CGMutablePathRef.addArc(center:radius:startAngle:endAngle:clockwise:transform:)(0, v16, v12);
  objc_msgSend(v6, "setPath:", Mutable);

  objc_msgSend(v6, "setLineWidth:", *(double *)(v3 + OBJC_IVAR____TtC8Freeform32CRLIndeterminateRoundSpinnerView_lineWidth));
  v13 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithWhite:alpha:", 0.3, 1.0);
  v14 = objc_msgSend(v13, "CGColor");

  objc_msgSend(v6, "setStrokeColor:", v14);
  objc_msgSend(v6, "setFillColor:", 0);
  return v6;
}

double sub_10085C1E4()
{
  void *v0;
  double v1;
  double v2;
  CGRect v4;
  CGRect v5;
  CGRect v6;
  CGRect v7;

  objc_msgSend(v0, "bounds");
  if (CGRectGetWidth(v4) <= 15.0 || (objc_msgSend(v0, "bounds"), CGRectGetHeight(v5) <= 15.0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"spinnerSize", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2, 183, "Spinner is too small!", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"spinnerSize", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLIndeterminateRoundSpinnerView.swift", 108, 2u, 183, (uint64_t)"Spinner is too small!", 21, 2u);
    objc_msgSend(v0, "bounds");
    return v2;
  }
  else
  {
    objc_msgSend(v0, "bounds");
    v1 = CGRectGetWidth(v6) + -15.0;
    objc_msgSend(v0, "bounds");
    CGRectGetHeight(v7);
  }
  return v1;
}

id sub_10085C358()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLIndeterminateRoundSpinnerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLIndeterminateRoundSpinnerView()
{
  return objc_opt_self(_TtC8Freeform32CRLIndeterminateRoundSpinnerView);
}

id sub_10085C3E0(double a1, double a2)
{
  id v4;
  CGMutablePathRef Mutable;
  double v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  double v10;
  id v11;
  id v12;
  _QWORD v14[6];

  v4 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  objc_msgSend(v4, "setFrame:", 0.0, 0.0, a1, a2);
  Mutable = CGPathCreateMutable();
  v6 = sub_10005FDDC();
  v10 = sub_100061400(v6, v7, v8, v9);
  v14[0] = 0x3FF0000000000000;
  v14[1] = 0;
  v14[2] = 0;
  v14[3] = 0x3FF0000000000000;
  v14[4] = 0;
  v14[5] = 0;
  CGMutablePathRef.addArc(center:radius:startAngle:endAngle:clockwise:transform:)(0, v14, v10);
  objc_msgSend(v4, "setPath:", Mutable);

  objc_msgSend(v4, "setLineWidth:", 0.0);
  objc_msgSend(v4, "setStrokeColor:", 0);
  v11 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithWhite:alpha:", 1.0, 0.75);
  v12 = objc_msgSend(v11, "CGColor");

  objc_msgSend(v4, "setFillColor:", v12);
  return v4;
}

id sub_10085C534()
{
  NSString v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  Class isa;
  Class v6;
  double v7;
  id v8;
  CFTimeInterval v9;
  double v10;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v0);

  v2 = (void *)objc_opt_self(CAValueFunction);
  v3 = v1;
  v4 = objc_msgSend(v2, "functionWithName:", kCAValueFunctionRotateZ);
  objc_msgSend(v3, "setValueFunction:", v4);

  objc_msgSend(v3, "setDuration:", 2.0);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v3, "setFromValue:", isa);

  v6 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v3, "setToValue:", v6);

  LODWORD(v7) = 2139095040;
  objc_msgSend(v3, "setRepeatCount:", v7);
  v8 = v3;
  v9 = CACurrentMediaTime();
  v10 = sub_1003C65C8(v9 * 0.5);
  objc_msgSend(v8, "setTimeOffset:", v10 + v10);

  return v8;
}

_QWORD *sub_10085C6AC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  __n128 v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v10 = v8;
  v31 = a6;
  v32 = a8;
  v34 = a5;
  v30 = a4;
  v33 = *v8;
  v15 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for URL(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  v20 = objc_allocWithZone((Class)CRLZipFileWriter);
  v21 = sub_10085D898((uint64_t)v17);
  if (v9)
  {

    swift_bridgeObjectRelease(a7);
    v22 = swift_bridgeObjectRelease(v34);
    (*(void (**)(uint64_t, uint64_t, __n128))(v19 + 8))(a1, v18, v22);
    swift_deallocPartialClassInstance(v10, v33, 48, 7);
  }
  else
  {
    v23 = v21;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
    v24 = type metadata accessor for CRLFileWriteAssistant.WriteCoordinatorChannelProvider();
    v25 = (_QWORD *)swift_allocObject(v24, 56, 7);
    v26 = v30;
    v25[2] = v23;
    v25[3] = v26;
    v27 = v31;
    v25[4] = v34;
    v25[5] = v27;
    v25[6] = a7;
    v10[2] = v25;
    v10[3] = a2;
    v28 = v32;
    v10[4] = a3;
    v10[5] = v28;
  }
  return v10;
}

uint64_t sub_10085C848(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[34] = a2;
  v4[35] = v3;
  v4[33] = a1;
  v5 = type metadata accessor for DispatchQoS.QoSClass(0, a3);
  v4[36] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[37] = v6;
  v4[38] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10085C8AC, 0, 0);
}

uint64_t sub_10085C8AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  __int128 v13;

  v1 = *(_QWORD **)(v0 + 280);
  if ((v1[5] & 1) != 0)
    v2 = 7;
  else
    v2 = 3;
  v3 = v1[2];
  *(_QWORD *)(v0 + 312) = v3;
  v5 = (void *)v1[3];
  v4 = (void *)v1[4];
  *(_QWORD *)(v0 + 208) = type metadata accessor for CRLFileWriteAssistant.WriteCoordinatorChannelProvider();
  *(_QWORD *)(v0 + 216) = &off_1012824C0;
  *(_QWORD *)(v0 + 184) = v3;
  v6 = type metadata accessor for CRLSerializableObjectWriteCoordinator();
  v13 = *(_OWORD *)(v0 + 264);
  inited = swift_initStackObject(v6, v0 + 80);
  *(_QWORD *)(v0 + 320) = inited;
  *(_QWORD *)(inited + 96) = 0;
  *(_OWORD *)(inited + 16) = v13;
  sub_1004DB728((__int128 *)(v0 + 184), inited + 32);
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = v4;
  *(_QWORD *)(inited + 88) = v2;
  v8 = dword_1013F5FA4;
  swift_unknownObjectRetain(v13);
  swift_retain(v3);
  v9 = v5;
  v10 = v4;
  v11 = (_QWORD *)swift_task_alloc(v8);
  *(_QWORD *)(v0 + 328) = v11;
  *v11 = v0;
  v11[1] = sub_10085C9B0;
  return sub_100862AE4();
}

uint64_t sub_10085C9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 328);
  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10085CBC8;
  else
    v3 = sub_10085CA14;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10085CA14()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = v0 + 2;
  v3 = v1[38];
  v4 = v1[36];
  v5 = v1[37];
  v6 = *(void **)(v1[39] + 16);
  v1[43] = v6;
  sub_100503E34();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for DispatchQoS.QoSClass.default(_:), v4);
  v7 = v6;
  v8 = static OS_dispatch_queue.global(qos:)(v3);
  v1[44] = v8;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v1[2] = v1;
  v1[3] = sub_10085CB14;
  v9 = swift_continuation_init(v2, 1);
  v1[28] = _NSConcreteStackBlock;
  v1 += 28;
  v1[1] = 0x40000000;
  v1[2] = sub_10085CC64;
  v1[3] = &unk_1012824E0;
  v1[4] = v9;
  objc_msgSend(v7, "closeWithQueue:completion:", v8, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_10085CB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 360) = v1;
  if (v1)
    v2 = sub_10085CC08;
  else
    v2 = sub_10085CB74;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10085CB74()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v0 + 344);
  v1 = *(void **)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 320));

  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10085CBC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 320));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10085CC08()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 352);
  v2 = *(void **)(v0 + 344);
  swift_willThrow();

  v3 = *(_QWORD *)(v0 + 304);
  swift_release(*(_QWORD *)(v0 + 320));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10085CC64(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v4 = sub_1004B804C(&qword_1013E0210);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

id sub_10085CCD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  NSString v6;
  Class isa;
  id result;
  uint64_t v9;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 16);
  v6 = String._bridgeToObjectiveC()();
  Date.init()();
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "beginEntryWithName:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:", v6, 0, isa, 0, 0, 0);

  result = objc_msgSend(objc_allocWithZone((Class)CRLZipFileWriteChannel), "initWithArchiveWriter:", v5);
  if (!result)
    __break(1u);
  return result;
}

id sub_10085CDD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  NSString v6;
  Class isa;
  id result;
  uint64_t v9;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 16);
  v6 = String._bridgeToObjectiveC()();
  Date.init()();
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v5, "beginEntryWithName:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:", v6, 0, isa, 0, 0, 0);

  result = objc_msgSend(objc_allocWithZone((Class)CRLZipFileWriteChannel), "initWithArchiveWriter:", v5);
  if (!result)
    __break(1u);
  return result;
}

id sub_10085CED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSString v5;
  NSString v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Class isa;
  id result;
  uint64_t v17;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v6, "pathExtension");

  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  v10 = objc_msgSend(v5, "stringByAppendingPathComponent:", v7);

  if (!v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v13 = v12;
    v10 = String._bridgeToObjectiveC()();
    v11 = swift_bridgeObjectRelease(v13);
  }
  v14 = *(void **)(v0 + 16);
  Date.init()(v11);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v14, "beginEntryWithName:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:", v10, 0, isa, 0, 0, 0);

  result = objc_msgSend(objc_allocWithZone((Class)CRLZipFileWriteChannel), "initWithArchiveWriter:", v14);
  if (!result)
    __break(1u);
  return result;
}

id sub_10085D07C()
{
  return sub_10085CCD8();
}

id sub_10085D09C()
{
  return sub_10085CDD4();
}

id sub_10085D0BC()
{
  return sub_10085CED0();
}

uint64_t sub_10085D0DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLFileWriteAssistant()
{
  return objc_opt_self(_TtC8Freeform21CRLFileWriteAssistant);
}

uint64_t type metadata accessor for CRLFileWriteAssistant.WriteCoordinatorChannelProvider()
{
  return objc_opt_self(_TtCC8Freeform21CRLFileWriteAssistantP33_754F9EE3D34917A56AF7E37C87B5B9BE31WriteCoordinatorChannelProvider);
}

uint64_t sub_10085D150(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for URL(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10085D1B0, 0, 0);
}

uint64_t sub_10085D1B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t **v7;
  __n128 v8;

  v1 = v0[6];
  v2 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[5] + 16))(v1, v2 + OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_url, v0[4]);
  v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_store);
  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_context);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_options);
  v6 = type metadata accessor for CRLFileWriteAssistant();
  v0[7] = swift_allocObject(v6, 48, 7);
  sub_10085C6AC(v1, v3, v4, 0x6472616F62, 0xE500000000000000, 0x617461646174656DLL, 0xE800000000000000, v5);
  v7 = (uint64_t **)swift_task_alloc(dword_1013F5D14);
  v0[8] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = (uint64_t *)sub_10085D2E4;
  return sub_10085C848(v0[2], (uint64_t)&off_1012942B0, v8);
}

uint64_t sub_10085D2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10085D384;
  else
    v3 = sub_10085D348;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10085D348()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10085D384()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10085D4F0(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = dword_1013F5D0C;
  v7 = a1;
  a3;
  v8 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_10085D56C;
  return sub_10085D150((uint64_t)v7);
}

uint64_t sub_10085D56C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD *)(*v1 + 40);
  v4 = *(void **)(*v1 + 16);
  v3 = *(void **)(*v1 + 24);
  v5 = *v1;
  swift_task_dealloc(v2);

  v6 = *(_QWORD *)(v5 + 32);
  if (v0)
  {
    v7 = (void *)_convertErrorToNSError(_:)(v0);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);

  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v6 + 16))(*(_QWORD *)(v5 + 32), 0);
  }
  _Block_release(*(const void **)(v5 + 32));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_10085D69C()
{
  return type metadata accessor for CRLBoardFileWriteAssistant(0);
}

uint64_t type metadata accessor for CRLBoardFileWriteAssistant(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F5CD8;
  if (!qword_1013F5CD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardFileWriteAssistant);
  return result;
}

uint64_t sub_10085D6E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileWriteAssistantOptions()
{
  return &type metadata for CRLFileWriteAssistantOptions;
}

unint64_t sub_10085D77C()
{
  unint64_t result;

  result = qword_1013F5CE8;
  if (!qword_1013F5CE8)
  {
    result = swift_getWitnessTable(&unk_100F10600, &type metadata for CRLFileWriteAssistantOptions);
    atomic_store(result, (unint64_t *)&qword_1013F5CE8);
  }
  return result;
}

unint64_t sub_10085D7C4()
{
  unint64_t result;

  result = qword_1013F5CF0;
  if (!qword_1013F5CF0)
  {
    result = swift_getWitnessTable(&unk_100F105D0, &type metadata for CRLFileWriteAssistantOptions);
    atomic_store(result, (unint64_t *)&qword_1013F5CF0);
  }
  return result;
}

unint64_t sub_10085D80C()
{
  unint64_t result;

  result = qword_1013F5CF8;
  if (!qword_1013F5CF8)
  {
    result = swift_getWitnessTable(&unk_100F10628, &type metadata for CRLFileWriteAssistantOptions);
    atomic_store(result, (unint64_t *)&qword_1013F5CF8);
  }
  return result;
}

unint64_t sub_10085D854()
{
  unint64_t result;

  result = qword_1013F5D00;
  if (!qword_1013F5D00)
  {
    result = swift_getWitnessTable(&unk_100F10660, &type metadata for CRLFileWriteAssistantOptions);
    atomic_store(result, &qword_1013F5D00);
  }
  return result;
}

id sub_10085D898(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSURL *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v14;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4) != 1)
  {
    URL._bridgeToObjectiveC()(v6);
    v7 = v8;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  v14 = 0;
  v9 = objc_msgSend(v2, "initWithURL:error:", v7, &v14);

  v10 = v14;
  if (v9)
  {
    v11 = v14;
  }
  else
  {
    v12 = v14;
    _convertNSErrorToError(_:)(v10);

    swift_willThrow();
  }
  return v9;
}

uint64_t sub_10085D9A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10085D9D8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1013F5D1C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CF80C;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1013F5D18 + dword_1013F5D18))(v2, v3, v4);
}

uint64_t sub_10085DA4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10085DA8C + 4 * byte_100F10770[a1]))(0x6564496472616F62, 0xEF7265696669746ELL);
}

unint64_t sub_10085DA8C()
{
  return 0xD000000000000012;
}

unint64_t sub_10085DAA8()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_10085DAE0()
{
  return 0x6174614474647263;
}

uint64_t sub_10085DAF8()
{
  return 0x436C616974726170;
}

uint64_t sub_10085DB1C()
{
  unsigned __int8 *v0;

  return sub_10085DA4C(*v0);
}

uint64_t sub_10085DB24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10085E82C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10085DB48(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10085E644();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10085DB70(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10085E644();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10085DB98()
{
  uint64_t v0;

  sub_1004BB670(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10085DBF0()
{
  return type metadata accessor for CRLBoardRealTimeChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardRealTimeChangeRecord(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F5D60;
  if (!qword_1013F5D60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardRealTimeChangeRecord);
  return result;
}

uint64_t sub_10085DC34(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = "\t";
    v4[3] = "\t";
    v4[4] = &unk_100F107B8;
    v4[5] = &unk_100F107B8;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_10085DCC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  char v23;
  __int128 v24;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F5E28);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_10085E644();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLBoardRealTimeChangeRecord.CodingKeys, &type metadata for CRLBoardRealTimeChangeRecord.CodingKeys, v11, v9, v10);
  v12 = v3 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier;
  LOBYTE(v24) = 0;
  v13 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v14 = sub_1004B7878(&qword_1013DF560, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02410);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v12, &v24, v5, v13, v14);
  if (!v2)
  {
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_minRequiredVersion);
    LOBYTE(v24) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v24, v5);
    v16 = *(_QWORD *)(v3
                    + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
    v17 = *(unsigned __int8 *)(v3
                             + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                             + 8);
    LOBYTE(v24) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v24, v5);
    v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
    v19 = *(unsigned __int8 *)(v3
                             + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                             + 8);
    LOBYTE(v24) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v18, v19, &v24, v5);
    v24 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData);
    v23 = 4;
    v20 = sub_100587C2C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v24, &v23, v5, &type metadata for Data, v20);
    v24 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData);
    v23 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v24, &v23, v5, &type metadata for Data, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t *sub_10085DF1C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;

  v3 = *v1;
  v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v4);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1004B804C(&qword_1013F5E18);
  v6 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v9 = a1[4];
  sub_1004BB5A4(a1, v10);
  v11 = sub_10085E644();
  v29 = v8;
  v12 = v31;
  v13 = v9;
  v14 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLBoardRealTimeChangeRecord.CodingKeys, &type metadata for CRLBoardRealTimeChangeRecord.CodingKeys, v11, v10, v13);
  if (v12)
  {
    swift_deallocPartialClassInstance(v1, v3, *(unsigned int *)(*v1 + 48), *(unsigned __int16 *)(*v1 + 52));
  }
  else
  {
    v15 = v6;
    LOBYTE(v32) = 0;
    v16 = sub_1004B7878(&qword_1013DF550, type metadata accessor for CRLGloballyScopedBoardIdentifier, (uint64_t)&unk_100F02438);
    v18 = (uint64_t)v28;
    v17 = v29;
    v19 = v30;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v4, &v32, v30, v4, v16);
    sub_1004BB62C(v18, (uint64_t)v14 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier);
    LOBYTE(v32) = 1;
    *(uint64_t *)((char *)v14 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_minRequiredVersion) = KeyedDecodingContainer.decode(_:forKey:)(&v32, v19);
    LOBYTE(v32) = 2;
    v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v32, v19);
    v21 = (uint64_t)v14
        + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
    *(_QWORD *)v21 = v20;
    *(_BYTE *)(v21 + 8) = v22 & 1;
    LOBYTE(v32) = 3;
    v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v32, v19);
    v24 = (uint64_t)v14 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
    *(_QWORD *)v24 = v23;
    *(_BYTE *)(v24 + 8) = v25 & 1;
    v33 = 4;
    v26 = sub_100587AC0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v33, v19, &type metadata for Data, v26);
    *(_OWORD *)((char *)v14 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData) = v32;
    v33 = 5;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for Data, &v33, v19, &type metadata for Data, v26);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v19);
    *(_OWORD *)((char *)v14 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData) = v32;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v14;
}

uint64_t sub_10085E250()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_minRequiredVersion);
}

uint64_t sub_10085E264(uint64_t *a1, uint64_t *a2)
{
  return sub_10085E340(*a1, *a2);
}

uint64_t *sub_10085E270@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *result;

  v6 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  result = sub_10085DF1C(a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_10085E2C4(_QWORD *a1)
{
  return sub_10085DCC4(a1);
}

uint64_t sub_10085E2E4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1004B7878(&qword_1013EDC58, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F107F8);
  result = sub_1004B7878(&qword_1013E76E8, type metadata accessor for CRLBoardRealTimeChangeRecord, (uint64_t)&unk_100F107D0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10085E340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v36;
  uint64_t v37;

  v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - v8;
  v10 = a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier;
  v11 = a2 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier;
  v12 = static UUID.== infix(_:_:)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier);
  sub_10085E600(v10, (uint64_t)v9);
  sub_10085E600(v11, (uint64_t)v6);
  if ((v12 & 1) == 0)
  {
    sub_1004BB670((uint64_t)v6);
    sub_1004BB670((uint64_t)v9);
    goto LABEL_22;
  }
  v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  v14 = *(_QWORD *)&v9[v13];
  v15 = *(_QWORD *)&v9[v13 + 8];
  v16 = &v6[v13];
  v17 = *((_QWORD *)v16 + 1);
  if (v14 == *(_QWORD *)v16 && v15 == v17)
  {
    sub_1004BB670((uint64_t)v6);
    sub_1004BB670((uint64_t)v9);
  }
  else
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, *(_QWORD *)v16, v17, 0);
    sub_1004BB670((uint64_t)v6);
    sub_1004BB670((uint64_t)v9);
    v20 = 0;
    if ((v19 & 1) == 0)
      return v20 & 1;
  }
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData);
  v22 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData + 8);
  v23 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData);
  v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData + 8);
  if (v22 >> 60 != 15)
  {
    if (v24 >> 60 == 15)
      goto LABEL_14;
    sub_10057939C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData), *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData + 8));
    sub_10057939C(v23, v24);
    sub_1007B38CC(v21, v22);
    v28 = v27;
    sub_1004BE2FC(v23, v24);
    sub_1004BE2FC(v21, v22);
    if ((v28 & 1) != 0)
      goto LABEL_16;
LABEL_22:
    v20 = 0;
    return v20 & 1;
  }
  if (v24 >> 60 != 15)
  {
LABEL_14:
    sub_10057939C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData), *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData + 8));
    sub_10057939C(v23, v24);
    sub_1004BE2FC(v21, v22);
    v25 = v23;
    v26 = v24;
LABEL_21:
    sub_1004BE2FC(v25, v26);
    goto LABEL_22;
  }
LABEL_16:
  v29 = a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData;
  v30 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData);
  v31 = *(_QWORD *)(v29 + 8);
  v32 = a2 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData;
  v33 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData);
  v34 = *(_QWORD *)(v32 + 8);
  if (v31 >> 60 != 15)
  {
    if (v34 >> 60 != 15)
    {
      sub_10057939C(v30, *(_QWORD *)(v29 + 8));
      sub_10057939C(v33, v34);
      sub_1007B38CC(v30, v31);
      v20 = v36;
      sub_1004BE2FC(v33, v34);
      sub_1004BE2FC(v30, v31);
      return v20 & 1;
    }
    goto LABEL_20;
  }
  if (v34 >> 60 != 15)
  {
LABEL_20:
    sub_10057939C(v30, *(_QWORD *)(v29 + 8));
    sub_10057939C(v33, v34);
    sub_1004BE2FC(v30, v31);
    v25 = v33;
    v26 = v34;
    goto LABEL_21;
  }
  v20 = 1;
  return v20 & 1;
}

uint64_t sub_10085E600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10085E644()
{
  unint64_t result;

  result = qword_1013F5E20;
  if (!qword_1013F5E20)
  {
    result = swift_getWitnessTable(&unk_100F10938, &type metadata for CRLBoardRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5E20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardRealTimeChangeRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10085E6D4 + 4 * byte_100F1077B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10085E708 + 4 * byte_100F10776[v4]))();
}

uint64_t sub_10085E708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10085E710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10085E718);
  return result;
}

uint64_t sub_10085E724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10085E72CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_10085E730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10085E738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLBoardRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_10085E758()
{
  unint64_t result;

  result = qword_1013F5E30;
  if (!qword_1013F5E30)
  {
    result = swift_getWitnessTable(&unk_100F10910, &type metadata for CRLBoardRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5E30);
  }
  return result;
}

unint64_t sub_10085E7A0()
{
  unint64_t result;

  result = qword_1013F5E38;
  if (!qword_1013F5E38)
  {
    result = swift_getWitnessTable(&unk_100F10880, &type metadata for CRLBoardRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5E38);
  }
  return result;
}

unint64_t sub_10085E7E8()
{
  unint64_t result;

  result = qword_1013F5E40;
  if (!qword_1013F5E40)
  {
    result = swift_getWitnessTable(&unk_100F108A8, &type metadata for CRLBoardRealTimeChangeRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F5E40);
  }
  return result;
}

uint64_t sub_10085E82C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  if (a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL)
  {
    v5 = 0xEF7265696669746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6564496472616F62, 0xEF7265696669746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000012)
  {
    v7 = 0x8000000100FB0F10;
    if (a2 == 0x8000000100FB0F10)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x8000000100FB0F10, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD00000000000002BLL && a2 == 0x8000000100FD8190)
  {
    v8 = 0x8000000100FD8190;
LABEL_19:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000002BLL, 0x8000000100FD8190, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_19;
  }
  if (a1 == 0xD000000000000025 && a2 == 0x8000000100FD81C0)
  {
    v9 = 0x8000000100FD81C0;
LABEL_25:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000025, 0x8000000100FD81C0, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_25;
  }
  if (a1 == 0x6174614474647263 && a2 == 0xE800000000000000)
  {
    v10 = 0xE800000000000000;
LABEL_31:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6174614474647263, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_31;
  }
  if (a1 == 0x436C616974726170 && a2 == 0xEF61746144544452)
  {
    swift_bridgeObjectRelease(0xEF61746144544452);
    return 5;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(0x436C616974726170, 0xEF61746144544452, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v11 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

int64x2_t sub_10085EADC()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4040000000000000uLL);
  xmmword_1013F5E48 = (__int128)result;
  return result;
}

void sub_10085EAF4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v1 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v0);

  qword_1013F5E58 = (uint64_t)v1;
}

id sub_10085EB64()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 16.0);
  qword_1013F5E60 = (uint64_t)result;
  return result;
}

id sub_10085EBA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___stackView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___stackView);
  }
  else
  {
    v4 = sub_10085FBE8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10085EBFC()
{
  return sub_10085F218(&OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___gridButton, (uint64_t (*)(uint64_t))sub_10085EC10);
}

void sub_10085EC10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  unsigned int v15;
  id v16;
  NSString v17;
  id v18;
  uint64_t v19;
  NSString v20;
  id v21;
  id v22;
  void (*v23)(_QWORD *, _QWORD);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  Class isa;
  id v38;
  NSString v39;
  NSString v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[4];

  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v48 - v8;
  static UIButton.Configuration.plain()(v7);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v10 = swift_allocObject(&unk_101282838, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1008610CC, v10);
  v12 = a1 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
  v49 = v12;
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "isCanvasDotGridEnabled");
    swift_unknownObjectRelease(v14);
    if (v15)
    {
      if (qword_1013DD2C0 != -1)
        swift_once(&qword_1013DD2C0, sub_10085EB64);
      v16 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", 0);
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v17);

      if (v18)
        goto LABEL_12;
      __break(1u);
    }
  }
  if (qword_1013DD2B8 != -1)
    swift_once(&qword_1013DD2B8, sub_10085EAF4);
  v19 = qword_1013F5E58;
  if (qword_1013DD2C0 != -1)
    swift_once(&qword_1013DD2C0, sub_10085EB64);
  v16 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", v19);
  v20 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v20);

  if (!v18)
  {
    __break(1u);
    return;
  }
LABEL_12:
  v21 = objc_msgSend(v18, "imageWithSymbolConfiguration:", v16);

  UIButton.Configuration.image.setter(v21);
  v22 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v23 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v50);
  UIBackgroundConfiguration.backgroundColor.setter(v22);
  v23(v50, 0);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  v24 = v3;
  v25 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v48 = v2;
  v25(v6, v9, v2);
  v26 = v11;
  v27 = (void *)UIButton.init(configuration:primaryAction:)(v6, v11);
  objc_msgSend(v27, "setPointerInteractionEnabled:", 1);
  objc_msgSend(v27, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v28 = (void *)objc_opt_self(NSLayoutConstraint);
  v29 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v30 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5560;
  v31 = objc_msgSend(v27, "heightAnchor");
  if (qword_1013DD2B0 != -1)
    swift_once(&qword_1013DD2B0, sub_10085EADC);
  v32 = objc_retainAutoreleasedReturnValue(objc_msgSend(v31, "constraintEqualToConstant:", *((double *)&xmmword_1013F5E48
                                                                                           + 1)));

  *(_QWORD *)(v30 + 32) = v32;
  v33 = objc_msgSend(v27, "widthAnchor");
  v34 = objc_msgSend(v33, "constraintEqualToConstant:", *(double *)&xmmword_1013F5E48);

  *(_QWORD *)(v30 + 40) = v34;
  v50[0] = v30;
  specialized Array._endMutation()(v35);
  v36 = v50[0];
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v28, "activateConstraints:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v38 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v39 = String._bridgeToObjectiveC()();
  v40 = String._bridgeToObjectiveC()();
  v41 = objc_msgSend(v38, "localizedStringForKey:value:table:", v39, v40, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v43 = v42;

  v44 = (void *)swift_unknownObjectWeakLoadStrong(v49);
  if (v44)
  {
    v45 = v44;
    objc_msgSend(v44, "isCanvasDotGridEnabled");
    swift_unknownObjectRelease(v45);
  }
  v46 = v48;
  sub_100860FC0(v27);

  v47 = swift_bridgeObjectRelease(v43);
  (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v9, v46, v47);
}

id sub_10085F204()
{
  return sub_10085F218(&OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___connectorButton, (uint64_t (*)(uint64_t))sub_10085F274);
}

id sub_10085F218(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

void sub_10085F274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  unsigned int v15;
  id v16;
  NSString v17;
  id v18;
  NSString v19;
  id v20;
  id v21;
  void (*v22)(_QWORD *, _QWORD);
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  id v37;
  NSString v38;
  NSString v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[4];

  v2 = type metadata accessor for UIButton.Configuration(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v47 - v8;
  static UIButton.Configuration.plain()(v7);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v10 = swift_allocObject(&unk_101282838, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, a1);
  v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100860F98, v10);
  v12 = a1 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
  v48 = v12;
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "isConnectorModeEnabled");
    swift_unknownObjectRelease(v14);
    if (v15)
    {
      if (qword_1013DD2C0 != -1)
        swift_once(&qword_1013DD2C0, sub_10085EB64);
      v16 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", 0);
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v17);

      if (v18)
        goto LABEL_10;
      __break(1u);
    }
  }
  if (qword_1013DD2C0 != -1)
    swift_once(&qword_1013DD2C0, sub_10085EB64);
  v16 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", 0);
  v19 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v19);

  if (!v18)
  {
    __break(1u);
    return;
  }
LABEL_10:
  v20 = objc_msgSend(v18, "imageWithSymbolConfiguration:", v16);

  UIButton.Configuration.image.setter(v20);
  v21 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v22 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v49);
  UIBackgroundConfiguration.backgroundColor.setter(v21);
  v22(v49, 0);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  v23 = v3;
  v24 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v47 = v2;
  v24(v6, v9, v2);
  v25 = v11;
  v26 = (void *)UIButton.init(configuration:primaryAction:)(v6, v11);
  objc_msgSend(v26, "setPointerInteractionEnabled:", 1);
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100EF5560;
  v30 = objc_msgSend(v26, "heightAnchor");
  if (qword_1013DD2B0 != -1)
    swift_once(&qword_1013DD2B0, sub_10085EADC);
  v31 = objc_retainAutoreleasedReturnValue(objc_msgSend(v30, "constraintEqualToConstant:", *((double *)&xmmword_1013F5E48
                                                                                           + 1)));

  *(_QWORD *)(v29 + 32) = v31;
  v32 = objc_msgSend(v26, "widthAnchor");
  v33 = objc_msgSend(v32, "constraintEqualToConstant:", *(double *)&xmmword_1013F5E48);

  *(_QWORD *)(v29 + 40) = v33;
  v49[0] = v29;
  specialized Array._endMutation()(v34);
  v35 = v49[0];
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v38 = String._bridgeToObjectiveC()();
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, v39, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v42 = v41;

  v43 = (void *)swift_unknownObjectWeakLoadStrong(v48);
  if (v43)
  {
    v44 = v43;
    objc_msgSend(v43, "isConnectorModeEnabled");
    swift_unknownObjectRelease(v44);
  }
  v45 = v47;
  sub_100860FC0(v26);

  v46 = swift_bridgeObjectRelease(v42);
  (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v9, v45, v46);
}

void sub_10085F854(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unsigned int v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _BYTE v16[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = Strong + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate;
    v10 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, *a3);
      swift_unknownObjectRelease(v11);
      v13 = v12 ^ 1;
    }
    else
    {
      v13 = 1;
    }
    v14 = (void *)swift_unknownObjectWeakLoadStrong(v9);
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, *a4, v13);

      swift_unknownObjectRelease(v15);
    }
    else
    {

    }
  }
}

id sub_10085F920()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___separator;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___separator);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___separator);
  }
  else
  {
    v4 = sub_10085F97C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10085F97C()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  objc_msgSend(v0, "setBackgroundColor:", v1);

  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "setMasksToBounds:", 1);

  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCornerRadius:", 1.0);

  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5560;
  v8 = objc_msgSend(v0, "heightAnchor");
  v9 = objc_msgSend(v8, "constraintEqualToConstant:", 44.0);

  *(_QWORD *)(v7 + 32) = v9;
  v10 = objc_msgSend(v0, "widthAnchor");
  v11 = objc_msgSend(v10, "constraintEqualToConstant:", 1.0);

  *(_QWORD *)(v7 + 40) = v11;
  specialized Array._endMutation()(v12);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  return v0;
}

id sub_10085FBE8()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  unsigned __int8 v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  void *v19;
  double *v20;
  id v21;
  Class isa;
  id v23;
  unint64_t v25;
  unint64_t v26;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
  if (Strong)
  {
    v2 = Strong;
    if (objc_msgSend(Strong, "documentIsSharedReadOnly"))
    {
      swift_unknownObjectRelease(v2);
    }
    else
    {
      v3 = objc_msgSend(v2, "isInFollowingMode");
      swift_unknownObjectRelease(v2);
      if ((v3 & 1) == 0)
      {
        v4 = (char *)sub_10085F204();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
        v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v5 < v6 >> 1)
          goto LABEL_6;
        goto LABEL_25;
      }
    }
  }
  while (1)
  {
    v12 = sub_10085EBFC();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
    v4 = *(char **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if ((unint64_t)v4 >= v13 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v4 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v12);
    specialized Array._endMutation()(v14);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v20 = _swiftEmptyArrayStorage;
      else
        v20 = (double *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 2);
      v5 = _CocoaArrayWrapper.endIndex.getter(v20);
      v15 = v5;
      if (!v5)
        goto LABEL_23;
    }
    else
    {
      v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
      v5 = swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 2);
      if (!v15)
        goto LABEL_23;
    }
    if (v15 >= 1)
      break;
    __break(1u);
LABEL_25:
    v25 = v5;
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v6 > 1, v5 + 1, 1);
    v5 = v25;
LABEL_6:
    v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v4);
    specialized Array._endMutation()(v7);
    v8 = sub_10085F920();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
    v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v9 >= v10 >> 1)
    {
      v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v9 + 1, 1);
      v9 = v26;
    }
    v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
    specialized Array._endMutation()(v11);
  }
  v16 = 0;
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, _swiftEmptyArrayStorage);
    else
      v17 = *(id *)&_swiftEmptyArrayStorage[v16 + 4];
    v19 = v17;
    ++v16;
    LODWORD(v18) = 1144750080;
    objc_msgSend(v17, "setContentHuggingPriority:forAxis:", 1, v18);

  }
  while (v15 != v16);
LABEL_23:
  swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
  v21 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(v21, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v23, "setDistribution:", 3);
  objc_msgSend(v23, "setAlignment:", 0);
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v23, "setInsetsLayoutMarginsFromSafeArea:", 0);
  objc_msgSend(v23, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v23, "setDirectionalLayoutMargins:", 0.0, 6.0, 0.0, 6.0);
  return v23;
}

void sub_10085FF4C()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  unsigned int v4;
  double v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v1 = v0 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
  if (!Strong)
    goto LABEL_5;
  v3 = Strong;
  if (objc_msgSend(Strong, "documentIsSharedReadOnly"))
  {
    swift_unknownObjectRelease(v3);
LABEL_5:
    v5 = 44.0;
    goto LABEL_6;
  }
  v4 = objc_msgSend(v3, "isInFollowingMode");
  swift_unknownObjectRelease(v3);
  if (v4)
    goto LABEL_5;
  v5 = 89.0;
LABEL_6:
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewWidthConstraint);
  if (!v6)
  {
    __break(1u);
    return;
  }
  objc_msgSend(v6, "setConstant:", v5);
  v7 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!v7)
    goto LABEL_11;
  v8 = v7;
  if (objc_msgSend(v7, "documentIsSharedReadOnly"))
  {
    swift_unknownObjectRelease(v8);
    goto LABEL_11;
  }
  v9 = objc_msgSend(v8, "isInFollowingMode");
  swift_unknownObjectRelease(v8);
  if ((v9 & 1) != 0)
  {
LABEL_11:
    v10 = sub_10085EBA0();
    v11 = objc_msgSend(v10, "arrangedSubviews");

    v12 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v28 = v13;
      else
        v28 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v14 >= 2)
    {
      v15 = sub_10085EBA0();
      v16 = sub_10085F204();
      objc_msgSend(v15, "removeArrangedSubview:", v16);

      v17 = sub_10085F204();
      objc_msgSend(v17, "removeFromSuperview");

      v18 = sub_10085EBA0();
      v19 = sub_10085F920();
      objc_msgSend(v18, "removeArrangedSubview:", v19);

      v30 = sub_10085F920();
      objc_msgSend(v30, "removeFromSuperview");
LABEL_15:

      return;
    }
    return;
  }
  v20 = sub_10085EBA0();
  v21 = objc_msgSend(v20, "arrangedSubviews");

  v22 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v29 = v23;
    else
      v29 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v24 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v24 == 1)
  {
    v25 = sub_10085EBA0();
    v26 = sub_10085F204();
    objc_msgSend(v25, "insertArrangedSubview:atIndex:", v26, 0);

    v27 = sub_10085EBA0();
    v30 = sub_10085F920();
    objc_msgSend(v27, "insertArrangedSubview:atIndex:");

    goto LABEL_15;
  }
}

void sub_1008602C8()
{
  char *v0;
  void *Strong;
  void *v2;
  unsigned int v3;
  uint64_t v4;
  double v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  Class isa;
  objc_super v46;

  v46.receiver = v0;
  v46.super_class = (Class)type metadata accessor for CRLiOSFloatingBoardViewControlsViewController();
  objc_msgSendSuper2(&v46, "viewDidLoad");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate]);
  if (!Strong)
    goto LABEL_5;
  v2 = Strong;
  if (objc_msgSend(Strong, "documentIsSharedReadOnly"))
  {
    swift_unknownObjectRelease(v2);
LABEL_5:
    v4 = 0x4046000000000000;
    goto LABEL_6;
  }
  v3 = objc_msgSend(v2, "isInFollowingMode");
  swift_unknownObjectRelease(v2);
  if (v3)
    goto LABEL_5;
  v4 = 0x4056400000000000;
LABEL_6:
  v5 = *(double *)&v4;
  v6 = sub_10085EBA0();
  v7 = objc_msgSend(v6, "widthAnchor");

  v8 = objc_msgSend(v7, "constraintEqualToConstant:", v5);
  v9 = OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewWidthConstraint;
  v10 = *(void **)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewWidthConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewWidthConstraint] = v8;

  v11 = sub_10085EBA0();
  v12 = objc_msgSend(v11, "heightAnchor");

  v13 = objc_msgSend(v12, "constraintEqualToConstant:", 44.0);
  v14 = OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewHeightConstraint;
  v15 = *(void **)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewHeightConstraint];
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewHeightConstraint] = v13;

  v16 = sub_10085EBA0();
  v17 = (void *)objc_opt_self(UIColor);
  v18 = objc_msgSend(v17, "systemBackgroundColor");
  objc_msgSend(v16, "setBackgroundColor:", v18);

  v19 = sub_10085EBA0();
  v20 = objc_msgSend(v19, "layer");

  objc_msgSend(v20, "setCornerCurve:", kCACornerCurveContinuous);
  v21 = sub_10085EBA0();
  v22 = objc_msgSend(v21, "layer");

  objc_msgSend(v22, "setShadowOffset:", 0.0, 3.0);
  v23 = sub_10085EBA0();
  v24 = objc_msgSend(v23, "layer");

  LODWORD(v25) = 1034147594;
  objc_msgSend(v24, "setShadowOpacity:", v25);

  v26 = sub_10085EBA0();
  v27 = objc_msgSend(v26, "layer");

  objc_msgSend(v27, "setShadowRadius:", 7.0);
  v28 = sub_10085EBA0();
  v29 = objc_msgSend(v28, "layer");

  objc_msgSend(v29, "setBorderWidth:", 0.5);
  v30 = sub_10085EBA0();
  v31 = objc_msgSend(v30, "layer");

  objc_msgSend(v31, "setCornerRadius:", 10.0);
  v32 = sub_10085EBA0();
  v33 = objc_msgSend(v32, "layer");

  v34 = objc_msgSend(v17, "blackColor");
  v35 = objc_msgSend(v34, "colorWithAlphaComponent:", 0.08);

  v36 = objc_msgSend(v35, "CGColor");
  objc_msgSend(v33, "setBorderColor:", v36);

  v37 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v38 = swift_allocObject(v37, 48, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100EF5560;
  v39 = *(void **)&v0[v9];
  if (v39)
  {
    v40 = v38;
    *(_QWORD *)(v38 + 32) = v39;
    v41 = *(void **)&v0[v14];
    if (v41)
    {
      v42 = (void *)objc_opt_self(NSLayoutConstraint);
      *(_QWORD *)(v40 + 40) = v41;
      specialized Array._endMutation()(v42);
      sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
      v43 = v39;
      v44 = v41;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v42, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100860780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  unsigned int v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  NSString v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013F6AE0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v25 - v6;
  v8 = sub_10085EBFC();
  UIButton.configuration.getter(v8);
  v9 = type metadata accessor for UIButton.Configuration(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
    if (Strong)
    {
      v11 = Strong;
      v12 = objc_msgSend(Strong, "isCanvasDotGridEnabled");
      swift_unknownObjectRelease(v11);
      if (v12)
      {
        if (qword_1013DD2C0 != -1)
          swift_once(&qword_1013DD2C0, sub_10085EB64);
        v13 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", 0);
        v14 = String._bridgeToObjectiveC()();
        v15 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v14);

        if (v15)
        {
LABEL_14:
          v18 = objc_msgSend(v15, "imageWithSymbolConfiguration:", v13);

          UIButton.Configuration.image.setter(v18);
          UIButton.configuration.setter(v7);

          goto LABEL_15;
        }
        __break(1u);
      }
    }
    if (qword_1013DD2B8 != -1)
      swift_once(&qword_1013DD2B8, sub_10085EAF4);
    v16 = qword_1013F5E58;
    if (qword_1013DD2C0 != -1)
      swift_once(&qword_1013DD2C0, sub_10085EB64);
    v13 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", v16);
    v17 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v17);

    if (!v15)
    {
      __break(1u);
      return;
    }
    goto LABEL_14;
  }
  sub_100860EEC((uint64_t)v7, (uint64_t)v5);
  UIButton.configuration.setter(v5);

  sub_100860F34((uint64_t)v7);
LABEL_15:
  v19 = sub_10085EBFC();
  v20 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "isCanvasDotGridEnabled");
    swift_unknownObjectRelease(v21);
  }
  sub_1008867B4();
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setAccessibilityValue:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

}

void sub_100860AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *Strong;
  void *v11;
  unsigned int v12;
  id v13;
  NSString v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013F6AE0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v24 - v6;
  v8 = sub_10085F204();
  UIButton.configuration.getter(v8);
  v9 = type metadata accessor for UIButton.Configuration(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
    if (Strong)
    {
      v11 = Strong;
      v12 = objc_msgSend(Strong, "isConnectorModeEnabled");
      swift_unknownObjectRelease(v11);
      if (v12)
      {
        if (qword_1013DD2C0 != -1)
          swift_once(&qword_1013DD2C0, sub_10085EB64);
        v13 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", 0);
        v14 = String._bridgeToObjectiveC()();
        v15 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v14);

        if (v15)
        {
LABEL_12:
          v17 = objc_msgSend(v15, "imageWithSymbolConfiguration:", v13);

          UIButton.Configuration.image.setter(v17);
          UIButton.configuration.setter(v7);

          goto LABEL_13;
        }
        __break(1u);
      }
    }
    if (qword_1013DD2C0 != -1)
      swift_once(&qword_1013DD2C0, sub_10085EB64);
    v13 = objc_msgSend((id)qword_1013F5E60, "configurationByApplyingConfiguration:", 0);
    v16 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v16);

    if (!v15)
    {
      __break(1u);
      return;
    }
    goto LABEL_12;
  }
  sub_100860EEC((uint64_t)v7, (uint64_t)v5);
  UIButton.configuration.setter(v5);

  sub_100860F34((uint64_t)v7);
LABEL_13:
  v18 = sub_10085F204();
  v19 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate);
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "isConnectorModeEnabled");
    swift_unknownObjectRelease(v20);
  }
  sub_1008867B4();
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityValue:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

}

id sub_100860E14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSFloatingBoardViewControlsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSFloatingBoardViewControlsViewController()
{
  return objc_opt_self(_TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController);
}

uint64_t sub_100860EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F6AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100860F34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F6AE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100860F74()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100860F98(uint64_t a1)
{
  uint64_t v1;

  sub_10085F854(a1, v1, (SEL *)&selRef_isConnectorModeEnabled, (SEL *)&selRef_setIsConnectorModeEnabled_);
}

void sub_100860FC0(void *a1)
{
  NSString v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;

  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityLabel:", v2);

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setLargeContentTitle:", v3);

  sub_1008867B4();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityValue:", v6, swift_bridgeObjectRelease(v5).n128_f64[0]);

  objc_msgSend(a1, "setShowsLargeContentViewer:", 1);
  v7 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(a1, "addInteraction:", v7);

}

void sub_1008610CC(uint64_t a1)
{
  uint64_t v1;

  sub_10085F854(a1, v1, (SEL *)&selRef_isCanvasDotGridEnabled, (SEL *)&selRef_setIsCanvasDotGridEnabled_);
}

void sub_1008610F4()
{
  char *v0;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_delegate], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___stackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___gridButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___connectorButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___separator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSFloatingBoardViewControlsViewController.swift", 60, 2, 150, 0);
  __break(1u);
}

void sub_1008611AC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController), "canvasView");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "canvasLayer");

    v4 = v3;
    v5 = objc_msgSend(v4, "canvasView");
    v6 = v5;
    if (v5)
    {
      v7 = objc_msgSend(v5, "enclosingScrollView");
      if (v7)
      {
        v8 = v6;
        v9 = v7;
        objc_msgSend(v8, "canvasLayer");
        v10 = objc_msgSend(v8, "canvasLayer");
        v11 = objc_msgSend(v10, "controller");

        if (v11)
        {

        }
        else
        {
          __break(1u);
        }
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void sub_10086131C(uint64_t a1@<X8>, double a2@<D0>, uint64_t a3@<D1>, uint64_t a4@<D2>, uint64_t a5@<D3>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  id v40;
  id v41;
  id v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  __int128 v71;
  ValueMetadata *v72;
  unint64_t v73;
  _QWORD v74[5];
  _QWORD v75[34];
  int v76;
  uint64_t v77[32];
  char v78;

  v10 = type metadata accessor for CRLCanvasLayerAnimation(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - v14;
  __chkstk_darwin(v16);
  v70 = (uint64_t)&v60 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v60 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v60 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v60 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v60 - v28;
  sub_1008611AC();
  v67 = v31;
  v68 = v32;
  v69 = v33;
  if (v30)
  {
    v34 = v30;
    *(double *)v77 = a2;
    v77[1] = a3;
    v77[2] = a4;
    v77[3] = a5;
    v78 = 62;
    if (qword_1013DD410 != -1)
      swift_once(&qword_1013DD410, sub_1008D3D08);
    v35 = qword_10147FD70;
    if (qword_1013DD418 != -1)
      swift_once(&qword_1013DD418, sub_1008D3D18);
    v36 = qword_10147FD78;
    if (qword_1013DD420 != -1)
      swift_once(&qword_1013DD420, sub_1008D3D24);
    v61 = v20;
    v62 = v23;
    v63 = v26;
    v64 = v29;
    v65 = v12;
    v66 = a1;
    v37 = qword_10147FD80;
    if (qword_1013DD428 != -1)
      swift_once(&qword_1013DD428, sub_1008D3D34);
    v38 = qword_10147FD88;
    sub_10057E090(v77, (uint64_t)v75);
    v74[0] = v35;
    v74[1] = v36;
    v74[2] = v37;
    v74[3] = v38;
    v74[4] = 0;
    v75[33] = 0;
    v76 = 131586;
    v72 = &type metadata for CRLSpringLayerAnimation.Def;
    v73 = sub_100553914();
    *(_QWORD *)&v71 = swift_allocObject(&unk_101282918, 332, 7);
    sub_100720EB4((uint64_t)v74, v71 + 16);
    *((_OWORD *)v15 + 2) = 0u;
    *((_OWORD *)v15 + 3) = 0u;
    v15[64] = 1;
    *(_OWORD *)(v15 + 72) = 0u;
    *(_OWORD *)(v15 + 88) = 0u;
    v15[104] = 1;
    *((_QWORD *)v15 + 14) = 0;
    v15[120] = 1;
    *((_QWORD *)v15 + 16) = 0;
    v15[136] = 1;
    v60 = v34;
    v39 = (int *)v10;
    v40 = v67;
    v41 = v68;
    v42 = v69;
    UUID.init()(v42);
    v43 = &v15[v39[10]];
    swift_unknownObjectWeakInit(v43);
    v44 = &v15[v39[12]];
    v45 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
    v46(v44, 1, 1, v45);
    v46(&v15[v39[13]], 1, 1, v45);
    v47 = v60;
    *(_QWORD *)v15 = v60;
    *((_QWORD *)v15 + 1) = v40;
    *((_QWORD *)v15 + 2) = v41;
    *((_QWORD *)v15 + 3) = v42;
    sub_1004DB728(&v71, (uint64_t)&v15[v39[11]]);
    swift_unknownObjectWeakAssign(v43, v40);
    sub_100635C68((uint64_t)v74);

    sub_1004EA730(v77);
    v48 = v70;
    sub_100553A54(v70, 1.0);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLCanvasLayerAnimation);
    v49 = (uint64_t)v61;
    sub_100553BE4((uint64_t)v61, 150.0);
    sub_1004B84A4(v48, type metadata accessor for CRLCanvasLayerAnimation);
    v50 = (uint64_t)v62;
    sub_1005535D0((uint64_t)v62, 24.0);
    sub_1004B84A4(v49, type metadata accessor for CRLCanvasLayerAnimation);
    v51 = (uint64_t)v63;
    sub_100553750((uint64_t)v63, 1.0);
    sub_1004B84A4(v50, type metadata accessor for CRLCanvasLayerAnimation);
    v52 = (uint64_t)v65;
    sub_1004B8460(v51, (uint64_t)v65, type metadata accessor for CRLCanvasLayerAnimation);
    v53 = v52 + v39[11];
    v54 = *(_QWORD *)(v53 + 24);
    v55 = *(_QWORD *)(v53 + 32);
    sub_1004CB9AC(v53, v54);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 120))(1, v54, v55);
    v56 = (uint64_t)v64;
    sub_1004B84E0(v52, (uint64_t)v64, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4(v51, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B8460(v56, v52, type metadata accessor for CRLCanvasLayerAnimation);
    v57 = v52 + v39[11];
    v58 = *(_QWORD *)(v57 + 24);
    v59 = *(_QWORD *)(v57 + 32);
    sub_1004CB9AC(v57, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 192))(1, v58, v59);
    sub_1004B84E0(v52, v66, type metadata accessor for CRLCanvasLayerAnimation);
    sub_1004B84A4(v56, type metadata accessor for CRLCanvasLayerAnimation);
  }
  else
  {
    __break(1u);
  }
}

void sub_100861818(void *a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  void *v63;
  int *v64;
  id v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  id v71;
  double v72;
  double v73;
  double v74;
  double v75;
  id v76;
  id v77;
  id *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (**v84)(double);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  id *v91;
  _BYTE v92[264];
  uint64_t v93[32];
  char v94;

  v7 = v6;
  v89 = a1;
  v13 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v13);
  v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for CRLBasicLayerAnimation(0);
  __chkstk_darwin(v90);
  v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v85 - v19;
  __chkstk_darwin(v21);
  v91 = (id *)((char *)&v85 - v22);
  sub_1008611AC();
  if (!v23)
  {
    __break(1u);
    goto LABEL_10;
  }
  v27 = v23;
  v28 = v24;
  v29 = v25;
  v30 = v26;
  objc_msgSend(v26, "visibleUnscaledRect");
  v32 = v31;
  v34 = v33;

  v88 = v7;
  sub_1008611AC();
  if (!v35)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v39 = v35;
  v40 = v36;
  v41 = v37;
  v42 = v38;
  v86 = v15;
  v87 = a2;
  objc_msgSend(v38, "unobscuredScrollViewFrame");
  v44 = v43;
  v46 = v45;

  v93[0] = 1065353216;
  v94 = 6;
  if (qword_1013DD408 != -1)
    swift_once(&qword_1013DD408, sub_1008D3CF4);
  v47 = sub_100061400(a3, a4, a5, a6);
  v49 = v48;
  v50 = sub_100062BCC(a5, a6, v32, v34);
  v51 = sub_10005FD98(v47, v49, v50);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = sub_100062E78(0, v54, v56, v44, v46);
  v60 = v59 / v57;
  v61 = v58 / v55;
  if (v60 >= v61)
    v62 = v61;
  else
    v62 = v60;
  v63 = (void *)qword_10147FD68;
  sub_10057E090(v93, (uint64_t)v92);
  v64 = (int *)v90;
  v65 = v63;
  v66 = v89;
  UUID.init()(v66);
  v67 = &v17[v64[6]];
  swift_unknownObjectWeakInit(v67);
  v68 = &v17[v64[7]];
  v69 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56);
  v70(v68, 1, 1, v69);
  v70(&v17[v64[8]], 1, 1, v69);
  swift_unknownObjectWeakAssign(v67, v66);

  sub_1004E9198(v92, v17 + 24);
  *(_OWORD *)(v17 + 8) = xmmword_100EF6400;
  *(_QWORD *)v17 = v65;
  *((_QWORD *)v17 + 36) = 0;
  *((_DWORD *)v17 + 74) = 131586;
  sub_1004EA730(v93);
  sub_1004B8460((uint64_t)v17, (uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
  *((_QWORD *)v20 + 2) = 0x3FC0A3D70A3D70A4;
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLBasicLayerAnimation);
  v71 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v72) = 0.25;
  LODWORD(v73) = 0;
  LODWORD(v74) = 0.5;
  LODWORD(v75) = 1.0;
  v76 = objc_msgSend(v71, "initWithControlPoints::::", v72, v73, v74, v75);
  v77 = sub_1008FC994();

  v78 = v91;
  sub_1004B8460((uint64_t)v20, (uint64_t)v91, type metadata accessor for CRLBasicLayerAnimation);

  *v78 = v77;
  sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLBasicLayerAnimation);
  v79 = swift_allocObject(&unk_1012828A0, 24, 7);
  swift_unknownObjectWeakInit(v79 + 16);
  v80 = swift_allocObject(&unk_1012828F0, 64, 7);
  *(_QWORD *)(v80 + 16) = v79;
  *(double *)(v80 + 24) = v51;
  *(_QWORD *)(v80 + 32) = v53;
  *(double *)(v80 + 40) = v55;
  *(double *)(v80 + 48) = v57;
  *(double *)(v80 + 56) = v62;
  v81 = v87;
  sub_1004B8460((uint64_t)v78, v87, type metadata accessor for CRLBasicLayerAnimation);
  swift_retain(v79);
  swift_retain(v80);
  v82 = (uint64_t)v86;
  UUID.init()(v83);
  v84 = (void (**)(double))(v82 + *(int *)(v69 + 20));
  *v84 = sub_1008629D4;
  v84[1] = (void (*)(double))v80;
  v70((char *)v82, 0, 1, v69);
  sub_100556208(v82, v81 + v64[7]);
  swift_release(v80);
  sub_1004B84A4((uint64_t)v78, type metadata accessor for CRLBasicLayerAnimation);
  swift_release(v79);
}

void sub_100861CD8(uint64_t a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  _BYTE v26[24];

  v12 = a1 + 16;
  swift_beginAccess(a1 + 16, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v14 = (void *)Strong;
    sub_1008611AC();
    if (v15)
    {
      v19 = v15;
      v20 = v16;
      v21 = v17;
      v22 = v18;
      objc_msgSend(v18, "setViewScale:", a7);
      objc_msgSend(v22, "i_viewScaleDidChange");
      v23 = sub_100061400(a3, a4, a5, a6);
      v25 = v24;
      objc_msgSend(v22, "growCanvasAsNeededToRestoreContentOffset:");
      objc_msgSend(v21, "setContentOffset:", sub_100708FAC(v20, v21, v22, v23, v25, a7, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right));
      objc_msgSend(v22, "i_viewScrollDidChange");
      objc_msgSend(v22, "i_viewScrollingEnded");
      objc_msgSend(v22, "i_viewWillBeginZooming");
      objc_msgSend(v22, "viewDidEndZooming");
      objc_msgSend(v22, "i_viewDidZoomToViewScale:notify:", 1, a7);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100861E74(uint64_t a1, uint64_t a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  char *v6;
  char *v7;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  _UNKNOWN **v36;
  _OWORD v37[2];
  char v38;

  v7 = v6;
  if ((objc_msgSend((id)objc_opt_self(CRLAccessibility), "isReduceMotionEnabled") & 1) == 0)
  {
    v35 = type metadata accessor for CRLCanvasLayerAnimation(0);
    v36 = &off_10126BA70;
    v19 = sub_10050D1B0(v34);
    sub_10086131C((uint64_t)v19, a3, *(uint64_t *)&a4, *(uint64_t *)&a5, *(uint64_t *)&a6);
    v16 = 0;
LABEL_6:
    v20 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayer;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayer], "removeFromSuperlayer");
    v21 = *(void **)&v7[v20];
    *(_QWORD *)&v7[v20] = v16;
    v22 = v16;

    if (!v16)
    {
LABEL_9:
      sub_1004E90B0((uint64_t)v34, (uint64_t)v31);
      v27 = v32;
      v28 = v33;
      sub_1004BB5A4(v31, v32);
      v29 = swift_allocObject(&unk_1012828A0, 24, 7);
      swift_unknownObjectWeakInit(v29 + 16);
      v30 = (_QWORD *)swift_allocObject(&unk_1012828C8, 40, 7);
      v30[2] = v29;
      v30[3] = a1;
      v30[4] = a2;
      swift_retain(v29);
      sub_1004C0F54(a1, a2);
      sub_100D0C8CC(0, 1, 1, 0, 0, (uint64_t)sub_1008629A4, (uint64_t)v30, v27, v28);

      swift_release(v30);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v34);
      swift_release(v29);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v31);
      return;
    }
    v23 = v22;
    v24 = objc_msgSend(v7, "view");
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v24, "layer");

      objc_msgSend(v26, "addSublayer:", v23);
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  v14 = objc_msgSend(v6, "view");
  if (v14)
  {
    v15 = v14;
    memset(v37, 0, sizeof(v37));
    v38 = 1;
    v16 = sub_1008657DC((uint64_t)v37);

    if (!v16)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"animateToScene(sceneRect:completionHandler:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewController.swift", 98, 2, 106, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"animateToScene(sceneRect:completionHandler:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewController.swift", 98, 2u, 106, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      return;
    }
    v35 = type metadata accessor for CRLBasicLayerAnimation(0);
    v36 = &off_10126D348;
    v17 = sub_10050D1B0(v34);
    v18 = v16;
    sub_100861818(v18, (uint64_t)v17, a3, a4, a5, a6);

    goto LABEL_6;
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_1008621B8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayer;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayer), "removeFromSuperlayer");
    v7 = *(void **)&v5[v6];
    *(_QWORD *)&v5[v6] = 0;

  }
  if (a2)
    a2();
}

uint64_t sub_10086224C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for AppEntityVisualState(0);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLBoardCRDTData(0);
  v2[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardIdentifier(0);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FE140);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLBoardEntity(0);
  v2[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[13] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v10);
  v2[15] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v2[16] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v2[17] = v12;
  v2[18] = v13;
  return swift_task_switch(sub_100862394, v12, v13);
}

uint64_t sub_100862394()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  char *v15;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  v4 = *(char **)(*(_QWORD *)(v0[6] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v5 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v6 = *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  v7 = v6 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v6 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 2, 0, 0);
  sub_1004B8460(v7, v3, type metadata accessor for CRLBoardCRDTData);
  v8 = v4;
  swift_retain(v6);
  v9 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v9);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release(v6);
  v10 = (uint64_t *)(*(_QWORD *)&v4[v5] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  sub_10067AFD0(v2, v11, v12, v1);

  v15 = (char *)&dword_10140C6A0 + dword_10140C6A0;
  v13 = (_QWORD *)swift_task_alloc(unk_10140C6A4);
  v0[19] = v13;
  *v13 = v0;
  v13[1] = sub_1008624FC;
  return ((uint64_t (*)(_QWORD, _QWORD))v15)(v0[11], v0[10]);
}

uint64_t sub_1008624FC()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *v1;
  swift_task_dealloc((*v1)[19]);
  v3 = v2[10];
  if (v0)
  {
    swift_errorRelease(v0);
    sub_1004B84A4(v3, type metadata accessor for CRLBoardIdentifier);
    v4 = v2[17];
    v5 = v2[18];
    v6 = sub_100862720;
  }
  else
  {
    sub_1004B84A4(v2[10], type metadata accessor for CRLBoardIdentifier);
    v4 = v2[17];
    v5 = v2[18];
    v6 = sub_100862590;
  }
  return swift_task_switch(v6, v4, v5);
}

id sub_100862590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  void *v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = swift_release(*(_QWORD *)(v0 + 128));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    sub_10086290C(*(_QWORD *)(v0 + 88));
LABEL_7:
    v13 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v18 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(void **)(v0 + 48);
  sub_1004B84E0(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 120), type metadata accessor for CRLBoardEntity);
  if (!objc_msgSend(v5, "isViewLoaded"))
  {
LABEL_6:
    sub_1004B84A4(*(_QWORD *)(v0 + 120), type metadata accessor for CRLBoardEntity);
    goto LABEL_7;
  }
  result = objc_msgSend(*(id *)(v0 + 48), "view");
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 56);
    sub_1004B8460(*(_QWORD *)(v0 + 120), v8, type metadata accessor for CRLBoardEntity);
    AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(0, 0, 0, 0, 0, 1);
    objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
    v11 = sub_100511300();
    v12 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v8, v10, v9, v11);
    UIView.annotate(with:)();

    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100862720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = swift_release(*(_QWORD *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56))(v3, 1, 1, v1, v4);
  sub_10086290C(*(_QWORD *)(v0 + 88));
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v10 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008627CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013F5ED4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_10086224C(a1);
}

id sub_10086281C()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id result;
  void *v7;
  uint64_t v8;

  v1 = type metadata accessor for AppEntityVisualState(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  result = objc_msgSend(v5, "isViewLoaded");
  if ((_DWORD)result)
  {
    result = objc_msgSend(v5, "view");
    if (result)
    {
      v7 = result;
      AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(0, 0, 0, 0, 0, 1);
      UIView.updateAppEntityAnnotation(with:)(v4);

      return (id)(*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1008628F0()
{
  return AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)(0, 0, 0, 0, 0, 1);
}

uint64_t sub_10086290C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013FE140);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10086294C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100862970()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_1008629A4()
{
  uint64_t v0;

  sub_1008621B8(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1008629B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1008629D4(double a1)
{
  uint64_t v1;

  sub_100861CD8(*(_QWORD *)(v1 + 16), a1, *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_1008629E8()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100862AE4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1[31] = v0;
  v2 = sub_1004B804C(&qword_1013E04D0);
  v1[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v1[33] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[34] = v4;
  v1[35] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v1[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLProto_Data(0);
  v1[37] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[38] = v7;
  v1[39] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v1[40] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[41] = v9;
  v1[42] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  v1[43] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[44] = v11;
  v1[45] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLArchivedObjectMetadataRepresentation(0);
  v1[46] = v12;
  v1[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100862C54, 0, 0);
}

uint64_t sub_100862C54()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD *v15;

  v1 = (_QWORD *)v0[31];
  v2 = v1[7];
  v3 = v1[8];
  sub_1004BB5A4(v1 + 4, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  v0[48] = v4;
  v5 = v4;
  v6 = (_QWORD *)v0[31];
  v7 = v6[2];
  v8 = v6[3];
  v9 = (void *)v6[9];
  v10 = (void *)v6[10];
  v11 = v6[11];
  v0[49] = v11;
  v12 = type metadata accessor for CRLSerializableObjectWriter();
  v0[50] = swift_initStackObject(v12, v0 + 16);
  swift_unknownObjectRetain(v7);
  v13 = v9;
  v14 = v10;
  swift_unknownObjectRetain(v5);
  v0[51] = sub_100513A94(v7, v8, (uint64_t)v13, (uint64_t)v14, v5, v11);
  v15 = (_QWORD *)swift_task_alloc(dword_1013E16EC);
  v0[52] = v15;
  *v15 = v0;
  v15[1] = sub_100862E1C;
  return sub_100513BC4(v0[47]);
}

uint64_t sub_100862E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 416);
  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100864980;
  else
    v3 = sub_100862EC4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100862EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void *v39;
  uint64_t v40;
  uint64_t inited;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v93;
  uint64_t v94;
  void *v95;
  id v96;
  NSURL *v97;
  void *v98;
  void *v99;
  id v100;
  void *v101;
  uint64_t ObjectType;
  uint64_t v103;
  id v104;
  id v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 424);
  if ((v1 & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + *(int *)(*(_QWORD *)(v0 + 368) + 20));
    *(_QWORD *)(v0 + 456) = v4;
    v5 = *(_QWORD *)(v3 + 96);
    *(_QWORD *)(v3 + 96) = v4;
    swift_bridgeObjectRetain_n(v4, 2);
    swift_bridgeObjectRelease(v5);
    if ((v1 & 2) == 0)
    {
      v6 = *(_QWORD *)(v0 + 408);
      sub_1004B84A4(*(_QWORD *)(v0 + 376), type metadata accessor for CRLArchivedObjectMetadataRepresentation);
      swift_release(v6);
      *(_QWORD *)&v7 = swift_bridgeObjectRelease(v4).n128_u64[0];
      goto LABEL_28;
    }
    v15 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + 8);
    *(_QWORD *)(v0 + 464) = v15;
    v16 = *(_QWORD *)(v15 + 16);
    *(_QWORD *)(v0 + 472) = v16;
    if (!v16)
    {
      swift_bridgeObjectRetain(v15);
      v59 = v4;
      goto LABEL_27;
    }
    v17 = *(_QWORD *)(v0 + 352);
    v18 = *(_DWORD *)(v17 + 80);
    *(_DWORD *)(v0 + 528) = v18;
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)(v0 + 480) = v19;
    swift_bridgeObjectRetain(v15);
    v21 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 488) = v21;
      v22 = *(_QWORD *)(v0 + 360);
      v23 = *(_QWORD *)(v0 + 344);
      v25 = *(_QWORD *)(v0 + 296);
      v24 = *(_QWORD *)(v0 + 304);
      v26 = *(_QWORD *)(v0 + 288);
      sub_1008653A0(v20 + ((v18 + 32) & ~(unint64_t)v18) + v19 * v21, v22);
      sub_100552F84(v22 + *(int *)(v23 + 28), v26);
      v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v26, 1, v25);
      v28 = *(_OWORD **)(v0 + 312);
      if ((_DWORD)v27 == 1)
      {
        v29 = *(_QWORD *)(v0 + 288);
        *v28 = xmmword_100EF78C0;
        UnknownStorage.init()(v27);
        sub_1004CB800(v29, (uint64_t *)&unk_1013E16F0);
      }
      else
      {
        sub_100552FCC(*(_QWORD *)(v0 + 288), (uint64_t)v28);
      }
      v30 = *(uint64_t **)(v0 + 312);
      v32 = *v30;
      v31 = v30[1];
      sub_1004BE310(*v30, v31);
      sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
      UUID.init(crl_data:)(v32, v31);
      if (v2)
        break;
      if (*(_QWORD *)(*(_QWORD *)(v0 + 456) + 16) && (v33 = sub_100842EFC(*(_QWORD *)(v0 + 336)), (v34 & 1) != 0))
      {
        v36 = *(_QWORD *)(v0 + 264);
        v35 = *(_QWORD *)(v0 + 272);
        v37 = *(_QWORD *)(v0 + 256);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v37, *(_QWORD *)(*(_QWORD *)(v0 + 456) + 56) + *(_QWORD *)(v35 + 72) * v33, v36);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v36);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v37, 1, v36) != 1)
        {
          v82 = *(uint64_t **)(v0 + 360);
          v83 = *(_QWORD **)(v0 + 248);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
          v84 = v83[7];
          v85 = v83[8];
          v86 = sub_1004BB5A4(v83 + 4, v84);
          v87 = UUID.uuidString.getter(v86);
          v89 = v88;
          v90 = *v82;
          v91 = v82[1];
          v92 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v85 + 24);
          v93 = swift_bridgeObjectRetain(v91);
          v94 = v92(v87, v89, v90, v91, v84, v85, v93);
          *(_QWORD *)(v0 + 496) = v94;
          v95 = (void *)v94;
          swift_bridgeObjectRelease(v91);
          swift_bridgeObjectRelease(v89);
          v96 = objc_allocWithZone((Class)CRLFileIOChannel);
          URL._bridgeToObjectiveC()(v97);
          v99 = v98;
          *(_QWORD *)(v0 + 240) = 0;
          v100 = objc_msgSend(v96, "initForReadingURL:error:", v98, v0 + 240);
          *(_QWORD *)(v0 + 504) = v100;

          v101 = *(void **)(v0 + 240);
          if (v100)
          {
            ObjectType = swift_getObjectType(v95);
            v103 = dword_1013EB67C;
            v104 = v101;
            v105 = v100;
            v106 = (_QWORD *)swift_task_alloc(v103);
            *(_QWORD *)(v0 + 512) = v106;
            *v106 = v0;
            v106[1] = sub_1008640B8;
            return sub_100697B58((uint64_t)v105, ObjectType);
          }
          v108 = *(_QWORD *)(v0 + 456);
          v107 = *(_QWORD *)(v0 + 464);
          v109 = *(_QWORD *)(v0 + 408);
          v13 = *(void **)(v0 + 384);
          v118 = *(_QWORD *)(v0 + 360);
          v119 = *(_QWORD *)(v0 + 376);
          v117 = *(_QWORD *)(v0 + 336);
          v115 = *(_QWORD *)(v0 + 328);
          v116 = *(_QWORD *)(v0 + 320);
          v110 = *(_QWORD *)(v0 + 272);
          v113 = *(_QWORD *)(v0 + 264);
          v114 = *(_QWORD *)(v0 + 280);
          v111 = v101;
          _convertNSErrorToError(_:)(v101);

          swift_willThrow(v112);
          swift_bridgeObjectRelease(v107);
          objc_msgSend(v95, "close", swift_bridgeObjectRelease(v108).n128_f64[0]);
          swift_release(v109);
          swift_unknownObjectRelease(v95);
          (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v114, v113);
          (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v117, v116);
          sub_1004B84A4(v118, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
          v64 = v119;
LABEL_24:
          sub_1004B84A4(v64, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
          goto LABEL_25;
        }
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 56))(*(_QWORD *)(v0 + 256), 1, 1, *(_QWORD *)(v0 + 264));
      }
      sub_1004CB800(*(_QWORD *)(v0 + 256), &qword_1013E04D0);
      if (qword_1013DD708 != -1)
        swift_once(&qword_1013DD708, sub_100A018C8);
      v38 = *(uint64_t **)(v0 + 360);
      swift_beginAccess(&static OS_os_log.crlSerializableObject, v0 + 216, 0, 0);
      v39 = (void *)static OS_os_log.crlSerializableObject;
      v40 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v40, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v42 = v39;
      v43 = UUID.uuidString.getter(v42);
      v45 = v44;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v46 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v46;
      *(_QWORD *)(inited + 32) = v43;
      *(_QWORD *)(inited + 40) = v45;
      v48 = *v38;
      v47 = v38[1];
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v46;
      *(_QWORD *)(inited + 72) = v48;
      *(_QWORD *)(inited + 80) = v47;
      v49 = swift_bridgeObjectRetain(v47);
      v50 = static os_log_type_t.default.getter(v49);
      sub_100A06EBC((uint64_t)v42, &_mh_execute_header, v50, "Skipping writing asset without backing file URL. assetID=%@, assetFilename=%@", 77, 2, inited);
      swift_setDeallocating(inited);
      v51 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v51);

      v52 = *(_QWORD *)(v0 + 472);
      v53 = *(_QWORD *)(v0 + 360);
      v54 = *(_QWORD *)(v0 + 488) + 1;
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
      sub_1004B84A4(v53, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      if (v54 == v52)
      {
        v59 = *(_QWORD *)(v0 + 456);
LABEL_27:
        swift_bridgeObjectRelease(v59);
        v72 = *(_QWORD *)(v0 + 408);
        v73 = *(_QWORD *)(v0 + 376);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 464));
        swift_release(v72);
        sub_1004B84A4(v73, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
LABEL_28:
        v74 = *(_QWORD *)(v0 + 376);
        v75 = *(void **)(v0 + 384);
        v76 = *(_QWORD *)(v0 + 360);
        v77 = *(_QWORD *)(v0 + 336);
        v78 = *(_QWORD *)(v0 + 312);
        v80 = *(_QWORD *)(v0 + 280);
        v79 = *(_QWORD *)(v0 + 288);
        v81 = *(_QWORD *)(v0 + 256);
        objc_msgSend(v75, "close", v7);
        swift_unknownObjectRelease(v75);
        swift_task_dealloc(v74);
        swift_task_dealloc(v76);
        swift_task_dealloc(v77);
        swift_task_dealloc(v78);
        swift_task_dealloc(v79);
        swift_task_dealloc(v80);
        swift_task_dealloc(v81);
        v71 = *(uint64_t (**)(void))(v0 + 8);
        return v71();
      }
      v2 = 0;
      v19 = *(_QWORD *)(v0 + 480);
      v21 = *(_QWORD *)(v0 + 488) + 1;
      LOBYTE(v18) = *(_BYTE *)(v0 + 528);
      v20 = *(_QWORD *)(v0 + 464);
    }
    v61 = *(_QWORD *)(v0 + 456);
    v60 = *(_QWORD *)(v0 + 464);
    v62 = *(_QWORD *)(v0 + 376);
    v13 = *(void **)(v0 + 384);
    v63 = *(_QWORD *)(v0 + 360);
    swift_release(*(_QWORD *)(v0 + 408));
    swift_bridgeObjectRelease(v61);
    sub_1004B84A4(v63, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    swift_bridgeObjectRelease(v60);
    v64 = v62;
    goto LABEL_24;
  }
  v8 = *(_QWORD **)(v0 + 248);
  v9 = v8[7];
  v10 = v8[8];
  sub_1004BB5A4(v8 + 4, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  *(_QWORD *)(v0 + 432) = v11;
  if (v2)
  {
    v12 = *(_QWORD *)(v0 + 408);
    v13 = *(void **)(v0 + 384);
    sub_1004B84A4(*(_QWORD *)(v0 + 376), type metadata accessor for CRLArchivedObjectMetadataRepresentation);
    *(_QWORD *)&v14 = swift_release(v12).n128_u64[0];
LABEL_25:
    objc_msgSend(v13, "close", v14);
    swift_unknownObjectRelease(v13);
    v65 = *(_QWORD *)(v0 + 360);
    v66 = *(_QWORD *)(v0 + 336);
    v67 = *(_QWORD *)(v0 + 312);
    v69 = *(_QWORD *)(v0 + 280);
    v68 = *(_QWORD *)(v0 + 288);
    v70 = *(_QWORD *)(v0 + 256);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    v71 = *(uint64_t (**)(void))(v0 + 8);
    return v71();
  }
  v55 = v11;
  v56 = (_QWORD *)swift_task_alloc(dword_1013F5FAC);
  *(_QWORD *)(v0 + 440) = v56;
  *v56 = v0;
  v56[1] = sub_1008637CC;
  v57 = *(_QWORD *)(v0 + 376);
  v56[3] = v55;
  v56[4] = v57;
  return swift_task_switch(sub_100864D3C, 0, 0);
}

uint64_t sub_1008637CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 440);
  *(_QWORD *)(*(_QWORD *)v1 + 448) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100864A60;
  else
    v3 = sub_100863874;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100863874()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  uint64_t inited;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v85;
  uint64_t v86;
  void *v87;
  id v88;
  NSURL *v89;
  void *v90;
  void *v91;
  id v92;
  void *v93;
  uint64_t ObjectType;
  uint64_t v95;
  id v96;
  id v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v1 = *(void **)(v0 + 432);
  objc_msgSend(v1, "close");
  swift_unknownObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + *(int *)(*(_QWORD *)(v0 + 368) + 20));
  *(_QWORD *)(v0 + 456) = v5;
  v6 = *(_QWORD *)(v4 + 96);
  *(_QWORD *)(v4 + 96) = v5;
  swift_bridgeObjectRetain_n(v5, 2);
  swift_bridgeObjectRelease(v6);
  if ((v3 & 2) == 0)
  {
    v7 = *(_QWORD *)(v0 + 408);
    sub_1004B84A4(*(_QWORD *)(v0 + 376), type metadata accessor for CRLArchivedObjectMetadataRepresentation);
    swift_release(v7);
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(v5).n128_u64[0];
    goto LABEL_23;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 376) + 8);
  *(_QWORD *)(v0 + 464) = v9;
  v10 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v0 + 472) = v10;
  if (!v10)
  {
    swift_bridgeObjectRetain(v9);
    v49 = v5;
    goto LABEL_22;
  }
  v11 = *(_QWORD *)(v0 + 352);
  v12 = *(_DWORD *)(v11 + 80);
  *(_DWORD *)(v0 + 528) = v12;
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v0 + 480) = v13;
  swift_bridgeObjectRetain(v9);
  v15 = 0;
  while (1)
  {
    *(_QWORD *)(v0 + 488) = v15;
    v16 = *(_QWORD *)(v0 + 360);
    v17 = *(_QWORD *)(v0 + 344);
    v18 = *(_QWORD *)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 304);
    v20 = *(_QWORD *)(v0 + 288);
    sub_1008653A0(v14 + ((v12 + 32) & ~(unint64_t)v12) + v13 * v15, v16);
    sub_100552F84(v16 + *(int *)(v17 + 28), v20);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18);
    v22 = *(_OWORD **)(v0 + 312);
    if ((_DWORD)v21 == 1)
    {
      v23 = *(_QWORD *)(v0 + 288);
      *v22 = xmmword_100EF78C0;
      UnknownStorage.init()(v21);
      sub_1004CB800(v23, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_100552FCC(*(_QWORD *)(v0 + 288), (uint64_t)v22);
    }
    v24 = *(uint64_t **)(v0 + 312);
    v25 = *v24;
    v26 = v24[1];
    sub_1004BE310(*v24, v26);
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLProto_Data);
    UUID.init(crl_data:)(v25, v26);
    if (v2)
    {
      v51 = *(_QWORD *)(v0 + 456);
      v50 = *(_QWORD *)(v0 + 464);
      v53 = *(_QWORD *)(v0 + 376);
      v52 = *(void **)(v0 + 384);
      v54 = *(_QWORD *)(v0 + 360);
      swift_release(*(_QWORD *)(v0 + 408));
      swift_bridgeObjectRelease(v51);
      sub_1004B84A4(v54, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      swift_bridgeObjectRelease(v50);
      goto LABEL_20;
    }
    if (*(_QWORD *)(*(_QWORD *)(v0 + 456) + 16) && (v27 = sub_100842EFC(*(_QWORD *)(v0 + 336)), (v28 & 1) != 0))
    {
      v29 = *(_QWORD *)(v0 + 264);
      v30 = *(_QWORD *)(v0 + 272);
      v31 = *(_QWORD *)(v0 + 256);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 16))(v31, *(_QWORD *)(*(_QWORD *)(v0 + 456) + 56) + *(_QWORD *)(v30 + 72) * v27, v29);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v31, 1, v29) != 1)
      {
        v73 = *(uint64_t **)(v0 + 360);
        v74 = *(_QWORD **)(v0 + 248);
        v75 = v74 + 4;
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
        v76 = v74[7];
        v77 = v74[8];
        v78 = sub_1004BB5A4(v75, v76);
        v79 = UUID.uuidString.getter(v78);
        v81 = v80;
        v83 = *v73;
        v82 = v73[1];
        v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v77 + 24);
        v85 = swift_bridgeObjectRetain(v82);
        v86 = v84(v79, v81, v83, v82, v76, v77, v85);
        *(_QWORD *)(v0 + 496) = v86;
        v87 = (void *)v86;
        swift_bridgeObjectRelease(v82);
        swift_bridgeObjectRelease(v81);
        v88 = objc_allocWithZone((Class)CRLFileIOChannel);
        URL._bridgeToObjectiveC()(v89);
        v91 = v90;
        *(_QWORD *)(v0 + 240) = 0;
        v92 = objc_msgSend(v88, "initForReadingURL:error:", v90, v0 + 240);
        *(_QWORD *)(v0 + 504) = v92;

        v93 = *(void **)(v0 + 240);
        if (v92)
        {
          ObjectType = swift_getObjectType(v87);
          v95 = dword_1013EB67C;
          v96 = v93;
          v97 = v92;
          v98 = (_QWORD *)swift_task_alloc(v95);
          *(_QWORD *)(v0 + 512) = v98;
          *v98 = v0;
          v98[1] = sub_1008640B8;
          return sub_100697B58((uint64_t)v97, ObjectType);
        }
        v100 = *(_QWORD *)(v0 + 456);
        v99 = *(_QWORD *)(v0 + 464);
        v53 = *(_QWORD *)(v0 + 376);
        v52 = *(void **)(v0 + 384);
        v109 = *(_QWORD *)(v0 + 336);
        v110 = *(_QWORD *)(v0 + 360);
        v106 = *(_QWORD *)(v0 + 408);
        v107 = *(_QWORD *)(v0 + 328);
        v108 = *(_QWORD *)(v0 + 320);
        v101 = *(_QWORD *)(v0 + 272);
        v105 = *(_QWORD *)(v0 + 280);
        v102 = *(_QWORD *)(v0 + 264);
        v103 = v93;
        _convertNSErrorToError(_:)(v93);

        swift_willThrow(v104);
        swift_bridgeObjectRelease(v99);
        objc_msgSend(v87, "close", swift_bridgeObjectRelease(v100).n128_f64[0]);
        swift_release(v106);
        swift_unknownObjectRelease(v87);
        (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v105, v102);
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v109, v108);
        sub_1004B84A4(v110, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
LABEL_20:
        sub_1004B84A4(v53, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
        objc_msgSend(v52, "close");
        swift_unknownObjectRelease(v52);
        v55 = *(_QWORD *)(v0 + 360);
        v56 = *(_QWORD *)(v0 + 336);
        v57 = *(_QWORD *)(v0 + 312);
        v59 = *(_QWORD *)(v0 + 280);
        v58 = *(_QWORD *)(v0 + 288);
        v60 = *(_QWORD *)(v0 + 256);
        swift_task_dealloc(*(_QWORD *)(v0 + 376));
        swift_task_dealloc(v55);
        swift_task_dealloc(v56);
        swift_task_dealloc(v57);
        swift_task_dealloc(v58);
        swift_task_dealloc(v59);
        swift_task_dealloc(v60);
        v61 = *(uint64_t (**)(void))(v0 + 8);
        return v61();
      }
    }
    else
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 56))(*(_QWORD *)(v0 + 256), 1, 1, *(_QWORD *)(v0 + 264));
    }
    sub_1004CB800(*(_QWORD *)(v0 + 256), &qword_1013E04D0);
    if (qword_1013DD708 != -1)
      swift_once(&qword_1013DD708, sub_100A018C8);
    v32 = *(uint64_t **)(v0 + 360);
    swift_beginAccess(&static OS_os_log.crlSerializableObject, v0 + 216, 0, 0);
    v33 = (void *)static OS_os_log.crlSerializableObject;
    v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v34, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    v36 = v33;
    v37 = UUID.uuidString.getter(v36);
    v39 = v38;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v40 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v40;
    *(_QWORD *)(inited + 32) = v37;
    *(_QWORD *)(inited + 40) = v39;
    v42 = *v32;
    v41 = v32[1];
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v40;
    *(_QWORD *)(inited + 72) = v42;
    *(_QWORD *)(inited + 80) = v41;
    v43 = swift_bridgeObjectRetain(v41);
    v44 = static os_log_type_t.default.getter(v43);
    sub_100A06EBC((uint64_t)v36, &_mh_execute_header, v44, "Skipping writing asset without backing file URL. assetID=%@, assetFilename=%@", 77, 2, inited);
    swift_setDeallocating(inited);
    v45 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v45);

    v46 = *(_QWORD *)(v0 + 472);
    v47 = *(_QWORD *)(v0 + 360);
    v48 = *(_QWORD *)(v0 + 488) + 1;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
    sub_1004B84A4(v47, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    if (v48 == v46)
      break;
    v2 = 0;
    v13 = *(_QWORD *)(v0 + 480);
    v15 = *(_QWORD *)(v0 + 488) + 1;
    LOBYTE(v12) = *(_BYTE *)(v0 + 528);
    v14 = *(_QWORD *)(v0 + 464);
  }
  v49 = *(_QWORD *)(v0 + 456);
LABEL_22:
  swift_bridgeObjectRelease(v49);
  v62 = *(_QWORD *)(v0 + 408);
  v63 = *(_QWORD *)(v0 + 376);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 464));
  swift_release(v62);
  sub_1004B84A4(v63, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
LABEL_23:
  v64 = *(_QWORD *)(v0 + 376);
  v65 = *(void **)(v0 + 384);
  v66 = *(_QWORD *)(v0 + 360);
  v67 = *(_QWORD *)(v0 + 336);
  v68 = *(_QWORD *)(v0 + 312);
  v70 = *(_QWORD *)(v0 + 280);
  v69 = *(_QWORD *)(v0 + 288);
  v71 = *(_QWORD *)(v0 + 256);
  objc_msgSend(v65, "close", v8);
  swift_unknownObjectRelease(v65);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  v61 = *(uint64_t (**)(void))(v0 + 8);
  return v61();
}

uint64_t sub_1008640B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 512);
  *(_QWORD *)(*(_QWORD *)v1 + 520) = v0;
  swift_task_dealloc(v3);
  v4 = (void *)v2[63];
  if (v0)
  {
    v5 = v2[57];
    swift_bridgeObjectRelease(v2[58]);

    swift_bridgeObjectRelease(v5);
    v6 = sub_100864B6C;
  }
  else
  {

    v6 = sub_100864184;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100864184()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  void *v40;
  uint64_t v41;
  uint64_t inited;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v79;
  uint64_t v80;
  void *v81;
  id v82;
  NSURL *v83;
  void *v84;
  void *v85;
  id v86;
  void *v87;
  uint64_t ObjectType;
  uint64_t v89;
  id v90;
  id v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v1 = *(void **)(v0 + 496);
  v2 = *(void **)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 264);
  objc_msgSend(v2, "close");

  objc_msgSend(v1, "close");
  swift_unknownObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v0 + 520);
  v7 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 488) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
  sub_1004B84A4(v8, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  if (v9 != v7)
  {
    while (1)
    {
      v21 = *(_QWORD *)(v0 + 480);
      v22 = *(_QWORD *)(v0 + 488) + 1;
      *(_QWORD *)(v0 + 488) = v22;
      v23 = *(_QWORD *)(v0 + 360);
      v24 = *(_QWORD *)(v0 + 344);
      v26 = *(_QWORD *)(v0 + 296);
      v25 = *(_QWORD *)(v0 + 304);
      v27 = *(_QWORD *)(v0 + 288);
      sub_1008653A0(*(_QWORD *)(v0 + 464)+ ((*(unsigned __int8 *)(v0 + 528) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 528))+ v21 * v22, v23);
      sub_100552F84(v23 + *(int *)(v24 + 28), v27);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v26);
      v29 = *(_OWORD **)(v0 + 312);
      if ((_DWORD)v28 == 1)
      {
        v30 = *(_QWORD *)(v0 + 288);
        *v29 = xmmword_100EF78C0;
        UnknownStorage.init()(v28);
        sub_1004CB800(v30, (uint64_t *)&unk_1013E16F0);
      }
      else
      {
        sub_100552FCC(*(_QWORD *)(v0 + 288), (uint64_t)v29);
      }
      v31 = *(uint64_t **)(v0 + 312);
      v32 = *v31;
      v33 = v31[1];
      sub_1004BE310(*v31, v33);
      sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLProto_Data);
      UUID.init(crl_data:)(v32, v33);
      if (v6)
        break;
      if (*(_QWORD *)(*(_QWORD *)(v0 + 456) + 16) && (v34 = sub_100842EFC(*(_QWORD *)(v0 + 336)), (v35 & 1) != 0))
      {
        v36 = *(_QWORD *)(v0 + 264);
        v37 = *(_QWORD *)(v0 + 272);
        v38 = *(_QWORD *)(v0 + 256);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v37 + 16))(v38, *(_QWORD *)(*(_QWORD *)(v0 + 456) + 56) + *(_QWORD *)(v37 + 72) * v34, v36);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) != 1)
        {
          v68 = *(uint64_t **)(v0 + 360);
          v69 = *(_QWORD **)(v0 + 248);
          (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
          v70 = v69[7];
          v71 = v69[8];
          v72 = sub_1004BB5A4(v69 + 4, v70);
          v73 = UUID.uuidString.getter(v72);
          v75 = v74;
          v76 = *v68;
          v77 = v68[1];
          v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v71 + 24);
          v79 = swift_bridgeObjectRetain(v77);
          v80 = v78(v73, v75, v76, v77, v70, v71, v79);
          *(_QWORD *)(v0 + 496) = v80;
          v81 = (void *)v80;
          swift_bridgeObjectRelease(v77);
          swift_bridgeObjectRelease(v75);
          v82 = objc_allocWithZone((Class)CRLFileIOChannel);
          URL._bridgeToObjectiveC()(v83);
          v85 = v84;
          *(_QWORD *)(v0 + 240) = 0;
          v86 = objc_msgSend(v82, "initForReadingURL:error:", v84, v0 + 240);
          *(_QWORD *)(v0 + 504) = v86;

          v87 = *(void **)(v0 + 240);
          if (v86)
          {
            ObjectType = swift_getObjectType(v81);
            v89 = dword_1013EB67C;
            v90 = v87;
            v91 = v86;
            v92 = (_QWORD *)swift_task_alloc(v89);
            *(_QWORD *)(v0 + 512) = v92;
            *v92 = v0;
            v92[1] = sub_1008640B8;
            return sub_100697B58((uint64_t)v91, ObjectType);
          }
          v94 = *(_QWORD *)(v0 + 456);
          v93 = *(_QWORD *)(v0 + 464);
          v58 = *(_QWORD *)(v0 + 376);
          v59 = *(void **)(v0 + 384);
          v104 = *(_QWORD *)(v0 + 360);
          v103 = *(_QWORD *)(v0 + 336);
          v100 = *(_QWORD *)(v0 + 408);
          v101 = *(_QWORD *)(v0 + 328);
          v102 = *(_QWORD *)(v0 + 320);
          v95 = *(_QWORD *)(v0 + 272);
          v98 = *(_QWORD *)(v0 + 264);
          v99 = *(_QWORD *)(v0 + 280);
          v96 = v87;
          _convertNSErrorToError(_:)(v87);

          swift_willThrow(v97);
          swift_bridgeObjectRelease(v93);
          objc_msgSend(v81, "close", swift_bridgeObjectRelease(v94).n128_f64[0]);
          swift_release(v100);
          swift_unknownObjectRelease(v81);
          (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v99, v98);
          (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v103, v102);
          sub_1004B84A4(v104, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
LABEL_17:
          sub_1004B84A4(v58, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
          objc_msgSend(v59, "close");
          swift_unknownObjectRelease(v59);
          v61 = *(_QWORD *)(v0 + 360);
          v62 = *(_QWORD *)(v0 + 336);
          v63 = *(_QWORD *)(v0 + 312);
          v65 = *(_QWORD *)(v0 + 280);
          v64 = *(_QWORD *)(v0 + 288);
          v66 = *(_QWORD *)(v0 + 256);
          swift_task_dealloc(*(_QWORD *)(v0 + 376));
          swift_task_dealloc(v61);
          swift_task_dealloc(v62);
          swift_task_dealloc(v63);
          swift_task_dealloc(v64);
          swift_task_dealloc(v65);
          swift_task_dealloc(v66);
          v20 = *(uint64_t (**)(void))(v0 + 8);
          return v20();
        }
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 272) + 56))(*(_QWORD *)(v0 + 256), 1, 1, *(_QWORD *)(v0 + 264));
      }
      sub_1004CB800(*(_QWORD *)(v0 + 256), &qword_1013E04D0);
      if (qword_1013DD708 != -1)
        swift_once(&qword_1013DD708, sub_100A018C8);
      v39 = *(uint64_t **)(v0 + 360);
      swift_beginAccess(&static OS_os_log.crlSerializableObject, v0 + 216, 0, 0);
      v40 = (void *)static OS_os_log.crlSerializableObject;
      v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v41, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v43 = v40;
      v44 = UUID.uuidString.getter(v43);
      v46 = v45;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v47 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v47;
      *(_QWORD *)(inited + 32) = v44;
      *(_QWORD *)(inited + 40) = v46;
      v49 = *v39;
      v48 = v39[1];
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v47;
      *(_QWORD *)(inited + 72) = v49;
      *(_QWORD *)(inited + 80) = v48;
      v50 = swift_bridgeObjectRetain(v48);
      v51 = static os_log_type_t.default.getter(v50);
      sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v51, "Skipping writing asset without backing file URL. assetID=%@, assetFilename=%@", 77, 2, inited);
      swift_setDeallocating(inited);
      v52 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 2, v52);

      v53 = *(_QWORD *)(v0 + 472);
      v54 = *(_QWORD *)(v0 + 360);
      v55 = *(_QWORD *)(v0 + 488) + 1;
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 320));
      sub_1004B84A4(v54, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      v6 = 0;
      if (v55 == v53)
        goto LABEL_2;
    }
    v57 = *(_QWORD *)(v0 + 456);
    v56 = *(_QWORD *)(v0 + 464);
    v58 = *(_QWORD *)(v0 + 376);
    v59 = *(void **)(v0 + 384);
    v60 = *(_QWORD *)(v0 + 360);
    swift_release(*(_QWORD *)(v0 + 408));
    swift_bridgeObjectRelease(v57);
    sub_1004B84A4(v60, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    swift_bridgeObjectRelease(v56);
    goto LABEL_17;
  }
LABEL_2:
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 456));
  v10 = *(_QWORD *)(v0 + 408);
  v11 = *(_QWORD *)(v0 + 376);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 464));
  swift_release(v10);
  sub_1004B84A4(v11, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
  v12 = *(_QWORD *)(v0 + 376);
  v13 = *(void **)(v0 + 384);
  v14 = *(_QWORD *)(v0 + 360);
  v15 = *(_QWORD *)(v0 + 336);
  v16 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 256);
  objc_msgSend(v13, "close");
  swift_unknownObjectRelease(v13);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_100864980()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 384);
  objc_msgSend(v1, "close", swift_release(*(_QWORD *)(v0 + 408)).n128_f64[0]);
  swift_unknownObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 280);
  v5 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100864A60()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 376);
  v3 = *(void **)(v0 + 384);
  objc_msgSend(v1, "close");
  swift_unknownObjectRelease(v1);
  swift_release(v2);
  sub_1004B84A4(v4, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
  objc_msgSend(v3, "close");
  swift_unknownObjectRelease(v3);
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100864B6C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(void **)(v0 + 496);
  v1 = *(void **)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(void **)(v0 + 384);
  v18 = *(_QWORD *)(v0 + 360);
  v19 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 328);
  v16 = *(_QWORD *)(v0 + 320);
  v17 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 272);
  v7 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 264);
  objc_msgSend(v1, "close");

  objc_msgSend(v2, "close");
  swift_release(v3);
  swift_unknownObjectRelease(v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v16);
  sub_1004B84A4(v18, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  sub_1004B84A4(v19, type metadata accessor for CRLArchivedObjectMetadataRepresentation);
  objc_msgSend(v4, "close");
  swift_unknownObjectRelease(v4);
  v9 = *(_QWORD *)(v0 + 360);
  v10 = *(_QWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 312);
  v13 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100864CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch(sub_100864D3C, 0, 0);
}

void sub_100864D3C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v2 = sub_1008653E4();
  *(_QWORD *)(v0 + 40) = Message.serializedData(partial:)(0, v1, v2);
  *(_QWORD *)(v0 + 48) = v3;
  __asm { BR              X11 }
}

uint64_t sub_100864F3C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t **v5;

  v2 = (*v1)[10];
  v3 = *v1;
  v3[11] = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100865144, 0, 0);
  v5 = (uint64_t **)swift_task_alloc(dword_1013EB66C);
  v3[12] = (uint64_t)v5;
  *v5 = v3;
  v5[1] = (uint64_t *)sub_100865024;
  return sub_100696E20(v3[5], v3[6], v3[9]);
}

uint64_t sub_100865024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1008651BC;
  else
    v3 = sub_1008650CC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1008650CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_1004BBBC8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_1004BBBC8(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100865144()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_1004BBBC8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_1004BBBC8(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008651BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  sub_1004BBBC8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  sub_1004BBBC8(v1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100865234()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t type metadata accessor for CRLSerializableObjectWriteCoordinator()
{
  return objc_opt_self(_TtC8Freeform37CRLSerializableObjectWriteCoordinator);
}

id sub_100865298(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  id v14;

  v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v5 = v4;
  v14 = 0;
  v6 = objc_msgSend(v2, "initForReadingURL:error:", v4, &v14);

  v7 = v14;
  if (v6)
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v14;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow();
    v12 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

uint64_t sub_1008653A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1008653E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F5FB0;
  if (!qword_1013F5FB0)
  {
    v1 = type metadata accessor for CRLProto_ObjectMetadata(255);
    result = swift_getWitnessTable(&unk_100F24BB8, v1);
    atomic_store(result, (unint64_t *)&qword_1013F5FB0);
  }
  return result;
}

void sub_100865454(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  CKRecordID v15;
  Swift::String v16;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLWPStickyNoteItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetStickyPreset.swift", 97, 2, 26, "Unable to retrieve sticky note board item.", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve sticky note board item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetStickyPreset.swift", 97, 2u, 26, (uint64_t)"Unable to retrieve sticky note board item.", 42, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    sub_100D3EA10(*(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform25CRLCommandSetStickyPreset_preset));
    v14 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_100865678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform25CRLCommandSetStickyPreset_id;
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_1008656B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetStickyPreset(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100865724()
{
  return type metadata accessor for CRLCommandSetStickyPreset(0);
}

uint64_t type metadata accessor for CRLCommandSetStickyPreset(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F5FE0;
  if (!qword_1013F5FE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetStickyPreset);
  return result;
}

uint64_t sub_100865768(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F10AF0;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

id sub_1008657DC(uint64_t a1)
{
  void *v1;
  void *v2;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  id v21;
  _QWORD v23[5];
  _BYTE v24[40];

  v2 = v1;
  sub_10057B588(a1, (uint64_t)v23);
  v4 = *(double *)v23;
  v5 = *(double *)&v23[1];
  v6 = *(double *)&v23[2];
  v7 = *(double *)&v23[3];
  v8 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v8, "flush");
  objc_msgSend(v8, "begin");
  v9 = objc_msgSend(v2, "snapshotViewAfterScreenUpdates:", 0);
  if (!v9)
    return 0;
  v10 = v9;
  v11 = objc_msgSend(v9, "layer");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v2, "layer");
    if (v13)
    {
      v14 = v13;
      sub_10057B588(a1, (uint64_t)v24);
      if (v24[32] == 1)
      {
        objc_msgSend(v14, "bounds");
        v4 = v15;
        v5 = v16;
        v6 = v17;
        v7 = v18;
      }
      v19 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
      objc_msgSend(v19, "setFrame:", v4, v5, v6, v7);
      objc_msgSend(v19, "setMasksToBounds:", 1);
      v20 = objc_msgSend(v14, "superlayer");
      objc_msgSend(v20, "addSublayer:", v19);

      objc_msgSend(v12, "frame");
      objc_msgSend(v12, "setFrame:", v4, -v5);
      objc_msgSend(v19, "addSublayer:", v12);
      v21 = v19;
      objc_msgSend(v8, "commit");

    }
    else
    {
      v19 = 0;
    }

  }
  else
  {
    v19 = 0;
  }

  return v19;
}

__n128 initializeBufferWithCopyOfBuffer for CRLRectData(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLRectData()
{
  return &type metadata for CRLRectData;
}

ValueMetadata *type metadata accessor for CRLSizeData()
{
  return &type metadata for CRLSizeData;
}

ValueMetadata *type metadata accessor for CRLPointData()
{
  return &type metadata for CRLPointData;
}

unint64_t sub_100865A34()
{
  unint64_t result;

  result = qword_1013F5FF0;
  if (!qword_1013F5FF0)
  {
    result = swift_getWitnessTable(&unk_100F10BEC, &type metadata for CRLPointData);
    atomic_store(result, (unint64_t *)&qword_1013F5FF0);
  }
  return result;
}

void sub_100865A78(uint64_t a1@<X0>, float *a2@<X8>)
{
  sub_100865EF4(a1, type metadata accessor for CRLProto_Point, &qword_1013F6038, (uint64_t)&unk_100F263F0, a2);
}

uint64_t sub_100865AA4(uint64_t a1)
{
  float *v1;

  return sub_100865BD8(*v1, v1[1], a1, type metadata accessor for CRLProto_Point, &qword_1013F6038, (uint64_t)&unk_100F263F0);
}

void sub_100865AD8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10086603C(a1, type metadata accessor for CRLProto_Point, &qword_1013F6038, (uint64_t)&unk_100F263F0, a2);
}

uint64_t sub_100865B04(_QWORD *a1)
{
  float *v1;

  return sub_100865CFC(a1, type metadata accessor for CRLProto_Point, &qword_1013F6038, (uint64_t)&unk_100F263F0, *v1, v1[1]);
}

uint64_t sub_100865B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_100866E08, (uint64_t (*)(void))sub_100866E4C);
}

unint64_t sub_100865B4C()
{
  unint64_t result;

  result = qword_1013F5FF8;
  if (!qword_1013F5FF8)
  {
    result = swift_getWitnessTable(&unk_100F10B64, &type metadata for CRLPointData);
    atomic_store(result, (unint64_t *)&qword_1013F5FF8);
  }
  return result;
}

unint64_t sub_100865B94()
{
  unint64_t result;

  result = qword_1013F6000;
  if (!qword_1013F6000)
  {
    result = swift_getWitnessTable(&unk_100F10D34, &type metadata for CRLSizeData);
    atomic_store(result, (unint64_t *)&qword_1013F6000);
  }
  return result;
}

uint64_t sub_100865BD8(float a1, float a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  v12 = a4(0);
  __chkstk_darwin(v12);
  v14 = (float *)((char *)&v22 - v13);
  UnknownStorage.init()(v15);
  *v14 = a1;
  v14[1] = a2;
  v16 = sub_1004B7878(a5, a4, a6);
  v17 = Message.serializedData(partial:)(0, v12, v16);
  v19 = v18;
  result = sub_1004B84A4((uint64_t)v14, a4);
  if (!v6)
  {
    v21 = dispatch thunk of CREncoder.valueContainer()(result);
    dispatch thunk of CREncoder.CRValueContainer.encode(_:)(v17, v19);
    swift_release(v21);
    return sub_1004BBBC8(v17, v19);
  }
  return result;
}

uint64_t sub_100865CFC(_QWORD *a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, float a5, float a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  float *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  v13 = a2(0);
  __chkstk_darwin(v13);
  v15 = (float *)((char *)&v28[-1] - v14);
  UnknownStorage.init()(v16);
  *v15 = a5;
  v15[1] = a6;
  v17 = sub_1004B7878(a3, a2, a4);
  v18 = Message.serializedData(partial:)(0, v13, v17);
  v20 = v19;
  result = sub_1004B84A4((uint64_t)v15, a2);
  if (!v6)
  {
    v22 = a1[3];
    v23 = a1[4];
    sub_1004BB5A4(a1, v22);
    dispatch thunk of Encoder.singleValueContainer()(v29, v22, v23);
    v28[0] = v18;
    v28[1] = v20;
    v24 = v30;
    v25 = v31;
    sub_1004CB9AC((uint64_t)v29, v30);
    v26 = sub_100587C2C();
    dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)(v28, &type metadata for Data, v26, v24, v25);
    sub_1004BBBC8(v18, v20);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v29);
  }
  return result;
}

Swift::Int sub_100865E5C(float a1, float a2)
{
  Swift::UInt32 v4;
  Swift::UInt32 v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, 0);
  if ((LODWORD(a1) & 0x7FFFFFFF) != 0)
    v4 = LODWORD(a1);
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((LODWORD(a2) & 0x7FFFFFFF) != 0)
    v5 = LODWORD(a2);
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

void sub_100865EC8(uint64_t a1@<X0>, float *a2@<X8>)
{
  sub_100865EF4(a1, type metadata accessor for CRLProto_Size, &qword_1013F6030, (uint64_t)&unk_100F26288, a2);
}

void sub_100865EF4(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, unint64_t *a3@<X4>, uint64_t a4@<X5>, float *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  float v17;
  int v18;
  int v19;

  v11 = dispatch thunk of CRDecoder.valueContainer()();
  if (v5)
  {
    swift_release(a1);
  }
  else
  {
    v12 = v11;
    v13 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
    v15 = v14;
    v16 = swift_release(v12);
    v17 = sub_1008667AC(v13, v15, a2, a3, a4, v16);
    v19 = v18;
    sub_1004BBBC8(v13, v15);
    swift_release(a1);
    *a5 = v17;
    *((_DWORD *)a5 + 1) = v19;
  }
}

uint64_t sub_100865FE0(uint64_t a1)
{
  float *v1;

  return sub_100865BD8(*v1, v1[1], a1, type metadata accessor for CRLProto_Size, &qword_1013F6030, (uint64_t)&unk_100F26288);
}

void sub_100866010(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10086603C(a1, type metadata accessor for CRLProto_Size, &qword_1013F6030, (uint64_t)&unk_100F26288, a2);
}

void sub_10086603C(_QWORD *a1@<X0>, uint64_t (*a2)(uint64_t)@<X3>, unint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  float v7;
  int v8;

  v7 = sub_100866930(a1, a2, a3, a4);
  if (!v5)
  {
    *(float *)a5 = v7;
    *(_DWORD *)(a5 + 4) = v8;
  }
}

uint64_t sub_100866070(_QWORD *a1)
{
  float *v1;

  return sub_100865CFC(a1, type metadata accessor for CRLProto_Size, &qword_1013F6030, (uint64_t)&unk_100F26288, *v1, v1[1]);
}

BOOL sub_1008660A0(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::Int sub_1008660CC()
{
  float *v0;

  return sub_100865E5C(*v0, v0[1]);
}

void sub_1008660D4()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;
  Swift::UInt32 v2;
  Swift::UInt32 v3;

  v1 = v0[1];
  if ((*v0 & 0x7FFFFFFF) != 0)
    v2 = *v0;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((v1 & 0x7FFFFFFF) != 0)
    v3 = v1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
}

Swift::Int sub_100866118(uint64_t a1)
{
  Swift::UInt32 *v1;
  Swift::UInt32 v2;
  Swift::UInt32 v3;
  Swift::UInt32 v4;
  Swift::UInt32 v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v7, a1);
  if ((v2 & 0x7FFFFFFF) != 0)
    v4 = v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((v3 & 0x7FFFFFFF) != 0)
    v5 = v3;
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

uint64_t sub_100866174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_100866DC4, (uint64_t (*)(void))sub_1008661F4);
}

uint64_t sub_100866188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10;
  uint64_t v11;

  v10 = a5();
  v11 = a6();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v10, v11);
}

unint64_t sub_1008661F4()
{
  unint64_t result;

  result = qword_1013F6008;
  if (!qword_1013F6008)
  {
    result = swift_getWitnessTable(&unk_100F10D0C, &type metadata for CRLSizeData);
    atomic_store(result, (unint64_t *)&qword_1013F6008);
  }
  return result;
}

unint64_t sub_10086623C()
{
  unint64_t result;

  result = qword_1013F6010;
  if (!qword_1013F6010)
  {
    result = swift_getWitnessTable(&unk_100F10C6C, &type metadata for CRLSizeData);
    atomic_store(result, (unint64_t *)&qword_1013F6010);
  }
  return result;
}

unint64_t sub_100866284()
{
  unint64_t result;

  result = qword_1013F6018;
  if (!qword_1013F6018)
  {
    result = swift_getWitnessTable(&unk_100F10E3C, &type metadata for CRLRectData);
    atomic_store(result, (unint64_t *)&qword_1013F6018);
  }
  return result;
}

uint64_t sub_1008662C8(float a1, float a2, float a3, float a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  float *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v9 = type metadata accessor for CRLProto_Rect(0);
  __chkstk_darwin(v9);
  v11 = (float *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  UnknownStorage.init()(v12);
  *v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  v11[3] = a4;
  v13 = sub_1004B7878(&qword_1013F6028, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26120);
  v14 = Message.serializedData(partial:)(0, v9, v13);
  v16 = v15;
  result = sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Rect);
  if (!v4)
  {
    v18 = dispatch thunk of CREncoder.valueContainer()(result);
    dispatch thunk of CREncoder.CRValueContainer.encode(_:)(v14, v16);
    swift_release(v18);
    return sub_1004BBBC8(v14, v16);
  }
  return result;
}

uint64_t sub_100866408(_QWORD *a1, float a2, float a3, float a4, float a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  float *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v11 = type metadata accessor for CRLProto_Rect(0);
  __chkstk_darwin(v11);
  v13 = (float *)((char *)&v26[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  UnknownStorage.init()(v14);
  *v13 = a2;
  v13[1] = a3;
  v13[2] = a4;
  v13[3] = a5;
  v15 = sub_1004B7878(&qword_1013F6028, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26120);
  v16 = Message.serializedData(partial:)(0, v11, v15);
  v18 = v17;
  result = sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_Rect);
  if (!v5)
  {
    v20 = a1[3];
    v21 = a1[4];
    sub_1004BB5A4(a1, v20);
    dispatch thunk of Encoder.singleValueContainer()(v27, v20, v21);
    v26[0] = v16;
    v26[1] = v18;
    v22 = v28;
    v23 = v29;
    sub_1004CB9AC((uint64_t)v27, v28);
    v24 = sub_100587C2C();
    dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)(v26, &type metadata for Data, v24, v22, v23);
    sub_1004BBBC8(v16, v18);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
  }
  return result;
}

void sub_100866584(uint64_t a1@<X0>, float *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __n128 v10;
  float v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v5 = dispatch thunk of CRDecoder.valueContainer()();
  if (v2)
  {
    swift_release(a1);
  }
  else
  {
    v6 = v5;
    v7 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
    v9 = v8;
    v10 = swift_release(v6);
    v11 = sub_100866A64(v7, v9, v10);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    sub_1004BBBC8(v7, v9);
    swift_release(a1);
    *a2 = v11;
    *((_DWORD *)a2 + 1) = v13;
    *((_DWORD *)a2 + 2) = v15;
    *((_DWORD *)a2 + 3) = v17;
  }
}

uint64_t sub_10086665C()
{
  float *v0;

  return sub_1008662C8(*v0, v0[1], v0[2], v0[3]);
}

void sub_100866678(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  float v4;
  int v5;
  int v6;
  int v7;

  v4 = sub_100866C04(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
    *(_DWORD *)(a2 + 8) = v6;
    *(_DWORD *)(a2 + 12) = v7;
  }
}

uint64_t sub_1008666A4(_QWORD *a1)
{
  float *v1;

  return sub_100866408(a1, *v1, v1[1], v1[2], v1[3]);
}

BOOL sub_1008666C0(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

__n128 sub_1008666FC@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t sub_100866708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100866D3C();
  v7 = sub_100866D80();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

unint64_t sub_100866768()
{
  unint64_t result;

  result = qword_1013F6020;
  if (!qword_1013F6020)
  {
    result = swift_getWitnessTable(&unk_100F10DB4, &type metadata for CRLRectData);
    atomic_store(result, (unint64_t *)&qword_1013F6020);
  }
  return result;
}

float sub_1008667AC(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, __n128 a6)
{
  float v6;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  float *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v12 = type metadata accessor for BinaryDecodingOptions(0, a6);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = ((uint64_t (*)(_QWORD, __n128))a3)(0, v13);
  __chkstk_darwin(v16);
  v18 = (float *)((char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v21 = (char *)v26 - v20;
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  v22 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v22);
  v23 = sub_1004B7878(a4, a3, a5);
  v24 = v28;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v26, 0, v15, v16, v23);
  if (!v24)
  {
    sub_1004B8460((uint64_t)v21, (uint64_t)v18, a3);
    v6 = *v18;
    sub_1004B84A4((uint64_t)v18, a3);
    sub_1004B84A4((uint64_t)v21, a3);
  }
  return v6;
}

float sub_100866930(_QWORD *a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  float v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  _QWORD v19[2];
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v10 = a1[3];
  v11 = a1[4];
  sub_1004BB5A4(a1, v10);
  dispatch thunk of Decoder.singleValueContainer()(v20, v10, v11);
  if (v4)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v12 = v21;
    v13 = v22;
    sub_1004BB5A4(v20, v21);
    v14 = sub_100587AC0();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)(v19, &type metadata for Data, &type metadata for Data, v14, v12, v13);
    v15 = v19[0];
    v16 = v19[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
    v5 = sub_1008667AC(v15, v16, a2, a3, a4, v17);
    sub_1004BBBC8(v15, v16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return v5;
}

float sub_100866A64(uint64_t a1, unint64_t a2, __n128 a3)
{
  uint64_t v3;
  float v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  float *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v19[2];
  uint64_t v20;

  v7 = type metadata accessor for BinaryDecodingOptions(0, a3);
  __chkstk_darwin(v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLProto_Rect(0);
  __chkstk_darwin(v10);
  v12 = (float *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (char *)v19 - v14;
  v20 = 0;
  memset(v19, 0, sizeof(v19));
  v16 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v16);
  v17 = sub_1004B7878(&qword_1013F6028, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26120);
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v19, 0, v9, v10, v17);
  if (!v3)
  {
    sub_1004B8460((uint64_t)v15, (uint64_t)v12, type metadata accessor for CRLProto_Rect);
    v4 = *v12;
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Rect);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_Rect);
  }
  return v4;
}

float sub_100866C04(_QWORD *a1)
{
  uint64_t v1;
  float v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  _QWORD v13[2];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v4 = a1[3];
  v5 = a1[4];
  sub_1004BB5A4(a1, v4);
  dispatch thunk of Decoder.singleValueContainer()(v14, v4, v5);
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  else
  {
    v6 = v15;
    v7 = v16;
    sub_1004BB5A4(v14, v15);
    v8 = sub_100587AC0();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)(v13, &type metadata for Data, &type metadata for Data, v8, v6, v7);
    v9 = v13[0];
    v10 = v13[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v14);
    v2 = sub_100866A64(v9, v10, v11);
    sub_1004BBBC8(v9, v10);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return v2;
}

unint64_t sub_100866D3C()
{
  unint64_t result;

  result = qword_1013F6040;
  if (!qword_1013F6040)
  {
    result = swift_getWitnessTable(&unk_100F10E84, &type metadata for CRLRectData);
    atomic_store(result, (unint64_t *)&qword_1013F6040);
  }
  return result;
}

unint64_t sub_100866D80()
{
  unint64_t result;

  result = qword_1013F6048;
  if (!qword_1013F6048)
  {
    result = swift_getWitnessTable(&unk_100F10E14, &type metadata for CRLRectData);
    atomic_store(result, (unint64_t *)&qword_1013F6048);
  }
  return result;
}

unint64_t sub_100866DC4()
{
  unint64_t result;

  result = qword_1013F6050;
  if (!qword_1013F6050)
  {
    result = swift_getWitnessTable(&unk_100F10D7C, &type metadata for CRLSizeData);
    atomic_store(result, (unint64_t *)&qword_1013F6050);
  }
  return result;
}

unint64_t sub_100866E08()
{
  unint64_t result;

  result = qword_1013F6058;
  if (!qword_1013F6058)
  {
    result = swift_getWitnessTable(&unk_100F10C34, &type metadata for CRLPointData);
    atomic_store(result, (unint64_t *)&qword_1013F6058);
  }
  return result;
}

unint64_t sub_100866E4C()
{
  unint64_t result;

  result = qword_1013F6060;
  if (!qword_1013F6060)
  {
    result = swift_getWitnessTable(&unk_100F10BC4, &type metadata for CRLPointData);
    atomic_store(result, (unint64_t *)&qword_1013F6060);
  }
  return result;
}

char *sub_100866EA0(void *a1, void *a2, void *a3)
{
  _BYTE *v3;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  char *v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  objc_super v25;

  v7 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_documentSessionEndedAnalyticsDomain];
  *v7 = 0xD000000000000016;
  v7[1] = 0x8000000100FAAB30;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_totalEventKeyCount] = 7;
  v8 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_durationKey];
  *v8 = 0x6E6F697461727564;
  v8[1] = 0xE800000000000000;
  v9 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEditKey];
  *v9 = 0x74696445646168;
  v9[1] = 0xE700000000000000;
  v10 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_percentageTimeSpentInEditModeKey];
  *v10 = 0xD00000000000001DLL;
  v10[1] = 0x8000000100FAAB50;
  v11 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCountKey];
  *v11 = 0xD000000000000012;
  v11[1] = 0x8000000100FAAB70;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_commandControllerNotificationSubscriber] = &_swiftEmptySetSingleton;
  v12 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEdit] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode] = 0;
  v14(&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate], 1, 1, v13);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount] = 0;
  v25.receiver = v3;
  v25.super_class = (Class)type metadata accessor for CRLDocumentSessionAnalyticsManager(0);
  v15 = (char *)objc_msgSendSuper2(&v25, "init");
  v16 = *(void **)&v15[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode];
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode] = a3;
  v17 = v15;
  v18 = a3;

  v19 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v20 = qword_1013DD500;
  v21 = v17;
  if (v20 != -1)
    swift_once(&qword_1013DD500, sub_100902E88);
  objc_msgSend(v19, "addObserver:selector:name:object:", v21, "beginSession:", qword_10147FF38, a1);

  v22 = qword_1013DD508;
  v23 = v21;
  if (v22 != -1)
    swift_once(&qword_1013DD508, sub_100902EBC);
  objc_msgSend(v19, "addObserver:selector:name:object:", v23, "endSession:", qword_10147FF40, a1);

  *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_commandControllerNotificationSubscriber] = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  return v23;
}

Swift::Void __swiftcall CRLDocumentSessionAnalyticsManager.beginSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  void (*v15)(_BYTE *, _QWORD, uint64_t, uint64_t);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v25[-v9];
  v11 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate, v26, 0, 0);
  sub_1004E1F60(v11, (uint64_t)v10);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1);
  v13 = sub_1004C113C((uint64_t)v10);
  if (v12 == 1)
  {
    Date.init()(v13);
    v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16);
    v14(v7, v4, v1);
    v15 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v2 + 56);
    v15(v7, 0, 1, v1);
    swift_beginAccess(v11, v25, 33, 0);
    sub_10056AFBC((uint64_t)v7, v11);
    swift_endAccess(v25);
    v16 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode);
    if (v16)
    {
      v17 = sub_1004B8930(0, &qword_1013F6080, off_101229A80);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17, v18);
      v20 = v16;
      if (objc_msgSend(v20, "isKindOfClass:", ObjCClassFromMetadata))
      {
        v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount);
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
        {
          __break(1u);
          return;
        }
        *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount) = v23;
      }

    }
    v14(v7, v4, v1);
    v15(v7, 0, 1, v1);
    v24 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
    swift_beginAccess(v24, v25, 33, 0);
    sub_10056AFBC((uint64_t)v7, v24);
    swift_endAccess(v25);
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  }
}

Swift::Void __swiftcall CRLDocumentSessionAnalyticsManager.endSession(isClosingDocument:)(Swift::Bool isClosingDocument)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString v6;
  Class isa;
  void *v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _BYTE v18[112];
  _BYTE v19[24];

  sub_100867728();
  v4 = v3;
  if (*(_QWORD *)(v3 + 16) == 7)
  {
    v5 = (void *)objc_opt_self(CRLAnalyticsLogger);
    v6 = String._bridgeToObjectiveC()();
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "sendEventInDomain:lazily:eventPayload:", v6, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

    if (!isClosingDocument)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, v19, 0, 0);
  v8 = (void *)static OS_os_log.crlDefault;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v18);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  v12 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_documentSessionEndedAnalyticsDomain);
  v11 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_documentSessionEndedAnalyticsDomain
                  + 8);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 96) = sub_1004B804C((uint64_t *)&unk_101414890);
  *(_QWORD *)(inited + 104) = sub_10086804C();
  *(_QWORD *)(inited + 72) = v4;
  v13 = v8;
  swift_bridgeObjectRetain(v11);
  v15 = static os_log_type_t.error.getter(v14);
  sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "Incomplete payload generated for %@ analytics event, payload = %@", 65, 2, inited);
  swift_setDeallocating(inited);
  v16 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 2, v16);

  if (isClosingDocument)
  {
LABEL_7:
    v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v17, "removeObserver:", v1);
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_commandControllerNotificationSubscriber) = &_swiftEmptySetSingleton;

    swift_bridgeObjectRelease();
  }
LABEL_8:
  sub_100867C30();
}

void sub_100867728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  char **v19;
  _QWORD *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  char v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjCClassFromMetadata;
  id v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  uint64_t v43;
  uint64_t v44;
  id v45;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char v51;
  uint64_t v52;
  uint64_t (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  _QWORD *v58;
  char v59[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - v6;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v56 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - v15;
  v17 = v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate, v59, 0, 0);
  sub_1004E1F60(v17, (uint64_t)v7);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v19 = &selRef_p_didReceiveMemoryWarning_;
  if (v18(v7, 1, v8) == 1)
  {
    sub_1004C113C((uint64_t)v7);
    v20 = _swiftEmptyDictionarySingleton;
LABEL_13:
    v43 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEditKey);
    v44 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEditKey + 8);
    v45 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEdit), swift_bridgeObjectRetain(v44).n128_f64[0]);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
    v58 = v20;
    sub_100826868((uint64_t)v45, v43, v44, isUniquelyReferenced_nonNull_native);
    v47 = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCountKey);
    v49 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCountKey + 8);
    v50 = objc_msgSend(objc_allocWithZone((Class)NSNumber), v19[443], *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount), swift_bridgeObjectRetain(v49).n128_f64[0]);
    v51 = swift_isUniquelyReferenced_nonNull_native(v47);
    v58 = v47;
    sub_100826868((uint64_t)v50, v48, v49, v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  v53 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 32);
  v21 = v53(v16, v7, v8);
  Date.init()(v21);
  v54 = v16;
  v55 = v13;
  v22 = Date.timeIntervalSince(_:)(v16);
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_durationKey);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_durationKey + 8);
  v25 = objc_allocWithZone((Class)NSNumber);
  swift_bridgeObjectRetain(v24);
  v26 = objc_msgSend(v25, "initWithDouble:", v22);
  v27 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  v57 = _swiftEmptyDictionarySingleton;
  sub_100826868((uint64_t)v26, v23, v24, v27);
  v28 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode);
  if (v29)
  {
    v30 = v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate, &v57, 0, 0);
    sub_1004E1F60(v30, (uint64_t)v4);
    if (v18(v4, 1, v8) == 1)
    {
      sub_1004C113C((uint64_t)v4);
    }
    else
    {
      v31 = v56;
      v53(v56, v4, v8);
      v32 = sub_1004B8930(0, &qword_1013F6080, off_101229A80);
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v32, v33);
      v35 = v29;
      if ((objc_msgSend(v35, "isKindOfClass:", ObjCClassFromMetadata) & 1) != 0)
        *(double *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode) = Date.timeIntervalSince(_:)(v31) + *(double *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v8);

    }
  }
  v36 = round(*(double *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode)/ v22* 100.0);
  if ((~*(_QWORD *)&v36 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v36 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v36 < 9.22337204e18)
  {
    v37 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_percentageTimeSpentInEditModeKey);
    v38 = *(_QWORD *)(v1
                    + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_percentageTimeSpentInEditModeKey
                    + 8);
    v19 = &selRef_p_didReceiveMemoryWarning_;
    v39 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", (uint64_t)v36, swift_bridgeObjectRetain(v38).n128_f64[0]);
    v40 = swift_isUniquelyReferenced_nonNull_native(v28);
    v58 = v28;
    sub_100826868((uint64_t)v39, v37, v38, v40);
    v20 = v58;
    swift_bridgeObjectRelease();
    v41 = swift_bridgeObjectRelease();
    v42 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
    v42(v55, v8, v41);
    ((void (*)(char *, uint64_t))v42)(v54, v8);
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_100867C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  void (*v5)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v10[24];

  v1 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for Date(0);
  v5 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate, v10, 33, 0);
  sub_10056AFBC((uint64_t)v3, v6);
  swift_endAccess(v10);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEdit) = 0;
  v5(v3, 1, 1, v4);
  v7 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate, v10, 33, 0);
  sub_10056AFBC((uint64_t)v3, v7);
  result = swift_endAccess(v10);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount) = 0;
  return result;
}

void CRLDocumentSessionAnalyticsManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLDocumentSessionAnalyticsManager", 43, "init()", 6, 0);
  __break(1u);
}

id CRLDocumentSessionAnalyticsManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLDocumentSessionAnalyticsManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_10086804C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F60A0;
  if (!qword_1013F60A0)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_101414890);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1013F60A0);
  }
  return result;
}

uint64_t type metadata accessor for CRLDocumentSessionAnalyticsManager(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6120;
  if (!qword_1013F6120)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLDocumentSessionAnalyticsManager);
  return result;
}

id _s8Freeform34CRLDocumentSessionAnalyticsManagerC18didSetDocumentMode_4from8animatedySo014CRLiOSDocumentI0C_AHSbtF_0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjCClassFromMetadata;
  id result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  _BYTE v34[24];
  _BYTE v35[24];

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - v17;
  Date.init()(v19);
  v20 = sub_1004B8930(0, &qword_1013F6080, off_101229A80);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20, v21);
  result = objc_msgSend(a1, "isKindOfClass:", ObjCClassFromMetadata);
  if ((_DWORD)result)
  {
    v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount);
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
      return result;
    }
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount) = v26;
  }
  v33 = a1;
  v27 = a2;
  v28 = v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate, v35, 0, 0);
  sub_1004E1F60(v28, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1004C113C((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    if ((objc_msgSend(v27, "isKindOfClass:", ObjCClassFromMetadata) & 1) != 0)
      *(double *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode) = Date.timeIntervalSince(_:)(v15) + *(double *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v29 = v33;
  v30 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode) = v33;
  v31 = v29;

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v18, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  swift_beginAccess(v28, v34, 33, 0);
  sub_10056AFBC((uint64_t)v8, v28);
  swift_endAccess(v34);
  return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_100868358()
{
  return type metadata accessor for CRLDocumentSessionAnalyticsManager(0);
}

void sub_100868360(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v4[0] = &unk_100F10FE8;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = &unk_100F10FE8;
  v4[3] = &unk_100F10FE8;
  v4[4] = &unk_100F10FE8;
  v4[5] = &unk_100F10FE8;
  v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10056ACC0(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = &unk_100F11000;
    v7 = &unk_100F11018;
    v8 = v5;
    v9 = (char *)&value witness table for Builtin.Int64 + 64;
    v10 = (char *)&value witness table for Builtin.Int64 + 64;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

unint64_t sub_100868414()
{
  unint64_t result;

  result = qword_1013F6130;
  if (!qword_1013F6130)
  {
    result = swift_getWitnessTable(&unk_100F110C0, &type metadata for CRLChangeBoardObjectConnectorsIntent);
    atomic_store(result, (unint64_t *)&qword_1013F6130);
  }
  return result;
}

unint64_t sub_10086845C()
{
  unint64_t result;

  result = qword_1013F6138;
  if (!qword_1013F6138)
  {
    result = swift_getWitnessTable(&unk_100F110E8, &type metadata for CRLChangeBoardObjectConnectorsIntent);
    atomic_store(result, (unint64_t *)&qword_1013F6138);
  }
  return result;
}

uint64_t sub_1008684A0(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101127BF8, 1) + 8);
}

uint64_t sub_1008684C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101127BD0, 1);
}

uint64_t sub_1008684D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardEntity(0);
  v4[14] = v6;
  v7 = (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[15] = swift_task_alloc(v7);
  v4[16] = swift_task_alloc(v7);
  v4[17] = swift_task_alloc(v7);
  v4[18] = swift_task_alloc(v7);
  v8 = type metadata accessor for Logger(0);
  v4[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[20] = v9;
  v4[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1008685A4, 0, 0);
}

uint64_t sub_1008685A4()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  __n128 v4;
  char v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 16, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  v1 = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 225));
  if (*(_BYTE *)(v0 + 225))
  {
    if (*(_BYTE *)(v0 + 225) == 1)
    {
      v2 = 0;
    }
    else
    {
      v3 = *(_QWORD **)(v0 + 144);
      IntentParameter.wrappedValue.getter(v3);
      EntityProperty.wrappedValue.getter(v4);
      v5 = *(_BYTE *)(v0 + 224);
      v1 = (_QWORD *)sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardEntity);
      v2 = v5 ^ 1;
    }
  }
  else
  {
    v2 = 1;
  }
  v6 = v2 & 1;
  *(_BYTE *)(v0 + 227) = v2 & 1;
  v7 = *(_QWORD **)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 112);
  AppDependency.wrappedValue.getter(v1);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 48);
  v10 = sub_1004B804C(&qword_1013EF520);
  v11 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(v10, v15 + v13, v14 | 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF5E40;
  v17 = v16 + v15;
  IntentParameter.wrappedValue.getter(v7);
  sub_1004B8460((uint64_t)v7 + *(int *)(v8 + 40), v9, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardEntity);
  sub_1004DB5FC(v9, v17);
  *(_BYTE *)(v17 + *(int *)(v11 + 20)) = v6;
  v18 = sub_100AF83A8(v16);
  *(_QWORD *)(v0 + 184) = v18;
  swift_setDeallocating(v16);
  swift_arrayDestroy(v17, *(_QWORD *)(v16 + 16), v11);
  swift_deallocClassInstance(v16, 32, 7);
  v19 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 192) = v19;
  *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v19);
  v20 = (_QWORD *)swift_task_alloc(dword_10140E15C);
  *(_QWORD *)(v0 + 208) = v20;
  *v20 = v0;
  v20[1] = sub_1008687EC;
  return sub_100CA6ED8(v18);
}

uint64_t sub_1008687EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 192), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100868A58;
  else
    v6 = sub_100868870;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100868870()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease();

  return swift_task_switch(sub_1008688BC, 0, 0);
}

uint64_t sub_1008688BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_BYTE *)(v0 + 227);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD **)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD **)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  IntentParameter.wrappedValue.getter(v3);
  *(_BYTE *)(v0 + 226) = v1;
  EntityProperty.wrappedValue.setter(v0 + 226);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.getter(v3);
  IntentParameter.wrappedValue.getter(v5);
  v7 = sub_100880218();
  sub_1004B8460((uint64_t)v5, v4, type metadata accessor for CRLBoardEntity);
  sub_1004B8460(v4, v6, type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.setter(v6);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardEntity);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLBoardEntity);
  *(_QWORD *)(v0 + 64) = v7;
  v8 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v9 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v3, v0 + 64, v11, &type metadata for CRLOpenBoardIntent, v8, v9);
  swift_release(v7);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardEntity);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100868A58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 200));
  return swift_task_switch(sub_100868A94, 0, 0);
}

uint64_t sub_100868A94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void **)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease();

  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v3);
  swift_errorRetain(v1);
  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v3);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD **)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 88);
    v42 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 80);
    v13 = swift_slowAlloc(22, -1);
    v43 = (uint64_t *)swift_slowAlloc(8, -1);
    v45 = swift_slowAlloc(32, -1);
    v47 = v45;
    *(_DWORD *)v13 = 136315394;
    IntentParameter.wrappedValue.getter(v10);
    sub_1004B8460((uint64_t)v10 + *(int *)(v11 + 40), v12, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLBoardEntity);
    v14 = sub_10067AD38();
    v16 = v15;
    sub_1004B84A4(v12, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v0 + 40) = sub_100BF0F1C(v14, v16, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v13 + 4, v13 + 12);
    v17 = swift_bridgeObjectRelease();
    swift_release_n(v40, 2, v17);
    swift_release_n(v41, 2, v18);
    swift_release_n(v42, 2, v19);
    *(_WORD *)(v13 + 12) = 2112;
    swift_errorRetain(v9);
    v20 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v0 + 56) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v13 + 14, v13 + 22);
    *v43 = v20;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Problem changing object connectors visibility for board: %s - %@", (uint8_t *)v13, 0x16u);
    v21 = sub_1004B804C(&qword_1013E53A8);
    swift_arrayDestroy(v43, 1, v21);
    swift_slowDealloc(v43, -1, -1);
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {
    v22 = *(_QWORD *)(v0 + 216);
    v24 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 80);

    swift_release_n(v25, 2, v26);
    swift_release_n(v24, 2, v27);
    swift_release_n(v23, 2, v28);
    swift_errorRelease(v22);
    swift_errorRelease(v22);
  }
  v29 = *(_QWORD *)(v0 + 216);
  v30 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 128);
  v35 = *(_QWORD *)(v0 + 136);
  v44 = *(_QWORD *)(v0 + 120);
  v46 = *(_QWORD *)(v0 + 104);
  v36 = type metadata accessor for _PrebuiltAppIntentError(0);
  v37 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v36, v37, 0, 0);
  v38.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v38);
  swift_errorRelease(v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100868E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147F980);
  sub_1004F2A1C(v10, (uint64_t)qword_10147F980);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100FD88B0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100868FC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013F6168);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013F6170);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100869A1C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100F11138);
  v9 = sub_1004B804C(&qword_1013F6178);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._object = (void *)0x8000000100FD8890;
  v10._countAndFlagsBits = 0xD000000000000017;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_100F11160);
  v12 = sub_1004B804C(&qword_1013F6180);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLChangeBoardObjectConnectorsIntent, v6);
}

uint64_t sub_100869188@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DD2C8 != -1)
    swift_once(&qword_1013DD2C8, sub_100868E38);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147F980);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1008691FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1013F6164);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CF80C;
  return sub_1008684D4(a1, v4, v5, v6);
}

_BYTE *sub_100869268@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1008692F4();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100869290(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100869A1C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLChangeBoardObjectConnectorsIntent()
{
  return &type metadata for CRLChangeBoardObjectConnectorsIntent;
}

uint64_t sub_1008692C8()
{
  return sub_1004CBA30(&qword_1013F6148, &qword_1013F6150, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

_BYTE *sub_1008692F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, uint64_t, uint64_t);
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  unint64_t v49;
  uint64_t v50;
  _BYTE v52[4];
  unsigned int v53;
  uint64_t v54;
  void (*v55)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v56;
  _BYTE *v57;
  void (*v58)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _QWORD v68[2];
  _BYTE v69[56];

  v67 = type metadata accessor for InputConnectionBehavior(0);
  v61 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = &v52[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v1 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v1);
  v65 = &v52[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v64 = &v52[-v4];
  v5 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v5);
  v63 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v7);
  v62 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = &v52[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  v59 = v19;
  __chkstk_darwin(v19);
  v56 = &v52[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v57 = &v52[-v23];
  v60 = sub_1004B804C(&qword_1013E1120);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 104);
  v26(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter title for board", 25, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100FD8820);
  static Locale.current.getter(v27);
  v53 = v25;
  v54 = v9;
  v28 = v26;
  v55 = v26;
  v26(v12, v25, v9);
  v29 = v62;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter description for boards", 32, 2);
  v58 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v58(v29, 0, 1, v19);
  v30 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v63, 1, 1);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v31);
  v28(v12, v25, v9);
  v32 = v56;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Prompt for selecting a board from the list", 42, 2);
  v33 = v64;
  IntentDialog.init(_:)(v32);
  v34 = type metadata accessor for IntentDialog(0);
  v35 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v35(v33, 0, 1, v34);
  v36 = v65;
  v35(v65, 1, 1, v34);
  LODWORD(v56) = enum case for InputConnectionBehavior.default(_:);
  v61 = *(_QWORD *)(v61 + 104);
  v37 = v66;
  ((void (*)(_BYTE *))v61)(v66);
  v38 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v39 = v57;
  v40 = v62;
  v63 = (_BYTE *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v57, v62, v63, v33, v36, v37, v38);
  v60 = sub_1004B804C(&qword_1013E7AC0);
  v41 = String.LocalizationValue.init(stringLiteral:)(0x6574617453, 0xE500000000000000);
  static Locale.current.getter(v41);
  v42 = v53;
  v43 = v54;
  v44 = v55;
  v55(v12, v53, v54);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter title for operation", 29, 2);
  v45 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x8000000100FD8850);
  static Locale.current.getter(v45);
  v44(v12, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0x6E497070414C5243, 0xED000073746E6574, v15, v12, "Parameter description for operation", 35, 2);
  v58(v40, 0, 1, v59);
  v69[0] = 0;
  v46 = v64;
  v35(v64, 1, 1, v34);
  v47 = v65;
  v35(v65, 1, 1, v34);
  v48 = v66;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v61)(v66, v56, v67);
  v49 = sub_100606E68();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v39, v40, v69, v46, v47, v48, &off_101264FA0, v49);
  sub_1004B804C(&qword_1013E1128);
  v68[0] = 0xD00000000000001FLL;
  v68[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v68, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v50 = static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)(v69, v50);
  return v63;
}

unint64_t sub_100869A1C()
{
  unint64_t result;

  result = qword_1013F6158;
  if (!qword_1013F6158)
  {
    result = swift_getWitnessTable(&unk_100F11030, &type metadata for CRLChangeBoardObjectConnectorsIntent);
    atomic_store(result, &qword_1013F6158);
  }
  return result;
}

uint64_t sub_100869A60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100869A88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100869AE8(uint64_t a1, id a2)
{
  objc_class *v2;
  objc_class *v3;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  id v13;
  uint64_t v15;
  _QWORD v16[4];
  objc_super v17;

  v3 = v2;
  v6 = (char *)objc_allocWithZone(v3);
  v7 = &v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_id];
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if (a2)
  {
    v10 = v6;
    a2 = a2;
    v11 = objc_msgSend(a2, "copy");
    _bridgeAnyObjectToAny(_:)(v16, v11);

    swift_unknownObjectRelease(v11);
    v12 = sub_10086A150();
    swift_dynamicCast(&v15, v16, (char *)&type metadata for Any + 8, v12, 7);
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = v15;

  }
  else
  {
    *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = 0;
  }
  v17.receiver = v6;
  v17.super_class = v3;
  v13 = objc_msgSendSuper2(&v17, "init");

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v13;
}

void sub_100869DAC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  _QWORD *v10;
  void *v11;
  void (*v12)(void *);
  id v13;
  _QWORD *v14;
  CKRecordID v15;
  Swift::String v16;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (v9)
  {
    v10 = v9;
    sub_100DBEE64((uint64_t)v10, (uint64_t)&off_10127C5E0);

    if (v4)
    {

    }
    else
    {
      v11 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow);
      v12 = *(void (**)(void *))((swift_isaMask & *v10) + 0x150);
      v13 = v11;
      v12(v11);
      v14 = v10;
      sub_100DB0D78((uint64_t)v14, (uint64_t)&off_10127C5E0, a3);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetShadow.swift", 91, 2, 32, "Unable to retrieve board item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetShadow.swift", 91, 2u, 32, (uint64_t)"Unable to retrieve board item.", 30, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
}

void sub_100869FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_10086A014()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetShadow(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10086A098()
{
  return type metadata accessor for CRLCommandSetShadow(0);
}

uint64_t type metadata accessor for CRLCommandSetShadow(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F61B0;
  if (!qword_1013F61B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetShadow);
  return result;
}

uint64_t sub_10086A0DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_10086A150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F1390;
  if (!qword_1013F1390)
  {
    v1 = objc_opt_self(CRLShadow);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F1390);
  }
  return result;
}

id sub_10086A18C(uint64_t a1, void *a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  unint64_t v11;
  objc_class *v12;
  id v13;
  uint64_t v15;
  _QWORD v16[4];
  objc_super v17;

  v5 = &v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_id];
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  if (a2)
  {
    v8 = v2;
    v9 = a2;
    v10 = objc_msgSend(v9, "copy");
    _bridgeAnyObjectToAny(_:)(v16, v10);

    swift_unknownObjectRelease(v10);
    v11 = sub_10086A150();
    swift_dynamicCast(&v15, v16, (char *)&type metadata for Any + 8, v11, 7);
    *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = v15;

  }
  else
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = 0;
  }
  v12 = (objc_class *)type metadata accessor for CRLCommandSetShadow(0);
  v17.receiver = v2;
  v17.super_class = v12;
  v13 = objc_msgSendSuper2(&v17, "init");
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v13;
}

double CRL3DRotation.init(real:imag:)(double a1, double a2)
{
  return a2;
}

__n128 CRL3DRotation.init()()
{
  return (__n128)matrix_identity_float4x4.columns[3];
}

double CRL3DRotation.normalized.getter(float32x4_t a1)
{
  int8x16_t v1;
  float32x2_t v2;
  double result;
  unsigned __int32 v4;
  float32x2_t v5;
  float32x2_t v6;

  v1 = (int8x16_t)vmulq_f32(a1, a1);
  v2 = vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL));
  if (vaddv_f32(v2) == 0.0)
    return 0.0;
  v4 = vadd_f32(v2, (float32x2_t)vdup_lane_s32((int32x2_t)v2, 1)).u32[0];
  v5 = vrsqrte_f32((float32x2_t)v4);
  v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4, vmul_f32(v5, v5)));
  *(_QWORD *)&result = vmulq_n_f32(a1, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4, vmul_f32(v6, v6))).f32[0]).u64[0];
  return result;
}

double static CRL3DRotation.* infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  int32x4_t v2;
  int8x16_t v3;
  float32x4_t v4;
  float32x4_t v5;
  double result;

  v2 = (int32x4_t)vnegq_f32(a2);
  v3 = (int8x16_t)vtrn2q_s32((int32x4_t)a2, vtrn1q_s32((int32x4_t)a2, v2));
  v4 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)a2, (int8x16_t)v2, 8uLL), *(float32x2_t *)a1.f32, 1), (float32x4_t)vextq_s8(v3, v3, 8uLL), a1.f32[0]);
  v5 = (float32x4_t)vrev64q_s32((int32x4_t)a2);
  v5.i32[0] = v2.i32[1];
  v5.i32[3] = v2.i32[2];
  *(_QWORD *)&result = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(a2, a1, 3), v5, a1, 2), v4).u64[0];
  return result;
}

uint64_t sub_10086A35C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = &type metadata for UnsafeRawBufferPointer;
  v8[4] = &protocol witness table for UnsafeRawBufferPointer;
  v8[0] = a1;
  v8[1] = a2;
  v2 = sub_1004BB5A4(v8, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  v3 = (_BYTE *)*v2;
  if (*v2 && (v4 = (_BYTE *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_100AF390C(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = sub_10086B1F0((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      v6 = sub_10086B170((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    v6 = 0;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
  return v6;
}

double CRL3DRotation.init(angle:axis:)(float a1, float32x4_t a2)
{
  double result;

  *(_QWORD *)&result = vmulq_n_f32(a2, __sincosf_stret(a1 * 0.5).__sinval).u64[0];
  return result;
}

double sub_10086A44C(float32x4_t a1, float32x4_t a2)
{
  float32x4_t v2;
  int32x4_t v3;
  float32x2_t v4;
  float32x2_t v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x2_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float v11;
  float v12;
  float32x2_t v13;
  float32x2_t v14;
  float32x4_t v15;
  float32x4_t v16;
  int32x4_t v17;
  float32x2_t v18;
  float32x2_t v19;
  float32x4_t v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;
  int32x4_t v24;
  float32x4_t v25;
  int32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  int32x4_t v29;
  int8x16_t v30;
  float32x4_t v31;
  unint64_t v32;
  float32x4_t v33;
  int32x4_t v34;
  float32x2_t v35;
  float32x2_t v36;
  float32x4_t v37;
  int32x4_t v38;
  float32x4_t v39;
  float v40;
  float v41;
  float32x4_t v42;
  float32x4_t v43;
  float32x4_t v44;
  float32x4_t v45;
  float32x4_t v46;
  int32x4_t v47;
  float32x2_t v48;
  float32x2_t v49;

  v2 = vmulq_f32(a1, a2);
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).f32[0] >= 0.0)
  {
    v33 = vaddq_f32(a1, a2);
    v34 = (int32x4_t)vmulq_f32(v33, v33);
    v34.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v34, 2), vadd_f32(*(float32x2_t *)v34.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v34.i8, 1))).u32[0];
    v35 = vrsqrte_f32((float32x2_t)v34.u32[0]);
    v36 = vmul_f32(v35, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v35, v35)));
    v37 = vmulq_n_f32(v33, vmul_f32(v36, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v36, v36))).f32[0]);
    v38 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v37, (int32x4_t)v37), (int8x16_t)v37, 0xCuLL), vnegq_f32(a1)), v37, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL));
    v32 = vextq_s8((int8x16_t)vuzp1q_s32(v38, v38), (int8x16_t)v38, 0xCuLL).u64[0];
  }
  else
  {
    v3 = (int32x4_t)vmulq_f32(a1, a1);
    v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
    v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
    v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
    v3.i32[0] = vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).u32[0];
    v6 = (int32x4_t)vmulq_f32(a2, a2);
    v6.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), vadd_f32(*(float32x2_t *)v6.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1))).u32[0];
    v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
    v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
    v9 = vaddq_f32(vmulq_n_f32(a1, *(float *)v3.i32), vmulq_n_f32(a2, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]));
    v10 = vmulq_f32(v9, v9);
    v11 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v10, 2), vaddq_f32(v10, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v10.f32, 1))).f32[0];
    if (v11 <= 1.4211e-14)
    {
      v39 = vabsq_f32(a1);
      v40 = v39.f32[1];
      v41 = v39.f32[2];
      if (v39.f32[0] > v39.f32[1] || v39.f32[0] > v39.f32[2])
      {
        v42 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL);
        if (v40 <= v41)
        {
          v43 = vmulq_f32(a1, (float32x4_t)xmmword_100F11200);
          v44 = (float32x4_t)xmmword_100F11210;
        }
        else
        {
          v43 = vmulq_f32(a1, (float32x4_t)xmmword_100F11220);
          v44 = (float32x4_t)xmmword_100F11230;
        }
      }
      else
      {
        v42 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL);
        v43 = vmulq_f32(a1, (float32x4_t)xmmword_100F111E0);
        v44 = (float32x4_t)xmmword_100F111F0;
      }
      v45 = vmlaq_f32(v43, v44, v42);
      v46 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45), (int8x16_t)v45, 0xCuLL);
      v47 = (int32x4_t)vmulq_f32(v45, v45);
      v47.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v47.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v47, 2), *(float32x2_t *)v47.i8)).u32[0];
      v48 = vrsqrte_f32((float32x2_t)v47.u32[0]);
      v49 = vmul_f32(v48, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v48, v48)));
      v32 = vmulq_n_f32(v46, vmul_f32(v49, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v49, v49))).f32[0]).u64[0];
    }
    else
    {
      v12 = v11;
      v13 = vrsqrte_f32((float32x2_t)LODWORD(v11));
      v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)LODWORD(v12), vmul_f32(v13, v13)));
      v15 = vmulq_n_f32(v9, vmul_f32(v14, vrsqrts_f32((float32x2_t)LODWORD(v12), vmul_f32(v14, v14))).f32[0]);
      v16 = vaddq_f32(a1, v15);
      v17 = (int32x4_t)vmulq_f32(v16, v16);
      v17.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v17, 2), vadd_f32(*(float32x2_t *)v17.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v17.i8, 1))).u32[0];
      v18 = vrsqrte_f32((float32x2_t)v17.u32[0]);
      v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v18, v18)));
      v20 = vmulq_n_f32(v16, vmul_f32(v19, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v19, v19))).f32[0]);
      v21 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v20, (int32x4_t)v20), (int8x16_t)v20, 0xCuLL), vnegq_f32(a1)), v20, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL));
      v22 = vmulq_f32(v20, a1);
      v23 = vaddq_f32(a2, v15);
      v24 = (int32x4_t)vmulq_f32(v23, v23);
      v24.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v24, 2), vadd_f32(*(float32x2_t *)v24.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v24.i8, 1))).u32[0];
      *(float32x2_t *)v20.f32 = vrsqrte_f32((float32x2_t)v24.u32[0]);
      *(float32x2_t *)v20.f32 = vmul_f32(*(float32x2_t *)v20.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v20.f32, *(float32x2_t *)v20.f32)));
      v25 = vmulq_n_f32(v23, vmul_f32(*(float32x2_t *)v20.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v20.f32, *(float32x2_t *)v20.f32))).f32[0]);
      v26 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25), (int8x16_t)v25, 0xCuLL), vnegq_f32(v15)), v25, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v15, (int32x4_t)v15), (int8x16_t)v15, 0xCuLL));
      v27 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v26, v26), (int8x16_t)v26, 0xCuLL);
      v28 = vmulq_f32(v15, v25);
      v27.i32[3] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v28, 2), vaddq_f32(v28, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v28.f32, 1))).u32[0];
      v29 = (int32x4_t)vnegq_f32(v27);
      v30 = (int8x16_t)vtrn2q_s32((int32x4_t)v27, vtrn1q_s32((int32x4_t)v27, v29));
      v31 = (float32x4_t)vrev64q_s32((int32x4_t)v27);
      v31.i32[0] = v29.i32[1];
      v31.i32[3] = v29.i32[2];
      v32 = vaddq_f32(vmlaq_lane_f32(vmulq_n_f32(v27, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2), vaddq_f32(v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.f32, 1))).f32[0]), v31, *(float32x2_t *)v21.f32, 1), vmlaq_laneq_f32(vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v29, 8uLL), v21.f32[0]), (float32x4_t)vextq_s8(v30, v30, 8uLL), v21, 2)).u64[0];
    }
  }
  return *(double *)&v32;
}

__n64 CRL3DRotation.init(ix:iy:iz:r:)(double a1, float a2)
{
  __n64 result;

  result.n64_f32[1] = a2;
  return result;
}

float CRL3DRotation.angle.getter(float32x4_t a1)
{
  float32x4_t v1;
  float v2;

  v1 = vmulq_f32(a1, a1);
  v2 = atan2f(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v1, 2), vaddq_f32(v1, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v1.f32, 1))).f32[0]), a1.f32[3]);
  return v2 + v2;
}

double CRL3DRotation.axis.getter(float32x4_t a1)
{
  int32x4_t v1;
  float32x2_t v2;
  float32x2_t v3;
  double result;

  v1 = (int32x4_t)vmulq_f32(a1, a1);
  v1.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v1, 2), vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v1.i8, 1))).u32[0];
  v2 = vrsqrte_f32((float32x2_t)v1.u32[0]);
  v3 = vmul_f32(v2, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v2, v2)));
  *(_QWORD *)&result = vmulq_n_f32(a1, vmul_f32(v3, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v3, v3))).f32[0]).u64[0];
  return result;
}

double CRL3DRotation.conjugate.getter(float32x4_t a1)
{
  double result;

  *(_QWORD *)&result = vmulq_f32(a1, (float32x4_t)xmmword_100F11240).u64[0];
  return result;
}

__n128 CRL3DRotation.imag.setter(__n128 result)
{
  __n128 *v1;

  result.n128_u32[3] = v1->n128_u32[3];
  *v1 = result;
  return result;
}

__n128 (*CRL3DRotation.imag.modify(_QWORD *a1))(void **a1)
{
  _OWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x18uLL);
  *a1 = v3;
  v3[2] = v1;
  *(_OWORD *)v3 = *v1;
  return sub_10086A86C;
}

__n128 sub_10086A86C(void **a1)
{
  _QWORD *v1;
  uint64_t v2;
  __int128 v3;
  __n128 result;

  v1 = *a1;
  v2 = v1[2];
  v3 = *(_OWORD *)v1;
  HIDWORD(v3) = *(_DWORD *)(v2 + 12);
  *(_OWORD *)v2 = v3;
  free(v1);
  return result;
}

float CRL3DRotation.real.getter(__n128 a1)
{
  return a1.n128_f32[3];
}

void CRL3DRotation.real.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

float (*CRL3DRotation.real.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 12);
  return sub_10086A8B4;
}

float sub_10086A8B4(float *a1)
{
  float result;

  result = a1[2];
  *(float *)(*(_QWORD *)a1 + 12) = result;
  return result;
}

double CRL3DRotation.inverse.getter(float32x4_t a1)
{
  float32x4_t v1;
  int8x16_t v2;
  float32x2_t v3;
  float32x2_t v4;
  double result;

  v1 = vmulq_f32(a1, (float32x4_t)xmmword_100F11240);
  v2 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v2.i8 = vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL));
  v2.i32[0] = vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v2.i8, 1)).u32[0];
  v3 = vrecpe_f32((float32x2_t)v2.u32[0]);
  v4 = vmul_f32(v3, vrecps_f32((float32x2_t)v2.u32[0], v3));
  *(_QWORD *)&result = vmulq_n_f32(v1, vmul_f32(v4, vrecps_f32((float32x2_t)v2.u32[0], v4)).f32[0]).u64[0];
  return result;
}

float CRL3DRotation.length.getter(float32x4_t a1)
{
  int8x16_t v1;

  v1 = (int8x16_t)vmulq_f32(a1, a1);
  return sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL))));
}

void CRL3DRotation.vector.setter(__n128 a1)
{
  __n128 *v1;

  *v1 = a1;
}

void (*CRL3DRotation.vector.modify(_QWORD *a1))(void **a1)
{
  _OWORD *v1;
  _QWORD *v3;

  v3 = malloc(0x18uLL);
  *a1 = v3;
  v3[2] = v1;
  *(_OWORD *)v3 = *v1;
  return sub_10086A964;
}

void sub_10086A964(void **a1)
{
  _QWORD *v1;

  v1 = *a1;
  *(_OWORD *)v1[2] = *(_OWORD *)v1;
  free(v1);
}

uint64_t sub_10086A97C(__n128 *a1, __n128 *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  __n128 v11;

  v11 = *a2;
  v2 = CRL3DRotation.rawValue.getter(*a1);
  v4 = v3;
  v5 = CRL3DRotation.rawValue.getter(v11);
  v7 = v6;
  sub_1007B38CC(v2, v4);
  v9 = v8;
  sub_1004BBBC8(v5, v7);
  sub_1004BBBC8(v2, v4);
  return v9 & 1;
}

uint64_t CRL3DRotation.init(from:)(_QWORD *a1)
{
  return sub_10086B67C(a1);
}

void CRL3DRotation.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  sub_10086B268(a1, a2);
}

uint64_t CRL3DRotation.encode(to:)(_QWORD *a1, __n128 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v16;
  _QWORD v17[2];

  v16 = a2;
  v3 = sub_1004B804C(&qword_1013F61C0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1004BB5A4(a1, v7);
  v9 = sub_10086B814();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRL3DRotation.CodingKeys, &type metadata for CRL3DRotation.CodingKeys, v9, v7, v8);
  v10 = CRL3DRotation.rawValue.getter(v16);
  v12 = v11;
  v17[0] = v10;
  v17[1] = v11;
  v13 = sub_100587C2C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v17, v14, v3, &type metadata for Data, v13);
  sub_1004BBBC8(v10, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CRL3DRotation.rawValue.getter(__n128 a1)
{
  _DWORD v3[4];
  uint64_t v4;

  v3[0] = sub_10086BBDC(a1.n128_u32[0]);
  v3[1] = sub_10086BBDC(a1.n128_u32[1]);
  v3[2] = sub_10086BBDC(a1.n128_u32[2]);
  v3[3] = sub_10086BBDC(a1.n128_u32[3]);
  return sub_10086A35C((uint64_t)v3, (uint64_t)&v4);
}

uint64_t sub_10086ABBC()
{
  return 0x65756C6156776172;
}

uint64_t sub_10086ABD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease(0xE800000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65756C6156776172, 0xE800000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_10086AC68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10086B814();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10086AC90(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10086B814();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10086ACB8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5;

  result = sub_10086B67C(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_10086ACE0(_QWORD *a1)
{
  __n128 *v1;

  return CRL3DRotation.encode(to:)(a1, *v1);
}

void CRL3DRotation.hash(into:)(__n128 a1)
{
  Swift::UInt32 v1;
  Swift::UInt32 v2;
  Swift::UInt32 v3;
  Swift::UInt32 v4;

  if ((a1.n128_u32[0] & 0x7FFFFFFF) != 0)
    v1 = a1.n128_u32[0];
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
  if ((a1.n128_u32[1] & 0x7FFFFFFF) != 0)
    v2 = a1.n128_u32[1];
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((a1.n128_u32[2] & 0x7FFFFFFF) != 0)
    v3 = a1.n128_u32[2];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  if ((a1.n128_u32[3] & 0x7FFFFFFF) != 0)
    v4 = a1.n128_u32[3];
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
}

void sub_10086AD6C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_10086B268(*a1, a1[1]);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
}

uint64_t sub_10086ADA0@<X0>(uint64_t *a1@<X8>)
{
  __n128 *v1;
  uint64_t result;
  uint64_t v4;

  result = CRL3DRotation.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_10086ADC8()
{
  __n128 *v0;
  __n128 v2;
  _QWORD v3[9];

  v2 = *v0;
  Hasher.init(_seed:)(v3, 0);
  CRL3DRotation.hash(into:)(v2);
  return Hasher._finalize()();
}

void sub_10086AE10()
{
  __n128 *v0;

  CRL3DRotation.hash(into:)(*v0);
}

Swift::Int sub_10086AE18(uint64_t a1)
{
  __n128 *v1;
  __n128 v3;
  _QWORD v4[9];

  v3 = *v1;
  Hasher.init(_seed:)(v4, a1);
  CRL3DRotation.hash(into:)(v3);
  return Hasher._finalize()();
}

uint64_t sub_10086AE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_10086BA2C();
  v7 = sub_10086B8A4();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10086AEB8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10086BA2C();
  v5 = sub_10086BA70();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Data);
}

uint64_t sub_10086AF20(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_10086BA2C();
  v5 = sub_10086BA70();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Data);
}

uint64_t sub_10086AF78(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_10086BA2C();
  v3 = sub_10086BA70();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Data);
}

double static CRL3DRotation.* infix(_:_:)(float a1, float32x4_t a2)
{
  double result;

  *(_QWORD *)&result = vmulq_n_f32(a2, a1).u64[0];
  return result;
}

double static CRL3DRotation.* infix(_:_:)(float32x4_t a1, float a2)
{
  double result;

  *(_QWORD *)&result = vmulq_n_f32(a1, a2).u64[0];
  return result;
}

float32x4_t static CRL3DRotation.*= infix(_:_:)(float32x4_t *a1, float a2)
{
  float32x4_t result;

  result = vmulq_n_f32(*a1, a2);
  *a1 = result;
  return result;
}

float32x4_t static CRL3DRotation.*= infix(_:_:)(float32x2_t *a1, float32x4_t a2)
{
  int32x4_t v2;
  int8x16_t v3;
  float32x4_t v4;
  float32x4_t v5;
  float32x4_t result;

  v2 = (int32x4_t)vnegq_f32(a2);
  v3 = (int8x16_t)vtrn2q_s32((int32x4_t)a2, vtrn1q_s32((int32x4_t)a2, v2));
  v4 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)a2, (int8x16_t)v2, 8uLL), *a1, 1), (float32x4_t)vextq_s8(v3, v3, 8uLL), COERCE_FLOAT(*(_OWORD *)a1->f32));
  v5 = (float32x4_t)vrev64q_s32((int32x4_t)a2);
  v5.i32[0] = v2.i32[1];
  v5.i32[3] = v2.i32[2];
  result = vaddq_f32(v4, vmlaq_laneq_f32(vmulq_laneq_f32(a2, *(float32x4_t *)a1->f32, 3), v5, *(float32x4_t *)a1->f32, 2));
  *(float32x4_t *)a1->f32 = result;
  return result;
}

double static CRL3DRotation.+ infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  double result;

  *(_QWORD *)&result = vaddq_f32(a1, a2).u64[0];
  return result;
}

float32x4_t static CRL3DRotation.+= infix(_:_:)(float32x4_t *a1, float32x4_t a2)
{
  float32x4_t result;

  result = vaddq_f32(*a1, a2);
  *a1 = result;
  return result;
}

double static CRL3DRotation.- prefix(_:)(float32x4_t a1)
{
  double result;

  *(_QWORD *)&result = vsubq_f32((float32x4_t)0, a1).u64[0];
  return result;
}

double static CRL3DRotation.- infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  double result;

  *(_QWORD *)&result = vsubq_f32(a1, a2).u64[0];
  return result;
}

float32x4_t static CRL3DRotation.-= infix(_:_:)(float32x4_t *a1, float32x4_t a2)
{
  float32x4_t result;

  result = vsubq_f32(*a1, a2);
  *a1 = result;
  return result;
}

double static CRL3DRotation./ infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  float32x4_t v2;
  int8x16_t v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x4_t v6;
  int32x4_t v7;
  int8x16_t v8;
  float32x4_t v9;
  float32x4_t v10;
  double result;

  v2 = vmulq_f32(a2, (float32x4_t)xmmword_100F11240);
  v3 = (int8x16_t)vmulq_f32(a2, a2);
  *(float32x2_t *)v3.i8 = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL));
  v3.i32[0] = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1)).u32[0];
  v4 = vrecpe_f32((float32x2_t)v3.u32[0]);
  v5 = vmul_f32(v4, vrecps_f32((float32x2_t)v3.u32[0], v4));
  v6 = vmulq_n_f32(v2, vmul_f32(v5, vrecps_f32((float32x2_t)v3.u32[0], v5)).f32[0]);
  v7 = (int32x4_t)vnegq_f32(v6);
  v8 = (int8x16_t)vtrn2q_s32((int32x4_t)v6, vtrn1q_s32((int32x4_t)v6, v7));
  v9 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v6, (int8x16_t)v7, 8uLL), *(float32x2_t *)a1.f32, 1), (float32x4_t)vextq_s8(v8, v8, 8uLL), a1.f32[0]);
  v10 = (float32x4_t)vrev64q_s32((int32x4_t)v6);
  v10.i32[0] = v7.i32[1];
  v10.i32[3] = v7.i32[2];
  *(_QWORD *)&result = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v6, a1, 3), v10, a1, 2), v9).u64[0];
  return result;
}

double static CRL3DRotation./ infix(_:_:)(float32x4_t a1, int32x2_t a2)
{
  double result;

  *(_QWORD *)&result = vdivq_f32(a1, (float32x4_t)vdupq_lane_s32(a2, 0)).u64[0];
  return result;
}

float32x4_t static CRL3DRotation./= infix(_:_:)(float32x4_t *a1, int32x2_t a2)
{
  float32x4_t result;

  result = vdivq_f32(*a1, (float32x4_t)vdupq_lane_s32(a2, 0));
  *a1 = result;
  return result;
}

float32x4_t static CRL3DRotation./= infix(_:_:)(float32x2_t *a1, float32x4_t a2)
{
  float32x4_t v2;
  int8x16_t v3;
  float32x2_t v4;
  float32x2_t v5;
  float32x4_t v6;
  int32x4_t v7;
  int8x16_t v8;
  float32x4_t v9;
  float32x4_t v10;
  float32x4_t result;

  v2 = vmulq_f32(a2, (float32x4_t)xmmword_100F11240);
  v3 = (int8x16_t)vmulq_f32(a2, a2);
  *(float32x2_t *)v3.i8 = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL));
  v3.i32[0] = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1)).u32[0];
  v4 = vrecpe_f32((float32x2_t)v3.u32[0]);
  v5 = vmul_f32(v4, vrecps_f32((float32x2_t)v3.u32[0], v4));
  v6 = vmulq_n_f32(v2, vmul_f32(v5, vrecps_f32((float32x2_t)v3.u32[0], v5)).f32[0]);
  v7 = (int32x4_t)vnegq_f32(v6);
  v8 = (int8x16_t)vtrn2q_s32((int32x4_t)v6, vtrn1q_s32((int32x4_t)v6, v7));
  v9 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v6, (int8x16_t)v7, 8uLL), *a1, 1), (float32x4_t)vextq_s8(v8, v8, 8uLL), COERCE_FLOAT(*(_OWORD *)a1->f32));
  v10 = (float32x4_t)vrev64q_s32((int32x4_t)v6);
  v10.i32[0] = v7.i32[1];
  v10.i32[3] = v7.i32[2];
  result = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v6, *(float32x4_t *)a1->f32, 3), v10, *(float32x4_t *)a1->f32, 2), v9);
  *(float32x4_t *)a1->f32 = result;
  return result;
}

uint64_t sub_10086B170(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10086B1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = type metadata accessor for Data.RangeReference(0);
    result = swift_allocObject(v6, 32, 7);
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v3;
  }
  return result;
}

void sub_10086B268(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_10086B2C0()
{
  unint64_t v0;
  uint64_t v2;

  if (sub_100588D60(BYTE6(v0), 16, &_mh_execute_header, (uint64_t)"init(rawValue:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRL3DRotation.swift", 84, 2u, 145))
  {
    __asm { BR              X10 }
  }
  sub_1004BBBC8(v2, v0);
  return 0;
}

uint64_t sub_10086B67C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  unint64_t v19;
  __n128 v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;

  v3 = sub_1004B804C(&qword_1013F6210);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_1004BB5A4(a1, v7);
  v9 = sub_10086B814();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRL3DRotation.CodingKeys, &type metadata for CRL3DRotation.CodingKeys, v9, v7, v8);
  if (!v1)
  {
    v10 = sub_100587AC0();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Data, v11, v3, &type metadata for Data, v10);
    v12 = v22;
    v13 = v23;
    sub_1004BE310(v22, v23);
    sub_10086B268(v12, v13);
    if ((v16 & 1) == 0)
    {
      *(_QWORD *)&v17 = v14;
      *((_QWORD *)&v17 + 1) = v15;
      v21 = v17;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1004BBBC8(v12, v13);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    }
    v19 = sub_10086BAB4();
    swift_allocError(&type metadata for CRL3DRotation.RotationCodingError, v19, 0, 0);
    swift_willThrow(v20);
    sub_1004BBBC8(v12, v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
}

unint64_t sub_10086B814()
{
  unint64_t result;

  result = qword_1013F61C8;
  if (!qword_1013F61C8)
  {
    result = swift_getWitnessTable(&unk_100F1150C, &type metadata for CRL3DRotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F61C8);
  }
  return result;
}

unint64_t sub_10086B85C()
{
  unint64_t result;

  result = qword_1013F61D0;
  if (!qword_1013F61D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRL3DRotation, &type metadata for CRL3DRotation);
    atomic_store(result, (unint64_t *)&qword_1013F61D0);
  }
  return result;
}

unint64_t sub_10086B8A4()
{
  unint64_t result;

  result = qword_1013F61D8;
  if (!qword_1013F61D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRL3DRotation, &type metadata for CRL3DRotation);
    atomic_store(result, (unint64_t *)&qword_1013F61D8);
  }
  return result;
}

unint64_t sub_10086B8EC()
{
  unint64_t result;

  result = qword_1013F61E0;
  if (!qword_1013F61E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRL3DRotation, &type metadata for CRL3DRotation);
    atomic_store(result, (unint64_t *)&qword_1013F61E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRL3DRotation()
{
  return &type metadata for CRL3DRotation;
}

ValueMetadata *type metadata accessor for CRL3DRotation.CodingKeys()
{
  return &type metadata for CRL3DRotation.CodingKeys;
}

unint64_t sub_10086B958()
{
  unint64_t result;

  result = qword_1013F61E8;
  if (!qword_1013F61E8)
  {
    result = swift_getWitnessTable(&unk_100F114E4, &type metadata for CRL3DRotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F61E8);
  }
  return result;
}

unint64_t sub_10086B9A0()
{
  unint64_t result;

  result = qword_1013F61F0;
  if (!qword_1013F61F0)
  {
    result = swift_getWitnessTable(&unk_100F11454, &type metadata for CRL3DRotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F61F0);
  }
  return result;
}

unint64_t sub_10086B9E8()
{
  unint64_t result;

  result = qword_1013F61F8;
  if (!qword_1013F61F8)
  {
    result = swift_getWitnessTable(&unk_100F1147C, &type metadata for CRL3DRotation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F61F8);
  }
  return result;
}

unint64_t sub_10086BA2C()
{
  unint64_t result;

  result = qword_1013F6200;
  if (!qword_1013F6200)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRL3DRotation, &type metadata for CRL3DRotation);
    atomic_store(result, (unint64_t *)&qword_1013F6200);
  }
  return result;
}

unint64_t sub_10086BA70()
{
  unint64_t result;

  result = qword_1013F6208;
  if (!qword_1013F6208)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CRL3DRotation, &type metadata for CRL3DRotation);
    atomic_store(result, (unint64_t *)&qword_1013F6208);
  }
  return result;
}

unint64_t sub_10086BAB4()
{
  unint64_t result;

  result = qword_1013F6218;
  if (!qword_1013F6218)
  {
    result = swift_getWitnessTable(&unk_100F115DC, &type metadata for CRL3DRotation.RotationCodingError);
    atomic_store(result, (unint64_t *)&qword_1013F6218);
  }
  return result;
}

uint64_t _s8Freeform13CRL3DRotationV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10086BB38 + 4 * byte_100F11250[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10086BB58 + 4 * byte_100F11255[v4]))();
}

_BYTE *sub_10086BB38(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10086BB58(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10086BB60(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10086BB68(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10086BB70(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10086BB78(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRL3DRotation.RotationCodingError()
{
  return &type metadata for CRL3DRotation.RotationCodingError;
}

unint64_t sub_10086BB98()
{
  unint64_t result;

  result = qword_1013F6220;
  if (!qword_1013F6220)
  {
    result = swift_getWitnessTable(&unk_100F115B4, &type metadata for CRL3DRotation.RotationCodingError);
    atomic_store(result, (unint64_t *)&qword_1013F6220);
  }
  return result;
}

uint64_t sub_10086BBDC(unsigned int a1)
{
  return bswap32(a1);
}

char *sub_10086BBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  uint64_t v40;
  void *v41;
  char *v42;
  objc_class *v43;
  id v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  objc_super v54;
  _BYTE v55[32];
  _BYTE v56[24];
  _BYTE v57[32];
  char *v58;

  v53 = a4;
  v49 = a2;
  v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v8);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v50 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v47 = (uint64_t)v46 - v14;
  __chkstk_darwin(v15);
  v48 = (uint64_t)v46 - v16;
  __chkstk_darwin(v17);
  v52 = (uint64_t)v46 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)v46 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)v46 - v23;
  v51 = v4;
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v25);
  v26 = sub_1007BB2AC(1);
  swift_release(v25);
  v27 = (char *)v26 + *(_QWORD *)(*v26 + 632);
  swift_beginAccess(v27, v57, 0, 0);
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v10, &qword_1013F5530);
  swift_retain(v26);
  v28 = sub_1004B804C((uint64_t *)&unk_101406B00);
  CRRegister.wrappedValue.getter(v28);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v24, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemParentAffinity);
  sub_1004CB800((uint64_t)v10, &qword_1013F5530);
  swift_release(v26);
  v29 = (uint64_t)v58;
  sub_1007BB55C(v53);
  if (v29)
  {
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
  }
  else
  {
    v53 = 0;
    v46[1] = v8;
    v30 = v52;
    sub_1004CB7BC(v49, v52, (uint64_t *)&unk_1013E1A50);
    v58 = v24;
    v31 = (uint64_t)v24;
    v32 = v48;
    sub_1004CB7BC(v31, v48, (uint64_t *)&unk_1013E1A50);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33) == 1)
    {
      v35 = (uint64_t)v21;
      sub_1004C4938(v32, (uint64_t)v21, (uint64_t *)&unk_1013E1A50);
      swift_retain(v26);
      sub_1004CB800(v52, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v21, v52, v33);
      v36 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      v35 = (uint64_t)v21;
      v36(v21, 0, 1, v33);
    }
    v37 = v47;
    sub_1004CB7BC(v35, v47, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v27, v56, 33, 0);
    v38 = v50;
    sub_1004CB7BC(v37, v50, (uint64_t *)&unk_1013E1A50);
    v39 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v55, v28);
    sub_100582338(v38, v40, (uint64_t *)&unk_1013E1A50);
    v39(v55, 0);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v56);
    sub_1004CB800(v35, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v41 = *(void **)(v51 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v42 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem(0));
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v41;
    *(_QWORD *)&v42[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v26;
    v43 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v54.receiver = v42;
    v54.super_class = v43;
    v44 = v41;
    v27 = (char *)objc_msgSendSuper2(&v54, "init");
    sub_1004CB800((uint64_t)v58, (uint64_t *)&unk_1013E1A50);
  }
  return v27;
}

uint64_t sub_10086C0C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t (*v4)(__n128);
  __n128 v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  if ((sub_1009232C8() & 1) == 0)
    return 0;
  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *v1;
  result = swift_conformsToProtocol2(*v1, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v4 = *(uint64_t (**)(__n128))(v2 + 704);
    v5 = swift_retain(v1);
    v6 = (void *)v4(v5);
    swift_release(v1);
    v7 = objc_opt_self(CRLConnectionLinePathSource);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      v9 = objc_msgSend(v8, "type");

      return v9 != (id)1;
    }
    else
    {

      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10086C178(char a1)
{
  return !a1 || a1 == 5;
}

void sub_10086C1C8()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  void (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  void (*v80)(char *, uint64_t);
  id v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  uint64_t v87;
  __n128 v88;
  void *v89;
  Class isa;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  id v100;
  char *v101;
  char *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(void);
  void (*v118)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  char v126[24];
  char v127[16];
  _QWORD aBlock[5];
  uint64_t v129;
  uint64_t v130;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v123 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v102 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v115);
  v5 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v98 - v7;
  v124 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v124);
  v108 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v107 = (uint64_t)&v98 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v12);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v114 = (uint64_t)&v98 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v98 - v18;
  __chkstk_darwin(v20);
  v109 = (char *)&v98 - v21;
  __chkstk_darwin(v22);
  v113 = (uint64_t)&v98 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v98 - v25;
  v27 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v28 = swift_allocObject(v27, 40, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v28 + 32) = v0;
  aBlock[0] = v28;
  specialized Array._endMutation()(v28);
  v29 = aBlock[0];
  v130 = aBlock[0];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem]);
  if (!Strong)
  {
    v85 = v0;
    goto LABEL_46;
  }
  v111 = v8;
  v31 = (void *)Strong;
  v32 = type metadata accessor for CRLContainerItem(0);
  v33 = swift_dynamicCastClass(v31, v32);
  if (!v33)
  {
    v86 = v1;

LABEL_46:
    v87 = swift_allocObject(&unk_101282FF8, 17, 7);
    *(_BYTE *)(v87 + 16) = 0;
    if ((unint64_t)v29 >> 62)
    {
      if (v29 < 0)
        v95 = v29;
      else
        v95 = v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v29);
      v96 = sub_1004B804C(&qword_1013E0670);
      _bridgeCocoaArray<A>(_:)(v95, v96);
      swift_bridgeObjectRelease();
    }
    else
    {
      v88 = swift_bridgeObjectRetain(v29);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v88);
    }
    swift_bridgeObjectRelease();
    v89 = (void *)objc_opt_self(CRLCanvasLayoutController);
    sub_1004B804C(&qword_1013E0670);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v91 = swift_allocObject(&unk_101283020, 32, 7);
    *(_QWORD *)(v91 + 16) = v1;
    *(_QWORD *)(v91 + 24) = v87;
    aBlock[4] = sub_10087333C;
    v129 = v91;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_101283038;
    v92 = _Block_copy(aBlock);
    v93 = v129;
    v94 = v1;
    swift_retain(v87);
    objc_msgSend(v89, "temporaryLayoutControllerForInfos:useInBlock:", isa, v92, swift_release(v93).n128_f64[0]);
    _Block_release(v92);

    swift_beginAccess(v87 + 16, aBlock, 0, 0);
    swift_release(v87);
    return;
  }
  v34 = v33;
  v100 = v31;
  v110 = v19;
  v35 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  v36 = *(_QWORD *)(v33 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  v122 = v1;
  if (!v36)
  {
    sub_100740DA4();
    v36 = *(_QWORD *)(v34 + v35);
  }
  if (v36)
    v37 = v36;
  else
    v37 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v37 >> 62)
  {
    if (v37 < 0)
      v97 = v37;
    else
      v97 = v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v37);
    v39 = _CocoaArrayWrapper.endIndex.getter(v97);
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = v36;
    v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v38);
  }
  v40 = (uint64_t)v109;
  v41 = (uint64_t)v111;
  if (!v39)
  {

    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  if (v39 >= 1)
  {
    v120 = v2;
    v101 = v14;
    v99 = v1;
    v42 = 0;
    v121 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v103 = v37 & 0xC000000000000001;
    v43 = v115;
    v106 = v5;
    v112 = v26;
    v105 = v37;
    v104 = v39;
    while (1)
    {
      v119 = v42;
      if (v103)
        v46 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v37);
      else
        v46 = *(id *)(v37 + 8 * v42 + 32);
      v47 = *(void (**)(void))((swift_isaMask & *v46) + 0x88);
      v125 = v46;
      v117 = v47;
      v47();
      v48 = v123;
      v49 = v120;
      v118 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56);
      v118(v26, 0, 1, v120);
      v50 = *(_QWORD *)&v122[v121];
      if (*(_UNKNOWN ****)v50 != &off_1013F2808)
        v50 = 0;
      v51 = v50 + *(_QWORD *)(*(_QWORD *)v50 + 752);
      swift_beginAccess(v51, v127, 0, 0);
      v52 = v107;
      sub_1004B8460(v51, v107, type metadata accessor for CRLConnectionLineCRDTData);
      v53 = sub_1004B804C(&qword_1013EC6D0);
      v54 = (uint64_t)v26;
      v55 = v113;
      v116 = v53;
      CRRegister.wrappedValue.getter(v53);
      sub_1004B84A4(v52, type metadata accessor for CRLConnectionLineCRDTData);
      v56 = v41 + *(int *)(v43 + 48);
      sub_1004CB7BC(v54, v41, (uint64_t *)&unk_1013E1A50);
      sub_1004CB7BC(v55, v56, (uint64_t *)&unk_1013E1A50);
      v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      if (v57(v41, 1, v49) == 1)
      {
        sub_1004CB800(v55, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v54, (uint64_t *)&unk_1013E1A50);
        v58 = v57(v56, 1, v49);
        v44 = v125;
        if (v58 == 1)
        {
          sub_1004CB800(v41, (uint64_t *)&unk_1013E1A50);
LABEL_28:
          v65 = v44;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v65);
          v67 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v66 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v67 >= v66 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
          v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
          v59 = specialized Array._endMutation()(v68);
          v43 = v115;
          v41 = (uint64_t)v111;
          goto LABEL_31;
        }
      }
      else
      {
        sub_1004CB7BC(v41, v40, (uint64_t *)&unk_1013E1A50);
        if (v57(v56, 1, v49) != 1)
        {
          v60 = v123;
          v61 = v102;
          (*(void (**)(char *, uint64_t, uint64_t))(v123 + 32))(v102, v56, v49);
          sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v62 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v61);
          v63 = *(void (**)(char *, uint64_t))(v60 + 8);
          v64 = v114;
          v43 = v115;
          v63(v61, v49);
          sub_1004CB800(v113, (uint64_t *)&unk_1013E1A50);
          sub_1004CB800((uint64_t)v112, (uint64_t *)&unk_1013E1A50);
          v63((char *)v40, v49);
          v41 = (uint64_t)v111;
          v59 = sub_1004CB800((uint64_t)v111, (uint64_t *)&unk_1013E1A50);
          v44 = v125;
          if ((v62 & 1) == 0)
            goto LABEL_32;
          goto LABEL_28;
        }
        sub_1004CB800(v113, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800((uint64_t)v112, (uint64_t *)&unk_1013E1A50);
        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v40, v49);
        v44 = v125;
      }
      v59 = sub_1004CB800(v41, (uint64_t *)&unk_1013F62D0);
LABEL_31:
      v64 = v114;
LABEL_32:
      v69 = (uint64_t)v110;
      ((void (*)(uint64_t))v117)(v59);
      v70 = v120;
      v118((char *)v69, 0, 1, v120);
      v71 = *(_QWORD *)&v122[v121];
      if (*(_UNKNOWN ****)v71 != &off_1013F2808)
        v71 = 0;
      v72 = v71 + *(_QWORD *)(*(_QWORD *)v71 + 752);
      swift_beginAccess(v72, v126, 0, 0);
      v73 = v108;
      sub_1004B8460(v72, v108, type metadata accessor for CRLConnectionLineCRDTData);
      CRRegister.wrappedValue.getter(v116);
      sub_1004B84A4(v73, type metadata accessor for CRLConnectionLineCRDTData);
      v74 = (uint64_t)v106;
      v75 = (uint64_t)&v106[*(int *)(v43 + 48)];
      sub_1004CB7BC(v69, (uint64_t)v106, (uint64_t *)&unk_1013E1A50);
      sub_1004CB7BC(v64, v75, (uint64_t *)&unk_1013E1A50);
      if (v57(v74, 1, v70) == 1)
      {
        sub_1004CB800(v64, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v69, (uint64_t *)&unk_1013E1A50);
        if (v57(v75, 1, v70) == 1)
        {
          sub_1004CB800(v74, (uint64_t *)&unk_1013E1A50);
          v37 = v105;
          v43 = v115;
          v45 = v119;
          v26 = v112;
LABEL_39:
          v81 = v44;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
          v83 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v82 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v83 >= v82 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
          v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
          specialized Array._endMutation()(v84);
          v41 = (uint64_t)v111;
          goto LABEL_15;
        }
        goto LABEL_14;
      }
      v76 = (uint64_t)v101;
      sub_1004CB7BC(v74, (uint64_t)v101, (uint64_t *)&unk_1013E1A50);
      if (v57(v75, 1, v70) == 1)
      {
        sub_1004CB800(v114, (uint64_t *)&unk_1013E1A50);
        sub_1004CB800(v69, (uint64_t *)&unk_1013E1A50);
        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v76, v70);
        v44 = v125;
LABEL_14:
        sub_1004CB800(v74, (uint64_t *)&unk_1013F62D0);
        v37 = v105;
        v43 = v115;
        v45 = v119;
        v26 = v112;
        goto LABEL_15;
      }
      v77 = v123;
      v78 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v123 + 32))(v102, v75, v70);
      sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v79 = dispatch thunk of static Equatable.== infix(_:_:)(v76, v78);
      v80 = *(void (**)(char *, uint64_t))(v77 + 8);
      v80(v78, v70);
      sub_1004CB800(v114, (uint64_t *)&unk_1013E1A50);
      sub_1004CB800((uint64_t)v110, (uint64_t *)&unk_1013E1A50);
      v80((char *)v76, v70);
      v41 = (uint64_t)v111;
      sub_1004CB800(v74, (uint64_t *)&unk_1013E1A50);
      v37 = v105;
      v44 = v125;
      v43 = v115;
      v45 = v119;
      v26 = v112;
      if ((v79 & 1) != 0)
        goto LABEL_39;
LABEL_15:
      v42 = v45 + 1;

      v40 = (uint64_t)v109;
      if (v104 == v42)
      {

        swift_bridgeObjectRelease();
        v29 = v130;
        v1 = v99;
        goto LABEL_46;
      }
    }
  }
  __break(1u);
}

void sub_10086CDC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  unsigned __int8 *v6;
  unsigned __int8 v7;
  id v8;
  _BYTE v9[24];

  v8 = objc_msgSend(a1, "layoutForInfo:", a2);
  if (v8)
  {
    v4 = objc_opt_self(CRLShapeLayout);
    v5 = (void *)swift_dynamicCastObjCClass(v8, v4);
    if (v5)
    {
      v6 = (unsigned __int8 *)(a3 + 16);
      v7 = objc_msgSend(v5, "isTailEndOnLeft");

      swift_beginAccess(v6, v9, 1, 0);
      *v6 = v7;
    }
    else
    {

    }
  }
}

uint64_t sub_10086CEA4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t (*v4)(__n128);
  __n128 v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  unint64_t *v11;
  __objc2_class **v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _BYTE v19[72];

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v2 = *v1;
  result = swift_conformsToProtocol2(*v1, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v4 = *(uint64_t (**)(__n128))(v2 + 704);
    v5 = swift_retain(v1);
    v6 = (void *)v4(v5);
    swift_release(v1);
    v7 = objc_opt_self(CRLConnectionLinePathSource);
    v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "type");
      if (v10)
      {
        if (v10 == (id)1)
        {

          v11 = (unint64_t *)&unk_1013F62C8;
          v12 = off_101229870;
          return sub_1004B8930(0, v11, v12);
        }
        v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v13, v19);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        v18 = objc_msgSend(v9, "type");
        type metadata accessor for CRLConnectionLinePathSourceType(0);
        v16 = v15;
        v17 = sub_1004B804C(&qword_1013E0190);
        swift_dynamicCast(inited + 32, &v18, v16, v17, 7);
        sub_100757E04(&_mh_execute_header, (uint64_t)"layoutClass", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 103, "Unexpected connection line path source type (%d).", 49, 2u, inited);
        sub_1004F5394(inited, (uint64_t)"layoutClass", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2u, 103, (uint64_t)"Unexpected connection line path source type (%d).", 49, 2u);

        swift_setDeallocating(inited);
        swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), v17);
      }
      else
      {

      }
    }
    else
    {

      sub_100757E04(&_mh_execute_header, (uint64_t)"layoutClass", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 93, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutClass", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2u, 93, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    v11 = (unint64_t *)&unk_1013F62C0;
    v12 = off_101229868;
    return sub_1004B8930(0, v11, v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_10086D1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  unsigned __int8 v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, __n128);
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  unsigned __int8 v65;
  id v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, __n128);
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  id v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v1);
  v87 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v88 = (char *)&v85 - v4;
  __chkstk_darwin(v5);
  v7 = (char *)&v85 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v85 - v9;
  v93 = v0;
  v92 = v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v12, "isKindOfClass:", swift_getObjCClassFromMetadata(v13, v14)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  v91 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v15 = *(_QWORD **)(v93 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v16 = *v15;
  result = swift_conformsToProtocol2(*v15, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (!result)
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v18 = result;
  v19 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
  v20 = swift_retain(v15);
  v19(v16, v18, v20);
  swift_release(v15);
  v89 = v1;
  v90 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  CRRegister.wrappedValue.getter(v90);
  v22 = v115;
  v21 = v116;
  v23 = v117;
  v24 = v118;
  v26 = v119;
  v25 = v120;
  v27 = v121;
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (v25)
  {
    v115 = v22;
    v116 = v21;
    LOBYTE(v117) = v23 & 1;
    HIDWORD(v117) = HIDWORD(v23);
    LODWORD(v118) = v24;
    BYTE4(v118) = BYTE4(v24) & 1;
    v119 = v26;
    v120 = v25;
    v121 = v27;
    sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
    v86 = sub_100785FD4((uint64_t)&v115);
    sub_1004C41DC(v22, v21, v23, v24, v26, v25, v27);
    v28 = swift_unknownObjectWeakLoadStrong(v92);
    if (v28)
    {
      v29 = (void *)v28;
      v30 = type metadata accessor for CRLFreehandDrawingItem(0);
      if (objc_msgSend(v29, "isKindOfClass:", swift_getObjCClassFromMetadata(v30, v31)))
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
      }

    }
    v32 = *(_QWORD **)(v93 + v91);
    v33 = *v32;
    result = swift_conformsToProtocol2(*v32, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (!result)
      goto LABEL_38;
    v34 = result;
    v35 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
    v36 = swift_retain(v32);
    v35(v33, v34, v36);
    swift_release(v32);
    CRRegister.wrappedValue.getter(v90);
    v37 = v108;
    v38 = v109;
    v39 = v110;
    v40 = v111;
    v41 = v112;
    v42 = v113;
    v43 = v114;
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (v42)
    {
      v108 = v37;
      v109 = v38;
      LOBYTE(v110) = v39 & 1;
      HIDWORD(v110) = HIDWORD(v39);
      LODWORD(v111) = v40;
      BYTE4(v111) = BYTE4(v40) & 1;
      v112 = v41;
      v113 = v42;
      v114 = v43;
      v44 = sub_100785FD4((uint64_t)&v108);
      sub_1004C41DC(v37, v38, v39, v40, v41, v42, v43);
      v45 = v86;
      if (objc_msgSend(v86, "isArrow"))
      {
        v46 = objc_msgSend(v44, "isArrow");

        if ((v46 & 1) != 0)
          return 0;
        goto LABEL_19;
      }

    }
    else
    {
      v44 = v86;
    }

  }
LABEL_19:
  v47 = swift_unknownObjectWeakLoadStrong(v92);
  if (v47)
  {
    v48 = (void *)v47;
    v49 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v48, "isKindOfClass:", swift_getObjCClassFromMetadata(v49, v50)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  v51 = *(_QWORD **)(v93 + v91);
  v52 = *v51;
  result = swift_conformsToProtocol2(*v51, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (!result)
    goto LABEL_37;
  v53 = result;
  v54 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
  v55 = swift_retain(v51);
  v56 = (uint64_t)v88;
  v54(v52, v53, v55);
  swift_release(v51);
  CRRegister.wrappedValue.getter(v90);
  v57 = v101;
  v58 = v102;
  v59 = v103;
  v60 = v104;
  v62 = v105;
  v61 = v106;
  v63 = v107;
  sub_1004B84A4(v56, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (v61)
  {
    v101 = v57;
    v102 = v58;
    LOBYTE(v103) = v59 & 1;
    HIDWORD(v103) = HIDWORD(v59);
    LODWORD(v104) = v60;
    BYTE4(v104) = BYTE4(v60) & 1;
    v105 = v62;
    v106 = v61;
    v107 = v63;
    sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
    v64 = sub_100785FD4((uint64_t)&v101);
    sub_1004C41DC(v57, v58, v59, v60, v62, v61, v63);
    v65 = objc_msgSend(v64, "isArrow");

    if ((v65 & 1) != 0)
      return 1;
  }
  v67 = swift_unknownObjectWeakLoadStrong(v92);
  if (v67)
  {
    v68 = (void *)v67;
    v69 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v68, "isKindOfClass:", swift_getObjCClassFromMetadata(v69, v70)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  v71 = *(_QWORD **)(v93 + v91);
  v72 = *v71;
  result = swift_conformsToProtocol2(*v71, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (result)
  {
    v73 = result;
    v74 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
    v75 = swift_retain(v71);
    v76 = (uint64_t)v87;
    v74(v72, v73, v75);
    swift_release(v71);
    CRRegister.wrappedValue.getter(v90);
    v77 = v94;
    v78 = v95;
    v79 = v96;
    v80 = v97;
    v81 = v98;
    v82 = v99;
    v83 = v100;
    sub_1004B84A4(v76, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (!v82)
      return 0;
    v94 = v77;
    v95 = v78;
    LOBYTE(v96) = v79 & 1;
    HIDWORD(v96) = HIDWORD(v79);
    LODWORD(v97) = v80;
    BYTE4(v97) = BYTE4(v80) & 1;
    v98 = v81;
    v99 = v82;
    v100 = v83;
    sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
    v84 = sub_100785FD4((uint64_t)&v94);
    sub_1004C41DC(v77, v78, v79, v80, v81, v82, v83);
    v66 = objc_msgSend(v84, "isArrow");

    return (uint64_t)v66;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10086DB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, __n128);
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  unsigned int v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, __n128);
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  unsigned int v83;
  unsigned __int8 v84;
  uint64_t v85;
  id v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v1);
  v87 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v88 = (char *)&v85 - v4;
  __chkstk_darwin(v5);
  v7 = (char *)&v85 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v85 - v9;
  v93 = v0;
  v92 = v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v12, "isKindOfClass:", swift_getObjCClassFromMetadata(v13, v14)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  v91 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v15 = *(_QWORD **)(v93 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v16 = *v15;
  result = swift_conformsToProtocol2(*v15, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (!result)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v18 = result;
  v19 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
  v20 = swift_retain(v15);
  v19(v16, v18, v20);
  swift_release(v15);
  v89 = v1;
  v90 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
  CRRegister.wrappedValue.getter(v90);
  v22 = v115;
  v21 = v116;
  v23 = v117;
  v24 = v118;
  v26 = v119;
  v25 = v120;
  v27 = v121;
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (!v25)
    goto LABEL_17;
  v115 = v22;
  v116 = v21;
  LOBYTE(v117) = v23 & 1;
  HIDWORD(v117) = HIDWORD(v23);
  LODWORD(v118) = v24;
  BYTE4(v118) = BYTE4(v24) & 1;
  v119 = v26;
  v120 = v25;
  v121 = v27;
  sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
  v86 = sub_100785FD4((uint64_t)&v115);
  sub_1004C41DC(v22, v21, v23, v24, v26, v25, v27);
  v28 = swift_unknownObjectWeakLoadStrong(v92);
  if (v28)
  {
    v29 = (void *)v28;
    v30 = type metadata accessor for CRLFreehandDrawingItem(0);
    if (objc_msgSend(v29, "isKindOfClass:", swift_getObjCClassFromMetadata(v30, v31)))
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
    }

  }
  v32 = *(_QWORD **)(v93 + v91);
  v33 = *v32;
  result = swift_conformsToProtocol2(*v32, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
  if (!result)
    goto LABEL_37;
  v34 = result;
  v35 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
  v36 = swift_retain(v32);
  v35(v33, v34, v36);
  swift_release(v32);
  CRRegister.wrappedValue.getter(v90);
  v37 = v108;
  v38 = v109;
  v39 = v110;
  v40 = v111;
  v41 = v112;
  v42 = v113;
  v43 = v114;
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (!v42)
  {
    v44 = v86;
    goto LABEL_16;
  }
  v108 = v37;
  v109 = v38;
  LOBYTE(v110) = v39 & 1;
  HIDWORD(v110) = HIDWORD(v39);
  LODWORD(v111) = v40;
  BYTE4(v111) = BYTE4(v40) & 1;
  v112 = v41;
  v113 = v42;
  v114 = v43;
  v44 = sub_100785FD4((uint64_t)&v108);
  sub_1004C41DC(v37, v38, v39, v40, v41, v42, v43);
  v45 = v86;
  if ((objc_msgSend(v86, "isNone") & 1) != 0)
  {

LABEL_16:
    goto LABEL_17;
  }
  v84 = objc_msgSend(v44, "isNone");

  if ((v84 & 1) != 0)
  {
LABEL_17:
    v46 = swift_unknownObjectWeakLoadStrong(v92);
    if (v46)
    {
      v47 = (void *)v46;
      v48 = type metadata accessor for CRLFreehandDrawingItem(0);
      if (objc_msgSend(v47, "isKindOfClass:", swift_getObjCClassFromMetadata(v48, v49)))
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
      }

    }
    v50 = *(_QWORD **)(v93 + v91);
    v51 = *v50;
    result = swift_conformsToProtocol2(*v50, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
    if (result)
    {
      v52 = result;
      v53 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
      v54 = swift_retain(v50);
      v55 = (uint64_t)v88;
      v53(v51, v52, v54);
      swift_release(v50);
      CRRegister.wrappedValue.getter(v90);
      v56 = v101;
      v57 = v102;
      v58 = v103;
      v59 = v104;
      v61 = v105;
      v60 = v106;
      v62 = v107;
      sub_1004B84A4(v55, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      if (v60)
      {
        v101 = v56;
        v102 = v57;
        LOBYTE(v103) = v58 & 1;
        HIDWORD(v103) = HIDWORD(v58);
        LODWORD(v104) = v59;
        BYTE4(v104) = BYTE4(v59) & 1;
        v105 = v61;
        v106 = v60;
        v107 = v62;
        sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
        v63 = sub_100785FD4((uint64_t)&v101);
        sub_1004C41DC(v56, v57, v58, v59, v61, v60, v62);
        v64 = objc_msgSend(v63, "isNone");

        if (!v64)
          return 1;
      }
      v65 = swift_unknownObjectWeakLoadStrong(v92);
      if (v65)
      {
        v66 = (void *)v65;
        v67 = type metadata accessor for CRLFreehandDrawingItem(0);
        if (objc_msgSend(v66, "isKindOfClass:", swift_getObjCClassFromMetadata(v67, v68)))
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
        }

      }
      v69 = *(_QWORD **)(v93 + v91);
      v70 = *v69;
      result = swift_conformsToProtocol2(*v69, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
      if (result)
      {
        v71 = result;
        v72 = *(void (**)(uint64_t, uint64_t, __n128))(result + 16);
        v73 = swift_retain(v69);
        v74 = (uint64_t)v87;
        v72(v70, v71, v73);
        swift_release(v69);
        CRRegister.wrappedValue.getter(v90);
        v75 = v94;
        v76 = v95;
        v77 = v96;
        v78 = v97;
        v79 = v98;
        v80 = v99;
        v81 = v100;
        sub_1004B84A4(v74, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        if (v80)
        {
          v94 = v75;
          v95 = v76;
          LOBYTE(v96) = v77 & 1;
          HIDWORD(v96) = HIDWORD(v77);
          LODWORD(v97) = v78;
          BYTE4(v97) = BYTE4(v78) & 1;
          v98 = v79;
          v99 = v80;
          v100 = v81;
          sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
          v82 = sub_100785FD4((uint64_t)&v94);
          sub_1004C41DC(v75, v76, v77, v78, v79, v80, v81);
          v83 = objc_msgSend(v82, "isNone");

          if (!v83)
            return 1;
        }
        return 0;
      }
LABEL_38:
      __break(1u);
      return result;
    }
    goto LABEL_36;
  }
  return 0;
}

id sub_10086E4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  char *v5;
  id v6;
  objc_super v8;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v2);
  v3 = sub_1007BB2AC(0);
  swift_release(v2);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v5 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem(0));
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v4;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v3;
  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v6 = v4;
  return objc_msgSendSuper2(&v8, "init");
}

uint64_t sub_10086E580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  CKRecordID v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];
  _QWORD v45[3];
  uint64_t v46;

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013F6288);
  v39 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v38 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - v10;
  v12 = sub_1004B804C(&qword_1013F6280);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLConnectionLineItem(0);
  v16 = swift_dynamicCastClass(a1, v15);
  if (v16)
  {
    v17 = v16;
    v41 = a1;
    swift_unknownObjectRetain(a1);
    v40 = sub_100B0C360(v17, v2);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v18 != &off_1013F2808)
      v18 = 0;
    v19 = v18 + *(_QWORD *)(*(_QWORD *)v18 + 752);
    swift_beginAccess(v19, v44, 0, 0);
    sub_1004B8460(v19, (uint64_t)v11, type metadata accessor for CRLConnectionLineCRDTData);
    v20 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v20 != &off_1013F2808)
      v20 = 0;
    v21 = v20 + *(_QWORD *)(*(_QWORD *)v20 + 752);
    swift_beginAccess(v21, v43, 0, 0);
    sub_1004B8460(v21, (uint64_t)v8, type metadata accessor for CRLConnectionLineCRDTData);
    v22 = sub_1004B7878(&qword_1013F2C40, type metadata accessor for CRLConnectionLineCRDTData, (uint64_t)&unk_100F0B624);
    CRStruct_3.actionUndoingDifference(from:)(v8, v6, v22);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLConnectionLineCRDTData);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v14, 1, v4) == 1)
    {
      sub_1004CB800((uint64_t)v14, &qword_1013F6280);
      memset(v45, 0, sizeof(v45));
      v46 = 1;
    }
    else
    {
      v23 = *(int *)(v4 + 48);
      v24 = (uint64_t)&v14[v23];
      v25 = *(int *)(v4 + 64);
      v26 = (uint64_t)&v14[v25];
      v27 = v38;
      v28 = v38 + v23;
      v29 = v38 + v25;
      sub_1004C4938((uint64_t)v14, v38, &qword_1013F55C0);
      sub_1004C4938(v24, v28, (uint64_t *)&unk_1013F6290);
      sub_1004C4938(v26, v29, (uint64_t *)&unk_1013F6290);
      v46 = v4;
      v30 = sub_10050D1B0(v45);
      v31 = (uint64_t)v30 + *(int *)(v4 + 48);
      v32 = (uint64_t)v30 + *(int *)(v4 + 64);
      sub_1004C4938(v27, (uint64_t)v30, &qword_1013F55C0);
      sub_1004C4938(v28, v31, (uint64_t *)&unk_1013F6290);
      sub_1004C4938(v29, v32, (uint64_t *)&unk_1013F6290);
    }
    v33 = v40;
    swift_beginAccess(v40 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v42, 33, 0);
    sub_10083DA20((uint64_t)v45, 5);
    swift_endAccess(v42);
    swift_unknownObjectRelease(v41);
    return v33;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 153, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2u, 153, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v35, v36);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10086E9D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  double *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v67;
  unint64_t v68;
  double *v69;
  uint64_t result;
  CKRecordID v71;
  Swift::String v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85[24];
  char v86[24];

  v82 = sub_1004B804C(&qword_1013F62A0);
  v78 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v77 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v76 = (uint64_t)&v73 - v5;
  __chkstk_darwin(v6);
  v75 = (uint64_t)&v73 - v7;
  __chkstk_darwin(v8);
  v79 = (uint64_t)&v73 - v9;
  v10 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v73 - v14;
  v16 = sub_1004B804C(&qword_1013F62A8);
  __chkstk_darwin(v16);
  v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v73 - v20;
  v22 = type metadata accessor for CRLConnectionLineItem(0);
  v23 = swift_dynamicCastClass(a1, v22);
  if (v23)
  {
    v24 = v23;
    v80 = a1;
    v25 = swift_unknownObjectRetain(a1);
    v81 = sub_100B0C638(v24, v1, v25);
    v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v26 != &off_1013F2808)
      v26 = 0;
    v27 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 752);
    swift_beginAccess(v27, v86, 0, 0);
    sub_1004B8460(v27, (uint64_t)v15, type metadata accessor for CRLConnectionLineCRDTData);
    v28 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v28 != &off_1013F2808)
      v28 = 0;
    v29 = v28 + *(_QWORD *)(*(_QWORD *)v28 + 752);
    swift_beginAccess(v29, v85, 0, 0);
    sub_1004B8460(v29, (uint64_t)v12, type metadata accessor for CRLConnectionLineCRDTData);
    v30 = sub_1004B7878((unint64_t *)&unk_1013F62B0, type metadata accessor for CRLConnectionLineCRDTData, (uint64_t)&unk_100F0B4BC);
    CRType.observableDifference(from:)(v12, v10, v30);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1004CB7BC((uint64_t)v21, (uint64_t)v18, &qword_1013F62A8);
    v31 = v82;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v18, 1, v82) == 1)
    {
      sub_1004CB800((uint64_t)v18, &qword_1013F62A8);
      v32 = _swiftEmptyArrayStorage;
      v33 = v80;
      v34 = v81;
      if (!*(_QWORD *)&_swiftEmptyArrayStorage[2])
        goto LABEL_31;
    }
    else
    {
      v35 = *(int *)(v31 + 48);
      v36 = v79;
      v37 = v79 + v35;
      v38 = *(int *)(v31 + 64);
      v39 = v79 + v38;
      v40 = (uint64_t)&v18[v35];
      v41 = (uint64_t)&v18[v38];
      sub_1004C4938((uint64_t)v18, v79, &qword_1013F5600);
      sub_1004C4938(v40, v37, &qword_1013E9C40);
      sub_1004C4938(v41, v39, &qword_1013E9C40);
      v42 = v75;
      v43 = v75 + *(int *)(v31 + 48);
      v44 = v75 + *(int *)(v31 + 64);
      sub_1004CB7BC(v36, v75, &qword_1013F5600);
      sub_1004CB7BC(v37, v43, &qword_1013E9C40);
      sub_1004CB7BC(v39, v44, &qword_1013E9C40);
      v45 = sub_1004B804C(&qword_1013F5608);
      v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v42, 1, v45);
      v74 = v21;
      if (v46 == 1)
      {
        sub_1004CB800(v44, &qword_1013E9C40);
        sub_1004CB800(v43, &qword_1013E9C40);
        sub_1004CB800(v42, &qword_1013F5600);
      }
      else
      {
        sub_1004CB800(v42, &qword_1013F5600);
        sub_1004CB800(v44, &qword_1013E9C40);
        sub_1004CB800(v43, &qword_1013E9C40);
        if (!*(_QWORD *)(v81 + 16) || (sub_1008431EC(5), (v47 & 1) == 0))
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 174, "If superData has changed, super should have built keys for it already.", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2u, 174, (uint64_t)"If superData has changed, super should have built keys for it already.", 70, 2u);
        }
      }
      v48 = v76;
      v49 = v76 + *(int *)(v31 + 48);
      v50 = v76 + *(int *)(v31 + 64);
      sub_1004CB7BC(v36, v76, &qword_1013F5600);
      sub_1004CB7BC(v37, v49, &qword_1013E9C40);
      sub_1004CB7BC(v39, v50, &qword_1013E9C40);
      v51 = type metadata accessor for CRValueObservableDifference(0);
      v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48);
      v53 = v52(v50, 1, v51);
      sub_1004CB800(v50, &qword_1013E9C40);
      sub_1004CB800(v49, &qword_1013E9C40);
      sub_1004CB800(v48, &qword_1013F5600);
      if (v53 == 1)
      {
        v32 = _swiftEmptyArrayStorage;
        v54 = v79;
        v55 = (uint64_t)v77;
      }
      else
      {
        v32 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
        v57 = *((_QWORD *)v32 + 2);
        v56 = *((_QWORD *)v32 + 3);
        if (v57 >= v56 >> 1)
          v32 = (double *)sub_100D0EF94((_QWORD *)(v56 > 1), v57 + 1, 1, v32);
        v54 = v79;
        v55 = (uint64_t)v77;
        *((_QWORD *)v32 + 2) = v57 + 1;
        v58 = &v32[2 * v57];
        v58[4] = 5.28758932e180;
        v58[5] = -2.56842574e207;
      }
      v59 = v55 + *(int *)(v82 + 48);
      v60 = v55 + *(int *)(v82 + 64);
      sub_1004CB7BC(v54, v55, &qword_1013F5600);
      sub_1004CB7BC(v37, v59, &qword_1013E9C40);
      sub_1004CB7BC(v39, v60, &qword_1013E9C40);
      if (v52(v59, 1, v51) == 1)
      {
        sub_1004CB800(v54, &qword_1013F62A0);
        sub_1004CB800(v60, &qword_1013E9C40);
        sub_1004CB800(v59, &qword_1013E9C40);
        sub_1004CB800(v55, &qword_1013F5600);
        v33 = v80;
        v34 = v81;
        v21 = v74;
        if (!*((_QWORD *)v32 + 2))
        {
LABEL_31:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease(v33);
LABEL_32:
          sub_1004CB800((uint64_t)v21, &qword_1013F62A8);
          return v34;
        }
      }
      else
      {
        sub_1004CB800(v59, &qword_1013E9C40);
        sub_1004CB800(v60, &qword_1013E9C40);
        sub_1004CB800(v55, &qword_1013F5600);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v32);
        v33 = v80;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v32 = (double *)sub_100D0EF94(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v34 = v81;
        v21 = v74;
        v68 = *((_QWORD *)v32 + 2);
        v67 = *((_QWORD *)v32 + 3);
        if (v68 >= v67 >> 1)
          v32 = (double *)sub_100D0EF94((_QWORD *)(v67 > 1), v68 + 1, 1, v32);
        *((_QWORD *)v32 + 2) = v68 + 1;
        v69 = &v32[2 * v68];
        strcpy((char *)v69 + 32, "connectedFrom");
        *((_WORD *)v69 + 23) = -4864;
        sub_1004CB800(v54, &qword_1013F62A0);
        if (!*((_QWORD *)v32 + 2))
          goto LABEL_31;
      }
    }
    if (*(_QWORD *)(v34 + 16) && (v61 = sub_1008431EC(5), (v62 & 1) != 0))
    {
      v84 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v61);
      swift_bridgeObjectRetain(v84);
      sub_10061EAEC((uint64_t)v32);
      v63 = v84;
      v64 = swift_isUniquelyReferenced_nonNull_native(v34);
      v83 = v34;
      sub_100825A20(v63, 5, v64);
      v34 = v83;
    }
    else
    {
      v65 = swift_isUniquelyReferenced_nonNull_native(v34);
      v84 = v34;
      sub_100825A20((uint64_t)v32, 5, v65);
      v34 = v84;
    }
    swift_unknownObjectRelease(v33);
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 165, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2u, 165, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v71, v72);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_10086F340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _UNKNOWN ****v30;
  _UNKNOWN ****v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _BYTE v39[24];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F6280);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - v9;
  v11 = sub_1004B804C(&qword_1013F6288);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007770E0(a1);
  if (!v2)
  {
    v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v39, 0, 0);
    v16 = *v15;
    if (*(_QWORD *)(v16 + 16))
    {
      swift_bridgeObjectRetain(v16);
      v17 = sub_1008431EC(5);
      if ((v18 & 1) != 0)
      {
        sub_1004CB7BC(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v40, &qword_1013E0230);
      }
      else
      {
        v40 = 0;
        v41 = 0;
        v42 = 0;
        v43 = 1;
      }
      swift_bridgeObjectRelease();
      if (v43 != 1)
      {
        sub_1004C4938((uint64_t)&v40, (uint64_t)v44, &qword_1013E0230);
        if (v45)
        {
          v23 = swift_dynamicCast(v10, v44, (char *)&type metadata for Any + 8, v11, 6);
          v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56);
          v24(v10, v23 ^ 1u, 1, v11);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
          {
            v25 = *(int *)(v11 + 48);
            v26 = (uint64_t)&v14[v25];
            v27 = *(int *)(v11 + 64);
            v46 = v24;
            v28 = (uint64_t)&v14[v27];
            v29 = (uint64_t)&v10[v25];
            v37 = &v10[v27];
            v38 = &v14[v25];
            sub_1004C4938((uint64_t)v10, (uint64_t)v14, &qword_1013F55C0);
            sub_1004C4938(v29, v26, (uint64_t *)&unk_1013F6290);
            sub_1004C4938((uint64_t)v37, v28, (uint64_t *)&unk_1013F6290);
            v30 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            if (*v30 == &off_1013F2808)
              v31 = v30;
            else
              v31 = 0;
            v32 = (uint64_t)&v7[*(int *)(v11 + 48)];
            v33 = (uint64_t)&v7[*(int *)(v11 + 64)];
            sub_1004CB7BC((uint64_t)v14, (uint64_t)v7, &qword_1013F55C0);
            sub_1004CB7BC((uint64_t)v38, v32, (uint64_t *)&unk_1013F6290);
            sub_1004CB7BC(v28, v33, (uint64_t *)&unk_1013F6290);
            v46(v7, 0, 1, v11);
            swift_beginAccess((char *)(*v31)[94] + (_QWORD)v31, v44, 33, 0);
            v34 = type metadata accessor for CRLConnectionLineCRDTData(0);
            v35 = sub_1004B7878(&qword_1013F2C40, type metadata accessor for CRLConnectionLineCRDTData, (uint64_t)&unk_100F0B624);
            swift_retain(v30);
            CRStruct_3.apply(_:)(v7, v34, v35);
            sub_1004CB800((uint64_t)v7, &qword_1013F6280);
            swift_endAccess(v44);
            swift_release(v30);
            v21 = &qword_1013F6288;
            v22 = (uint64_t)v14;
            goto LABEL_11;
          }
LABEL_10:
          v21 = &qword_1013F6280;
          v22 = (uint64_t)v10;
LABEL_11:
          sub_1004CB800(v22, v21);
          return;
        }
        v19 = &qword_1013E0230;
        v20 = (uint64_t *)v44;
LABEL_9:
        sub_1004CB800((uint64_t)v20, v19);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
        goto LABEL_10;
      }
    }
    else
    {
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 1;
    }
    v19 = (uint64_t *)&unk_1013DFC00;
    v20 = &v40;
    goto LABEL_9;
  }
}

void sub_10086F700(uint64_t a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  char v86;
  uint64_t v87;
  _BOOL8 v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  double *v94;
  unint64_t v95;
  unint64_t v96;
  double *v97;
  double *v98;
  _QWORD *v99;
  double *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  float v119;
  float v120;
  float v121;
  float v122;
  unint64_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  float v137;
  float v138;
  float v139;
  float v140;
  unint64_t v141;
  BOOL v142;
  uint64_t v143;
  _QWORD *ObjectType;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(uint64_t);
  void (*v168)(void);
  uint64_t v169;
  _QWORD *v170;
  char *v171;
  _QWORD *v172;
  double *v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  char v178;
  _QWORD *v179;
  char v180;
  uint64_t v181;
  char v182;
  void *v183;
  uint64_t v184;
  char v185;
  float v186;
  float v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  _BYTE v191[128];
  _BYTE v192[24];
  void *v193;
  _QWORD *v194;
  char v195;
  float v196;
  float v197;
  uint64_t v198;
  uint64_t v199;
  char v200;
  float v201;
  float v202;
  uint64_t v203;
  _BYTE v204[128];
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  char v208;
  float v209;
  float v210;
  uint64_t v211;

  v172 = a5;
  v9 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v146 - v13;
  v15 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v15);
  v17 = (char *)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v146 - v19;
  v21 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v21);
  v163 = (uint64_t)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v162 = (uint64_t)&v146 - v24;
  __chkstk_darwin(v25);
  v165 = (uint64_t)&v146 - v26;
  __chkstk_darwin(v27);
  v164 = (uint64_t)&v146 - v28;
  v174 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v174);
  v161 = (char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v160 = (char *)&v146 - v31;
  __chkstk_darwin(v32);
  v159 = (char *)&v146 - v33;
  __chkstk_darwin(v34);
  v158 = (char *)&v146 - v35;
  v173 = (double *)sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v173);
  v157 = (char *)&v146 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v156 = (char *)&v146 - v38;
  __chkstk_darwin(v39);
  v155 = (char *)&v146 - v40;
  __chkstk_darwin(v41);
  v154 = (char *)&v146 - v42;
  if (a3 == 5)
  {
    v171 = v17;
    v175 = v11;
    v148 = a4;
    v47 = a2;
    v48 = *(_QWORD *)(a2 + 16);
    if (!v48)
    {
      v100 = _swiftEmptyArrayStorage;
      v101 = v172;
LABEL_89:
      v143 = v148;
      if (*((_QWORD *)v100 + 2))
      {
        ObjectType = (_QWORD *)swift_getObjectType(v148);
        sub_10092658C(a1, (uint64_t)v100, 5, v143, v176, ObjectType, (uint64_t)v101);
      }
      swift_bridgeObjectRelease();
      return;
    }
    v174 = v9;
    v149 = a1;
    v49 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    swift_bridgeObjectRetain(v47);
    v173 = _swiftEmptyArrayStorage;
    v147 = v50;
    v51 = (_QWORD *)(v50 + 40);
    v52 = (uint64_t)v175;
    while (1)
    {
      v53 = *(v51 - 1);
      v54 = *v51;
      v55 = v53 == 0x657463656E6E6F63 && v54 == 0xED00006D6F724664;
      if (v55
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x657463656E6E6F63, 0xED00006D6F724664, *(v51 - 1), *v51, 0) & 1) != 0)
      {
        v56 = *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        if (*(_UNKNOWN ****)v56 != &off_1013F2808)
          v56 = 0;
        v57 = v56 + *(_QWORD *)(*(_QWORD *)v56 + 752);
        swift_beginAccess(v57, &v181, 0, 0);
        sub_1004B8460(v57, (uint64_t)v14, type metadata accessor for CRLConnectionLineCRDTData);
        v58 = sub_1004B804C(&qword_1013EC6D0);
        CRRegister.wrappedValue.getter(v58);
        sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLConnectionLineCRDTData);
        v59 = type metadata accessor for UUID(0);
        v60 = *(_QWORD *)(v59 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v20, 1, v59) == 1)
        {
          sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E1A50);
          v205 = 0u;
          v206 = 0u;
        }
        else
        {
          *((_QWORD *)&v206 + 1) = v59;
          v61 = sub_10050D1B0(&v205);
          (*(void (**)(_QWORD *, char *, uint64_t))(v60 + 32))(v61, v20, v59);
        }
        swift_beginAccess(v49, v191, 33, 0);
        sub_1004CB7BC((uint64_t)&v205, (uint64_t)v204, &qword_1013E0230);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v49);
        v179 = (_QWORD *)*v49;
        v63 = v179;
        *v49 = 0x8000000000000000;
        v65 = sub_100843260(32);
        v66 = v63[2];
        v67 = (v64 & 1) == 0;
        v68 = v66 + v67;
        if (__OFADD__(v66, v67))
        {
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          type metadata accessor for CRLChangeProperty(0);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v145);
          __break(1u);
          return;
        }
        v69 = v64;
        if (v63[3] >= v68)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_10082C8D0();
        }
        else
        {
          sub_100814B68(v68, isUniquelyReferenced_nonNull_native);
          v70 = sub_100843260(32);
          if ((v69 & 1) != (v71 & 1))
            goto LABEL_101;
          v65 = v70;
        }
        v72 = v179;
        if ((v69 & 1) == 0)
        {
          v179[(v65 >> 6) + 8] |= 1 << v65;
          *(_QWORD *)(v72[6] + 8 * v65) = 32;
          sub_1004C4938((uint64_t)v204, v72[7] + 32 * v65, &qword_1013E0230);
          v73 = v72[2];
          v74 = __OFADD__(v73, 1);
          v75 = v73 + 1;
          if (v74)
            goto LABEL_96;
          goto LABEL_28;
        }
      }
      else
      {
        v76 = v53 == 0x657463656E6E6F63 && v54 == 0xEB000000006F5464;
        if (!v76
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x657463656E6E6F63, 0xEB000000006F5464, v53, v54, 0) & 1) == 0)
        {
          swift_bridgeObjectRetain(v54);
          v94 = v173;
          if ((swift_isUniquelyReferenced_nonNull_native(v173) & 1) == 0)
            v94 = (double *)sub_100D0EF94(0, *((_QWORD *)v94 + 2) + 1, 1, v94);
          v96 = *((_QWORD *)v94 + 2);
          v95 = *((_QWORD *)v94 + 3);
          v173 = v94;
          if (v96 >= v95 >> 1)
            v173 = (double *)sub_100D0EF94((_QWORD *)(v95 > 1), v96 + 1, 1, v173);
          v97 = v173;
          *((_QWORD *)v173 + 2) = v96 + 1;
          v98 = &v97[2 * v96];
          *((_QWORD *)v98 + 4) = v53;
          *((_QWORD *)v98 + 5) = v54;
          v52 = (uint64_t)v175;
          goto LABEL_30;
        }
        v77 = *(_QWORD *)((char *)v176 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        if (*(_UNKNOWN ****)v77 != &off_1013F2808)
          v77 = 0;
        v78 = v77 + *(_QWORD *)(*(_QWORD *)v77 + 752);
        swift_beginAccess(v78, v192, 0, 0);
        sub_1004B8460(v78, v52, type metadata accessor for CRLConnectionLineCRDTData);
        v79 = sub_1004B804C(&qword_1013EC6D0);
        v80 = (uint64_t)v171;
        CRRegister.wrappedValue.getter(v79);
        sub_1004B84A4(v52, type metadata accessor for CRLConnectionLineCRDTData);
        v81 = type metadata accessor for UUID(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81) == 1)
        {
          sub_1004CB800(v80, (uint64_t *)&unk_1013E1A50);
          v205 = 0u;
          v206 = 0u;
        }
        else
        {
          *((_QWORD *)&v206 + 1) = v81;
          v83 = sub_10050D1B0(&v205);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(v82 + 32))(v83, v80, v81);
        }
        swift_beginAccess(v49, v191, 33, 0);
        sub_1004CB7BC((uint64_t)&v205, (uint64_t)v204, &qword_1013E0230);
        v84 = swift_isUniquelyReferenced_nonNull_native(*v49);
        v179 = (_QWORD *)*v49;
        v85 = v179;
        *v49 = 0x8000000000000000;
        v65 = sub_100843260(33);
        v87 = v85[2];
        v88 = (v86 & 1) == 0;
        v89 = v87 + v88;
        if (__OFADD__(v87, v88))
          goto LABEL_97;
        v90 = v86;
        if (v85[3] >= v89)
        {
          if ((v84 & 1) == 0)
            sub_10082C8D0();
        }
        else
        {
          sub_100814B68(v89, v84);
          v91 = sub_100843260(33);
          if ((v90 & 1) != (v92 & 1))
            goto LABEL_101;
          v65 = v91;
        }
        v72 = v179;
        if ((v90 & 1) == 0)
        {
          v179[(v65 >> 6) + 8] |= 1 << v65;
          *(_QWORD *)(v72[6] + 8 * v65) = 33;
          sub_1004C4938((uint64_t)v204, v72[7] + 32 * v65, &qword_1013E0230);
          v93 = v72[2];
          v74 = __OFADD__(v93, 1);
          v75 = v93 + 1;
          if (v74)
            goto LABEL_98;
LABEL_28:
          v72[2] = v75;
          goto LABEL_29;
        }
      }
      sub_100582338((uint64_t)v204, v72[7] + 32 * v65, &qword_1013E0230);
LABEL_29:
      *v49 = v72;
      swift_bridgeObjectRelease();
      swift_endAccess(v191);
      sub_1004CB800((uint64_t)&v205, &qword_1013E0230);
      v52 = (uint64_t)v175;
LABEL_30:
      v51 += 2;
      if (!--v48)
      {
        swift_bridgeObjectRelease();
        a1 = v149;
        v101 = v172;
        v100 = v173;
        goto LABEL_89;
      }
    }
  }
  if (a3)
  {
    v99 = (_QWORD *)swift_getObjectType(a4);
    sub_10092658C(a1, a2, a3, a4, v176, v99, (uint64_t)v172);
    return;
  }
  v43 = type metadata accessor for CRLShapeItem(0);
  v44 = (char *)swift_dynamicCastClass(a4, v43);
  if (v44)
  {
    v149 = a1;
    v146 = v44;
    v172 = *(_QWORD **)&v44[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (!swift_conformsToProtocol2(*v172, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
      goto LABEL_100;
    v45 = *(char **)(a2 + 16);
    if (!v45)
    {
      swift_unknownObjectRetain(a4);
      swift_retain(v172);
LABEL_93:
      swift_unknownObjectRetain(a4);
      sub_100B0DE64(v149, a2, 0, v146, v176);
      swift_release(v172);
      swift_unknownObjectRelease_n(a4, 2);
      return;
    }
    v166 = v149 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
    v151 = v165 + 184;
    v152 = v162 + 184;
    v153 = v164 + 184;
    v150 = v163 + 184;
    v148 = a4;
    swift_unknownObjectRetain(a4);
    swift_retain(v172);
    swift_bridgeObjectRetain(a2);
    v147 = a2;
    v46 = (_QWORD *)(a2 + 40);
    while (1)
    {
      v103 = *(v46 - 1);
      v104 = *v46;
      v105 = v103 == 0x6641746E65726170 && v104 == 0xEE007974696E6966;
      if (!v105
        && (_stringCompareWithSmolCheck(_:_:expecting:)(0x6641746E65726170, 0xEE007974696E6966, v103, v104, 0) & 1) == 0)
      {
        goto LABEL_62;
      }
      v170 = v46;
      v171 = v45;
      v106 = *(_QWORD **)((char *)v176 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (!swift_conformsToProtocol2(*v106, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
        goto LABEL_99;
      v107 = (uint64_t)v154;
      v168 = *(void (**)(void))(*v172 + 640);
      v168();
      swift_retain(v106);
      v108 = sub_1004B804C((uint64_t *)&unk_101406B00);
      v109 = (uint64_t)v158;
      CRRegister.wrappedValue.getter(v108);
      sub_1004CB800(v107, &qword_1013F5530);
      v110 = v174;
      v111 = v164;
      sub_1004B8460(v109 + *(int *)(v174 + 20), v164, type metadata accessor for CRLPathSourceData);
      v112 = sub_1004B84A4(v109, type metadata accessor for CRLShapeItemParentAffinity);
      v113 = *(void (**)(uint64_t))(*v106 + 640);
      v114 = (uint64_t)v155;
      v175 = v106;
      v167 = v113;
      v113(v112);
      v115 = (uint64_t)v159;
      v169 = v108;
      CRRegister.wrappedValue.getter(v108);
      sub_1004CB800(v114, &qword_1013F5530);
      v116 = v165;
      sub_1004B8460(v115 + *(int *)(v110 + 20), v165, type metadata accessor for CRLPathSourceData);
      sub_1004B84A4(v115, type metadata accessor for CRLShapeItemParentAffinity);
      sub_1004C4938(v153, (uint64_t)v204, &qword_1013F6270);
      sub_1004C4938((uint64_t)v204, (uint64_t)&v205, &qword_1013F6270);
      if (sub_1007BD0A0((uint64_t)&v205) != 1)
      {
        sub_1004C4938(v151, (uint64_t)v191, &qword_1013F6270);
        sub_1004C4938((uint64_t)v191, (uint64_t)v192, &qword_1013F6270);
        if (sub_1007BD0A0((uint64_t)v192) != 1)
        {
          v117 = v211;
          if (v211)
          {
            v118 = v198;
            if (v198)
            {
              v119 = v209;
              v120 = v210;
              v121 = v197;
              v122 = v196;
              v181 = v207;
              v182 = v208 & 1;
              v179 = v194;
              v180 = v195 & 1;
              v123 = sub_1008732BC();
              swift_bridgeObjectRetain(v117);
              swift_bridgeObjectRetain(v118);
              LOBYTE(v123) = static CRExtensible.== infix(_:_:)(&v181, &v179, &type metadata for CRLConnectionLineMagnetData.MagnetType, v123, &protocol witness table for Int, &protocol witness table for Int);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v123 & 1) != 0)
              {
                v124 = sub_10005FDF0(v119, v120, v122, v121);
                sub_1004B84A4(v165, type metadata accessor for CRLPathSourceData);
                v125 = sub_1004B84A4(v164, type metadata accessor for CRLPathSourceData);
                if (v124)
                  goto LABEL_79;
                goto LABEL_78;
              }
            }
          }
        }
        v111 = v164;
        v116 = v165;
      }
      sub_1004B84A4(v116, type metadata accessor for CRLPathSourceData);
      sub_1004B84A4(v111, type metadata accessor for CRLPathSourceData);
LABEL_78:
      v193 = &type metadata for Bool;
      v192[0] = 1;
      sub_1004CB7BC((uint64_t)v192, (uint64_t)v191, &qword_1013E0230);
      swift_beginAccess(v166, &v181, 33, 0);
      sub_10083DAD8((uint64_t)v191, 0x22uLL);
      swift_endAccess(&v181);
      v125 = sub_1004CB800((uint64_t)v192, &qword_1013E0230);
LABEL_79:
      v126 = (uint64_t)v156;
      ((void (*)(uint64_t))v168)(v125);
      v127 = (uint64_t)v160;
      v128 = v169;
      CRRegister.wrappedValue.getter(v169);
      sub_1004CB800(v126, &qword_1013F5530);
      v129 = v174;
      v130 = v162;
      sub_1004B8460(v127 + *(int *)(v174 + 20), v162, type metadata accessor for CRLPathSourceData);
      v131 = sub_1004B84A4(v127, type metadata accessor for CRLShapeItemParentAffinity);
      v132 = (uint64_t)v157;
      v167(v131);
      v133 = (uint64_t)v161;
      CRRegister.wrappedValue.getter(v128);
      sub_1004CB800(v132, &qword_1013F5530);
      v134 = v133 + *(int *)(v129 + 20);
      v102 = v163;
      sub_1004B8460(v134, v163, type metadata accessor for CRLPathSourceData);
      sub_1004B84A4(v133, type metadata accessor for CRLShapeItemParentAffinity);
      sub_1004C4938(v152, (uint64_t)v191, &qword_1013F6270);
      sub_1004C4938((uint64_t)v191, (uint64_t)v192, &qword_1013F6270);
      if (sub_1007BD0A0((uint64_t)v192) != 1)
      {
        sub_1004C4938(v150, (uint64_t)&v179, &qword_1013F6270);
        sub_1004C4938((uint64_t)&v179, (uint64_t)&v181, &qword_1013F6270);
        if (sub_1007BD0A0((uint64_t)&v181) != 1)
        {
          v135 = v203;
          if (v203)
          {
            v136 = v188;
            if (v188)
            {
              v137 = v201;
              v138 = v202;
              v140 = v186;
              v139 = v187;
              v189 = v199;
              v190 = v200 & 1;
              v177 = v184;
              v178 = v185 & 1;
              v141 = sub_1008732BC();
              swift_bridgeObjectRetain(v135);
              swift_bridgeObjectRetain(v136);
              LOBYTE(v141) = static CRExtensible.== infix(_:_:)(&v189, &v177, &type metadata for CRLConnectionLineMagnetData.MagnetType, v141, &protocol witness table for Int, &protocol witness table for Int);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v141 & 1) != 0)
              {
                v142 = sub_10005FDF0(v137, v138, v140, v139);
                sub_1004B84A4(v163, type metadata accessor for CRLPathSourceData);
                sub_1004B84A4(v162, type metadata accessor for CRLPathSourceData);
                if (v142)
                  goto LABEL_61;
                goto LABEL_60;
              }
              v130 = v162;
              v102 = v163;
            }
            else
            {
              v102 = v163;
            }
          }
        }
      }
      sub_1004B84A4(v102, type metadata accessor for CRLPathSourceData);
      sub_1004B84A4(v130, type metadata accessor for CRLPathSourceData);
LABEL_60:
      v183 = &type metadata for Bool;
      LOBYTE(v181) = 1;
      sub_1004CB7BC((uint64_t)&v181, (uint64_t)&v179, &qword_1013E0230);
      swift_beginAccess(v166, &v189, 33, 0);
      sub_10083DAD8((uint64_t)&v179, 0x23uLL);
      swift_endAccess(&v189);
      sub_1004CB800((uint64_t)&v181, &qword_1013E0230);
LABEL_61:
      swift_release(v175);
      v46 = v170;
      v45 = v171;
LABEL_62:
      v46 += 2;
      if (!--v45)
      {
        a2 = v147;
        swift_bridgeObjectRelease();
        a4 = v148;
        goto LABEL_93;
      }
    }
  }
}

void sub_100870894(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *Strong;
  void *v11;
  char v12;
  _UNKNOWN ****v13;
  _UNKNOWN ****v14;
  void (*v15)(__n128);
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _UNKNOWN ****v21;
  _UNKNOWN ****v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  CKRecordID v26;
  Swift::String v27;
  _BYTE v29[24];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v29[-v8 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v11 = Strong,
        v12 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v11,
        (v12 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else if (a1)
  {
    v13 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v13 == &off_1013F2808)
      v14 = v13;
    else
      v14 = 0;
    v15 = *(void (**)(__n128))((swift_isaMask & *a1) + 0x88);
    v16 = a1;
    v17 = swift_retain(v13);
    v15(v17);
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 0, 1, v18);
    swift_beginAccess((char *)(*v14)[94] + (_QWORD)v14, v29, 33, 0);
    sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    v19 = sub_1004B804C(&qword_1013EC6D0);
    CRRegister.wrappedValue.setter(v6, v19, v20);
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v29);
    swift_release(v13);

  }
  else
  {
    v21 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v21 == &off_1013F2808)
      v22 = v21;
    else
      v22 = 0;
    v23 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
    swift_beginAccess((char *)(*v22)[94] + (_QWORD)v22, v29, 33, 0);
    sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    swift_retain(v21);
    v24 = sub_1004B804C(&qword_1013EC6D0);
    CRRegister.wrappedValue.setter(v6, v24, v25);
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v29);
    swift_release(v21);
  }
}

id sub_100870C94(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, id, uint64_t))
{
  uint64_t ObjectType;
  id v8;
  void *v9;

  ObjectType = swift_getObjectType(a3);
  swift_unknownObjectRetain(a3);
  v8 = a1;
  v9 = (void *)a4(a3, v8, ObjectType);
  swift_unknownObjectRelease(a3);

  return v9;
}

void sub_100870D00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *Strong;
  void *v11;
  char v12;
  _UNKNOWN ****v13;
  _UNKNOWN ****v14;
  void (*v15)(__n128);
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _UNKNOWN ****v21;
  _UNKNOWN ****v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  CKRecordID v26;
  Swift::String v27;
  _BYTE v29[24];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v29[-v8 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v11 = Strong,
        v12 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v11,
        (v12 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else if (a1)
  {
    v13 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v13 == &off_1013F2808)
      v14 = v13;
    else
      v14 = 0;
    v15 = *(void (**)(__n128))((swift_isaMask & *a1) + 0x88);
    v16 = a1;
    v17 = swift_retain(v13);
    v15(v17);
    v18 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 0, 1, v18);
    swift_beginAccess((char *)(*v14)[94] + (_QWORD)v14, v29, 33, 0);
    sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    v19 = sub_1004B804C(&qword_1013EC6D0);
    CRRegister.wrappedValue.setter(v6, v19, v20);
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v29);
    swift_release(v13);

  }
  else
  {
    v21 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v21 == &off_1013F2808)
      v22 = v21;
    else
      v22 = 0;
    v23 = type metadata accessor for UUID(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
    swift_beginAccess((char *)(*v22)[94] + (_QWORD)v22, v29, 33, 0);
    sub_1004CB7BC((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1013E1A50);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    swift_retain(v21);
    v24 = sub_1004B804C(&qword_1013EC6D0);
    CRRegister.wrappedValue.setter(v6, v24, v25);
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v29);
    swift_release(v21);
  }
}

void sub_100871170(uint64_t a1)
{
  char *v1;
  unint64_t v2;
  char *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  __n128 v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  objc_class *v19;
  id v20;
  _QWORD *v21;
  id v22;
  char *v23;
  _QWORD *v24;
  void *v25;
  char *v26;
  _QWORD *v27;
  _QWORD *v28;
  objc_class *v29;
  id v30;
  char *v31;
  _QWORD *v32;
  void *v33;
  char *v34;
  _QWORD *v35;
  id v36;
  id v37;
  void *v38;
  char *v39;
  _QWORD *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  _QWORD v56[4];

  v3 = v1;
  if (!((unint64_t)a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) > 1)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (a1 < 0)
    v51 = a1;
  else
    v51 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v52 = _CocoaArrayWrapper.endIndex.getter(v51);
  swift_bridgeObjectRelease();
  if (v52 <= 1)
  {
LABEL_3:
    v2 = 39;
    sub_100757E04(&_mh_execute_header, (uint64_t)"commandToConnect(boardItems:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 368, "Need to connect at least 2 board items.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandToConnect(boardItems:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2u, 368, (uint64_t)"Need to connect at least 2 board items.", 39, 2u);
  }
LABEL_4:
  v5 = *(_QWORD **)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v6 = *v5;
  if (swift_conformsToProtocol2(*v5, &protocol descriptor for CRLAbstractShapeItemDataProtocol))
  {
    v7 = *(uint64_t (**)(__n128))(v6 + 704);
    v8 = swift_retain(v5);
    v9 = (void *)v7(v8);
    swift_release(v5);
    v10 = objc_opt_self(CRLConnectionLinePathSource);
    v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
    if (v11)
    {
      v5 = objc_msgSend(v11, "copy");

      _bridgeAnyObjectToAny(_:)(v56, v5);
      swift_unknownObjectRelease(v5);
      v12 = sub_1004B8930(0, (unint64_t *)&unk_1013F62F0, off_101229878);
      if ((swift_dynamicCast(&v55, v56, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
      {
        v5 = v55;
        v13 = objc_msgSend(objc_allocWithZone((Class)CRLConnectionLineMagnet), "initWithType:normalizedPosition:", 1, 0.5, 0.5);
        objc_msgSend(v5, "setHeadMagnet:", v13);

        v14 = objc_msgSend(objc_allocWithZone((Class)CRLConnectionLineMagnet), "initWithType:normalizedPosition:", 1, 0.5, 0.5);
        objc_msgSend(v5, "setTailMagnet:", v14);

        v2 = a1 & 0xC000000000000001;
        if ((a1 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v15 = *(void **)(a1 + 32);
            v16 = v3;
            v17 = v15;
LABEL_10:
            v18 = v17;
            v19 = (objc_class *)type metadata accessor for CRLCommandSetConnectionLineConnection(0);
            v20 = objc_allocWithZone(v19);
            v21 = v5;
            v22 = sub_100A26410(v3, v18, 0, v5);
            if (v2)
            {
              v23 = v3;
              v24 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, a1);
LABEL_23:
              v40 = v24;
              v41 = objc_allocWithZone(v19);
              v37 = sub_100A26410(v3, v40, 1, v5);
              goto LABEL_24;
            }
            if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
            {
              v38 = *(void **)(a1 + 40);
              v39 = v3;
              v24 = v38;
              goto LABEL_23;
            }
            goto LABEL_35;
          }
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
LABEL_32:
        v54 = v3;
        v17 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        goto LABEL_10;
      }
    }
    else
    {

    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      v53 = v3;
      v27 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    }
    else
    {
      if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_32;
      }
      v25 = *(void **)(a1 + 32);
      v26 = v3;
      v27 = v25;
    }
    v28 = v27;
    v29 = (objc_class *)type metadata accessor for CRLCommandSetConnectionLineConnection(0);
    v30 = objc_allocWithZone(v29);
    v22 = sub_100A2665C(v3, v28, 0);
    if ((a1 & 0xC000000000000001) != 0)
    {
      v31 = v3;
      v32 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, a1);
    }
    else
    {
      if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
        goto LABEL_34;
      v33 = *(void **)(a1 + 40);
      v34 = v3;
      v32 = v33;
    }
    v35 = v32;
    v36 = objc_allocWithZone(v29);
    v37 = sub_100A2665C(v3, v35, 1);
LABEL_24:
    v42 = v37;
    v43 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v44 = swift_allocObject(v43, 48, 7);
    *(_OWORD *)(v44 + 16) = xmmword_100EF5560;
    *(_QWORD *)(v44 + 32) = v22;
    *(_QWORD *)(v44 + 40) = v42;
    v56[0] = v44;
    specialized Array._endMutation()(v44);
    v45 = v56[0];
    v46 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
    v47 = v22;
    v48 = v42;
    v49 = (char *)objc_msgSend(v46, "init");
    v50 = &v49[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
    swift_beginAccess(&v49[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v56, 1, 0);
    *(_QWORD *)v50 = v45;

    swift_bridgeObjectRelease();
    return;
  }
LABEL_36:
  __break(1u);
}

void sub_10087167C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t Strong;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjCClassFromMetadata;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, __n128);
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  char v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, __n128);
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, __n128);
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned __int8 v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t, __n128);
  __n128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t, uint64_t, __n128);
  __n128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t, __n128);
  __n128 v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void (*v198)(uint64_t, uint64_t, __n128);
  __n128 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  uint64_t v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;

  v3 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v209 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v209 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v209 - v10;
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  v15 = (char *)&v209 - v14;
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v209 - v18;
  __chkstk_darwin(v20);
  v24 = (char *)&v209 - v23;
  if (a1)
  {
    v216 = v22;
    v215 = v21;
    v223 = a1;
    v25 = objc_msgSend(v223, "info");
    if (v25)
    {
      v26 = v25;
      v213 = v8;
      v27 = type metadata accessor for CRLConnectionLineItem(0);
      v28 = swift_dynamicCastClass(v26, v27);
      if (v28)
      {
        v29 = v28;
        v212 = v15;
        v210 = v11;
        v211 = v5;
        sub_100A14388(objc_msgSend(v223, "stroke"));
        v218 = v29 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem;
        Strong = swift_unknownObjectWeakLoadStrong(v29 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
        v221 = v26;
        v220 = v3;
        v222 = v29;
        if (Strong)
        {
          v31 = (void *)Strong;
          v32 = type metadata accessor for CRLFreehandDrawingItem(0);
          ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v32, v33);
          if ((objc_msgSend(v31, "isKindOfClass:", ObjCClassFromMetadata, swift_unknownObjectRetain(v26).n128_f64[0]) & 1) != 0)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
            v29 = v222;
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
          }

        }
        else
        {
          swift_unknownObjectRetain(v26);
        }
        v214 = v1;
        v219 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        v35 = *(_QWORD **)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        v36 = *v35;
        v37 = swift_conformsToProtocol2(*v35, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
        if (v37)
        {
          v38 = v37;
          v39 = *(void (**)(uint64_t, uint64_t, __n128))(v37 + 16);
          v40 = swift_retain(v35);
          v39(v36, v38, v40);
          swift_release(v35);
          v217 = sub_1004B804C((uint64_t *)&unk_1013F62E0);
          CRRegister.wrappedValue.getter(v217);
          v42 = v245;
          v41 = v246;
          v43 = v247;
          v44 = v248;
          v45 = v249;
          v46 = v250;
          v47 = v251;
          sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          if (v46)
          {
            v245 = v42;
            v246 = v41;
            LOBYTE(v247) = v43 & 1;
            HIDWORD(v247) = HIDWORD(v43);
            LODWORD(v248) = v44;
            BYTE4(v248) = BYTE4(v44) & 1;
            v249 = v45;
            v250 = v46;
            v251 = v47;
            sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
            v48 = sub_100785FD4((uint64_t)&v245);
            sub_1004C41DC(v42, v41, v43, v44, v45, v46, v47);
            v49 = v221;
            swift_unknownObjectRelease(v221);
          }
          else
          {
            v49 = v221;
            swift_unknownObjectRelease(v221);
            v48 = 0;
          }
          sub_100924148(v48);
          v50 = swift_unknownObjectWeakLoadStrong(v218);
          v51 = v222;
          if (v50)
          {
            v52 = (void *)v50;
            v53 = type metadata accessor for CRLFreehandDrawingItem(0);
            v55 = swift_getObjCClassFromMetadata(v53, v54);
            if ((objc_msgSend(v52, "isKindOfClass:", v55, swift_unknownObjectRetain(v49).n128_f64[0]) & 1) != 0)
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
              v51 = v222;
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
            }

          }
          else
          {
            swift_unknownObjectRetain(v49);
          }
          v56 = *(_QWORD **)(v51 + v219);
          v57 = *v56;
          v58 = swift_conformsToProtocol2(*v56, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
          if (v58)
          {
            v59 = v58;
            v60 = *(void (**)(uint64_t, uint64_t, __n128))(v58 + 16);
            v61 = swift_retain(v56);
            v60(v57, v59, v61);
            swift_release(v56);
            CRRegister.wrappedValue.getter(v217);
            v62 = v238;
            v63 = v239;
            v64 = v240;
            v65 = v241;
            v66 = v242;
            v67 = v243;
            v68 = v244;
            sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            if (v67)
            {
              v238 = v62;
              v239 = v63;
              LOBYTE(v240) = v64 & 1;
              HIDWORD(v240) = HIDWORD(v64);
              LODWORD(v241) = v65;
              BYTE4(v241) = BYTE4(v65) & 1;
              v242 = v66;
              v243 = v67;
              v244 = v68;
              sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
              v69 = sub_100785FD4((uint64_t)&v238);
              sub_1004C41DC(v62, v63, v64, v65, v66, v67, v68);
              v70 = v221;
              swift_unknownObjectRelease(v221);
            }
            else
            {
              v70 = v221;
              swift_unknownObjectRelease(v221);
              v69 = 0;
            }
            sub_100924698(v69);
            v71 = v222;
            if ((sub_10086DB4C() & 1) == 0)
            {
              if ((sub_10086D1BC() & 1) != 0)
              {
                v77 = swift_unknownObjectWeakLoadStrong(v218);
                if (v77)
                {
                  v78 = (void *)v77;
                  v79 = type metadata accessor for CRLFreehandDrawingItem(0);
                  v81 = swift_getObjCClassFromMetadata(v79, v80);
                  if ((objc_msgSend(v78, "isKindOfClass:", v81, swift_unknownObjectRetain(v70).n128_f64[0]) & 1) != 0)
                  {
                    sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
                  }

                }
                else
                {
                  swift_unknownObjectRetain(v70);
                }
                v116 = *(_QWORD **)(v71 + v219);
                v117 = *v116;
                v118 = swift_conformsToProtocol2(*v116, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
                if (!v118)
                  goto LABEL_94;
                v119 = v118;
                v120 = *(void (**)(uint64_t, uint64_t, __n128))(v118 + 16);
                v121 = swift_retain(v116);
                v122 = v215;
                v120(v117, v119, v121);
                swift_release(v116);
                CRRegister.wrappedValue.getter(v217);
                v123 = v231;
                v124 = v232;
                v125 = v233;
                v126 = v234;
                v127 = v235;
                v128 = v236;
                v129 = v237;
                sub_1004B84A4(v122, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                if (!v128)
                {

                  v106 = v70;
                  goto LABEL_58;
                }
                v231 = v123;
                v232 = v124;
                LOBYTE(v233) = v125 & 1;
                HIDWORD(v233) = HIDWORD(v125);
                LODWORD(v234) = v126;
                BYTE4(v234) = BYTE4(v126) & 1;
                v235 = v127;
                v236 = v128;
                v237 = v129;
                sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
                v130 = sub_100785FD4((uint64_t)&v231);
                sub_1004C41DC(v123, v124, v125, v126, v127, v128, v129);
                if ((objc_msgSend(v130, "isArrow", swift_unknownObjectRelease(v70).n128_f64[0]) & 1) != 0)
                {
                  v131 = v130;
                  sub_100924148(v130);
                  v132 = swift_unknownObjectWeakLoadStrong(v218);
                  if (v132)
                  {
                    v133 = (void *)v132;
                    v134 = type metadata accessor for CRLFreehandDrawingItem(0);
                    v136 = swift_getObjCClassFromMetadata(v134, v135);
                    v137 = objc_msgSend(v133, "isKindOfClass:", v136, swift_unknownObjectRetain(v70).n128_f64[0]);
                    v138 = (uint64_t)v210;
                    if ((v137 & 1) != 0)
                    {
                      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
                    }

                    v139 = v222;
                  }
                  else
                  {
                    swift_unknownObjectRetain(v70);
                    v139 = v222;
                    v138 = (uint64_t)v210;
                  }
                  v194 = *(_QWORD **)(v139 + v219);
                  v195 = *v194;
                  v196 = swift_conformsToProtocol2(*v194, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
                  if (v196)
                  {
                    v197 = v196;
                    v198 = *(void (**)(uint64_t, uint64_t, __n128))(v196 + 16);
                    v199 = swift_retain(v194);
                    v198(v195, v197, v199);
                    swift_release(v194);
                    CRRegister.wrappedValue.getter(v217);
                    v200 = v224;
                    v201 = v225;
                    v202 = v226;
                    v203 = v227;
                    v204 = v228;
                    v205 = v229;
                    v206 = v138;
                    v207 = v230;
                    sub_1004B84A4(v206, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                    if (v205)
                    {
                      v224 = v200;
                      v225 = v201;
                      LOBYTE(v226) = v202 & 1;
                      HIDWORD(v226) = HIDWORD(v202);
                      LODWORD(v227) = v203;
                      BYTE4(v227) = BYTE4(v203) & 1;
                      v228 = v204;
                      v229 = v205;
                      v230 = v207;
                      v208 = sub_100785FD4((uint64_t)&v224);
                      sub_1004C41DC(v200, v201, v202, v203, v204, v205, v207);
                      v155 = (uint64_t)v221;
                      swift_unknownObjectRelease(v221);
                    }
                    else
                    {
                      v155 = (uint64_t)v221;
                      swift_unknownObjectRelease(v221);
                      v208 = 0;
                    }
                    sub_100924698(v208);

                    goto LABEL_88;
                  }
LABEL_98:
                  __break(1u);
                  return;
                }

              }
              else
              {
                v82 = objc_msgSend(v223, "isTailEndOnLeft");
                sub_10086C1C8();
                if (v82 != (v83 & 1))
                {
                  v84 = swift_unknownObjectWeakLoadStrong(v218);
                  if (v84)
                  {
                    v85 = (void *)v84;
                    v86 = type metadata accessor for CRLFreehandDrawingItem(0);
                    v88 = swift_getObjCClassFromMetadata(v86, v87);
                    if ((objc_msgSend(v85, "isKindOfClass:", v88, swift_unknownObjectRetain(v70).n128_f64[0]) & 1) != 0)
                    {
                      sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
                    }

                  }
                  else
                  {
                    swift_unknownObjectRetain(v70);
                  }
                  v156 = *(_QWORD **)(v71 + v219);
                  v157 = *v156;
                  v158 = swift_conformsToProtocol2(*v156, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
                  if (v158)
                  {
                    v159 = v158;
                    v160 = *(void (**)(uint64_t, uint64_t, __n128))(v158 + 16);
                    v161 = swift_retain(v156);
                    v162 = (uint64_t)v213;
                    v160(v157, v159, v161);
                    swift_release(v156);
                    CRRegister.wrappedValue.getter(v217);
                    v163 = v231;
                    v164 = v232;
                    v165 = v233;
                    v166 = v234;
                    v168 = v235;
                    v167 = v236;
                    v169 = v237;
                    sub_1004B84A4(v162, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                    if (v167)
                    {
                      v231 = v163;
                      v232 = v164;
                      LOBYTE(v233) = v165 & 1;
                      HIDWORD(v233) = HIDWORD(v165);
                      LODWORD(v234) = v166;
                      BYTE4(v234) = BYTE4(v166) & 1;
                      v235 = v168;
                      v236 = v167;
                      v237 = v169;
                      sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
                      v170 = v163;
                      v171 = sub_100785FD4((uint64_t)&v231);
                      sub_1004C41DC(v170, v164, v165, v166, v168, v167, v169);
                      swift_unknownObjectRelease(v70);
                    }
                    else
                    {
                      swift_unknownObjectRelease(v70);
                      v171 = 0;
                    }
                    sub_100924148(v171);
                    v172 = swift_unknownObjectWeakLoadStrong(v218);
                    v173 = v222;
                    if (v172)
                    {
                      v174 = (void *)v172;
                      v175 = type metadata accessor for CRLFreehandDrawingItem(0);
                      v177 = swift_getObjCClassFromMetadata(v175, v176);
                      if ((objc_msgSend(v174, "isKindOfClass:", v177, swift_unknownObjectRetain(v70).n128_f64[0]) & 1) != 0)
                      {
                        sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
                      }

                    }
                    else
                    {
                      swift_unknownObjectRetain(v70);
                    }
                    v178 = *(_QWORD **)(v173 + v219);
                    v179 = *v178;
                    v180 = swift_conformsToProtocol2(*v178, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
                    if (v180)
                    {
                      v181 = v180;
                      v182 = *(void (**)(uint64_t, uint64_t, __n128))(v180 + 16);
                      v183 = swift_retain(v178);
                      v184 = (uint64_t)v211;
                      v182(v179, v181, v183);
                      swift_release(v178);
                      CRRegister.wrappedValue.getter(v217);
                      v185 = v224;
                      v186 = v225;
                      v187 = v226;
                      v188 = v227;
                      v189 = v228;
                      v190 = v229;
                      v191 = v230;
                      sub_1004B84A4(v184, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                      if (v190)
                      {
                        v224 = v185;
                        v225 = v186;
                        LOBYTE(v226) = v187 & 1;
                        HIDWORD(v226) = HIDWORD(v187);
                        LODWORD(v227) = v188;
                        BYTE4(v227) = BYTE4(v188) & 1;
                        v228 = v189;
                        v229 = v190;
                        v230 = v191;
                        sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
                        v192 = v185;
                        v193 = sub_100785FD4((uint64_t)&v224);
                        sub_1004C41DC(v192, v186, v187, v188, v189, v190, v191);
                        swift_unknownObjectRelease(v70);
                      }
                      else
                      {
                        swift_unknownObjectRelease(v70);
                        v193 = 0;
                      }
                      sub_100924698(v193);
                      v105 = (uint64_t)v70;
                      goto LABEL_89;
                    }
                    goto LABEL_97;
                  }
LABEL_96:
                  __break(1u);
LABEL_97:
                  __break(1u);
                  goto LABEL_98;
                }
              }
              v105 = (uint64_t)v70;
              goto LABEL_89;
            }
            v72 = swift_unknownObjectWeakLoadStrong(v218);
            if (v72)
            {
              v73 = (void *)v72;
              v74 = type metadata accessor for CRLFreehandDrawingItem(0);
              v76 = swift_getObjCClassFromMetadata(v74, v75);
              if ((objc_msgSend(v73, "isKindOfClass:", v76, swift_unknownObjectRetain(v70).n128_f64[0]) & 1) != 0)
              {
                sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
              }

            }
            else
            {
              swift_unknownObjectRetain(v70);
            }
            v89 = *(_QWORD **)(v71 + v219);
            v90 = *v89;
            v91 = swift_conformsToProtocol2(*v89, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
            if (v91)
            {
              v92 = v91;
              v93 = *(void (**)(uint64_t, uint64_t, __n128))(v91 + 16);
              v94 = swift_retain(v89);
              v95 = v216;
              v93(v90, v92, v94);
              swift_release(v89);
              CRRegister.wrappedValue.getter(v217);
              v96 = v231;
              v97 = v232;
              v98 = v233;
              v99 = v234;
              v100 = v235;
              v101 = v236;
              v102 = v237;
              sub_1004B84A4(v95, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              if (v101)
              {
                v231 = v96;
                v232 = v97;
                LOBYTE(v233) = v98 & 1;
                HIDWORD(v233) = HIDWORD(v98);
                LODWORD(v234) = v99;
                BYTE4(v234) = BYTE4(v99) & 1;
                v235 = v100;
                v236 = v101;
                v237 = v102;
                sub_1004B8930(0, (unint64_t *)&qword_1013E0108, off_101229920);
                v103 = sub_100785FD4((uint64_t)&v231);
                sub_1004C41DC(v96, v97, v98, v99, v100, v101, v102);
                v104 = (uint64_t)v221;
                if ((objc_msgSend(v103, "isNone", swift_unknownObjectRelease(v221).n128_f64[0]) & 1) != 0)
                {

                  v105 = v104;
LABEL_89:
                  swift_unknownObjectRelease(v105);

                  return;
                }
                v107 = v103;
                sub_100924148(v103);
                v108 = swift_unknownObjectWeakLoadStrong(v218);
                if (v108)
                {
                  v109 = (void *)v108;
                  v110 = type metadata accessor for CRLFreehandDrawingItem(0);
                  v112 = swift_getObjCClassFromMetadata(v110, v111);
                  v113 = objc_msgSend(v109, "isKindOfClass:", v112, swift_unknownObjectRetain(v104).n128_f64[0]);
                  v114 = (uint64_t)v212;
                  if ((v113 & 1) != 0)
                  {
                    sub_100757E04(&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, "Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2u, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u);
                  }

                  v115 = v222;
                }
                else
                {
                  swift_unknownObjectRetain(v104);
                  v115 = v222;
                  v114 = (uint64_t)v212;
                }
                v140 = *(_QWORD **)(v115 + v219);
                v141 = *v140;
                v142 = swift_conformsToProtocol2(*v140, &protocol descriptor for CRLAbstractShapeItemDataProtocol);
                if (v142)
                {
                  v143 = v142;
                  v144 = *(void (**)(uint64_t, uint64_t, __n128))(v142 + 16);
                  v145 = swift_retain(v140);
                  v144(v141, v143, v145);
                  swift_release(v140);
                  CRRegister.wrappedValue.getter(v217);
                  v146 = v224;
                  v147 = v225;
                  v148 = v226;
                  v149 = v227;
                  v150 = v228;
                  v151 = v229;
                  v152 = v114;
                  v153 = v230;
                  sub_1004B84A4(v152, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  if (v151)
                  {
                    v224 = v146;
                    v225 = v147;
                    LOBYTE(v226) = v148 & 1;
                    HIDWORD(v226) = HIDWORD(v148);
                    LODWORD(v227) = v149;
                    BYTE4(v227) = BYTE4(v149) & 1;
                    v228 = v150;
                    v229 = v151;
                    v230 = v153;
                    v154 = sub_100785FD4((uint64_t)&v224);
                    sub_1004C41DC(v146, v147, v148, v149, v150, v151, v153);
                    v155 = (uint64_t)v221;
                    swift_unknownObjectRelease(v221);
                  }
                  else
                  {
                    v155 = (uint64_t)v221;
                    swift_unknownObjectRelease(v221);
                    v154 = 0;
                  }
                  sub_100924698(v154);

LABEL_88:
                  v105 = v155;
                  goto LABEL_89;
                }
                goto LABEL_95;
              }

              v106 = v221;
LABEL_58:
              swift_unknownObjectRelease_n(v106, 2);
              return;
            }
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
            goto LABEL_96;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_93;
      }
      swift_unknownObjectRelease(v26);
    }

  }
}

id sub_100872CF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLConnectionLineItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100872D28()
{
  return type metadata accessor for CRLConnectionLineItem(0);
}

uint64_t type metadata accessor for CRLConnectionLineItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6258;
  if (!qword_1013F6258)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLConnectionLineItem);
  return result;
}

uint64_t sub_100872D6C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 1336);
}

id sub_100872DA0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  void *v7;
  void *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  objc_class *v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t ObjectType;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  objc_super v61;

  v8 = v7;
  v58 = a7;
  v59 = a6;
  v60 = a5;
  v56 = a2;
  v57 = a4;
  v54 = a3;
  v50 = a1;
  ObjectType = swift_getObjectType(v8);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v49 - v15;
  v17 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v17);
  v51 = (uint64_t)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v49 = (uint64_t)&v49 - v20;
  v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v49 - v25;
  v55 = (uint64_t)&v49 - v25;
  v27 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v27);
  v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v32 = (char *)&v49 - v31;
  v33 = v8;
  v52 = v33;
  v34 = v50;
  sub_100924F24(a2, a3, v57, 0, 0, (uint64_t)v32);
  sub_100924CCC(0, v60, v59, v58, 0.0, 1, (uint64_t)v26);
  sub_1004B8460((uint64_t)v26, (uint64_t)v23, type metadata accessor for CRLShapeItemCRDTData);
  v35 = type metadata accessor for UUID(0);
  ObjectType = *(_QWORD *)(v35 - 8);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(ObjectType + 56);
  v36(v16, 1, 1, v35);
  v36(v13, 1, 1, v35);
  v37 = v49;
  sub_1007BA584((uint64_t)v23, (uint64_t)v16, (uint64_t)v13, v49);

  sub_1004CB7BC((uint64_t)v32, (uint64_t)v29, &qword_1013F5530);
  v38 = v37;
  v39 = v51;
  sub_1004B8460(v37, v51, type metadata accessor for CRLConnectionLineCRDTData);
  v40 = type metadata accessor for CRLConnectionLineItemData(0);
  v41 = swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  sub_1007BD05C(v39, v41 + *(_QWORD *)(*(_QWORD *)v41 + 752));
  *(_QWORD *)(v41 + qword_10140A310) = 0;
  sub_1004C4938((uint64_t)v29, v41 + *(_QWORD *)(*(_QWORD *)v41 + 632), &qword_1013F5530);
  v42 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 6);
  v43 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem(0));
  *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v34;
  *(_QWORD *)&v43[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v42;
  v44 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v61.receiver = v43;
  v61.super_class = v44;
  v45 = objc_msgSendSuper2(&v61, "init");

  (*(void (**)(uint64_t, uint64_t))(ObjectType + 8))(v56, v35);
  sub_1004B84A4(v38, type metadata accessor for CRLConnectionLineCRDTData);
  sub_1004B84A4(v55, type metadata accessor for CRLShapeItemCRDTData);
  sub_1004CB800((uint64_t)v32, &qword_1013F5530);
  v46 = v52;
  v47 = swift_getObjectType(v52);
  swift_deallocPartialClassInstance(v46, v47, *(unsigned int *)((swift_isaMask & *v46) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v46) + 0x34));
  return v45;
}

unint64_t sub_1008732BC()
{
  unint64_t result;

  result = qword_1013F6278;
  if (!qword_1013F6278)
  {
    result = swift_getWitnessTable(&unk_100F19DF8, &type metadata for CRLConnectionLineMagnetData.MagnetType);
    atomic_store(result, (unint64_t *)&qword_1013F6278);
  }
  return result;
}

uint64_t sub_100873300()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100873310()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10087333C(void *a1)
{
  uint64_t v1;

  sub_10086CDC4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100873344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100873354(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10087335C(void *a1, void *a2, uint64_t a3)
{
  char *v6;
  char *v7;
  id v8;
  char *v9;
  char v10;
  char v11;
  char *v12;

  v6 = sub_100873448(a2, a3);
  v7 = sub_100873700(a2, a3);
  if (v6
    && (type metadata accessor for CRLBoardItem(0),
        v8 = a1,
        v9 = v6,
        v10 = static NSObject.== infix(_:_:)(v9, v8),
        v9,
        v8,
        (v10 & 1) != 0))
  {
    v11 = 1;
    v6 = v7;
  }
  else
  {
    if (!v7)
    {
      v11 = 0;
      goto LABEL_8;
    }
    type metadata accessor for CRLBoardItem(0);
    v9 = a1;
    v12 = v7;
    v11 = static NSObject.== infix(_:_:)(v12, v9);

  }
LABEL_8:

  return v11 & 1;
}

char *sub_100873448(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  Class isa;
  void *Strong;
  uint64_t v20;
  void *v21;
  id v22;
  char v23;
  _BYTE v26[24];

  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v7);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v14 != &off_1013F2808)
    v14 = 0;
  v15 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 752);
  swift_beginAccess(v15, v26, 0, 0);
  sub_1004B8460(v15, (uint64_t)v9, type metadata accessor for CRLConnectionLineCRDTData);
  v16 = sub_1004B804C(&qword_1013EC6D0);
  CRRegister.wrappedValue.getter(v16);
  sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLConnectionLineCRDTData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    sub_1004CB800((uint64_t)v6, (uint64_t *)&unk_1013E1A50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v6, v10);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v17 = (char *)objc_msgSend(a1, "getBoardItemForUUID:", isa);

    if (!v17)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return v17;
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v17[OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem]);
    v20 = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    v21 = (void *)v20;
    if (Strong)
    {
      if (v20)
      {
        type metadata accessor for CRLBoardItem(0);
        v22 = Strong;
        v23 = static NSObject.== infix(_:_:)(v22, v21);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

        if ((v23 & 1) != 0)
          return v17;

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (!v21)
        return v17;

    }
  }
  return 0;
}

char *sub_100873700(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  Class isa;
  char *v50;
  void *Strong;
  uint64_t v52;
  void *v53;
  id v54;
  char v55;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[24];
  char v70[24];

  v61 = a1;
  v66 = sub_1004B804C((uint64_t *)&unk_1013F62D0);
  __chkstk_darwin(v66);
  v67 = (uint64_t)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v60 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v65 = (char *)&v57 - v7;
  __chkstk_darwin(v8);
  v64 = (char *)&v57 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - v11;
  v13 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v13);
  v62 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v57 - v16;
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v57 - v23;
  v25 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v68 = a2;
  v26 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v26 != &off_1013F2808)
    v26 = 0;
  v27 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 752);
  swift_beginAccess(v27, v70, 0, 0);
  sub_1004B8460(v27, (uint64_t)v17, type metadata accessor for CRLConnectionLineCRDTData);
  v63 = v13;
  v28 = sub_1004B804C(&qword_1013EC6D0);
  CRRegister.wrappedValue.getter(v28);
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLConnectionLineCRDTData);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v29(v12, 1, v18) == 1)
  {
    sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013E1A50);
    return 0;
  }
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  v57 = v21;
  v58 = v30;
  v30(v24, (uint64_t)v12, v18);
  v31 = (uint64_t)v64;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v64, v24, v18);
  v59 = v19;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v31, 0, 1, v18);
  v32 = v68;
  v33 = *(_QWORD *)(v68 + v25);
  if (*(_UNKNOWN ****)v33 != &off_1013F2808)
    v33 = 0;
  v34 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 752);
  swift_beginAccess(v34, v69, 0, 0);
  v35 = v62;
  sub_1004B8460(v34, v62, type metadata accessor for CRLConnectionLineCRDTData);
  v36 = (uint64_t)v65;
  CRRegister.wrappedValue.getter(v28);
  sub_1004B84A4(v35, type metadata accessor for CRLConnectionLineCRDTData);
  v37 = v67;
  v38 = v67 + *(int *)(v66 + 48);
  sub_1004CB7BC(v31, v67, (uint64_t *)&unk_1013E1A50);
  sub_1004CB7BC(v36, v38, (uint64_t *)&unk_1013E1A50);
  v39 = v32;
  v40 = v24;
  if (v29((char *)v37, 1, v18) == 1)
  {
    sub_1004CB800(v36, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800(v31, (uint64_t *)&unk_1013E1A50);
    v41 = v18;
    if (v29((char *)v38, 1, v18) == 1)
    {
      sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v24, v18);
      return 0;
    }
    goto LABEL_12;
  }
  v42 = v58;
  v43 = v36;
  v44 = v60;
  sub_1004CB7BC(v37, v60, (uint64_t *)&unk_1013E1A50);
  v41 = v18;
  if (v29((char *)v38, 1, v18) == 1)
  {
    sub_1004CB800(v43, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800(v31, (uint64_t *)&unk_1013E1A50);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v44, v18);
    v39 = v68;
LABEL_12:
    sub_1004CB800(v37, (uint64_t *)&unk_1013F62D0);
    v45 = v61;
    goto LABEL_16;
  }
  v46 = v57;
  v42(v57, v38, v18);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v47 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v46);
  v48 = *(void (**)(char *, uint64_t))(v59 + 8);
  v48(v46, v41);
  sub_1004CB800(v43, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800(v31, (uint64_t *)&unk_1013E1A50);
  v48((char *)v44, v41);
  sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
  v45 = v61;
  v39 = v68;
  if ((v47 & 1) != 0)
  {
    v48(v40, v41);
    return 0;
  }
LABEL_16:
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v50 = (char *)objc_msgSend(v45, "getBoardItemForUUID:", isa);

  if (v50)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v50[OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem]);
    v52 = swift_unknownObjectWeakLoadStrong(v39 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    v53 = (void *)v52;
    if (Strong)
    {
      if (!v52)
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v41);

        return 0;
      }
      type metadata accessor for CRLBoardItem(0);
      v54 = Strong;
      v55 = static NSObject.== infix(_:_:)(v54, v53);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v41);

      if ((v55 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v41);
      if (v53)
      {

        return 0;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v41);
  }
  return v50;
}

uint64_t sub_100873D4C(void *a1, void *a2, void *a3, void *a4)
{
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  char v12;
  id v13;
  NSString v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;

  if (a1)
  {
    if (!a2)
      goto LABEL_11;
    v7 = a1;
    type metadata accessor for CRLBoardItem(0);
    v8 = a2;
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v8);

    if ((v7 & 1) == 0)
      goto LABEL_11;
  }
  else if (a2)
  {
    goto LABEL_11;
  }
  if (a3)
  {
    if (!a4)
      goto LABEL_11;
    type metadata accessor for CRLBoardItem(0);
    v10 = a4;
    v11 = a3;
    v12 = static NSObject.== infix(_:_:)(v11, v10);

    if ((v12 & 1) == 0)
      goto LABEL_11;
    return 0;
  }
  if (!a4)
    return 0;
LABEL_11:
  v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, v16);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  return v18;
}

uint64_t sub_100873F84(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100873FC0
                                                                     + 4 * asc_100F11648[a1]))(0xD000000000000033, 0x8000000100FAA220);
}

uint64_t sub_100873FC0()
{
  uint64_t v0;

  return v0 + 30;
}

uint64_t sub_100874060()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD v11[2];
  _QWORD v12[5];
  __int128 v13;
  __int128 v14;

  v1 = objc_msgSend(v0, "activityType");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  if ((sub_100874944(v2, v4) - 7) < 2u)
    return 1;
  v6 = objc_msgSend(v0, "userInfo");
  if (!v6)
  {
    v13 = 0u;
    v14 = 0u;
LABEL_14:
    sub_1004CB800((uint64_t)&v13, &qword_1013E0230);
    return 0;
  }
  v7 = v6;
  v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v6, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v11[0] = 0x6E6F6973726576;
  v11[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v8 + 16) && (v9 = sub_1008432BC((uint64_t)v12), (v10 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v8 + 56) + 32 * v9, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_1004B89A4((uint64_t)v12);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v14 + 1))
    goto LABEL_14;
  if (swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, &type metadata for Int, 6))
    return v12[0];
  else
    return 0;
}

uint64_t sub_1008741F4()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v1 = sub_100874060();
  if ((v2 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"crl_isCurrentOrOlderVersion", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 122, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_isCurrentOrOlderVersion", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2u, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  else
  {
    v3 = v1;
    v4 = objc_msgSend(v0, "activityType");
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    v8 = sub_100874944(v5, v7) < 9u;
    if (v3 <= v8)
      return v8;
    else
      return 0;
  }
}

id sub_10087430C(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t inited;
  unint64_t v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  Swift::String v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  Class v52;
  __int128 v54;
  uint64_t v55;
  char v56[104];
  uint64_t v57;
  unint64_t v58;
  char v59[112];

  v4 = v3;
  v55 = a3;
  v7 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardIdentifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4, v14));
  sub_100873F84(a1);
  v17 = v16;
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v15, "initWithActivityType:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v20 = v19;
  v21 = objc_msgSend(v20, "activityType");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  v25 = sub_100874944(v22, v24);
  v26 = sub_100873F84(v25);
  v28 = v27;
  if (v26 == 0xD000000000000027 && v27 == 0x8000000100FAA2A0)
  {
    v29 = swift_bridgeObjectRelease(0x8000000100FAA2A0).n128_u64[0];
    v30 = 1;
  }
  else
  {
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, 0xD000000000000027, 0x8000000100FAA2A0, 0);
    v29 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  objc_msgSend(v20, "setEligibleForHandoff:", v30 & 1, *(double *)&v29);
  v31 = sub_1004B804C(&qword_1013E49B0);
  inited = swift_initStackObject(v31, v59);
  v54 = xmmword_100EF5E40;
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v57 = 0x6E6F6973726576;
  v58 = 0xE700000000000000;
  AnyHashable.init<A>(_:)(&v57, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 72) = a2;
  v33 = sub_1008D5828(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "addUserInfoEntriesFromDictionary:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = v55;
  sub_1005815E0(v55, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1004CB800(v35, &qword_1013E0270);

    sub_1004CB800((uint64_t)v9, &qword_1013E0270);
  }
  else
  {
    sub_1004DB5FC((uint64_t)v9, (uint64_t)v13);
    v36 = swift_initStackObject(v31, v56);
    *(_OWORD *)(v36 + 16) = v54;
    v57 = 0x64496472616F62;
    v58 = 0xE700000000000000;
    v37 = AnyHashable.init<A>(_:)(&v57, &type metadata for String, &protocol witness table for String);
    v38 = UUID.uuidString.getter(v37);
    v40 = v39;
    v57 = v38;
    v58 = v39;
    swift_bridgeObjectRetain(v39);
    v41._countAndFlagsBits = 58;
    v41._object = (void *)0xE100000000000000;
    String.append(_:)(v41);
    swift_bridgeObjectRelease(v40);
    v42 = v57;
    v43 = v58;
    v44 = (uint64_t *)&v13[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    v45 = v35;
    v46 = *v44;
    v47 = (void *)v44[1];
    v57 = v42;
    v58 = v43;
    swift_bridgeObjectRetain(v43);
    v48._countAndFlagsBits = v46;
    v48._object = v47;
    String.append(_:)(v48);
    swift_bridgeObjectRelease(v43);
    v49 = v57;
    v50 = v58;
    *(_QWORD *)(v36 + 96) = &type metadata for String;
    *(_QWORD *)(v36 + 72) = v49;
    *(_QWORD *)(v36 + 80) = v50;
    v51 = sub_1008D5828(v36);
    v52 = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v20, "addUserInfoEntriesFromDictionary:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

    sub_1004CB800(v45, &qword_1013E0270);
    sub_1004BBB8C((uint64_t)v13);
  }
  return v20;
}

uint64_t sub_100874730@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v2, "activityType", v5);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (sub_100874944(v9, v11) == 6)
  {
    v12 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  else
  {
    sub_100BCBCB0(v2, (uint64_t)v7);
    v14 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v7, 1, v14) == 1)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"crl_viewModelItem", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 149, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_viewModelItem", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2u, 149, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    return sub_100874B10((uint64_t)v7, a1);
  }
}

unint64_t sub_1008748FC(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101263518, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xA)
    return 10;
  else
    return v3;
}

uint64_t sub_100874944(uint64_t a1, void *a2)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v8;
  char v9;
  unint64_t v10;
  uint64_t v12;
  void *v13;
  void *v15;
  char v16;
  Swift::String v17;

  swift_bridgeObjectRetain(a2);
  v17._countAndFlagsBits = a1;
  v17._object = a2;
  v4 = sub_1008748FC(v17);
  if (v4 == 10)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(CSSearchableItemActionType);
    if (v5 == a1 && v6 == a2)
    {
      swift_bridgeObjectRelease_n(a2, 2);
      return 7;
    }
    v8 = v6;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v5, v6, 0);
    swift_bridgeObjectRelease(v8);
    if ((v9 & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      return 7;
    }
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUserActivityTypeBrowsingWeb);
    if (v12 == a1 && v13 == a2)
    {
      swift_bridgeObjectRelease_n(a2, 2);
      return 8;
    }
    else
    {
      v15 = v13;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v12, v13, 0);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(a2);
      if ((v16 & 1) != 0)
      {
        return 8;
      }
      else
      {
        return 9;
      }
    }
  }
  else
  {
    v10 = v4;
    swift_bridgeObjectRelease(a2);
  }
  return v10;
}

uint64_t sub_100874B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100874C14(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSString v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD v18[5];
  _QWORD *v19;

  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform44CRLPasteboardObjectItemProviderReadAssistant_readAssistant);
  static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.freeform.CRLNativeData"));
  v8 = swift_allocObject(&unk_101283150, 32, 7);
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (void *)objc_opt_self(NSProgress);
  v10 = objc_msgSend(v9, "progressWithTotalUnitCount:", 2, swift_retain(a3).n128_f64[0]);
  v11 = String._bridgeToObjectiveC()();
  v12 = (_QWORD *)swift_allocObject(&unk_101283178, 48, 7);
  v12[2] = v10;
  v12[3] = sub_100875024;
  v12[4] = v8;
  v12[5] = v7;
  v18[4] = sub_100875064;
  v19 = v12;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = *(_QWORD *)"";
  v18[2] = sub_100875094;
  v18[3] = &unk_101283190;
  v13 = _Block_copy(v18);
  v14 = v19;
  v15 = v10;
  swift_retain(v8);
  swift_retain(v7);
  v16 = objc_msgSend(a1, "loadFileRepresentationForTypeIdentifier:completionHandler:", v11, v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  swift_bridgeObjectRelease();
  swift_release(v8);

  return v15;
}

uint64_t sub_100874DB4(uint64_t a1, uint64_t a2, char a3, void (*a4)(void *, uint64_t, __n128))
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  __n128 v13;

  if ((a3 & 1) != 0)
  {
    swift_errorRetain(a1);
    ((void (*)(_QWORD, uint64_t))a4)(0, a1);
  }
  else
  {
    v8 = type metadata accessor for CRLPasteboardObject();
    v9 = (void *)swift_dynamicCastClass(a1, v8);
    if (v9)
    {
      swift_unknownObjectRetain(a1);
      v10 = 0;
    }
    else
    {
      v11 = sub_100577444();
      v10 = swift_allocError(&type metadata for CRLSerializationError, v11, 0, 0);
      *v12 = 1;
    }
    v13 = swift_unknownObjectRetain(a1);
    a4(v9, v10, v13);
    swift_errorRelease(v10);

  }
  return sub_100875088(a1, a2, a3 & 1);
}

void sub_100874F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t type metadata accessor for CRLPasteboardObjectItemProviderReadAssistant()
{
  return objc_opt_self(_TtC8Freeform44CRLPasteboardObjectItemProviderReadAssistant);
}

uint64_t sub_100874FD4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100874FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100874F20(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100875000()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100875024(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_100874DB4(a1, a2, a3 & 1, *(void (**)(void *, uint64_t, __n128))(v3 + 16));
}

uint64_t sub_100875030()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100875064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1005765C8(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_100875070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100875080(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100875088(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return swift_unknownObjectRelease(a1);
}

uint64_t sub_100875094(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, void *);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  }
  swift_retain(v9);
  v13 = a3;
  v10(v8, a3);
  swift_release(v9);

  return sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
}

id sub_100875194(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_super v6;

  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_pickerList]);
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress] = 0;
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker]);
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker]);
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_stickerPicker]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CRLiOSMediaReplacer();
  return objc_msgSendSuper2(&v6, "init");
}

id sub_10087529C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMediaReplacer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMediaReplacer()
{
  return objc_opt_self(_TtC8Freeform19CRLiOSMediaReplacer);
}

void sub_100875394(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  Class isa;
  id v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  void *v32;
  id v33;
  char v34;
  uint64_t v35;
  id v36;
  NSString v37;
  NSString v38;
  id v39;
  uint64_t v40;
  NSString v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  NSString v46;
  NSString v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  NSString v52;
  void *v53;
  id v54;
  id v55;
  NSString v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSString v62;
  void *v63;
  id v64;
  id v65;
  NSString v66;
  NSString v67;
  id v68;
  uint64_t v69;
  NSString v70;
  void *v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  id v80;
  uint64_t v81;
  void *v82;
  id v83;
  unsigned __int8 v84;
  id v85;
  id v86;
  id v87;
  id v88;
  void **aBlock;
  uint64_t v90;
  void *v91;
  ValueMetadata *v92;
  unint64_t v93;
  uint64_t v94;

  v2 = v1;
  if ((objc_msgSend(v2, "isShowingUI") & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 34, "Already showing media replacer UI", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(forMediaReplacing:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 34, (uint64_t)"Already showing media replacer UI", 33, 2u);
    return;
  }
  v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController];
  v5 = objc_msgSend(v4, "layerHost");
  if (!v5)
    goto LABEL_8;
  v6 = v5;
  if ((objc_msgSend(v5, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {
    swift_unknownObjectRelease(v6);
LABEL_8:
    sub_100757E04(&_mh_execute_header, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 39, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(forMediaReplacing:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 39, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    goto LABEL_9;
  }
  v7 = objc_msgSend(v6, "asiOSCVC");
  v8 = objc_msgSend(v7, "miniFormatterPresenter", swift_unknownObjectRelease(v6).n128_f64[0]);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "dismissMiniFormatter");

    swift_unknownObjectRelease(v9);
  }
  else
  {

  }
LABEL_9:
  swift_getObjectType(a1);
  if (objc_msgSend(a1, "supportedMediaTypes") == (id)2)
  {
    sub_10089988C();
    v10 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    type metadata accessor for UTType(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v88 = objc_msgSend(v10, "initForOpeningContentTypes:asCopy:", isa, 1, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v88, "setDelegate:", v2);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController], "presentViewController:animated:completion:", v88, 1, 0, swift_unknownObjectWeakAssign(&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker], v88).n128_f64[0]);

  }
  else
  {
    v85 = v4;
    v12 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    v87 = (id)objc_opt_self(NSBundle);
    v13 = objc_msgSend(v87, "mainBundle");
    v14 = String._bridgeToObjectiveC()();
    v15 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v17 = swift_allocObject(&unk_1012831C8, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16);
    v18 = swift_allocObject(&unk_101283498, 32, 7);
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 24) = a1;
    swift_retain(v17);
    v19 = a1;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v93 = (unint64_t)sub_10087C4A0;
    v94 = v18;
    aBlock = _NSConcreteStackBlock;
    v90 = *(_QWORD *)"";
    v91 = sub_1004C6194;
    v92 = (ValueMetadata *)&unk_1012834B0;
    v21 = _Block_copy(&aBlock);
    swift_release(v94);
    v22 = (void *)objc_opt_self(UIAlertAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 0, v21);
    _Block_release(v21);
    swift_release(v17);

    objc_msgSend(v12, "addAction:", v23);
    v24 = objc_msgSend(v87, "mainBundle");
    v25 = String._bridgeToObjectiveC()();
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v28 = swift_allocObject(&unk_1012831C8, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16);
    v29 = swift_allocObject(&unk_1012834E8, 32, 7);
    *(_QWORD *)(v29 + 16) = v28;
    *(_QWORD *)(v29 + 24) = v19;
    v30 = v19;
    swift_retain(v28);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v93 = (unint64_t)sub_10087C4CC;
    v94 = v29;
    aBlock = _NSConcreteStackBlock;
    v90 = *(_QWORD *)"";
    v91 = sub_1004C6194;
    v92 = (ValueMetadata *)&unk_101283500;
    v32 = _Block_copy(&aBlock);
    v86 = v22;
    v33 = objc_msgSend(v22, "actionWithTitle:style:handler:", v31, 0, v32, swift_release(v94).n128_f64[0]);
    _Block_release(v32);
    swift_release(v28);

    objc_msgSend(v12, "addAction:", v33);
    v92 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
    v93 = sub_10054F350();
    LOBYTE(v31) = isFeatureEnabled(_:)(&aBlock);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
    if ((v31 & 1) != 0)
    {
      v92 = &type metadata for CRLFeatureFlags;
      v93 = sub_1004DB6DC();
      LOBYTE(aBlock) = 12;
      v34 = isFeatureEnabled(_:)(&aBlock);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&aBlock);
      if ((v34 & 1) != 0)
      {
        if (objc_msgSend((id)type metadata accessor for ImagePlaygroundViewController(0, v35), "available"))
        {
          v36 = objc_msgSend(v87, "mainBundle");
          v37 = String._bridgeToObjectiveC()();
          v38 = String._bridgeToObjectiveC()();
          v39 = objc_msgSend(v36, "localizedStringForKey:value:table:", v37, v38, 0);

          static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          v40 = swift_allocObject(&unk_1012831C8, 24, 7);
          swift_unknownObjectWeakInit(v40 + 16);
          swift_retain(v40);
          v41 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v93 = (unint64_t)sub_10087C550;
          v94 = v40;
          aBlock = _NSConcreteStackBlock;
          v90 = *(_QWORD *)"";
          v91 = sub_1004C6194;
          v92 = (ValueMetadata *)&unk_101283668;
          v42 = _Block_copy(&aBlock);
          v43 = objc_msgSend(v22, "actionWithTitle:style:handler:", v41, 0, v42, swift_release(v94).n128_f64[0]);
          _Block_release(v42);
          swift_release(v40);

          objc_msgSend(v12, "addAction:", v43);
        }
      }
    }
    if (objc_msgSend((id)objc_opt_self(CRLFeatureFlagsHelper), "isOSFeatureEnabled:", 3))
    {
      v44 = objc_opt_self(CRLImageRep);
      if (swift_dynamicCastObjCClass(v30, v44)
        || (v81 = objc_opt_self(CRLMovieRep), (v82 = (void *)swift_dynamicCastObjCClass(v30, v81)) != 0)
        && (v83 = objc_msgSend(v82, "movieItem"),
            v84 = sub_100A376C8(),
            v83,
            (v84 & 1) != 0))
      {
        v45 = objc_msgSend(v87, "mainBundle");
        v46 = String._bridgeToObjectiveC()();
        v47 = String._bridgeToObjectiveC()();
        v48 = objc_msgSend(v45, "localizedStringForKey:value:table:", v46, v47, 0);

        static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v49 = swift_allocObject(&unk_1012831C8, 24, 7);
        swift_unknownObjectWeakInit(v49 + 16);
        v50 = swift_allocObject(&unk_101283628, 32, 7);
        *(_QWORD *)(v50 + 16) = v49;
        *(_QWORD *)(v50 + 24) = v30;
        v51 = v30;
        swift_retain(v49);
        v52 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v93 = (unint64_t)sub_10087C530;
        v94 = v50;
        aBlock = _NSConcreteStackBlock;
        v90 = *(_QWORD *)"";
        v91 = sub_1004C6194;
        v92 = (ValueMetadata *)&unk_101283640;
        v53 = _Block_copy(&aBlock);
        v54 = objc_msgSend(v22, "actionWithTitle:style:handler:", v52, 0, v53, swift_release(v94).n128_f64[0]);
        _Block_release(v53);
        swift_release(v49);

        objc_msgSend(v12, "addAction:", v54);
      }
    }
    v55 = objc_msgSend(v87, "mainBundle");
    v56 = String._bridgeToObjectiveC()();
    v57 = String._bridgeToObjectiveC()();
    v58 = objc_msgSend(v55, "localizedStringForKey:value:table:", v56, v57, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v59 = swift_allocObject(&unk_1012831C8, 24, 7);
    swift_unknownObjectWeakInit(v59 + 16);
    v60 = swift_allocObject(&unk_101283538, 32, 7);
    *(_QWORD *)(v60 + 16) = v59;
    *(_QWORD *)(v60 + 24) = v30;
    v61 = v30;
    swift_retain(v59);
    v62 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v93 = (unint64_t)sub_10087C4E0;
    v94 = v60;
    aBlock = _NSConcreteStackBlock;
    v90 = *(_QWORD *)"";
    v91 = sub_1004C6194;
    v92 = (ValueMetadata *)&unk_101283550;
    v63 = _Block_copy(&aBlock);
    v64 = objc_msgSend(v86, "actionWithTitle:style:handler:", v62, 0, v63, swift_release(v94).n128_f64[0]);
    _Block_release(v63);
    swift_release(v59);

    objc_msgSend(v12, "addAction:", v64);
    v65 = objc_msgSend(v87, "mainBundle");
    v66 = String._bridgeToObjectiveC()();
    v67 = String._bridgeToObjectiveC()();
    v68 = objc_msgSend(v65, "localizedStringForKey:value:table:", v66, v67, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
    v69 = swift_allocObject(&unk_101283588, 24, 7);
    swift_unknownObjectWeakInit(v69 + 16);
    swift_retain(v69);
    v70 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v93 = (unint64_t)sub_10087C4E8;
    v94 = v69;
    aBlock = _NSConcreteStackBlock;
    v90 = *(_QWORD *)"";
    v91 = sub_1004C6194;
    v92 = (ValueMetadata *)&unk_1012835A0;
    v71 = _Block_copy(&aBlock);
    v72 = objc_msgSend(v86, "actionWithTitle:style:handler:", v70, 1, v71, swift_release(v94).n128_f64[0]);
    _Block_release(v71);
    swift_release(v69);

    objc_msgSend(v12, "addAction:", v72);
    objc_msgSend(v12, "setModalPresentationStyle:", 7);
    v73 = objc_msgSend(v12, "popoverPresentationController");
    if (v73)
    {
      v74 = v73;
      v75 = objc_msgSend(v85, "canvasView");
      objc_msgSend(v74, "setSourceView:", v75);

      objc_msgSend(v74, "setDelegate:", v2);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 84, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(forMediaReplacing:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    }
    swift_unknownObjectWeakAssign(&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_pickerList], v12);
    v76 = swift_allocObject(&unk_1012835D8, 32, 7);
    *(_QWORD *)(v76 + 16) = v2;
    *(_QWORD *)(v76 + 24) = v12;
    v93 = (unint64_t)sub_10087C51C;
    v94 = v76;
    aBlock = _NSConcreteStackBlock;
    v90 = *(_QWORD *)"";
    v91 = sub_1005D2FC0;
    v92 = (ValueMetadata *)&unk_1012835F0;
    v77 = _Block_copy(&aBlock);
    v78 = v94;
    v79 = v2;
    v80 = v12;
    swift_release(v78);
    sub_1000A5140(v77);
    _Block_release(v77);

  }
}

void sub_100876330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PHPickerConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v23 - v11;
  v13 = sub_1004B804C(&qword_1013E1B38);
  __chkstk_darwin(v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v23 - v17;
  swift_getObjectType(a1);
  sub_100899814((uint64_t)v18);
  v23[0] = sub_1005034A0((unint64_t *)&unk_1013F6680, v19, (uint64_t (*)(uint64_t))type metadata accessor for CRLiOSMediaReplacer, (uint64_t)"} 7");
  PHPickerConfiguration.init()();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v2);
  PHPickerConfiguration.preferredAssetRepresentationMode.setter(v5);
  sub_1004CB7BC((uint64_t)v18, (uint64_t)v15, &qword_1013E1B38);
  PHPickerConfiguration.filter.setter(v15);
  sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v20 = (void *)PHPickerViewController.init(configuration:)(v9);
  swift_unknownObjectRetain(v23[1]);
  v22 = v21;
  PHPickerViewController.delegate.setter(v21, v23[0]);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  sub_1004CB800((uint64_t)v18, &qword_1013E1B38);
  objc_msgSend(*(id *)(v22 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController), "presentViewController:animated:completion:", v20, 1, 0, swift_unknownObjectWeakAssign(v22 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker, v20).n128_f64[0]);

}

void sub_100876580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10087B458();

  }
}

void sub_1008765D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "presentGenerativePlaygroundForCurrentSelection:", a1);

  }
}

void sub_100876630(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    a4(a3);

  }
}

void sub_100876698(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v4 = objc_msgSend(objc_allocWithZone((Class)_UIStickerPickerViewController), "init");
  objc_msgSend(v4, "setDelegate:", v1);
  v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController), "canvasView");
  objc_msgSend(v4, "setSourceView:", v3);

  objc_msgSend(v4, "setSourceRect:", sub_10087A848(a1));
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController), "presentViewController:animated:completion:", v4, 1, 0, swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_stickerPicker, v4).n128_f64[0]);

}

void sub_100876780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  id v7;
  Class isa;
  id v9;
  char v10[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    swift_getObjectType(a3);
    sub_10089988C();
    v7 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    type metadata accessor for UTType(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v9 = objc_msgSend(v7, "initForOpeningContentTypes:asCopy:", isa, 1, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v9, "setDelegate:", v6);
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController], "presentViewController:animated:completion:", v9, 1, 0, swift_unknownObjectWeakAssign(&v6[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker], v9).n128_f64[0]);

  }
}

void sub_100876888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);

  }
}

void sub_1008768E8(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);
  v4 = swift_allocObject(&unk_1012836A0, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v6[4] = sub_10087C558;
  v7 = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = *(_QWORD *)"";
  v6[2] = sub_1005D2FC0;
  v6[3] = &unk_1012836B8;
  v5 = _Block_copy(v6);
  objc_msgSend(v3, "presentViewController:animated:completion:", a2, 1, v5, swift_release(v7).n128_f64[0]);
  _Block_release(v5);
}

void sub_100876A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;

  v5 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_pickerList;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_pickerList);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(Strong, "dismissViewControllerAnimated:completion:", 1, 0);
    swift_unknownObjectWeakAssign(v5, 0);

  }
  v8 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker;
  v9 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "dismissViewControllerAnimated:completion:", 1, 0);
    swift_unknownObjectWeakAssign(v8, 0);

  }
  v11 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker;
  v12 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);
    swift_unknownObjectWeakAssign(v11, 0);

  }
  v14 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker;
  v15 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "dismissViewControllerAnimated:completion:", 1, 0);
    swift_unknownObjectWeakAssign(v14, 0);

  }
  v17 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_stickerPicker;
  v18 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_stickerPicker);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, 0);
    swift_unknownObjectWeakAssign(v17, 0);

  }
  if (a1)
  {
    v22[4] = a1;
    v23 = a2;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = *(_QWORD *)"";
    v22[2] = sub_1005D2FC0;
    v22[3] = &unk_101283460;
    v20 = _Block_copy(v22);
    v21 = v23;
    swift_retain_n(a2, 2);
    swift_release(v21);
    sub_1000A5140(v20);
    _Block_release(v20);
    sub_1004C1024(a1, a2);
  }
}

BOOL sub_100876CAC()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_pickerList);

  if (Strong)
    return 1;
  v2 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker);

  if (v2)
    return 1;
  v3 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker);

  if (v3)
    return 1;
  v4 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker);

  if (v4)
    return 1;
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_stickerPicker);

  return v5 || *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper) != 0;
}

void sub_100876D6C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v3 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
  if (v4)
  {
    v5 = v4;
    sub_100757E04(&_mh_execute_header, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 152, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 152, (uint64_t)"expected nil value, but non-nil found", 37, 2u);

  }
  v6 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLGenerativePlaygroundHelper()), "init");
  swift_unknownObjectWeakAssign(&v6[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_delegate], v1);
  v7 = *(void **)(v1 + v3);
  *(_QWORD *)(v1 + v3) = v6;
  v11 = v6;

  if ((a1 & 1) != 0)
  {
    v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);
    v9 = swift_allocObject(&unk_1012831C8, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = v11;
    sub_100D5585C(v8, (uint64_t)v10, v9, v10);
    swift_release(v9);

  }
  else
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController), "presentViewController:animated:completion:", *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController], 1, 0);
  }

}

uint64_t sub_100876F48(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v11, v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  sub_100876D6C(a4 & 1);

  return sub_1004CB800((uint64_t)v11, &qword_1013E0230);
}

void sub_100876FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);

    objc_msgSend(v6, "presentViewController:animated:completion:", *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController), 1, 0);
  }
}

id sub_100877060()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  id v17;
  __objc2_prot *v18;
  _QWORD v19[2];
  __objc2_prot *v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);
  result = objc_msgSend(v1, "editorController");
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(result, "mostSpecificCurrentEditorOfClass:", 0);
    v5 = v4;
    if (v4
      && (v20 = &OBJC_PROTOCOL___CRLMediaReplacing, (v6 = swift_dynamicCastObjCProtocolConditional(v4, 1, &v20)) != 0))
    {
      v7 = v6;

      v19[0] = &OBJC_PROTOCOL___CRLEditor;
      v19[1] = &OBJC_PROTOCOL___CRLMediaReplacing;
      v8 = (void *)swift_dynamicCastObjCProtocolConditional(v7, 2, v19);
      if (v8)
      {
        v9 = v8;
        if ((objc_msgSend(v8, "respondsToSelector:", "selectedObjectsSupportingReplacement") & 1) != 0)
        {
          v10 = objc_msgSend(v9, "selectedObjectsSupportingReplacement");
          if (v10)
          {
            v11 = v10;
            v12 = type metadata accessor for CRLBoardItem(0);
            v13 = sub_1005034A0((unint64_t *)&qword_1013E4190, 255, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
            v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v11, v12, v13);

            v15 = (void *)sub_100857E90(v14);
            *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
            if (v15)
            {
              v17 = objc_msgSend(v1, "repForInfo:", v15, v16);

              swift_unknownObjectRelease(v5);
              if (v17)
              {
                v18 = &OBJC_PROTOCOL___CRLMediaReplacingRep;
                result = (id)swift_dynamicCastObjCProtocolConditional(v17, 1, &v18);
                if (result)
                  return result;

              }
              return 0;
            }
          }
        }
      }
    }
    else
    {

    }
    swift_unknownObjectRelease(v5);
    return 0;
  }
  return result;
}

void sub_100877224(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  NSArray v7;
  NSArray v8;
  uint64_t v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v5 = sub_10087B2B0();
  if (v5)
  {
    v6 = v5;
    type metadata accessor for URL(0);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
    if (a2)
    {
      aBlock[4] = a2;
      v11 = a3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_1005D2FC0;
      aBlock[3] = &unk_101283280;
      a2 = _Block_copy(aBlock);
      v9 = v11;
      swift_retain(a3);
      v8.super.isa = (Class)swift_release(v9).n128_u64[0];
    }
    objc_msgSend(v6, "replaceCanvasElementInfo:withFilesAtURLs:allowedTypes:actionString:completion:", 0, v7.super.isa, 0, 0, a2, *(double *)&v8.super.isa);
    _Block_release(a2);
    swift_unknownObjectRelease(v6);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 482, "No replacing editor", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertMedia(from:completion:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 482, (uint64_t)"No replacing editor", 19, 2u);
  }
}

double sub_1008774E0(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  double result;
  void *v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  __n128 v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[72];
  _QWORD v41[3];
  _BYTE v42[80];

  v38 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v42);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v41[0] = sub_1004B804C(&qword_1013F65F8);
  v8 = a1;
  v9 = sub_1004B804C((uint64_t *)&unk_1013F6600);
  String.init<A>(describing:)(v41, v9);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  v11 = sub_10056B004((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 64) = v11;
  if (!Strong
    || (sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr),
        v12 = v8,
        v13 = Strong,
        v14 = static NSObject.== infix(_:_:)(v12, v13),
        v12,
        v13,
        (v14 & 1) == 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 197, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"picker(_:didFinishPicking:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 197, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);

    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_4;
LABEL_9:
    v25 = (void *)objc_opt_self(CRLIngestionTypes);
    v26 = objc_msgSend(v25, "supportedImageTypes");
    v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for String);

    v28 = objc_msgSend(v25, "supportedMovieTypes");
    v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, &type metadata for String);

    v41[0] = v27;
    sub_10061EAEC(v29);
    v30 = v41[0];
    v31 = swift_allocObject(&unk_1012831C8, 24, 7);
    swift_unknownObjectWeakInit(v31 + 16);
    v32 = (_QWORD *)swift_allocObject(&unk_1012831F0, 40, 7);
    v32[2] = v31;
    v32[3] = v8;
    v32[4] = a2;
    v33 = v8;
    swift_retain(v31);
    v34 = swift_bridgeObjectRetain(a2);
    v36 = PHPickerViewController.crl_loadFileRepresentations(for:supportedTypeIdentifiers:completionHandler:)(v35, v30, (uint64_t)sub_10087B2A4, (uint64_t)v32, v34);
    swift_release(v31);
    swift_release(v32);
    swift_bridgeObjectRelease();
    v37 = *(void **)(v39 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress);
    *(_QWORD *)(v39 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress) = v36;

    return result;
  }
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v15);

  if (*(_QWORD *)(a2 + 16))
    goto LABEL_9;
LABEL_4:
  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  swift_beginAccess(&static OS_os_log.crlInsertMedia, v41, 0, 0);
  v16 = (void *)static OS_os_log.crlInsertMedia;
  v17 = swift_initStackObject(v6, v40);
  *(_OWORD *)(v17 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v17 + 56) = sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
  *(_QWORD *)(v17 + 64) = sub_10056B004((unint64_t *)&qword_1013E1950, &qword_1013E1948, PHPickerViewController_ptr);
  *(_QWORD *)(v17 + 32) = v8;
  v18 = v8;
  v19 = v16;
  v21 = static os_log_type_t.default.getter(v20);
  sub_100A06EBC((uint64_t)v19, &_mh_execute_header, v21, "Dismissing photo picker (%p) with empty results.", 48, 2, v17);
  swift_setDeallocating(v17);
  v22 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v17 + 32, 1, v22);

  v23 = *(void **)(v39 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress);
  if (v23)
  {
    objc_msgSend(v23, "cancel");
  }
  else
  {
    objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, 0);
    *(_QWORD *)&result = swift_unknownObjectWeakAssign(v38, 0).n128_u64[0];
  }
  return result;
}

void sub_100877988(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  _QWORD aBlock[5];
  _QWORD *v21;
  char v22[24];

  v12 = a4 + 16;
  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 214, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"picker(_:didFinishPicking:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 214, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  swift_beginAccess(v12, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v14 = (void *)Strong;
    swift_unknownObjectWeakAssign(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPicker, 0);

  }
  v15 = (_QWORD *)swift_allocObject(&unk_101283218, 64, 7);
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a2;
  v15[5] = a1;
  v15[6] = a3;
  v15[7] = a6;
  aBlock[4] = sub_10087B430;
  v21 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_101283230;
  v16 = _Block_copy(aBlock);
  v17 = v21;
  swift_retain(a4);
  v18 = a5;
  swift_bridgeObjectRetain(a2);
  v19 = a1;
  swift_errorRetain(a3);
  swift_bridgeObjectRetain(a6);
  objc_msgSend(v18, "dismissViewControllerAnimated:completion:", 1, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
}

void sub_100877BA4(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  void *v14;
  id v15;
  char *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  void *v50;
  uint64_t v51;
  _BYTE v52[24];
  id v53[3];
  _BYTE v54[72];
  _QWORD v55[3];
  _BYTE v56[24];
  _BYTE v57[32];

  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v57, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  v13 = (void *)Strong;
  if (Strong)
  {
    v14 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress);
    v15 = v14;

    if (v14)
    {
      LODWORD(v13) = objc_msgSend(v15, "isCancelled");

    }
    else
    {
      LODWORD(v13) = 0;
    }
  }
  swift_beginAccess(v11, v56, 0, 0);
  v16 = (char *)swift_unknownObjectWeakLoadStrong(v11);
  if (v16)
  {
    v17 = *(void **)&v16[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress];
    *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress] = 0;

  }
  if ((_DWORD)v13)
  {
    if (qword_1013DD7B0 != -1)
      swift_once(&qword_1013DD7B0, sub_100A03678);
    swift_beginAccess(&static OS_os_log.crlInsertMedia, v55, 0, 0);
    v18 = (void *)static OS_os_log.crlInsertMedia;
    v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v19, &v51);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E1948, PHPickerViewController_ptr);
    *(_QWORD *)(inited + 64) = sub_10056B004((unint64_t *)&qword_1013E1950, &qword_1013E1948, PHPickerViewController_ptr);
    *(_QWORD *)(inited + 32) = a2;
    v21 = v18;
    v22 = a2;
    v24 = static os_log_type_t.default.getter(v23);
    sub_100A06EBC((uint64_t)v21, &_mh_execute_header, v24, "Photo picker (%p) loading progress was cancelled.", 49, 2, inited);
    swift_setDeallocating(inited);
    v25 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v25);

  }
  else if (a3
         && *(_QWORD *)(a3 + 16)
         && (swift_beginAccess(v11, v52, 0, 0), (v26 = swift_unknownObjectWeakLoadStrong(v11)) != 0))
  {
    v27 = (void *)v26;
    v28 = swift_allocObject(&unk_101283268, 24, 7);
    *(_QWORD *)(v28 + 16) = a4;
    v29 = a4;
    sub_100877224(a3, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), v28);

    swift_release(v28);
  }
  else if (a5)
  {
    v55[0] = a5;
    swift_errorRetain(a5);
    v30 = sub_1004B804C(&qword_1013E0210);
    v31 = sub_1004B8930(0, (unint64_t *)&qword_1013F95B0, NSError_ptr);
    if ((swift_dynamicCast(v53, v55, v30, v31, 6) & 1) != 0)
    {
      v32 = v53[0];
      if ((objc_msgSend(v53[0], "crl_isCancelError") & 1) == 0)
      {
        if (qword_1013DD7B0 != -1)
          swift_once(&qword_1013DD7B0, sub_100A03678);
        swift_beginAccess(&static OS_os_log.crlInsertMedia, v55, 0, 0);
        v33 = (void *)static OS_os_log.crlInsertMedia;
        v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        v35 = swift_initStackObject(v34, v54);
        *(_OWORD *)(v35 + 16) = xmmword_100EF5E40;
        v36 = v33;
        v32 = v32;
        v37 = objc_msgSend(v32, "description");
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        v40 = v39;

        *(_QWORD *)(v35 + 56) = &type metadata for String;
        v41 = sub_1004CFC2C();
        *(_QWORD *)(v35 + 64) = v41;
        *(_QWORD *)(v35 + 32) = v38;
        *(_QWORD *)(v35 + 40) = v40;
        v42 = static os_log_type_t.error.getter(v41);
        sub_100A06EBC((uint64_t)v36, &_mh_execute_header, v42, "Error loading files from photo picker: %@", 41, 2, v35);
        swift_setDeallocating(v35);
        v43 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(v35 + 32, 1, v43);

        sub_100DE35F8(a6);
        v45 = v44;
        swift_beginAccess(v11, v53, 0, 0);
        v46 = swift_unknownObjectWeakLoadStrong(v11);
        if (v46)
        {
          v47 = (void *)v46;
          v48 = *(id *)(v46 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);

          v49 = v45;
          v50 = (void *)_convertErrorToNSError(_:)(v49);

          objc_msgSend(v48, "presentError:completionHandler:", v50, 0);
        }
        else
        {

        }
      }

    }
  }
}

uint64_t sub_100878038(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  id v17;
  id v18;
  char v19;
  uint64_t v20;
  char *v22;
  id v23;
  void *v24;
  NSURL *v25;
  void *v26;
  void *v27;
  char v28;
  id v29;
  void *v30;
  Class isa;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char v37[72];

  v5 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v33 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v2;
  v32 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker);
  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v12, v37);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v36 = sub_1004B804C(&qword_1013F6660);
  v35 = a1;
  v14 = sub_1004B804C(&qword_1013F6668);
  String.init<A>(describing:)(&v36, v14);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  v16 = sub_10056B004((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 64) = v16;
  if (Strong
    && (sub_1004B8930(0, (unint64_t *)&unk_1013F6670, UIDocumentPickerViewController_ptr),
        v17 = v35,
        v18 = Strong,
        v19 = static NSObject.== infix(_:_:)(v17, v18),
        v17,
        v18,
        (v19 & 1) != 0))
  {
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v20);

    if (!*(_QWORD *)(a2 + 16))
    {
LABEL_4:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
      return sub_1004CB800((uint64_t)v7, &qword_1013E04D0);
    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"documentPicker(_:didPickDocumentsAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 243, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"documentPicker(_:didPickDocumentsAt:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 243, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);

    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_4;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1004CB800((uint64_t)v7, &qword_1013E04D0);
  v22 = v33;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v33, v7, v8);
  v23 = sub_100877060();
  if (v23)
  {
    v24 = v23;
    swift_getObjectType(v23);
    URL._bridgeToObjectiveC()(v25);
    v27 = v26;
    v28 = sub_100899764(v26);

    if ((v28 & 1) != 0)
    {
      v29 = sub_10087B2B0();
      if (v29)
      {
        v30 = v29;
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v30, "replaceCanvasElementInfo:withFilesAtURLs:allowedTypes:actionString:completion:", 0, isa, 0, 0, 0);
        swift_unknownObjectRelease(v30);

      }
      else
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 482, "No replacing editor", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertMedia(from:completion:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 482, (uint64_t)"No replacing editor", 19, 2u);
      }
    }
    else
    {
      sub_1008784EC();
    }
    swift_unknownObjectWeakAssign(v32, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v22, v8);
}

void sub_1008784EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v7 = v6;

  v8 = objc_msgSend(v1, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 1);

  v17 = objc_msgSend(v1, "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v22 = v21;

  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v24 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v23, 0, 0);

  objc_msgSend(v16, "addAction:", v24);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController), "presentViewController:animated:completion:", v16, 1, 0);

}

double sub_100878848(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  _BYTE v17[72];

  v3 = v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v16 = sub_1004B804C(&qword_1013F6660);
  v7 = a1;
  v8 = sub_1004B804C(&qword_1013F6668);
  String.init<A>(describing:)(&v16, v8);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  v10 = sub_10056B004((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 64) = v10;
  if (Strong
    && (sub_1004B8930(0, (unint64_t *)&unk_1013F6670, UIDocumentPickerViewController_ptr),
        v11 = v7,
        v12 = Strong,
        v13 = static NSObject.== infix(_:_:)(v11, v12),
        v11,
        v12,
        (v13 & 1) != 0))
  {
    swift_setDeallocating(inited);
    v14 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v14);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"documentPickerWasCancelled(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 269, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"documentPickerWasCancelled(_:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 269, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_unknownObjectWeakAssign(v3, 0).n128_u64[0];
  return result;
}

id sub_100878ABC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  uint64_t v5;
  uint64_t inited;
  id v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[72];

  v3 = v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v17);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v16 = sub_1004B804C(&qword_1013F6640);
  v7 = a1;
  v8 = sub_1004B804C(&qword_1013F6648);
  String.init<A>(describing:)(&v16, v8);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  v10 = sub_10056B004((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 64) = v10;
  if (Strong
    && (sub_1004B8930(0, (unint64_t *)&unk_1013F6650, UIImagePickerController_ptr),
        v11 = v7,
        v12 = Strong,
        v13 = static NSObject.== infix(_:_:)(v11, v12),
        v11,
        v12,
        (v13 & 1) != 0))
  {
    swift_setDeallocating(inited);
    v14 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v14);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePickerControllerDidCancel(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 278, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"imagePickerControllerDidCancel(_:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 278, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);

    swift_bridgeObjectRelease();
  }
  return objc_msgSend(v7, "dismissViewControllerAnimated:completion:", 1, 0, swift_unknownObjectWeakAssign(v3, 0).n128_f64[0]);
}

void sub_100878D48(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v6;
  void *Strong;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  _QWORD aBlock[5];
  uint64_t v23;
  char v24[80];

  v3 = v2;
  v6 = &v3[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker];
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker]);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v8, v24);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  aBlock[0] = sub_1004B804C(&qword_1013F6640);
  v10 = a1;
  v11 = sub_1004B804C(&qword_1013F6648);
  String.init<A>(describing:)(aBlock, v11);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  v13 = sub_10056B004((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 64) = v13;
  if (Strong
    && (sub_1004B8930(0, (unint64_t *)&unk_1013F6650, UIImagePickerController_ptr),
        v14 = v10,
        v15 = Strong,
        v16 = static NSObject.== infix(_:_:)(v14, v15),
        v14,
        v15,
        (v16 & 1) != 0))
  {
    swift_setDeallocating(inited);
    v17 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v17);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 284, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 284, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);

    swift_bridgeObjectRelease();
  }
  swift_unknownObjectWeakAssign(v6, 0);
  v18 = swift_allocObject(&unk_1012833D0, 32, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = v3;
  aBlock[4] = sub_10087C48C;
  v23 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1005D2FC0;
  aBlock[3] = &unk_1012833E8;
  v19 = _Block_copy(aBlock);
  v20 = v23;
  swift_bridgeObjectRetain(a2);
  v21 = v3;
  objc_msgSend(v10, "dismissViewControllerAnimated:completion:", 1, v19, swift_release(v20).n128_f64[0]);
  _Block_release(v19);
}

void sub_10087900C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSString *v23;
  __n128 v24;
  uint64_t v25;
  char v26;
  NSString v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  NSString v30;
  unsigned int v31;
  NSString *v32;
  __n128 v33;
  uint64_t v34;
  char v35;
  NSString v36;
  uint64_t v37;
  NSString v38;
  unsigned int v39;
  NSString *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  NSData *v51;
  NSData *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  __int128 v65;
  id v66;
  NSString v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  char *v73;
  char *v74;
  __n128 v75;
  unint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, __n128);
  char *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  NSString *v86;
  __n128 v87;
  uint64_t v88;
  char v89;
  int v90;
  uint64_t v91;
  id v92;
  NSString v93;
  NSString v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  __n128 v101;
  uint64_t v102;
  uint64_t (*v103)(char *, uint64_t, __n128);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  __n128 v109;
  void *v110;
  id v111;
  NSURL *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  id v116;
  id v117;
  uint64_t v118;
  __n128 v119;
  id v120;
  NSURL *v121;
  void *v122;
  void *v123;
  NSURL *v124;
  void *v125;
  void *v126;
  unsigned int v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  __n128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  void *v140;
  Class isa;
  uint64_t v142;
  id v143;
  uint64_t v144;
  __n128 v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  _QWORD v175[3];
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  char v180[72];
  __int128 v181;
  __int128 v182;

  v4 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v172 = (char *)&v166 - v12;
  __chkstk_darwin(v13);
  v173 = (uint64_t)&v166 - v14;
  __chkstk_darwin(v15);
  v174 = (char *)&v166 - v16;
  __chkstk_darwin(v17);
  v171 = (char *)&v166 - v18;
  v19 = type metadata accessor for UTType(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v166 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v181 = 0u;
    v182 = 0u;
    goto LABEL_11;
  }
  v169 = a2;
  v170 = v8;
  v23 = UIImagePickerControllerMediaType;
  v25 = sub_100842FAC(v23, v24);
  if ((v26 & 1) == 0)
  {
    v181 = 0u;
    v182 = 0u;

    goto LABEL_11;
  }
  sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v25, (uint64_t)&v181);

  if (!*((_QWORD *)&v182 + 1))
  {
LABEL_11:
    sub_1004CB800((uint64_t)&v181, &qword_1013E0230);
    goto LABEL_12;
  }
  if ((swift_dynamicCast(&v178, &v181, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_12:
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 289, "No media type", 13, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 289, (uint64_t)"No media type", 13, 2u);
    return;
  }
  v167 = v7;
  v168 = v178;
  v27 = String._bridgeToObjectiveC()();
  v28 = static UTType.image.getter();
  UTType.identifier.getter(v28);
  v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v29(v22, v19);
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v27, "crl_conformsToUTI:", v30, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v31)
  {
    v36 = String._bridgeToObjectiveC()();
    v37 = static UTType.movie.getter(v36);
    UTType.identifier.getter(v37);
    v29(v22, v19);
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v36, "crl_conformsToUTI:", v38, swift_bridgeObjectRelease().n128_f64[0]);

    if (!v39)
    {
      v46 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v46, v180);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_OWORD *)(inited + 32) = v168;
      sub_100757E04(&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 327, "Bad media type: %@", 18, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 327, (uint64_t)"Bad media type: %@", 18, 2u);
      swift_setDeallocating(inited);
      v48 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v48);
      return;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 16))
    {
      v40 = UIImagePickerControllerMediaURL;
      v42 = sub_100842FAC(v40, v41);
      v43 = v167;
      v44 = v170;
      if ((v45 & 1) != 0)
      {
        sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v42, (uint64_t)&v178);
      }
      else
      {
        v178 = 0u;
        v179 = 0u;
      }

      if (*((_QWORD *)&v179 + 1))
      {
LABEL_41:
        sub_1004D28A4((uint64_t)&v178, (uint64_t)&v181);
        if (*((_QWORD *)&v182 + 1))
        {
          v90 = swift_dynamicCast(v6, &v181, (char *)&type metadata for Any + 8, v43, 6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v6, v90 ^ 1u, 1, v43);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v6, 1, v43) != 1)
          {
            v91 = v173;
            (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v173, v6, v43);
            v92 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v93 = String._bridgeToObjectiveC()();
            v94 = String._bridgeToObjectiveC()();
            v95 = objc_msgSend(v92, "localizedStringForKey:value:table:", v93, v94, 0);

            v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
            v98 = v97;

            URL.deletingLastPathComponent()(v99);
            v100 = v174;
            URL.appendingPathComponent(_:)(v96, v98);
            v101 = swift_bridgeObjectRelease();
            v102 = v43;
            v103 = *(uint64_t (**)(char *, uint64_t, __n128))(v44 + 8);
            v104 = v10;
            v105 = v91;
            v106 = v103(v104, v102, v101);
            v107 = URL.pathExtension.getter(v106);
            v108 = v172;
            URL.appendingPathExtension(_:)(v107);
            v109 = swift_bridgeObjectRelease();
            v103(v100, v102, v109);
            v110 = (void *)objc_opt_self(NSFileManager);
            v111 = objc_msgSend(v110, "defaultManager");
            URL._bridgeToObjectiveC()(v112);
            v114 = v113;
            *(_QWORD *)&v181 = 0;
            LODWORD(v100) = objc_msgSend(v111, "removeItemAtURL:error:", v113, &v181);

            v115 = v181;
            if ((_DWORD)v100)
            {
              v116 = (id)v181;
            }
            else
            {
              v117 = (id)v181;
              v118 = _convertNSErrorToError(_:)(v115);

              swift_willThrow(v119);
              swift_errorRelease(v118);
            }
            v120 = objc_msgSend(v110, "defaultManager");
            URL._bridgeToObjectiveC()(v121);
            v123 = v122;
            URL._bridgeToObjectiveC()(v124);
            v126 = v125;
            *(_QWORD *)&v181 = 0;
            v127 = objc_msgSend(v120, "moveItemAtURL:toURL:error:", v123, v125, &v181);

            v128 = v181;
            if (v127)
            {
              v129 = (id)v181;
              v130 = v167;
              ((void (*)(uint64_t, uint64_t))v103)(v105, v167);
              v131 = v170;
              (*(void (**)(uint64_t, char *, uint64_t))(v170 + 16))(v105, v108, v130);
            }
            else
            {
              v132 = (id)v181;
              v133 = _convertNSErrorToError(_:)(v128);

              swift_willThrow(v134);
              swift_errorRelease(v133);
              v130 = v167;
              v131 = v170;
            }
            v135 = sub_1004B804C(&qword_1013E1910);
            v136 = *(unsigned __int8 *)(v131 + 80);
            v137 = (v136 + 32) & ~v136;
            v138 = swift_allocObject(v135, v137 + *(_QWORD *)(v131 + 72), v136 | 7);
            *(_OWORD *)(v138 + 16) = xmmword_100EF5E40;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 16))(v138 + v137, v105, v130);
            v139 = sub_10087B2B0();
            if (v139)
            {
              v140 = v139;
              isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v140, "replaceCanvasElementInfo:withFilesAtURLs:allowedTypes:actionString:completion:", 0, isa, 0, 0, 0);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease(v140);

              ((void (*)(char *, uint64_t))v103)(v108, v130);
              v142 = v105;
            }
            else
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 482, "No replacing editor", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertMedia(from:completion:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 482, (uint64_t)"No replacing editor", 19, 2u);
              v158 = swift_bridgeObjectRelease();
              v103(v108, v130, v158);
              v142 = v173;
            }
            ((void (*)(uint64_t, uint64_t))v103)(v142, v130);
            return;
          }
        }
        else
        {
          sub_1004CB800((uint64_t)&v181, &qword_1013E0230);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v6, 1, 1, v43);
        }
        sub_1004CB800((uint64_t)v6, &qword_1013E04D0);
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        swift_beginAccess(&static OS_os_log.crlDefault, &v181, 0, 0);
        v81 = (id)static OS_os_log.crlDefault;
        v82 = static os_log_type_t.error.getter(v81);
        v83 = "No movie URL to insert";
        v84 = (uint64_t)v81;
        v85 = 22;
        goto LABEL_49;
      }
    }
    else
    {
      v178 = 0u;
      v179 = 0u;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 312, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v43 = v167;
    v44 = v170;
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 312, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
  {
    v178 = 0u;
    v179 = 0u;
    goto LABEL_19;
  }
  v32 = UIImagePickerControllerEditedImage;
  v34 = sub_100842FAC(v32, v33);
  if ((v35 & 1) != 0)
  {
    sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v34, (uint64_t)&v178);
  }
  else
  {
    v178 = 0u;
    v179 = 0u;
  }

  if (!*((_QWORD *)&v179 + 1))
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v86 = UIImagePickerControllerOriginalImage;
      v88 = sub_100842FAC(v86, v87);
      if ((v89 & 1) != 0)
      {
        sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v88, (uint64_t)&v181);
      }
      else
      {
        v181 = 0u;
        v182 = 0u;
      }

LABEL_20:
      sub_1004CB800((uint64_t)&v178, &qword_1013E0230);
      if (!*((_QWORD *)&v182 + 1))
      {
LABEL_28:
        sub_1004CB800((uint64_t)&v181, &qword_1013E0230);
        goto LABEL_29;
      }
      goto LABEL_21;
    }
LABEL_19:
    v181 = 0u;
    v182 = 0u;
    goto LABEL_20;
  }
  sub_10050CB14(&v178, &v181);
  if (!*((_QWORD *)&v182 + 1))
    goto LABEL_28;
LABEL_21:
  v49 = sub_1004B8930(0, &qword_1013E1CE0, UIImage_ptr);
  if (!swift_dynamicCast(&v178, &v181, (char *)&type metadata for Any + 8, v49, 6))
  {
LABEL_29:
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 294, "Bad image info", 14, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 294, (uint64_t)"Bad image info", 14, 2u);
    swift_bridgeObjectRelease();
LABEL_30:
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, &v181, 0, 0);
    v81 = (id)static OS_os_log.crlDefault;
    v82 = static os_log_type_t.error.getter(v81);
    v83 = "No image to insert";
    v84 = (uint64_t)v81;
    v85 = 18;
LABEL_49:
    sub_100A06EBC(v84, &_mh_execute_header, v82, v83, v85, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  v50 = (char *)v178;
  v51 = UIImageJPEGRepresentation((UIImage *)v178, 0.8);
  if (!v51)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 295, "Unable to get image data", 24, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 295, (uint64_t)"Unable to get image data", 24, 2u);

    goto LABEL_30;
  }
  v52 = v51;
  v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v51);
  v55 = v54;

  v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v57 = String._bridgeToObjectiveC()();
  v58 = String._bridgeToObjectiveC()();
  v59 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

  v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
  v62 = v61;

  *(_QWORD *)&v181 = 1735420462;
  *((_QWORD *)&v181 + 1) = 0xE400000000000000;
  *(_QWORD *)&v178 = v60;
  *((_QWORD *)&v178 + 1) = v62;
  v63 = swift_bridgeObjectRetain(v62);
  *(_QWORD *)&v178 = String.init<A>(_:)(&v178, &type metadata for String, &protocol witness table for String, &protocol witness table for String, v63);
  *((_QWORD *)&v178 + 1) = v64;
  String.append<A>(contentsOf:)(&v181, &type metadata for String, &protocol witness table for String);
  swift_bridgeObjectRelease();
  v65 = v178;
  v66 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v67 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v181 = 0;
  v68 = objc_msgSend(v66, "initWithSignature:error:", v67, &v181);

  v69 = v181;
  v173 = v53;
  if (v68)
  {
    v172 = v50;
    v70 = (id)v181;
    v71 = objc_msgSend(v68, "URL");
    v72 = v53;
    v73 = v174;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v71);

    v74 = v171;
    URL.appendingPathComponent(_:isDirectory:)(v65, *((_QWORD *)&v65 + 1), 0);
    v75 = swift_bridgeObjectRelease();
    v76 = v55;
    v77 = v170;
    v78 = *(void (**)(char *, uint64_t, __n128))(v170 + 8);
    v79 = v73;
    v80 = v167;
    v78(v79, v167, v75);
    Data.write(to:options:)(v74, 0, v72, v76);
    v159 = sub_1004B804C(&qword_1013E1910);
    v160 = *(unsigned __int8 *)(v77 + 80);
    v161 = v74;
    v162 = (v160 + 32) & ~v160;
    v163 = swift_allocObject(v159, v162 + *(_QWORD *)(v77 + 72), v160 | 7);
    *(_OWORD *)(v163 + 16) = xmmword_100EF5E40;
    (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v163 + v162, v161, v80);
    v164 = swift_allocObject(&unk_101283420, 24, 7);
    *(_QWORD *)(v164 + 16) = v68;
    v165 = v68;
    sub_100877224(v163, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), v164);
    swift_bridgeObjectRelease();
    swift_release(v164);

    sub_1004BBBC8(v173, v76);
    ((void (*)(char *, uint64_t))v78)(v161, v80);
  }
  else
  {
    v143 = (id)v181;
    v144 = _convertNSErrorToError(_:)(v69);

    swift_willThrow(v145);
    swift_bridgeObjectRelease();
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, &v181, 0, 0);
    v146 = (void *)static OS_os_log.crlDefault;
    v147 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v148 = swift_initStackObject(v147, &v177);
    *(_OWORD *)(v148 + 16) = xmmword_100EF5E40;
    swift_getErrorValue(v144, &v176, v175);
    v149 = v175[1];
    v150 = v175[2];
    v151 = v146;
    v152 = Error.localizedDescription.getter(v149, v150);
    v154 = v153;
    *(_QWORD *)(v148 + 56) = &type metadata for String;
    v155 = sub_1004CFC2C();
    *(_QWORD *)(v148 + 64) = v155;
    *(_QWORD *)(v148 + 32) = v152;
    *(_QWORD *)(v148 + 40) = v154;
    v156 = static os_log_type_t.error.getter(v155);
    sub_100A06EBC((uint64_t)v151, &_mh_execute_header, v156, "Error writing file to temporary directory: %@", 45, 2, v148);

    sub_1004BBBC8(v173, v55);
    swift_setDeallocating(v148);
    v157 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v148 + 32, 1, v157);

    swift_errorRelease(v144);
  }
}

id sub_10087A328(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  NSString v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[72];

  v3 = objc_msgSend(a1, "sourceView");
  v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController), "canvasView");
  v5 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v24 = sub_1004B804C((uint64_t *)&unk_1013FBC10);
  v7 = sub_1004B804C((uint64_t *)&unk_1013F6630);
  String.init<A>(describing:)(&v24, v7);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  v9 = sub_10056B004((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 64) = v9;
  if (!v3)
  {
    if (!v4)
    {
      swift_setDeallocating(inited);
      v23 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v23);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (!v4
    || (sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr),
        v10 = v3,
        v11 = v4,
        v12 = static NSObject.== infix(_:_:)(v10, v11),
        v10,
        v11,
        (v12 & 1) == 0))
  {
LABEL_6:
    sub_100757E04(&_mh_execute_header, (uint64_t)"prepareForPopoverPresentation(_:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 343, "expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"prepareForPopoverPresentation(_:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 343, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_setDeallocating(inited);
  v13 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v13);

LABEL_7:
  v14 = sub_100877060();
  v15 = sub_10087A848(v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;

  return objc_msgSend(a1, "setSourceRect:", v15, v17, v19, v21);
}

void sub_10087A694(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  char v7;

  v2 = objc_msgSend(a1, "presentedViewController");
  v3 = v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_pickerList;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_pickerList);
  v5 = (void *)Strong;
  if (v2)
  {
    if (Strong)
    {
      sub_1004B8930(0, (unint64_t *)&qword_1013F6620, UIViewController_ptr);
      v6 = v2;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) == 0)
        goto LABEL_9;
LABEL_6:
      swift_unknownObjectWeakAssign(v3, 0);
      return;
    }
    v5 = v2;
  }
  else if (!Strong)
  {
    goto LABEL_6;
  }

LABEL_9:
  sub_100757E04(&_mh_execute_header, (uint64_t)"presentationControllerDidDismiss(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 360, "Unexpected presentation controller being dismissed", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentationControllerDidDismiss(_:)", 36, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 360, (uint64_t)"Unexpected presentation controller being dismissed", 50, 2u);
}

double sub_10087A848(void *a1)
{
  uint64_t v1;
  id v2;
  double x;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  CGFloat v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  if (!a1)
    goto LABEL_4;
  v2 = a1;
  if ((objc_msgSend(v2, "hasBeenRemoved") & 1) != 0)
  {

LABEL_4:
    sub_100757E04(&_mh_execute_header, (uint64_t)"sourceRect(forMediaReplacing:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 373, "media replacing rep is no longer valid", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sourceRect(forMediaReplacing:)", 30, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 373, (uint64_t)"media replacing rep is no longer valid", 38, 2u);
    return 0.0;
  }
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);
  objc_msgSend(v2, "frameInUnscaledCanvas");
  objc_msgSend(v5, "convertUnscaledToBoundsRect:");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  objc_msgSend(v5, "visibleScaledRectForCanvasUI");
  v36.origin.x = v14;
  v27 = v14;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v29.origin.x = v7;
  v29.origin.y = v9;
  v29.size.width = v11;
  v29.size.height = v13;
  v36.origin.y = v16;
  v36.size.width = v18;
  v36.size.height = v20;
  v30 = CGRectIntersection(v29, v36);
  x = v30.origin.x;
  y = v30.origin.y;
  width = v30.size.width;
  height = v30.size.height;
  v24 = CGRectGetWidth(v30);
  v28 = x;
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = width;
  v31.size.height = height;
  v26 = v24 * CGRectGetHeight(v31);
  v32.origin.x = v27;
  v32.origin.y = v16;
  v32.size.width = v18;
  v32.size.height = v20;
  v25 = CGRectGetWidth(v32);
  v33.origin.x = v27;
  v33.origin.y = v16;
  v33.size.width = v18;
  v33.size.height = v20;
  if (v25 * CGRectGetHeight(v33) < v26 + v26)
  {
    v34.origin.x = x;
    v34.origin.y = y;
    v34.size.width = width;
    v34.size.height = height;
    x = CGRectGetMidX(v34);
    v35.origin.x = v28;
    v35.origin.y = y;
    v35.size.width = width;
    v35.size.height = height;
    CGRectGetMidY(v35);
  }

  return x;
}

void sub_10087AAAC(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  void *v29;
  uint64_t v30;
  uint64_t inited;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  double (*v51)(char *, uint64_t, __n128);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned int v59;
  id v60;
  id v61;
  NSURL *v62;
  void *v63;
  void *v64;
  NSURL *v65;
  void *v66;
  void *v67;
  unsigned int v68;
  id v69;
  unint64_t *v70;
  unint64_t v71;
  id v72;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v74;
  void (*v75)(unint64_t, uint64_t, uint64_t);
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  __n128 v80;
  id v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  dispatch_group_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  char v95[72];
  id v96[3];

  v91 = a6;
  v92 = a5;
  v93 = a1;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  v21 = (char *)&v84 - v20;
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  if (a2)
  {
    swift_errorRetain(a2);
    swift_willThrow(v28);
LABEL_3:
    if (qword_1013DD7B0 != -1)
      swift_once(&qword_1013DD7B0, sub_100A03678);
    swift_beginAccess(&static OS_os_log.crlInsertMedia, v96, 0, 0);
    v29 = (void *)static OS_os_log.crlInsertMedia;
    v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v30, v95);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v94 = a2;
    v32 = v29;
    swift_errorRetain(a2);
    v33 = sub_1004B804C(&qword_1013E0210);
    v34 = String.init<A>(describing:)(&v94, v33);
    v36 = v35;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v37 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v37;
    *(_QWORD *)(inited + 32) = v34;
    *(_QWORD *)(inited + 40) = v36;
    v38 = static os_log_type_t.error.getter(v37);
    sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v38, "Error loading sticker from provider: %@", 39, 2, inited);
    swift_setDeallocating(inited);
    v39 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v39);

    swift_errorRelease(a2);
    return;
  }
  v40 = a4;
  v41 = v92;
  v86 = v27;
  v87 = v26;
  v89 = (char *)&v84 - v24;
  v90 = v25;
  v88 = a3;
  sub_1004CB7BC(v93, (uint64_t)v15, &qword_1013E04D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1004CB800((uint64_t)v15, &qword_1013E04D0);
    dispatch_group_leave(v88);
    return;
  }
  v42 = v89;
  v85 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v85(v89, v15, v16);
  v43 = objc_msgSend(v40, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v43);

  v45 = UUID.init()(v44);
  v46 = UUID.uuidString.getter(v45);
  v48 = v47;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v49 = v90;
  URL.appendingPathComponent(_:isDirectory:)(v46, v48, 1);
  v50 = swift_bridgeObjectRelease();
  v51 = *(double (**)(char *, uint64_t, __n128))(v17 + 8);
  v52.n128_f64[0] = v51(v21, v16, v50);
  v53 = URL.lastPathComponent.getter(v52);
  v54 = v87;
  URL.appendingPathComponent(_:)(v53, v55);
  swift_bridgeObjectRelease();
  URL._bridgeToObjectiveC()(v56);
  v58 = v57;
  v96[0] = 0;
  v59 = objc_msgSend(v41, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v57, 1, 0, v96);

  v60 = v96[0];
  if (!v59)
  {
    v79 = v96[0];
    a2 = _convertNSErrorToError(_:)(v60);

    swift_willThrow(v80);
    ((void (*)(uint64_t, uint64_t))v51)(v54, v16);
    ((void (*)(uint64_t, uint64_t))v51)(v49, v16);
    ((void (*)(char *, uint64_t))v51)(v42, v16);
    goto LABEL_3;
  }
  v93 = v16;
  v61 = v96[0];
  URL._bridgeToObjectiveC()(v62);
  v64 = v63;
  URL._bridgeToObjectiveC()(v65);
  v67 = v66;
  v96[0] = 0;
  v68 = objc_msgSend(v41, "copyItemAtURL:toURL:error:", v64, v66, v96);

  v69 = v96[0];
  if (!v68)
  {
    v81 = v96[0];
    a2 = _convertNSErrorToError(_:)(v69);

    swift_willThrow(v82);
    v83 = v93;
    ((void (*)(uint64_t, uint64_t))v51)(v54, v93);
    ((void (*)(uint64_t, uint64_t))v51)(v90, v83);
    ((void (*)(char *, uint64_t))v51)(v42, v83);
    goto LABEL_3;
  }
  v70 = (unint64_t *)(v91 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v86, v54, v93);
  swift_beginAccess(v70, v96, 33, 0);
  v71 = *v70;
  v72 = v69;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v71);
  *v70 = v71;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v71 = sub_100D0FAC8(0, *(_QWORD *)(v71 + 16) + 1, 1, v71);
    *v70 = v71;
  }
  v74 = v88;
  v75 = (void (*)(unint64_t, uint64_t, uint64_t))v85;
  v77 = *(_QWORD *)(v71 + 16);
  v76 = *(_QWORD *)(v71 + 24);
  if (v77 >= v76 >> 1)
  {
    v71 = sub_100D0FAC8(v76 > 1, v77 + 1, 1, v71);
    *v70 = v71;
  }
  *(_QWORD *)(v71 + 16) = v77 + 1;
  v78 = v93;
  v75(v71+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v77, v86, v93);
  swift_endAccess(v96);
  dispatch_group_leave(v74);
  ((void (*)(uint64_t, uint64_t))v51)(v54, v78);
  ((void (*)(uint64_t, uint64_t))v51)(v90, v78);
  ((void (*)(char *, uint64_t))v51)(v89, v78);
}

uint64_t sub_10087B0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, __n128))
{
  uint64_t v7;
  __n128 v8;
  _BYTE v10[24];

  swift_beginAccess(a2 + 16, v10, 0, 0);
  v7 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain(v7);
  swift_retain(a3);
  sub_100877224(v7, sub_10087C478, a3);
  swift_bridgeObjectRelease();
  v8 = swift_release(a3);
  return a4(1, v8);
}

id sub_10087B188(uint64_t a1)
{
  id result;
  _BYTE v3[24];

  swift_beginAccess(a1 + 16, v3, 0, 0);
  result = *(id *)(a1 + 16);
  if (result)
    return objc_msgSend(result, "removeDirectory");
  return result;
}

uint64_t sub_10087B24C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10087B270()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10087B2A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100877988(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32));
}

id sub_10087B2B0()
{
  uint64_t v0;
  id result;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];
  __objc2_prot *v8;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController), "editorController");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "mostSpecificCurrentEditorOfClass:", 0);
    v4 = v3;
    if (v3
      && (v8 = &OBJC_PROTOCOL___CRLMediaReplacing, (v5 = swift_dynamicCastObjCProtocolConditional(v3, 1, &v8)) != 0))
    {
      v6 = v5;

      v7[0] = &OBJC_PROTOCOL___CRLEditor;
      v7[1] = &OBJC_PROTOCOL___CRLMediaReplacing;
      result = (id)swift_dynamicCastObjCProtocolConditional(v6, 2, v7);
      if (result)
        return result;
    }
    else
    {

    }
    swift_unknownObjectRelease(v4);
    return 0;
  }
  return result;
}

void sub_10087B380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    swift_unknownObjectWeakAssign(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker, a1);

  }
}

uint64_t sub_10087B3E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_errorRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_10087B430()
{
  uint64_t v0;

  sub_100877BA4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_10087B440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10087B450(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10087B458()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  char *v7;
  id v8;
  __n128 v9;
  _QWORD v11[5];
  _QWORD *v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController];
  v2 = swift_allocObject(&unk_1012831C8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = (void *)objc_opt_self(AVCaptureDevice);
  v4 = (_QWORD *)swift_allocObject(&unk_1012836F0, 48, 7);
  v4[2] = v0;
  v4[3] = v1;
  v4[4] = sub_10087C56C;
  v4[5] = v2;
  v11[4] = sub_10054F474;
  v12 = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = *(_QWORD *)"";
  v11[2] = sub_1006084F4;
  v11[3] = &unk_101283708;
  v5 = _Block_copy(v11);
  v6 = v12;
  swift_retain_n(v2, 2);
  v7 = v0;
  v8 = v1;
  objc_msgSend(v3, "crl_checkAuthorizationForMediaType:completion:", AVMediaTypeVideo, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  return swift_release_n(v2, 2, v9);
}

void sub_10087B590(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  NSURL *v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  _BYTE v20[24];

  v2 = v1;
  v4 = sub_100877060();
  if (v4)
  {
    v5 = v4;
    swift_getObjectType(v4);
    URL._bridgeToObjectiveC()(v6);
    v8 = v7;
    v9 = sub_100899764(v7);

    if ((v9 & 1) != 0)
    {
      v10 = sub_1004B804C(&qword_1013E1910);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = *(unsigned __int8 *)(v12 + 80);
      v14 = (v13 + 32) & ~v13;
      v15 = swift_allocObject(v10, v14 + *(_QWORD *)(v12 + 72), v13 | 7);
      *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15 + v14, a1, v11);
      v19 = v2;
      sub_100D56178(v15, (uint64_t)v19);

      swift_bridgeObjectRelease();
      return;
    }

  }
  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  swift_beginAccess(&static OS_os_log.crlInsertMedia, v20, 0, 0);
  v16 = (id)static OS_os_log.crlInsertMedia;
  v18 = static os_log_type_t.default.getter(v17);
  sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v18, "No media replacing rep or image not allowed.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

}

void sub_10087B734(double *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  double v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[72];

  v3 = v2;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_cameraPicker);

  if (!Strong)
  {
    v8 = *a2;
    if (*a2)
      *(_QWORD *)&v7 = swift_unknownObjectRetain(*a2).n128_u64[0];
    v9 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController), "canvasView", v7);
    v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v10, v27);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v26 = sub_1004B804C((uint64_t *)&unk_1013FBC10);
    v12 = sub_1004B804C((uint64_t *)&unk_1013F6630);
    String.init<A>(describing:)(&v26, v12);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = sub_1004B8930(0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
    v14 = sub_10056B004((unint64_t *)&qword_1013EE6B0, (unint64_t *)&qword_1013E46B0, NSString_ptr);
    *(_QWORD *)(inited + 32) = v13;
    *(_QWORD *)(inited + 64) = v14;
    if (v9
      && (sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr),
          swift_unknownObjectRetain(v8),
          v15 = v9,
          v16 = static NSObject.== infix(_:_:)(v8, v15),
          swift_unknownObjectRelease(v8),
          v15,
          (v16 & 1) != 0))
    {
      swift_setDeallocating(inited);
      v17 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v17);
      swift_unknownObjectRelease(v8);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"popoverPresentationController(_:willRepositionPopoverTo:in:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 354, "expected equality between two values of type %{public}@", 55, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"popoverPresentationController(_:willRepositionPopoverTo:in:)", 60, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2u, 354, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u);
      swift_unknownObjectRelease(v8);

      swift_bridgeObjectRelease();
    }
    v18 = sub_100877060();
    v19 = sub_10087A848(v18);
    v21 = v20;
    v23 = v22;
    v25 = v24;

    *a1 = v19;
    *((_QWORD *)a1 + 1) = v21;
    *((_QWORD *)a1 + 2) = v23;
    *((_QWORD *)a1 + 3) = v25;
  }
}

void sub_10087B9C8(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  NSString v22;
  id v23;
  Class isa;
  unsigned int v25;
  __n128 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  id v40;
  NSString v41;
  id v42;
  void **v43;
  void *v44;
  uint64_t v45;
  id v46;
  NSString v47;
  _QWORD *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  _QWORD *v52;
  double v53;
  id v54;
  __n128 v55;
  void *v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  __n128 v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  _QWORD *v72;
  uint64_t v73;
  void **v74;
  uint64_t v75;
  __n128 v76;
  void *v77;
  uint64_t v78;
  uint64_t inited;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  void *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  id v99;
  _QWORD v100[2];
  void **aBlock;
  uint64_t v102;
  void *v103;
  void *v104;
  void *v105;
  _QWORD *v106;
  char v107[72];
  char v108[24];

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject(&unk_1012832B8, 24, 7);
  *(_QWORD *)(v14 + 16) = a3;
  v98 = a3;
  _Block_copy(a3);
  v99 = a1;
  v15 = objc_msgSend(a1, "registeredTypeIdentifiers");
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);

  v17 = (_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v89 = a2;
    v90 = v13;
    v91 = v11;
    v92 = v10;
    v93 = v9;
    v94 = v7;
    v95 = v6;
    v96 = v14;
    v19 = v17;
    v20 = (void *)objc_opt_self(CRLIngestionTypes);
    swift_bridgeObjectRetain(v19);
    v97 = v19;
    v21 = v19 + 5;
    while (1)
    {
      swift_bridgeObjectRetain(*v21);
      v22 = String._bridgeToObjectiveC()();
      v23 = objc_msgSend(v20, "supportedMovieAnimatedImageTypes");
      static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String);

      isa = Array._bridgeToObjectiveC()().super.isa;
      v25 = objc_msgSend(v22, "crl_conformsToAnyUTI:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      if (v25)
        break;
      v21 += 2;
      swift_bridgeObjectRelease();
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        v14 = v96;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n(v97, 2);
    v36 = swift_allocObject(&unk_1012832E0, 24, 7);
    *(_QWORD *)(v36 + 16) = 0;
    v37 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    v38 = swift_allocObject(&unk_101283308, 24, 7);
    *(_QWORD *)(v38 + 16) = _swiftEmptyArrayStorage;
    v39 = dispatch_group_create();
    v40 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    v41 = String._bridgeToObjectiveC()();
    aBlock = 0;
    v42 = objc_msgSend(v40, "initWithSignature:error:", v41, &aBlock);

    v43 = aBlock;
    if (v42)
    {
      objc_msgSend(v42, "leakTemporaryDirectory");
      v44 = *(void **)(v36 + 16);
      *(_QWORD *)(v36 + 16) = v42;
      v45 = v36;
      v46 = v42;

      dispatch_group_enter(v39);
      v47 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v48 = (_QWORD *)swift_allocObject(&unk_101283330, 48, 7);
      v48[2] = v39;
      v48[3] = v46;
      v48[4] = v37;
      v48[5] = v38;
      v105 = sub_10087C420;
      v106 = v48;
      v49 = v37;
      v50 = v38;
      aBlock = _NSConcreteStackBlock;
      v102 = *(_QWORD *)"";
      v103 = sub_100875094;
      v104 = &unk_101283348;
      v51 = _Block_copy(&aBlock);
      v52 = v106;
      v98 = v46;
      v88 = v39;
      v97 = v49;
      swift_retain(v38);
      *(_QWORD *)&v53 = swift_release(v52).n128_u64[0];
      v54 = objc_msgSend(v99, "loadFileRepresentationForTypeIdentifier:completionHandler:", v47, v51, v53);
      _Block_release(v51);

      sub_1004B8930(0, (unint64_t *)&qword_1013DE090, OS_dispatch_queue_ptr);
      v56 = (void *)static OS_dispatch_queue.main.getter(v55);
      v57 = (_QWORD *)swift_allocObject(&unk_101283380, 56, 7);
      v58 = v89;
      v57[2] = v89;
      v57[3] = v38;
      v59 = v45;
      v57[4] = v45;
      v57[5] = sub_10087C388;
      v60 = v96;
      v57[6] = v96;
      v105 = sub_10087C468;
      v106 = v57;
      aBlock = _NSConcreteStackBlock;
      v102 = *(_QWORD *)"";
      v103 = sub_1005D2FC0;
      v104 = &unk_101283398;
      v61 = _Block_copy(&aBlock);
      swift_retain(v38);
      v62 = v58;
      swift_retain(v59);
      v63 = swift_retain(v60);
      v64 = v90;
      static DispatchQoS.unspecified.getter(v63);
      v100[0] = _swiftEmptyArrayStorage;
      v65 = sub_1005034A0((unint64_t *)&qword_1013E1D20, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v66 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
      v67 = sub_1004CBA30((unint64_t *)&qword_1013E1D30, (uint64_t *)&unk_1013DFBF0, (uint64_t)&protocol conformance descriptor for [A]);
      v68 = v93;
      v69 = v66;
      v70 = v95;
      dispatch thunk of SetAlgebra.init<A>(_:)(v100, v69, v67, v95, v65);
      v71 = v88;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v64, v68, v56, v61);
      _Block_release(v61);

      (*(void (**)(char *, uint64_t))(v94 + 8))(v68, v70);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v64, v92);
      v72 = v106;
      swift_release(v60);
      swift_release(v59);
      swift_release(v50);
      v73 = (uint64_t)v72;
    }
    else
    {
      v74 = v43;
      v75 = _convertNSErrorToError(_:)(v43);

      swift_willThrow(v76);
      swift_bridgeObjectRelease();
      if (qword_1013DD7B0 != -1)
        swift_once(&qword_1013DD7B0, sub_100A03678);
      swift_beginAccess(&static OS_os_log.crlInsertMedia, &aBlock, 0, 0);
      v77 = (void *)static OS_os_log.crlInsertMedia;
      v78 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v78, v107);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v100[0] = v75;
      v80 = v77;
      swift_errorRetain(v75);
      v81 = sub_1004B804C(&qword_1013E0210);
      v82 = String.init<A>(describing:)(v100, v81);
      v84 = v83;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v85 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v85;
      *(_QWORD *)(inited + 32) = v82;
      *(_QWORD *)(inited + 40) = v84;
      v86 = static os_log_type_t.error.getter(v85);
      sub_100A06EBC((uint64_t)v80, &_mh_execute_header, v86, "Error attempting to replace sticker: %@", 39, 2, inited);
      swift_setDeallocating(inited);
      v87 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v87);

      objc_msgSend(*(id *)(v36 + 16), "removeDirectory");
      (*((void (**)(id, uint64_t))v98 + 2))(v98, 1);

      swift_errorRelease(v75);
      swift_release(v96);
      swift_release(v36);
      v73 = v38;
    }
    swift_release(v73);
  }
  else
  {
LABEL_6:
    v26 = swift_bridgeObjectRelease();
    (*((void (**)(id, uint64_t, __n128))v98 + 2))(v98, 1, v26);
    if (qword_1013DD7B0 != -1)
      swift_once(&qword_1013DD7B0, sub_100A03678);
    swift_beginAccess(&static OS_os_log.crlInsertMedia, &aBlock, 0, 0);
    v27 = (void *)static OS_os_log.crlInsertMedia;
    v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v29 = swift_initStackObject(v28, v108);
    *(_OWORD *)(v29 + 16) = xmmword_100EF5E40;
    v30 = v27;
    v31 = objc_msgSend(v99, "registeredTypeIdentifiers");
    v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v31, &type metadata for String);

    *(_QWORD *)(v29 + 56) = sub_1004B804C((uint64_t *)&unk_1013E4970);
    *(_QWORD *)(v29 + 64) = sub_1004CBA30((unint64_t *)&unk_1013F6610, (uint64_t *)&unk_1013E4970, (uint64_t)&protocol conformance descriptor for [A]);
    *(_QWORD *)(v29 + 32) = v32;
    v34 = static os_log_type_t.default.getter(v33);
    sub_100A06EBC((uint64_t)v30, &_mh_execute_header, v34, "Dismissing sticker picker. Provider does not contain any valid type identifiers (%p).", 85, 2, v29);
    swift_setDeallocating(v29);
    v35 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v29 + 32, 1, v35);
    swift_release(v14);

  }
}

uint64_t sub_10087C364()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10087C388(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_10087C39C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10087C3C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10087C3E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10087C420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10087AAAC(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10087C42C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10087C468()
{
  uint64_t v0;

  return sub_10087B0E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t (**)(uint64_t, __n128))(v0 + 40));
}

id sub_10087C478()
{
  uint64_t v0;

  return sub_10087B188(v0);
}

uint64_t sub_10087C480()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_10087C48C()
{
  uint64_t v0;

  sub_10087900C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10087C494()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_release);
}

void sub_10087C4A0(uint64_t a1)
{
  uint64_t v1;

  sub_100876630(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), sub_100876330);
}

uint64_t sub_10087C4C0()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_release);
}

void sub_10087C4CC(uint64_t a1)
{
  uint64_t v1;

  sub_100876580(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_10087C4D4()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_release);
}

void sub_10087C4E0(uint64_t a1)
{
  uint64_t v1;

  sub_100876780(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10087C4E8(uint64_t a1)
{
  uint64_t v1;

  sub_100876888(a1, v1);
}

uint64_t sub_10087C4F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10087C51C()
{
  uint64_t v0;

  sub_1008768E8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10087C524()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_release);
}

void sub_10087C530(uint64_t a1)
{
  uint64_t v1;

  sub_100876630(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (void (*)(uint64_t))sub_100876698);
}

void sub_10087C550(uint64_t a1)
{
  uint64_t v1;

  sub_1008765D0(a1, v1);
}

void sub_10087C558()
{
  uint64_t v0;

  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)(v0 + 16));
}

void sub_10087C56C(uint64_t a1)
{
  uint64_t v1;

  sub_10087B380(a1, v1);
}

uint64_t sub_10087C574()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

id sub_10087C62C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "systemGroupedBackgroundColor");
  qword_10147F9A8 = (uint64_t)result;
  return result;
}

void sub_10087C664()
{
  qword_10147F9B0 = 0x4034000000000000;
}

void sub_10087C674()
{
  qword_10147F9B8 = 0x4077700000000000;
}

void sub_10087C688()
{
  qword_10147F9C0 = 0x4074000000000000;
}

void sub_10087C698()
{
  qword_10147F9C8 = 0x404E000000000000;
}

uint64_t sub_10087C6A8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  __n128 v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[4];

  v2 = v1;
  v63 = a1;
  v64 = type metadata accessor for ControlSize(0);
  v62 = *(_QWORD *)(v64 - 8);
  v3 = __chkstk_darwin(v64);
  v61 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BorderedProminentButtonStyle(0, v3);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1004B804C(&qword_1013F67A0);
  v8 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1004B804C(&qword_1013F67A8);
  __chkstk_darwin(v56);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013F67B0);
  v59 = *(_QWORD *)(v13 - 8);
  v60 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10087E9DC(v2, v65);
  v16 = swift_allocObject(&unk_1012837F8, 48, 7);
  sub_10087EA4C((uint64_t)v65, v16 + 16);
  v17 = sub_1004B804C(&qword_1013F67B8);
  v18 = sub_10087EA94();
  v19 = Button.init(action:label:)(sub_10087EA8C, v16, sub_10087CB44, 0, v17, v18);
  v20 = static Edge.Set.top.getter(v19);
  v21 = v20;
  v22 = static Edge.Set.leading.getter(v20);
  v24 = static Edge.Set.bottom.getter(v23);
  v25 = static Edge.Set.trailing.getter();
  v26 = Edge.Set.init(rawValue:)(0);
  v27 = Edge.Set.init(rawValue:)(v26);
  if (Edge.Set.init(rawValue:)(v27 & v21) != v21)
    v26 = Edge.Set.init(rawValue:)(v26 | v21);
  v28 = Edge.Set.init(rawValue:)(v26);
  if (Edge.Set.init(rawValue:)(v28 & v22) != v22)
    v26 = Edge.Set.init(rawValue:)(v26 | v22);
  v29 = Edge.Set.init(rawValue:)(v26);
  if (Edge.Set.init(rawValue:)(v29 & v24) != v24)
    v26 = Edge.Set.init(rawValue:)(v26 | v24);
  v30 = Edge.Set.init(rawValue:)(v26);
  if (Edge.Set.init(rawValue:)(v30 & v25) != v25)
    LOBYTE(v26) = Edge.Set.init(rawValue:)(v26 | v25);
  if (qword_1013DD2D8 != -1)
    swift_once(&qword_1013DD2D8, sub_10087C664);
  v31 = EdgeInsets.init(_all:)(*(double *)&qword_10147F9B0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = v55;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v55);
  v39 = v56;
  v40 = &v12[*(int *)(v56 + 36)];
  *v40 = v26;
  *((double *)v40 + 1) = v31;
  *((_QWORD *)v40 + 2) = v33;
  *((_QWORD *)v40 + 3) = v35;
  *((_QWORD *)v40 + 4) = v37;
  v40[40] = 0;
  v41 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v38);
  BorderedProminentButtonStyle.init()(v41);
  v42 = sub_10087EAF8();
  sub_1004B7878(&qword_1013F67D8, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v43 = v58;
  View.buttonStyle<A>(_:)(v7, v39, v58, v42);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v7, v43);
  sub_1004CB800((uint64_t)v12, &qword_1013F67A8);
  v45 = v61;
  v44 = v62;
  v46 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v61, enum case for ControlSize.large(_:), v64);
  KeyPath = swift_getKeyPath(&unk_100F118F0);
  v48 = sub_1004B804C(&qword_1013F6780);
  v49 = v63;
  v50 = (uint64_t *)(v63 + *(int *)(v48 + 36));
  v51 = sub_1004B804C(&qword_1013F67E0);
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)v50 + *(int *)(v51 + 28), v45, v46);
  *v50 = KeyPath;
  v53 = v59;
  v52 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v49, v15, v60);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v15, v52);
}

double sub_10087CB04(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v3 = Strong;
    sub_100C38488();
    sub_100C421F8(0);
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

__n128 sub_10087CB44@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __n128 result;
  _OWORD v25[9];

  if (qword_1013DD2F8 != -1)
    swift_once(&qword_1013DD2F8, sub_10087DE74);
  v2 = *((_QWORD *)&xmmword_10147F9D0 + 1);
  v25[0] = xmmword_10147F9D0;
  v3 = sub_1004D292C();
  swift_bridgeObjectRetain(v2);
  v4 = Text.init<A>(_:)(v25, &type metadata for String, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  LODWORD(v25[0]) = static HierarchicalShapeStyle.primary.getter();
  v11 = Text.foregroundStyle<A>(_:)(v25, v4, v6, v10, v8, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v13 = v12;
  v15 = v14;
  v17 = v16 & 1;
  sub_1005EFC24(v4, v6, v10);
  swift_bridgeObjectRelease();
  v19 = static Alignment.center.getter(v18);
  sub_1006C94CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v25, 0.0, 1, 0.0, 1, v19, v20, v11, v13, v17, v15);
  sub_1005EFC24(v11, v13, v17);
  swift_bridgeObjectRelease();
  v21 = v25[7];
  *(_OWORD *)(a1 + 96) = v25[6];
  *(_OWORD *)(a1 + 112) = v21;
  *(_OWORD *)(a1 + 128) = v25[8];
  v22 = v25[3];
  *(_OWORD *)(a1 + 32) = v25[2];
  *(_OWORD *)(a1 + 48) = v22;
  v23 = v25[5];
  *(_OWORD *)(a1 + 64) = v25[4];
  *(_OWORD *)(a1 + 80) = v23;
  result = (__n128)v25[1];
  *(_OWORD *)a1 = v25[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10087CCDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _OWORD v31[7];

  v2 = v1;
  v4 = sub_1004B804C(&qword_1013F6758);
  __chkstk_darwin(v4);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013F6760);
  __chkstk_darwin(v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F6768);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v11);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v14 = sub_1004B804C(&qword_1013F6770);
  v15 = sub_10087D014(v2, (uint64_t)&v6[*(int *)(v14 + 44)]);
  if (qword_1013DD2E0 != -1)
    v15 = swift_once(&qword_1013DD2E0, sub_10087C674);
  v16 = *(double *)&qword_10147F9B8;
  if (qword_1013DD2E8 != -1)
    v15 = swift_once(&qword_1013DD2E8, sub_10087C688);
  v17 = qword_10147F9C0;
  v18 = static Alignment.center.getter(v15);
  v20 = v19;
  if (v16 < -INFINITY)
  {
    v21 = static os_log_type_t.fault.getter();
    v22 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v21, &_mh_execute_header, v22, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v31, 0, 1, *(_QWORD *)&v16, 0, 0, 1, v17, 0, 0, 1, 0, 1, v18, v20);
  sub_1004CB7BC((uint64_t)v6, (uint64_t)v9, &qword_1013F6758);
  v23 = &v9[*(int *)(v7 + 36)];
  v24 = v31[5];
  *((_OWORD *)v23 + 4) = v31[4];
  *((_OWORD *)v23 + 5) = v24;
  *((_OWORD *)v23 + 6) = v31[6];
  v25 = v31[1];
  *(_OWORD *)v23 = v31[0];
  *((_OWORD *)v23 + 1) = v25;
  v26 = v31[3];
  *((_OWORD *)v23 + 2) = v31[2];
  *((_OWORD *)v23 + 3) = v26;
  sub_1004CB800((uint64_t)v6, &qword_1013F6758);
  sub_1004CB7BC((uint64_t)v9, (uint64_t)v13, &qword_1013F6760);
  *(_WORD *)&v13[*(int *)(v10 + 36)] = 1;
  sub_1004CB800((uint64_t)v9, &qword_1013F6760);
  if (qword_1013DD2D0 != -1)
    swift_once(&qword_1013DD2D0, sub_10087C62C);
  v27 = Color.init(_:)((id)qword_10147F9A8);
  v28 = static Edge.Set.all.getter();
  sub_1004CB7BC((uint64_t)v13, a1, &qword_1013F6768);
  v29 = a1 + *(int *)(sub_1004B804C(&qword_1013F6778) + 36);
  *(_QWORD *)v29 = v27;
  *(_BYTE *)(v29 + 8) = v28;
  return sub_1004CB800((uint64_t)v13, &qword_1013F6768);
}

uint64_t sub_10087D014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t KeyPath;
  uint64_t v24;
  id v25;
  __n128 v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char v39;
  _QWORD v40[4];
  char v41;
  uint64_t v42;
  _QWORD v43[6];

  v38 = a2;
  v3 = sub_1004B804C(&qword_1013F6780);
  __chkstk_darwin(v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F6788);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013F6790);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - v14;
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  v17 = *(void **)(a1 + 24);
  v40[1] = *(_QWORD *)(a1 + 8);
  swift_unknownObjectWeakInit(v40);
  v18 = v17;
  swift_unknownObjectRelease(Strong);
  v19 = type metadata accessor for CRLScenesPopoverState(0);
  v20 = sub_1004B7878(&qword_10140B870, type metadata accessor for CRLScenesPopoverState, (uint64_t)&unk_100F117F4);
  v40[2] = ObservedObject.init(wrappedValue:)(v18, v19, v20);
  v40[3] = v21;
  v39 = 0;
  State.init(wrappedValue:)(v43, &v39, &type metadata for Bool);
  v41 = v43[0];
  v42 = v43[1];
  sub_10087E708((uint64_t)v40, (uint64_t)v43);
  v22 = *(void **)(a1 + 24);
  KeyPath = swift_getKeyPath(&unk_100F11830);
  v24 = swift_getKeyPath(&unk_100F11858);
  v25 = v22;
  static Published.subscript.getter(v40, v25, KeyPath, v24);

  swift_release(KeyPath);
  v26 = swift_release(v24);
  if ((v40[0] & 1) != 0)
  {
    v27 = 1;
  }
  else
  {
    sub_10087C6A8((uint64_t)v5);
    v28 = *(void **)(a1 + 24);
    v29 = swift_getKeyPath(&unk_100F11878);
    v30 = swift_getKeyPath(&unk_100F118A0);
    v31 = v28;
    static Published.subscript.getter(v40, v31, v29, v30);

    swift_release(v29);
    swift_release(v30);
    LOBYTE(v31) = v40[0];
    v32 = swift_getKeyPath(&unk_100F118C0);
    v33 = swift_allocObject(&unk_1012837D0, 17, 7);
    *(_BYTE *)(v33 + 16) = (_BYTE)v31;
    sub_1004CB7BC((uint64_t)v5, (uint64_t)v9, &qword_1013F6780);
    v34 = (uint64_t *)&v9[*(int *)(v6 + 36)];
    *v34 = v32;
    v34[1] = (uint64_t)sub_100712094;
    v34[2] = v33;
    sub_1004CB800((uint64_t)v5, &qword_1013F6780);
    sub_10087E924((uint64_t)v9, (uint64_t)v15);
    v27 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v15, v27, 1, v6, v26);
  sub_10087E96C((uint64_t)v43, (uint64_t)v40);
  sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, &qword_1013F6790);
  v35 = v38;
  sub_10087E96C((uint64_t)v40, v38);
  v36 = sub_1004B804C(&qword_1013F6798);
  sub_1004CB7BC((uint64_t)v12, v35 + *(int *)(v36 + 48), &qword_1013F6790);
  sub_1004CB800((uint64_t)v15, &qword_1013F6790);
  sub_10087E9A8((uint64_t)v43);
  sub_1004CB800((uint64_t)v12, &qword_1013F6790);
  return sub_10087E9A8((uint64_t)v40);
}

uint64_t sub_10087D390()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F119F8);
  v2 = swift_getKeyPath(&unk_100F11A20);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_10087D400(unint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double result;
  unint64_t v13;

  KeyPath = swift_getKeyPath(&unk_100F119F8);
  v4 = swift_getKeyPath(&unk_100F11A20);
  static Published.subscript.getter(&v13, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v13;
  v6 = swift_getKeyPath(&unk_100F119F8);
  v7 = swift_getKeyPath(&unk_100F11A20);
  v13 = a1;
  v8 = v1;
  static Published.subscript.setter(&v13, v8, v6, v7);
  v9 = swift_getKeyPath(&unk_100F119F8);
  v10 = swift_getKeyPath(&unk_100F11A20);
  static Published.subscript.getter(&v13, v8, v9, v10);
  swift_release(v9);
  swift_release(v10);
  v11 = v13;
  LOBYTE(v10) = sub_100548BE0(v5, v13);
  swift_bridgeObjectRelease(v11);
  if ((v10 & 1) == 0)
    ObservableObjectPublisher.send()();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

double sub_10087D538()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_100F119B0);
  v2 = swift_getKeyPath(&unk_100F119D8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10087D5A8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100F11968);
  v2 = swift_getKeyPath(&unk_100F11990);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10087D618()
{
  return sub_100638F84((uint64_t)&unk_100F11830, (uint64_t)&unk_100F11858);
}

uint64_t sub_10087D62C()
{
  return sub_100638F84((uint64_t)&unk_100F11878, (uint64_t)&unk_100F118A0);
}

uint64_t sub_10087D640()
{
  return sub_100638F84((uint64_t)&unk_100F11920, (uint64_t)&unk_100F11948);
}

id sub_10087D654()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  objc_class *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;
  uint64_t v39;

  v37 = sub_1004B804C(&qword_10140B9D0);
  v32 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013F67E8);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F67F0);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F67F8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_objectDidChange;
  v15 = type metadata accessor for ObservableObjectPublisher(0, v11);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = v0;
  *(_QWORD *)&v0[v14] = ObservableObjectPublisher.init()();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1004B891C((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v17 = &_swiftEmptySetSingleton;
  }
  v18 = v32;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete] = v17;
  v19 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__sceneInfos];
  v39 = (uint64_t)_swiftEmptyArrayStorage;
  v20 = sub_1004B804C(&qword_1013F6740);
  Published.init(initialValue:)(&v39, v20);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v13, v9);
  v21 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__sceneThumbnailImageSizeAspectRatio];
  v39 = 0x3FF0000000000000;
  Published.init(initialValue:)(&v39, &type metadata for CGFloat);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v21, v8, v34);
  v22 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__activeScene];
  v39 = 0;
  v23 = sub_1004B804C(&qword_10140B880);
  Published.init(initialValue:)(&v39, v23);
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v22, v5, v36);
  v24 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__isReadOnly];
  LOBYTE(v39) = 0;
  Published.init(initialValue:)(&v39, &type metadata for Bool);
  v25 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v26 = v37;
  v25(v24, v2, v37);
  v27 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__isCurrentlyEditing];
  LOBYTE(v39) = 0;
  Published.init(initialValue:)(&v39, &type metadata for Bool);
  v25(v27, v2, v26);
  v28 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__toggleToUpdateSceneThumbnails];
  LOBYTE(v39) = 1;
  Published.init(initialValue:)(&v39, &type metadata for Bool);
  v25(v28, v2, v26);

  v29 = (objc_class *)type metadata accessor for CRLScenesPopoverState(0);
  v38.receiver = v16;
  v38.super_class = v29;
  return objc_msgSendSuper2(&v38, "init");
}

id sub_10087D9A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLScenesPopoverState(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10087DB0C()
{
  return type metadata accessor for CRLScenesPopoverState(0);
}

uint64_t type metadata accessor for CRLScenesPopoverState(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6728;
  if (!qword_1013F6728)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLScenesPopoverState);
  return result;
}

void sub_10087DB50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v10[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100643190(319, &qword_1013F6738, &qword_1013F6740);
  if (v3 <= 0x3F)
  {
    v10[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_100583EA0(319, &qword_1013F6748, (uint64_t)&type metadata for CGFloat);
    if (v5 <= 0x3F)
    {
      v10[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_100643190(319, &qword_1013F6750, &qword_10140B880);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        sub_100583EA0(319, (unint64_t *)&qword_1013E8B60, (uint64_t)&type metadata for Bool);
        if (v9 <= 0x3F)
        {
          v11 = *(_QWORD *)(v8 - 8) + 64;
          v12 = v11;
          v13 = v11;
          swift_updateClassMetadata2(a1, 256, 8, v10, a1 + 80);
        }
      }
    }
  }
}

void destroy for CRLScenesPopoverUI(uint64_t a1)
{
  swift_unknownObjectWeakDestroy(a1);

}

uint64_t initializeWithCopy for CRLScenesPopoverUI(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = (_QWORD *)swift_unknownObjectWeakCopyInit(a1, a2);
  v5 = a2[2];
  v4[1] = a2[1];
  v4[2] = v5;
  v6 = (void *)a2[3];
  v4[3] = v6;
  v7 = v6;
  return a1;
}

uint64_t assignWithCopy for CRLScenesPopoverUI(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = (_QWORD *)swift_unknownObjectWeakCopyAssign(a1, a2);
  v4[1] = a2[1];
  v4[2] = a2[2];
  v5 = (void *)a2[3];
  v6 = (void *)v4[3];
  v4[3] = v5;
  v7 = v5;

  return a1;
}

__n128 initializeWithTake for CRLScenesPopoverUI(uint64_t a1, __n128 *a2)
{
  __n128 *v3;
  __n128 result;

  v3 = (__n128 *)swift_unknownObjectWeakTakeInit(a1, a2);
  v3->n128_u64[1] = a2->n128_u64[1];
  result = a2[1];
  v3[1] = result;
  return result;
}

uint64_t assignWithTake for CRLScenesPopoverUI(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(void **)(v4 + 24);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLScenesPopoverUI(uint64_t a1, int a2)
{
  int v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  if ((*(_QWORD *)(a1 + 8) & 0xF000000000000007) != 0)
    v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  else
    v2 = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLScenesPopoverUI(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      *(_QWORD *)(result + 8) = 1;
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLScenesPopoverUI()
{
  return &type metadata for CRLScenesPopoverUI;
}

uint64_t sub_10087DE28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1011281BC, 1);
}

uint64_t sub_10087DE38@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLScenesPopoverState(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

void sub_10087DE74()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F9D0 = v4;
  *(_QWORD *)algn_10147F9D8 = v6;
}

void sub_10087DF4C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F9E0 = v4;
  *(_QWORD *)algn_10147F9E8 = v6;
}

void sub_10087E024()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147F9F0 = v4;
  *(_QWORD *)algn_10147F9F8 = v6;
}

void sub_10087E0F4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA00 = v4;
  *(_QWORD *)algn_10147FA08 = v6;
}

void sub_10087E1C4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA10 = v4;
  *(_QWORD *)algn_10147FA18 = v6;
}

void sub_10087E2A4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA20 = v4;
  *(_QWORD *)algn_10147FA28 = v6;
}

void sub_10087E38C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA30 = v4;
  *(_QWORD *)algn_10147FA38 = v6;
}

void sub_10087E46C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA40 = v4;
  *(_QWORD *)algn_10147FA48 = v6;
}

void sub_10087E54C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA50 = v4;
  *(_QWORD *)algn_10147FA58 = v6;
}

void sub_10087E62C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA60 = v4;
  *(_QWORD *)algn_10147FA68 = v6;
}

uint64_t sub_10087E708(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLScenesListWrapperUI_i(a2, a1);
  return a2;
}

void sub_10087E744()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  qword_10147FA70 = v4;
  *(_QWORD *)algn_10147FA78 = v6;
}

void sub_10087E81C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F11878);
  v5 = swift_getKeyPath(&unk_100F118A0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_10087E89C(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F11878);
  v5 = swift_getKeyPath(&unk_100F118A0);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10087E914()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10087E924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F6788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10087E96C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLScenesListWrapperUI_i(a2, a1);
  return a2;
}

uint64_t sub_10087E9A8(uint64_t a1)
{
  destroy for CRLScenesListWrapperUI_i(a1);
  return a1;
}

_QWORD *sub_10087E9DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  id v6;

  swift_unknownObjectWeakCopyInit(a2, a1);
  v4 = a1[2];
  a2[1] = a1[1];
  a2[2] = v4;
  v5 = (void *)a1[3];
  a2[3] = v5;
  v6 = v5;
  return a2;
}

uint64_t sub_10087EA20()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10087EA4C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakTakeInit(a2, a1);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

double sub_10087EA8C()
{
  uint64_t v0;

  return sub_10087CB04(v0 + 16);
}

unint64_t sub_10087EA94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F67C0;
  if (!qword_1013F67C0)
  {
    v1 = sub_1004CB6A4(&qword_1013F67B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F67C0);
  }
  return result;
}

unint64_t sub_10087EAF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F67C8;
  if (!qword_1013F67C8)
  {
    v1 = sub_1004CB6A4(&qword_1013F67A8);
    sub_1004CBA30(&qword_1013F67D0, &qword_1013F67A0, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F67C8);
  }
  return result;
}

unint64_t sub_10087EBA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F6800;
  if (!qword_1013F6800)
  {
    v1 = sub_1004CB6A4(&qword_1013F6778);
    sub_10087EC2C();
    sub_1004CBA30(&qword_1013F6820, &qword_1013F6828, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F6800);
  }
  return result;
}

unint64_t sub_10087EC2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F6808;
  if (!qword_1013F6808)
  {
    v1 = sub_1004CB6A4(&qword_1013F6768);
    sub_10087EC98();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F6808);
  }
  return result;
}

unint64_t sub_10087EC98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F6810;
  if (!qword_1013F6810)
  {
    v1 = sub_1004CB6A4(&qword_1013F6760);
    sub_1004CBA30(&qword_1013F6818, &qword_1013F6758, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F6810);
  }
  return result;
}

uint64_t sub_10087ED1C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 40);
  *(_QWORD *)(v0 + 40) = 0;
  sub_1004CB49C(v1);
  swift_bridgeObjectRelease();
  swift_unknownObjectUnownedDestroy(v0 + 24, v2);

  sub_1004CB49C(*(id *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t _s12DataArchiverCMa()
{
  return objc_opt_self(_TtCC8Freeform17CRLStencilLibrary12DataArchiver);
}

int64x2_t sub_10087ED94()
{
  int64x2_t result;

  result = vdupq_n_s64(0x407F400000000000uLL);
  xmmword_10147FA80 = (__int128)result;
  return result;
}

uint64_t sub_10087EDAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[6];
  if (v1)
  {
    v2 = v0[6];
  }
  else
  {
    v2 = sub_10087EE0C((uint64_t)v0, *v0);
    v3 = v0[6];
    v0[6] = v2;
    swift_retain(v2);
    swift_release(v3);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_10087EE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *Strong;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v15;

  v4 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DCAD0 != -1)
    swift_once(&qword_1013DCAD0, sub_10058E1DC);
  v7 = (void *)qword_10147EA40;
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a1 + 24);
  v9 = *(id *)&Strong[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];

  v10 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasImager), "initWithBoard:", v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject(&unk_101283888, 64, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v10;
  v12[5] = a1;
  v12[6] = v7;
  v12[7] = a2;
  swift_retain(a1);
  v13 = v7;
  return sub_100618A94((uint64_t)v6, (uint64_t)&unk_1013F6998, (uint64_t)v12);
}

uint64_t sub_10087EF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[5] = a5;
  v6[6] = a6;
  v6[3] = a1;
  v6[4] = a4;
  return swift_task_switch(sub_10087EF78, 0, 0);
}

uint64_t sub_10087EF78()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  __n128 v3;
  uint64_t v4;
  void *v5;
  Class isa;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  swift_bridgeObjectRetain(*(_QWORD *)(v0[5] + 16));
  v2 = (unint64_t)sub_1005FF994(v1);
  swift_bridgeObjectRelease();
  v3 = swift_bridgeObjectRetain(v2);
  if ((v2 & 0x8000000000000000) != 0 || (v2 & 0x4000000000000000) != 0)
  {
    v12 = sub_1004B804C(&qword_1013E0670);
    _bridgeCocoaArray<A>(_:)(v2, v12);
    swift_release(v2);
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v3);
  }
  v4 = v0[6];
  v5 = (void *)v0[4];
  swift_release(v2);
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "setInfos:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v5, "setBackgroundColor:", v4);
  if (qword_1013DD350 != -1)
    swift_once(&qword_1013DD350, sub_10087ED94);
  v7 = (void *)v0[4];
  objc_msgSend(v7, "setScaledImageSize:", xmmword_10147FA80);
  v8 = swift_task_alloc(32);
  v0[7] = v8;
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = 0;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[8] = v9;
  v10 = sub_1004B804C(&qword_1013E4648);
  *v9 = v0;
  v9[1] = sub_10087F12C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000019, 0x8000000100FB54D0, sub_10059E44C, v8, v10);
}

uint64_t sub_10087F12C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10087F188, 0, 0);
}

uint64_t sub_10087F188()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE *v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    **(_QWORD **)(v0 + 24) = v1;
  }
  else
  {
    v2 = sub_10087F2B8();
    swift_allocError(&_s12DataArchiverC24StencilDataArchiverErrorON, v2, 0, 0);
    *v3 = 2;
    swift_willThrow(v4);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10087F204()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10087F240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_1013F6994);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1004CF80C;
  *(_QWORD *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 24) = a1;
  return swift_task_switch(sub_10087EF78, 0, 0);
}

unint64_t sub_10087F2B8()
{
  unint64_t result;

  result = qword_1013F69A0;
  if (!qword_1013F69A0)
  {
    result = swift_getWitnessTable(&unk_100F11B14, &_s12DataArchiverC24StencilDataArchiverErrorON);
    atomic_store(result, (unint64_t *)&qword_1013F69A0);
  }
  return result;
}

uint64_t _s12DataArchiverC24StencilDataArchiverErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10087F348 + 4 * byte_100F11A45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10087F37C + 4 * byte_100F11A40[v4]))();
}

uint64_t sub_10087F37C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10087F384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10087F38CLL);
  return result;
}

uint64_t sub_10087F398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10087F3A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10087F3A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10087F3AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s12DataArchiverC24StencilDataArchiverErrorOMa()
{
  return &_s12DataArchiverC24StencilDataArchiverErrorON;
}

unint64_t sub_10087F3CC()
{
  unint64_t result;

  result = qword_1013F69A8;
  if (!qword_1013F69A8)
  {
    result = swift_getWitnessTable(&unk_100F11AEC, &_s12DataArchiverC24StencilDataArchiverErrorON);
    atomic_store(result, (unint64_t *)&qword_1013F69A8);
  }
  return result;
}

id sub_10087F448(uint64_t a1, char a2)
{
  objc_class *v2;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_locked] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_10087F6C0(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  CKRecordID v12;
  Swift::String v13;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (v9)
  {
    v10 = v9;
    sub_100DBEE64((uint64_t)v10, (uint64_t)&off_10127C5E0);

    if (v4)
    {

    }
    else
    {
      (*(void (**)(_QWORD))((swift_isaMask & *v10) + 0x100))(*(unsigned __int8 *)(v5
                                                                                             + OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_locked));
      v11 = v10;
      sub_100DB0D78((uint64_t)v11, (uint64_t)&off_10127C5E0, a3);

    }
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLocked.swift", 91, 2, 27, "Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLocked.swift", 91, 2u, 27, (uint64_t)"Unable to retrieve board item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
}

uint64_t sub_10087F8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_id;
  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_10087F910()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetLocked(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10087F980()
{
  return type metadata accessor for CRLCommandSetLocked(0);
}

uint64_t type metadata accessor for CRLCommandSetLocked(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F69D8;
  if (!qword_1013F69D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetLocked);
  return result;
}

uint64_t sub_10087F9C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F11B78;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_10087FA3C()
{
  unint64_t result;

  result = qword_1013F69E8;
  if (!qword_1013F69E8)
  {
    result = swift_getWitnessTable(&unk_100F11CB0, &type metadata for CRLOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F69E8);
  }
  return result;
}

unint64_t sub_10087FA84()
{
  unint64_t result;

  result = qword_1013F69F0;
  if (!qword_1013F69F0)
  {
    result = swift_getWitnessTable(&unk_100F11CD8, &type metadata for CRLOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F69F0);
  }
  return result;
}

unint64_t sub_10087FACC()
{
  unint64_t result;

  result = qword_1013F69F8;
  if (!qword_1013F69F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Never, &type metadata for Never);
    atomic_store(result, (unint64_t *)&qword_1013F69F8);
  }
  return result;
}

uint64_t sub_10087FB10(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101128340, 1);
}

uint64_t sub_10087FB20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10087FB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147FAA0);
  sub_1004F2A1C(v10, (uint64_t)qword_10147FAA0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x616F42206E65704FLL, 0xEA00000000006472);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_10087FCD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DD358 != -1)
    swift_once(&qword_1013DD358, sub_10087FB48);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147FAA0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10087FD44(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008806E0();
  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_10087FD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  const void *v15;

  v4 = sub_1004B804C(&qword_1013F6A30);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013F6A38);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, a1, a2);
  v10._countAndFlagsBits = 0x206E65704FLL;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath("X%S", v15);
  v12 = sub_1004B804C(&qword_1013EB728);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E497070414C5243, 0xED000073746E6574, a1, a2);
}

uint64_t sub_10087FEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to _URLRepresentableIntent<>.perform()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1008806E0();
  v7 = sub_100880764();
  v8 = sub_100880724(&qword_1013EDDA8, (uint64_t)&unk_100F0637C);
  *v5 = v2;
  v5[1] = sub_10087FF78;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_10087FF78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(*v1 + 16);
  v3 = *v1;
  result = swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  return result;
}

uint64_t sub_10087FFD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100880218();
  *a1 = result;
  return result;
}

unint64_t sub_10087FFFC()
{
  unint64_t result;

  result = qword_1013F6A08;
  if (!qword_1013F6A08)
  {
    result = swift_getWitnessTable(&unk_100F11CF4, &type metadata for CRLOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F6A08);
  }
  return result;
}

uint64_t sub_100880040()
{
  return sub_100880724(&qword_1013EDC60, (uint64_t)&unk_100F063E4);
}

uint64_t sub_100880064(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for CRLBoardEntity(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005112BC(a1, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_1005761B8(a1);
}

void (*sub_1008800E0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100501800;
}

uint64_t sub_10088012C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;

  v4 = sub_1008806E0();
  v5 = sub_100880724(&qword_1013EDDA8, (uint64_t)&unk_100F0637C);
  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100880190(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1005761F4();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLOpenBoardIntent()
{
  return &type metadata for CRLOpenBoardIntent;
}

unint64_t sub_1008801CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F6A10;
  if (!qword_1013F6A10)
  {
    v1 = sub_1004CB6A4(&qword_1013F6A18);
    result = swift_getWitnessTable(&protocol conformance descriptor for IntentParameterSummary<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F6A10);
  }
  return result;
}

uint64_t sub_100880218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v48 = *(_QWORD *)(v0 - 8);
  v49 = v0;
  __chkstk_darwin(v0);
  v47 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v46 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v45 = (char *)&v41 - v5;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v8);
  v41 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v42 = (char *)&v41 - v25;
  v43 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v28(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0x6E497070414C5243, 0xED000073746E6574, v16, v13, "Parameter title for a board", 27, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0x6F74206472616F42, 0xED00006E65706F20);
  static Locale.current.getter(v29);
  v28(v13, v27, v10);
  v30 = v41;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0x6E497070414C5243, 0xED000073746E6574, v16, v13, "Parameter description for a board", 33, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v30, 0, 1, v20);
  v31 = type metadata accessor for CRLBoardEntity(0);
  v32 = v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v44, 1, 1, v31);
  v33 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v33);
  v28(v13, v27, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0x6E497070414C5243, 0xED000073746E6574, v16, v13, "Prompt for selecting a board from the list", 42, 2);
  v34 = v45;
  IntentDialog.init(_:)(v23);
  v35 = type metadata accessor for IntentDialog(0);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v36(v34, 0, 1, v35);
  v37 = v46;
  v36(v46, 1, 1, v35);
  v38 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, enum case for InputConnectionBehavior.default(_:), v49);
  v39 = sub_100880724((unint64_t *)&qword_1013E1138, (uint64_t)&unk_100F062EC);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v42, v30, v32, v34, v37, v38, v39);
}

unint64_t sub_1008806E0()
{
  unint64_t result;

  result = qword_1013F6A20;
  if (!qword_1013F6A20)
  {
    result = swift_getWitnessTable(&unk_100F11C20, &type metadata for CRLOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F6A20);
  }
  return result;
}

uint64_t sub_100880724(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CRLBoardEntity(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100880764()
{
  unint64_t result;

  result = qword_1013F6A28;
  if (!qword_1013F6A28)
  {
    result = swift_getWitnessTable(&unk_100F11C70, &type metadata for CRLOpenBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F6A28);
  }
  return result;
}

uint64_t sub_1008807A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_1008807D0(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t j;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41[3];

  v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (unsigned __int8 *)&v36 - v7;
  sub_10068FB24((uint64_t)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)&v36 - v7);
  if (swift_getEnumCaseMultiPayload(v8, v3))
  {
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v9 = sub_1004B804C(&qword_1013E1798);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
    return;
  }
  v10 = *v8;
  v11 = sub_1004B804C(&qword_1013E1798);
  v12 = swift_allocBox();
  v14 = v13;
  v15 = sub_100880F74();
  NSDiffableDataSourceSectionSnapshot.init()(v3, v15);
  if (!v10)
  {
    v39 = v12;
    v40 = v11;
    v16 = objc_msgSend(v1, "children");
    v17 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

    v41[0] = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v28 = v18;
      else
        v28 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v18);
      v19 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v18);
      if (v19)
      {
LABEL_7:
        v37 = v14;
        v38 = a1;
        if (v19 < 1)
        {
          __break(1u);
          goto LABEL_37;
        }
        for (i = 0; i != v19; ++i)
        {
          if ((v18 & 0xC000000000000001) != 0)
            v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v18);
          else
            v22 = *(id *)(v18 + 8 * i + 32);
          v23 = v22;
          sub_10068FB24((uint64_t)v22 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v6);
          if (swift_getEnumCaseMultiPayload(v6, v3) == 2)
          {
            v21 = sub_1004B804C((uint64_t *)&unk_1013EA630);
            swift_bridgeObjectRelease(*(_QWORD *)&v6[*(int *)(v21 + 48) + 8]);
            sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);

          }
          else
          {
            v24 = sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
            v25 = *(_QWORD *)(v41[0] + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
            v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
            specialized ContiguousArray._endMutation()(v26);
          }
        }
        swift_bridgeObjectRelease(v18);
        v27 = v41[0];
        v14 = v37;
        a1 = v38;
        v12 = v39;
        v11 = v40;
        if ((v41[0] & 0x8000000000000000) != 0)
          goto LABEL_32;
LABEL_23:
        if ((v27 & 0x4000000000000000) == 0)
        {
          v29 = *(_QWORD *)(v27 + 16);
          if (!v29)
          {
LABEL_33:
            swift_release(v27);
            goto LABEL_34;
          }
          goto LABEL_25;
        }
LABEL_32:
        swift_bridgeObjectRetain(v27);
        v29 = _CocoaArrayWrapper.endIndex.getter(v34);
        swift_release(v27);
        if (!v29)
          goto LABEL_33;
LABEL_25:
        if (v29 >= 1)
        {
          v30 = v14;
          for (j = 0; j != v29; ++j)
          {
            if ((v27 & 0xC000000000000001) != 0)
              v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v27);
            else
              v32 = *(id *)(v27 + 8 * j + 32);
            v33 = v32;
            sub_100880BA8(v32, 0, v12);

          }
          swift_release(v27);
          v14 = v30;
          goto LABEL_34;
        }
LABEL_37:
        __break(1u);
        return;
      }
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v19)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease(v18);
    v27 = (unint64_t)_swiftEmptyArrayStorage;
    v12 = v39;
    v11 = v40;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_32;
    goto LABEL_23;
  }
  sub_100880BA8(v1, 0, v12);
LABEL_34:
  swift_beginAccess(v14, v41, 0, 0);
  v35 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(a1, v14, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v11);
  swift_release(v12);
}

void sub_100880BA8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t j;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _QWORD v43[3];

  v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_1013E3830);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E1798);
  v41 = a3;
  v14 = swift_projectBox(a3);
  v15 = sub_1004B804C(&qword_1014072D0);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = swift_allocObject(v15, v17 + *(_QWORD *)(v7 + 72), v16 | 7);
  *(_OWORD *)(v18 + 16) = xmmword_100EF5E40;
  v42 = a1;
  sub_10068FB24((uint64_t)a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v18 + v17);
  if (a2)
  {
    sub_10068FB24(a2 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v12);
    v19 = 0;
  }
  else
  {
    v19 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, v19, 1, v6);
  swift_beginAccess(v14, v43, 33, 0);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)(v18, v12, v13);
  swift_endAccess(v43);
  swift_bridgeObjectRelease(v18);
  sub_1006F00F4((uint64_t)v12);
  v20 = v42;
  v21 = objc_msgSend(v42, "children");
  v22 = type metadata accessor for CRLBoardLibraryViewModelItemNode(0);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  v43[0] = _swiftEmptyArrayStorage;
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v38 = v23;
    else
      v38 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v23);
    v24 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v23);
  }
  else
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v24)
  {
    if (v24 < 1)
    {
      __break(1u);
      goto LABEL_34;
    }
    for (i = 0; i != v24; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0)
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
      else
        v27 = *(id *)(v23 + 8 * i + 32);
      v28 = v27;
      sub_10068FB24((uint64_t)v27 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v9);
      if (swift_getEnumCaseMultiPayload(v9, v6) == 2)
      {
        v26 = sub_1004B804C((uint64_t *)&unk_1013EA630);
        swift_bridgeObjectRelease(*(_QWORD *)&v9[*(int *)(v26 + 48) + 8]);
        sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);

      }
      else
      {
        v29 = sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
        v30 = *(_QWORD *)(v43[0] + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v30);
        v31 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v28);
        specialized ContiguousArray._endMutation()(v31);
      }
    }
    swift_bridgeObjectRelease(v23);
    v20 = v42;
    v32 = v43[0];
    v33 = v41;
    if ((v43[0] & 0x8000000000000000) != 0)
      goto LABEL_31;
  }
  else
  {
    swift_bridgeObjectRelease(v23);
    v32 = (unint64_t)_swiftEmptyArrayStorage;
    v33 = v41;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_31;
  }
  if ((v32 & 0x4000000000000000) == 0)
  {
    v34 = *(_QWORD *)(v32 + 16);
    if (!v34)
    {
LABEL_32:
      swift_release(v32);
      return;
    }
    goto LABEL_21;
  }
LABEL_31:
  swift_bridgeObjectRetain(v32);
  v34 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_release(v32);
  if (!v34)
    goto LABEL_32;
LABEL_21:
  if (v34 >= 1)
  {
    for (j = 0; j != v34; ++j)
    {
      if ((v32 & 0xC000000000000001) != 0)
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v32);
      else
        v36 = *(id *)(v32 + 8 * j + 32);
      v37 = v36;
      sub_100880BA8(v36, v20, v33);

    }
    goto LABEL_32;
  }
LABEL_34:
  __break(1u);
}

unint64_t sub_100880F74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101407360;
  if (!qword_101407360)
  {
    v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(255);
    result = swift_getWitnessTable(&unk_100F2A520, v1);
    atomic_store(result, (unint64_t *)&qword_101407360);
  }
  return result;
}

void sub_100880FBC(char a1)
{
  sub_100880FF4(a1, (uint64_t)&unk_101283CA0, (uint64_t)sub_10088462C, (uint64_t)&unk_101283CB8);
}

void sub_100880FD8(char a1)
{
  sub_100880FF4(a1, (uint64_t)&unk_101283C50, (uint64_t)sub_10088462C, (uint64_t)&unk_101283C68);
}

void sub_100880FF4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  double v33;
  double v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;

  v41 = a3;
  v7 = v4;
  v9 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v19 = (char *)&v40 - v18;
  v20 = objc_msgSend(v7, "manager", v17);
  if (v20)
  {
    v21 = v20;
    v40 = a4;
    v22 = objc_msgSend(v7, "hideTimer");
    objc_msgSend(v22, "invalidate");

    objc_msgSend(v7, "setHideTimer:", 0);
    if ((objc_msgSend(v7, "hiding") & 1) != 0)
    {
      swift_unknownObjectRelease(v21);
      return;
    }
    if ((a1 & 1) == 0)
    {
      v25 = objc_msgSend(v7, "timeStartedShowing");
      if (v25)
      {
        v26 = v25;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v25);

        v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v27(v11, v15, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
        {
          v28 = ((uint64_t (*)(char *, char *, uint64_t))v27)(v19, v11, v12);
          v29 = fabs(Date.timeIntervalSinceNow.getter(v28));
          objc_msgSend(v7, "minimumShowDuration");
          if (v29 >= v30 || (objc_msgSend(v7, "minimumShowDuration"), v31 - v29 <= 0.0))
          {
            objc_msgSend(v21, "hideWithHudController:", v7);
            objc_msgSend(v7, "setHiding:", 1);
            swift_unknownObjectRelease(v21);
          }
          else
          {
            v32 = (void *)objc_opt_self(NSTimer);
            objc_msgSend(v7, "timeLeftToShow");
            v34 = v33;
            v35 = swift_allocObject(a2, 32, 7);
            *(_QWORD *)(v35 + 16) = v21;
            *(_QWORD *)(v35 + 24) = v7;
            aBlock[4] = v41;
            v43 = v35;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = *(_QWORD *)"";
            aBlock[2] = sub_1004C6194;
            aBlock[3] = v40;
            v36 = _Block_copy(aBlock);
            v37 = v43;
            swift_unknownObjectRetain(v21);
            v38 = v7;
            swift_release(v37);
            v39 = objc_msgSend(v32, "scheduledTimerWithTimeInterval:repeats:block:", 0, v36, v34);
            _Block_release(v36);
            objc_msgSend(v38, "setHideTimer:", v39);
            swift_unknownObjectRelease(v21);

          }
          (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }
      sub_1004CB800((uint64_t)v11, &qword_1013E04F0);
    }
    objc_msgSend(v21, "hideWithHudController:", v7);
    objc_msgSend(v7, "setHiding:", 1);
    swift_unknownObjectRelease(v21);
    return;
  }
  if ((objc_msgSend(v7, "showing") & 1) != 0)
  {
    if (qword_1013DD6E8 != -1)
      swift_once(&qword_1013DD6E8, sub_100A01318);
    swift_beginAccess(&static OS_os_log.crlStatusHUD, aBlock, 0, 0);
    v23 = (id)static OS_os_log.crlStatusHUD;
    v24 = static os_log_type_t.error.getter(v23);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v24, "Trying to hide while showing without a manager", 46, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
}

id sub_100881454(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  id v29;
  uint64_t v31;
  uint64_t v32;

  v8 = v7;
  v16 = a1[3];
  v17 = sub_1004BB5A4(a1, v16);
  v19 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
  v20 = a4[3];
  if (v20)
  {
    v21 = sub_1004BB5A4(a4, a4[3]);
    v31 = a5;
    v32 = a2;
    v22 = a3;
    v23 = *(_QWORD *)(v20 - 8);
    v24 = __chkstk_darwin(v21);
    v26 = (char *)&v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v23 + 16))(v26, v24);
    v27 = _bridgeAnythingToObjectiveC<A>(_:)(v26, v20);
    v28 = *(void (**)(char *, uint64_t))(v23 + 8);
    a3 = v22;
    v28(v26, v20);
    a5 = v31;
    a2 = v32;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a4);
  }
  else
  {
    v27 = 0;
  }
  v29 = objc_msgSend((id)swift_getObjCClassFromMetadata(v8, v18), "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v19, a2, a3, v27, a5, a6, a7);
  swift_unknownObjectRelease(v19);
  swift_unknownObjectRelease(v27);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v29;
}

uint64_t sub_10088192C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v13[24];

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing, v13, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)v4, &qword_1013E04F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1004CB800((uint64_t)v4, &qword_1013E04F0);
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  fabs(Date.timeIntervalSinceNow.getter(v11));
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100881B28()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  BOOL v21;
  double v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  id v28;
  void *v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = __chkstk_darwin(v9).n128_u64[0];
  v12 = (char *)aBlock - v11;
  if (v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_showing] == 1
    && v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_shouldAutoHide] == 1)
  {
    v13 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer], "invalidate", v10);
    v14 = *(void **)&v1[v13];
    *(_QWORD *)&v1[v13] = 0;

    Date.init()(v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    v16 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing];
    swift_beginAccess(&v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing], aBlock, 33, 0);
    sub_10056AFBC((uint64_t)v12, v16);
    swift_endAccess(aBlock);
    sub_1004CB7BC(v16, (uint64_t)v8, &qword_1013E04F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    {
      sub_1004CB800((uint64_t)v8, &qword_1013E04F0);
      v17 = 0.0;
    }
    else
    {
      v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v19 = fabs(Date.timeIntervalSinceNow.getter(v18));
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v20 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_maximumShowDuration];
      v21 = v19 < v20;
      v22 = v20 - v19;
      if (v21)
        v17 = v22;
      else
        v17 = 0.0;
    }
    v23 = (void *)objc_opt_self(NSTimer);
    v24 = swift_allocObject(&unk_101283C00, 24, 7);
    *(_QWORD *)(v24 + 16) = v1;
    aBlock[4] = sub_1008845F0;
    v31 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1004C6194;
    aBlock[3] = &unk_101283C18;
    v25 = _Block_copy(aBlock);
    v26 = v31;
    v27 = v1;
    swift_release(v26);
    v28 = objc_msgSend(v23, "scheduledTimerWithTimeInterval:repeats:block:", 0, v25, v17);
    _Block_release(v25);
    v29 = *(void **)&v1[v13];
    *(_QWORD *)&v1[v13] = v28;

  }
}

void sub_100881DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  sub_100880FF4(0, (uint64_t)&unk_101283B68, (uint64_t)sub_1008841BC, (uint64_t)&unk_101283B80);
  v3 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer), "invalidate");
  v4 = *(void **)(a2 + v3);
  *(_QWORD *)(a2 + v3) = 0;

}

id sub_100882074()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor);
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant), "collaboratorColorForType:", 2);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1008820F0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  NSString *v13;
  id v14;
  NSString *v15;
  id v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  id v21;
  NSString v22;
  Class isa;
  id v24;
  uint64_t v26;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "whiteColor");
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 13.0, UIFontWeightMedium);
  if (objc_msgSend((id)objc_opt_self(CRLAccessibility), "isIncreaseContrastEnabled"))
  {
    v3 = sub_100882074();
    v4 = objc_msgSend(v3, "UIColor");

    v5 = objc_msgSend(v4, "CGColor");
    v6 = objc_msgSend(objc_allocWithZone((Class)CRLColor), "initWithCGColor:", v5);

    objc_msgSend(v6, "brightnessComponent");
    v8 = v7;

    if (v8 > 0.5)
    {
      v9 = objc_msgSend(v0, "blackColor");

      v1 = v9;
    }
  }
  v10 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v10, &v26);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v12 = sub_1004B8930(0, (unint64_t *)&qword_101401710, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 104) = sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v1;
  v13 = NSFontAttributeName;
  v14 = v2;
  v15 = NSForegroundColorAttributeName;
  v16 = v1;
  sub_1008D4FE0(inited);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, v19, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v21 = objc_allocWithZone((Class)NSAttributedString);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v21, "initWithString:attributes:", v22, isa, swift_bridgeObjectRelease().n128_f64[0]);

  return v24;
}

id sub_100882430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(_BYTE *, _QWORD);
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  char *v39;
  uint64_t v40;
  void (*v41)(_BYTE *, _QWORD);
  char *v42;
  id v43;
  NSString v44;
  id v45;
  id v46;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[32];

  v1 = v0;
  v2 = sub_1004B804C((uint64_t *)&unk_1013F4240);
  __chkstk_darwin(v2);
  v48 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013F6AE0);
  __chkstk_darwin(v4);
  v49 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013DFBD0);
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIButton.Configuration(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v48 - v18;
  static UIButton.Configuration.tinted()(v17);
  v20 = v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString);
  v22 = *(_QWORD *)(v20 + 8);
  v23 = swift_bridgeObjectRetain(v22);
  v50 = v21;
  UIButton.Configuration.title.setter(v21, v22, v23);
  v24 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v52);
  UIBackgroundConfiguration.cornerRadius.setter(12.0);
  v24(v52, 0);
  v25 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v25, "whiteColor"));
  UIConfigurationTextAttributesTransformer.init(_:)(sub_10088294C, 0);
  v26 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 0, 1, v26);
  UIButton.Configuration.titleTextAttributesTransformer.setter(v11);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v27 = swift_allocObject(&unk_101283AF0, 24, 7);
  v51 = v1;
  swift_unknownObjectWeakInit(v27 + 16);
  v28 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10088419C, v27);
  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v19, v12);
  v29 = v28;
  v30 = (void *)UIButton.init(configuration:primaryAction:)(v15, v28);
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = objc_msgSend(v25, "blackColor");
  v32 = (char *)objc_msgSend(v31, "colorWithAlphaComponent:", 0.3);

  UIButton.configuration.getter(v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
  {
    v34 = (uint64_t)v49;
    sub_1004CB7BC((uint64_t)v8, (uint64_t)v49, &qword_1013F6AE0);
    UIButton.configuration.setter(v34);
    sub_1004CB800((uint64_t)v8, &qword_1013F6AE0);
  }
  else
  {
    v35 = swift_allocObject(&unk_101283B18, 24, 7);
    swift_unknownObjectWeakInit(v35 + 16);
    v36 = swift_allocObject(&unk_101283B40, 32, 7);
    *(_QWORD *)(v36 + 16) = v35;
    *(_QWORD *)(v36 + 24) = v32;
    v37 = v32;
    v49 = v32;
    v38 = v29;
    v39 = v48;
    UIConfigurationColorTransformer.init(_:)(sub_1007F1C90, v36);
    v40 = type metadata accessor for UIConfigurationColorTransformer(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
    v41 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.background.modify(v52);
    v42 = v39;
    v29 = v38;
    v32 = v49;
    UIBackgroundConfiguration.backgroundColorTransformer.setter(v42);
    v41(v52, 0);
    UIButton.configuration.setter(v8);
  }
  objc_msgSend(v30, "setShowsLargeContentViewer:", 1);
  v43 = v30;
  v44 = String._bridgeToObjectiveC()();
  objc_msgSend(v43, "setLargeContentTitle:", v44);

  v45 = objc_allocWithZone((Class)UILargeContentViewerInteraction);
  v46 = objc_msgSend(v45, "initWithDelegate:", v51);
  objc_msgSend(v43, "addInteraction:", v46);

  (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  return v43;
}

uint64_t sub_10088294C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t KeyPath;
  id v9;

  v4 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  KeyPath = swift_getKeyPath("p$S");
  v5 = swift_getKeyPath(byte_100F11E58, &KeyPath);
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 11.0, UIFontWeightBold);
  v6 = sub_1004CB548();
  return AttributeContainer.subscript.setter(&v9, v5, v6);
}

void sub_100882A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  _BYTE *v4;
  void (*v5)(__n128);
  uint64_t v6;
  __n128 v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    v5 = *(void (**)(__n128))(Strong
                                       + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler + 8);
      v7 = swift_retain(v6);
      v5(v7);
      sub_1004C1024((uint64_t)v5, v6);
    }
    if (v4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideOnTouch] == 1)
      sub_100880FF4(1, (uint64_t)&unk_101283B68, (uint64_t)sub_1008841BC, (uint64_t)&unk_101283B80);

  }
}

void sub_100882ABC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  Class isa;
  id v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  NSString v33;
  uint64_t v34;
  id v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  NSString v47;
  double v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  id v75;
  id v76;
  void *v77;
  double v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  uint64_t v86;
  char *v87;
  id v88;
  id v89;
  _OWORD v90[2];
  _QWORD v91[5];

  v1 = v0;
  v87 = (char *)OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView;
  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView), "subviews"));
  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v9 = v4;
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v5)
      goto LABEL_13;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v5)
      goto LABEL_13;
  }
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v7 = *(id *)(v4 + 8 * i + 32);
    v8 = v7;
    objc_msgSend(v7, "removeFromSuperview");

  }
LABEL_13:
  v86 = v3;
  swift_bridgeObjectRelease_n(v4, 2);
  v10 = objc_msgSend(objc_allocWithZone((Class)CNAvatarViewController), "init");
  v11 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant)
                 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  if (v11)
  {
    v12 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v13 + 32) = v11;
    v91[0] = v13;
    specialized Array._endMutation()(v13);
    sub_1004B8930(0, (unint64_t *)&qword_1013E8EB0, CNContact_ptr);
    v14 = v11;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "setContacts:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
  v16 = objc_msgSend(v10, "view");
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = v87;
  objc_msgSend(*(id *)&v87[v1], "addSubview:", v16);
  v18 = objc_msgSend(v16, "leadingAnchor");
  v19 = objc_msgSend(*(id *)&v87[v1], "leadingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, 8.0);

  objc_msgSend(v20, "setActive:", 1);
  v21 = objc_msgSend(v16, "widthAnchor");
  v22 = objc_msgSend(v21, "constraintEqualToConstant:", 26.0);

  objc_msgSend(v22, "setActive:", 1);
  v23 = objc_msgSend(v16, "heightAnchor");
  v24 = objc_msgSend(v23, "constraintEqualToConstant:", 26.0);

  objc_msgSend(v24, "setActive:", 1);
  v25 = objc_msgSend(v16, "centerYAnchor");
  v26 = objc_msgSend(*(id *)&v87[v1], "centerYAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  objc_msgSend(v27, "setActive:", 1);
  v28 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v28, "setAlignment:", 3);
  objc_msgSend(v28, "setAxis:", 1);
  objc_msgSend(v28, "setDistribution:", 1);
  objc_msgSend(v28, "setSpacing:", 3.0);
  objc_msgSend(v28, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v87[v1], "addSubview:", v28);
  v29 = sub_100883870();
  objc_msgSend(v29, "setNumberOfLines:", 2);
  v30 = sub_1008820F0();
  if (v30)
  {
    v31 = v30;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientRefollowHUDController.swift", 108, 2, 259, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v17 = v87;
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientRefollowHUDController.swift", 108, 2u, 259, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v32 = objc_allocWithZone((Class)NSAttributedString);
    v33 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v32, "initWithString:", v33);

  }
  v89 = v31;
  objc_msgSend(v29, "setAttributedText:", v31);
  v34 = qword_1013DD608;
  v35 = v29;
  if (v34 != -1)
    swift_once(&qword_1013DD608, sub_10099AE2C);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setAccessibilityHint:", v36);

  v37 = objc_msgSend(v28, "leadingAnchor");
  v38 = objc_msgSend(v16, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, 8.0);

  objc_msgSend(v39, "setActive:", 1);
  v40 = objc_msgSend(v28, "heightAnchor");
  v41 = objc_msgSend(v40, "constraintEqualToConstant:", 24.0);

  objc_msgSend(v41, "setActive:", 1);
  v42 = v35;
  v43 = objc_msgSend(v28, "centerYAnchor");
  v44 = objc_msgSend(*(id *)&v17[v1], "centerYAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

  objc_msgSend(v45, "setActive:", 1);
  objc_msgSend(v28, "setShowsLargeContentViewer:", 1);
  v46 = v28;
  v47 = objc_msgSend(v89, "string");
  v85 = v16;
  if (!v47)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v47 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v48 = swift_bridgeObjectRelease().n128_u64[0];
  }
  objc_msgSend(v46, "setLargeContentTitle:", v47, v48);

  v49 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v1);
  objc_msgSend(v46, "addInteraction:", v49);

  v84 = v42;
  objc_msgSend(v46, "addArrangedSubview:", v42);
  objc_msgSend(v42, "setTextAlignment:", 0);
  v50 = sub_100882430();
  objc_msgSend(*(id *)&v17[v1], "addSubview:", v50);
  v51 = objc_msgSend(v50, "leadingAnchor");
  v52 = objc_msgSend(v46, "trailingAnchor");
  v53 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v52, 8.0);

  objc_msgSend(v53, "setActive:", 1);
  v54 = objc_msgSend(v50, "trailingAnchor");
  v55 = objc_msgSend(*(id *)&v17[v1], "trailingAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, -8.0);

  objc_msgSend(v56, "setActive:", 1);
  v57 = objc_msgSend(v50, "heightAnchor");
  v58 = objc_msgSend(v57, "constraintEqualToConstant:", 24.0);

  objc_msgSend(v58, "setActive:", 1);
  v59 = objc_msgSend(v50, "centerYAnchor");
  v60 = objc_msgSend(*(id *)&v17[v1], "centerYAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  objc_msgSend(v61, "setActive:", 1);
  v62 = objc_msgSend(*(id *)&v17[v1], "leadingAnchor");
  v63 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView;
  v64 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView), "leadingAnchor");
  v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);

  objc_msgSend(v65, "setActive:", 1);
  v66 = objc_msgSend(*(id *)&v17[v1], "heightAnchor");
  v67 = objc_msgSend(v66, "constraintEqualToConstant:", 40.0);

  objc_msgSend(v67, "setActive:", 1);
  v68 = objc_msgSend(*(id *)&v17[v1], "topAnchor");
  v69 = objc_msgSend(*(id *)(v1 + v63), "topAnchor");
  v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

  objc_msgSend(v70, "setActive:", 1);
  v71 = objc_msgSend(*(id *)&v17[v1], "trailingAnchor");
  v72 = objc_msgSend(*(id *)(v1 + v63), "trailingAnchor");
  v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

  objc_msgSend(v73, "setActive:", 1);
  v74 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height) = 0x404C000000000000;
  v75 = objc_msgSend(*(id *)(v1 + v63), "heightAnchor");
  v76 = objc_msgSend(v75, "constraintEqualToConstant:", *(double *)(v1 + v74));

  objc_msgSend(v76, "setActive:", 1);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  v77 = *(void **)(v1 + v63);
  v91[3] = v86;
  v91[0] = v77;
  memset(v90, 0, sizeof(v90));
  v78 = *(double *)(v1 + v74);
  v79 = v77;
  v80 = sub_100881454(v91, 8, 0, v90, 8, 1.0, v78);
  v81 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint) = v80;

  v82 = objc_msgSend(*(id *)&v17[v1], "layer");
  objc_msgSend(v82, "setMasksToBounds:", 0);

  v83 = objc_msgSend(*(id *)&v17[v1], "layer");
  objc_msgSend(v83, "setCornerCurve:", kCACornerCurveContinuous);

  v88 = objc_msgSend(*(id *)&v17[v1], "layer");
  objc_msgSend(v88, "setCornerRadius:", 20.0);

}

id sub_100883870()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label);
  }
  else
  {
    v4 = sub_100884084();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1008839C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTransientRefollowHUDController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100883B24()
{
  return type metadata accessor for CRLTransientRefollowHUDController(0);
}

uint64_t type metadata accessor for CRLTransientRefollowHUDController(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6AD0;
  if (!qword_1013F6AD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLTransientRefollowHUDController);
  return result;
}

void sub_100883B68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[29];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  v4[4] = "\b";
  v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[6] = "\b";
  v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10056ACC0(319);
  if (v3 <= 0x3F)
  {
    v4[9] = *(_QWORD *)(v2 - 8) + 64;
    v4[10] = &unk_100F11DB0;
    v4[11] = &unk_100F11DC8;
    v4[12] = &unk_100F11DC8;
    v4[13] = &unk_100F11DC8;
    v4[14] = &unk_100F11DC8;
    v4[15] = &unk_100F11DE0;
    v4[16] = &unk_100F11DC8;
    v4[17] = &unk_100F11DB0;
    v4[18] = &unk_100F11DC8;
    v4[19] = &unk_100F11DC8;
    v4[20] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[21] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[22] = &unk_100F11DB0;
    v4[23] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[24] = &unk_100F11DE0;
    v4[25] = &unk_100F11DF8;
    v4[26] = &unk_100F11DB0;
    v4[27] = &unk_100F11E10;
    v4[28] = &unk_100F11DB0;
    swift_updateClassMetadata2(a1, 256, 29, v4, a1 + 80);
  }
}

char *sub_100883D64(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, double a7)
{
  char *v14;
  char *v15;
  uint64_t ObjectType;
  double *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v14 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLTransientRefollowHUDController(0));
  v15 = (char *)sub_100884250(a1, a2, a3, v14);
  ObjectType = swift_getObjectType(a6);
  swift_deallocPartialClassInstance(a6, ObjectType, *(unsigned int *)((swift_isaMask & *a6) + 0x30), *(unsigned __int16 *)((swift_isaMask & *a6) + 0x34));
  v17 = (double *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  *v17 = a7;
  *((_BYTE *)v17 + 8) = 0;
  v18 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  v20 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler + 8];
  *v18 = a4;
  v18[1] = a5;
  v21 = v15;
  sub_1004C0F54(a4, a5);
  v22 = sub_1004C1024(v19, v20);
  if ((v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] & 1) == 0)
  {
    v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 1;
    sub_100C1960C(v22);
    v23 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView;
    v24 = *(id *)&v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView];
    v25 = sub_100883870();
    objc_msgSend(v24, "addSubview:", v25);

    objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView], "addSubview:", *(_QWORD *)&v21[v23]);
    sub_100882ABC();
  }
  v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  sub_1004C1024(a4, a5);
  swift_unknownObjectRelease(a1);

  swift_unknownObjectRelease(a3);
  v33 = (uint64_t *)&v21[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *v33 = v30;
  v33[1] = v32;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100883FB8()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void *sub_100884084()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  void *v4;
  void *v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  sub_100C89724();
  v5 = v4;
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0, swift_bridgeObjectRelease().n128_f64[0]);
  return v5;
}

uint64_t sub_100884178()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10088419C(uint64_t a1)
{
  uint64_t v1;

  sub_100882A00(a1, v1);
}

uint64_t sub_1008841A4()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1008841B0()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

id sub_1008841BC(int a1)
{
  uint64_t v1;

  return sub_1004C05B4(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1008841D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008841E4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1008841F8()
{
  return 8;
}

double sub_100884204(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

uint64_t sub_10088420C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

_QWORD *sub_100884220(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10088422C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_100884250(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  char *v7;
  char *v8;
  void *v9;
  char *v10;
  unsigned int v11;
  double v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t *v18;
  id v19;
  NSString v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  objc_super v32;

  v7 = &a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_manager];
  swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_manager]);
  v8 = &a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_delegate];
  swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_delegate]);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_type] = 2;
  swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_crlaxViewControllerForLCVInteractions]);
  *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  v9 = (void *)objc_opt_self(CRLAccessibility);
  v10 = a4;
  v11 = objc_msgSend(v9, "isVoiceOverOrSwitchControlEnabled");
  v12 = 6.0;
  if (v11)
    v12 = 30.0;
  *(double *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_maximumShowDuration] = v12;
  v13 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing];
  v14 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_shouldAutoHide] = 1;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_showing] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_animating] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hiding] = 0;
  v15 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipable] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipeGestureRecognizer] = 0;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideOnTouch] = 1;
  v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height] = 0x4045000000000000;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_width] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_constraints] = _swiftEmptyArrayStorage;
  v16 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor] = 0;
  v18 = (uint64_t *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString];
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, v21, 0);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  *v18 = v23;
  v18[1] = v25;
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign(v7, a1);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant] = a2;
  swift_unknownObjectWeakAssign(v8, a3);
  v26 = objc_allocWithZone((Class)UIView);
  v27 = a2;
  v28 = objc_msgSend(v26, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView] = v28;
  v29 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView] = v29;

  v32.receiver = v10;
  v32.super_class = (Class)type metadata accessor for CRLTransientRefollowHUDController(0);
  return objc_msgSendSuper2(&v32, "init");
}

uint64_t sub_1008845CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1008845F0(uint64_t a1)
{
  uint64_t v1;

  sub_100881DE0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1008845F8()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_100884604()
{
  return sub_10078E550((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_100884630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4[25] = a3;
  v4[26] = a4;
  v4[23] = a1;
  v4[24] = a2;
  v5 = type metadata accessor for CRLBoardCRDTData(0);
  v4[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v4[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLBoardIdentifier(0);
  v4[29] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[30] = v8;
  v4[31] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013FE140);
  v4[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[33] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1013E0270);
  v4[34] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10088473C, 0, 0);
}

uint64_t sub_10088473C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (*(_QWORD *)(v0 + 200))
  {
    *(_QWORD *)(v0 + 280) = *sub_1004BB5A4(*(_QWORD **)(v0 + 208), *(_QWORD *)(*(_QWORD *)(v0 + 208) + 24));
    v1 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 288) = static MainActor.shared.getter(v1);
    v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
    v4 = v3;
    v5 = sub_1008848DC;
    v6 = v2;
    v7 = v4;
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9 = String._bridgeToObjectiveC()();
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v15 = *(_QWORD **)(v0 + 208);
    *(_QWORD *)(v0 + 296) = v14;
    *(_QWORD *)(v0 + 304) = v12;
    *(_QWORD *)(v0 + 312) = *sub_1004BB5A4(v15, v15[3]);
    v16 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 320) = v16;
    v17 = static MainActor.shared.getter(v16);
    *(_QWORD *)(v0 + 328) = v17;
    *(_QWORD *)(v0 + 336) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    v7 = v19;
    *(_QWORD *)(v0 + 344) = v18;
    *(_QWORD *)(v0 + 352) = v19;
    v5 = sub_100884A94;
    v6 = v18;
  }
  return swift_task_switch(v5, v6, v7);
}

uint64_t sub_1008848DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  id v9;
  uint64_t v10;

  v1 = v0[35];
  v2 = v0[34];
  v3 = v0[29];
  v4 = v0[30];
  v6 = v0[24];
  v5 = v0[25];
  v7 = swift_release(v0[36]);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56))(v2, 1, 1, v3, v7);
  v9 = v8;
  v0[20] = sub_100632E3C(v6, v5, 0, v2, (uint64_t)v9);
  v0[21] = v10;
  sub_1004CB800(v0[34], &qword_1013E0270);

  return swift_task_switch(sub_100884A00, 0, 0);
}

uint64_t sub_100884A00()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[20];
  v2 = (_QWORD *)v0[26];
  v0[37] = v0[21];
  v0[38] = v1;
  v0[39] = *sub_1004BB5A4(v2, v2[3]);
  v3 = type metadata accessor for MainActor(0);
  v0[40] = v3;
  v4 = static MainActor.shared.getter(v3);
  v0[41] = v4;
  v0[42] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v0[43] = v5;
  v0[44] = v6;
  return swift_task_switch(sub_100884A94, v5, v6);
}

uint64_t sub_100884A94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v1[39];
  v3 = static MainActor.shared.getter(a1);
  v1[45] = v3;
  v4 = swift_task_alloc(32);
  v1[46] = v4;
  *(_QWORD *)(v4 + 16) = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[47] = v5;
  *v5 = v1;
  v5[1] = sub_100884B44;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000100FB5520, sub_1005A124C, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_100884B44()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 368);
  v3 = *(_QWORD *)(*v0 + 360);
  swift_task_dealloc(*(_QWORD *)(*v0 + 376));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100884BAC, *(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 352));
}

uint64_t sub_100884BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 320);
  swift_release(*(_QWORD *)(v0 + 336));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100884C04, v2, v3);
}

uint64_t sub_100884C04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 328));
  return swift_task_switch(sub_100884C40, 0, 0);
}

uint64_t sub_100884C40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 264);
  sub_1004BB5A4(*(_QWORD **)(v0 + 208), *(_QWORD *)(*(_QWORD *)(v0 + 208) + 24));
  v2 = sub_1004B804C(&qword_1013E1790);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 5, v2);
  *(_QWORD *)(v0 + 384) = static MainActor.shared.getter(v3);
  v4 = (_QWORD *)swift_task_alloc(dword_10140E144);
  *(_QWORD *)(v0 + 392) = v4;
  *v4 = v0;
  v4[1] = sub_100884CF0;
  return sub_100CA7010(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 296), 0, 0);
}

uint64_t sub_100884CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 392);
  *(_QWORD *)(*v2 + 400) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 320);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_100885014;
  }
  else
  {
    *(_QWORD *)(v4 + 408) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_100884D98;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_100884D98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = v0[51];
  v2 = v0[37];
  v3 = v0[33];
  swift_release(v0[48]);
  v4 = *(void **)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[52] = v4;
  v5 = v4;
  swift_release(v1);
  sub_1004B84A4(v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_100884E24, 0, 0);
}

uint64_t sub_100884E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  sub_1004BB5A4(*(_QWORD **)(v0 + 208), *(_QWORD *)(*(_QWORD *)(v0 + 208) + 24));
  v5 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  v7 = v6 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess(v6 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v0 + 88, 0, 0);
  sub_1004D48C8(v7, v4);
  swift_retain(v6);
  v8 = sub_1004B804C(&qword_1013E1A80);
  CRRegister.wrappedValue.getter(v8);
  sub_1004B84A4(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release(v6);
  v9 = (uint64_t *)(*(_QWORD *)(v1 + v5) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  v10 = *v9;
  v11 = v9[1];
  swift_bridgeObjectRetain(v11);
  v12 = sub_10067AFD0(v3, v10, v11, v2);
  *(_QWORD *)(v0 + 424) = static MainActor.shared.getter(v12);
  v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10140C6A0 + dword_10140C6A0);
  v13 = (_QWORD *)swift_task_alloc(unk_10140C6A4);
  *(_QWORD *)(v0 + 432) = v13;
  *v13 = v0;
  v13[1] = sub_100884F8C;
  return v15(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 248));
}

uint64_t sub_100884F8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 432);
  *(_QWORD *)(*v1 + 440) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 320), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10088528C;
  else
    v6 = sub_1008850E4;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100885014()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[37];
  v2 = v0[33];
  swift_release(v0[48]);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100885070, 0, 0);
}

uint64_t sub_100885070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008850E4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 424));
  sub_1004B84A4(v1, type metadata accessor for CRLBoardIdentifier);
  return swift_task_switch(sub_100885134, 0, 0);
}

uint64_t sub_100885134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = type metadata accessor for CRLBoardEntity(0);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  v4 = *(void **)(v0 + 416);
  if (v3 == 1)
  {
    sub_1004CB800(v1, &qword_1013FE140);
    v5 = type metadata accessor for _PrebuiltAppIntentError(0);
    v6 = sub_1006371C0();
    swift_allocError(v5, v6, 0, 0);
    v7.n128_f64[0] = static _UnrecoverableError.entityNotFound.getter();
    swift_willThrow(v7);

    v8 = *(_QWORD *)(v0 + 264);
    v10 = *(_QWORD *)(v0 + 248);
    v9 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 224);
    swift_task_dealloc(*(_QWORD *)(v0 + 272));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 248);
    v12 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 184);

    sub_100885520(v1, v15);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v1);
  }
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10088528C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;

  swift_release(v0[53]);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = v0[55];
  v2 = v0[31];
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 14, 0, 0);
  v3 = (void *)static OS_os_log.appIntents;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v4, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  swift_getErrorValue(v1, v0 + 22, v0 + 17);
  v6 = v0[18];
  v7 = v0[19];
  v8 = v3;
  v9 = Error.publicDescription.getter(v6, v7);
  v11 = v10;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v12 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  v13 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "Error fetching entity for requested identifier: %@", 50, 2, inited);
  swift_setDeallocating(inited);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v14);

  swift_willThrow(v15);
  swift_errorRelease(v1);
  sub_1004B84A4(v2, type metadata accessor for CRLBoardIdentifier);
  return swift_task_switch(sub_100885430, 0, 0);
}

uint64_t sub_100885430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = *(void **)(v0 + 416);
  sub_1004CB800(*(_QWORD *)(v0 + 256), &qword_1013FE140);
  v4 = type metadata accessor for _PrebuiltAppIntentError(0);
  v5 = sub_1006371C0();
  swift_allocError(v4, v5, 0, 0);
  v6.n128_f64[0] = static _UnrecoverableError.entityNotFound.getter();
  swift_willThrow(v6);

  v7 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 224);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100885520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CRLCreateBoardIntentPerformer()
{
  return &type metadata for CRLCreateBoardIntentPerformer;
}

uint64_t *CRLAccessibilityUtil.Announcements.MoreOptionsShown.unsafeMutableAddressor()
{
  if (qword_1013DD360 != -1)
    swift_once(&qword_1013DD360, sub_1008855F4);
  return &static CRLAccessibilityUtil.Announcements.MoreOptionsShown;
}

uint64_t *CRLAccessibilityUtil.Announcements.FewerOptionsShown.unsafeMutableAddressor()
{
  if (qword_1013DD368 != -1)
    swift_once(&qword_1013DD368, sub_1008856E4);
  return &static CRLAccessibilityUtil.Announcements.FewerOptionsShown;
}

void sub_1008855F4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  static CRLAccessibilityUtil.Announcements.MoreOptionsShown = v4;
  unk_10147FB40 = v6;
}

uint64_t static CRLAccessibilityUtil.Announcements.MoreOptionsShown.getter()
{
  return sub_1008857D4(&qword_1013DD360, &static CRLAccessibilityUtil.Announcements.MoreOptionsShown, &qword_10147FB40, (uint64_t)sub_1008855F4);
}

void sub_1008856E4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  static CRLAccessibilityUtil.Announcements.FewerOptionsShown = v4;
  unk_10147FB50 = v6;
}

uint64_t static CRLAccessibilityUtil.Announcements.FewerOptionsShown.getter()
{
  return sub_1008857D4(&qword_1013DD368, &static CRLAccessibilityUtil.Announcements.FewerOptionsShown, &qword_10147FB50, (uint64_t)sub_1008856E4);
}

uint64_t sub_1008857D4(_QWORD *a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = *a2;
  swift_bridgeObjectRetain(*a3);
  return v6;
}

uint64_t CRLAccessibilityUtil.deinit()
{
  uint64_t v0;

  return v0;
}

NSString sub_10088582C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static NSAttributedStringKey.crlaxLowPitch = (uint64_t)result;
  return result;
}

uint64_t *NSAttributedStringKey.crlaxLowPitch.unsafeMutableAddressor()
{
  if (qword_1013DD370 != -1)
    swift_once(&qword_1013DD370, sub_10088582C);
  return &static NSAttributedStringKey.crlaxLowPitch;
}

id static NSAttributedStringKey.crlaxLowPitch.getter()
{
  if (qword_1013DD370 != -1)
    swift_once(&qword_1013DD370, sub_10088582C);
  return (id)static NSAttributedStringKey.crlaxLowPitch;
}

uint64_t sub_1008858E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v5 = _swiftEmptyArrayStorage;
    v11 = _swiftEmptyArrayStorage[2];
    if (!v11)
      goto LABEL_22;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain(a1);
  v4 = (_QWORD *)(v3 + 40);
  v5 = _swiftEmptyArrayStorage;
  do
  {
    v7 = *v4;
    if (*v4)
    {
      v8 = *(v4 - 1);
      swift_bridgeObjectRetain(*v4);
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        v5 = sub_100D0EF94(0, v5[2] + 1, 1, v5);
      v10 = v5[2];
      v9 = v5[3];
      if (v10 >= v9 >> 1)
        v5 = sub_100D0EF94((_QWORD *)(v9 > 1), v10 + 1, 1, v5);
      v5[2] = v10 + 1;
      v6 = &v5[2 * v10];
      v6[4] = v8;
      v6[5] = v7;
    }
    v4 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(a1);
  v11 = v5[2];
  if (v11)
  {
LABEL_11:
    v12 = v5 + 5;
    do
    {
      v17 = *(v12 - 1);
      v16 = *v12;
      v18 = HIBYTE(*v12) & 0xFLL;
      if ((*v12 & 0x2000000000000000) == 0)
        v18 = v17 & 0xFFFFFFFFFFFFLL;
      if (v18)
      {
        swift_bridgeObjectRetain(*v12);
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_1006006EC(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v14 = _swiftEmptyArrayStorage[2];
        v13 = _swiftEmptyArrayStorage[3];
        if (v14 >= v13 >> 1)
          sub_1006006EC(v13 > 1, v14 + 1, 1);
        _swiftEmptyArrayStorage[2] = v14 + 1;
        v15 = &_swiftEmptyArrayStorage[2 * v14];
        v15[4] = v17;
        v15[5] = v16;
      }
      v12 += 2;
      --v11;
    }
    while (v11);
  }
LABEL_22:
  swift_bridgeObjectRelease(v5);
  v19 = sub_1004B804C((uint64_t *)&unk_1013E4970);
  v20 = sub_100500464();
  v21 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v19, v20);
  swift_release(_swiftEmptyArrayStorage);
  return v21;
}

uint64_t _sSo15NSDateFormatterC8FreeformE37crlaxVoiceOverPronounceableTimeString3forSSSg10Foundation4DateV_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, _QWORD, uint64_t);
  void *v24;
  uint64_t v25;
  char *v26;
  __n128 v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void *v37;
  NSString v38;
  id v39;
  char *v40;
  Class isa;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  int v52;
  id v53;
  NSString v54;
  NSString v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  id v61;
  NSString v62;
  NSString v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  NSString v75;
  NSString v76;
  char *v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  NSString v88;
  NSString v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  id v96;
  NSString v97;
  NSString v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  NSString v104;
  NSString v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  NSString v116;
  NSString v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  NSString v125;
  NSString v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v0 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v0);
  v133 = (char *)&v132 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Locale(0);
  v135 = *(_QWORD *)(v2 - 8);
  v136 = v2;
  __chkstk_darwin(v2);
  v134 = (char *)&v132 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v139 = *(_QWORD *)(v4 - 8);
  v140 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Calendar(0);
  v137 = *(_QWORD *)(v7 - 8);
  v138 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DateComponents(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v12);
  v15 = sub_1004B804C(&qword_1013E0528);
  v16 = type metadata accessor for Calendar.Component(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v15, v20 + 2 * v18, v19 | 7);
  v132 = xmmword_100EF5A10;
  *(_OWORD *)(v21 + 16) = xmmword_100EF5A10;
  v22 = v21 + v20;
  v23 = *(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104);
  v23(v22, enum case for Calendar.Component.hour(_:), v16);
  v23(v22 + v18, enum case for Calendar.Component.minute(_:), v16);
  v24 = sub_1004B55E4(v21);
  swift_setDeallocating(v21);
  swift_arrayDestroy(v22, 2, v16);
  v25 = v21;
  v26 = v14;
  swift_deallocClassInstance(v25, 32, 7);
  static Date.now.getter(v27);
  Calendar.dateComponents(_:from:)(v24, v6);
  v28 = swift_bridgeObjectRelease(v24);
  (*(void (**)(char *, uint64_t, __n128))(v139 + 8))(v6, v140, v28);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v9, v138);
  v30 = DateComponents.hour.getter(v29);
  v31 = 0;
  if ((v32 & 1) == 0)
  {
    v33 = v30;
    v139 = v11;
    v140 = v10;
    v34 = DateComponents.minute.getter();
    if ((v35 & 1) != 0)
    {
      v31 = 0;
      goto LABEL_30;
    }
    v36 = v34;
    v37 = (void *)objc_opt_self(NSDateFormatter);
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend((id)objc_opt_self(NSLocale), "currentLocale");
    v40 = v134;
    static Locale._unconditionallyBridgeFromObjectiveC(_:)(v39);

    isa = Locale._bridgeToObjectiveC()().super.isa;
    v42 = v135;
    v43 = v40;
    v44 = v136;
    (*(void (**)(char *, uint64_t))(v135 + 8))(v43, v136);
    v45 = objc_msgSend(v37, "dateFormatFromTemplate:options:locale:", v38, 0, isa);

    if (!v45)
      goto LABEL_7;
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v48 = v47;

    v143 = v46;
    v144 = v48;
    v141 = 97;
    v142 = 0xE100000000000000;
    v49 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v133, 1, 1, v44);
    v50 = sub_1004D292C();
    StringProtocol.range<A>(of:options:range:locale:)(&v141, 0, 0, 0, 1, v49, &type metadata for String, &type metadata for String, v50, v50);
    LOBYTE(v46) = v51;
    sub_10075882C(v49);
    swift_bridgeObjectRelease(v142);
    swift_bridgeObjectRelease(v144);
    if ((v46 & 1) != 0)
LABEL_7:
      v52 = 0;
    else
      v52 = 1;
    if (v33 >= 12)
    {
      v61 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v62 = String._bridgeToObjectiveC()();
      v63 = String._bridgeToObjectiveC()();
      v64 = objc_msgSend(v61, "localizedStringForKey:value:table:", v62, v63, 0);

      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v59 = v65;

      if ((v52 & 1) == 0)
        goto LABEL_10;
    }
    else
    {
      v53 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v54 = String._bridgeToObjectiveC()();
      v55 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend(v53, "localizedStringForKey:value:table:", v54, v55, 0);

      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v59 = v58;

      if (!v52)
      {
LABEL_10:
        if (v36)
        {
          v138 = v57;
          v60 = 0;
          goto LABEL_18;
        }
        v138 = (uint64_t)v26;
        v96 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v97 = String._bridgeToObjectiveC()();
        v98 = String._bridgeToObjectiveC()();
        v99 = objc_msgSend(v96, "localizedStringForKey:value:table:", v97, v98, 0);

        v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
        v102 = v101;
        swift_bridgeObjectRelease(v59);

        if (v33)
        {
          v137 = v100;
          v103 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v104 = String._bridgeToObjectiveC()();
          v105 = String._bridgeToObjectiveC()();
          v106 = objc_msgSend(v103, "localizedStringForKey:value:table:", v104, v105, 0);

          v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
          v109 = v108;

          v26 = (char *)v138;
          if (v33 > 9)
          {
            swift_bridgeObjectRelease(v109);
            v143 = v33;
            v112 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v114 = v128;
          }
          else
          {
            v110 = sub_1004B804C((uint64_t *)&unk_1013E0180);
            v111 = swift_allocObject(v110, 72, 7);
            *(_OWORD *)(v111 + 16) = xmmword_100EF5E40;
            *(_QWORD *)(v111 + 56) = &type metadata for Int;
            *(_QWORD *)(v111 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v111 + 32) = v33;
            v112 = static String.localizedStringWithFormat(_:_:)(v107, v109, v111);
            v114 = v113;
            swift_bridgeObjectRelease(v111);
            swift_bridgeObjectRelease(v109);
          }
          v129 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v130 = swift_allocObject(v129, 72, 7);
          *(_OWORD *)(v130 + 16) = xmmword_100EF5E40;
          *(_QWORD *)(v130 + 56) = &type metadata for String;
          *(_QWORD *)(v130 + 64) = sub_1004CFC2C();
          *(_QWORD *)(v130 + 32) = v112;
          *(_QWORD *)(v130 + 40) = v114;
          v31 = static String.localizedStringWithFormat(_:_:)(v137, v102, v130);
          v123 = v130;
          goto LABEL_28;
        }
        swift_bridgeObjectRelease(v102);
        v124 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v125 = String._bridgeToObjectiveC()();
        v126 = String._bridgeToObjectiveC()();
        v127 = objc_msgSend(v124, "localizedStringForKey:value:table:", v125, v126, 0);

        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
        v26 = (char *)v138;
LABEL_30:
        v11 = v139;
        v10 = v140;
        goto LABEL_31;
      }
    }
    if (v33 % 12)
      v33 %= 12;
    else
      v33 = 12;
    if (v36)
    {
      v138 = v57;
      v60 = 1;
LABEL_18:
      v143 = v33;
      v66 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v68 = v67;
      v69 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v70 = swift_allocObject(v69, 72, 7);
      *(_OWORD *)(v70 + 16) = xmmword_100EF5E40;
      *(_QWORD *)(v70 + 56) = &type metadata for Int;
      *(_QWORD *)(v70 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v70 + 32) = v36;
      v71 = String.init(format:_:)(1681010725, 0xE400000000000000, v70);
      v73 = v72;
      if (v60)
      {
        v74 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v75 = String._bridgeToObjectiveC()();
        v76 = String._bridgeToObjectiveC()();
        v137 = v59;
        v77 = v26;
        v78 = v76;
        v79 = objc_msgSend(v74, "localizedStringForKey:value:table:", v75, v76, 0);

        v26 = v77;
        v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
        v82 = v81;

        v83 = swift_allocObject(v69, 152, 7);
        *(_OWORD *)(v83 + 16) = xmmword_100EF5550;
        *(_QWORD *)(v83 + 56) = &type metadata for String;
        v84 = sub_1004CFC2C();
        *(_QWORD *)(v83 + 32) = v66;
        *(_QWORD *)(v83 + 40) = v68;
        *(_QWORD *)(v83 + 96) = &type metadata for String;
        *(_QWORD *)(v83 + 104) = v84;
        *(_QWORD *)(v83 + 64) = v84;
        *(_QWORD *)(v83 + 72) = v71;
        *(_QWORD *)(v83 + 80) = v73;
        *(_QWORD *)(v83 + 136) = &type metadata for String;
        *(_QWORD *)(v83 + 144) = v84;
        v85 = v137;
        *(_QWORD *)(v83 + 112) = v138;
        *(_QWORD *)(v83 + 120) = v85;
        v31 = static String.localizedStringWithFormat(_:_:)(v80, v82, v83);
        swift_bridgeObjectRelease(v82);
        v86 = v83;
      }
      else
      {
        swift_bridgeObjectRelease(v59);
        v87 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v88 = String._bridgeToObjectiveC()();
        v89 = String._bridgeToObjectiveC()();
        v90 = objc_msgSend(v87, "localizedStringForKey:value:table:", v88, v89, 0);

        v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
        v93 = v92;

        v94 = swift_allocObject(v69, 112, 7);
        *(_OWORD *)(v94 + 16) = v132;
        *(_QWORD *)(v94 + 56) = &type metadata for String;
        v95 = sub_1004CFC2C();
        *(_QWORD *)(v94 + 32) = v66;
        *(_QWORD *)(v94 + 40) = v68;
        *(_QWORD *)(v94 + 96) = &type metadata for String;
        *(_QWORD *)(v94 + 104) = v95;
        *(_QWORD *)(v94 + 64) = v95;
        *(_QWORD *)(v94 + 72) = v71;
        *(_QWORD *)(v94 + 80) = v73;
        v31 = static String.localizedStringWithFormat(_:_:)(v91, v93, v94);
        swift_bridgeObjectRelease(v93);
        v86 = v94;
      }
      goto LABEL_29;
    }
    v115 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v116 = String._bridgeToObjectiveC()();
    v117 = String._bridgeToObjectiveC()();
    v118 = objc_msgSend(v115, "localizedStringForKey:value:table:", v116, v117, 0);

    v119 = static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
    v121 = v120;

    v122 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v102 = swift_allocObject(v122, 112, 7);
    *(_OWORD *)(v102 + 16) = v132;
    *(_QWORD *)(v102 + 56) = &type metadata for Int;
    *(_QWORD *)(v102 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v102 + 32) = v33;
    *(_QWORD *)(v102 + 96) = &type metadata for String;
    *(_QWORD *)(v102 + 104) = sub_1004CFC2C();
    *(_QWORD *)(v102 + 72) = v57;
    *(_QWORD *)(v102 + 80) = v59;
    v31 = static String.localizedStringWithFormat(_:_:)(v119, v121, v102);
    v123 = v121;
LABEL_28:
    swift_bridgeObjectRelease(v123);
    v86 = v102;
LABEL_29:
    swift_bridgeObjectRelease(v86);
    goto LABEL_30;
  }
LABEL_31:
  (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v10);
  return v31;
}

uint64_t type metadata accessor for CRLAccessibilityUtil()
{
  return objc_opt_self(_TtC8Freeform20CRLAccessibilityUtil);
}

ValueMetadata *type metadata accessor for CRLAccessibilityUtil.Announcements()
{
  return &type metadata for CRLAccessibilityUtil.Announcements;
}

uint64_t sub_1008867B4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

char *sub_100886890(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  char *v6;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  objc_super v25;

  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel] = 0;
  v13 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterStrokeDataProvider());
  v14 = &v13[OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v25.receiver = v13;
  v25.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
  v15 = v6;
  v16 = a5;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_dataProvider] = objc_msgSendSuper2(&v25, "init");

  v17 = a6;
  v18 = v16;
  swift_unknownObjectRetain(a1);
  v19 = a4;
  v20 = (char *)sub_1004CA6E8(a1, a2, a3, v19, v18, a6);
  swift_unknownObjectRelease(a1);

  v21 = *(void **)&v20[OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_dataProvider];
  v22 = v20;
  v23 = v21;
  sub_1007BEDBC();

  swift_unknownObjectRelease(a1);
  return v22;
}

char *sub_1008869FC()
{
  void *v0;
  char v1;
  char v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSString v7;
  void *v8;
  id v9;
  UIImage *v10;
  UIImage *v11;
  id v12;
  id v13;
  NSString v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  NSString v24;
  UIImage *v25;
  id v26;
  NSString v27;
  NSString v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  UIImage *v40;
  void *v41;
  char *v42;
  id v43;
  char *v44;
  NSString v45;

  v0 = (void *)sub_1007BEFB8();
  if (v0 != (void *)1)
  {
    v2 = v1;
    sub_1004CB49C(v0);
    if ((v2 & 1) != 0)
    {
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v14);

      if (v15)
      {
        v16 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
        v10 = (UIImage *)objc_msgSend(v15, "imageWithTintColor:", v16);

      }
      else
      {
        v10 = 0;
      }
      v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v21 = String._bridgeToObjectiveC()();
      v22 = String._bridgeToObjectiveC()();
      v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);
      goto LABEL_15;
    }
  }
  v3 = (void *)sub_1007BF0F4();
  if ((unint64_t)v3 < 2)
  {
LABEL_12:
    v17 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    v18 = objc_msgSend(v17, "traitCollection");

    objc_msgSend(v18, "crl_isUserInterfaceStyleDark");
    v19 = String._bridgeToObjectiveC()();
    v10 = (UIImage *)objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v19);

    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v21 = String._bridgeToObjectiveC()();
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);
LABEL_15:
    v6 = v23;

    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    goto LABEL_22;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "UIColor");
  if (!v5)
  {
    sub_1004CB49C(v4);
    goto LABEL_12;
  }
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  v8 = (void *)objc_opt_self(UIImage);
  v9 = objc_msgSend(v8, "imageNamed:", v7);

  if (v9)
  {
    v10 = (UIImage *)objc_msgSend(v9, "imageWithTintColor:", v6);

    if (v10)
    {
      v11 = v10;
      if (sub_10097C9F4())
      {
        v12 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        v13 = objc_msgSend(v12, "traitCollection");

        objc_msgSend(v13, "crl_isUserInterfaceStyleDark");
        v24 = String._bridgeToObjectiveC()();
        v10 = (UIImage *)objc_msgSend(v8, "imageNamed:", v24);

        if (v10)
        {
          v25 = v10;
          v10 = sub_1008ECF80(v11);

          v11 = v25;
        }

      }
    }
  }
  else
  {
    v10 = 0;
  }
  v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v27 = String._bridgeToObjectiveC()();
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v26, "localizedStringForKey:value:table:", v27, v28, 0);

  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  v32 = v31;

  v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v34 = swift_allocObject(v33, 72, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100EF5E40;
  v35 = objc_msgSend(v6, "accessibilityName");
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  *(_QWORD *)(v34 + 56) = &type metadata for String;
  *(_QWORD *)(v34 + 64) = sub_1004CFC2C();
  *(_QWORD *)(v34 + 32) = v36;
  *(_QWORD *)(v34 + 40) = v38;
  static String.localizedStringWithFormat(_:_:)(v30, v32, v34);
  sub_1004CB49C(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_22:

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v39 = swift_allocObject(&unk_101283D60, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16);
  v40 = v10;
  v41 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1004CBB04, v39);
  v42 = sub_1004C57EC(v41, 0, v10, 0);

  if (v10)
    v43 = -[UIImage crl_imageWithAlpha:renderingMode:](v40, "crl_imageWithAlpha:renderingMode:", 0, 0.4);
  else
    v43 = 0;
  objc_msgSend(v42, "setImage:forState:", v43, 1);
  objc_msgSend(v42, "setImage:forState:", v40, 0);
  v44 = v42;
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setAccessibilityValue:", v45, swift_bridgeObjectRelease().n128_f64[0]);

  return v44;
}

id sub_100887140()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v12;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EEF400;
  v2 = sub_1008872EC();
  *(_QWORD *)(v1 + 32) = v2;
  v12 = v1;
  specialized Array._endMutation()(v2);
  v3 = (void *)sub_1007BEFB8();
  if (v3)
  {
    if (v3 != (void *)1)
    {
      sub_1004CB49C(v3);
      v4 = sub_100888784();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
      v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v5 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v6 >= v5 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
      v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
      specialized Array._endMutation()(v7);
    }
  }
  else
  {
    sub_1004CB49C(0);
  }
  v8 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v10, "setAxis:", 1);
  if (qword_1013DC8A8 != -1)
    swift_once(&qword_1013DC8A8, sub_1004C5434);
  objc_msgSend(v10, "setSpacing:", *(double *)&qword_10147E6C8);
  return v10;
}

id sub_1008872EC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  char v13;
  __n128 v14;
  void *v15;
  __n128 v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v25;
  id v26;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E10A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1007BEFB8();
  if (v9 == 1)
    v10 = 0;
  else
    v10 = (void *)v9;
  v11 = (void *)sub_1007BEFAC();
  v26 = v10;
  if (v11 != (void *)1 && (v13 = v12, v11, (v13 & 1) != 0))
  {
    IndexSet.init()(v14);
  }
  else
  {
    v15 = sub_100887F4C(v10);
    IndexSet.init(integer:)(v15, v16);
  }
  v17 = sub_10088751C();
  v19 = v18;
  v20 = swift_allocObject(&unk_101283D88, 24, 7);
  *(_QWORD *)(v20 + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  v21 = v1;
  swift_bridgeObjectRetain(v19);
  v22 = sub_1004C6DDC((uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_release(v20);
  swift_bridgeObjectRelease_n(v19, 2);
  sub_1004CB800((uint64_t)v4, &qword_1013E10A0);
  v23 = (void *)sub_1007BEFB8();
  if (!v23)
  {
    sub_1004CB49C(0);
    goto LABEL_12;
  }
  if (v23 == (void *)1)
  {
LABEL_12:
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v22);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v22;
  }
  sub_1004CB49C(v23);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v22;
}

double *sub_10088751C()
{
  double *v0;
  NSString v1;
  id v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double *v16;
  NSString v17;
  void *v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  double *v33;
  NSString v34;
  id v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  NSString v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  double *v49;
  NSString v50;
  id v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  NSString v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  double *v65;
  NSString v66;
  id v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  NSString v73;
  NSString v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  double *v81;

  v0 = _swiftEmptyArrayStorage;
  if ((sub_1007BF25C() & 1) == 0)
  {
    v1 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v1);

    if (v2)
    {
      v3 = v2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
      v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v4 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v5 >= v4 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
      v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v3);
      specialized Array._endMutation()(v6);
      v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v8 = String._bridgeToObjectiveC()();
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      v0 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
      v15 = *((_QWORD *)v0 + 2);
      v14 = *((_QWORD *)v0 + 3);
      if (v15 >= v14 >> 1)
        v0 = (double *)sub_100D0EF94((_QWORD *)(v14 > 1), v15 + 1, 1, v0);
      *((_QWORD *)v0 + 2) = v15 + 1;
      v16 = &v0[2 * v15];
      *((_QWORD *)v16 + 4) = v11;
      *((_QWORD *)v16 + 5) = v13;

    }
    else
    {
      v0 = _swiftEmptyArrayStorage;
    }
  }
  v17 = String._bridgeToObjectiveC()();
  v18 = (void *)objc_opt_self(UIImage);
  v19 = objc_msgSend(v18, "imageNamed:", v17);

  if (v19)
  {
    v20 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v25 = String._bridgeToObjectiveC()();
    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, v26, 0);

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    if ((swift_isUniquelyReferenced_nonNull_native(v0) & 1) == 0)
      v0 = (double *)sub_100D0EF94(0, *((_QWORD *)v0 + 2) + 1, 1, v0);
    v32 = *((_QWORD *)v0 + 2);
    v31 = *((_QWORD *)v0 + 3);
    if (v32 >= v31 >> 1)
      v0 = (double *)sub_100D0EF94((_QWORD *)(v31 > 1), v32 + 1, 1, v0);
    *((_QWORD *)v0 + 2) = v32 + 1;
    v33 = &v0[2 * v32];
    *((_QWORD *)v33 + 4) = v28;
    *((_QWORD *)v33 + 5) = v30;

  }
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v18, "imageNamed:", v34);

  if (v35)
  {
    v36 = v35;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v38 >= v37 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
    v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
    specialized Array._endMutation()(v39);
    v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v41 = String._bridgeToObjectiveC()();
    v42 = String._bridgeToObjectiveC()();
    v43 = objc_msgSend(v40, "localizedStringForKey:value:table:", v41, v42, 0);

    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

    if ((swift_isUniquelyReferenced_nonNull_native(v0) & 1) == 0)
      v0 = (double *)sub_100D0EF94(0, *((_QWORD *)v0 + 2) + 1, 1, v0);
    v48 = *((_QWORD *)v0 + 2);
    v47 = *((_QWORD *)v0 + 3);
    if (v48 >= v47 >> 1)
      v0 = (double *)sub_100D0EF94((_QWORD *)(v47 > 1), v48 + 1, 1, v0);
    *((_QWORD *)v0 + 2) = v48 + 1;
    v49 = &v0[2 * v48];
    *((_QWORD *)v49 + 4) = v44;
    *((_QWORD *)v49 + 5) = v46;

  }
  v50 = String._bridgeToObjectiveC()();
  v51 = objc_msgSend(v18, "imageNamed:", v50);

  if (v51)
  {
    v52 = v51;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    v54 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v53 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v54 >= v53 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
    v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
    specialized Array._endMutation()(v55);
    v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v57 = String._bridgeToObjectiveC()();
    v58 = String._bridgeToObjectiveC()();
    v59 = objc_msgSend(v56, "localizedStringForKey:value:table:", v57, v58, 0);

    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    v62 = v61;

    if ((swift_isUniquelyReferenced_nonNull_native(v0) & 1) == 0)
      v0 = (double *)sub_100D0EF94(0, *((_QWORD *)v0 + 2) + 1, 1, v0);
    v64 = *((_QWORD *)v0 + 2);
    v63 = *((_QWORD *)v0 + 3);
    if (v64 >= v63 >> 1)
      v0 = (double *)sub_100D0EF94((_QWORD *)(v63 > 1), v64 + 1, 1, v0);
    *((_QWORD *)v0 + 2) = v64 + 1;
    v65 = &v0[2 * v64];
    *((_QWORD *)v65 + 4) = v60;
    *((_QWORD *)v65 + 5) = v62;

  }
  v66 = String._bridgeToObjectiveC()();
  v67 = objc_msgSend(v18, "imageNamed:", v66);

  if (v67)
  {
    v68 = v67;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
    v70 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v69 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v70 >= v69 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
    v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v68);
    specialized Array._endMutation()(v71);
    v72 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v73 = String._bridgeToObjectiveC()();
    v74 = String._bridgeToObjectiveC()();
    v75 = objc_msgSend(v72, "localizedStringForKey:value:table:", v73, v74, 0);

    v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
    v78 = v77;

    if ((swift_isUniquelyReferenced_nonNull_native(v0) & 1) == 0)
      v0 = (double *)sub_100D0EF94(0, *((_QWORD *)v0 + 2) + 1, 1, v0);
    v80 = *((_QWORD *)v0 + 2);
    v79 = *((_QWORD *)v0 + 3);
    if (v80 >= v79 >> 1)
      v0 = (double *)sub_100D0EF94((_QWORD *)(v79 > 1), v80 + 1, 1, v0);
    *((_QWORD *)v0 + 2) = v80 + 1;
    v81 = &v0[2 * v80];
    *((_QWORD *)v81 + 4) = v76;
    *((_QWORD *)v81 + 5) = v78;

  }
  return _swiftEmptyArrayStorage;
}

id sub_100887E44(uint64_t a1)
{
  id v3;

  if ((sub_1007BF25C() & 1) != 0 && __OFADD__(a1++, 1))
  {
    __break(1u);
    JUMPOUT(0x100887F3CLL);
  }
  switch(a1)
  {
    case 1:
      v3 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "solidPattern");
      return v3;
    case 2:
      v3 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "roundDashPattern");
      return v3;
    case 3:
      v3 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "shortDashPattern");
      return v3;
    case 4:
      static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Feathered Brush"));
      return 0;
    default:
      return 0;
  }
}

void *sub_100887F4C(void *result)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  char v19;
  id v20;
  char v21;
  id v22;
  char v23;
  char v24;

  if (result)
  {
    v1 = result;
    v2 = objc_opt_self(CRLSmartStroke);
    v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
    v4 = v1;
    v5 = v4;
    if (v3)
    {
      v6 = v4;
      v7 = objc_msgSend(v3, "strokeName");
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Feathered Brush"));
      if (v8 == v11 && v10 == v12)
      {
        swift_bridgeObjectRelease_n(v10, 2);

        v15 = 4;
        goto LABEL_17;
      }
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v14 & 1) != 0)
      {
        v15 = 4;
LABEL_17:
        v24 = sub_1007BF25C();

        return (void *)(v15 - (v24 & 1));
      }
    }
    v16 = objc_msgSend(v5, "pattern");
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v17 = (void *)objc_opt_self(CRLStrokePattern);
    v18 = objc_msgSend(v17, "solidPattern");
    v19 = static NSObject.== infix(_:_:)(v16, v18);

    if ((v19 & 1) != 0)
    {

      v15 = 1;
    }
    else
    {
      v20 = objc_msgSend(v17, "roundDashPattern");
      v21 = static NSObject.== infix(_:_:)(v16, v20);

      if ((v21 & 1) != 0)
      {

        v15 = 2;
      }
      else
      {
        v22 = objc_msgSend(v17, "shortDashPattern");
        v23 = static NSObject.== infix(_:_:)(v16, v22);

        if ((v23 & 1) != 0)
          v15 = 3;
        else
          v15 = 0;
      }
    }
    goto LABEL_17;
  }
  return result;
}

void sub_10088817C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  __objc2_prot *v22;

  v1 = sub_100888374();
  if ((v2 & 1) != 0)
    return;
  v3 = v1;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_dataProvider);
  v5 = (void *)sub_1007BEFB8();
  if (v5)
  {
    if (v5 != (void *)1)
      sub_1004CB49C(v5);
  }
  else
  {
    v6 = (void *)sub_1007BEEAC();
    if (v6)
    {
      v7 = v6;
      v21 = objc_msgSend(v6, "color");
      objc_msgSend(v7, "width");
      v9 = v8;

      v10 = 0;
      v11 = v9;
      goto LABEL_8;
    }
  }
  v21 = 0;
  v11 = 0;
  v10 = 1;
LABEL_8:
  v12 = sub_100887E44(v3);
  v15 = v14;
  if (v12)
  {
    v16 = v12;
    sub_1007BE9A4((uint64_t)v16, v11, v10, v21);

    swift_bridgeObjectRelease();
  }
  else if (v14)
  {
    v17 = v13;
    swift_bridgeObjectRetain(v14);
    sub_1007BEB78(v17, v15, v11, v10, v21);
    swift_bridgeObjectRelease_n(v15, 2);

  }
  else
  {
    v18 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController), "mostSpecificEditorConformingToProtocol:", &OBJC_PROTOCOL___CRLStrokeEditor);
    if (v18)
    {
      v19 = v18;
      v22 = &OBJC_PROTOCOL___CRLStrokeEditor;
      v20 = (void *)swift_dynamicCastObjCProtocolConditional(v18, 1, &v22);
      if (v20)
        objc_msgSend(v20, "applyStroke:", 0);
      swift_unknownObjectRelease(v19);
    }
    sub_1007BEDBC();

  }
}

uint64_t sub_100888374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  char *v24;
  char *v25;
  char v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  _DWORD v32[2];
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t, __n128);
  char *v38;
  char *v39;
  _BYTE v40[32];

  v1 = type metadata accessor for IndexSet.Index(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v32 - v6;
  v8 = type metadata accessor for IndexSet(0);
  v9 = *(char **)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_101407510);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v9;
  v37 = (void (*)(char *, uint64_t, uint64_t, __n128))*((_QWORD *)v9 + 2);
  v37(v11, v0, v8, v13);
  v16 = sub_1004B7878(&qword_1013F6BE0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Sequence.makeIterator()(v8, v16);
  v17 = &v15[*(int *)(v12 + 36)];
  v36 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v36(v7, v17, v1);
  v18 = sub_1004B7878(&qword_1013F6BE8, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
  dispatch thunk of Collection.endIndex.getter(v8, v18);
  v35 = sub_1004B7878(&qword_1013F6BF0, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet.Index, (uint64_t)&protocol conformance descriptor for IndexSet.Index);
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v7, v4);
  v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v39 = v4;
  v20(v4, v1);
  v38 = v7;
  v20(v7, v1);
  v21 = 0;
  if ((v19 & 1) == 0)
  {
    v32[1] = v19;
    v22 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v40, v17, v8, v18);
    v21 = *v23;
    v22(v40, 0);
    ((void (*)(char *, char *, uint64_t))v37)(v11, v15, v8);
    dispatch thunk of Collection.formIndex(after:)(v17, v8, v18);
    v33 = (void (*)(char *, uint64_t))*((_QWORD *)v34 + 1);
    v34 = v11;
    v33(v11, v8);
    v24 = v38;
    while (1)
    {
      v36(v24, v17, v1);
      v25 = v39;
      dispatch thunk of Collection.endIndex.getter(v8, v18);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v24, v25);
      v20(v25, v1);
      v20(v24, v1);
      if ((v26 & 1) != 0)
        break;
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v40, v17, v8, v18);
      v29 = *v28;
      v27(v40, 0);
      v30 = v34;
      ((void (*)(char *, char *, uint64_t))v37)(v34, v15, v8);
      dispatch thunk of Collection.formIndex(after:)(v17, v8, v18);
      v33(v30, v8);
      if (v29 < v21)
        v21 = v29;
    }
  }
  sub_1004CB800((uint64_t)v15, &qword_101407510);
  return v21;
}

id sub_100888784()
{
  void *v0;
  char v1;
  void *v2;
  char v3;
  id v4;
  id v5;
  NSString v6;
  Class v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSString v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  objc_class *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  double v29;
  id v30;
  Class isa;
  id v32;
  double v33;
  id v34;
  id v35;
  uint64_t v37;

  v0 = (void *)sub_1007BF0F4();
  if (v0 == (void *)1 || (v2 = v0) == 0)
  {
    v7 = 0;
  }
  else
  {
    v3 = v1;
    v4 = v0;
    sub_1007BF25C();
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = String._bridgeToObjectiveC()();
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v8, 0);

    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    if ((v3 & 1) != 0)
    {
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v14);

      v7 = sub_1004C6348(0, v15, v10, v12, 71.0);
      sub_1004CB49C(v2);
      sub_1004CB49C(v2);

    }
    else
    {
      v13 = objc_msgSend(v4, "UIColor");
      v7 = sub_1004C6348(v13, 0, v10, v12, 71.0);
      sub_1004CB49C(v2);

      sub_1004CB49C(v2);
    }
    swift_bridgeObjectRelease();
  }
  v16 = sub_100888C34();
  v17 = sub_100889040();
  v18 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v19 = swift_allocObject(v18, 48, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100EF5560;
  *(_QWORD *)(v19 + 32) = v16;
  *(_QWORD *)(v19 + 40) = v17;
  v37 = v19;
  specialized Array._endMutation()(v19);
  v20 = v37;
  if (v7)
  {
    v21 = v16;
    v22 = v17;
    v23 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
    specialized Array._endMutation()(v26);
    v20 = v37;
  }
  else
  {
    v27 = v16;
    v28 = v17;
  }
  if (qword_1013DC8A0 != -1)
    swift_once(&qword_1013DC8A0, sub_1004C5424);
  v29 = *(double *)&qword_10147E6C0;
  v30 = objc_allocWithZone((Class)UIStackView);
  sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
  swift_bridgeObjectRetain(v20);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v30, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v32, "setAxis:", 0);
  objc_msgSend(v32, "setAlignment:", 0);
  objc_msgSend(v32, "setDistribution:", 0);
  objc_msgSend(v32, "setSpacing:", v29);
  if (qword_1013DC8B0 != -1)
    swift_once(&qword_1013DC8B0, sub_1004C5444);
  v33 = *(double *)&qword_10147E6D0;
  v34 = objc_msgSend(v32, "heightAnchor");
  v35 = objc_msgSend(v34, "constraintGreaterThanOrEqualToConstant:", v33);

  objc_msgSend(v35, "setActive:", 1);
  swift_bridgeObjectRelease();

  return v32;
}

id sub_100888C34()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  __int16 v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  BOOL IsVoiceOverRunning;
  _BOOL8 v16;
  void *v17;
  id v18;

  v1 = v0;
  sub_1007BF100();
  v3 = v2;
  sub_100888EC8();
  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setText:", v5, swift_bridgeObjectRelease().n128_f64[0]);

  v6 = (void *)objc_opt_self(UIFont);
  v7 = objc_msgSend(v6, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v8 = v7;
  if ((v3 & 0x100) != 0)
  {
    v9 = objc_msgSend(v7, "fontDescriptor");
    v10 = objc_msgSend(v9, "fontDescriptorWithSymbolicTraits:", 1);

    if (v10)
    {
      objc_msgSend(v8, "pointSize");
      v11 = objc_msgSend(v6, "fontWithDescriptor:size:", v10);

      v8 = v10;
    }
    else
    {
      v11 = 0;
    }

    v8 = v11;
  }
  objc_msgSend(v4, "setFont:", v8);

  objc_msgSend(v4, "setTextAlignment:", 2);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v12 = objc_msgSend(v4, "widthAnchor");
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", 71.0);

  objc_msgSend(v13, "setActive:", 1);
  v14 = v4;
  IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  v16 = 0;
  if (!IsVoiceOverRunning)
    v16 = !UIAccessibilityIsSwitchControlRunning();
  objc_msgSend(v14, "setIsAccessibilityElement:", v16);

  objc_msgSend(v14, "setNumberOfLines:", 0);
  objc_msgSend(v14, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v14, "setShowsLargeContentViewer:", 1);
  v17 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel) = v14;
  v18 = v14;

  return v18;
}

uint64_t sub_100888EC8()
{
  double v0;
  __int16 v1;
  unsigned __int8 v2;
  BOOL v3;
  double v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;

  v0 = COERCE_DOUBLE(sub_1007BF100());
  v2 = v1;
  v3 = (v1 & 0xFF00) == 512;
  v4 = v0;
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v13 + 56) = &type metadata for CGFloat;
  *(_QWORD *)(v13 + 64) = sub_1008898AC();
  v14 = 0.0;
  if (((v3 | v2) & 1) == 0)
    v14 = v4;
  *(double *)(v13 + 32) = v14;
  v15 = static String.localizedStringWithFormat(_:_:)(v9, v11, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

id sub_100889040()
{
  uint64_t v0;
  id v1;
  __int16 v2;
  double v3;
  void *v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)CRLStepper), "init");
  objc_msgSend(v1, "setMinValue:", 1.0);
  objc_msgSend(v1, "setMaxValue:", 100.0);
  objc_msgSend(v1, "setIncrement:", 1.0);
  v3 = COERCE_DOUBLE(sub_1007BF100());
  if ((v2 & 1) != 0)
    v3 = 1.0;
  if ((v2 & 0xFF00) == 0x200)
    v3 = 1.0;
  objc_msgSend(v1, "setCurrentValue:", v3);
  objc_msgSend(v1, "setContinuous:", 1);
  objc_msgSend(v1, "addTarget:action:forControlEvents:", v0, "stepperValueDidChange:", 4096);
  objc_msgSend(v1, "addTarget:action:forControlEvents:", v0, "interactionStarted:", 1);
  objc_msgSend(v1, "addTarget:action:forControlEvents:", v0, "interactionEnded:", 64);
  v4 = (void *)sub_1004C9AD8();
  objc_msgSend(v1, "setCrlaxPreferredViewControllerForLargeContent:", v4);

  return v1;
}

void sub_100889194(void *a1)
{
  uint64_t v1;
  double v2;
  void *v3;
  id v4;
  NSString v5;
  id v6;

  if (a1)
  {
    v6 = a1;
    objc_msgSend(v6, "currentValue");
    sub_1007BE83C(v2);
    v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel);
    if (v3)
    {
      v4 = v3;
      sub_100888EC8();
      v5 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "setText:", v5, swift_bridgeObjectRelease().n128_f64[0]);

    }
  }
}

void *sub_100889390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_100704150();
  if (v0)
    sub_100511EB8(v0);
  v1 = sub_100557658();
  if (v1)
  {
    v2 = v1;
    v3 = v1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v1 >> 62)
    {
      if (v1 < 0)
        v3 = v1;
      v7 = type metadata accessor for CRLBoardItem(0);
      v5 = _bridgeCocoaArray<A>(_:)(v3, v7);
    }
    else
    {
      v4 = swift_bridgeObjectRetain(v1);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
      type metadata accessor for CRLBoardItem(0);
      v5 = v2;
    }
    swift_bridgeObjectRelease();
    sub_10051FB14(v5);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100889474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1004CB6E8(a2, (uint64_t)&v18);
  v4 = type metadata accessor for CRLShapeItem(0);
  if ((swift_dynamicCast(v17, &v18, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    goto LABEL_10;
  v5 = (void *)v17[0];
  v6 = sub_100557658();
  if (!v6 || (v7 = sub_100C9D9C0((uint64_t)v5, v6), swift_bridgeObjectRelease(), (v7 & 1) == 0))
  {

LABEL_10:
    v15 = sub_1004C9944(a1, a2);
    return v15 & 1;
  }
  v8 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  v9 = &v8[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  v10 = v8;
  swift_beginAccess(v9, v17, 0, 0);
  v11 = *(_QWORD *)v9;
  if (*(_QWORD *)(*(_QWORD *)v9 + 16))
  {
    v12 = sub_100843260(15);
    if ((v13 & 1) != 0)
      goto LABEL_8;
  }
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 1;
  sub_1004CB800((uint64_t)&v18, (uint64_t *)&unk_1013DFC00);
  v11 = *(_QWORD *)v9;
  if (*(_QWORD *)(*(_QWORD *)v9 + 16) && (v12 = sub_100843260(19), (v14 & 1) != 0))
  {
LABEL_8:
    sub_1004F370C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v18);
    sub_1004CB800((uint64_t)&v18, (uint64_t *)&unk_1013DFC00);

    v15 = 1;
  }
  else
  {
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 1;
    sub_1004CB800((uint64_t)&v18, (uint64_t *)&unk_1013DFC00);

    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100889624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1004CB6E8(a2, (uint64_t)&v18);
  v4 = type metadata accessor for CRLShapeItem(0);
  if (!swift_dynamicCast(v17, &v18, (char *)&type metadata for Any + 8, v4, 6))
    goto LABEL_10;
  v5 = (void *)v17[0];
  v6 = sub_100557658();
  if (!v6 || (v7 = sub_100C9D9C0((uint64_t)v5, v6), swift_bridgeObjectRelease(), (v7 & 1) == 0))
  {

LABEL_10:
    v15 = sub_1004C9944(a1, a2);
    return v15 & 1;
  }
  v8 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  v9 = &v8[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  v10 = v8;
  swift_beginAccess(v9, v17, 0, 0);
  v11 = *(_QWORD *)v9;
  if (*(_QWORD *)(*(_QWORD *)v9 + 16))
  {
    v12 = sub_100843260(15);
    if ((v13 & 1) != 0)
      goto LABEL_8;
  }
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 1;
  sub_1004CB800((uint64_t)&v18, (uint64_t *)&unk_1013DFC00);
  v11 = *(_QWORD *)v9;
  if (*(_QWORD *)(*(_QWORD *)v9 + 16) && (v12 = sub_100843260(19), (v14 & 1) != 0))
  {
LABEL_8:
    sub_1004F370C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v18);
    sub_1004CB800((uint64_t)&v18, (uint64_t *)&unk_1013DFC00);

    v15 = 1;
  }
  else
  {
    v18 = 0;
    v19 = 0;
    v20 = 0;
    v21 = 1;
    sub_1004CB800((uint64_t)&v18, (uint64_t *)&unk_1013DFC00);

    v15 = 0;
  }
  return v15 & 1;
}

void sub_1008897D4()
{
  uint64_t v0;

}

id sub_100889800()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterStrokeBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterStrokeBuilder()
{
  return objc_opt_self(_TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder);
}

uint64_t sub_100889888()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1008898AC()
{
  unint64_t result;

  result = qword_1013F6BD0;
  if (!qword_1013F6BD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1013F6BD0);
  }
  return result;
}

uint64_t sub_1008898F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100889914()
{
  sub_10088817C();
}

uint64_t sub_100889934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
  }
  result = swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v1 + 16);
    v9 = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v8 + 120))(v9, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

_QWORD *sub_100889A4C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v17;
  __n128 v18;
  char v19;
  __n128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  _QWORD *v28;
  _OWORD v29[2];
  __int128 v30;
  ValueMetadata *v31;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = __chkstk_darwin(a1);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("appData"));
  v13 = v12;
  v14 = objc_msgSend(a2, "appDescriptionData");
  v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v31 = (ValueMetadata *)sub_1004B804C(&qword_1013FA4C0);
  *(_QWORD *)&v30 = v15;
  sub_10050CB14(&v30, v29);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  v28 = _swiftEmptyDictionarySingleton;
  sub_1008284A4(v29, v11, v13, isUniquelyReferenced_nonNull_native);
  v17 = v28;
  swift_bridgeObjectRelease();
  v18 = swift_bridgeObjectRelease();
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 16))(a3, a4, v18);
  if (v19 == 6)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"contentDescriptionForStyle(copiedFrom:)", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2, 16, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contentDescriptionForStyle(copiedFrom:)", 39, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2u, 16, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  else
  {
    v21 = v19;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("styles"));
    v24 = v23;
    v31 = &type metadata for CRLStyleCopyingType;
    LOBYTE(v30) = v21;
    sub_10050CB14(&v30, v29);
    v25 = swift_isUniquelyReferenced_nonNull_native(v17);
    v28 = v17;
    sub_1008284A4(v29, v22, v24, v25);
    v17 = v28;
    swift_bridgeObjectRelease();
    v20 = swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, a3, v20);
  return v17;
}

uint64_t sub_100889CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unsigned __int8 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("styles"));
  if (!*(_QWORD *)(a1 + 16) || (v4 = sub_100842E98(v2, v3), (v5 & 1) == 0))
  {
    v9 = 0u;
    v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1004CB6E8(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_7:
    sub_1004D28EC((uint64_t)&v9);
    return 0;
  }
  sub_10050CB14(&v9, v11);
  sub_1004CB6E8((uint64_t)v11, (uint64_t)&v9);
  if (!swift_dynamicCast(&v8, &v9, (char *)&type metadata for Any + 8, &type metadata for CRLStyleCopyingType, 6))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"stringToPrefixForStyleCopyingType(contentDescription:)", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2, 25, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"stringToPrefixForStyleCopyingType(contentDescription:)", 54, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2u, 25, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
    return 0;
  }
  *(_QWORD *)&v9 = v8 + 1;
  v6 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v11);
  return v6;
}

uint64_t type metadata accessor for CRLiOSEmptyFolderViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6C00;
  if (!qword_1013F6C00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLiOSEmptyFolderViewController);
  return result;
}

uint64_t sub_100889EBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[2];

  v2 = qword_10147FB68;
  result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v5, a1 + v2);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100889F3C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSEmptyFolderViewController.swift", 46, 2, 51, 0);
  __break(1u);
}

double sub_100889F94()
{
  uint64_t v0;
  double result;

  sub_10060AA30(v0 + qword_10147FB60);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_1013F6BF8)).n128_u64[0];
  return result;
}

void sub_100889FC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  objc_class *v18;
  objc_super v19;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t)v0 + qword_10147FB60;
  v5 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 4, 5, v5);
  sub_100BD0ED4(v4, (uint64_t)v3);
  LOBYTE(v4) = v6;
  sub_10060AA30((uint64_t)v3);
  if ((v4 & 1) != 0)
  {
    v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v8 = qword_1013DD568;
    v9 = v0;
    if (v8 != -1)
      swift_once(&qword_1013DD568, sub_100946FB4);
    v10 = qword_10147FFC0;
    v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v12 = objc_msgSend(v11, "delegate");

    if (!v12)
    {
      __break(1u);
      return;
    }
    v13 = type metadata accessor for CRLiOSAppDelegate();
    v14 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v12, v13, 0, 0, 0)
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain(v14);
    objc_msgSend(v7, "removeObserver:name:object:", v9, v10, v14, swift_unknownObjectRelease(v12).n128_f64[0]);

    swift_release(v14);
  }
  v15 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v16 = qword_1013DCAB8;
  v17 = v0;
  if (v16 != -1)
    swift_once(&qword_1013DCAB8, sub_100583F20);
  objc_msgSend(v15, "removeObserver:name:object:", v17, qword_10147EA28, 0);

  v18 = (objc_class *)type metadata accessor for CRLiOSEmptyFolderViewController(0);
  v19.receiver = v17;
  v19.super_class = v18;
  objc_msgSendSuper2(&v19, "dealloc");
}

void sub_10088A220(void *a1)
{
  id v1;

  v1 = a1;
  sub_100889FC0();
}

double sub_10088A244(uint64_t a1)
{
  double result;

  sub_10060AA30(a1 + qword_10147FB60);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_1013F6BF8)).n128_u64[0];
  return result;
}

void sub_10088A27C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (objc_class *)type metadata accessor for CRLiOSEmptyFolderViewController(0);
  v19.receiver = v0;
  v19.super_class = v4;
  objc_msgSendSuper2(&v19, "viewDidLoad");
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  v6 = v5;
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = (void *)objc_opt_self(NSNotificationCenter);
  v9 = objc_msgSend(v8, "defaultCenter");
  if (qword_1013DCAB8 != -1)
    swift_once(&qword_1013DCAB8, sub_100583F20);
  objc_msgSend(v9, "addObserver:selector:name:object:", v0, "updateSearchStateWithNotification:", qword_10147EA28, 0);

  v10 = (uint64_t)v0 + qword_10147FB60;
  v11 = sub_1004B804C(&qword_1013E1790);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 4, 5, v11);
  sub_100BD0ED4(v10, (uint64_t)v3);
  LOBYTE(v10) = v12;
  sub_10060AA30((uint64_t)v3);
  if ((v10 & 1) != 0)
  {
    v13 = objc_msgSend(v8, "defaultCenter");
    if (qword_1013DD568 != -1)
      swift_once(&qword_1013DD568, sub_100946FB4);
    v14 = qword_10147FFC0;
    v15 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v16 = objc_msgSend(v15, "delegate");

    if (v16)
    {
      v17 = type metadata accessor for CRLiOSAppDelegate();
      v18 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v16, v17, 0, 0, 0)
                      + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
      swift_retain(v18);
      objc_msgSend(v13, "addObserver:selector:name:object:", v0, "updateICloudOnlineWithNotification:", v14, v18, swift_unknownObjectRelease(v16).n128_f64[0]);

      swift_release(v18);
      return;
    }
LABEL_11:
    __break(1u);
  }
}

void sub_10088A538(void *a1)
{
  id v1;

  v1 = a1;
  sub_10088A27C();

}

void sub_10088A570(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  _WORD v12[8];
  _BYTE v13[40];
  __int128 v14;
  __int128 v15;

  v2 = v1;
  v3 = objc_msgSend(a1, "userInfo");
  if (!v3)
  {
    v14 = 0u;
    v15 = 0u;
LABEL_10:
    sub_1004D28EC((uint64_t)&v14);
    goto LABEL_11;
  }
  v4 = v3;
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  strcpy((char *)v12, "iCloudStatus");
  HIBYTE(v12[6]) = 0;
  v12[7] = -5120;
  AnyHashable.init<A>(_:)(v12, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_1008432BC((uint64_t)v13), (v7 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, &type metadata for CRLiCloudConnectionStatus, 6) & 1) != 0)
  {
    v8 = v13[0];
    v9 = *(_QWORD *)(v2 + qword_1013F6BF8);
    KeyPath = swift_getKeyPath(byte_100F11FF8);
    v11 = swift_getKeyPath(byte_100F12020);
    v13[0] = v8;
    swift_retain(v9);
    static Published.subscript.setter(v13, v9, KeyPath, v11);
    return;
  }
LABEL_11:
  sub_100757E04(&_mh_execute_header, (uint64_t)"updateICloudOnline(notification:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 81, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateICloudOnline(notification:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2u, 81, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
}

void sub_10088A778(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10088A570(v4);

}

void sub_10088A7CC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v2 = v1;
  v4 = objc_msgSend(a1, "userInfo");
  if (!v4)
  {
    v27 = 0u;
    v28 = 0u;
LABEL_10:
    sub_1004D28EC((uint64_t)&v27);
    goto LABEL_11;
  }
  v5 = v4;
  v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v23 = 0x63726165534C5243;
  v24 = 0xEF676E6972745368;
  AnyHashable.init<A>(_:)(&v23, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_1008432BC((uint64_t)&v25), (v8 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)&v25);
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(&v25, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v10 = v25;
    v9 = v26;
    v11 = *(_QWORD *)(v2 + qword_1013F6BF8);
    KeyPath = swift_getKeyPath(byte_100F11FB0);
    v13 = swift_getKeyPath(byte_100F11FD8);
    v25 = v10;
    v26 = v9;
    swift_retain(v11);
    static Published.subscript.setter(&v25, v11, KeyPath, v13);
    goto LABEL_12;
  }
LABEL_11:
  sub_100757E04(&_mh_execute_header, (uint64_t)"updateSearchState(notification:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 87, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSearchState(notification:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2u, 87, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
LABEL_12:
  v14 = objc_msgSend(a1, "userInfo");
  if (!v14)
  {
    v27 = 0u;
    v28 = 0u;
LABEL_21:
    sub_1004D28EC((uint64_t)&v27);
    goto LABEL_22;
  }
  v15 = v14;
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v14, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v23 = 0xD000000000000011;
  v24 = 0x8000000100FD9E90;
  AnyHashable.init<A>(_:)(&v23, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_1008432BC((uint64_t)&v25), (v18 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1004B89A4((uint64_t)&v25);
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_21;
  if ((swift_dynamicCast(&v25, &v27, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
  {
    v19 = v25;
    v20 = *(_QWORD *)(v2 + qword_1013F6BF8);
    v21 = swift_getKeyPath("8#S");
    v22 = swift_getKeyPath(byte_100F11F90);
    LOBYTE(v25) = v19;
    swift_retain(v20);
    static Published.subscript.setter(&v25, v20, v21, v22);
    return;
  }
LABEL_22:
  sub_100757E04(&_mh_execute_header, (uint64_t)"updateSearchState(notification:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 91, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSearchState(notification:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2u, 91, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
}

void sub_10088ABB0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10088A7CC(v4);

}

void sub_10088AC04()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSEmptyFolderViewController", 40, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_10088AC30()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLiOSEmptyFolderViewController", 40, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_10088AC5C()
{
  return type metadata accessor for CRLiOSEmptyFolderViewController(0);
}

uint64_t sub_10088AC64(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;

  v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLEmptyFolderView(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone((Class)type metadata accessor for CRLiOSEmptyFolderViewController(0));
  sub_10088ADD8(a1, (uint64_t)v14 + qword_10147FB60);
  v15 = type metadata accessor for CRLEmptyFolderViewDataSource(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = (char *)v14;
  v17 = sub_100583FE8(a2, a3, a4);
  *(_QWORD *)&v16[qword_1013F6BF8] = v17;
  swift_retain(v17);

  sub_10088ADD8(a1, (uint64_t)v10);
  sub_10088AE24((uint64_t)v10, (uint64_t)v13);
  v18 = &v13[*(int *)(v11 + 20)];
  *(_QWORD *)v18 = CRLAsyncStreamProperty.projectedValue.getter;
  *((_QWORD *)v18 + 1) = v17;
  v18[16] = 0;
  v19 = UIHostingController.init(rootView:)(v13);
  sub_10060AA30(a1);
  return v19;
}

uint64_t sub_10088ADD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CRLAsyncStreamProperty.projectedValue.getter()
{
  uint64_t v0;

  return swift_retain(v0);
}

uint64_t sub_10088AE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10088AE68()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v0 = (void *)objc_opt_self(UIApplication);
  v1 = objc_msgSend(v0, "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (v2)
  {
    v3 = type metadata accessor for CRLiOSAppDelegate();
    v4 = swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
    v7 = objc_msgSend(v0, "sharedApplication");
    if (objc_msgSend(v7, "shouldRecordExtendedLaunchTime")
      && (v5 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime,
          (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime) & 1) == 0))
    {
      v6 = objc_msgSend(v7, "_launchTestName");
      objc_msgSend(v7, "finishedTest:", v6);

      *(_BYTE *)(v4 + v5) = 1;
      swift_unknownObjectRelease(v2);
    }
    else
    {
      swift_unknownObjectRelease(v2);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10088AFEC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  __n128 v5;
  _BOOL4 v7;
  double v8;

  v1 = v0;
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 312);
  v4 = swift_retain(v2);
  LOBYTE(v3) = v3(v4);
  v5 = swift_release(v2);
  if ((v3 & 1) != 0)
    return 0;
  v7 = (*(double (**)(__n128))((swift_isaMask & *v1) + 0x470))(v5) != 0.0;
  return v8 != 0.0 || v7;
}

void sub_10088B0D4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000024, 0x8000000100FAFEC0, "Freeform/CRLMediaItem.swift", 27, 2, 18, 0);
  __break(1u);
}

void sub_10088B13C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(__n128);
  id v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v16)(__n128);
  __n128 v17;
  char v18;
  id v19;

  v2 = v1;
  (*(void (**)(void))((swift_isaMask & *v1) + 0x200))();
  v4 = type metadata accessor for CRLMediaItem(0);
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = (_QWORD *)v5;
    v7 = a1;
    v8 = (void *)sub_100A14240();
    sub_100A14388(v8);
    v9 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v10 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v11 = *(uint64_t (**)(__n128))(*(_QWORD *)v10 + 384);
    v12 = v7;
    v13 = swift_retain(v10);
    v14 = (void *)v11(v13);

    swift_release(v10);
    sub_100776C40(v14);

    v15 = *(_QWORD *)((char *)v6 + v9);
    v16 = *(uint64_t (**)(__n128))(*(_QWORD *)v15 + 336);
    v19 = v12;
    v17 = swift_retain(v15);
    LOBYTE(v12) = v16(v17);

    swift_release(v15);
    sub_100776A8C(v12 & 1);
    v18 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x4B0))();
    (*(void (**)(_QWORD))((swift_isaMask & *v2) + 0x4B8))(v18 & 1);

  }
}

float sub_10088B374()
{
  return 0.0;
}

uint64_t sub_10088B38C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping);
}

uint64_t sub_10088B3AC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping) = result;
  return result;
}

id sub_10088B3D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMediaItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10088B408()
{
  return type metadata accessor for CRLMediaItem(0);
}

uint64_t type metadata accessor for CRLMediaItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6C78;
  if (!qword_1013F6C78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLMediaItem);
  return result;
}

uint64_t sub_10088B44C(uint64_t a1)
{
  void *v2;

  v2 = &unk_100F12058;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 1120);
}

void sub_10088B4F0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(__n128);
  __n128 v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v15;
  double v16;
  id v17;
  unint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[4];

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v6 = *(uint64_t (**)(__n128))(*(_QWORD *)v5 + 288);
  v7 = swift_retain(v5);
  v21 = (id)v6(v7);
  objc_msgSend(v21, "size", swift_release(v5).n128_f64[0]);
  v9 = v8;
  v11 = v10;
  v12 = sub_100062E10(v8, v10, a1, a2);
  if (v12 < v9 || v13 < v11)
  {
    v15 = v12;
    v16 = v13;
    v17 = objc_msgSend(v21, "mutableCopy");
    _bridgeAnyObjectToAny(_:)(v23, v17);
    swift_unknownObjectRelease(v17);
    v18 = sub_10088B6E8();
    if (swift_dynamicCast(&v22, v23, (char *)&type metadata for Any + 8, v18, 6))
    {
      v19 = v22;
      objc_msgSend(v22, "setSize:", v15, v16);
      v20 = v19;
      sub_100776700(v20);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMediaItem.swift", 83, 2, 95, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMediaItem.swift", 83, 2u, 95, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    }
  }
  else
  {

  }
}

unint64_t sub_10088B6E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E4C50;
  if (!qword_1013E4C50)
  {
    v1 = objc_opt_self(CRLCanvasMutableInfoGeometry);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E4C50);
  }
  return result;
}

uint64_t sub_10088B724()
{
  uint64_t v0;

  sub_1007BF910();
  v0 = swift_allocObject(&unk_101283E48, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10088B9F8, v0);
}

double sub_10088B7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  void *v13;
  char v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterFileBuilder_fileDataProvider);

    v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    v8 = type metadata accessor for CRLFileEditor();
    v10 = v8;
    if (v8)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v8, v9);
    else
      ObjCClassFromMetadata = 0;
    v12 = objc_msgSend(v7, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    v13 = (void *)swift_dynamicCastClass(v12, v10);
    if (v13)
      objc_msgSend(v13, "showMediaReplaceUI:", v6);

    *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_10088B898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v9;
  _BYTE v10[32];

  sub_1004CB6E8(a2, (uint64_t)v10);
  v4 = type metadata accessor for CRLFileItem(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    goto LABEL_5;
  v5 = v9;
  v6 = sub_100704150();
  if (!v6)
  {

LABEL_5:
    v7 = sub_100781048(a1, a2);
    return v7 & 1;
  }
  v7 = sub_100622190(v5, v6);

  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_10088B964()
{
  uint64_t v0;

}

id sub_10088B974()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterFileBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterFileBuilder()
{
  return objc_opt_self(_TtC8Freeform30CRLiOSMiniFormatterFileBuilder);
}

uint64_t sub_10088B9D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10088B9F8(uint64_t a1)
{
  uint64_t v1;

  return sub_10088B7B8(a1, v1);
}

id sub_10088BA00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  void *v6;
  char *v12;
  objc_class *v13;
  char *v14;
  id v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v21;
  objc_super v22;

  v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterFileDataProvider());
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v13 = (objc_class *)type metadata accessor for CRLMiniFormatterDataProvider();
  v22.receiver = v12;
  v22.super_class = v13;
  v14 = v6;
  v15 = a5;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterFileBuilder_fileDataProvider] = objc_msgSendSuper2(&v22, "init");

  v16 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterMediaDataProvider());
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v15;
  v21.receiver = v16;
  v21.super_class = v13;
  v17 = v14;
  v18 = v15;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider] = objc_msgSendSuper2(&v21, "init");

  return sub_1004CA6E8(a1, a2, a3, a4, v18, a6);
}

uint64_t sub_10088BB24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  _BYTE *v63;
  __n128 v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _OWORD v87[2];
  uint64_t v88;

  v79 = a3;
  v75 = type metadata accessor for CRLCollaboratorCursor(0);
  __chkstk_darwin(v75);
  v81 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v76 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v78 = (char *)&v69 - v9;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v10);
  v77 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v85 = (unint64_t)&v69 - v13;
  v14 = type metadata accessor for CRLProto_Data(0);
  v83 = *(_QWORD *)(v14 - 8);
  v84 = v14;
  __chkstk_darwin(v14);
  v80 = (uint64_t *)((char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v82 = (uint64_t *)((char *)&v69 - v17);
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v69 - v24;
  v26 = type metadata accessor for BinaryDecodingOptions(0, v23);
  __chkstk_darwin(v26);
  v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v69 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = 0;
  memset(v87, 0, sizeof(v87));
  v32 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v32);
  v33 = sub_10088C620();
  v34 = v86;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v87, 0, v28, v29, v33);
  if (v34)
    return sub_1004BBBC8(a1, a2);
  v70 = v21;
  v72 = v19;
  v73 = v25;
  v71 = v18;
  v86 = a1;
  v36 = a2;
  v37 = v85;
  sub_1004CB7BC((uint64_t)&v31[*(int *)(v29 + 24)], v85, (uint64_t *)&unk_1013E16F0);
  v38 = v84;
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  v40 = v39(v37, 1, v84);
  v74 = (uint64_t *)v31;
  v41 = v82;
  if ((_DWORD)v40 == 1)
  {
    *(_OWORD *)v82 = xmmword_100EF78C0;
    UnknownStorage.init()(v40);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(v37, (uint64_t)v82, type metadata accessor for CRLProto_Data);
  }
  v42 = *v41;
  v43 = v41[1];
  sub_1004BE310(*v41, v43);
  sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v42, v43);
  v44 = v77;
  sub_1004CB7BC((uint64_t)v74 + *(int *)(v29 + 28), v77, (uint64_t *)&unk_1013E16F0);
  v45 = v39(v44, 1, v38);
  v46 = v36;
  v47 = v80;
  if ((_DWORD)v45 == 1)
  {
    *(_OWORD *)v80 = xmmword_100EF78C0;
    UnknownStorage.init()(v45);
    sub_1004CB800(v44, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(v44, (uint64_t)v80, type metadata accessor for CRLProto_Data);
  }
  v48 = v71;
  v49 = (uint64_t)v81;
  v50 = *v47;
  v51 = v47[1];
  sub_1004BE310(*v47, v51);
  sub_1004B84A4((uint64_t)v47, type metadata accessor for CRLProto_Data);
  v52 = objc_allocWithZone((Class)type metadata accessor for CRLPersistableSelectionPath(0));
  v53 = sub_1005AD734(v50, v51);
  v54 = (uint64_t)v78;
  v55 = v79;
  v56 = v53;
  v85 = v46;
  v57 = v72;
  v58 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v78, v73, v48);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v48);
  v59 = *v74;
  v60 = v76;
  sub_1004CB7BC(v54, v76, (uint64_t *)&unk_1013E1A50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v60, 1, v48) == 1)
  {
    v61 = v56;
    sub_1004CB800(v60, (uint64_t *)&unk_1013E1A50);
    v62 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v62, 0, 0);
    *v63 = 0;
    swift_willThrow(v64);

    sub_1004CB800(v54, (uint64_t *)&unk_1013E1A50);
    sub_1004BBBC8(v86, v85);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v48);
  }
  else
  {
    v65 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
    v66 = v70;
    v65(v70, v60, v48);
    v67 = v56;
    sub_1004CB800(v54, (uint64_t *)&unk_1013E1A50);
    v65((char *)v49, (uint64_t)v66, v48);
    v68 = v75;
    *(_QWORD *)(v49 + *(int *)(v75 + 24)) = v59;
    *(_QWORD *)(v49 + *(int *)(v68 + 20)) = v67;
    sub_1004B84E0(v49, v55, type metadata accessor for CRLCollaboratorCursor);
    sub_1004BBBC8(v86, v85);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v48);
  }
  return sub_1004B84A4((uint64_t)v74, type metadata accessor for CRLProto_CollaboratorCursor);
}

uint64_t sub_10088C174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  __int128 *v47;
  uint64_t (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t (*v55)(void);
  __int128 v56;
  uint64_t v57;

  v52 = a1;
  v1 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v1);
  v50 = (uint64_t)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - v4;
  v6 = type metadata accessor for CRLProto_Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v47 = (__int128 *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  v14 = (__int128 *)((char *)&v46 - v13);
  v15 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = 0;
  UnknownStorage.init()(v18);
  v19 = (uint64_t)v17 + *(int *)(v15 + 24);
  v20 = *(uint64_t (**)(void))(v7 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v19, 1, 1, v6);
  v49 = v15;
  v21 = *(int *)(v15 + 28);
  v54 = v17;
  v51 = (uint64_t)v17 + v21;
  v22 = v20();
  v56 = xmmword_100EF78C0;
  *v14 = xmmword_100EF78C0;
  UnknownStorage.init()(v22);
  sub_1004CB800(v19, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v14, v19, type metadata accessor for CRLProto_Data);
  v55 = v20;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v20)(v19, 0, 1, v6);
  v23 = (uint64_t)v5;
  v24 = UUID.crl_data()();
  v26 = v25;
  sub_1004CB7BC(v19, v23, (uint64_t *)&unk_1013E16F0);
  v48 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v27 = v48(v23, 1, v6);
  if ((_DWORD)v27 == 1)
  {
    *(_OWORD *)v11 = v56;
    UnknownStorage.init()(v27);
    sub_1004CB800(v23, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(v23, (uint64_t)v11, type metadata accessor for CRLProto_Data);
  }
  sub_1004BBBC8(*(_QWORD *)v11, *((_QWORD *)v11 + 1));
  *(_QWORD *)v11 = v24;
  *((_QWORD *)v11 + 1) = v26;
  sub_1004CB800(v19, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v11, v19, type metadata accessor for CRLProto_Data);
  v28 = v55;
  v29 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v55)(v19, 0, 1, v6);
  *v14 = v56;
  UnknownStorage.init()(v29);
  v30 = v51;
  sub_1004CB800(v51, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v14, v30, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v28)(v30, 0, 1, v6);
  v31 = type metadata accessor for CRLCollaboratorCursor(0);
  v32 = v57;
  v33 = *(_QWORD *)(v57 + *(int *)(v31 + 20));
  v34 = v53;
  v35 = sub_1005AEE24(v52);
  v37 = v54;
  if (v34)
  {
    sub_1004B84A4((uint64_t)v54, type metadata accessor for CRLProto_CollaboratorCursor);
  }
  else
  {
    v38 = v35;
    v39 = v36;
    v40 = v50;
    sub_1004CB7BC(v30, v50, (uint64_t *)&unk_1013E16F0);
    v41 = v48(v40, 1, v6);
    if ((_DWORD)v41 == 1)
    {
      v42 = v47;
      *v47 = v56;
      UnknownStorage.init()(v41);
      sub_1004CB800(v50, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      v43 = v40;
      v42 = v47;
      sub_1004B84E0(v43, (uint64_t)v47, type metadata accessor for CRLProto_Data);
    }
    sub_1004BBBC8(*(_QWORD *)v42, *((_QWORD *)v42 + 1));
    *(_QWORD *)v42 = v38;
    *((_QWORD *)v42 + 1) = v39;
    sub_1004CB800(v30, (uint64_t *)&unk_1013E16F0);
    sub_1004B84E0((uint64_t)v42, v30, type metadata accessor for CRLProto_Data);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v55)(v30, 0, 1, v6);
    *v37 = *(_QWORD *)(v32 + *(int *)(v31 + 24));
    v44 = sub_10088C620();
    v33 = Message.serializedData(partial:)(0, v49, v44);
    sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLProto_CollaboratorCursor);
  }
  return v33;
}

uint64_t type metadata accessor for CRLCollaboratorCursor(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6D18;
  if (!qword_1013F6D18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCollaboratorCursor);
  return result;
}

unint64_t sub_10088C620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F6CB8;
  if (!qword_1013F6CB8)
  {
    v1 = type metadata accessor for CRLProto_CollaboratorCursor(255);
    result = swift_getWitnessTable(&unk_100F256F8, v1);
    atomic_store(result, (unint64_t *)&qword_1013F6CB8);
  }
  return result;
}

uint64_t *sub_10088C668(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v11 = v10;
  }
  return a1;
}

void sub_10088C6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t sub_10088C740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v10 = v9;
  return a1;
}

uint64_t sub_10088C7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10088C81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_10088C880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10088C8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10088C8FC);
}

uint64_t sub_10088C8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10088C978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10088C984);
}

uint64_t sub_10088C984(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_10088C9FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_10088CD10(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  objc_super v10;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_pkRecognitionController] = 0;
  v5 = &v2[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_cachedPKDrawing];
  v6 = type metadata accessor for PKDrawing(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = &v2[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_unrotatedFrameAtDataDetection];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v8 = &v2[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_unscaledFrameAtDataDetection];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_rotationAtDataDetection] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = _swiftEmptyDictionarySingleton;
  *(_DWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return objc_msgSendSuper2(&v10, "init");
}

void sub_10088CE34()
{
  objc_class *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  char *v5;

  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_pkRecognitionController] = 0;
  v2 = &v1[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_cachedPKDrawing];
  v3 = type metadata accessor for PKDrawing(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = &v1[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_unrotatedFrameAtDataDetection];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v5 = &v1[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_unscaledFrameAtDataDetection];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_rotationAtDataDetection] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000003CLL, 0x8000000100FDA480, "Freeform/CRLFreehandDrawingItem.swift", 37, 2, 34, 0);
  __break(1u);
}

void sub_10088D060(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  CKRecordID v12;
  Swift::String v13;
  char v14;
  _BYTE v15[24];

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v8 = type metadata accessor for CRLFreehandItemData(0);
    v9 = swift_dynamicCastClassUnconditional(v7, v8, 0, 0, 0) + qword_101481578;
    swift_beginAccess(v9, v15, 33, 0);
    v14 = a1 & 1;
    type metadata accessor for CRLFreehandDrawingCRDTData(0);
    swift_retain(v7);
    v10 = sub_1004B804C((uint64_t *)&unk_1013F5590);
    CRRegister.wrappedValue.setter(&v14, v10, v11);
    swift_endAccess(v15);
    swift_release(v7);
  }
}

void *sub_10088D394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(_BYTE *, _QWORD);
  uint64_t v61;
  void *v62;
  id v63;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE v82[32];
  _BYTE v83[24];
  char v84[24];
  char v85[24];
  char v86[24];
  uint64_t v87;

  v78 = a2;
  v69 = a1;
  v3 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v3);
  v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v67 = (uint64_t)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v66 = (char *)&v65 - v8;
  __chkstk_darwin(v9);
  v71 = (uint64_t)&v65 - v10;
  __chkstk_darwin(v11);
  v72 = (uint64_t)&v65 - v12;
  __chkstk_darwin(v13);
  v68 = (uint64_t)&v65 - v14;
  __chkstk_darwin(v15);
  v80 = (uint64_t)&v65 - v16;
  v75 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v75);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v19);
  v76 = (uint64_t)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v65 - v22;
  v24 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  v81 = v24;
  __chkstk_darwin(v24);
  v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v65 - v28;
  v30 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v31 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v32 = type metadata accessor for CRLFreehandItemData(0);
  v33 = swift_dynamicCastClassUnconditional(v31, v32, 0, 0, 0);
  v34 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 632);
  swift_beginAccess(v34, v86, 0, 0);
  sub_1004CB7BC(v34, (uint64_t)v26, (uint64_t *)&unk_1013F02C0);
  v35 = sub_100890010();
  CRStruct_6.copy(renamingReferences:)(0, v24, v35);
  sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_1013F02C0);
  v36 = v87;
  v37 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v87 + v30), v32, 0, 0, 0) + qword_101481578;
  swift_beginAccess(v37, v85, 0, 0);
  sub_1004B8460(v37, (uint64_t)v23, type metadata accessor for CRLFreehandDrawingCRDTData);
  *(_QWORD *)&v18[*(int *)(v75 + 20)] = _swiftEmptyDictionarySingleton;
  v38 = type metadata accessor for UUID(0);
  v39 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v70 = v38;
  CROrderedSet.init()(v38, &protocol witness table for UUID, v39);
  sub_10089005C((uint64_t)v18, (uint64_t)v23);
  v74 = v29;
  sub_1004CB7BC((uint64_t)v29, (uint64_t)v26, (uint64_t *)&unk_1013F02C0);
  v73 = v23;
  v40 = v76;
  sub_1004B8460((uint64_t)v23, v76, type metadata accessor for CRLFreehandDrawingCRDTData);
  v41 = (_QWORD *)swift_dynamicCastClassUnconditional(*(_QWORD *)(v36 + v30), v32, 0, 0, 0);
  v42 = v41[5];
  v75 = v41[4];
  v44 = v41[2];
  v43 = v41[3];
  v45 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  sub_1004B8460(v40, v45 + qword_101481578, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B8460(v40, (uint64_t)v18, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004B84A4(v40, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B84E0((uint64_t)v18, v45 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938((uint64_t)v26, v45 + *(_QWORD *)(*(_QWORD *)v45 + 632), (uint64_t *)&unk_1013F02C0);
  v46 = v43;
  v47 = v80;
  v48 = sub_1005E1000(v46, v75, v42, v44);
  v49 = (uint64_t)v48 + *(_QWORD *)(*(_QWORD *)v48 + 632);
  swift_beginAccess(v49, v84, 0, 0);
  sub_1004CB7BC(v49, (uint64_t)v26, (uint64_t *)&unk_1013F02C0);
  swift_retain(v48);
  v50 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  v51 = (uint64_t)v77;
  CRRegister.wrappedValue.getter(v50);
  sub_1004CB7BC(v51, v47, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4(v51, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_1013F02C0);
  swift_release(v48);
  v52 = v79;
  sub_100A10D98(v78);
  if (v52)
  {
    swift_release(v48);
    sub_1004CB800(v47, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v74, (uint64_t *)&unk_1013F02C0);
    sub_1004B84A4((uint64_t)v73, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  else
  {
    v53 = (uint64_t)v66;
    v54 = v72;
    sub_1004CB7BC(v69, v72, (uint64_t *)&unk_1013E1A50);
    sub_1004CB7BC(v47, v71, (uint64_t *)&unk_1013E1A50);
    v55 = *(_QWORD *)(v70 - 8);
    v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 48))(v54, 1);
    v57 = v68;
    if (v56 == 1)
    {
      sub_1004C4938(v71, v68, (uint64_t *)&unk_1013E1A50);
      swift_retain(v48);
      sub_1004CB800(v72, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v48);
      sub_1004CB800(v71, (uint64_t *)&unk_1013E1A50);
      v58 = v70;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v57, v72, v70);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v58);
    }
    sub_1004CB7BC(v57, v53, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v49, v83, 33, 0);
    v59 = v67;
    sub_1004CB7BC(v53, v67, (uint64_t *)&unk_1013E1A50);
    v60 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v82, v50);
    sub_100582338(v59, v61, (uint64_t *)&unk_1013E1A50);
    v60(v82, 0);
    sub_1004CB800(v53, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v83);
    sub_1004CB800(v57, (uint64_t *)&unk_1013E1A50);
    swift_release(v48);
    v62 = *(void **)(v87 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    v63 = objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem(0));
    v48 = sub_10088CD10((uint64_t)v62, (uint64_t)v48);
    sub_1004CB800(v80, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v74, (uint64_t *)&unk_1013F02C0);
    sub_1004B84A4((uint64_t)v73, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  return v48;
}

void sub_10088DB64(void *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for CRLFreehandDrawingShapeItem(0);
  if ((objc_msgSend(a1, "isKindOfClass:", swift_getObjCClassFromMetadata(v2, v3)) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_willAddNewItem(item:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 94, "All items inserted into a freehand drawing should be freehand drawing shapes.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_willAddNewItem(item:)", 22, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2u, 94, (uint64_t)"All items inserted into a freehand drawing should be freehand drawing shapes.", 77, 2u);
  }
}

id sub_10088DD54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v3 = type metadata accessor for CRLFreehandItemData(0);
  swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0);
  swift_retain(v2);
  v4 = sub_100D60F8C(0);
  swift_release(v2);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v6 = objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem(0));
  return sub_10088CD10((uint64_t)v5, (uint64_t)v4);
}

uint64_t sub_10088DE00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t result;
  CKRecordID v8;
  Swift::String v9;

  v3 = type metadata accessor for CRLFreehandDrawingItem(0);
  v4 = swift_dynamicCastClass(a1, v3);
  if (v4)
  {
    v5 = (void *)v4;
    swift_unknownObjectRetain(a1);
    v6 = sub_10088F640(v5, v1);
    swift_unknownObjectRelease(a1);
    return v6;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 114, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2u, 114, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v8, v9);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10088DF48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  double *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v53;
  unint64_t v54;
  double *v55;
  uint64_t result;
  CKRecordID v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[24];
  char v70[24];

  v3 = sub_1004B804C(&qword_1013F6D98);
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  __chkstk_darwin(v3);
  v61 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v60 = (uint64_t)&v59 - v6;
  __chkstk_darwin(v7);
  v62 = (uint64_t)&v59 - v8;
  v65 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v65);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v59 - v12;
  v14 = sub_1004B804C(&qword_1013F6DA0);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v59 - v18;
  v20 = type metadata accessor for CRLFreehandDrawingItem(0);
  v21 = swift_dynamicCastClass(a1, v20);
  if (v21)
  {
    v22 = (char *)v21;
    v66 = a1;
    swift_unknownObjectRetain(a1);
    v67 = sub_10088F9A8(v22, v1);
    v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v24 = type metadata accessor for CRLFreehandItemData(0);
    v25 = swift_dynamicCastClassUnconditional(v23, v24, 0, 0, 0) + qword_101481578;
    swift_beginAccess(v25, v70, 0, 0);
    sub_1004B8460(v25, (uint64_t)v13, type metadata accessor for CRLFreehandDrawingCRDTData);
    v26 = swift_dynamicCastClassUnconditional(*(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData], v24, 0, 0, 0)+ qword_101481578;
    swift_beginAccess(v26, v69, 0, 0);
    sub_1004B8460(v26, (uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
    v27 = sub_1004B7878(&qword_1013F6DA8, type metadata accessor for CRLFreehandDrawingCRDTData, (uint64_t)&unk_100F365A8);
    CRType.observableDifference(from:)(v10, v65, v27);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1004CB7BC((uint64_t)v19, (uint64_t)v16, &qword_1013F6DA0);
    v28 = v64;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v16, 1, v64) == 1)
    {
      sub_1004CB800((uint64_t)v16, &qword_1013F6DA0);
      v29 = _swiftEmptyArrayStorage;
      v30 = v66;
      v31 = v67;
      if (!*(_QWORD *)&_swiftEmptyArrayStorage[2])
        goto LABEL_20;
    }
    else
    {
      v65 = (uint64_t)v19;
      v32 = *(int *)(v28 + 48);
      v33 = v62;
      v34 = v62 + v32;
      v35 = *(int *)(v28 + 64);
      v36 = v62 + v35;
      v37 = (uint64_t)&v16[v32];
      v38 = (uint64_t)&v16[v35];
      sub_1004C4938((uint64_t)v16, v62, &qword_1013F0340);
      sub_1004C4938(v37, v34, &qword_1013E9C40);
      sub_1004C4938(v38, v36, &qword_1013E9C40);
      v39 = v60;
      v40 = v60 + *(int *)(v28 + 48);
      v41 = v28;
      v42 = v60 + *(int *)(v28 + 64);
      sub_1004CB7BC(v33, v60, &qword_1013F0340);
      sub_1004CB7BC(v34, v40, &qword_1013E9C40);
      sub_1004CB7BC(v36, v42, &qword_1013E9C40);
      v43 = sub_1004B804C(&qword_1013F0338);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v39, 1, v43) == 1)
      {
        sub_1004CB800(v42, &qword_1013E9C40);
        sub_1004CB800(v40, &qword_1013E9C40);
        sub_1004CB800(v39, &qword_1013F0340);
        v29 = _swiftEmptyArrayStorage;
        v31 = v67;
      }
      else
      {
        sub_1004CB800(v39, &qword_1013F0340);
        sub_1004CB800(v42, &qword_1013E9C40);
        sub_1004CB800(v40, &qword_1013E9C40);
        v29 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
        v45 = *((_QWORD *)v29 + 2);
        v44 = *((_QWORD *)v29 + 3);
        v31 = v67;
        if (v45 >= v44 >> 1)
          v29 = (double *)sub_100D0EF94((_QWORD *)(v44 > 1), v45 + 1, 1, v29);
        *((_QWORD *)v29 + 2) = v45 + 1;
        v46 = &v29[2 * v45];
        v46[4] = -2.31584178e77;
        *((_QWORD *)v46 + 5) = 0x8000000100FDA300;
        if (!*(_QWORD *)(v31 + 16) || (sub_1008431EC(1), (v47 & 1) == 0))
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 142, "if the containerCRDTData has changed, super should have built keys for it already", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
          v31 = v67;
          v33 = v62;
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2u, 142, (uint64_t)"if the containerCRDTData has changed, super should have built keys for it already", 81, 2u);
        }
      }
      v48 = v61;
      v49 = v61 + *(int *)(v41 + 48);
      v50 = v61 + *(int *)(v41 + 64);
      sub_1004CB7BC(v33, v61, &qword_1013F0340);
      sub_1004CB7BC(v34, v49, &qword_1013E9C40);
      sub_1004CB7BC(v36, v50, &qword_1013E9C40);
      v51 = type metadata accessor for CRValueObservableDifference(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v49, 1, v51) == 1)
      {
        sub_1004CB800(v33, &qword_1013F6D98);
        sub_1004CB800(v50, &qword_1013E9C40);
        sub_1004CB800(v49, &qword_1013E9C40);
        sub_1004CB800(v48, &qword_1013F0340);
        v19 = (char *)v65;
        v30 = v66;
        if (!*((_QWORD *)v29 + 2))
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease(v30);
          goto LABEL_21;
        }
      }
      else
      {
        sub_1004CB800(v49, &qword_1013E9C40);
        sub_1004CB800(v50, &qword_1013E9C40);
        sub_1004CB800(v48, &qword_1013F0340);
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
          v29 = (double *)sub_100D0EF94(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
        v19 = (char *)v65;
        v30 = v66;
        v54 = *((_QWORD *)v29 + 2);
        v53 = *((_QWORD *)v29 + 3);
        if (v54 >= v53 >> 1)
          v29 = (double *)sub_100D0EF94((_QWORD *)(v53 > 1), v54 + 1, 1, v29);
        *((_QWORD *)v29 + 2) = v54 + 1;
        v55 = &v29[2 * v54];
        v55[4] = -2.31584178e77;
        *((_QWORD *)v55 + 5) = 0x8000000100FC01C0;
        sub_1004CB800(v33, &qword_1013F6D98);
        if (!*((_QWORD *)v29 + 2))
          goto LABEL_20;
      }
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
    v68 = v31;
    sub_100825A20((uint64_t)v29, 9, isUniquelyReferenced_nonNull_native);
    v31 = v68;
    swift_unknownObjectRelease(v30);
    swift_bridgeObjectRelease();
LABEL_21:
    sub_1004CB800((uint64_t)v19, &qword_1013F6DA0);
    return v31;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 132, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2u, 132, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v57, v58);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_10088E784(uint64_t a1)
{
  sub_10073FFC0(a1);
}

void sub_10088E798(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_10088E804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _BYTE v33[32];
  _BYTE v34[24];
  _QWORD v35[26];

  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xED00006174614472, 0x646E616865657266, 0xEC00000061746144, 0);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    sub_100740308(v1, v2, v3);
    return;
  }
  v6 = *(_QWORD *)(v2 + 16);
  if (v6)
  {
    v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    swift_bridgeObjectRetain(v2);
    for (i = (_QWORD *)(v2 + 40); ; i += 2)
    {
      v10 = *(i - 1);
      v9 = *i;
      if ((v10 != 0xD000000000000011 || v9 != 0x8000000100FDA300)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x8000000100FDA300, *(i - 1), *i, 0) & 1) == 0)
      {
        if ((v10 != 0xD000000000000013 || v9 != 0x8000000100FC01C0)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x8000000100FC01C0, v10, v9, 0) & 1) == 0)
        {
          v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v28, v4 - 160);
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
          *(_QWORD *)(inited + 32) = v10;
          *(_QWORD *)(inited + 40) = v9;
          swift_bridgeObjectRetain(v9);
          swift_setDeallocating(inited);
          v30 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v30);
        }
        goto LABEL_6;
      }
      v11 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
      v12 = *(double **)(v0 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
      if (!v12)
      {
        sub_100740DA4();
        v12 = *(double **)(v0 + v11);
      }
      if (v12)
        v13 = v12;
      else
        v13 = _swiftEmptyArrayStorage;
      v35[3] = sub_1004B804C(&qword_1013F0310);
      v35[0] = v13;
      swift_beginAccess(v7, v34, 33, 0);
      sub_1004CB7BC((uint64_t)v35, (uint64_t)v33, &qword_1013E0230);
      swift_bridgeObjectRetain(v12);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
      v15 = *v7;
      v32 = (_QWORD *)*v7;
      *v7 = 0x8000000000000000;
      v17 = sub_100843260(4);
      v18 = *(_QWORD *)(v15 + 16);
      v19 = (v16 & 1) == 0;
      v20 = v18 + v19;
      if (__OFADD__(v18, v19))
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        type metadata accessor for CRLChangeProperty(0);
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v31);
        __break(1u);
        JUMPOUT(0x10088ECE8);
      }
      v21 = v16;
      if (*(_QWORD *)(v15 + 24) >= v20)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v24 = v32;
          if ((v16 & 1) == 0)
            goto LABEL_22;
        }
        else
        {
          sub_10082C8D0();
          v24 = v32;
          if ((v21 & 1) == 0)
            goto LABEL_22;
        }
      }
      else
      {
        sub_100814B68(v20, isUniquelyReferenced_nonNull_native);
        v22 = sub_100843260(4);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_35;
        v17 = v22;
        v24 = v32;
        if ((v21 & 1) == 0)
        {
LABEL_22:
          v24[(v17 >> 6) + 8] |= 1 << v17;
          *(_QWORD *)(v24[6] + 8 * v17) = 4;
          sub_1004C4938((uint64_t)v33, v24[7] + 32 * v17, &qword_1013E0230);
          v25 = v24[2];
          v26 = __OFADD__(v25, 1);
          v27 = v25 + 1;
          if (v26)
            goto LABEL_34;
          v24[2] = v27;
          goto LABEL_5;
        }
      }
      sub_100582338((uint64_t)v33, v24[7] + 32 * v17, &qword_1013E0230);
LABEL_5:
      *v7 = v24;
      swift_bridgeObjectRelease();
      swift_endAccess(v34);
      sub_1004CB800((uint64_t)v35, &qword_1013E0230);
LABEL_6:
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_10088ED18()
{
  uint64_t v0;

  return sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_cachedPKDrawing, &qword_1013F07A0);
}

id sub_10088ED50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFreehandDrawingItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10088EDC8()
{
  return type metadata accessor for CRLFreehandDrawingItem(0);
}

uint64_t type metadata accessor for CRLFreehandDrawingItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F6D80;
  if (!qword_1013F6D80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFreehandDrawingItem);
  return result;
}

void sub_10088EE0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  sub_10088EE9C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100F12110;
    v4[3] = &unk_100F12110;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 1568);
  }
}

void sub_10088EE9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013F6D90)
  {
    v2 = type metadata accessor for PKDrawing(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013F6D90);
  }
}

id sub_10088EEF0(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  _QWORD *v29;
  id v30;
  double v31;
  float v32;
  double v33;
  float v34;
  double v35;
  float v36;
  double v37;
  float v38;
  double v39;
  float v40;
  unsigned int v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  id v62;
  id v63;
  uint64_t ObjectType;
  uint64_t v66;
  unsigned int v67;
  unsigned int v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _OWORD v88[8];
  _BYTE v89[136];

  v82 = a1;
  v76 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v76);
  v80 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v77);
  v79 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v81 = (char *)&v66 - v9;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v74 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v13);
  v78 = (uint64_t)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v86 = (uint64_t)&v66 - v16;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v17);
  v71 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v66 - v20;
  v70 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v70);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v85 = (uint64_t)&v66 - v25;
  v83 = v3;
  if (a3)
  {
    v26 = v3;
    v27 = a3;
  }
  else
  {
    v28 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    v29 = v3;
    v27 = objc_msgSend(v28, "init");
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v21, a2, v10);
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v69(v21, 0, 1, v10);
  v75 = a3;
  v30 = v27;
  objc_msgSend(v30, "position");
  v32 = v31;
  v34 = v33;
  objc_msgSend(v30, "size");
  v36 = v35;
  v38 = v37;
  objc_msgSend(v30, "angle");
  v40 = v39;
  v68 = objc_msgSend(v30, "widthValid");
  v41 = objc_msgSend(v30, "heightValid");
  v73 = v11;
  v67 = v41;
  v42 = objc_msgSend(v30, "horizontalFlip");
  v84 = v10;
  v43 = v42;
  v44 = objc_msgSend(v30, "verticalFlip");
  v72 = a2;
  v45 = v44;

  v46 = v71;
  sub_1004CB7BC((uint64_t)v21, v71, (uint64_t *)&unk_1013E1A50);
  v69(v23, 1, 1, v10);
  v47 = v70;
  *(_QWORD *)&v23[*(int *)(v70 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338(v46, (uint64_t)v23, (uint64_t *)&unk_1013E1A50);
  v48 = &v23[*(int *)(v47 + 20)];
  *(float *)v48 = v32;
  *((float *)v48 + 1) = v34;
  *((float *)v48 + 2) = v36;
  *((float *)v48 + 3) = v38;
  *((float *)v48 + 4) = v40;
  v48[20] = v68;
  v48[21] = v67;
  v48[22] = v43;
  v48[23] = v45;
  *((_QWORD *)v48 + 3) = _swiftEmptyDictionarySingleton;
  v49 = v85;
  sub_1004B84E0((uint64_t)v23, v85, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460(v49, (uint64_t)v23, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004C3A10(v88);
  v50 = sub_1004C4938((uint64_t)v88, (uint64_t)v89, (uint64_t *)&unk_1013F02D0);
  v51 = (uint64_t)v74;
  UUID.init()(v50);
  v52 = v86;
  sub_100D5EF54(v51, (uint64_t)v23, 0, 0, 0, 0xE000000000000000, (uint64_t)v89, v86);
  v53 = (uint64_t)v81;
  *(_QWORD *)&v81[*(int *)(v77 + 28)] = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v53 + *(int *)(v76 + 20)) = _swiftEmptyDictionarySingleton;
  v54 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  CROrderedSet.init()(v84, &protocol witness table for UUID, v54);
  v87 = 0;
  CRRegister.init(wrappedValue:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v87 = 0;
  CRRegister.init(wrappedValue:)(&v87, &type metadata for Bool, &protocol witness table for Bool);
  v55 = v78;
  sub_1004CB7BC(v52, v78, (uint64_t *)&unk_1013F02C0);
  v56 = v79;
  sub_1004B8460(v53, v79, type metadata accessor for CRLFreehandDrawingCRDTData);
  v77 = 0x2000400000000;
  v57 = type metadata accessor for CRLFreehandItemData(0);
  v58 = swift_allocObject(v57, *(unsigned int *)(v57 + 48), *(unsigned __int16 *)(v57 + 52));
  sub_1004B8460(v56, v58 + qword_101481578, type metadata accessor for CRLFreehandDrawingCRDTData);
  v59 = v80;
  sub_1004B8460(v56, v80, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004B84A4(v56, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004B84E0(v59, v58 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
  sub_1004C4938(v55, v58 + *(_QWORD *)(*(_QWORD *)v58 + 632), (uint64_t *)&unk_1013F02C0);
  v60 = sub_1005E1000(0x1000000000000, v77, 0x1000000000000, 4);
  v61 = v83;

  v62 = objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem(0));
  v63 = sub_10088CD10(v82, (uint64_t)v60);

  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v84);
  sub_1004B84A4(v53, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1004CB800(v86, (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v85, type metadata accessor for CRLBoardItemParentAffinity);
  ObjectType = swift_getObjectType(v61);
  swift_deallocPartialClassInstance(v61, ObjectType, *(unsigned int *)((swift_isaMask & *v61) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v61) + 0x34));
  return v63;
}

uint64_t sub_10088F640(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t result;
  CKRecordID v26;
  Swift::String v27;
  _BYTE v29[24];
  _QWORD v30[3];
  uint64_t v31;

  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v29[-v8 - 8];
  v10 = sub_1004B804C(&qword_1013F0360);
  __chkstk_darwin(v10);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = type metadata accessor for CRLContainerItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    swift_unknownObjectRetain(a1);
    v16 = sub_100B0C360(v15, a2);
    v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v18 = type metadata accessor for CRLContainerItemData(0);
    v19 = swift_dynamicCastClassUnconditional(v17, v18, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v19 + 680))();
    v20 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v18, 0, 0, 0);
    (*(void (**)(void))(*(_QWORD *)v20 + 680))();
    v21 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    CRStruct_1.actionUndoingDifference(from:)(v6, v4, v21);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLContainerItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLContainerItemCRDTData);
    v22 = sub_1004B804C((uint64_t *)&unk_1013F0368);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v12, &qword_1013F0360);
      memset(v30, 0, sizeof(v30));
      v31 = 1;
    }
    else
    {
      v31 = v22;
      v24 = sub_10050D1B0(v30);
      (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v23 + 32))(v24, v12, v22);
    }
    swift_beginAccess(v16 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v29, 33, 0);
    sub_10083DA20((uint64_t)v30, 1);
    swift_endAccess(v29);

    return v16;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 629, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 629, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10088F9A8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double *v41;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  double *v47;
  uint64_t v48;
  __n128 v49;
  unint64_t v50;
  unint64_t v51;
  double *v52;
  uint64_t result;
  CKRecordID v54;
  uint64_t v55;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v4 = sub_1004B804C(&qword_1013F0330);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v58 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013F0338);
  v63 = *(_QWORD *)(v7 - 8);
  v64 = v7;
  __chkstk_darwin(v7);
  v59 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v60 = (uint64_t)&v58 - v10;
  v11 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - v15;
  v17 = sub_1004B804C(&qword_1013F0340);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v58 - v21;
  v23 = type metadata accessor for CRLContainerItem(0);
  v24 = swift_dynamicCastClass(a1, v23);
  if (v24)
  {
    v25 = v24;
    v61 = v5;
    v62 = v4;
    v26 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v25, v26))
    {
      v27 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v28 = type metadata accessor for CRLContainerItemData(0);
      v29 = swift_dynamicCastClassUnconditional(v27, v28, 0, 0, 0);
      (*(void (**)(void))(*(_QWORD *)v29 + 680))();
      v30 = swift_dynamicCastClassUnconditional(*(_QWORD *)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData), v28, 0, 0, 0);
      (*(void (**)(void))(*(_QWORD *)v30 + 680))();
      v31 = sub_1004B7878(&qword_1013F0348, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F2227C);
      v32 = a1;
      v33 = (uint64_t)v22;
      CRType.observableDifference(from:)(v13, v11, v31);
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLContainerItemCRDTData);
      sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLContainerItemCRDTData);
      sub_1004CB7BC((uint64_t)v22, (uint64_t)v19, &qword_1013F0340);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v19, 1, v64) == 1)
      {
        v34 = &qword_1013F0340;
        v35 = (uint64_t)v19;
      }
      else
      {
        v36 = (uint64_t)v19;
        v37 = v60;
        sub_1004C4938(v36, v60, (uint64_t *)&unk_1013F0350);
        v38 = v59;
        sub_1004CB7BC(v37, v59, (uint64_t *)&unk_1013F0350);
        v40 = v61;
        v39 = v62;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v38, 1, v62) != 1)
        {
          v44 = v58;
          (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v58, v38, v39);
          v41 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v46 = *((_QWORD *)v41 + 2);
          v45 = *((_QWORD *)v41 + 3);
          if (v46 >= v45 >> 1)
            v41 = (double *)sub_100D0EF94((_QWORD *)(v45 > 1), v46 + 1, 1, v41);
          *((_QWORD *)v41 + 2) = v46 + 1;
          v47 = &v41[2 * v46];
          *((_QWORD *)v47 + 4) = 0x736D657469;
          v47[5] = -3.24180904e178;
          v48 = *(_QWORD *)(CROrderedSet.ObservableDifference.moved.getter(v39) + 16);
          v49 = swift_bridgeObjectRelease();
          if (v48)
          {
            v51 = *((_QWORD *)v41 + 2);
            v50 = *((_QWORD *)v41 + 3);
            if (v51 >= v50 >> 1)
              v41 = (double *)sub_100D0EF94((_QWORD *)(v50 > 1), v51 + 1, 1, v41);
            *((_QWORD *)v41 + 2) = v51 + 1;
            v52 = &v41[2 * v51];
            v52[4] = 2.65134911e180;
            v52[5] = -5.98008217e197;
          }
          (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v44, v39, v49);
          sub_1004CB800(v37, &qword_1013F0338);
          if (*((_QWORD *)v41 + 2))
            goto LABEL_8;
          goto LABEL_16;
        }
        sub_1004CB800(v37, &qword_1013F0338);
        v34 = (uint64_t *)&unk_1013F0350;
        v35 = v38;
      }
      sub_1004CB800(v35, v34);
      v41 = _swiftEmptyArrayStorage;
      if (*(_QWORD *)&_swiftEmptyArrayStorage[2])
      {
LABEL_8:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
        v65 = _swiftEmptyDictionarySingleton;
        sub_100825A20((uint64_t)v41, 1, isUniquelyReferenced_nonNull_native);
        v43 = v65;

        swift_bridgeObjectRelease();
LABEL_17:
        sub_1004CB800(v33, &qword_1013F0340);
        return (uint64_t)v43;
      }
LABEL_16:
      swift_bridgeObjectRelease();

      v43 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    v57 = a1;
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 641, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2u, 641, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v54, *(Swift::String *)&v55);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

unint64_t sub_100890010()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E0DE8;
  if (!qword_1013E0DE8)
  {
    v1 = sub_1004CB6A4((uint64_t *)&unk_1013F02C0);
    result = swift_getWitnessTable(&unk_100EFD5F4, v1);
    atomic_store(result, (unint64_t *)&qword_1013E0DE8);
  }
  return result;
}

uint64_t sub_10089005C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1008900A0(void *a1, void *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EF7310;
  v7 = objc_msgSend(a1, "topAnchor");
  v8 = objc_msgSend(a2, "topAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(a1, "bottomAnchor");
  v11 = objc_msgSend(a2, "bottomAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_msgSend(a1, "leadingAnchor");
  v14 = objc_msgSend(a2, "leadingAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v6 + 48) = v15;
  v16 = objc_msgSend(a1, "trailingAnchor");
  v17 = objc_msgSend(a2, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v6 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_1004DD8D8();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

}

void sub_1008902D4(char a1)
{
  id v2;
  NSString v3;
  NSString v4;
  id v5;

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  __asm { BR              X10 }
}

uint64_t sub_1008903C4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSString v56;
  NSString v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;

  v55 = objc_msgSend(v52, *(SEL *)(v54 + 3424));
  v56 = String._bridgeToObjectiveC()();
  v57 = String._bridgeToObjectiveC()();
  v58 = objc_msgSend(v55, *(SEL *)(v53 + 3104), v56, v57, 0);

  v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
  v61 = v60;

  v62 = sub_1007170B0();
  v63 = swift_allocError(&type metadata for CRLMetadataProviderError, v62, 0, 0);
  *v64 = v49;
  v65 = sub_100BC2B98(v63, 0, 1, 0, 1, 1, v51, v50, v59, v61, 0);
  swift_bridgeObjectRelease();
  swift_errorRelease(v63);
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_1008909A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[19] = v0;
  v2 = type metadata accessor for CancellationError(0);
  v1[20] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[21] = v3;
  v1[22] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E01F0);
  v1[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100890A24, 0, 0);
}

uint64_t sub_100890A24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(void **)(v0 + 152);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = (_QWORD *)swift_allocObject(&unk_101283FD0, 40, 7);
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v5 = v2;
  v6 = sub_100618920(v1, (uint64_t)&unk_1013F6E68, (uint64_t)v4);
  v7 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask;
  v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask] = v6;
  swift_release(v8);
  v9 = *(_QWORD *)&v5[v7];
  *(_QWORD *)(v0 + 192) = v9;
  if (v9)
  {
    v10 = async function pointer to Task.result.getter[1];
    swift_retain(v9);
    v11 = (_QWORD *)swift_task_alloc(v10);
    *(_QWORD *)(v0 + 200) = v11;
    v12 = sub_1004B804C(&qword_1013E0210);
    *(_QWORD *)(v0 + 208) = v12;
    *v11 = v0;
    v11[1] = sub_100890B6C;
    return Task.result.getter(v0 + 112, v9, (char *)&type metadata for () + 8, v12, &protocol self-conformance witness table for Error);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100890B6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  swift_release(v1);
  return swift_task_switch(sub_100890BC8, 0, 0);
}

uint64_t sub_100890BC8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (*(_BYTE *)(v1 + 120) == 1)
  {
    v2 = *(_QWORD *)(v1 + 112);
    v3 = *(_QWORD *)(v1 + 208);
    swift_willThrow(a1);
    *(_QWORD *)(v1 + 128) = v2;
    swift_errorRetain(v2);
    if ((swift_dynamicCast(v1 + 121, v1 + 128, v3, &type metadata for CRLBoardItemImporterHelperError, 0) & 1) != 0)
    {
      v4 = *(_QWORD *)(v1 + 152);
      sub_1004E1DFC(v2, 1);
      v5 = *(_BYTE *)(v1 + 121);
      v6 = sub_10078E308();
      v7 = swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v6, 0, 0);
      *v8 = v5;
      v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = v7;
      swift_errorRelease(v9);
      swift_errorRelease(*(_QWORD *)(v1 + 128));
    }
    else
    {
      v10 = *(_QWORD *)(v1 + 208);
      v11 = *(_QWORD *)(v1 + 176);
      v12 = *(_QWORD *)(v1 + 160);
      swift_errorRelease(*(_QWORD *)(v1 + 128));
      *(_QWORD *)(v1 + 144) = v2;
      swift_errorRetain(v2);
      if (swift_dynamicCast(v11, v1 + 144, v10, v12, 0))
      {
        sub_1004E1DFC(v2, 1);
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        v14 = *(_QWORD *)(v1 + 168);
        v13 = *(_QWORD *)(v1 + 176);
        v15 = *(_QWORD *)(v1 + 160);
        swift_beginAccess(&static OS_os_log.crlDefault, v1 + 88, 0, 0);
        v16 = (id)static OS_os_log.crlDefault;
        v18 = static os_log_type_t.default.getter(v17);
        sub_100A06EBC((uint64_t)v16, &_mh_execute_header, v18, "Import task cancelled. Not an error.", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
        swift_errorRelease(*(_QWORD *)(v1 + 144));
      }
      else
      {
        v19 = *(_QWORD *)(v1 + 208);
        v20 = *(_QWORD *)(v1 + 152);
        swift_errorRelease(*(_QWORD *)(v1 + 144));
        v21 = sub_10078E308();
        v22 = swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v21, 0, 0);
        *v23 = 1;
        v24 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error);
        *(_QWORD *)(v20 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = v22;
        swift_errorRelease(v24);
        v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v25, v1 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
        *(_QWORD *)(v1 + 136) = v2;
        swift_errorRetain(v2);
        v27 = String.init<A>(describing:)(v1 + 136, v19);
        v29 = v28;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        *(_QWORD *)(inited + 64) = sub_1004CFC2C();
        *(_QWORD *)(inited + 32) = v27;
        *(_QWORD *)(inited + 40) = v29;
        sub_100757E04(&_mh_execute_header, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2, 56, "Unable to create CRLURLItem: %@", 31, 2u, inited);
        sub_1004F5394(inited, (uint64_t)"importBoardItem()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2u, 56, (uint64_t)"Unable to create CRLURLItem: %@", 31, 2u);
        swift_bridgeObjectRelease();
        sub_1004E1DFC(v2, 1);
      }
    }
  }
  v30 = *(_QWORD *)(v1 + 176);
  swift_task_dealloc(*(_QWORD *)(v1 + 184));
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100890EF8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1013F6E34);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CF80C;
  return sub_1008910BC();
}

uint64_t sub_10089105C(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_1013F6E5C;
  a2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1007894A8;
  return sub_1008909A0();
}

uint64_t sub_1008910BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1[14] = v0;
  v2 = type metadata accessor for CancellationError(0);
  v1[15] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[16] = v3;
  v1[17] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLAssetData(0);
  v1[18] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[19] = v5;
  v1[20] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E9BE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[21] = swift_task_alloc(v6);
  v1[22] = swift_task_alloc(v6);
  v1[23] = swift_task_alloc(v6);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[24] = swift_task_alloc(v7);
  v1[25] = swift_task_alloc(v7);
  v8 = type metadata accessor for URL(0);
  v1[26] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[27] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[28] = swift_task_alloc(v10);
  v1[29] = swift_task_alloc(v10);
  v1[30] = swift_task_alloc(v10);
  return swift_task_switch(sub_1008911FC, 0, 0);
}

uint64_t sub_1008911FC()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = objc_msgSend(*(id *)(v0 + 112), "delegate");
  if (v1)
  {
    v2 = v1;
    if ((objc_msgSend(v1, "respondsToSelector:", "boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:") & 1) != 0)objc_msgSend(v2, "boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:", *(_QWORD *)(v0 + 112));
    swift_unknownObjectRelease(v2);
  }
  static Task<>.checkCancellation()(v1);
  *(_QWORD *)(v0 + 248) = 0;
  v3 = objc_msgSend(*(id *)(v0 + 112), "URL");
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 192);
  if (!v3)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v5 + 56))(*(_QWORD *)(v0 + 192), 1, 1, *(_QWORD *)(v0 + 208));
    goto LABEL_9;
  }
  v7 = v3;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v3);

  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v6, 0, 1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
LABEL_9:
    sub_100757E04(&_mh_execute_header, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2, 67, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_importBoardItem()", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2u, 67, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v8 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 216);
  v10 = *(_QWORD *)(v0 + 200);
  sub_1004C4938(*(_QWORD *)(v0 + 192), v10, &qword_1013E04D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 200), &qword_1013E04D0);
    v11 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 224);
    v14 = *(_QWORD *)(v0 + 192);
    v13 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 232);
    v22 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 208);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = *(void **)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 32))(v22, *(_QWORD *)(v0 + 200), v23);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    *(_QWORD *)(v0 + 256) = v26;
    v26(v21, v22, v23);
    v27 = objc_msgSend(v25, "suggestedName");
    if (v27)
    {
      v28 = v27;
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v31 = v30;

    }
    else
    {
      v29 = 0;
      v31 = 0;
    }
    *(_QWORD *)(v0 + 264) = v29;
    *(_QWORD *)(v0 + 272) = v31;
    v32 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 280) = static MainActor.shared.getter(v32);
    v33 = dispatch thunk of Actor.unownedExecutor.getter(v32, &protocol witness table for MainActor);
    return swift_task_switch(sub_1008915AC, v33, v34);
  }
}

uint64_t sub_1008915AC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(uint64_t, uint64_t, __n128);

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 256);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 208);
  v6 = swift_release(*(_QWORD *)(v0 + 280));
  v2(v3, v4, v5, v6);
  v7 = objc_allocWithZone((Class)type metadata accessor for CRLRemoteURLMetadataProvider(0));
  v8 = sub_100BF75F8(v3);
  *(_QWORD *)(v0 + 288) = v8;
  *(_QWORD *)(v0 + 296) = v1;
  if (v1)
  {
    v9 = *(_QWORD *)(v0 + 232);
    v10 = *(_QWORD *)(v0 + 208);
    v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 216) + 8);
    *(_QWORD *)(v0 + 336) = v11;
    v11(v9, v10);
    swift_bridgeObjectRelease();
    v12 = sub_100891B1C;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    *(_OWORD *)((char *)v8 + OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename) = *(_OWORD *)(v0 + 264);
    v16 = swift_bridgeObjectRelease();
    v17 = *(void (**)(uint64_t, uint64_t, __n128))(v15 + 8);
    *(_QWORD *)(v0 + 304) = v17;
    v17(v13, v14, v16);
    v12 = sub_10089169C;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_10089169C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v32;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(char **)(v0 + 112);
  v7 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider;
  *(_QWORD *)(v0 + 312) = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider;
  v8 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = v1;
  v9 = v1;

  v10 = (char *)objc_msgSend(v6, "boardItemFactory");
  v11 = *(id *)&v10[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

  v12 = type metadata accessor for CRLBoardItemImporterHelper();
  inited = swift_initStackObject(v12, v0 + 48);
  *(_QWORD *)(v0 + 320) = inited;
  *(_QWORD *)(inited + 16) = v11;
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  *(_QWORD *)(v0 + 328) = v14;
  v15 = v14(v3, 1, 1, v4);
  v16 = static Task<>.checkCancellation()(v15);
  if (v2)
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    v18 = *(void **)(v0 + 288);
    v19 = *(_QWORD *)(v0 + 240);
    v20 = *(_QWORD *)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 184);
    swift_release(inited);

    sub_1004CB800(v21, (uint64_t *)&unk_1013E9BE0);
    v17(v19, v20);
    v22 = *(_QWORD *)(v0 + 232);
    v23 = *(_QWORD *)(v0 + 224);
    v25 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 200);
    v27 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    static Task<>.checkCancellation()(v16);
    v32 = (_QWORD *)swift_task_alloc(dword_101409754);
    *(_QWORD *)(v0 + 344) = v32;
    *v32 = v0;
    v32[1] = sub_100891BE4;
    return sub_100BF6574();
  }
}

uint64_t sub_100891B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100891BE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 344);
  *(_QWORD *)(v3 + 352) = a1;
  *(_QWORD *)(v3 + 360) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100892008;
  else
    v5 = sub_100891C50;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100891C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  v2 = *(_QWORD *)(v1 + 360);
  static Task<>.checkCancellation()(a1);
  if (v2)
  {

    *(_QWORD *)(v1 + 96) = v2;
    swift_errorRetain(v2);
    v3 = sub_1004B804C(&qword_1013E0210);
    if ((swift_dynamicCast(v1 + 416, v1 + 96, v3, &type metadata for CRLMetadataProviderError, 0) & 1) != 0)
    {
      v4 = *(_QWORD *)(v1 + 112);
      swift_errorRelease(v2);
      sub_1008902D4(*(_BYTE *)(v1 + 416));
      v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = v6;
      swift_errorRelease(v5);
      v7 = (_QWORD *)swift_task_alloc(dword_1014077F4);
      *(_QWORD *)(v1 + 400) = v7;
      *v7 = v1;
      v7[1] = sub_100892C60;
      return sub_100BC2564(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 240));
    }
    else
    {
      v10 = *(_QWORD *)(v1 + 136);
      v11 = *(_QWORD *)(v1 + 120);
      swift_errorRelease(*(_QWORD *)(v1 + 96));
      *(_QWORD *)(v1 + 104) = v2;
      swift_errorRetain(v2);
      if (swift_dynamicCast(v10, v1 + 104, v3, v11, 0))
      {
        swift_errorRelease(v2);
        if (qword_1013DD6B8 != -1)
          swift_once(&qword_1013DD6B8, sub_100A00A6C);
        v13 = *(_QWORD *)(v1 + 128);
        v12 = *(_QWORD *)(v1 + 136);
        v14 = *(_QWORD *)(v1 + 120);
        swift_beginAccess(&static OS_os_log.crlDefault, v1 + 72, 0, 0);
        v15 = (id)static OS_os_log.crlDefault;
        v17 = static os_log_type_t.default.getter(v16);
        sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v17, "Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
        v18 = swift_errorRelease(*(_QWORD *)(v1 + 104));
        static Task<>.checkCancellation()(v18);
        *(_QWORD *)(v1 + 384) = 0;
        v32 = (_QWORD *)swift_task_alloc(dword_10140975C);
        *(_QWORD *)(v1 + 392) = v32;
        *v32 = v1;
        v32[1] = sub_1008928E8;
        return sub_100BF723C(250.0, 150.0, 150.0);
      }
      else
      {
        v19 = *(void (**)(uint64_t, uint64_t))(v1 + 304);
        v20 = *(void **)(v1 + 288);
        v21 = *(_QWORD *)(v1 + 240);
        v22 = *(_QWORD *)(v1 + 208);
        v23 = *(_QWORD *)(v1 + 184);
        swift_release(*(_QWORD *)(v1 + 320));

        sub_1004CB800(v23, (uint64_t *)&unk_1013E9BE0);
        v19(v21, v22);
        swift_errorRelease(*(_QWORD *)(v1 + 104));
        v24 = *(_QWORD *)(v1 + 232);
        v25 = *(_QWORD *)(v1 + 224);
        v27 = *(_QWORD *)(v1 + 192);
        v26 = *(_QWORD *)(v1 + 200);
        v29 = *(_QWORD *)(v1 + 176);
        v28 = *(_QWORD *)(v1 + 184);
        v31 = *(_QWORD *)(v1 + 160);
        v30 = *(_QWORD *)(v1 + 168);
        v33 = *(_QWORD *)(v1 + 136);
        swift_task_dealloc(*(_QWORD *)(v1 + 240));
        swift_task_dealloc(v24);
        swift_task_dealloc(v25);
        swift_task_dealloc(v26);
        swift_task_dealloc(v27);
        swift_task_dealloc(v28);
        swift_task_dealloc(v29);
        swift_task_dealloc(v30);
        swift_task_dealloc(v31);
        swift_task_dealloc(v33);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }
    }
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc(dword_1014077FC);
    *(_QWORD *)(v1 + 368) = v9;
    *v9 = v1;
    v9[1] = sub_100892368;
    return sub_100BC270C(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 352));
  }
}

uint64_t sub_100892008(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;

  swift_willThrow(a1);
  v2 = *(_QWORD *)(v1 + 360);
  *(_QWORD *)(v1 + 96) = v2;
  swift_errorRetain(v2);
  v3 = sub_1004B804C(&qword_1013E0210);
  if ((swift_dynamicCast(v1 + 416, v1 + 96, v3, &type metadata for CRLMetadataProviderError, 0) & 1) != 0)
  {
    v4 = *(_QWORD *)(v1 + 112);
    swift_errorRelease(v2);
    sub_1008902D4(*(_BYTE *)(v1 + 416));
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = v6;
    swift_errorRelease(v5);
    v7 = (_QWORD *)swift_task_alloc(dword_1014077F4);
    *(_QWORD *)(v1 + 400) = v7;
    *v7 = v1;
    v7[1] = sub_100892C60;
    return sub_100BC2564(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 240));
  }
  else
  {
    v9 = *(_QWORD *)(v1 + 136);
    v10 = *(_QWORD *)(v1 + 120);
    swift_errorRelease(*(_QWORD *)(v1 + 96));
    *(_QWORD *)(v1 + 104) = v2;
    swift_errorRetain(v2);
    if (swift_dynamicCast(v9, v1 + 104, v3, v10, 0))
    {
      swift_errorRelease(v2);
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      v12 = *(_QWORD *)(v1 + 128);
      v11 = *(_QWORD *)(v1 + 136);
      v13 = *(_QWORD *)(v1 + 120);
      swift_beginAccess(&static OS_os_log.crlDefault, v1 + 72, 0, 0);
      v14 = (id)static OS_os_log.crlDefault;
      v16 = static os_log_type_t.default.getter(v15);
      sub_100A06EBC((uint64_t)v14, &_mh_execute_header, v16, "Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      v17 = swift_errorRelease(*(_QWORD *)(v1 + 104));
      static Task<>.checkCancellation()(v17);
      *(_QWORD *)(v1 + 384) = 0;
      v31 = (_QWORD *)swift_task_alloc(dword_10140975C);
      *(_QWORD *)(v1 + 392) = v31;
      *v31 = v1;
      v31[1] = sub_1008928E8;
      return sub_100BF723C(250.0, 150.0, 150.0);
    }
    else
    {
      v18 = *(void (**)(uint64_t, uint64_t))(v1 + 304);
      v19 = *(void **)(v1 + 288);
      v20 = *(_QWORD *)(v1 + 240);
      v21 = *(_QWORD *)(v1 + 208);
      v22 = *(_QWORD *)(v1 + 184);
      swift_release(*(_QWORD *)(v1 + 320));

      sub_1004CB800(v22, (uint64_t *)&unk_1013E9BE0);
      v18(v20, v21);
      swift_errorRelease(*(_QWORD *)(v1 + 104));
      v23 = *(_QWORD *)(v1 + 232);
      v24 = *(_QWORD *)(v1 + 224);
      v26 = *(_QWORD *)(v1 + 192);
      v25 = *(_QWORD *)(v1 + 200);
      v28 = *(_QWORD *)(v1 + 176);
      v27 = *(_QWORD *)(v1 + 184);
      v30 = *(_QWORD *)(v1 + 160);
      v29 = *(_QWORD *)(v1 + 168);
      v32 = *(_QWORD *)(v1 + 136);
      swift_task_dealloc(*(_QWORD *)(v1 + 240));
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      swift_task_dealloc(v26);
      swift_task_dealloc(v27);
      swift_task_dealloc(v28);
      swift_task_dealloc(v29);
      swift_task_dealloc(v30);
      swift_task_dealloc(v32);
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
  }
}

uint64_t sub_100892368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 368);
  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100892588;
  else
    v3 = sub_1008923CC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1008923CC()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 328);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 144);

  sub_10078DF08(v4, v2);
  v1(v2, 0, 1, v5);
  sub_1004CB800(v3, (uint64_t *)&unk_1013E9BE0);
  v6 = sub_1004C4938(v2, v3, (uint64_t *)&unk_1013E9BE0);
  v7 = *(_QWORD *)(v0 + 376);
  static Task<>.checkCancellation()(v6);
  *(_QWORD *)(v0 + 384) = v7;
  if (v7)
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    v9 = *(void **)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 240);
    v11 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 184);
    swift_release(*(_QWORD *)(v0 + 320));

    sub_1004CB800(v12, (uint64_t *)&unk_1013E9BE0);
    v8(v10, v11);
    v13 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 168);
    v23 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = (_QWORD *)swift_task_alloc(dword_10140975C);
    *(_QWORD *)(v0 + 392) = v22;
    *v22 = v0;
    v22[1] = sub_1008928E8;
    return sub_100BF723C(250.0, 150.0, 150.0);
  }
}

uint64_t sub_100892588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 376);
  *(_QWORD *)(v0 + 96) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  if ((swift_dynamicCast(v0 + 416, v0 + 96, v2, &type metadata for CRLMetadataProviderError, 0) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 112);
    swift_errorRelease(v1);
    sub_1008902D4(*(_BYTE *)(v0 + 416));
    v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = v5;
    swift_errorRelease(v4);
    v6 = (_QWORD *)swift_task_alloc(dword_1014077F4);
    *(_QWORD *)(v0 + 400) = v6;
    *v6 = v0;
    v6[1] = sub_100892C60;
    return sub_100BC2564(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 240));
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    swift_errorRelease(*(_QWORD *)(v0 + 96));
    *(_QWORD *)(v0 + 104) = v1;
    swift_errorRetain(v1);
    if (swift_dynamicCast(v8, v0 + 104, v2, v9, 0))
    {
      swift_errorRelease(v1);
      if (qword_1013DD6B8 != -1)
        swift_once(&qword_1013DD6B8, sub_100A00A6C);
      v11 = *(_QWORD *)(v0 + 128);
      v10 = *(_QWORD *)(v0 + 136);
      v12 = *(_QWORD *)(v0 + 120);
      swift_beginAccess(&static OS_os_log.crlDefault, v0 + 72, 0, 0);
      v13 = (id)static OS_os_log.crlDefault;
      v15 = static os_log_type_t.default.getter(v14);
      sub_100A06EBC((uint64_t)v13, &_mh_execute_header, v15, "Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      v16 = swift_errorRelease(*(_QWORD *)(v0 + 104));
      static Task<>.checkCancellation()(v16);
      *(_QWORD *)(v0 + 384) = 0;
      v30 = (_QWORD *)swift_task_alloc(dword_10140975C);
      *(_QWORD *)(v0 + 392) = v30;
      *v30 = v0;
      v30[1] = sub_1008928E8;
      return sub_100BF723C(250.0, 150.0, 150.0);
    }
    else
    {
      v17 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
      v18 = *(void **)(v0 + 288);
      v19 = *(_QWORD *)(v0 + 240);
      v20 = *(_QWORD *)(v0 + 208);
      v21 = *(_QWORD *)(v0 + 184);
      swift_release(*(_QWORD *)(v0 + 320));

      sub_1004CB800(v21, (uint64_t *)&unk_1013E9BE0);
      v17(v19, v20);
      swift_errorRelease(*(_QWORD *)(v0 + 104));
      v22 = *(_QWORD *)(v0 + 232);
      v23 = *(_QWORD *)(v0 + 224);
      v25 = *(_QWORD *)(v0 + 192);
      v24 = *(_QWORD *)(v0 + 200);
      v27 = *(_QWORD *)(v0 + 176);
      v26 = *(_QWORD *)(v0 + 184);
      v29 = *(_QWORD *)(v0 + 160);
      v28 = *(_QWORD *)(v0 + 168);
      v31 = *(_QWORD *)(v0 + 136);
      swift_task_dealloc(*(_QWORD *)(v0 + 240));
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      swift_task_dealloc(v26);
      swift_task_dealloc(v27);
      swift_task_dealloc(v28);
      swift_task_dealloc(v29);
      swift_task_dealloc(v31);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_1008928E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_BYTE *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 16) = v3;
  v5 = *(_QWORD *)(v4 + 392);
  *(_BYTE *)(v4 + 417) = a3;
  swift_task_dealloc(v5);
  return swift_task_switch(sub_100892948, 0, 0);
}

uint64_t sub_100892948()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _BYTE *v53;
  __n128 v54;
  void (*v55)(uint64_t, uint64_t);

  if ((*(_BYTE *)(v0 + 417) & 1) != 0)
    v1 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithSize:", 250.0, 150.0);
  else
    v1 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithSize:", *(double *)(v0 + 24), *(double *)(v0 + 32));
  v2 = v1;
  v3 = *(_QWORD *)(v0 + 384);
  static Task<>.checkCancellation()(v1);
  if (v3)
  {
    v4 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    v5 = *(void **)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 184);
    swift_release(*(_QWORD *)(v0 + 320));

    sub_1004CB800(v8, (uint64_t *)&unk_1013E9BE0);
    v9 = v6;
    v10 = v7;
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 240);
    v22 = *(_QWORD *)(v0 + 184);
    v23 = *(char **)(v0 + 112);
    v24 = objc_msgSend(v23, "boardItemFactory");
    v25 = sub_100CF1FAC(v2, v22, v21);

    v26 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem;
    v27 = *(void **)&v23[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem];
    *(_QWORD *)&v23[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem] = v25;

    v28 = *(_QWORD *)&v23[v26];
    v29 = *(_QWORD *)(v0 + 320);
    if (v28)
    {
      v30 = *(_QWORD *)(v0 + 312);
      v55 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
      v31 = *(void **)(v0 + 288);
      v32 = *(_QWORD *)(v0 + 240);
      v33 = *(_QWORD *)(v0 + 208);
      v34 = *(_QWORD *)(v0 + 184);
      v35 = *(_QWORD *)(v0 + 112);
      v36 = *(_QWORD *)(v35 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask);
      *(_QWORD *)(v35 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask) = 0;
      swift_release(v36);
      v37 = *(void **)(v35 + v30);
      *(_QWORD *)(v35 + v30) = 0;
      swift_release(v29);

      sub_1004CB800(v34, (uint64_t *)&unk_1013E9BE0);
      v55(v32, v33);
      v38 = *(_QWORD *)(v0 + 232);
      v39 = *(_QWORD *)(v0 + 224);
      v41 = *(_QWORD *)(v0 + 192);
      v40 = *(_QWORD *)(v0 + 200);
      v43 = *(_QWORD *)(v0 + 176);
      v42 = *(_QWORD *)(v0 + 184);
      v45 = *(_QWORD *)(v0 + 160);
      v44 = *(_QWORD *)(v0 + 168);
      v46 = *(_QWORD *)(v0 + 136);
      swift_task_dealloc(*(_QWORD *)(v0 + 240));
      swift_task_dealloc(v38);
      swift_task_dealloc(v39);
      swift_task_dealloc(v40);
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      v20 = *(uint64_t (**)(void))(v0 + 8);
      return v20();
    }
    v4 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    v48 = *(void **)(v0 + 288);
    v49 = *(_QWORD *)(v0 + 240);
    v50 = *(_QWORD *)(v0 + 208);
    v51 = *(_QWORD *)(v0 + 184);
    v52 = sub_10078E308();
    swift_allocError(&type metadata for CRLBoardItemImporterHelperError, v52, 0, 0);
    *v53 = 1;
    swift_willThrow(v54);
    swift_release(v29);

    sub_1004CB800(v51, (uint64_t *)&unk_1013E9BE0);
    v9 = v49;
    v10 = v50;
  }
  v4(v9, v10);
  v11 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 168);
  v19 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_100892C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100892E78;
  else
    v3 = sub_100892CC4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100892CC4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 328);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  sub_1004CB800(v2, (uint64_t *)&unk_1013E9BE0);
  v1(v3, 0, 1, v4);
  sub_1004C4938(v3, v2, (uint64_t *)&unk_1013E9BE0);
  v5 = swift_errorRelease(*(_QWORD *)(v0 + 96));
  v6 = *(_QWORD *)(v0 + 408);
  static Task<>.checkCancellation()(v5);
  *(_QWORD *)(v0 + 384) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 320);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
    v9 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 184);

    swift_release(v7);
    sub_1004CB800(v11, (uint64_t *)&unk_1013E9BE0);
    v8(v9, v10);
    v12 = *(_QWORD *)(v0 + 232);
    v13 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    v19 = *(_QWORD *)(v0 + 160);
    v18 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 240));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v21 = (_QWORD *)swift_task_alloc(dword_10140975C);
    *(_QWORD *)(v0 + 392) = v21;
    *v21 = v0;
    v21[1] = sub_1008928E8;
    return sub_100BF723C(250.0, 150.0, 150.0);
  }
}

uint64_t sub_100892E78()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 304);
  v2 = *(void **)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 320));

  sub_1004CB800(v5, (uint64_t *)&unk_1013E9BE0);
  v1(v3, v4);
  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v6 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  v11 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 184);
  v13 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 240));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100892F74()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v1 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask;
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask];
  if (v5)
  {
    swift_retain(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask]);
    sub_1004B804C(&qword_1013E0210);
    Task.cancel()();
    swift_release(v5);
    v6 = *(_QWORD *)&v0[v4];
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)&v0[v4] = 0;
  swift_release(v6);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v0;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_101283F30, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  v11 = sub_100521B98((uint64_t)v3, (uint64_t)&unk_1013F6E40, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1008930B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10089311C, v6, v7);
}

uint64_t sub_10089311C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  v2 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider;
  v3 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider);
  if (v3)
  {
    v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask];
    v5 = v3;
    if (v4)
    {
      swift_retain(v4);
      sub_1004B804C(&qword_1013E83A8);
      sub_1004B804C(&qword_1013E0210);
      Task.cancel()();
      swift_release(v4);
    }
    v7 = sub_100BF7024();
    objc_msgSend(v7, "cancel");

    v6 = *(void **)(v1 + v2);
  }
  else
  {
    v6 = 0;
  }
  *(_QWORD *)(v1 + v2) = 0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1008932A0(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  NSURL *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  id v12;
  objc_super v14;

  v3 = v2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem] = 0;
  v6 = (NSURL *)OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error] = 0;
  URL._bridgeToObjectiveC()(v6);
  v8 = v7;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for CRLURLItemImporter();
  v9 = objc_msgSendSuper2(&v14, "initWithURL:boardItemFactory:", v8, a2);

  v10 = type metadata accessor for URL(0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v12 = v9;
  v11(a1, v10);
  if (v12)

  return v12;
}

id sub_100893418(void *a1, void *a2)
{
  char *v2;
  id v5;
  objc_super v7;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error] = 0;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CRLURLItemImporter();
  v5 = objc_msgSendSuper2(&v7, "initWithData:boardItemFactory:", a1, a2);

  return v5;
}

id sub_100893510()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLItemImporter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLURLItemImporter()
{
  return objc_opt_self(_TtC8Freeform18CRLURLItemImporter);
}

uint64_t sub_1008935BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013F6E3C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1008930B0(a1, v4, v5, v6);
}

uint64_t sub_100893628()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100893654()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1013F6E4C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1004CF80C;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1013F6E48 + dword_1013F6E48))(v2, v3);
}

uint64_t sub_1008936C4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_1013F6E64);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1004CF80C;
  v2 = (_QWORD *)swift_task_alloc(dword_1013F6E34);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_1004CF80C;
  return sub_1008910BC();
}

id sub_1008938AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSBoardView()
{
  return objc_opt_self(_TtC8Freeform15CRLiOSBoardView);
}

unint64_t sub_100893910()
{
  unint64_t result;

  result = qword_1013F6EA0;
  if (!qword_1013F6EA0)
  {
    result = swift_getWitnessTable(&unk_100F12210, &type metadata for CRLInsertURLToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F6EA0);
  }
  return result;
}

unint64_t sub_100893958()
{
  unint64_t result;

  result = qword_1013F6EA8;
  if (!qword_1013F6EA8)
  {
    result = swift_getWitnessTable(&unk_100F12238, &type metadata for CRLInsertURLToBoardIntent);
    atomic_store(result, (unint64_t *)&qword_1013F6EA8);
  }
  return result;
}

uint64_t sub_10089399C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101128D58, 1) + 8);
}

uint64_t sub_1008939C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101128D30, 1);
}

uint64_t sub_1008939D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  unsigned int v64;
  uint64_t v65;
  char *v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;
  _QWORD v81[2];
  char v82[56];

  v80 = a1;
  v1 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v1);
  v74 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for InputConnectionBehavior(0);
  v73 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v78 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v4);
  v72 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v77 = (char *)&v62 - v7;
  v8 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v8);
  v71 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocalizedStringResource(0);
  v24 = *(_QWORD *)(v23 - 8);
  v70 = v23;
  __chkstk_darwin(v23);
  v76 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v75 = (char *)&v62 - v27;
  v68 = sub_1004B804C(&qword_1013E1120);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v28);
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v30(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter title for a board", 27, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100FDA740);
  static Locale.current.getter(v31);
  v64 = v29;
  v32 = v13;
  v65 = v13;
  v30(v16, v29, v13);
  v63 = v30;
  v66 = v12;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for a board", 33, 2);
  v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v69(v12, 0, 1, v23);
  v33 = type metadata accessor for CRLBoardEntity(0);
  v34 = v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v71, 1, 1, v33);
  v35 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEC0000003F647261);
  static Locale.current.getter(v35);
  v30(v16, v29, v32);
  v36 = v76;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Prompt for selecting a board from the list", 42, 2);
  v37 = v77;
  IntentDialog.init(_:)(v36);
  v38 = type metadata accessor for IntentDialog(0);
  v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
  v67 = v39;
  v39(v37, 0, 1, v38);
  v40 = v72;
  v39(v72, 1, 1, v38);
  v73 = *(_QWORD *)(v73 + 104);
  v41 = v78;
  ((void (*)(char *, _QWORD, uint64_t))v73)(v78, enum case for InputConnectionBehavior.default(_:), v79);
  v42 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v43 = v66;
  v44 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v75, v66, v34, v37, v40, v41, v42);
  *v80 = v44;
  v72 = (char *)sub_1004B804C(&qword_1013F6EC8);
  v45 = String.LocalizationValue.init(stringLiteral:)(5001813, 0xE300000000000000);
  static Locale.current.getter(v45);
  v46 = v64;
  v47 = v65;
  v48 = v63;
  v63(v16, v64, v65);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Intent parameter title for urls", 31, 2);
  v49 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x8000000100FDA780);
  static Locale.current.getter(v49);
  v48(v16, v46, v47);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Parameter description for urls", 30, 2);
  v50 = v43;
  v69(v43, 0, 1, v70);
  v51 = type metadata accessor for URL(0);
  v52 = v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v74, 1, 1, v51);
  v53 = String.LocalizationValue.init(stringLiteral:)(0x4C52552074616857, 0xE90000000000003FLL);
  static Locale.current.getter(v53);
  v48(v16, v46, v47);
  v54 = v76;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0x6E497070414C5243, 0xED000073746E6574, v19, v16, "Prompt for providing an URL to insert", 37, 2);
  v55 = v77;
  IntentDialog.init(_:)(v54);
  v67(v55, 0, 1, v38);
  v56 = v78;
  ((void (*)(char *, _QWORD, uint64_t))v73)(v78, enum case for InputConnectionBehavior.connectToPreviousIntentResult(_:), v79);
  v57 = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)(v75, v50, v52, v55, v56);
  v58 = v80;
  v80[1] = v57;
  sub_1004B804C(&qword_1013E1128);
  v81[0] = 0xD00000000000001FLL;
  v81[1] = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(v81, &type metadata for String, &protocol witness table for String);
  v59 = type metadata accessor for AppDependencyManager(0);
  v60 = static AppDependencyManager.shared.getter(v59);
  v58[2] = AppDependency.__allocating_init(key:manager:)(v82, v60);
  v58[6] = (uint64_t)&type metadata for CRLInsertURLToBoardIntentPerformer;
  v58[7] = (uint64_t)&off_10126FFA0;
  result = swift_allocObject(&unk_101284080, 56, 7);
  v58[3] = result;
  *(_QWORD *)(result + 40) = &type metadata for CRLAppIntentsBoardItemsImporter;
  *(_QWORD *)(result + 48) = &off_10127EC60;
  return result;
}

uint64_t sub_10089422C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2[39] = a1;
  v2[40] = v1;
  v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E1110);
  v2[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v2[43] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[44] = v6;
  v2[45] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v2[46] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v2[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource(0);
  v2[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IntentDialog(0);
  v2[49] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[50] = v11;
  v2[51] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLBoardEntity(0);
  v2[52] = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[53] = swift_task_alloc(v13);
  v2[54] = swift_task_alloc(v13);
  v14 = type metadata accessor for URL(0);
  v2[55] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[56] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[57] = swift_task_alloc(v16);
  v2[58] = swift_task_alloc(v16);
  v17 = type metadata accessor for Logger(0);
  v2[59] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[60] = v18;
  v2[61] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1008943EC, 0, 0);
}

uint64_t sub_1008943EC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void (*v8)(uint64_t, uint64_t, __n128);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v19;
  NSObject *v20;
  __n128 v21;
  os_log_type_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  __n128 v58;
  uint8_t *buf;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  v1 = *(_QWORD **)(v0 + 464);
  swift_beginAccess(&static OS_os_log.appIntents, v0 + 248, 0, 0);
  Logger.init(_:)((id)static OS_os_log.appIntents);
  v2 = IntentParameter.wrappedValue.getter(v1);
  v3 = URL.scheme.getter(v2);
  if (v4)
  {
    v5 = v3;
    v6 = v4;
    if (v3 == 0x7370747468 && v4 == 0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, 0x7370747468, 0xE500000000000000, 0) & 1) != 0
      || v5 == 1886680168 && v6 == 0xE400000000000000)
    {
      v7 = swift_bridgeObjectRelease();
      v8 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 448) + 8);
      v8(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440), v7);
LABEL_10:
      *(_QWORD *)(v0 + 496) = v8;
      v9 = *(_QWORD *)(v0 + 448);
      v10 = *(_QWORD **)(v0 + 432);
      sub_1004BB5A4((_QWORD *)(*(_QWORD *)(v0 + 320) + 24), *(_QWORD *)(*(_QWORD *)(v0 + 320) + 48));
      v11 = sub_1004B804C(&qword_1013E1910);
      v12 = *(_QWORD *)(v9 + 72);
      v13 = *(unsigned __int8 *)(v9 + 80);
      v14 = (v13 + 32) & ~v13;
      v15 = swift_allocObject(v11, v14 + v12, v13 | 7);
      *(_QWORD *)(v0 + 504) = v15;
      *(_OWORD *)(v15 + 16) = xmmword_100EF5E40;
      IntentParameter.wrappedValue.getter((_QWORD *)(v15 + v14));
      v16 = IntentParameter.wrappedValue.getter(v10);
      AppDependency.wrappedValue.getter(v16);
      *(_QWORD *)(v0 + 232) = &type metadata for CRLBoardLibraryProvidingDependency;
      *(_QWORD *)(v0 + 240) = &off_10129B490;
      v17 = (_QWORD *)swift_task_alloc(dword_1013E5A94);
      *(_QWORD *)(v0 + 512) = v17;
      *v17 = v0;
      v17[1] = sub_1008949F8;
      return sub_1005CA9F8(v15, *(_QWORD *)(v0 + 432), v0 + 208);
    }
    v54 = *(_QWORD *)(v0 + 464);
    v55 = *(_QWORD *)(v0 + 440);
    v56 = *(_QWORD *)(v0 + 448);
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, 1886680168, 0xE400000000000000, 0);
    v58 = swift_bridgeObjectRelease();
    v8 = *(void (**)(uint64_t, uint64_t, __n128))(v56 + 8);
    v8(v54, v55, v58);
    if ((v57 & 1) != 0)
      goto LABEL_10;
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 448) + 8);
    ((void (*)(_QWORD, _QWORD))v8)(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
  }
  v19 = sub_100895570(*(uint64_t **)(v0 + 320), v0 + 80);
  v20 = Logger.logObject.getter(v19);
  v22 = static os_log_type_t.debug.getter(v21);
  if (os_log_type_enabled(v20, v22))
  {
    v23 = *(_QWORD **)(v0 + 456);
    v24 = *(_QWORD *)(v0 + 440);
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v61 = swift_slowAlloc(32, -1);
    v64 = v61;
    *(_DWORD *)v25 = 136315138;
    IntentParameter.wrappedValue.getter(v23);
    v26 = sub_1004B7878(&qword_1013FA4A0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v24, v26);
    v29 = v28;
    ((void (*)(_QWORD *, uint64_t))v8)(v23, v24);
    *(_QWORD *)(v0 + 272) = sub_100BF0F1C(v27, v29, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 272, v0 + 280, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease();
    sub_1008955A4((_QWORD *)(v0 + 80));
    _os_log_impl((void *)&_mh_execute_header, v20, v22, "Invalid hypertext URLs provided %s", v25, 0xCu);
    swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v61, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    sub_1008955A4((_QWORD *)(v0 + 80));
  }
  v30 = *(_QWORD *)(v0 + 400);
  v62 = *(_QWORD *)(v0 + 408);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 392);
  v34 = *(_QWORD *)(v0 + 368);
  v33 = *(_QWORD *)(v0 + 376);
  v35 = *(_QWORD *)(v0 + 352);
  v36 = *(_QWORD *)(v0 + 360);
  v37 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 344);
  v39 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100FDA800);
  static Locale.current.getter(v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v36, enum case for LocalizedStringResource.BundleDescription.main(_:), v38);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v33, 0x6E497070414C5243, 0xED000073746E6574, v34, v36, "Dialog text to request missing app intent parameter", 51, 2);
  v40 = IntentDialog.init(_:)(v31);
  v41 = IntentParameter.projectedValue.getter(v40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v37, v62, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v37, 0, 1, v32);
  v42 = type metadata accessor for AppIntentError(0);
  v43 = sub_1004B7878(&qword_1013E3458, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
  swift_allocError(v42, v43, 0, 0);
  IntentParameter.needsValueError(_:)(v37);
  swift_release(v41);
  sub_100576238(v37);
  swift_willThrow(v44);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v62, v32);
  v45 = *(_QWORD *)(v0 + 488);
  v46 = *(_QWORD *)(v0 + 464);
  v47 = *(_QWORD *)(v0 + 456);
  v49 = *(_QWORD *)(v0 + 424);
  v48 = *(_QWORD *)(v0 + 432);
  v50 = *(_QWORD *)(v0 + 408);
  v52 = *(_QWORD *)(v0 + 376);
  v51 = *(_QWORD *)(v0 + 384);
  v53 = *(_QWORD *)(v0 + 368);
  buf = *(uint8_t **)(v0 + 360);
  v60 = *(_QWORD *)(v0 + 336);
  v63 = *(_QWORD *)(v0 + 328);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(v45, *(_QWORD *)(v0 + 472));
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(buf);
  swift_task_dealloc(v60);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008949F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  _QWORD *v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 512);
  *(_QWORD *)(*v1 + 520) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    sub_1004B84A4(*(_QWORD *)(v2 + 432), type metadata accessor for CRLBoardEntity);
    swift_bridgeObjectRelease();
    v4 = sub_100894C3C;
  }
  else
  {
    v5 = (_QWORD *)(v2 + 208);
    v6 = *(_QWORD *)(v2 + 432);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1004B84A4(v6, type metadata accessor for CRLBoardEntity);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5);
    v4 = sub_100894AB8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100894AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 480);
  v1 = *(_QWORD *)(v0 + 488);
  v10 = *(_QWORD *)(v0 + 472);
  v11 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD **)(v0 + 424);
  v12 = *(_QWORD *)(v0 + 456);
  v13 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 416);
  v14 = *(_QWORD *)(v0 + 408);
  v15 = *(_QWORD *)(v0 + 384);
  v16 = *(_QWORD *)(v0 + 376);
  v17 = *(_QWORD *)(v0 + 368);
  v18 = *(_QWORD *)(v0 + 360);
  v19 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 328);
  v5 = IntentParameter.wrappedValue.getter(v3);
  v6 = IntentParameter.projectedValue.getter(v5);
  *(_QWORD *)(v0 + 304) = v6;
  v7 = sub_1004B7878((unint64_t *)&qword_1013E3448, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F064FC);
  v8 = sub_1005761F4();
  static IntentResult.result<A, B>(value:opensIntent:)(v3, v0 + 304, v4, &type metadata for CRLOpenBoardIntent, v7, v8);
  swift_release(v6);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLBoardEntity);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v10);
  swift_task_dealloc(v1);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v3);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100894C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(_QWORD *, uint64_t);
  uint64_t v36;
  NSObject *log;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(uint64_t **)(v0 + 320);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 208));
  sub_100895570(v2, v0 + 144);
  sub_100895570(v2, v0 + 16);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v42 = *(_QWORD *)(v0 + 520);
    v35 = *(void (**)(_QWORD *, uint64_t))(v0 + 496);
    v6 = *(_QWORD **)(v0 + 456);
    v7 = *(_QWORD *)(v0 + 440);
    v8 = *(_QWORD **)(v0 + 424);
    v36 = *(_QWORD *)(v0 + 416);
    v9 = *(_QWORD *)(v0 + 328);
    v10 = swift_slowAlloc(32, -1);
    v40 = (uint64_t *)swift_slowAlloc(8, -1);
    v44 = swift_slowAlloc(64, -1);
    v45[0] = v44;
    *(_DWORD *)v10 = 136315650;
    log = v4;
    type = v5;
    IntentParameter.wrappedValue.getter(v6);
    v11 = sub_1004B7878(&qword_1013FA4A0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v12 = dispatch thunk of CustomStringConvertible.description.getter(v7, v11);
    v14 = v13;
    v35(v6, v7);
    *(_QWORD *)(v0 + 280) = sub_100BF0F1C(v12, v14, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 280, v0 + 288, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease();
    sub_1008955A4((_QWORD *)(v0 + 144));
    *(_WORD *)(v10 + 12) = 2080;
    IntentParameter.wrappedValue.getter(v8);
    sub_1004E1B3C((uint64_t)v8 + *(int *)(v36 + 40), v9);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardEntity);
    v15 = sub_10067AD38();
    v17 = v16;
    sub_1004B84A4(v9, type metadata accessor for CRLBoardIdentifier);
    *(_QWORD *)(v0 + 288) = sub_100BF0F1C(v15, v17, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 288, v0 + 296, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease();
    sub_1008955A4((_QWORD *)(v0 + 16));
    *(_WORD *)(v10 + 22) = 2112;
    swift_errorRetain(v42);
    v18 = _swift_stdlib_bridgeErrorToNSError(v42);
    *(_QWORD *)(v0 + 296) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 296, v0 + 304, v10 + 24, v10 + 32);
    *v40 = v18;
    swift_errorRelease(v42);
    swift_errorRelease(v42);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Error importing URL: %s to board: %s - %@", (uint8_t *)v10, 0x20u);
    v19 = sub_1004B804C(&qword_1013E53A8);
    swift_arrayDestroy(v40, 1, v19);
    swift_slowDealloc(v40, -1, -1);
    swift_arrayDestroy(v44, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {
    v20 = *(_QWORD *)(v0 + 520);

    sub_1008955A4((_QWORD *)(v0 + 144));
    sub_1008955A4((_QWORD *)(v0 + 16));
    swift_errorRelease(v20);
    swift_errorRelease(v20);
  }
  v21 = *(_QWORD *)(v0 + 520);
  v22 = type metadata accessor for _PrebuiltAppIntentError(0);
  v23 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
  swift_allocError(v22, v23, 0, 0);
  v24.n128_f64[0] = static _UnrecoverableError.unknownError.getter();
  swift_willThrow(v24);
  swift_errorRelease(v21);
  v25 = *(_QWORD *)(v0 + 488);
  v26 = *(_QWORD *)(v0 + 464);
  v27 = *(_QWORD *)(v0 + 456);
  v29 = *(_QWORD *)(v0 + 424);
  v28 = *(_QWORD *)(v0 + 432);
  v30 = *(_QWORD *)(v0 + 408);
  v32 = *(_QWORD *)(v0 + 376);
  v31 = *(_QWORD *)(v0 + 384);
  v33 = *(_QWORD *)(v0 + 368);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 360);
  v41 = *(_QWORD *)(v0 + 336);
  v43 = *(_QWORD *)(v0 + 328);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 480) + 8))(v25, *(_QWORD *)(v0 + 472));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(*(_QWORD *)typea);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100895098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_10147FBA8);
  sub_1004F2A1C(v10, (uint64_t)qword_10147FBA8);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x6B6E694C20646441, 0xE800000000000000);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100895220()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_1004B804C(&qword_1013F6EE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_1013F6EE8);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10089552C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 2, &type metadata for CRLInsertURLToBoardIntent, v6);
  v7._countAndFlagsBits = 543450177;
  v7._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(byte_100F12280);
  v9 = sub_1004B804C(&qword_1013F6EF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(byte_100F122A8);
  v12 = sub_1004B804C(&qword_1013F6EF8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CRLInsertURLToBoardIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, &type metadata for CRLInsertURLToBoardIntent, v6);
}

uint64_t sub_1008953DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DD378 != -1)
    swift_once(&qword_1013DD378, sub_100895098);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_10147FBA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100895450(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1013F6EDC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_10089422C(a1);
}

uint64_t sub_1008954A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10089552C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLInsertURLToBoardIntent()
{
  return &type metadata for CRLInsertURLToBoardIntent;
}

uint64_t sub_1008954DC()
{
  return sub_1004CBA30(&qword_1013F6EB8, &qword_1013F6EC0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100895508()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

unint64_t sub_10089552C()
{
  unint64_t result;

  result = qword_1013F6ED0;
  if (!qword_1013F6ED0)
  {
    result = swift_getWitnessTable(&unk_100F12180, &type metadata for CRLInsertURLToBoardIntent);
    atomic_store(result, &qword_1013F6ED0);
  }
  return result;
}

uint64_t sub_100895570(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for CRLRenameBoardIntent(a2, a1);
  return a2;
}

_QWORD *sub_1008955A4(_QWORD *a1)
{
  destroy for CRLRenameBoardIntent(a1);
  return a1;
}

uint64_t sub_1008955D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1008955F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLiOSPencilModeTypeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10089566C + 4 * byte_100F122D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1008956A0 + 4 * byte_100F122D0[v4]))();
}

uint64_t sub_1008956A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008956A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008956B0);
  return result;
}

uint64_t sub_1008956BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008956C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1008956C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008956D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilModeTypeData()
{
  return &type metadata for CRLiOSPencilModeTypeData;
}

uint64_t sub_1008956EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008959D4();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100895748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008959D4();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100895794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100895A18();
  v7 = sub_100895990();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008957F0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100895A18();
  v5 = sub_1008959D4();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100895858(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100895A18();
  v5 = sub_1008959D4();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_1008958B0(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_100895A18();
  v3 = sub_1008959D4();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_100895900()
{
  unint64_t result;

  result = qword_1013F6F00;
  if (!qword_1013F6F00)
  {
    result = swift_getWitnessTable(&unk_100F122FC, &type metadata for CRLiOSPencilModeTypeData);
    atomic_store(result, (unint64_t *)&qword_1013F6F00);
  }
  return result;
}

unint64_t sub_100895948()
{
  unint64_t result;

  result = qword_1013F6F08;
  if (!qword_1013F6F08)
  {
    result = swift_getWitnessTable(&unk_100F12344, &type metadata for CRLiOSPencilModeTypeData);
    atomic_store(result, (unint64_t *)&qword_1013F6F08);
  }
  return result;
}

unint64_t sub_100895990()
{
  unint64_t result;

  result = qword_1013F6F10;
  if (!qword_1013F6F10)
  {
    result = swift_getWitnessTable(&unk_100F1246C, &type metadata for CRLiOSPencilModeTypeData);
    atomic_store(result, (unint64_t *)&qword_1013F6F10);
  }
  return result;
}

unint64_t sub_1008959D4()
{
  unint64_t result;

  result = qword_1013F6F18;
  if (!qword_1013F6F18)
  {
    result = swift_getWitnessTable(&unk_100F12494, &type metadata for CRLiOSPencilModeTypeData);
    atomic_store(result, (unint64_t *)&qword_1013F6F18);
  }
  return result;
}

unint64_t sub_100895A18()
{
  unint64_t result;

  result = qword_1013F6F20;
  if (!qword_1013F6F20)
  {
    result = swift_getWitnessTable(&unk_100F123F4, &type metadata for CRLiOSPencilModeTypeData);
    atomic_store(result, (unint64_t *)&qword_1013F6F20);
  }
  return result;
}

id sub_100895A5C()
{
  _BYTE *v0;
  objc_class *ObjectType;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  __n128 v8;
  void *v9;
  id v10;
  id v11;
  objc_super v13;
  uint64_t v14;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  *v2 = 0u;
  v2[1] = 0u;
  v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame] = 0;
  v3 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_frameNumber;
  v14 = 0;
  v4 = sub_1004B804C(&qword_1013EB008);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = v0;
  *(_QWORD *)&v0[v3] = CurrentValueSubject.init(_:)(&v14);
  v6 = &v5[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v5[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 2;
  sub_100503E34();
  v9 = (void *)static OS_dispatch_queue.main.getter(v8);
  v10 = objc_msgSend(objc_allocWithZone((Class)MTLSharedEventListener), "initWithDispatchQueue:", v9);

  *(_QWORD *)&v5[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_listener] = v10;
  v13.receiver = v5;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, "init");
  objc_msgSend(v11, "setBackgroundColor:", 0);
  objc_msgSend(v11, "setOpaque:", 0);

  return v11;
}

void sub_100895BF4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  BOOL v13;
  unint64_t v14;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  v2 = *(void **)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  if (!v2)
  {
    sub_100896C5C(0, 0);
    return;
  }
  v4 = (void *)v1[2];
  v3 = (void *)v1[3];
  v5 = (void *)v1[1];
  swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData));
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRetain(v4);
  v6 = v3;
  v7 = objc_msgSend(v2, "device");
  v8 = *(id *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext);
  if (v8)
  {
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext + 8);
    swift_unknownObjectRetain(v9);
    if (v7 == v8)
      goto LABEL_7;
    swift_unknownObjectRelease(v9);
  }
  v10 = objc_msgSend(v7, "newCommandQueue");
  if (!v10)
  {
    sub_100896C5C(0, 0);

    swift_unknownObjectRelease(v4);
    swift_unknownObjectRelease(v5);
    swift_unknownObjectRelease(v2);
    swift_unknownObjectRelease(v7);
    return;
  }
  v9 = (uint64_t)v10;
LABEL_7:
  swift_unknownObjectRetain(v9);
  v11 = sub_10075DF58(v7);
  swift_release(v11);
  swift_unknownObjectRetain(v7);
  swift_unknownObjectRetain(v9);
  sub_100896C5C((uint64_t)v7, v9);
  swift_unknownObjectRelease(v9);
  swift_unknownObjectRelease(v7);
  v12 = objc_msgSend(v4, "signaledValue");
  v13 = __CFADD__(v12, 1);
  v14 = (unint64_t)v12 + 1;
  if (v13)
  {
    __break(1u);
  }
  else
  {
    sub_100896D28(v14, v5);

    swift_unknownObjectRelease(v4);
    swift_unknownObjectRelease(v5);
    swift_unknownObjectRelease(v2);
    swift_unknownObjectRelease(v7);
    swift_unknownObjectRelease_n(v9, 2);
  }
}

uint64_t sub_100895DDC(id a1, id a2)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 == a2)
  {
LABEL_17:
    v10 = 1;
    return v10 & 1;
  }
  v4 = objc_msgSend(a2, "label");
  if (v4)
  {

    v5 = objc_msgSend(a1, "label");
    if (v5)
    {
      v6 = v5;
      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v11 = objc_msgSend(a2, "label");
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

      if (v9)
      {
        if (v15)
        {
          if (v7 == v13 && v9 == v15)
          {
            swift_bridgeObjectRelease(v9);
            v10 = 1;
          }
          else
          {
            v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v13, v15, 0);
            swift_bridgeObjectRelease(v9);
          }
          goto LABEL_19;
        }
        goto LABEL_14;
      }
      if (v15)
      {
        v10 = 0;
        goto LABEL_19;
      }
    }
    else if (v9)
    {
LABEL_14:
      v10 = 0;
      v15 = v9;
LABEL_19:
      swift_bridgeObjectRelease(v15);
      return v10 & 1;
    }
    goto LABEL_17;
  }
  v10 = 0;
  return v10 & 1;
}

void sub_100895F1C(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  _BYTE v14[32];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = Strong + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState;
    if (!*(_BYTE *)(Strong + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState + 16))
    {
      v10 = *(_QWORD *)v8;
      v9 = *(void **)(v8 + 8);
      swift_unknownObjectRetain(v9);
      if ((sub_100895DDC(a1, v9) & 1) != 0 && v10 <= a2)
      {
        v11 = *(_QWORD *)v8;
        v12 = *(_QWORD *)(v8 + 8);
        *(_QWORD *)v8 = a2;
        *(_QWORD *)(v8 + 8) = a1;
        v13 = *(_BYTE *)(v8 + 16);
        *(_BYTE *)(v8 + 16) = 1;
        swift_unknownObjectRetain(a1);
        sub_100896B54(v11, v12, v13);
        sub_100896144(a2);
      }
      sub_100896B54(v10, (uint64_t)v9, 0);
    }

  }
}

void sub_100896144(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  __int128 v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  double v45;
  _QWORD v46[3];
  __int128 v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  __int128 aBlock;
  uint64_t (*v50)(uint64_t, uint64_t);
  void *v51;
  double (*v52)(uint64_t);
  _QWORD *v53;
  id v54;

  v3 = v2;
  v4 = &v1[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  v5 = *(void **)&v1[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  if (v5)
  {
    v6 = v1;
    v9 = (void *)*((_QWORD *)v4 + 2);
    v8 = (void *)*((_QWORD *)v4 + 3);
    v10 = (void *)*((_QWORD *)v4 + 1);
    swift_unknownObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData]);
    swift_unknownObjectRetain(v10);
    swift_unknownObjectRetain(v9);
    v11 = v8;
    v12 = objc_msgSend(v10, "signaledValue");
    if (v12 < objc_msgSend(v9, "signaledValue"))
    {
      swift_unknownObjectRelease(v5);
      swift_unknownObjectRelease(v10);
      swift_unknownObjectRelease(v9);

      return;
    }
    v54 = v11;
    v13 = *(void **)&v6[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
    if (v13)
    {
      v14 = *(void **)&v6[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext + 8];
      swift_unknownObjectRetain(*(_QWORD *)&v6[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext]);
      swift_unknownObjectRetain(v14);
      objc_msgSend(v6, "bounds");
      v16 = v15;
      v18 = v17;
      objc_msgSend(v6, "contentsScale");
      v20 = v16 * v19;
      if (qword_1013DCFE0 != -1)
      {
        v45 = v19;
        swift_once(&qword_1013DCFE0, sub_10073EFDC);
        v19 = v45;
      }
      if (v20 > (double)qword_10147F538)
        v20 = (double)qword_10147F538;
      v21 = v18 * v19;
      if (v21 <= (double)qword_10147F538)
        v22 = v21;
      else
        v22 = (double)qword_10147F538;
      objc_msgSend(v6, "drawableSize");
      if (v24 != v20 || v23 != v22)
        objc_msgSend(v6, "setDrawableSize:", v20, v22);
      v44 = objc_msgSend(v6, "nextDrawable");
      if (!v44)
      {
        swift_unknownObjectRelease(v13);
        swift_unknownObjectRelease(v5);
        swift_unknownObjectRelease(v10);
        swift_unknownObjectRelease(v9);

        swift_unknownObjectRelease(v14);
        return;
      }
      v26 = objc_msgSend(v14, "commandBuffer");
      if (!v26)
      {
        swift_unknownObjectRelease(v13);
        swift_unknownObjectRelease(v5);
        swift_unknownObjectRelease(v10);
        swift_unknownObjectRelease(v9);

        swift_unknownObjectRelease(v14);
        swift_unknownObjectRelease(v44);
        return;
      }
      v42 = v26;
      v41 = v14;
      v40 = objc_msgSend(v10, "signaledValue");
      v27 = objc_msgSend(v44, "texture");
      v28 = objc_msgSend((id)swift_unknownObjectRetain(v5), "width");
      v43 = v27;
      if (v28 == objc_msgSend(v27, "width"))
      {
        v29 = objc_msgSend(v5, "height");
        if (v29 == objc_msgSend(v27, "height"))
        {
          v30 = objc_msgSend(v42, "blitCommandEncoder");
          if (!v30)
          {
            __break(1u);
            return;
          }
          v31 = v30;
          sub_10007C4CC((uint64_t)objc_msgSend(v5, "width"), (uint64_t)objc_msgSend(v5, "height"), (uint64_t)objc_msgSend(v5, "depth"), &aBlock);
          v32 = v50;
          v33 = aBlock;
          aBlock = 0uLL;
          v50 = 0;
          v47 = v33;
          v48 = v32;
          memset(v46, 0, sizeof(v46));
          objc_msgSend(v31, "copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:", v5, 0, 0, &aBlock, &v47, v43, 0, 0, v46);
          objc_msgSend(v31, "endEncoding");
          swift_unknownObjectRelease(v31);
          goto LABEL_29;
        }
      }
      v35 = sub_10075DF58(v13);
      if (!v3)
      {
        v36 = v35;
        sub_10075D794(v5, v27, v42);
        swift_release(v36);
LABEL_29:
        objc_msgSend(v42, "encodeSignalEvent:value:", v9, v40);
        objc_msgSend(v42, "presentDrawable:", v44);
        v37 = swift_allocObject(&unk_101284380, 24, 7);
        swift_unknownObjectWeakInit(v37 + 16);
        v38 = (_QWORD *)swift_allocObject(&unk_1012843D0, 40, 7);
        v38[2] = v37;
        v38[3] = a1;
        v38[4] = v40;
        v52 = sub_100896F34;
        v53 = v38;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = *(_QWORD *)"";
        v50 = sub_100628D1C;
        v51 = &unk_1012843E8;
        v39 = _Block_copy(&aBlock);
        objc_msgSend(v42, "addCompletedHandler:", v39, swift_release(v53).n128_f64[0]);
        _Block_release(v39);
        objc_msgSend(v42, "commit");
        swift_unknownObjectRelease_n(v5, 2);
        swift_unknownObjectRelease(v43);
        swift_unknownObjectRelease(v42);
        swift_unknownObjectRelease(v44);
        swift_unknownObjectRelease(v41);
        v34 = v13;
        goto LABEL_30;
      }
      swift_unknownObjectRelease_n(v5, 2);
      swift_unknownObjectRelease(v27);
      swift_unknownObjectRelease(v42);
      swift_unknownObjectRelease(v44);
      swift_unknownObjectRelease(v41);
      v34 = v13;
    }
    else
    {
      v34 = v5;
    }
LABEL_30:
    swift_unknownObjectRelease(v34);
    swift_unknownObjectRelease(v10);
    swift_unknownObjectRelease(v9);

  }
}

double sub_1008966D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  double result;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE v19[24];

  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
    type metadata accessor for MainActor(0);
    v14 = v12;
    v15 = static MainActor.shared.getter(v14);
    v16 = (_QWORD *)swift_allocObject(&unk_101284420, 56, 7);
    v16[2] = v15;
    v16[3] = &protocol witness table for MainActor;
    v16[4] = v14;
    v16[5] = a3;
    v16[6] = a4;
    v17 = sub_100521B98((uint64_t)v9, (uint64_t)&unk_1013F6F90, (uint64_t)v16);

    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_100896800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_100896870, v8, v9);
}

uint64_t sub_100896870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  sub_1008968B8(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1008968B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  if (v4)
  {
    v8 = (void *)v3[1];
    v7 = v3[2];
    v9 = (void *)v3[3];
    *(_BYTE *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame) = 1;
    v16 = a2;
    swift_unknownObjectRetain(v4);
    swift_unknownObjectRetain(v8);
    swift_unknownObjectRetain(v7);
    v10 = v9;
    CurrentValueSubject.send(_:)(&v16);
    v11 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState;
    if (*(_BYTE *)(v11 + 16) == 1 && *(_QWORD *)v11 == a1)
    {
      v12 = *(void **)(v11 + 8);
      swift_unknownObjectRetain(v12);
      if ((sub_100895DDC(v8, v12) & 1) == 0)
      {
LABEL_7:
        sub_10068E7F0(v4, (uint64_t)v8, v7, v9);
        sub_100896B54(a1, (uint64_t)v12, 1u);
        return;
      }
      v13 = *(_QWORD *)v11;
      v14 = *(_QWORD *)(v11 + 8);
      *(_QWORD *)v11 = 0;
      *(_QWORD *)(v11 + 8) = 0;
      v15 = *(_BYTE *)(v11 + 16);
      *(_BYTE *)(v11 + 16) = 2;
      sub_100896B54(v13, v14, v15);
      if (a2 != -1)
      {
        sub_100896D28(a2 + 1, v8);
        goto LABEL_7;
      }
      __break(1u);
    }
    else
    {
      sub_10068E7F0(v4, (uint64_t)v8, v7, v9);
    }
  }
}

uint64_t _s10MetalLayerCMa()
{
  return objc_opt_self(_TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer);
}

uint64_t sub_100896B2C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_unknownObjectRetain(a2);
  return result;
}

uint64_t _s10MetalLayerC11SignalStateOwxx(uint64_t a1)
{
  return sub_100896B54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_100896B54(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_unknownObjectRelease(a2);
  return result;
}

uint64_t _s10MetalLayerC11SignalStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100896B2C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s10MetalLayerC11SignalStateOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100896B2C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100896B54(v6, v7, v8);
  return a1;
}

uint64_t _s10MetalLayerC11SignalStateOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100896B54(v4, v5, v6);
  return a1;
}

ValueMetadata *_s10MetalLayerC11SignalStateOMa()
{
  return &_s10MetalLayerC11SignalStateON;
}

void sub_100896C5C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CGColorSpaceRef v7;

  v3 = (uint64_t *)&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext + 8];
  *v3 = a1;
  v3[1] = a2;
  sub_100896FEC(a1, a2);
  sub_100897018(v4, v5);
  v6 = *v3;
  if (*v3)
    swift_unknownObjectRetain(*v3);
  objc_msgSend(v2, "setDevice:", v6);
  swift_unknownObjectRelease(v6);
  objc_msgSend(v2, "setFramebufferOnly:", 0);
  objc_msgSend(v2, "setPixelFormat:", 81);
  v7 = CGColorSpaceCreateWithName(kCGColorSpaceDisplayP3);
  objc_msgSend(v2, "setColorspace:", v7);

}

void sub_100896D28(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[5];
  uint64_t v16;

  v5 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState + 16))
  {
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState + 16) == 1)
      return;
    swift_unknownObjectRetain(a2);
    v6 = 2;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    v8 = *(void **)(v5 + 8);
    swift_unknownObjectRetain(a2);
    sub_100896B2C(v7, (uint64_t)v8, 0);
    v9 = sub_100895DDC(a2, v8);
    sub_100896B54(v7, (uint64_t)v8, 0);
    if ((v9 & 1) != 0 && v7 <= a1)
    {
      swift_unknownObjectRelease(a2);
      return;
    }
    v6 = *(_BYTE *)(v5 + 16);
  }
  v10 = *(_QWORD *)v5;
  v11 = *(_QWORD *)(v5 + 8);
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  *(_BYTE *)(v5 + 16) = 0;
  swift_unknownObjectRetain(a2);
  sub_100896B54(v10, v11, v6);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_listener);
  v13 = swift_allocObject(&unk_101284380, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v15[4] = sub_100896EF0;
  v16 = v13;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = *(_QWORD *)"";
  v15[2] = sub_100541BD8;
  v15[3] = &unk_101284398;
  v14 = _Block_copy(v15);
  objc_msgSend(a2, "notifyListener:atValue:block:", v12, a1, v14, swift_release(v16).n128_f64[0]);
  swift_unknownObjectRelease(a2);
  _Block_release(v14);
}

uint64_t sub_100896ECC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100896EF0(void *a1, unint64_t a2)
{
  uint64_t v2;

  sub_100895F1C(a1, a2, v2);
}

uint64_t sub_100896EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100896F08(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100896F10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100896F34(uint64_t a1)
{
  uint64_t *v1;

  return sub_1008966D4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100896F40()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100896F6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1013F6F8C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_100896800(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100896FEC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_unknownObjectRetain(result);
    return swift_unknownObjectRetain(a2);
  }
  return result;
}

uint64_t sub_100897018(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_unknownObjectRelease(result);
    return swift_unknownObjectRelease(a2);
  }
  return result;
}

void sub_100897044()
{
  _BYTE *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;

  v1 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  *v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame] = 0;
  v2 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_frameNumber;
  v6 = 0;
  v3 = sub_1004B804C(&qword_1013EB008);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  *(_QWORD *)&v0[v2] = CurrentValueSubject.init(_:)(&v6);
  v4 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 2;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLUSDRendering+CoreRE_MetalLayer.swift", 48, 2, 42, 0);
  __break(1u);
}

void sub_100897130()
{
  qword_10147FBC0 = 1572864;
}

void sub_100897140()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE v25[24];

  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
  {
    swift_beginAccess(v0 + 64, v25, 0, 0);
    v1 = 0;
    v2 = *(_QWORD *)(v0 + 64);
    v3 = 1 << *(_BYTE *)(v2 + 32);
    v4 = -1;
    if (v3 < 64)
      v4 = ~(-1 << v3);
    v5 = v2 + 64;
    v6 = v4 & *(_QWORD *)(v2 + 64);
    v7 = (unint64_t)(v3 + 63) >> 6;
    do
    {
      if (v6)
      {
        v8 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v9 = v8 | (v1 << 6);
      }
      else
      {
        v12 = v1 + 1;
        if (__OFADD__(v1, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        if (v12 >= v7)
          return;
        v13 = *(_QWORD *)(v5 + 8 * v12);
        ++v1;
        if (!v13)
        {
          v1 = v12 + 1;
          if (v12 + 1 >= v7)
            return;
          v13 = *(_QWORD *)(v5 + 8 * v1);
          if (!v13)
          {
            v1 = v12 + 2;
            if (v12 + 2 >= v7)
              return;
            v13 = *(_QWORD *)(v5 + 8 * v1);
            if (!v13)
            {
              v14 = v12 + 3;
              if (v14 >= v7)
                return;
              v13 = *(_QWORD *)(v5 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  v1 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    goto LABEL_27;
                  if (v1 >= v7)
                    return;
                  v13 = *(_QWORD *)(v5 + 8 * v1);
                  ++v14;
                  if (v13)
                    goto LABEL_21;
                }
              }
              v1 = v14;
            }
          }
        }
LABEL_21:
        v15 = __clz(__rbit64(v13));
        v6 = (v13 - 1) & v13;
        v9 = v15 + (v1 << 6);
      }
      v10 = (uint64_t *)(*(_QWORD *)(v2 + 56) + 40 * v9);
      v11 = v10[1];
    }
    while ((v11 & 0x8000000000000000) == 0);
    v16 = v10[3];
    if (!(_BYTE)v16)
    {
      v17 = (void *)v10[4];
      v18 = (void *)v10[2];
      v19 = *v10;
      v20 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v9);
      swift_bridgeObjectRetain(v2);
      v21 = v20;
      sub_1007B0D28(v19, v11, v18, v16, v17);
      sub_1007B0D28(v19, v11, v18, v16, v17);
      sub_10071CCC4(v18, 0);
      type metadata accessor for CKError(0);
      v23 = v22;
      v24 = sub_10067422C();
      _BridgedStoredNSError.code.getter(v23, v24);
      sub_10071CCD8(v18, 0);

      sub_1007B0C8C(v19, v11, v18, v16, v17);
      sub_1007B0C8C(v19, v11, v18, v16, v17);
      swift_release(v2);
    }
  }
}

void sub_1008973B4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  _BYTE v45[32];
  _BYTE v46[24];

  v1 = v0 + 8;
  swift_beginAccess(v0 + 8, v46, 0, 0);
  v2 = v0[4];
  if (*(_QWORD *)(v0[8] + 16))
  {
    swift_retain(v0);
    swift_bridgeObjectRetain(v2);
    v4 = (unint64_t)sub_100898140(v3, (unint64_t)v0);
    swift_bridgeObjectRelease();
    swift_release(v0);
    v2 = v4;
    if (!(v4 >> 62))
      goto LABEL_3;
  }
  else
  {
    swift_bridgeObjectRetain(v0[4]);
    if (!((unint64_t)v2 >> 62))
    {
LABEL_3:
      v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v5)
        goto LABEL_4;
LABEL_30:
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (v2 < 0)
    v38 = v2;
  else
    v38 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v38);
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_30;
LABEL_4:
  v6 = v0[2];
  v7 = v2 & 0xC000000000000001;
  v8 = 4;
  v41 = v5;
  v42 = v2;
  v40 = v6;
  v43 = v2 & 0xC000000000000001;
  while (1)
  {
    v9 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, v2) : *(id *)(v2 + 8 * v8);
    v10 = v9;
    v11 = v8 - 3;
    if (__OFADD__(v8 - 4, 1))
      break;
    v12 = *(_QWORD *)(v6 + 24);
    if (*(_QWORD *)(v12 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v6 + 24));
      v13 = v10;
      v14 = sub_100843848((uint64_t)v13);
      if ((v15 & 1) != 0)
      {
        v16 = (_QWORD *)(*(_QWORD *)(v12 + 56) + 16 * v14);
        v18 = *v16;
        v17 = v16[1];
        swift_unknownObjectRetain(*v16);

        swift_bridgeObjectRelease();
        swift_beginAccess(v1, v45, 33, 0);
        v19 = v13;
        swift_unknownObjectRetain(v18);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
        v21 = *v1;
        v44 = (_QWORD *)*v1;
        v22 = v1;
        *v1 = 0x8000000000000000;
        v24 = sub_100843848((uint64_t)v19);
        v25 = *(_QWORD *)(v21 + 16);
        v26 = (v23 & 1) == 0;
        v27 = v25 + v26;
        if (__OFADD__(v25, v26))
          goto LABEL_32;
        v28 = v23;
        if (*(_QWORD *)(v21 + 24) >= v27)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_100831D70();
        }
        else
        {
          sub_10081F83C(v27, isUniquelyReferenced_nonNull_native);
          v29 = sub_100843848((uint64_t)v19);
          if ((v28 & 1) != (v30 & 1))
            goto LABEL_34;
          v24 = v29;
        }
        v31 = v17 | 0x8000000000000000;
        v7 = v43;
        if ((v28 & 1) != 0)
        {
          v32 = v44[7] + 40 * v24;
          sub_1007B0C8C(*(_QWORD *)v32, *(_QWORD *)(v32 + 8), *(void **)(v32 + 16), *(_QWORD *)(v32 + 24), *(void **)(v32 + 32));
          *(_QWORD *)v32 = v18;
          *(_QWORD *)(v32 + 8) = v31;
          *(_OWORD *)(v32 + 16) = xmmword_100EF5E40;
          *(_QWORD *)(v32 + 32) = 0;
        }
        else
        {
          v44[(v24 >> 6) + 8] |= 1 << v24;
          *(_QWORD *)(v44[6] + 8 * v24) = v19;
          v33 = v44[7] + 40 * v24;
          *(_QWORD *)v33 = v18;
          *(_QWORD *)(v33 + 8) = v31;
          *(_OWORD *)(v33 + 16) = xmmword_100EF5E40;
          *(_QWORD *)(v33 + 32) = 0;
          v34 = v44[2];
          v35 = __OFADD__(v34, 1);
          v36 = v34 + 1;
          if (v35)
            goto LABEL_33;
          v44[2] = v36;
          v37 = v19;
        }
        v1 = v22;
        *v22 = v44;

        swift_bridgeObjectRelease();
        swift_endAccess(v45);

        swift_unknownObjectRelease(v18);
        v5 = v41;
        v2 = v42;
        v6 = v40;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {

    }
    ++v8;
    if (v11 == v5)
      goto LABEL_30;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  v39 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v39);
  __break(1u);
}

uint64_t sub_10089770C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_errorRelease(v0[9]);
  return swift_deallocClassInstance(v0, 81, 7);
}

uint64_t type metadata accessor for CRLSyncRecordSaveBatch()
{
  return objc_opt_self(_TtC8Freeform22CRLSyncRecordSaveBatch);
}

void sub_100897778(uint64_t a1, void *a2, __n128 a3)
{
  Swift::Int *v3;
  Swift::Int *v4;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v11;

  v4 = v3;
  v7 = *v3;
  if ((*v3 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v7 < 0)
    v8 = *v3;
  else
    v8 = v7 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaDictionary.count.getter(v8, a3);
  if (!__OFADD__(v9, 1))
  {
    v7 = sub_100897EF0(v8, v9 + 1);
    *v4 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    v11 = *v4;
    *v4 = 0x8000000000000000;
    sub_100828774(a1, a2, isUniquelyReferenced_nonNull_native);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

Swift::Int sub_100897818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    sub_1004B804C(&qword_1013F4FA0);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v30 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
      do
      {
        v28 = v8;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v27 = v9;
        v21 = sub_1004B8930(0, &qword_1013E1CE0, UIImage_ptr);
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v4 = v30;
        v22 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v22)
        {
          sub_100816A9C(v22 + 1, 1);
          v4 = v30;
        }
        v12 = v28;
        v11 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v17 == v24;
            if (v17 == v24)
              v17 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v26 == -1);
          v18 = __clz(__rbit64(~v26)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v4;
}

Swift::Int sub_100897A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a2)
  {
    sub_1004B804C(&qword_1013F51E0);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v32 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v7 = __CocoaDictionary.Iterator.next()(v6);
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = sub_1004B8930(0, (unint64_t *)&qword_10140B930, NSValue_ptr);
      do
      {
        v30 = v9;
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
        v29 = v10;
        v23 = sub_1004B8930(0, (unint64_t *)&qword_1013F07F0, NSNumber_ptr);
        swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
        v4 = v32;
        v24 = *(_QWORD *)(v32 + 16);
        if (*(_QWORD *)(v32 + 24) <= v24)
        {
          sub_10081DF90(v24 + 1, 1);
          v4 = v32;
        }
        v13 = v30;
        v12 = v31;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v16 = v4 + 64;
        v17 = -1 << *(_BYTE *)(v4 + 32);
        v18 = result & ~v17;
        v19 = v18 >> 6;
        if (((-1 << v18) & ~*(_QWORD *)(v4 + 64 + 8 * (v18 >> 6))) != 0)
        {
          v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v4 + 64 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v25 = 0;
          v26 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v26 && (v25 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v27 = v19 == v26;
            if (v19 == v26)
              v19 = 0;
            v25 |= v27;
            v28 = *(_QWORD *)(v16 + 8 * v19);
          }
          while (v28 == -1);
          v20 = __clz(__rbit64(~v28)) + (v19 << 6);
        }
        *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
        v21 = 8 * v20;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v21) = v12;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v13;
        ++*(_QWORD *)(v4 + 16);
        v9 = __CocoaDictionary.Iterator.next()(v15);
        v10 = v22;
      }
      while (v9);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v4;
}

Swift::Int sub_100897CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a2)
  {
    sub_1004B804C(&qword_1013F5120);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v32 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v7 = __CocoaDictionary.Iterator.next()(v6);
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
      do
      {
        v30 = v9;
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
        v29 = v10;
        v23 = type metadata accessor for CRLSyncRecordGroup();
        swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
        v4 = v32;
        v24 = *(_QWORD *)(v32 + 16);
        if (*(_QWORD *)(v32 + 24) <= v24)
        {
          sub_10081E674(v24 + 1, 1);
          v4 = v32;
        }
        v13 = v30;
        v12 = v31;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v16 = v4 + 64;
        v17 = -1 << *(_BYTE *)(v4 + 32);
        v18 = result & ~v17;
        v19 = v18 >> 6;
        if (((-1 << v18) & ~*(_QWORD *)(v4 + 64 + 8 * (v18 >> 6))) != 0)
        {
          v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v4 + 64 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v25 = 0;
          v26 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v26 && (v25 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v27 = v19 == v26;
            if (v19 == v26)
              v19 = 0;
            v25 |= v27;
            v28 = *(_QWORD *)(v16 + 8 * v19);
          }
          while (v28 == -1);
          v20 = __clz(__rbit64(~v28)) + (v19 << 6);
        }
        *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
        v21 = 8 * v20;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v21) = v12;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v13;
        ++*(_QWORD *)(v4 + 16);
        v9 = __CocoaDictionary.Iterator.next()(v15);
        v10 = v22;
      }
      while (v9);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v4;
}

Swift::Int sub_100897EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (a2)
  {
    sub_1004B804C(&qword_1013F4F48);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v32 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v7 = __CocoaDictionary.Iterator.next()(v6);
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
      do
      {
        v30 = v9;
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
        v29 = v10;
        v23 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
        swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
        v4 = v32;
        v24 = *(_QWORD *)(v32 + 16);
        if (*(_QWORD *)(v32 + 24) <= v24)
        {
          sub_10081E954(v24 + 1, 1);
          v4 = v32;
        }
        v13 = v30;
        v12 = v31;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v16 = v4 + 64;
        v17 = -1 << *(_BYTE *)(v4 + 32);
        v18 = result & ~v17;
        v19 = v18 >> 6;
        if (((-1 << v18) & ~*(_QWORD *)(v4 + 64 + 8 * (v18 >> 6))) != 0)
        {
          v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v4 + 64 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v25 = 0;
          v26 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v26 && (v25 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v27 = v19 == v26;
            if (v19 == v26)
              v19 = 0;
            v25 |= v27;
            v28 = *(_QWORD *)(v16 + 8 * v19);
          }
          while (v28 == -1);
          v20 = __clz(__rbit64(~v28)) + (v19 << 6);
        }
        *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
        v21 = 8 * v20;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v21) = v12;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v21) = v13;
        ++*(_QWORD *)(v4 + 16);
        v9 = __CocoaDictionary.Iterator.next()(v15);
        v10 = v22;
      }
      while (v9);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v4;
}

double *sub_100898140(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BOOL8 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _BYTE v37[24];
  double *v38;

  v3 = a1;
  v38 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_32;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v5 = a2 + 64;
  swift_beginAccess(a2 + 64, v37, 0, 0);
  if (v4)
  {
    v6 = 0;
    v34 = v3 & 0xFFFFFFFFFFFFFF8;
    v35 = v3 & 0xC000000000000001;
    v30 = v4;
    v31 = v3;
    v29 = a2 + 64;
    while (1)
    {
      if (v35)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }
      else
      {
        if (v6 >= *(_QWORD *)(v34 + 16))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          if (v3 < 0)
            v27 = v3;
          else
            v27 = v3 & 0xFFFFFFFFFFFFFF8;
          v4 = _CocoaArrayWrapper.endIndex.getter(v27);
          goto LABEL_3;
        }
        v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      v9 = v7;
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_31;
      v11 = *(_QWORD *)v5;
      if (*(_QWORD *)(*(_QWORD *)v5 + 16))
      {
        v12 = v7;
        swift_bridgeObjectRetain(v11);
        v13 = sub_100843848((uint64_t)v12);
        if ((v14 & 1) != 0)
        {
          v15 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 40 * v13);
          v16 = v15[1];
          v17 = (void *)v15[2];
          a2 = v16 >> 62;
          v32 = *v15;
          v33 = (void *)v15[4];
          v18 = v15[3];
          sub_1007B0D28(*v15, v16, v17, v18, v33);

          swift_bridgeObjectRelease();
          if (!(v16 >> 62) || (_DWORD)a2 == 1)
          {
            v19 = v32;
            v20 = v16;
            v21 = (_BOOL8)v17;
            v22 = v18;
LABEL_25:
            sub_1007B0C8C(v19, v20, (void *)v21, v22, v33);

            v4 = v30;
            v3 = v31;
            v5 = v29;
            goto LABEL_7;
          }
          a2 = v18;
          if ((_BYTE)v18)
          {
            if (v18 == 1)
              goto LABEL_19;
            v19 = v32;
            v20 = v16;
            v21 = v17 != 0;
            goto LABEL_24;
          }
          type metadata accessor for CKError(0);
          v24 = v23;
          v28 = sub_10067422C();
          v25 = v17;
          _BridgedStoredNSError.code.getter(v24, v28);
          if (v36 > 0x24 || ((1 << v36) & 0x1000A002D8) == 0)
          {
            sub_10071CCD8(v17, 0);
LABEL_19:
            v19 = v32;
            v20 = v16;
            v21 = (_BOOL8)v17;
LABEL_24:
            v22 = a2;
            goto LABEL_25;
          }
          sub_10071CCD8(v17, 0);
          sub_1007B0C8C(v32, v16, v17, a2, v33);
          v4 = v30;
          v3 = v31;
          v5 = v29;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      a2 = *((_QWORD *)v38 + 2);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(a2);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(a2, v9);
      specialized ContiguousArray._endMutation()(v8);
LABEL_7:
      ++v6;
      if (v10 == v4)
        return v38;
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100898414(unint64_t a1, uint64_t a2, char a3, char a4)
{
  _QWORD *v4;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  double *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  double *v42;

  LOBYTE(isUniquelyReferenced_nonNull_native) = a4;
  v6 = a1;
  *((_BYTE *)v4 + 56) = 0;
  v4[6] = _swiftEmptyDictionarySingleton;
  v4[8] = _swiftEmptyDictionarySingleton;
  v4[9] = 0;
  *((_BYTE *)v4 + 80) = 0;
  v4[2] = a2;
  *((_BYTE *)v4 + 24) = a3;
  v42 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_35:
    if (v6 < 0)
      v34 = v6;
    else
      v34 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_retain(a2);
    swift_bridgeObjectRetain(v6);
    v7 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain(a2);
    if (v7)
    {
LABEL_3:
      v37 = isUniquelyReferenced_nonNull_native;
      v38 = v4;
      v40 = v6 & 0xC000000000000001;
      v8 = (Swift::Int)_swiftEmptyDictionarySingleton;
      v9 = 4;
      v39 = v6;
      while (1)
      {
        v4 = (_QWORD *)(v9 - 4);
        if (v40)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6);
        else
          v11 = *(id *)(v6 + 8 * v9);
        v6 = (uint64_t)v11;
        v12 = v9 - 3;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v13 = objc_msgSend(v11, "recordID");
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        isUniquelyReferenced_nonNull_native = *(_QWORD *)(((unint64_t)v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)(((unint64_t)v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (isUniquelyReferenced_nonNull_native >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, isUniquelyReferenced_nonNull_native + 1, 1);
        v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(isUniquelyReferenced_nonNull_native, v13);
        specialized Array._endMutation()(v15);
        if ((v8 & 0xC000000000000001) != 0)
        {
          if (v8 < 0)
            v4 = (_QWORD *)v8;
          else
            v4 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFF8);
          v16 = v13;
          v17 = (id)v6;
          v19 = __CocoaDictionary.count.getter(v4, v18);
          a2 = v19 + 1;
          if (__OFADD__(v19, 1))
            goto LABEL_33;
          v8 = sub_100897EF0((uint64_t)v4, a2);
        }
        else
        {
          v20 = v13;
          v21 = (id)v6;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
        v41 = (_QWORD *)v8;
        v4 = (_QWORD *)v8;
        v22 = sub_100843848((uint64_t)v13);
        v23 = *(_QWORD *)(v8 + 16);
        v24 = (a2 & 1) == 0;
        v25 = v23 + v24;
        if (__OFADD__(v23, v24))
          goto LABEL_32;
        v26 = a2;
        if (*(_QWORD *)(v8 + 24) >= v25)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v8 = (Swift::Int)v41;
            if ((a2 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            v4 = &v41;
            sub_100831468();
            v8 = (Swift::Int)v41;
            if ((v26 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_10081E954(v25, isUniquelyReferenced_nonNull_native);
          v4 = v41;
          v27 = sub_100843848((uint64_t)v13);
          if ((v26 & 1) != (a2 & 1))
          {
            v36 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
            result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v36);
            __break(1u);
            return result;
          }
          v22 = v27;
          v8 = (Swift::Int)v41;
          if ((v26 & 1) != 0)
          {
LABEL_4:
            v10 = *(_QWORD *)(v8 + 56);
            LOBYTE(isUniquelyReferenced_nonNull_native) = 8 * v22;

            *(_QWORD *)(v10 + 8 * v22) = v6;
            goto LABEL_5;
          }
        }
        *(_QWORD *)(v8 + 8 * (v22 >> 6) + 64) |= 1 << v22;
        v28 = 8 * v22;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + v28) = v13;
        *(_QWORD *)(*(_QWORD *)(v8 + 56) + v28) = v6;
        v29 = *(_QWORD *)(v8 + 16);
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_34;
        *(_QWORD *)(v8 + 16) = v31;
        v32 = v13;
LABEL_5:

        swift_bridgeObjectRelease();
        ++v9;
        v6 = v39;
        if (v12 == v7)
        {
          v33 = v42;
          v4 = v38;
          LOBYTE(isUniquelyReferenced_nonNull_native) = v37;
          goto LABEL_40;
        }
      }
    }
  }
  v8 = (Swift::Int)_swiftEmptyDictionarySingleton;
  v33 = _swiftEmptyArrayStorage;
LABEL_40:
  *((_BYTE *)v4 + 25) = isUniquelyReferenced_nonNull_native & 1;
  v4[4] = v33;
  v4[5] = v8;
  return (uint64_t)v4;
}

id sub_100898890()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionAwareAlertController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLSelectionAwareAlertController()
{
  return objc_opt_self(_TtC8Freeform32CRLSelectionAwareAlertController);
}

void sub_100898A64(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t Strong;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  objc_super v15;

  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for CRLLinkView();
  objc_msgSendSuper2(&v15, "setFrame:", a1, a2, a3, a4);
  Strong = swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR____TtC8Freeform11CRLLinkView_rep]);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v11, "begin");
    objc_msgSend(v11, "setDisableActions:", 1);
    v12 = *(void **)&v4[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
    v13 = objc_msgSend(v10, "layout");
    v14 = objc_msgSend(v13, "geometry");

    objc_msgSend(v14, "size");
    objc_msgSend(v12, "setFrame:", sub_10005FDDC());
    sub_100898CB0();
    objc_msgSend(v11, "commit");

  }
}

void sub_100898CB0()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *Strong;
  void *v8;
  id v9;
  id v10;
  void *v11;
  CGFloat m11;
  CGFloat m12;
  CGFloat m14;
  CGFloat m13;
  CGFloat m22;
  CGFloat m21;
  CGFloat m23;
  CGFloat m24;
  uint64_t v20;
  id v21;
  void *v22;
  double v23;
  CGFloat v24;
  void *v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat Height;
  CGFloat v29;
  CGFloat v30;
  double v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  CGFloat m43;
  CGFloat m44;
  CGFloat m42;
  CGFloat m41;
  CGFloat m34;
  CGFloat m33;
  CGFloat m32;
  CGFloat m31;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  id v59;
  CATransform3D v60;
  CATransform3D b;
  CATransform3D a;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v1 = v0;
  objc_msgSend(v0, "bounds");
  if (CGRectGetWidth(v63) <= 0.0)
    return;
  objc_msgSend(v0, "bounds");
  if (CGRectGetHeight(v64) < 0.0)
    return;
  v2 = objc_msgSend(v0, "layer");
  if (!v2)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateTransform()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkView.swift", 82, 2, 168, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateTransform()", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkView.swift", 82, 2u, 168, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v59 = v2;
  v3 = objc_msgSend(v2, "sublayers");
  if (!v3)
  {
LABEL_16:

    return;
  }
  v4 = v3;
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013E7790, CALayer_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8Freeform11CRLLinkView_rep]);
  if (!Strong
    || (v8 = Strong,
        v9 = objc_msgSend(Strong, "layout"),
        v8,
        v10 = objc_msgSend(v9, "geometryInRoot"),
        v9,
        !v10))
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v11 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v11, "begin");
  objc_msgSend(v11, "setDisableActions:", 1);
  CATransform3DMakeScale(&a, *(CGFloat *)&v1[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale], *(CGFloat *)&v1[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale], 1.0);
  m11 = a.m11;
  m12 = a.m12;
  m13 = a.m13;
  m14 = a.m14;
  m21 = a.m21;
  m22 = a.m22;
  m23 = a.m23;
  m24 = a.m24;
  m32 = a.m32;
  m31 = a.m31;
  m34 = a.m34;
  m33 = a.m33;
  m42 = a.m42;
  m41 = a.m41;
  m43 = a.m43;
  m44 = a.m44;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v40 = v6;
    else
      v40 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v20 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v57 = m23;
  v58 = m22;
  v56 = m24;
  if (v20)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    }
    else
    {
      if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v21 = *(id *)(v6 + 32);
    }
    v22 = v21;
    swift_bridgeObjectRelease();
    objc_msgSend(v22, "setAnchorPoint:", 0.5, 0.5);

  }
  else
  {
    *(_QWORD *)&v23 = swift_bridgeObjectRelease().n128_u64[0];
  }
  objc_msgSend(v1, "bounds", v23);
  v24 = CGRectGetWidth(v65) * 0.5;
  v25 = *(void **)&v1[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
  objc_msgSend(v25, "frame");
  v26 = v24 - CGRectGetWidth(v66) * 0.5;
  objc_msgSend(v1, "bounds");
  v27 = CGRectGetHeight(v67) * 0.5;
  objc_msgSend(v25, "frame");
  Height = CGRectGetHeight(v68);
  CATransform3DMakeTranslation(&a, v26, v27 - Height * 0.5, 0.0);
  v46 = *(_OWORD *)&a.m13;
  v47 = *(_OWORD *)&a.m11;
  v44 = *(_OWORD *)&a.m23;
  v45 = *(_OWORD *)&a.m21;
  v42 = *(_OWORD *)&a.m33;
  v43 = *(_OWORD *)&a.m31;
  v41 = *(_OWORD *)&a.m41;
  v29 = a.m43;
  v30 = a.m44;
  objc_msgSend(v10, "transform");
  v31 = sub_1000791EC(&a.m11);
  CATransform3DMakeRotation(&a, v31, 0.0, 0.0, 1.0);
  v32 = *(_OWORD *)&a.m11;
  v33 = *(_OWORD *)&a.m13;
  v34 = *(_OWORD *)&a.m21;
  v35 = *(_OWORD *)&a.m23;
  v36 = *(_OWORD *)&a.m31;
  v37 = *(_OWORD *)&a.m33;
  v38 = *(_OWORD *)&a.m41;
  v39 = *(_OWORD *)&a.m43;
  a.m11 = m11;
  a.m12 = m12;
  a.m13 = m13;
  a.m14 = m14;
  a.m21 = m21;
  a.m22 = v58;
  a.m23 = v57;
  a.m24 = v56;
  a.m31 = m31;
  a.m32 = m32;
  a.m33 = m33;
  a.m34 = m34;
  a.m41 = m41;
  a.m42 = m42;
  a.m43 = m43;
  a.m44 = m44;
  *(_OWORD *)&b.m11 = v32;
  *(_OWORD *)&b.m13 = v33;
  *(_OWORD *)&b.m21 = v34;
  *(_OWORD *)&b.m23 = v35;
  *(_OWORD *)&b.m31 = v36;
  *(_OWORD *)&b.m33 = v37;
  *(_OWORD *)&b.m41 = v38;
  *(_OWORD *)&b.m43 = v39;
  CATransform3DConcat(&v60, &a, &b);
  *(_OWORD *)&a.m11 = v47;
  *(_OWORD *)&a.m13 = v46;
  *(_OWORD *)&a.m21 = v45;
  *(_OWORD *)&a.m23 = v44;
  *(_OWORD *)&a.m31 = v43;
  *(_OWORD *)&a.m33 = v42;
  *(_OWORD *)&a.m41 = v41;
  a.m43 = v29;
  a.m44 = v30;
  b = v60;
  CATransform3DConcat(&v60, &a, &b);
  a = v60;
  objc_msgSend(v59, "setSublayerTransform:", &a);
  objc_msgSend(v11, "commit");

}

id sub_100899240()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLLinkView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLLinkView()
{
  return objc_opt_self(_TtC8Freeform11CRLLinkView);
}

id sub_1008992C8(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(objc_allocWithZone((Class)LPLinkView), "initWithMetadata:", a1);
  objc_msgSend(v1, "_setDisableLinkFollowing:", 1);
  objc_msgSend(v1, "_setDisableTapGesture:", 1);
  objc_msgSend(v1, "_setDisableAnimations:", 1);
  objc_msgSend(v1, "_setDisablePlayback:", 1);
  objc_msgSend(v1, "_setDisableAutoPlay:", 1);
  objc_msgSend(v1, "_setDisablePreviewGesture:", 1);
  objc_msgSend(v1, "_setDisableHighlightGesture:", 1);
  objc_msgSend(v1, "_setDisablePlaybackControls:", 1);
  objc_msgSend(v1, "_setPreferredSizeClass:", 5);
  v2 = objc_msgSend(objc_allocWithZone((Class)LPLinkRendererSizeClassParameters), "init");
  objc_msgSend(v2, "setNeverShowIcon:", 1);
  objc_msgSend(v1, "_setSizeClassParameters:", v2);
  objc_msgSend(v1, "setUserInteractionEnabled:", 0);
  objc_msgSend(v1, "setOverrideUserInterfaceStyle:", 1);

  return v1;
}

uint64_t sub_100899424(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 128) = v1;
  *(_BYTE *)(v2 + 144) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 136) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100899494, v4, v5);
}

uint64_t sub_100899494()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(unsigned __int8 *)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 136));
  if (v1 == 1)
  {
    if (qword_1013DD888 != -1)
      swift_once(&qword_1013DD888, sub_100A05DE4);
    swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 88, 0, 0);
    v2 = (void *)static OS_os_log.realTimeSync;
    v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v3, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v5 = v2;
    GroupSession.activity.getter((_QWORD *)(v0 + 112), v5);
    v6 = *(_QWORD *)(v0 + 112);
    swift_release(v6);
    *(_QWORD *)(v0 + 120) = v6;
    v7 = String.init<A>(describing:)(v0 + 120, &type metadata for UnsafeMutableRawPointer);
    v9 = v8;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v7;
    *(_QWORD *)(inited + 40) = v9;
    v11 = static os_log_type_t.default.getter(v10);
    sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v11, "leaveSession() call groupSession.end() on %@", 44, 2, inited);
    swift_setDeallocating(inited);
    v12 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v12);

    GroupSession.end()();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100899620()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);

  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 4));
  v1 = &v0[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID];
  v2 = type metadata accessor for UUID(0);
  v3 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(&v0[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID], v2);
  swift_release(*(_QWORD *)&v0[qword_101480A40]);
  sub_1004CB800((uint64_t)&v0[qword_101404F00], &qword_1013EE2F8);
  sub_1004CB800((uint64_t)&v0[*(_QWORD *)(*(_QWORD *)v0 + 280)], &qword_1013F7360);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLBoardOpportunisticGroupSession(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F71B8;
  if (!qword_1013F71B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardOpportunisticGroupSession);
  return result;
}

uint64_t sub_100899730(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 376);
}

uint64_t sub_100899764(void *a1)
{
  void *v1;
  id v3;
  uint64_t result;
  id v5;
  uint64_t v6;
  id v7;

  v3 = objc_msgSend(v1, "supportedMediaTypes");
  result = 0;
  switch((unint64_t)v3)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      result = sub_100899DCC(a1);
      break;
    case 3uLL:
      result = sub_100899B0C(a1);
      break;
    case 4uLL:
      result = 1;
      break;
    default:
      v5 = v3;
      type metadata accessor for CRLMediaReplacingSupportedMediaTypes(0);
      v7 = v5;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v6, &v7, v6, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_100899814@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  if (objc_msgSend(v1, "supportedMediaTypes"))
  {
    v3 = type metadata accessor for PHPickerFilter(0);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a1;
    v6 = 1;
  }
  else
  {
    static PHPickerFilter.images.getter();
    v3 = type metadata accessor for PHPickerFilter(0);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a1;
    v6 = 0;
  }
  return v4(v5, v6, 1, v3);
}

double *sub_10089988C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_1004B804C(&qword_1013E7938);
  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = v6 | 7;
  v9 = swift_allocObject(v2, v7 + 3 * v5, v6 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_100EF5550;
  v10 = static UTType.realityFile.getter();
  v11 = static UTType.usd.getter(v10);
  static UTType.usdz.getter(v11);
  v12 = objc_msgSend(v1, "supportedMediaTypes");
  switch((unint64_t)v12)
  {
    case 0uLL:
      swift_bridgeObjectRelease();
      v9 = swift_allocObject(v2, v7 + v5, v8);
      *(_OWORD *)(v9 + 16) = xmmword_100EF5E40;
      static UTType.image.getter();
      return (double *)v9;
    case 1uLL:
      swift_bridgeObjectRelease();
      v16 = swift_allocObject(v2, v7 + 3 * v5, v8);
      *(_OWORD *)(v16 + 16) = xmmword_100EF5550;
      v17 = static UTType.image.getter();
      v18 = static UTType.movie.getter(v17);
      static UTType.audio.getter(v18);
      return (double *)v16;
    case 2uLL:
      return (double *)v9;
    case 3uLL:
      v19 = objc_msgSend((id)objc_opt_self(CRLBoardItemImporter), "supportedFileUTTypes");
      v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v3);

      v21 = sub_100AF883C(v20);
      swift_bridgeObjectRelease();
      v25 = v21;
      v22 = sub_100AF883C(v9);
      swift_bridgeObjectRelease();
      sub_100DB6AD0(v22);
      swift_bridgeObjectRelease();
      v15 = sub_1005FFE18(v25);
      swift_bridgeObjectRelease();
      return v15;
    case 4uLL:
      swift_bridgeObjectRelease();
      v14 = objc_msgSend((id)objc_opt_self(CRLBoardItemImporter), "supportedFileUTTypes");
      v15 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v3);

      return v15;
    default:
      v23 = (uint64_t)v12;
      type metadata accessor for CRLMediaReplacingSupportedMediaTypes(0);
      v25 = v23;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v24, &v25, v24, &type metadata for Int);
      __break(1u);
      JUMPOUT(0x100899AF8);
  }
}

uint64_t sub_100899B0C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char v25;
  char v27;

  v1 = objc_msgSend(a1, "pathExtension");
  if (!v1)
    goto LABEL_27;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = sub_1004B804C(&qword_1013E7938);
  v7 = *(_QWORD *)(type metadata accessor for UTType(0) - 8);
  *(_OWORD *)(swift_allocObject(v6, ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ 3 * *(_QWORD *)(v7 + 72), *(unsigned __int8 *)(v7 + 80) | 7)+ 16) = xmmword_100EF5550;
  v8 = static UTType.realityFile.getter();
  v9 = static UTType.usd.getter(v8);
  static UTType.usdz.getter(v9);
  swift_bridgeObjectRetain(v5);
  v11 = UTType.preferredFilenameExtension.getter(v10);
  if (v12)
  {
    if (v3 == v11 && v12 == v5)
      goto LABEL_25;
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v11, v12, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_24;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain(v5);
  v16 = UTType.preferredFilenameExtension.getter(v15);
  if (v17)
  {
    if (v3 == v16 && v17 == v5)
      goto LABEL_25;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v16, v17, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_24;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain(v5);
  v21 = UTType.preferredFilenameExtension.getter(v20);
  if (!v22)
  {
    swift_bridgeObjectRelease();
LABEL_30:
    swift_bridgeObjectRelease();
    if ((v3 != 1667527541 || v5 != 0xE400000000000000)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 1667527541, 0xE400000000000000, 0) & 1) == 0
      && (v3 != 1633973109 || v5 != 0xE400000000000000))
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 1633973109, 0xE400000000000000, 0);
      swift_bridgeObjectRelease();
      v25 = v27 ^ 1;
      return v25 & 1;
    }
    goto LABEL_26;
  }
  if (v3 == v21 && v22 == v5)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v5, 2);
    goto LABEL_26;
  }
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v21, v22, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
    goto LABEL_30;
LABEL_24:
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
LABEL_27:
  v25 = 0;
  return v25 & 1;
}

uint64_t sub_100899DCC(void *a1)
{
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  char v27;

  result = (uint64_t)objc_msgSend(a1, "pathExtension");
  if (result)
  {
    v3 = (void *)result;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v6 = v5;

    if (objc_msgSend(a1, "_IF_isDirectory"))
    {
      v7 = v4 == 7368801 && v6 == 0xE300000000000000;
      if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 7368801, 0xE300000000000000, 0) & 1) == 0)
        goto LABEL_37;
    }
    v8 = sub_1004B804C(&qword_1013E7938);
    v9 = *(_QWORD *)(type metadata accessor for UTType(0) - 8);
    *(_OWORD *)(swift_allocObject(v8, ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ 3 * *(_QWORD *)(v9 + 72), *(unsigned __int8 *)(v9 + 80) | 7)+ 16) = xmmword_100EF5550;
    v10 = static UTType.realityFile.getter();
    v11 = static UTType.usd.getter(v10);
    static UTType.usdz.getter(v11);
    swift_bridgeObjectRetain(v6);
    v13 = UTType.preferredFilenameExtension.getter(v12);
    if (v14)
    {
      if (v4 == v13 && v14 == v6)
        goto LABEL_31;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v13, v14, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
        goto LABEL_30;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain(v6);
    v18 = UTType.preferredFilenameExtension.getter(v17);
    if (v19)
    {
      if (v4 == v18 && v19 == v6)
        goto LABEL_31;
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v18, v19, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        goto LABEL_30;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain(v6);
    v23 = UTType.preferredFilenameExtension.getter(v22);
    if (!v24)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    if (v4 != v23 || v24 != v6)
    {
      v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v23, v24, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
LABEL_30:
        swift_bridgeObjectRelease();
LABEL_37:
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_33:
      swift_bridgeObjectRelease();
      if ((v4 != 1667527541 || v6 != 0xE400000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 1667527541, 0xE400000000000000, 0) & 1) == 0
        && (v4 != 1633973109 || v6 != 0xE400000000000000))
      {
        v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 1633973109, 0xE400000000000000, 0);
        swift_bridgeObjectRelease();
        return v27 & 1;
      }
      goto LABEL_37;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_37;
  }
  return result;
}

uint64_t *sub_10089A0D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
  }
  swift_retain(v19);
  return v4;
}

double sub_10089A19C(uint64_t a1, int *a2)
{
  uint64_t v4;
  double result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10089A204(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  swift_retain(v18);
  return a1;
}

uint64_t sub_10089A2A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  v21 = v18[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

uint64_t sub_10089A36C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10089A3DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = *(_QWORD *)(a1 + v19 + 8);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  swift_release(v20);
  return a1;
}

uint64_t sub_10089A47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10089A488);
}

uint64_t sub_10089A488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10089A508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10089A514);
}

uint64_t sub_10089A514(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t _s15FilterViewModelVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F73C0;
  if (!qword_1013F73C0)
    return swift_getSingletonMetadata(a1, &_s15FilterViewModelVMn);
  return result;
}

uint64_t sub_10089A5CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F12600;
    v4[2] = &unk_100F12618;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

BOOL sub_10089A654(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + *(int *)(_s13ItemViewModelVMa(0) + 44));
  return sub_100623C98(a2, v3);
}

uint64_t sub_10089A688()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t (**v18)();
  uint64_t v19;
  id v20;
  NSString v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t (**v29)();
  uint64_t v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t (**v42)(uint64_t);
  uint64_t v43;

  v0 = sub_1004B804C(&qword_1013F7408);
  v1 = (int *)_s15FilterViewModelVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = 2 * v3;
  v43 = swift_allocObject(v0, v5 + 3 * v3, v4 | 7);
  *(_OWORD *)(v43 + 16) = xmmword_100EF5550;
  v7 = v43 + v5;
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, v11, 0);

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  UUID.init()(v16);
  v17 = (uint64_t *)(v7 + v1[5]);
  *v17 = v13;
  v17[1] = v15;
  *(_OWORD *)(v7 + v1[6]) = xmmword_100F125D0;
  v18 = (uint64_t (**)())(v7 + v1[7]);
  *v18 = CRLWPShapeLayout.columnsAreLeftToRight.getter;
  v18[1] = 0;
  v19 = v7 + v3;
  v20 = objc_msgSend(v8, "mainBundle");
  v21 = String._bridgeToObjectiveC()();
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v20, "localizedStringForKey:value:table:", v21, v22, 0);

  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  UUID.init()(v27);
  v28 = (uint64_t *)(v19 + v1[5]);
  *v28 = v24;
  v28[1] = v26;
  *(_OWORD *)(v19 + v1[6]) = xmmword_100F125E0;
  v29 = (uint64_t (**)())(v19 + v1[7]);
  *v29 = CRLWPShapeLayout.columnsAreLeftToRight.getter;
  v29[1] = 0;
  v30 = v7 + v6;
  v31 = objc_msgSend(v8, "mainBundle");
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, v33, 0);

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v37 = v36;

  result = UUID.init()(v38);
  v40 = (uint64_t *)(v30 + v1[5]);
  *v40 = v35;
  v40[1] = v37;
  v41 = (_QWORD *)(v30 + v1[6]);
  *v41 = 0xD000000000000011;
  v41[1] = 0x8000000100FDAD30;
  v42 = (uint64_t (**)(uint64_t))(v30 + v1[7]);
  *v42 = sub_10089A9C4;
  v42[1] = 0;
  qword_10147FBC8 = v43;
  return result;
}

uint64_t sub_10089A9C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + *(int *)(_s13ItemViewModelVMa(0) + 48));
}

Swift::Int sub_10089A9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8, 0);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v8, v1, v2);
  v3 = _s15FilterViewModelVMa(0);
  String.hash(into:)(v8, *(_QWORD *)(v0 + *(int *)(v3 + 20)), *(_QWORD *)(v0 + *(int *)(v3 + 20) + 8));
  v4 = (uint64_t *)(v0 + *(int *)(v3 + 24));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v5);
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10089AAD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_10089AB10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = type metadata accessor for UUID(0);
  v6 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  String.hash(into:)(a1, *(_QWORD *)(v2 + *(int *)(a2 + 20)), *(_QWORD *)(v2 + *(int *)(a2 + 20) + 8));
  v7 = (uint64_t *)(v2 + *(int *)(a2 + 24));
  v8 = v7[1];
  if (v8)
  {
    v9 = *v7;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v8);
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10089ABDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, a1);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v10, v4, v5);
  String.hash(into:)(v10, *(_QWORD *)(v2 + *(int *)(a2 + 20)), *(_QWORD *)(v2 + *(int *)(a2 + 20) + 8));
  v6 = (uint64_t *)(v2 + *(int *)(a2 + 24));
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    String.hash(into:)(v10, v8, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10089ACB8()
{
  return sub_1004B7878(&qword_1013F7400, _s15FilterViewModelVMa, (uint64_t)&unk_100F12630);
}

uint64_t sub_10089ACE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v31;

  v4 = _s15FilterViewModelVMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v31 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v31 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - v14;
  v16 = static UUID.== infix(_:_:)(a1);
  sub_10089AF3C(a1, (uint64_t)v15);
  sub_10089AF3C(a2, (uint64_t)v12);
  if ((v16 & 1) == 0)
  {
    sub_10089AF80((uint64_t)v15);
    sub_10089AF80((uint64_t)v12);
    sub_10089AF3C(a1, (uint64_t)v9);
    sub_10089AF3C(a2, (uint64_t)v6);
    goto LABEL_9;
  }
  v17 = *(int *)(v4 + 20);
  v18 = *(_QWORD *)&v15[v17];
  v19 = *(_QWORD *)&v15[v17 + 8];
  v20 = &v12[v17];
  v21 = *((_QWORD *)v20 + 1);
  if (v18 == *(_QWORD *)v20 && v19 == v21)
  {
    sub_10089AF80((uint64_t)v15);
    sub_10089AF80((uint64_t)v12);
    sub_10089AF3C(a1, (uint64_t)v9);
    sub_10089AF3C(a2, (uint64_t)v6);
    goto LABEL_12;
  }
  v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, *(_QWORD *)v20, v21, 0);
  sub_10089AF80((uint64_t)v15);
  sub_10089AF80((uint64_t)v12);
  sub_10089AF3C(a1, (uint64_t)v9);
  sub_10089AF3C(a2, (uint64_t)v6);
  if ((v23 & 1) == 0)
  {
LABEL_9:
    sub_10089AF80((uint64_t)v6);
    sub_10089AF80((uint64_t)v9);
LABEL_10:
    LOBYTE(v24) = 0;
    return v24 & 1;
  }
LABEL_12:
  v25 = *(int *)(v4 + 24);
  v26 = &v9[v25];
  v27 = *(_QWORD *)&v9[v25 + 8];
  v28 = &v6[v25];
  v24 = *((_QWORD *)v28 + 1);
  if (!v27)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v28 + 1));
    sub_10089AF80((uint64_t)v6);
    sub_10089AF80((uint64_t)v9);
    if (!v24)
    {
      LOBYTE(v24) = 1;
      return v24 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v24)
  {
    if (*(_QWORD *)v26 == *(_QWORD *)v28 && v27 == v24)
      LOBYTE(v24) = 1;
    else
      LOBYTE(v24) = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v26, v27, *(_QWORD *)v28, *((_QWORD *)v28 + 1), 0);
  }
  swift_bridgeObjectRetain(v27);
  sub_10089AF80((uint64_t)v6);
  sub_10089AF80((uint64_t)v9);
  swift_bridgeObjectRelease();
  return v24 & 1;
}

uint64_t sub_10089AF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s15FilterViewModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10089AF80(uint64_t a1)
{
  uint64_t v2;

  v2 = _s15FilterViewModelVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10089AFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for SHA256(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SHA256Digest(0);
  __chkstk_darwin(v4);
  v5 = sub_1004B7878((unint64_t *)&qword_1013F7428, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v3, v5);
  __asm { BR              X10 }
}

uint64_t sub_10089B0C8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 - 112) = v1;
  *(_WORD *)(v7 - 104) = v0;
  *(_BYTE *)(v7 - 102) = BYTE2(v0);
  *(_BYTE *)(v7 - 101) = BYTE3(v0);
  *(_BYTE *)(v7 - 100) = BYTE4(v0);
  *(_BYTE *)(v7 - 99) = BYTE5(v0);
  dispatch thunk of HashFunction.update(bufferPointer:)(v7 - 112, v7 - 112 + BYTE6(v0), v3, v6);
  sub_1004BBBC8(v1, v0);
  dispatch thunk of HashFunction.finalize()(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 128) + 8))(v5, v3);
  v8 = type metadata accessor for UUID(0);
  SHA256Digest.withUnsafeBytes<A>(_:)(sub_10089B3C4, 0, v8);
  sub_1004BBBC8(v1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 120) + 8))(v4, v2);
}

uint64_t sub_10089B2E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UUID(0);
  sub_100501DE0(v3, qword_1013F7410);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_1013F7410);
  UUID.init(uuidString:)(0xD000000000000024, 0x8000000100FDAD50, v5);
  v6 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_10089B3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10089B40C(a1, a2, a3);
}

uint64_t sub_10089B40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;

  v27 = a1;
  v28 = a2;
  v31 = a3;
  v3 = type metadata accessor for SHA256Digest(0);
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SHA256(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD390 != -1)
    swift_once(&qword_1013DD390, sub_10089B2E4);
  v14 = sub_1004F2A1C(v10, (uint64_t)qword_1013F7410);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  v15 = sub_1004B7878((unint64_t *)&qword_1013F7428, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  v16 = dispatch thunk of HashFunction.init()(v6, v15);
  v32 = UUID.uuid.getter(v16);
  v33 = v17;
  v34 = v18;
  v35 = v19;
  v36 = v20;
  v37 = v21;
  v38 = v22;
  v39 = v23;
  v40 = v24;
  dispatch thunk of HashFunction.update(bufferPointer:)(&v32, &v41, v6, v15);
  dispatch thunk of HashFunction.update(bufferPointer:)(v27, v28, v6, v15);
  dispatch thunk of HashFunction.finalize()(v6, v15);
  sub_10089B6A8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10089B6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v0 = type metadata accessor for SHA256Digest(0);
  v1 = sub_1004B7878(&qword_1013F7430, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256Digest, (uint64_t)&protocol conformance descriptor for SHA256Digest);
  v2 = sub_1004B804C(&qword_1013F7438);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)(v4, sub_100C7FBF4, 0, v2, v0, v1);
  return UUID.init(uuid:)(LOBYTE(v4[0]), BYTE1(v4[0]), BYTE2(v4[0]), BYTE3(v4[0]), BYTE4(v4[0]), BYTE5(v4[0]), BYTE6(v4[0]), HIBYTE(v4[0]), v4[1]);
}

double sub_10089B768()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  void *v7;
  double result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = type metadata accessor for CRLFileEditor();
  v4 = v2;
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v6 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v7 = (void *)swift_dynamicCastClass(v6, v4);
  if (v7)
    objc_msgSend(v7, "showMediaReplaceUI:", v0);
  *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  return result;
}

id sub_10089B7F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterFileDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterFileDataProvider()
{
  return objc_opt_self(_TtC8Freeform32CRLMiniFormatterFileDataProvider);
}

void sub_10089B848(char a1@<W2>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  __asm { BR              X10 }
}

_QWORD *sub_10089B898()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[13];

  v6[3] = &type metadata for CRLWPShapePresetData;
  v6[4] = sub_1008514C4();
  v6[0] = swift_allocObject(&unk_1012845A0, 896, 7);
  sub_1004BE310(v3, v1);
  v4 = sub_10089D5FC();
  CRValue.init(serializedData:)(v3, v1, &type metadata for CRLWPShapePresetData, v4);
  sub_1004CB800(v0, &qword_1013EB9A0);
  if (v2)
    return sub_1006E6ED8(v6);
  else
    return (_QWORD *)sub_1004C4938((uint64_t)v6, v0, &qword_1013EB9A0);
}

_QWORD *sub_10089BAB8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD v78[11];
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  unint64_t v113;

  v112 = a7;
  v113 = a8;
  v105 = a5;
  v106 = a6;
  v104 = a3;
  v111 = a2;
  v109 = a10;
  v110 = a1;
  v107 = a4;
  v108 = a9;
  v97 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  v10 = __chkstk_darwin(v97);
  v78[8] = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v98 = (char *)v78 - v12;
  v95 = type metadata accessor for CRLConnectionLineCRDTData(0);
  v13 = __chkstk_darwin(v95);
  v78[7] = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v96 = (char *)v78 - v15;
  v92 = type metadata accessor for CRLMovieItemCRDTData(0);
  v16 = __chkstk_darwin(v92);
  v78[6] = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v93 = (char *)v78 - v18;
  v90 = type metadata accessor for CRLFileItemCRDTData(0);
  v19 = __chkstk_darwin(v90);
  v78[5] = (char *)v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v91 = (char *)v78 - v21;
  v88 = type metadata accessor for CRLURLItemCRDTData(0);
  v22 = __chkstk_darwin(v88);
  v78[3] = (char *)v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v89 = (char *)v78 - v24;
  v86 = type metadata accessor for CRLUSDZItemCRDTData(0);
  v25 = __chkstk_darwin(v86);
  v78[2] = (char *)v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v87 = (char *)v78 - v27;
  v85 = type metadata accessor for CRLImageItemCRDTData(0);
  v28 = __chkstk_darwin(v85);
  v78[4] = (char *)v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v94 = (char *)v78 - v30;
  v83 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  v31 = __chkstk_darwin(v83);
  v78[10] = (char *)v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v84 = (char *)v78 - v33;
  v80 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  v34 = __chkstk_darwin(v80);
  v78[1] = (char *)v78 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v81 = (char *)v78 - v36;
  v37 = sub_1004B804C(&qword_1013F5530);
  v38 = __chkstk_darwin(v37);
  v103 = (char *)v78 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v38);
  v102 = (char *)v78 - v41;
  v42 = __chkstk_darwin(v40);
  v101 = (char *)v78 - v43;
  v44 = __chkstk_darwin(v42);
  v99 = (char *)v78 - v45;
  __chkstk_darwin(v44);
  v100 = (char *)v78 - v46;
  v79 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  v47 = __chkstk_darwin(v79);
  v78[0] = (char *)v78 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v82 = (char *)v78 - v49;
  v50 = type metadata accessor for CRLContainerItemCRDTData(0);
  v51 = __chkstk_darwin(v50);
  v78[9] = (char *)v78 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v53 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  v54 = __chkstk_darwin(v53);
  v55 = __chkstk_darwin(v54);
  v56 = __chkstk_darwin(v55);
  v57 = __chkstk_darwin(v56);
  v58 = __chkstk_darwin(v57);
  v59 = __chkstk_darwin(v58);
  __chkstk_darwin(v59);
  v61 = __chkstk_darwin((char *)v78 - v60);
  v62 = __chkstk_darwin(v61);
  __chkstk_darwin(v62);
  v65 = (char *)v78 - v64;
  if ((v111 & 1) != 0)
    __asm { BR              X9 }
  v66 = v63;
  v68 = v112;
  v67 = v113;
  sub_1004BE310(v112, v113);
  v69 = sub_10089D038((unint64_t *)&qword_1013F7470, (uint64_t *)&unk_1013F02C0);
  CRDT.init(serializedData:)(v68, v67, v53, v69);
  sub_1004C4938((uint64_t)v65, v66, (uint64_t *)&unk_1013F02C0);
  v70 = type metadata accessor for CRLUnknownItemData(0);
  v71 = swift_allocObject(v70, *(unsigned int *)(v70 + 48), *(unsigned __int16 *)(v70 + 52));
  v72 = v71 + qword_101400218;
  v73 = v109;
  *(_QWORD *)v72 = v110;
  *(_BYTE *)(v72 + 8) = 0;
  v74 = (uint64_t *)(v71 + qword_101400220);
  v75 = v108;
  *v74 = v108;
  v74[1] = v73;
  sub_1004C4938(v66, v71 + *(_QWORD *)(*(_QWORD *)v71 + 632), (uint64_t *)&unk_1013F02C0);
  v76 = sub_1005E1000(v104, v107, v105, v106);
  sub_1004BE310(v75, v73);
  return v76;
}

uint64_t sub_10089D038(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1004CB6A4(a2);
    result = swift_getWitnessTable(&unk_100EFD44C, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10089D078()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255)
    sub_1004C4230(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1 & 1);
  if (*(_QWORD *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 264, 7);
}

unint64_t sub_10089D0E4()
{
  unint64_t result;

  result = qword_1013F74A0;
  if (!qword_1013F74A0)
  {
    result = swift_getWitnessTable(&unk_100F28904, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F74A0);
  }
  return result;
}

unint64_t sub_10089D12C()
{
  unint64_t result;

  result = qword_1013F74A8;
  if (!qword_1013F74A8)
  {
    result = swift_getWitnessTable(&unk_100F28944, &type metadata for CRLMoviePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F74A8);
  }
  return result;
}

unint64_t sub_10089D170()
{
  unint64_t result;

  result = qword_1013F74B0;
  if (!qword_1013F74B0)
  {
    result = swift_getWitnessTable(&unk_100F1F574, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F74B0);
  }
  return result;
}

uint64_t sub_10089D1B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[14])
  {
    swift_bridgeObjectRelease(v0[8]);
    swift_bridgeObjectRelease(v0[11]);
    swift_bridgeObjectRelease(v0[13]);
    swift_bridgeObjectRelease(v0[14]);
    v1 = v0[20];
    if (v1)
    {
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(v0[22]);
    }
    swift_bridgeObjectRelease(v0[25]);
    v2 = v0[27];
    if (v2)
    {
      swift_bridgeObjectRelease(v2);
      swift_bridgeObjectRelease(v0[29]);
    }
    swift_bridgeObjectRelease(v0[30]);
  }
  if (v0[41])
  {
    swift_bridgeObjectRelease(v0[35]);
    swift_bridgeObjectRelease(v0[38]);
    swift_bridgeObjectRelease(v0[40]);
    swift_bridgeObjectRelease(v0[41]);
    swift_bridgeObjectRelease(v0[45]);
    swift_bridgeObjectRelease(v0[46]);
  }
  swift_bridgeObjectRelease(v0[48]);
  swift_bridgeObjectRelease(v0[49]);
  return swift_deallocObject(v0, 400, 7);
}

unint64_t sub_10089D27C()
{
  unint64_t result;

  result = qword_1013F74B8;
  if (!qword_1013F74B8)
  {
    result = swift_getWitnessTable(&unk_100F1F5B4, &type metadata for CRLImagePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F74B8);
  }
  return result;
}

unint64_t sub_10089D2C0()
{
  unint64_t result;

  result = qword_1013F74C0;
  if (!qword_1013F74C0)
  {
    result = swift_getWitnessTable(&unk_100F317AC, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F74C0);
  }
  return result;
}

uint64_t sub_10089D304()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[14])
  {
    swift_bridgeObjectRelease(v0[8]);
    swift_bridgeObjectRelease(v0[11]);
    swift_bridgeObjectRelease(v0[13]);
    swift_bridgeObjectRelease(v0[14]);
    v1 = v0[20];
    if (v1)
    {
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(v0[22]);
    }
    swift_bridgeObjectRelease(v0[25]);
    v2 = v0[27];
    if (v2)
    {
      swift_bridgeObjectRelease(v2);
      swift_bridgeObjectRelease(v0[29]);
    }
    swift_bridgeObjectRelease(v0[30]);
  }
  if (v0[43])
  {
    swift_bridgeObjectRelease(v0[37]);
    swift_bridgeObjectRelease(v0[40]);
    swift_bridgeObjectRelease(v0[42]);
    swift_bridgeObjectRelease(v0[43]);
    swift_bridgeObjectRelease(v0[44]);
  }
  if (v0[55])
  {
    swift_bridgeObjectRelease(v0[49]);
    swift_bridgeObjectRelease(v0[52]);
    swift_bridgeObjectRelease(v0[54]);
    swift_bridgeObjectRelease(v0[55]);
    swift_bridgeObjectRelease(v0[59]);
    swift_bridgeObjectRelease(v0[60]);
  }
  if (v0[67])
  {
    swift_bridgeObjectRelease(v0[62]);
    swift_bridgeObjectRelease(v0[67]);
    swift_bridgeObjectRelease(v0[68]);
  }
  if (v0[74])
  {
    swift_bridgeObjectRelease(v0[69]);
    swift_bridgeObjectRelease(v0[74]);
    swift_bridgeObjectRelease(v0[75]);
  }
  swift_bridgeObjectRelease(v0[76]);
  return swift_deallocObject(v0, 616, 7);
}

unint64_t sub_10089D430()
{
  unint64_t result;

  result = qword_1013F74C8;
  if (!qword_1013F74C8)
  {
    result = swift_getWitnessTable(&unk_100F31774, &type metadata for CRLShapePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F74C8);
  }
  return result;
}

uint64_t sub_10089D474()
{
  uint64_t v0;
  int v1;

  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 160))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 216))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 344))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 440))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 536))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 592))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 632);
  if (v1 != 255)
    sub_1004C4230(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 624), v1 & 1);
  if (*(_QWORD *)(v0 + 776))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 896, 7);
}

unint64_t sub_10089D5FC()
{
  unint64_t result;

  result = qword_1013F74D0;
  if (!qword_1013F74D0)
  {
    result = swift_getWitnessTable(&unk_100F313D8, &type metadata for CRLWPShapePresetData);
    atomic_store(result, (unint64_t *)&qword_1013F74D0);
  }
  return result;
}

id sub_10089D640(uint64_t a1, void *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char *v7;
  id v8;
  double v9;
  objc_super v11;

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 408))(a1);
  if ((v5 & 1) != 0)
    __asm { BR              X9 }
  if (*(_UNKNOWN ****)a1 == &off_101400278)
    v6 = a1;
  else
    v6 = 0;
  v7 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUnknownItem(0));
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v6;
  v11.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  v8 = a2;
  *(_QWORD *)&v9 = swift_retain(a1).n128_u64[0];
  return objc_msgSendSuper2(&v11, "init", v9, v7, v11.super_class);
}

void sub_10089D708()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;

  v2 = type metadata accessor for CRLContainerItemData(0);
  v3 = swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0);
  v4 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLGroupItem(0));
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = &_swiftEmptyDictionarySingleton;
  *(_DWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v3;
  type metadata accessor for CRLBoardItemBase(0);
  v5 = v0;
  swift_retain(v1);
  JUMPOUT(0x10089D6D4);
}

void sub_10089D7D0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = type metadata accessor for CRLWPShapeItemData(0);
  v3 = swift_dynamicCastClassUnconditional(v1, v2, 0, 0, 0);
  objc_allocWithZone((Class)type metadata accessor for CRLWPShapeItem(0));
  v4 = v0;
  swift_retain(v1);
  sub_10084AD70(v4, v3);
  JUMPOUT(0x10089D6DCLL);
}

_QWORD *sub_10089DBB4(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  _BYTE *v21;
  unint64_t v22;
  char *v23;
  char v24;
  unint64_t v25;
  unint64_t v27;
  _BYTE *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1007BD85C(a1[4]);
  if ((v4 & 0x100) != 0)
  {
    v22 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v22, 0, 0);
    v24 = 1;
LABEL_10:
    *v23 = v24;
    goto LABEL_11;
  }
  v1 = (_QWORD *)a1[5];
  if (!v1[2] || (v5 = v3, v6 = v4, sub_10084342C(1), (v8 & 1) == 0))
  {
    v25 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v25, 0, 0);
    v24 = 5;
    goto LABEL_10;
  }
  v9 = (uint64_t *)(v1[7] + 16 * v7);
  v10 = *v9;
  v11 = v9[1];
  v12 = v1[2];
  sub_1004BE310(*v9, v11);
  if (!v12 || (sub_10084342C(2), (v14 & 1) == 0))
  {
    v27 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v27, 0, 0);
    *v28 = 6;
    swift_willThrow(v29);
    sub_1004BBBC8(v10, v11);
    return v1;
  }
  v15 = a1[1];
  v32 = *a1;
  v30 = a1[3];
  v31 = a1[2];
  v16 = (uint64_t *)(v1[7] + 16 * v13);
  v17 = *v16;
  v18 = v16[1];
  sub_1004BE310(*v16, v18);
  v1 = sub_10089BAB8(v5, v6 & 1, v32, v15, v31, v30, v10, v11, v17, v18);
  sub_1004BBBC8(v17, v18);
  sub_1004BBBC8(v10, v11);
  if (!v1)
  {
    v19 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v19, 0, 0);
    *v21 = 0;
LABEL_11:
    swift_willThrow(v20);
  }
  return v1;
}

uint64_t sub_10089DD8C(uint64_t *a1, void *a2)
{
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  __n128 v18;

  sub_1007BD85C(a1[4]);
  if ((v5 & 0x100) == 0 || !(v4 | v5))
  {
    v15 = 1;
LABEL_8:
    v16 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v16, 0, 0);
    *v17 = v15;
    swift_willThrow(v18);
    return v15;
  }
  v6 = a1[5];
  if (!*(_QWORD *)(v6 + 16) || (sub_10084342C(0), (v8 & 1) == 0))
  {
    v15 = 10;
    goto LABEL_8;
  }
  v9 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v7);
  v10 = *v9;
  v11 = v9[1];
  v12 = *a1;
  v13 = a1[1];
  sub_1004BE310(*v9, v11);
  sub_1006A18F8(v10, v11, v12, v13, a2);
  v15 = v14;
  sub_1004BBBC8(v10, v11);
  return v15;
}

char *sub_10089DE84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int16 v24;
  unint64_t v25;
  _BYTE *v26;
  __n128 v27;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _BYTE *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  _BYTE *v56;
  __n128 v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  id v65;
  uint64_t v66;

  v65 = a3;
  v66 = a2;
  v5 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v58 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - v12;
  v14 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v58 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v58 - v21;
  sub_1007BD85C(*(_QWORD *)(a1 + 32));
  if ((v24 & 0x100) != 0 && !(v23 | v24))
  {
    v64 = v13;
    v13 = (char *)a1;
    sub_100DA91A4();
    if (!v3)
    {
      v29 = *(_QWORD *)(a1 + 40);
      if (*(_QWORD *)(v29 + 16) && (v63 = *(_QWORD *)(a1 + 40), v13 = (char *)v29, sub_10084342C(2), (v31 & 1) != 0))
      {
        v32 = (uint64_t *)(*(_QWORD *)(v63 + 56) + 16 * v30);
        v33 = *v32;
        v62 = v32[1];
        sub_1004BE310(v33, v62);
        v34 = sub_1004B7878(&qword_101406B30, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F222DC);
        v35 = v62;
        v62 = v34;
        CRDT.init(serializedData:)(v33, v35, v5, v34);
        sub_1004CB7BC((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_1013F02C0);
        sub_1004B8460((uint64_t)v64, (uint64_t)v10, type metadata accessor for CRLContainerItemCRDTData);
        v61 = 0x1000000000000;
        v60 = 0x2000400000000;
        v36 = type metadata accessor for CRLContainerItemData(0);
        v37 = *(unsigned int *)(v36 + 48);
        v38 = *(unsigned __int16 *)(v36 + 52);
        v58 = v36;
        v39 = swift_allocObject(v36, v37, v38);
        sub_1004B84E0((uint64_t)v10, v39 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
        sub_1004C4938((uint64_t)v19, v39 + *(_QWORD *)(*(_QWORD *)v39 + 632), (uint64_t *)&unk_1013F02C0);
        v59 = sub_1005E1000(v61, v60, v61, 4);
        sub_100DA91C0();
        if (*(_QWORD *)(v63 + 16))
        {
          sub_10084342C(4);
          if ((v45 & 1) != 0)
          {
            v46 = (uint64_t *)(*(_QWORD *)(v63 + 56) + 16 * v44);
            v47 = *v46;
            v48 = v46[1];
            sub_1004BE310(*v46, v48);
            CRDT.init(serializedData:)(v47, v48, v5, v62);
            sub_1004CB7BC((uint64_t)v16, (uint64_t)v19, (uint64_t *)&unk_1013F02C0);
            sub_1004B8460((uint64_t)v7, (uint64_t)v10, type metadata accessor for CRLContainerItemCRDTData);
            v49 = swift_allocObject(v58, *(unsigned int *)(v58 + 48), *(unsigned __int16 *)(v58 + 52));
            sub_1004B84E0((uint64_t)v10, v49 + qword_1014805D0, type metadata accessor for CRLContainerItemCRDTData);
            sub_1004C4938((uint64_t)v19, v49 + *(_QWORD *)(*(_QWORD *)v49 + 632), (uint64_t *)&unk_1013F02C0);
            v50 = sub_1005E1000(v61, v60, v61, 4);
            v51 = objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
            v52 = v65;
            v53 = v66;
            swift_retain(v66);
            v54 = v59;
            v13 = sub_100B2A698(v52, v53, (uint64_t)v59, (uint64_t)v50, 0, 0);

            swift_release(v53);
            swift_release(v54);
            swift_release(v50);
            sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLContainerItemCRDTData);
            sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013F02C0);
            sub_1004B84A4((uint64_t)v64, type metadata accessor for CRLContainerItemCRDTData);
            sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013F02C0);
            return v13;
          }
        }
        v55 = sub_100577444();
        swift_allocError(&type metadata for CRLSerializationError, v55, 0, 0);
        *v56 = 8;
        swift_willThrow(v57);
        swift_release(v59);
        v13 = (char *)&unk_1013F02C0;
        sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013F02C0);
        sub_1004B84A4((uint64_t)v64, type metadata accessor for CRLContainerItemCRDTData);
        v43 = (uint64_t)v22;
      }
      else
      {
        v40 = sub_100577444();
        swift_allocError(&type metadata for CRLSerializationError, v40, 0, 0);
        *v41 = 6;
        swift_willThrow(v42);
        v43 = (uint64_t)v22;
      }
      sub_1004CB800(v43, (uint64_t *)&unk_1013F02C0);
    }
  }
  else
  {
    v25 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v25, 0, 0);
    *v26 = 1;
    swift_willThrow(v27);
  }
  return v13;
}

uint64_t sub_10089E3D0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  unint64_t v22;
  unsigned __int8 v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  void *v36;
  double v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  void *object;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t (*v50)(char *, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  char *v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  int v73;
  id v74;
  __int128 v75;
  _QWORD v76[4];

  v73 = a3;
  v5 = sub_1004B804C(&qword_1013F5900);
  __chkstk_darwin(v5);
  v72 = (uint64_t *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Mirror.DisplayStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  v71 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v65 - v12;
  v14 = type metadata accessor for Mirror(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v75 = &type metadata for CRLBoardTitleValidator.Error;
  v18 = sub_1004B804C(&qword_1013F7620);
  v19 = String.init<A>(reflecting:)(&v75, v18);
  v21 = v20;
  v22 = sub_1008588B0();
  if (!swift_dynamicCastMetatype(&type metadata for CRLBoardTitleValidator.Error, v22))
  {
    v67 = v19;
    v68 = v15;
    v69 = v14;
    v76[1] = &type metadata for CRLBoardTitleValidator.Error;
    *(_QWORD *)&v75 = a1;
    *((_QWORD *)&v75 + 1) = a2;
    v27 = v73;
    LOBYTE(v76[0]) = v73;
    sub_1005E5784(a1, a2, v73);
    v28 = Mirror.init(reflecting:)(&v75);
    v29 = v72;
    Mirror.displayStyle.getter(v28);
    v30 = v29;
    v31 = v70;
    v32 = v17;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v71 + 48))(v30, 1, v70) == 1)
    {
      (*(void (**)(char *, uint64_t))(v68 + 8))(v17, v69);
      sub_1004CB800((uint64_t)v72, &qword_1013F5900);
      return v67;
    }
    v47 = a2;
    v66 = a1;
    v48 = v71;
    (*(void (**)(char *, uint64_t *, uint64_t))(v71 + 32))(v13, v72, v31);
    (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v10, enum case for Mirror.DisplayStyle.enum(_:), v31);
    v49 = static Mirror.DisplayStyle.== infix(_:_:)(v13, v10);
    v50 = *(uint64_t (**)(char *, uint64_t))(v48 + 8);
    v51 = v50(v10, v31);
    if ((v49 & 1) == 0)
    {
      *(_QWORD *)&v75 = 0;
      *((_QWORD *)&v75 + 1) = 0xE000000000000000;
      v56._countAndFlagsBits = v67;
      v56._object = v21;
      String.append(_:)(v56);
      swift_bridgeObjectRelease(v21);
      v57._countAndFlagsBits = 40;
      v57._object = (void *)0xE100000000000000;
      String.append(_:)(v57);
      _print_unlocked<A, B>(_:_:)(v13, &v75, v31, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v58._countAndFlagsBits = 41;
      v58._object = (void *)0xE100000000000000;
      String.append(_:)(v58);
      v33 = v75;
      v50(v13, v31);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v32, v69);
      return v33;
    }
    v72 = (uint64_t *)v50;
    v52 = (_QWORD *)Mirror.children.getter(v51);
    sub_100857D88(v52, &v75);
    swift_release(v52);
    if (v76[3])
    {
      v53 = (void *)*((_QWORD *)&v75 + 1);
      v54 = v75;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v76);
      if (v53)
      {
        v55 = v32;
LABEL_16:
        v60 = v68;
        v61 = v69;
        *(_QWORD *)&v75 = v67;
        *((_QWORD *)&v75 + 1) = v21;
        v62._countAndFlagsBits = 46;
        v62._object = (void *)0xE100000000000000;
        String.append(_:)(v62);
        v63._countAndFlagsBits = v54;
        v63._object = v53;
        String.append(_:)(v63);
        v64 = swift_bridgeObjectRelease(v53);
        v33 = v75;
        ((void (*)(char *, uint64_t, __n128))v72)(v13, v31, v64);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v61);
        return v33;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)&v75, &qword_1013F5908);
    }
    v55 = v32;
    *(_QWORD *)&v75 = v66;
    *((_QWORD *)&v75 + 1) = v47;
    LOBYTE(v76[0]) = v27;
    sub_1005E5784(v66, v47, v27);
    v54 = String.init<A>(describing:)(&v75, &type metadata for CRLBoardTitleValidator.Error);
    v53 = v59;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)&v75 = a1;
  *((_QWORD *)&v75 + 1) = a2;
  v23 = v73;
  LOBYTE(v76[0]) = v73;
  sub_1005E5784(a1, a2, v73);
  v24 = sub_100633B60();
  v25 = _getErrorEmbeddedNSError<A>(_:)(&v75, &type metadata for CRLBoardTitleValidator.Error, v24);
  if (v25)
  {
    v26 = v25;
    sub_1005E579C(a1, a2, v23);
  }
  else
  {
    v26 = swift_allocError(&type metadata for CRLBoardTitleValidator.Error, v24, 0, 0);
    v34 = v76[0];
    *(_OWORD *)v35 = v75;
    *(_BYTE *)(v35 + 16) = v34;
  }
  v36 = (void *)_convertErrorToNSError(_:)(v26);
  swift_errorRelease(v26);
  *(_QWORD *)&v75 = 0;
  *((_QWORD *)&v75 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  *(_QWORD *)&v37 = swift_bridgeObjectRelease(*((_QWORD *)&v75 + 1)).n128_u64[0];
  *(_QWORD *)&v75 = 0x20726F727245534ELL;
  *((_QWORD *)&v75 + 1) = 0xEF3D6E69616D6F44;
  v38 = objc_msgSend(v36, "domain", v37);
  v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v41 = v40;

  v42._countAndFlagsBits = v39;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v41);
  v43._countAndFlagsBits = 0x3D65646F4320;
  v43._object = (void *)0xE600000000000000;
  String.append(_:)(v43);
  v74 = objc_msgSend(v36, "code");
  v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v44._object;
  String.append(_:)(v44);

  swift_bridgeObjectRelease(object);
  return v75;
}

uint64_t sub_10089E8F8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  double v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  uint64_t ObjectType;
  unint64_t v21;

  ObjectType = swift_getObjectType(v0);
  v1 = sub_1004B804C(&qword_1013F7608);
  String.init<A>(reflecting:)(&ObjectType, v1);
  swift_bridgeObjectRelease(v2);
  ObjectType = (uint64_t)v0;
  v3 = sub_1008588B0();
  v4 = sub_1004B7878(&qword_1013F7610, (uint64_t (*)(uint64_t))sub_1008588B0, (uint64_t)&protocol conformance descriptor for NSError);
  v5 = v0;
  v6 = _getErrorEmbeddedNSError<A>(_:)(&ObjectType, v3, v4);
  if (v6)
  {
    v7 = v6;

  }
  else
  {
    v7 = swift_allocError(v3, v4, 0, 0);
    *v8 = ObjectType;
  }
  v9 = (void *)_convertErrorToNSError(_:)(v7);
  swift_errorRelease(v7);
  ObjectType = 0;
  v21 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  *(_QWORD *)&v10 = swift_bridgeObjectRelease(v21).n128_u64[0];
  ObjectType = 0x20726F727245534ELL;
  v21 = 0xEF3D6E69616D6F44;
  v11 = objc_msgSend(v9, "domain", v10);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 0x3D65646F4320;
  v16._object = (void *)0xE600000000000000;
  String.append(_:)(v16);
  objc_msgSend(v9, "code");
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v17._object;
  String.append(_:)(v17);

  swift_bridgeObjectRelease(object);
  return ObjectType;
}

uint64_t sub_10089EABC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  double v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  void *object;
  char *v45;
  char v46;
  uint64_t (*v47)(char *, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  Swift::String v60;
  __n128 v61;
  char *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  id v69;
  __int128 v70;
  _QWORD v71[4];

  v2 = sub_1004B804C(&qword_1013F5900);
  __chkstk_darwin(v2);
  v67 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Mirror.DisplayStyle(0);
  v68 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v62 - v8;
  v10 = type metadata accessor for Mirror(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CKError(0);
  v15 = v14;
  *(_QWORD *)&v70 = v14;
  v16 = sub_1004B804C(&qword_1013F75F8);
  v17 = String.init<A>(reflecting:)(&v70, v16);
  v19 = v18;
  v20 = sub_1008588B0();
  if (!swift_dynamicCastMetatype(v15, v20))
  {
    v64 = v17;
    v65 = v11;
    v66 = v10;
    v71[1] = v15;
    *(_QWORD *)&v70 = a1;
    v25 = a1;
    v26 = Mirror.init(reflecting:)(&v70);
    v27 = (uint64_t)v67;
    Mirror.displayStyle.getter(v26);
    v28 = v68;
    v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v27, 1, v4);
    v30 = v4;
    v31 = v13;
    if (v29 == 1)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v66);
      sub_1004CB800(v27, &qword_1013F5900);
      return v64;
    }
    v63 = v25;
    v45 = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v9, v27, v30);
    (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v6, enum case for Mirror.DisplayStyle.enum(_:), v30);
    v46 = static Mirror.DisplayStyle.== infix(_:_:)(v9, v6);
    v47 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
    v48 = v47(v6, v30);
    if ((v46 & 1) == 0)
    {
      *(_QWORD *)&v70 = 0;
      *((_QWORD *)&v70 + 1) = 0xE000000000000000;
      v53._countAndFlagsBits = v64;
      v53._object = v19;
      String.append(_:)(v53);
      swift_bridgeObjectRelease(v19);
      v54._countAndFlagsBits = 40;
      v54._object = (void *)0xE100000000000000;
      String.append(_:)(v54);
      _print_unlocked<A, B>(_:_:)(v9, &v70, v30, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v55._countAndFlagsBits = 41;
      v55._object = (void *)0xE100000000000000;
      String.append(_:)(v55);
      v32 = v70;
      v47(v45, v30);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v31, v66);
      return v32;
    }
    v49 = (_QWORD *)Mirror.children.getter(v48);
    sub_100857D88(v49, &v70);
    swift_release(v49);
    v62 = v31;
    if (v71[3])
    {
      v51 = (void *)*((_QWORD *)&v70 + 1);
      v50 = v70;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v71);
      v52 = v63;
      if (v51)
      {
LABEL_16:
        v58 = v65;
        v57 = v66;
        *(_QWORD *)&v70 = v64;
        *((_QWORD *)&v70 + 1) = v19;
        v59._countAndFlagsBits = 46;
        v59._object = (void *)0xE100000000000000;
        String.append(_:)(v59);
        v60._countAndFlagsBits = v50;
        v60._object = v51;
        String.append(_:)(v60);
        v61 = swift_bridgeObjectRelease(v51);
        v32 = v70;
        ((void (*)(char *, uint64_t, __n128))v47)(v45, v30, v61);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v62, v57);
        return v32;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)&v70, &qword_1013F5908);
      v52 = v63;
    }
    *(_QWORD *)&v70 = v52;
    v50 = String.init<A>(describing:)(&v70, v15);
    v51 = v56;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)&v70 = a1;
  v21 = sub_1004B7878(&qword_1013DE530, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1374);
  v22 = a1;
  v23 = _getErrorEmbeddedNSError<A>(_:)(&v70, v15, v21);
  if (v23)
  {
    v24 = v23;

  }
  else
  {
    v24 = swift_allocError(v15, v21, 0, 0);
    *v33 = v70;
  }
  v34 = (void *)_convertErrorToNSError(_:)(v24);
  swift_errorRelease(v24);
  *(_QWORD *)&v70 = 0;
  *((_QWORD *)&v70 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  *(_QWORD *)&v35 = swift_bridgeObjectRelease(*((_QWORD *)&v70 + 1)).n128_u64[0];
  *(_QWORD *)&v70 = 0x20726F727245534ELL;
  *((_QWORD *)&v70 + 1) = 0xEF3D6E69616D6F44;
  v36 = objc_msgSend(v34, "domain", v35);
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
  v39 = v38;

  v40._countAndFlagsBits = v37;
  v40._object = v39;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v39);
  v41._countAndFlagsBits = 0x3D65646F4320;
  v41._object = (void *)0xE600000000000000;
  String.append(_:)(v41);
  v69 = objc_msgSend(v34, "code");
  v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v42._object;
  String.append(_:)(v42);

  swift_bridgeObjectRelease(object);
  return v70;
}

uint64_t sub_10089EFA4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unsigned int (**v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  _BYTE *v27;
  void *v28;
  double v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  void *object;
  char *v39;
  char *v40;
  char v41;
  unsigned int (**v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  void *v55;
  uint64_t v56;
  Swift::String v57;
  Swift::String v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (**v63)(char *, uint64_t, uint64_t);
  int v64;
  id v65;
  __int128 v66;
  _QWORD v67[4];

  v64 = a1;
  v1 = sub_1004B804C(&qword_1013F5900);
  __chkstk_darwin(v1);
  v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Mirror.DisplayStyle(0);
  v63 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v60 - v8;
  v10 = type metadata accessor for Mirror(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v66 = &type metadata for CRLSendACopyBoardDataHandlerError;
  v14 = sub_1004B804C(&qword_1013F7618);
  v15 = String.init<A>(reflecting:)(&v66, v14);
  v17 = v16;
  v18 = sub_1008588B0();
  if (!swift_dynamicCastMetatype(&type metadata for CRLSendACopyBoardDataHandlerError, v18))
  {
    v61 = v15;
    v62 = v11;
    v60 = v10;
    v67[1] = &type metadata for CRLSendACopyBoardDataHandlerError;
    v22 = v64;
    LOBYTE(v66) = v64;
    v23 = Mirror.init(reflecting:)(&v66);
    Mirror.displayStyle.getter(v23);
    v24 = v63;
    v25 = v13;
    if (v63[6](v3, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v13, v60);
      sub_1004CB800((uint64_t)v3, &qword_1013F5900);
      return v61;
    }
    v39 = v9;
    v24[4](v9, (uint64_t)v3, v4);
    v40 = v6;
    v24[13](v6, enum case for Mirror.DisplayStyle.enum(_:), v4);
    v41 = static Mirror.DisplayStyle.== infix(_:_:)(v39, v6);
    v42 = (unsigned int (**)(char *, uint64_t, uint64_t))v24[1];
    v43 = ((uint64_t (*)(char *, uint64_t))v42)(v40, v4);
    if ((v41 & 1) == 0)
    {
      *(_QWORD *)&v66 = 0;
      *((_QWORD *)&v66 + 1) = 0xE000000000000000;
      v52._countAndFlagsBits = v61;
      v52._object = v17;
      String.append(_:)(v52);
      swift_bridgeObjectRelease(v17);
      v53._countAndFlagsBits = 40;
      v53._object = (void *)0xE100000000000000;
      String.append(_:)(v53);
      _print_unlocked<A, B>(_:_:)(v39, &v66, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v54._countAndFlagsBits = 41;
      v54._object = (void *)0xE100000000000000;
      String.append(_:)(v54);
      v26 = v66;
      ((void (*)(char *, uint64_t))v42)(v39, v4);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v25, v60);
      return v26;
    }
    v63 = v42;
    v44 = v4;
    v45 = v25;
    v46 = (_QWORD *)Mirror.children.getter(v43);
    sub_100857D88(v46, &v66);
    swift_release(v46);
    v47 = v62;
    v48 = v17;
    if (v67[3])
    {
      v49 = (void *)*((_QWORD *)&v66 + 1);
      v50 = v66;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v67);
      v51 = v61;
      if (v49)
      {
LABEL_16:
        v56 = v60;
        *(_QWORD *)&v66 = v51;
        *((_QWORD *)&v66 + 1) = v48;
        v57._countAndFlagsBits = 46;
        v57._object = (void *)0xE100000000000000;
        String.append(_:)(v57);
        v58._countAndFlagsBits = v50;
        v58._object = v49;
        String.append(_:)(v58);
        v59 = swift_bridgeObjectRelease(v49);
        v26 = v66;
        ((void (*)(char *, uint64_t, __n128))v63)(v39, v44, v59);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v56);
        return v26;
      }
    }
    else
    {
      sub_1004CB800((uint64_t)&v66, &qword_1013F5908);
      v51 = v61;
    }
    LOBYTE(v66) = v22;
    v50 = String.init<A>(describing:)(&v66, &type metadata for CRLSendACopyBoardDataHandlerError);
    v49 = v55;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease(v17);
  LOBYTE(v66) = v64;
  v19 = sub_1008A0610();
  v20 = _getErrorEmbeddedNSError<A>(_:)(&v66, &type metadata for CRLSendACopyBoardDataHandlerError, v19);
  if (v20)
  {
    v21 = v20;
  }
  else
  {
    v21 = swift_allocError(&type metadata for CRLSendACopyBoardDataHandlerError, v19, 0, 0);
    *v27 = v66;
  }
  v28 = (void *)_convertErrorToNSError(_:)(v21);
  swift_errorRelease(v21);
  *(_QWORD *)&v66 = 0;
  *((_QWORD *)&v66 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  *(_QWORD *)&v29 = swift_bridgeObjectRelease(*((_QWORD *)&v66 + 1)).n128_u64[0];
  *(_QWORD *)&v66 = 0x20726F727245534ELL;
  *((_QWORD *)&v66 + 1) = 0xEF3D6E69616D6F44;
  v30 = objc_msgSend(v28, "domain", v29);
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  v33 = v32;

  v34._countAndFlagsBits = v31;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v33);
  v35._countAndFlagsBits = 0x3D65646F4320;
  v35._object = (void *)0xE600000000000000;
  String.append(_:)(v35);
  v65 = objc_msgSend(v28, "code");
  v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v36._object;
  String.append(_:)(v36);

  swift_bridgeObjectRelease(object);
  return v66;
}

id sub_10089F478(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  id v5;
  NSString v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  NSString v18;
  Class isa;
  id v20;
  uint64_t v22;

  v1 = a1 + 100;
  v2 = sub_1004B804C(&qword_1013F7600);
  inited = swift_initStackObject(v2, &v22);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
  *(_QWORD *)(inited + 40) = v4;
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6 = String._bridgeToObjectiveC()();
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v5, "localizedStringForKey:value:table:", v6, v7, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v11;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedRecoverySuggestionErrorKey);
  *(_QWORD *)(inited + 88) = v13;
  v14 = sub_1008A0280();
  *(_QWORD *)(inited + 120) = v12;
  *(_QWORD *)(inited + 96) = v14;
  *(_QWORD *)(inited + 104) = v15;
  v16 = sub_1008D5E68(inited);
  v17 = objc_allocWithZone((Class)NSError);
  v18 = String._bridgeToObjectiveC()();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v17, "initWithDomain:code:userInfo:", v18, v1, isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  return v20;
}

uint64_t sub_10089F66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v8[90] = v14;
  v8[89] = v13;
  v8[88] = a8;
  v8[87] = a7;
  v8[86] = a6;
  v8[85] = a5;
  v8[84] = a4;
  v9 = type metadata accessor for URL(0);
  v8[91] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[92] = v10;
  v8[93] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLBoardIdentifier(0);
  v8[94] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10089F708, 0, 0);
}

uint64_t sub_10089F708()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (_QWORD *)v0[84];
  v3 = v1[4];
  v2 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = (_QWORD *)swift_task_alloc(dword_101408574);
  v0[95] = v6;
  *v6 = v0;
  v6[1] = sub_10089F77C;
  return sub_100BD7598(v0[94], v0[85], v3, v2, v4, v5);
}

uint64_t sub_10089F77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10089F894;
  else
    v3 = sub_10089F7E0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10089F7E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);
  NSURL *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(char **)(v0 + 744);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = *(void (**)(void))(v0 + 704);
  sub_10089FEA8(*(_QWORD *)(v0 + 688), *(_QWORD *)(v0 + 696), v2);
  URL._bridgeToObjectiveC()(v6);
  v8 = v7;
  v5();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v2, v4);
  sub_1004BBB8C(v1);
  v9 = *(_QWORD *)(v0 + 744);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10089F894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  void *v44;
  uint64_t v45;
  uint64_t inited;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  id v64;
  id v65;
  void (*v66)(_QWORD, id);
  void (*v67)(_QWORD, id);

  v1 = *(_QWORD *)(v0 + 768);
  *(_QWORD *)(v0 + 656) = v1;
  swift_errorRetain(v1);
  v2 = sub_1004B804C(&qword_1013E0210);
  type metadata accessor for CKError(0);
  v4 = v3;
  if ((swift_dynamicCast(v0 + 648, v0 + 656, v2, v3, 0) & 1) != 0)
  {
    swift_errorRelease(*(_QWORD *)(v0 + 768));
    v5 = *(void **)(v0 + 648);
    *(_QWORD *)(v0 + 600) = v5;
    v6 = sub_1004B7878((unint64_t *)&qword_1013DE570, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_100EF1474);
    v7 = v5;
    _BridgedStoredNSError.code.getter(v4, v6);
    if (*(_QWORD *)(v0 + 592) == 4)
    {

    }
    else
    {
      *(_QWORD *)(v0 + 616) = v7;
      _BridgedStoredNSError.code.getter(v4, v6);

      if (*(_QWORD *)(v0 + 608) != 3)
      {
        if (qword_1013DD778 != -1)
          swift_once(&qword_1013DD778, sub_100A02BF8);
        v65 = *(id *)(v0 + 720);
        v67 = *(void (**)(_QWORD, id))(v0 + 704);
        swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 544, 0, 0);
        v44 = (void *)static OS_os_log.crlSendACopy;
        v45 = sub_1004B804C((uint64_t *)&unk_1013E0180);
        inited = swift_initStackObject(v45, v0 + 168);
        *(_OWORD *)(inited + 16) = xmmword_100EF5550;
        v47 = v44;
        v48 = UUID.uuidString.getter(v47);
        v50 = v49;
        *(_QWORD *)(inited + 56) = &type metadata for String;
        v51 = sub_1004CFC2C();
        *(_QWORD *)(inited + 64) = v51;
        *(_QWORD *)(inited + 32) = v48;
        *(_QWORD *)(inited + 40) = v50;
        v52 = v7;
        v53 = sub_10089EABC(v52);
        v55 = v54;

        *(_QWORD *)(inited + 96) = &type metadata for String;
        *(_QWORD *)(inited + 104) = v51;
        *(_QWORD *)(inited + 72) = v53;
        *(_QWORD *)(inited + 80) = v55;
        *(_QWORD *)(v0 + 640) = v52;
        v38 = v52;
        v56 = String.init<A>(reflecting:)(v0 + 640, v4);
        *(_QWORD *)(inited + 136) = &type metadata for String;
        *(_QWORD *)(inited + 144) = v51;
        *(_QWORD *)(inited + 112) = v56;
        *(_QWORD *)(inited + 120) = v57;
        v58 = static os_log_type_t.error.getter(v56);
        sub_100A06EBC((uint64_t)v47, &_mh_execute_header, v58, "Failed to create Send A Copy url with URL data for board (UUID: %{public}@) due to server error %{public}@ <%@>", 111, 2, inited);
        swift_setDeallocating(inited);
        v59 = sub_1004B804C(&qword_1013E0190);
        swift_arrayDestroy(inited + 32, 3, v59);

        v43 = 1;
        goto LABEL_14;
      }
    }
    if (qword_1013DD778 != -1)
      swift_once(&qword_1013DD778, sub_100A02BF8);
    v65 = *(id *)(v0 + 720);
    v67 = *(void (**)(_QWORD, id))(v0 + 704);
    swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 496, 0, 0);
    v26 = (void *)static OS_os_log.crlSendACopy;
    v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v28 = swift_initStackObject(v27, v0 + 16);
    *(_OWORD *)(v28 + 16) = xmmword_100EF5550;
    v29 = v26;
    v30 = UUID.uuidString.getter(v29);
    v32 = v31;
    *(_QWORD *)(v28 + 56) = &type metadata for String;
    v33 = sub_1004CFC2C();
    *(_QWORD *)(v28 + 64) = v33;
    *(_QWORD *)(v28 + 32) = v30;
    *(_QWORD *)(v28 + 40) = v32;
    v34 = v7;
    v35 = sub_10089EABC(v34);
    v37 = v36;

    *(_QWORD *)(v28 + 96) = &type metadata for String;
    *(_QWORD *)(v28 + 104) = v33;
    *(_QWORD *)(v28 + 72) = v35;
    *(_QWORD *)(v28 + 80) = v37;
    *(_QWORD *)(v0 + 664) = v34;
    v38 = v34;
    v39 = String.init<A>(reflecting:)(v0 + 664, v4);
    *(_QWORD *)(v28 + 136) = &type metadata for String;
    *(_QWORD *)(v28 + 144) = v33;
    *(_QWORD *)(v28 + 112) = v39;
    *(_QWORD *)(v28 + 120) = v40;
    v41 = static os_log_type_t.error.getter(v39);
    sub_100A06EBC((uint64_t)v29, &_mh_execute_header, v41, "Failed to create Send A Copy url with URL data for board (UUID: %{public}@) due to network  error %{public}@ <%@>", 113, 2, v28);
    swift_setDeallocating(v28);
    v42 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v28 + 32, 3, v42);

    v43 = 0;
LABEL_14:
    v60 = sub_10089F478(v43);
    objc_msgSend(v65, "cancel");
    v61 = v60;
    v67(0, v60);

    v25 = *(_QWORD *)(v0 + 656);
    goto LABEL_15;
  }
  swift_errorRelease(*(_QWORD *)(v0 + 656));
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  v8 = *(_QWORD *)(v0 + 768);
  v64 = *(id *)(v0 + 720);
  v66 = *(void (**)(_QWORD, id))(v0 + 704);
  swift_beginAccess(&static OS_os_log.crlSendACopy, v0 + 472, 0, 0);
  v9 = (void *)static OS_os_log.crlSendACopy;
  v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v11 = swift_initStackObject(v10, v0 + 320);
  *(_OWORD *)(v11 + 16) = xmmword_100EF5550;
  v12 = v9;
  v13 = UUID.uuidString.getter(v12);
  v15 = v14;
  *(_QWORD *)(v11 + 56) = &type metadata for String;
  v16 = sub_1004CFC2C();
  *(_QWORD *)(v11 + 64) = v16;
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  swift_getErrorValue(v8, v0 + 632, v0 + 520);
  v17 = Error.publicDescription.getter(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536));
  *(_QWORD *)(v11 + 96) = &type metadata for String;
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 72) = v17;
  *(_QWORD *)(v11 + 80) = v18;
  swift_getErrorValue(v8, v0 + 624, v0 + 568);
  v19 = Error.fullDescription.getter(*(_QWORD *)(v0 + 576));
  *(_QWORD *)(v11 + 136) = &type metadata for String;
  *(_QWORD *)(v11 + 144) = v16;
  *(_QWORD *)(v11 + 112) = v19;
  *(_QWORD *)(v11 + 120) = v20;
  v21 = static os_log_type_t.error.getter(v19);
  sub_100A06EBC((uint64_t)v12, &_mh_execute_header, v21, "Failed to create Send A Copy url with URL data for board (UUID: %{public}@) with error %{public}@ <%@>", 102, 2, v11);
  swift_setDeallocating(v11);
  v22 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v11 + 32, 3, v22);

  v23 = sub_10089F478(2u);
  objc_msgSend(v64, "cancel");
  v24 = v23;
  v66(0, v23);

  v25 = v8;
LABEL_15:
  swift_errorRelease(v25);
  v62 = *(_QWORD *)(v0 + 744);
  swift_task_dealloc(*(_QWORD *)(v0 + 752));
  swift_task_dealloc(v62);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10089FEA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int v31;
  char *v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[2];

  v35 = a1;
  v36 = a2;
  v39 = a3;
  v40 = type metadata accessor for URLComponents(0);
  v3 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E8868);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL.DirectoryHint(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v12);
  v41 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000024, 0x8000000100FDB320);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  result = v34(v16, 1, v17);
  if ((_DWORD)result != 1)
  {
    v38 = *(uint64_t (**)(char *, char *, uint64_t))(v18 + 32);
    v22 = v38(v20, v16, v17);
    v42[0] = UUID.uuidString.getter(v22);
    v42[1] = v23;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for URL.DirectoryHint.inferFromPath(_:), v8);
    v24 = sub_1004D292C();
    URL.append<A>(component:directoryHint:)(v42, v11, &type metadata for String, v24);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    URLComponents.init(url:resolvingAgainstBaseURL:)(v20, 1);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
    v26 = v40;
    if (!v25(v7, 1, v40))
    {
      sub_100D1E488(v35, v36);
      URLComponents.fragment.setter();
    }
    v27 = v25(v7, 1, v26);
    v28 = (uint64_t)v41;
    if (v27)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v41, 1, 1, v17);
      v38(v39, v20, v17);
    }
    else
    {
      v29 = v37;
      v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v37, v7, v26);
      URLComponents.url.getter(v30);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v29, v26);
      v31 = v34((char *)v28, 1, v17);
      v33 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
      v32 = v39;
      if (v31 != 1)
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        v33((uint64_t)v32, v28, v17);
        return sub_1004CB800((uint64_t)v7, &qword_1013E8868);
      }
      v38(v39, v20, v17);
    }
    sub_1004CB800(v28, &qword_1013E04D0);
    return sub_1004CB800((uint64_t)v7, &qword_1013E8868);
  }
  __break(1u);
  return result;
}

uint64_t sub_1008A0200()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(void **)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 64));

  swift_unknownObjectRelease(v3);
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for CRLSendACopyHelper()
{
  return objc_opt_self(_TtC8Freeform18CRLSendACopyHelper);
}

uint64_t sub_1008A0280()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_1008A03F0()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

_QWORD *sub_1008A0524(char *a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v1[2] = a1;
  v2 = *(void **)&a1[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
  v3 = qword_1013DCB60;
  v4 = a1;
  v5 = v2;
  if (v3 != -1)
    swift_once(&qword_1013DCB60, sub_100637218);
  v6 = (void *)qword_10147ECC0;
  v7 = type metadata accessor for CRLPublicCloudRecordProvider();
  v8 = swift_allocObject(v7, 24, 7);
  *(_QWORD *)(v8 + 16) = v5;
  v9 = v5;
  v10 = v6;
  v11 = objc_msgSend(v10, "publicCloudDatabase");
  swift_retain(v8);

  v1[3] = v9;
  v1[4] = v9;
  v1[5] = v8;
  v1[6] = &off_10127F1A8;
  v1[7] = v11;
  v1[8] = v8;
  return v1;
}

unint64_t sub_1008A0610()
{
  unint64_t result;

  result = qword_101406AB0;
  if (!qword_101406AB0)
  {
    result = swift_getWitnessTable(&unk_100F28DCC, &type metadata for CRLSendACopyBoardDataHandlerError);
    atomic_store(result, (unint64_t *)&qword_101406AB0);
  }
  return result;
}

id sub_1008A0738(double a1)
{
  uint64_t v1;
  void *v3;
  double *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  id v15;
  id v16;
  id v17;

  v3 = (void *)objc_opt_self(CNAvatarImageRenderingScope);
  v4 = (double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size);
  v5 = objc_msgSend(v3, "scopeWithPointSize:scale:rightToLeft:style:", 0, 0, *(double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size), *(double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size + 8), a1);
  v6 = (void *)objc_opt_self(CNAvatarImageRendererSettings);
  v7 = objc_msgSend(v6, "defaultSettings");
  v8 = objc_msgSend(objc_allocWithZone((Class)CNAvatarImageRenderer), "initWithSettings:", v7);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_contact);
  if (v9)
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v11 = swift_allocObject(v10, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v11 + 32) = v9;
    specialized Array._endMutation()(v11);
    sub_1008A0B90();
    v12 = v9;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = objc_msgSend(v8, "avatarImageForContacts:scope:", isa, v5, swift_bridgeObjectRelease().n128_f64[0]);

    v15 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v14);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v16 = objc_msgSend(v6, "defaultSettings");
    v12 = objc_msgSend(objc_allocWithZone((Class)CNAvatarImageRenderer), "initWithSettings:", v16);
    v17 = objc_msgSend(v12, "placeholderImageProvider");
    v14 = objc_msgSend(v17, "imageForSize:scale:style:", 0, *v4, v4[1], a1);
    swift_unknownObjectRelease(v17);
    v15 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v14);
    swift_unknownObjectRelease(v5);

    v8 = v7;
    v7 = v16;
  }

  return v15;
}

id sub_1008A09D4(double a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v3 = objc_msgSend((id)objc_opt_self(CNAvatarImageRendererSettings), "defaultSettings");
  v4 = objc_msgSend(objc_allocWithZone((Class)CNAvatarImageRenderer), "initWithSettings:", v3);
  v5 = objc_msgSend(v4, "placeholderImageProvider");
  v6 = objc_msgSend(v5, "imageForSize:scale:style:", 0, *(double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size), *(double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size + 8), a1);
  swift_unknownObjectRelease(v5);
  v7 = objc_msgSend(objc_allocWithZone((Class)CRLImage), "initWithUIImage:", v6);

  return v7;
}

id sub_1008A0B30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorAvatarRenderer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCollaboratorAvatarRenderer()
{
  return objc_opt_self(_TtC8Freeform29CRLCollaboratorAvatarRenderer);
}

unint64_t sub_1008A0B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E8EB0;
  if (!qword_1013E8EB0)
  {
    v1 = objc_opt_self(CNContact);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E8EB0);
  }
  return result;
}

id sub_1008A0C64(uint64_t a1)
{
  return sub_1004DFAE4(a1, type metadata accessor for CRLCommandSetMovieValue);
}

uint64_t type metadata accessor for CRLCommandSetMovieValue()
{
  return objc_opt_self(_TtC8Freeform23CRLCommandSetMovieValue);
}

id sub_1008A0CC8(uint64_t a1, float a2)
{
  return sub_1008A0FD0(a1, &OBJC_IVAR____TtC8Freeform24CRLCommandSetMovieVolume_id, &OBJC_IVAR____TtC8Freeform24CRLCommandSetMovieVolume_volume, a2);
}

void sub_1008A0D04(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  CKRecordID v15;
  Swift::String v16;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLMovieItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 61, "Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2u, 61, (uint64_t)"Unable to retrieve movie item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    sub_100A300F4(*(float *)(v5 + OBJC_IVAR____TtC8Freeform24CRLCommandSetMovieVolume_volume));
    v14 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_1008A0F30()
{
  return sub_1008A1A0C(&OBJC_IVAR____TtC8Freeform24CRLCommandSetMovieVolume_id);
}

id sub_1008A0F3C()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))type metadata accessor for CRLCommandSetMovieVolume);
}

uint64_t sub_1008A0F58()
{
  return type metadata accessor for CRLCommandSetMovieVolume(0);
}

uint64_t type metadata accessor for CRLCommandSetMovieVolume(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F76B0, (uint64_t)&nominal type descriptor for CRLCommandSetMovieVolume);
}

uint64_t sub_1008A0F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008A1AC0(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int32 + 64);
}

id sub_1008A0FBC(uint64_t a1, float a2)
{
  return sub_1008A0FD0(a1, &OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_id, &OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_cornerRadius, a2);
}

id sub_1008A0FD0(uint64_t a1, _QWORD *a2, _QWORD *a3, float a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[*a2];
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  *(float *)&v9[*a3] = a4;
  v15.receiver = v9;
  v15.super_class = v4;
  v13 = objc_msgSendSuper2(&v15, "init");
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v13;
}

id sub_1008A10A8(char *a1, float a2, uint64_t a3, uint64_t a4, _QWORD *a5, _QWORD *a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  objc_class *v17;
  id v18;
  objc_super v20;

  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a4);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(&a1[*a5], v16, v13);
  *(float *)&a1[*a6] = a2;
  v17 = (objc_class *)a7(0);
  v20.receiver = a1;
  v20.super_class = v17;
  v18 = objc_msgSendSuper2(&v20, "init");
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v18;
}

id sub_1008A11A4(void *a1, float a2, uint64_t a3, char *a4, SEL *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  char *v15;
  uint64_t v16;
  Class isa;
  double v18;
  id v19;
  uint64_t v21;

  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)&a4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v14 = *(void (**)(uint64_t))(*(_QWORD *)v13 + 256);
  v15 = a4;
  v16 = swift_retain(v13);
  v14(v16);
  swift_release(v13);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(float *)&v18 = a2;
  v19 = objc_msgSend(a1, *a5, isa, v18);

  return v19;
}

void sub_1008A12AC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  CKRecordID v15;
  Swift::String v16;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLMovieItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 87, "Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2u, 87, (uint64_t)"Unable to retrieve movie item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    sub_100A30408(*(float *)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_cornerRadius));
    v14 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_1008A14D0()
{
  return sub_1008A1A0C(&OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_id);
}

id sub_1008A14DC()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))type metadata accessor for CRLCommandSetMovieCornerRadius);
}

uint64_t sub_1008A14F8()
{
  return type metadata accessor for CRLCommandSetMovieCornerRadius(0);
}

uint64_t type metadata accessor for CRLCommandSetMovieCornerRadius(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F76E8, (uint64_t)&nominal type descriptor for CRLCommandSetMovieCornerRadius);
}

id sub_1008A154C(uint64_t a1, char a2)
{
  objc_class *v2;
  _BYTE *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_isLooping] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_1008A17DC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  CKRecordID v15;
  Swift::String v16;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_7;
  v10 = type metadata accessor for CRLMovieItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 109, "Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2u, 109, (uint64_t)"Unable to retrieve movie item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = v11;
  v13 = v9;
  sub_100DBEE64(v12, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    sub_100A2F6E0(*(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_isLooping));
    v14 = v13;
    sub_100DB0D78(v12, (uint64_t)&off_10127C5E0, a3);

  }
}

uint64_t sub_1008A1A00()
{
  return sub_1008A1A0C(&OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_id);
}

uint64_t sub_1008A1A0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *a1;
  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

id sub_1008A1A44()
{
  return sub_1004DFAE4(0, (uint64_t (*)(void))type metadata accessor for CRLCommandSetMovieLooping);
}

uint64_t sub_1008A1A60(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *a3;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_1008A1A98()
{
  return type metadata accessor for CRLCommandSetMovieLooping(0);
}

uint64_t type metadata accessor for CRLCommandSetMovieLooping(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F7720, (uint64_t)&nominal type descriptor for CRLCommandSetMovieLooping);
}

uint64_t sub_1008A1AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008A1AC0(a1, a2, a3, (uint64_t)&unk_100F127E0);
}

uint64_t sub_1008A1AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v7;
  _QWORD v8[2];

  result = type metadata accessor for UUID(319);
  if (v7 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    v8[1] = a4;
    result = swift_updateClassMetadata2(a1, 256, 2, v8, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

id sub_1008A1B30(char *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  int v13;
  int v14;
  id v15;
  uint64_t v16;
  void (*v17)(__n128);
  char *v18;
  __n128 v19;
  NSUUID v20;
  double v21;
  const char *v22;
  int v23;
  uint64_t v24;
  void (*v25)(__n128);
  __n128 v26;
  uint64_t v27;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a2 - 40) >= 4)
  {
    if (a2 == 44)
    {
      if ((objc_msgSend(a3, "respondsToSelector:", "floatValue", v8) & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 30, "An invalid value was passed in to CRLCommandSetMovieValue for property \"volume.\"", 80, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2u, 30, (uint64_t)"An invalid value was passed in to CRLCommandSetMovieValue for property \"volume.\"", 80, 2u);
        return 0;
      }
      objc_msgSend(a3, "floatValue");
      v14 = v23;
      v15 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieVolume(0));
      v24 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v25 = *(void (**)(__n128))(*(_QWORD *)v24 + 256);
      v18 = a1;
      v26 = swift_retain(v24);
      v25(v26);
      swift_release(v24);
      v20.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v22 = "initWithId:volume:";
    }
    else
    {
      if (a2 != 45)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 40, "Unhandled movie property.", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2u, 40, (uint64_t)"Unhandled movie property.", 25, 2u);
        return 0;
      }
      if ((objc_msgSend(a3, "respondsToSelector:", "floatValue", v8) & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 37, "An invalid value was passed in to CRLCommandSetMovieValue for property \"cornerRadius.\"", 86, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2u, 37, (uint64_t)"An invalid value was passed in to CRLCommandSetMovieValue for property \"cornerRadius.\"", 86, 2u);
        return 0;
      }
      objc_msgSend(a3, "floatValue");
      v14 = v13;
      v15 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieCornerRadius(0));
      v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      v17 = *(void (**)(__n128))(*(_QWORD *)v16 + 256);
      v18 = a1;
      v19 = swift_retain(v16);
      v17(v19);
      swift_release(v16);
      v20.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v22 = "initWithId:cornerRadius:";
    }
    LODWORD(v21) = v14;
    v11 = objc_msgSend(v15, v22, v20.super.isa, v21);

    return v11;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 24, "We need to set the poster time and the poster image together so they stay in sync. Also the poster image is a board item asset so it is async so we'll have to wait until we have both and change them together, use CRLCommandSetMoviePosterTime", 241, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2u, 24, (uint64_t)"We need to set the poster time and the poster image together so they stay in sync. Also the poster image is a board item asset so it is async so we'll have to wait until we have both and change them together, use CRLCommandSetMoviePosterTime", 241, 2u);
  return 0;
}

void sub_1008A1F84(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v4)
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandDuplicateBoard_boardToDuplicate);
    v9 = type metadata accessor for CRLUUIDRemapHelper();
    v10 = swift_allocObject(v9, 40, 7);
    *(_QWORD *)(v10 + 24) = _swiftEmptyDictionarySingleton;
    *(_QWORD *)(v10 + 32) = _swiftEmptyDictionarySingleton;
    *(_BYTE *)(v10 + 16) = 1;
    sub_100B18BB8(v8, a2, v10);
    swift_release(v10);
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, a3);
  }
}

void sub_1008A2084()
{
  uint64_t v0;

}

id sub_1008A2094()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandDuplicateBoard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandDuplicateBoard()
{
  return objc_opt_self(_TtC8Freeform24CRLCommandDuplicateBoard);
}

uint64_t type metadata accessor for CRLFileReadWriteUserOptionsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F7760;
  if (!qword_1013F7760)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLFileReadWriteUserOptionsViewController);
  return result;
}

uint64_t sub_1008A2130(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_10147FC00);
}

uint64_t sub_1008A216C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;

  v3 = sub_1004B804C(&qword_1013F77B0);
  __chkstk_darwin(v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013F77B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013F77C0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v10);
  *((_QWORD *)v5 + 1) = 0x4030000000000000;
  v5[16] = 0;
  v13 = sub_1004B804C(&qword_1013F77C8);
  v14 = sub_1008A2384(v1, (uint64_t *)&v5[*(int *)(v13 + 44)]);
  v15 = static Edge.Set.horizontal.getter(v14);
  v16 = EdgeInsets.init(_all:)(16.0);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  sub_1004CB7BC((uint64_t)v5, (uint64_t)v8, &qword_1013F77B0);
  v23 = &v8[*(int *)(v6 + 36)];
  *v23 = v15;
  *((double *)v23 + 1) = v16;
  *((_QWORD *)v23 + 2) = v18;
  *((_QWORD *)v23 + 3) = v20;
  *((_QWORD *)v23 + 4) = v22;
  v23[40] = 0;
  v24 = sub_1004CB800((uint64_t)v5, &qword_1013F77B0);
  v25 = static Edge.Set.vertical.getter(v24);
  v26 = EdgeInsets.init(_all:)(16.0);
  v28 = v27;
  v30 = v29;
  v32 = v31;
  sub_1004CB7BC((uint64_t)v8, (uint64_t)v12, &qword_1013F77B8);
  v33 = &v12[*(int *)(v9 + 36)];
  *v33 = v25;
  *((double *)v33 + 1) = v26;
  *((_QWORD *)v33 + 2) = v28;
  *((_QWORD *)v33 + 3) = v30;
  *((_QWORD *)v33 + 4) = v32;
  v33[40] = 0;
  sub_1004CB800((uint64_t)v8, &qword_1013F77B8);
  sub_1004CB7BC((uint64_t)v12, a1, &qword_1013F77C0);
  *(_WORD *)(a1 + *(int *)(sub_1004B804C(&qword_1013F77D0) + 36)) = 257;
  return sub_1004CB800((uint64_t)v12, &qword_1013F77C0);
}

double sub_1008A2384@<D0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  int *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  double result;
  uint64_t v79;
  __int128 *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  char *v98;
  __int128 v99;
  __int128 v100;
  unsigned __int8 v101;

  v80 = a1;
  v85 = a2;
  v2 = sub_1004B804C(&qword_1013F77D8);
  __chkstk_darwin(v2);
  v86 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v96 = (uint64_t *)((char *)&v79 - v5);
  v79 = sub_1004B804C(&qword_1013E70A0);
  v6 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1004B804C(&qword_1013F77E0);
  __chkstk_darwin(v81);
  v95 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v98 = (char *)&v79 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v79 - v13;
  v16 = __chkstk_darwin(v15);
  v88 = (uint64_t)&v79 - v17;
  v83 = type metadata accessor for Divider(0, v16);
  v97 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v84 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v91 = (char *)&v79 - v20;
  __chkstk_darwin(v21);
  v89 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  v94 = (char *)&v79 - v24;
  v25 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x8000000100FBDF90);
  v26 = Text.init(_:tableName:bundle:comment:)(v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = static Font.title.getter();
  v82 = Text.font(_:)(v33, v26, v28, v32, v30);
  v90 = v34;
  v36 = v35;
  v92 = v37;
  swift_release(v33);
  v93 = v36 & 1;
  sub_1005EFC24(v26, v28, v32);
  swift_bridgeObjectRelease();
  Divider.init()(v38);
  v39 = v80;
  v99 = *v80;
  v40 = sub_1004B804C(&qword_101401590);
  State.projectedValue.getter(v40);
  Toggle.init(isOn:label:)(v100, *((_QWORD *)&v100 + 1), v101, sub_1008A2A68, 0, &type metadata for Text, &protocol witness table for Text);
  v100 = *v39;
  State.wrappedValue.getter(v40);
  LOBYTE(v26) = v99;
  v41 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v42 = (uint64_t)v14;
  v43 = v79;
  v41(v14, v8, v79);
  v44 = v81;
  v45 = v42 + *(int *)(v81 + 36);
  v87 = v42;
  *(_BYTE *)v45 = v26;
  *(_QWORD *)(v45 + 8) = sub_1008A2A84;
  *(_QWORD *)(v45 + 16) = 0;
  v46 = *(void (**)(char *, uint64_t))(v6 + 8);
  v47 = v43;
  v46(v8, v43);
  v48 = v42;
  v49 = v88;
  sub_1008A3350(v48, v88);
  v99 = v39[1];
  State.projectedValue.getter(v40);
  Toggle.init(isOn:label:)(v100, *((_QWORD *)&v100 + 1), v101, sub_1008A2A90, 0, &type metadata for Text, &protocol witness table for Text);
  v100 = v39[1];
  State.wrappedValue.getter(v40);
  LOBYTE(v26) = v99;
  v50 = (uint64_t)v98;
  v41(v98, v8, v47);
  v51 = v50 + *(int *)(v44 + 36);
  *(_BYTE *)v51 = v26;
  *(_QWORD *)(v51 + 8) = sub_1008A2B08;
  *(_QWORD *)(v51 + 16) = 0;
  v46(v8, v47);
  v52 = v50;
  v53 = v87;
  v54 = sub_1008A3350(v50, v87);
  v55 = v89;
  Divider.init()(v54);
  v57 = static VerticalAlignment.center.getter(v56);
  v58 = v96;
  *v96 = v57;
  v58[1] = 0;
  *((_BYTE *)v58 + 16) = 1;
  v59 = sub_1004B804C(&qword_1013F77E8);
  sub_1008A2B74(v39, (uint64_t)v58 + *(int *)(v59 + 44));
  LOBYTE(v100) = v93;
  v60 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v61 = v91;
  v62 = v83;
  v60(v91, v94, v83);
  sub_1004CB7BC(v49, v52, &qword_1013F77E0);
  v63 = v95;
  sub_1004CB7BC(v53, v95, &qword_1013F77E0);
  v64 = v84;
  v60(v84, v55, v62);
  v65 = v86;
  sub_1004CB7BC((uint64_t)v58, v86, &qword_1013F77D8);
  v66 = v100;
  LODWORD(v81) = v100;
  v67 = v85;
  v68 = v82;
  v69 = v90;
  *v85 = v82;
  v67[1] = v69;
  *((_BYTE *)v67 + 16) = v66;
  v67[3] = v92;
  v70 = v67;
  v71 = (int *)sub_1004B804C(&qword_1013F77F0);
  v60((char *)v70 + v71[12], v61, v62);
  sub_1004CB7BC((uint64_t)v98, (uint64_t)v70 + v71[16], &qword_1013F77E0);
  sub_1004CB7BC(v63, (uint64_t)v70 + v71[20], &qword_1013F77E0);
  v72 = v64;
  v60((char *)v70 + v71[24], v64, v62);
  v73 = v65;
  sub_1004CB7BC(v65, (uint64_t)v70 + v71[28], &qword_1013F77D8);
  v74 = v90;
  sub_1006CCFD0(v68, v90, v81);
  v75 = v92;
  swift_bridgeObjectRetain(v92);
  v76 = v68;
  LOBYTE(v64) = v93;
  sub_1006CCFD0(v68, v74, v93);
  swift_bridgeObjectRetain(v75);
  sub_1004CB800((uint64_t)v96, &qword_1013F77D8);
  v77 = *(void (**)(char *, uint64_t))(v97 + 8);
  v77(v89, v62);
  sub_1004CB800(v87, &qword_1013F77E0);
  sub_1004CB800(v88, &qword_1013F77E0);
  v77(v94, v62);
  sub_1005EFC24(v76, v74, (char)v64);
  swift_bridgeObjectRelease();
  sub_1004CB800(v73, &qword_1013F77D8);
  v77(v72, v62);
  sub_1004CB800(v95, &qword_1013F77E0);
  sub_1004CB800((uint64_t)v98, &qword_1013F77E0);
  v77(v91, v62);
  sub_1005EFC24(v76, v74, v100);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1008A2A68@<X0>(uint64_t a1@<X8>)
{
  return sub_1008A2AAC(a1);
}

uint64_t sub_1008A2A84(unsigned __int8 *a1)
{
  return sub_1008A2B14(a1, (uint64_t (*)(uint64_t))sub_100BC9554);
}

uint64_t sub_1008A2A90@<X0>(uint64_t a1@<X8>)
{
  return sub_1008A2AAC(a1);
}

uint64_t sub_1008A2AAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = LocalizedStringKey.init(stringLiteral:)();
  result = Text.init(_:tableName:bundle:comment:)(v2);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_1008A2B08(unsigned __int8 *a1)
{
  return sub_1008A2B14(a1, (uint64_t (*)(uint64_t))sub_100BC9594);
}

uint64_t sub_1008A2B14(unsigned __int8 *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = *a1;
  if (qword_1013DDD80 != -1)
    swift_once(&qword_1013DDD80, sub_100BC9504);
  return a2(v3);
}

uint64_t sub_1008A2B74@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  v4 = sub_1004B804C(&qword_1013E7038);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - v9;
  v11 = LocalizedStringKey.init(stringLiteral:)(19279, 0xE200000000000000);
  v28 = v12;
  v29 = v11;
  v14 = v13;
  v27 = v15;
  v16 = *a1;
  v30 = a1[1];
  v31 = v16;
  v18 = *((_QWORD *)a1 + 4);
  v17 = *((_QWORD *)a1 + 5);
  v19 = (_OWORD *)swift_allocObject(&unk_101284678, 64, 7);
  v20 = a1[1];
  v19[1] = *a1;
  v19[2] = v20;
  v19[3] = a1[2];
  sub_1008A33FC((uint64_t)&v31);
  sub_1008A33FC((uint64_t)&v30);
  sub_1004C0F54(v18, v17);
  Button<>.init(_:action:)(v29, v28, v14 & 1, v27, sub_1008A33D4, v19);
  v21 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v21(v7, v10, v4);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  v22 = sub_1004B804C(&qword_1013F77F8);
  v21((char *)(a2 + *(int *)(v22 + 48)), v7, v4);
  v23 = a2 + *(int *)(v22 + 64);
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v10, v4);
  return ((uint64_t (*)(char *, uint64_t))v24)(v7, v4);
}

uint64_t sub_1008A2D0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1008A216C(a1);
}

uint64_t sub_1008A2D44(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  _BYTE v5[48];

  v3 = a3;
  sub_1008A31CC((uint64_t)v5);
  return UIHostingController.init(coder:rootView:)(v3, v5);
}

id sub_1008A2D84()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileReadWriteUserOptionsViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1008A2DB8()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLFileReadWriteUserOptionsViewController", 50, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_1008A2DE4()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLFileReadWriteUserOptionsViewController", 50, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_1008A2E10()
{
  return type metadata accessor for CRLFileReadWriteUserOptionsViewController(0);
}

double destroy for CRLFileReadWriteUserOptionsView(_QWORD *a1)
{
  double result;

  swift_release(a1[1]);
  *(_QWORD *)&result = swift_release(a1[3]).n128_u64[0];
  if (a1[4])
    *(_QWORD *)&result = swift_release(a1[5]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CRLFileReadWriteUserOptionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v7 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  swift_retain(v4);
  swift_retain(v5);
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v8;
    swift_retain(v8);
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for CRLFileReadWriteUserOptionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v8)
    {
      v11 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v11;
      swift_retain(v11);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v8)
  {
    swift_release(*(_QWORD *)(a1 + 40));
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for CRLFileReadWriteUserOptionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 40) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v6)
  {
    swift_release(*(_QWORD *)(a1 + 40));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFileReadWriteUserOptionsView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFileReadWriteUserOptionsView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileReadWriteUserOptionsView()
{
  return &type metadata for CRLFileReadWriteUserOptionsView;
}

uint64_t sub_1008A311C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1011293E0, 1);
}

void sub_1008A312C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F128E0);
  v5 = swift_getKeyPath(&unk_100F12908);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

void sub_1008A31A8(char *a1)
{
  sub_100BC9554(*a1);
}

_QWORD *sub_1008A31CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1013DDD80 != -1)
    swift_once(&qword_1013DDD80, sub_100BC9504);
  v2 = qword_101480E68;
  KeyPath = swift_getKeyPath(&unk_100F128E0);
  v4 = swift_getKeyPath(&unk_100F12908);
  static Published.subscript.getter(&v14, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v13 = v14;
  State.init(wrappedValue:)(&v14, &v13, &type metadata for Bool);
  v5 = v14;
  v6 = v15;
  v7 = qword_101480E68;
  v8 = swift_getKeyPath(&unk_100F12928);
  v9 = swift_getKeyPath(&unk_100F12950);
  static Published.subscript.getter(&v14, v7, v8, v9);
  swift_release(v8);
  swift_release(v9);
  v13 = v14;
  result = State.init(wrappedValue:)(&v14, &v13, &type metadata for Bool);
  v11 = v14;
  v12 = v15;
  *(_BYTE *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 24) = v12;
  return result;
}

void sub_1008A3324(char *a1)
{
  sub_100BC9554(*a1);
}

uint64_t sub_1008A3350(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F77E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008A3398()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  if (v0[6])
    swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1008A33D4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 48);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1008A33FC(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1008A3424()
{
  return sub_1006E1664(&qword_1013F7800, &qword_1013F77D0, (void (*)(void))sub_1008A3458);
}

uint64_t sub_1008A3458()
{
  return sub_1006E1664(&qword_1013F7808, &qword_1013F77C0, (void (*)(void))sub_1008A347C);
}

uint64_t sub_1008A347C()
{
  return sub_1006E1664(&qword_1013F7810, &qword_1013F77B8, (void (*)(void))sub_1008A34A0);
}

unint64_t sub_1008A34A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F7818;
  if (!qword_1013F7818)
  {
    v1 = sub_1004CB6A4(&qword_1013F77B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1013F7818);
  }
  return result;
}

void destroy for CRLLayerPropertyTransitionDescriptor(_QWORD *a1)
{
  _QWORD *v1;
  int v2;
  id v3;
  uint64_t v4;

  v1 = a1;
  v2 = *((unsigned __int8 *)a1 + 256);
  while (2)
  {
    switch(v2)
    {
      case 0:
      case 34:
        if (a1[3])
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
        if (!v1[7])
          return;
        a1 = v1 + 4;
LABEL_14:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
        return;
      case 1:
      case 35:
        if (a1[3] >= 0xFFFFFFFFuLL)
          goto LABEL_14;
        return;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 59:
      case 60:
      case 61:
      case 62:
        return;
      case 18:
      case 20:
      case 28:
      case 30:

        v3 = (id)v1[1];
        goto LABEL_20;
      case 19:
      case 21:
      case 29:
      case 31:
        v3 = (id)*a1;
        goto LABEL_20;
      case 32:
      case 36:
        swift_bridgeObjectRelease(*a1);
        v4 = v1[1];
        goto LABEL_16;
      case 33:
      case 37:
        v4 = *a1;
LABEL_16:
        swift_bridgeObjectRelease(v4);
        return;
      case 58:
        v3 = (id)a1[5];
        goto LABEL_20;
      case 63:

        v3 = (id)v1[11];
        goto LABEL_20;
      case 64:

        v3 = (id)v1[7];
LABEL_20:

        return;
      default:
        v2 = *(_DWORD *)a1 + 65;
        continue;
    }
  }
}

uint64_t initializeWithCopy for CRLLayerPropertyTransitionDescriptor(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  id v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  void *v76;
  void *v77;
  void *v78;
  char v79;
  __int128 v80;
  id v81;
  id v82;
  id v83;
  id v84;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  __int128 v92;
  _OWORD *v93;
  _OWORD *v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;

  v4 = *((unsigned __int8 *)a2 + 256);
  while (2)
  {
    switch(v4)
    {
      case 0:
        v5 = a2[3];
        if (v5)
        {
          *(_QWORD *)(a1 + 24) = v5;
          (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
        }
        else
        {
          v88 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v88;
        }
        v89 = (_OWORD *)(a1 + 32);
        v90 = a2 + 4;
        v91 = a2[7];
        if (v91)
        {
          *(_QWORD *)(a1 + 56) = v91;
          (**(void (***)(_OWORD *, _OWORD *))(v91 - 8))(v89, v90);
        }
        else
        {
          v96 = *((_OWORD *)a2 + 3);
          *v89 = *v90;
          *(_OWORD *)(a1 + 48) = v96;
        }
        *(_BYTE *)(a1 + 256) = 0;
        return a1;
      case 1:
        v6 = a2[3];
        if (v6 < 0xFFFFFFFF)
        {
          v86 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v86;
        }
        else
        {
          *(_QWORD *)(a1 + 24) = v6;
          (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
        }
        *(_BYTE *)(a1 + 256) = 1;
        return a1;
      case 2:
        v7 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        v8 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v8;
        *(_BYTE *)(a1 + 256) = 2;
        return a1;
      case 3:
        v9 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(_BYTE *)(a1 + 256) = 3;
        return a1;
      case 4:
        v10 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(_BYTE *)(a1 + 256) = 4;
        return a1;
      case 5:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 5;
        return a1;
      case 6:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 6;
        return a1;
      case 7:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_BYTE *)(a1 + 256) = 7;
        return a1;
      case 8:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_BYTE *)(a1 + 256) = 8;
        return a1;
      case 9:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_BYTE *)(a1 + 256) = 9;
        return a1;
      case 10:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_BYTE *)(a1 + 256) = 10;
        return a1;
      case 11:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_BYTE *)(a1 + 256) = 11;
        return a1;
      case 12:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_BYTE *)(a1 + 256) = 12;
        return a1;
      case 13:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_BYTE *)(a1 + 256) = 13;
        return a1;
      case 14:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 14;
        return a1;
      case 15:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 15;
        return a1;
      case 16:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 16;
        return a1;
      case 17:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 17;
        return a1;
      case 18:
        v11 = (void *)*a2;
        v12 = (void *)a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v12;
        v13 = 18;
        goto LABEL_37;
      case 19:
        v14 = (void *)*a2;
        *(_QWORD *)a1 = *a2;
        v15 = 19;
        goto LABEL_70;
      case 20:
        v11 = (void *)*a2;
        v12 = (void *)a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v12;
        v13 = 20;
        goto LABEL_37;
      case 21:
        v14 = (void *)*a2;
        *(_QWORD *)a1 = *a2;
        v15 = 21;
        goto LABEL_70;
      case 22:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 22;
        return a1;
      case 23:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_BYTE *)(a1 + 256) = 23;
        return a1;
      case 24:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 24;
        return a1;
      case 25:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 25;
        return a1;
      case 26:
        v16 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v16;
        *(_BYTE *)(a1 + 256) = 26;
        return a1;
      case 27:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 27;
        return a1;
      case 28:
        v11 = (void *)*a2;
        v12 = (void *)a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v12;
        v13 = 28;
        goto LABEL_37;
      case 29:
        v14 = (void *)*a2;
        *(_QWORD *)a1 = *a2;
        v15 = 29;
        goto LABEL_70;
      case 30:
        v11 = (void *)*a2;
        v12 = (void *)a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v12;
        v13 = 30;
LABEL_37:
        *(_BYTE *)(a1 + 256) = v13;
        v17 = v11;
        goto LABEL_78;
      case 31:
        v14 = (void *)*a2;
        *(_QWORD *)a1 = *a2;
        v15 = 31;
        goto LABEL_70;
      case 32:
        v18 = *a2;
        v19 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v19;
        v20 = 32;
        goto LABEL_46;
      case 33:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = 33;
        goto LABEL_48;
      case 34:
        v23 = a2[3];
        if (v23)
        {
          *(_QWORD *)(a1 + 24) = v23;
          (**(void (***)(uint64_t, uint64_t *))(v23 - 8))(a1, a2);
        }
        else
        {
          v92 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v92;
        }
        v93 = (_OWORD *)(a1 + 32);
        v94 = a2 + 4;
        v95 = a2[7];
        if (v95)
        {
          *(_QWORD *)(a1 + 56) = v95;
          (**(void (***)(_OWORD *, _OWORD *))(v95 - 8))(v93, v94);
        }
        else
        {
          v97 = *((_OWORD *)a2 + 3);
          *v93 = *v94;
          *(_OWORD *)(a1 + 48) = v97;
        }
        *(_BYTE *)(a1 + 256) = 34;
        return a1;
      case 35:
        v24 = a2[3];
        if (v24 < 0xFFFFFFFF)
        {
          v87 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v87;
        }
        else
        {
          *(_QWORD *)(a1 + 24) = v24;
          (**(void (***)(uint64_t, uint64_t *))(v24 - 8))(a1, a2);
        }
        *(_BYTE *)(a1 + 256) = 35;
        return a1;
      case 36:
        v18 = *a2;
        v19 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v19;
        v20 = 36;
LABEL_46:
        *(_BYTE *)(a1 + 256) = v20;
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRetain(v19);
        return a1;
      case 37:
        v21 = *a2;
        *(_QWORD *)a1 = *a2;
        v22 = 37;
LABEL_48:
        *(_BYTE *)(a1 + 256) = v22;
        swift_bridgeObjectRetain(v21);
        return a1;
      case 38:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_BYTE *)(a1 + 256) = 38;
        return a1;
      case 39:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_BYTE *)(a1 + 256) = 39;
        return a1;
      case 40:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 40;
        return a1;
      case 41:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 41;
        return a1;
      case 42:
        v25 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v25;
        v26 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v26;
        *(_BYTE *)(a1 + 256) = 42;
        return a1;
      case 43:
        v27 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v27;
        *(_BYTE *)(a1 + 256) = 43;
        return a1;
      case 44:
        v28 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v28;
        *(_BYTE *)(a1 + 256) = 44;
        return a1;
      case 45:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 45;
        return a1;
      case 46:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 46;
        return a1;
      case 47:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 47;
        return a1;
      case 48:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 48;
        return a1;
      case 49:
        *(_QWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 256) = 49;
        return a1;
      case 50:
        v29 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v29;
        *(_BYTE *)(a1 + 256) = 50;
        return a1;
      case 51:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 256) = 51;
        return a1;
      case 52:
        v30 = *((_OWORD *)a2 + 13);
        *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
        *(_OWORD *)(a1 + 208) = v30;
        v31 = *((_OWORD *)a2 + 15);
        *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
        *(_OWORD *)(a1 + 240) = v31;
        v32 = *((_OWORD *)a2 + 9);
        *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 144) = v32;
        v33 = *((_OWORD *)a2 + 11);
        *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
        *(_OWORD *)(a1 + 176) = v33;
        v34 = *((_OWORD *)a2 + 5);
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 80) = v34;
        v35 = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 112) = v35;
        v36 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v36;
        v37 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v37;
        *(_BYTE *)(a1 + 256) = 52;
        return a1;
      case 53:
        v38 = *((_OWORD *)a2 + 5);
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 80) = v38;
        v39 = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 112) = v39;
        v40 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v40;
        v41 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v41;
        *(_BYTE *)(a1 + 256) = 53;
        return a1;
      case 54:
        v42 = *((_OWORD *)a2 + 13);
        *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
        *(_OWORD *)(a1 + 208) = v42;
        v43 = *((_OWORD *)a2 + 15);
        *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
        *(_OWORD *)(a1 + 240) = v43;
        v44 = *((_OWORD *)a2 + 9);
        *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 144) = v44;
        v45 = *((_OWORD *)a2 + 11);
        *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
        *(_OWORD *)(a1 + 176) = v45;
        v46 = *((_OWORD *)a2 + 5);
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 80) = v46;
        v47 = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 112) = v47;
        v48 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v48;
        v49 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v49;
        *(_BYTE *)(a1 + 256) = 54;
        return a1;
      case 55:
        v50 = *((_OWORD *)a2 + 5);
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 80) = v50;
        v51 = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 112) = v51;
        v52 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v52;
        v53 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v53;
        *(_BYTE *)(a1 + 256) = 55;
        return a1;
      case 56:
        v54 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v54;
        v55 = *((_OWORD *)a2 + 5);
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 80) = v55;
        v56 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v56;
        *(_BYTE *)(a1 + 256) = 56;
        return a1;
      case 57:
        v57 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v57;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_BYTE *)(a1 + 256) = 57;
        return a1;
      case 58:
        v58 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v58;
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        v14 = (void *)a2[5];
        *(_QWORD *)(a1 + 40) = v14;
        *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
        v15 = 58;
LABEL_70:
        *(_BYTE *)(a1 + 256) = v15;
        v59 = v14;
        return a1;
      case 59:
        v60 = *((_OWORD *)a2 + 9);
        *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 144) = v60;
        *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
        v61 = *((_OWORD *)a2 + 5);
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 80) = v61;
        v62 = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 112) = v62;
        v63 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v63;
        v64 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v64;
        *(_BYTE *)(a1 + 256) = 59;
        return a1;
      case 60:
        v65 = *((_OWORD *)a2 + 11);
        *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
        *(_OWORD *)(a1 + 176) = v65;
        *(_BYTE *)(a1 + 192) = *((_BYTE *)a2 + 192);
        v66 = *((_OWORD *)a2 + 7);
        *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
        *(_OWORD *)(a1 + 112) = v66;
        v67 = *((_OWORD *)a2 + 9);
        *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
        *(_OWORD *)(a1 + 144) = v67;
        v68 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v68;
        v69 = *((_OWORD *)a2 + 5);
        *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 80) = v69;
        v70 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v70;
        *(_BYTE *)(a1 + 256) = 60;
        return a1;
      case 61:
        v71 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v71;
        v72 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v72;
        *(_BYTE *)(a1 + 256) = 61;
        return a1;
      case 62:
        v73 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v73;
        *(_BYTE *)(a1 + 256) = 62;
        return a1;
      case 63:
        v74 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v74;
        v75 = *((_OWORD *)a2 + 3);
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        *(_OWORD *)(a1 + 48) = v75;
        v76 = (void *)a2[8];
        v77 = (void *)a2[9];
        *(_QWORD *)(a1 + 64) = v76;
        *(_QWORD *)(a1 + 72) = v77;
        v78 = (void *)a2[10];
        v12 = (void *)a2[11];
        *(_QWORD *)(a1 + 80) = v78;
        *(_QWORD *)(a1 + 88) = v12;
        v79 = 63;
        goto LABEL_77;
      case 64:
        v80 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v80;
        v76 = (void *)a2[4];
        v77 = (void *)a2[5];
        *(_QWORD *)(a1 + 32) = v76;
        *(_QWORD *)(a1 + 40) = v77;
        v78 = (void *)a2[6];
        v12 = (void *)a2[7];
        *(_QWORD *)(a1 + 48) = v78;
        *(_QWORD *)(a1 + 56) = v12;
        v79 = 64;
LABEL_77:
        *(_BYTE *)(a1 + 256) = v79;
        v81 = v76;
        v82 = v77;
        v83 = v78;
LABEL_78:
        v84 = v12;
        return a1;
      default:
        v4 = *(_DWORD *)a2 + 65;
        continue;
    }
  }
}

uint64_t assignWithCopy for CRLLayerPropertyTransitionDescriptor(uint64_t a1, __int128 *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  char v18;
  __int128 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  id v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  void *v101;
  void *v102;
  void *v103;
  char v104;
  __int128 v105;
  id v106;
  id v107;
  id v108;
  id v109;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  _OWORD *v114;
  _OWORD *v115;
  uint64_t v116;
  __int128 v117;
  _OWORD *v118;
  _OWORD *v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 256);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 34:
          if (*(_QWORD *)(a1 + 24))
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
          if (*(_QWORD *)(a1 + 56))
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 32));
          goto LABEL_5;
        case 1:
        case 35:
          if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1);
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 59:
        case 60:
        case 61:
        case 62:
          goto LABEL_5;
        case 18:
        case 20:
        case 28:
        case 30:

          v7 = *(void **)(a1 + 8);
          goto LABEL_12;
        case 19:
        case 21:
        case 29:
        case 31:
          v7 = *(void **)a1;
          goto LABEL_12;
        case 32:
        case 36:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        case 33:
        case 37:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        case 58:
          v7 = *(void **)(a1 + 40);
          goto LABEL_12;
        case 63:

          v7 = *(void **)(a1 + 88);
          goto LABEL_12;
        case 64:

          v7 = *(void **)(a1 + 56);
LABEL_12:

LABEL_5:
          v5 = *((unsigned __int8 *)a2 + 256);
          while (2)
          {
            switch(v5)
            {
              case 0:
                v6 = *((_QWORD *)a2 + 3);
                if (v6)
                {
                  *(_QWORD *)(a1 + 24) = v6;
                  (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
                }
                else
                {
                  v113 = a2[1];
                  *(_OWORD *)a1 = *a2;
                  *(_OWORD *)(a1 + 16) = v113;
                }
                v114 = (_OWORD *)(a1 + 32);
                v115 = a2 + 2;
                v116 = *((_QWORD *)a2 + 7);
                if (v116)
                {
                  *(_QWORD *)(a1 + 56) = v116;
                  (**(void (***)(_OWORD *, _OWORD *))(v116 - 8))(v114, v115);
                }
                else
                {
                  v121 = a2[3];
                  *v114 = *v115;
                  *(_OWORD *)(a1 + 48) = v121;
                }
                *(_BYTE *)(a1 + 256) = 0;
                return a1;
              case 1:
                v8 = *((_QWORD *)a2 + 3);
                if (v8 < 0xFFFFFFFF)
                {
                  v111 = a2[1];
                  *(_OWORD *)a1 = *a2;
                  *(_OWORD *)(a1 + 16) = v111;
                }
                else
                {
                  *(_QWORD *)(a1 + 24) = v8;
                  (**(void (***)(uint64_t, __int128 *))(v8 - 8))(a1, a2);
                }
                *(_BYTE *)(a1 + 256) = 1;
                return a1;
              case 2:
                v9 = *a2;
                v10 = a2[1];
                v11 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v11;
                *(_OWORD *)a1 = v9;
                *(_OWORD *)(a1 + 16) = v10;
                *(_BYTE *)(a1 + 256) = 2;
                return a1;
              case 3:
                v12 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v12;
                *(_BYTE *)(a1 + 256) = 3;
                return a1;
              case 4:
                v13 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v13;
                *(_BYTE *)(a1 + 256) = 4;
                return a1;
              case 5:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 5;
                return a1;
              case 6:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 6;
                return a1;
              case 7:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                *(_BYTE *)(a1 + 256) = 7;
                return a1;
              case 8:
                *(_WORD *)a1 = *(_WORD *)a2;
                *(_BYTE *)(a1 + 256) = 8;
                return a1;
              case 9:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                *(_BYTE *)(a1 + 256) = 9;
                return a1;
              case 10:
                *(_WORD *)a1 = *(_WORD *)a2;
                *(_BYTE *)(a1 + 256) = 10;
                return a1;
              case 11:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                *(_BYTE *)(a1 + 256) = 11;
                return a1;
              case 12:
                *(_WORD *)a1 = *(_WORD *)a2;
                *(_BYTE *)(a1 + 256) = 12;
                return a1;
              case 13:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                *(_BYTE *)(a1 + 256) = 13;
                return a1;
              case 14:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 14;
                return a1;
              case 15:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 15;
                return a1;
              case 16:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 16;
                return a1;
              case 17:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 17;
                return a1;
              case 18:
                v14 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v15 = (void *)*((_QWORD *)a2 + 1);
                *(_QWORD *)(a1 + 8) = v15;
                v16 = 18;
                goto LABEL_55;
              case 19:
                v17 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v18 = 19;
                goto LABEL_88;
              case 20:
                v14 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v15 = (void *)*((_QWORD *)a2 + 1);
                *(_QWORD *)(a1 + 8) = v15;
                v16 = 20;
                goto LABEL_55;
              case 21:
                v17 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v18 = 21;
                goto LABEL_88;
              case 22:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 22;
                return a1;
              case 23:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                *(_BYTE *)(a1 + 256) = 23;
                return a1;
              case 24:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 24;
                return a1;
              case 25:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 25;
                return a1;
              case 26:
                v19 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v19;
                *(_BYTE *)(a1 + 256) = 26;
                return a1;
              case 27:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 27;
                return a1;
              case 28:
                v14 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v15 = (void *)*((_QWORD *)a2 + 1);
                *(_QWORD *)(a1 + 8) = v15;
                v16 = 28;
                goto LABEL_55;
              case 29:
                v17 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v18 = 29;
                goto LABEL_88;
              case 30:
                v14 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v15 = (void *)*((_QWORD *)a2 + 1);
                *(_QWORD *)(a1 + 8) = v15;
                v16 = 30;
LABEL_55:
                *(_BYTE *)(a1 + 256) = v16;
                v20 = v14;
                goto LABEL_96;
              case 31:
                v17 = *(void **)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v18 = 31;
                goto LABEL_88;
              case 32:
                v21 = *(_QWORD *)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v22 = *((_QWORD *)a2 + 1);
                *(_QWORD *)(a1 + 8) = v22;
                v23 = 32;
                goto LABEL_64;
              case 33:
                v24 = *(_QWORD *)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v25 = 33;
                goto LABEL_66;
              case 34:
                v26 = *((_QWORD *)a2 + 3);
                if (v26)
                {
                  *(_QWORD *)(a1 + 24) = v26;
                  (**(void (***)(uint64_t, __int128 *))(v26 - 8))(a1, a2);
                }
                else
                {
                  v117 = a2[1];
                  *(_OWORD *)a1 = *a2;
                  *(_OWORD *)(a1 + 16) = v117;
                }
                v118 = (_OWORD *)(a1 + 32);
                v119 = a2 + 2;
                v120 = *((_QWORD *)a2 + 7);
                if (v120)
                {
                  *(_QWORD *)(a1 + 56) = v120;
                  (**(void (***)(_OWORD *, _OWORD *))(v120 - 8))(v118, v119);
                }
                else
                {
                  v122 = a2[3];
                  *v118 = *v119;
                  *(_OWORD *)(a1 + 48) = v122;
                }
                *(_BYTE *)(a1 + 256) = 34;
                return a1;
              case 35:
                v27 = *((_QWORD *)a2 + 3);
                if (v27 < 0xFFFFFFFF)
                {
                  v112 = a2[1];
                  *(_OWORD *)a1 = *a2;
                  *(_OWORD *)(a1 + 16) = v112;
                }
                else
                {
                  *(_QWORD *)(a1 + 24) = v27;
                  (**(void (***)(uint64_t, __int128 *))(v27 - 8))(a1, a2);
                }
                *(_BYTE *)(a1 + 256) = 35;
                return a1;
              case 36:
                v21 = *(_QWORD *)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v22 = *((_QWORD *)a2 + 1);
                *(_QWORD *)(a1 + 8) = v22;
                v23 = 36;
LABEL_64:
                *(_BYTE *)(a1 + 256) = v23;
                swift_bridgeObjectRetain(v21);
                swift_bridgeObjectRetain(v22);
                return a1;
              case 37:
                v24 = *(_QWORD *)a2;
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v25 = 37;
LABEL_66:
                *(_BYTE *)(a1 + 256) = v25;
                swift_bridgeObjectRetain(v24);
                return a1;
              case 38:
                *(_WORD *)a1 = *(_WORD *)a2;
                *(_BYTE *)(a1 + 256) = 38;
                return a1;
              case 39:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                *(_BYTE *)(a1 + 256) = 39;
                return a1;
              case 40:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 40;
                return a1;
              case 41:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 41;
                return a1;
              case 42:
                v28 = *a2;
                v29 = a2[1];
                v30 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v30;
                *(_OWORD *)a1 = v28;
                *(_OWORD *)(a1 + 16) = v29;
                *(_BYTE *)(a1 + 256) = 42;
                return a1;
              case 43:
                v31 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v31;
                *(_BYTE *)(a1 + 256) = 43;
                return a1;
              case 44:
                v32 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v32;
                *(_BYTE *)(a1 + 256) = 44;
                return a1;
              case 45:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 45;
                return a1;
              case 46:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 46;
                return a1;
              case 47:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 47;
                return a1;
              case 48:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 48;
                return a1;
              case 49:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_BYTE *)(a1 + 256) = 49;
                return a1;
              case 50:
                v33 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v33;
                *(_BYTE *)(a1 + 256) = 50;
                return a1;
              case 51:
                *(_OWORD *)a1 = *a2;
                *(_BYTE *)(a1 + 256) = 51;
                return a1;
              case 52:
                v34 = *a2;
                v35 = a2[1];
                v36 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v36;
                *(_OWORD *)a1 = v34;
                *(_OWORD *)(a1 + 16) = v35;
                v37 = a2[4];
                v38 = a2[5];
                v39 = a2[7];
                *(_OWORD *)(a1 + 96) = a2[6];
                *(_OWORD *)(a1 + 112) = v39;
                *(_OWORD *)(a1 + 64) = v37;
                *(_OWORD *)(a1 + 80) = v38;
                v40 = a2[8];
                v41 = a2[9];
                v42 = a2[11];
                *(_OWORD *)(a1 + 160) = a2[10];
                *(_OWORD *)(a1 + 176) = v42;
                *(_OWORD *)(a1 + 128) = v40;
                *(_OWORD *)(a1 + 144) = v41;
                v43 = a2[12];
                v44 = a2[13];
                v45 = a2[15];
                *(_OWORD *)(a1 + 224) = a2[14];
                *(_OWORD *)(a1 + 240) = v45;
                *(_OWORD *)(a1 + 192) = v43;
                *(_OWORD *)(a1 + 208) = v44;
                *(_BYTE *)(a1 + 256) = 52;
                return a1;
              case 53:
                v46 = *a2;
                v47 = a2[1];
                v48 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v48;
                *(_OWORD *)a1 = v46;
                *(_OWORD *)(a1 + 16) = v47;
                v49 = a2[4];
                v50 = a2[5];
                v51 = a2[7];
                *(_OWORD *)(a1 + 96) = a2[6];
                *(_OWORD *)(a1 + 112) = v51;
                *(_OWORD *)(a1 + 64) = v49;
                *(_OWORD *)(a1 + 80) = v50;
                *(_BYTE *)(a1 + 256) = 53;
                return a1;
              case 54:
                v52 = *a2;
                v53 = a2[1];
                v54 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v54;
                *(_OWORD *)a1 = v52;
                *(_OWORD *)(a1 + 16) = v53;
                v55 = a2[4];
                v56 = a2[5];
                v57 = a2[7];
                *(_OWORD *)(a1 + 96) = a2[6];
                *(_OWORD *)(a1 + 112) = v57;
                *(_OWORD *)(a1 + 64) = v55;
                *(_OWORD *)(a1 + 80) = v56;
                v58 = a2[8];
                v59 = a2[9];
                v60 = a2[11];
                *(_OWORD *)(a1 + 160) = a2[10];
                *(_OWORD *)(a1 + 176) = v60;
                *(_OWORD *)(a1 + 128) = v58;
                *(_OWORD *)(a1 + 144) = v59;
                v61 = a2[12];
                v62 = a2[13];
                v63 = a2[15];
                *(_OWORD *)(a1 + 224) = a2[14];
                *(_OWORD *)(a1 + 240) = v63;
                *(_OWORD *)(a1 + 192) = v61;
                *(_OWORD *)(a1 + 208) = v62;
                *(_BYTE *)(a1 + 256) = 54;
                return a1;
              case 55:
                v64 = *a2;
                v65 = a2[1];
                v66 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v66;
                *(_OWORD *)a1 = v64;
                *(_OWORD *)(a1 + 16) = v65;
                v67 = a2[4];
                v68 = a2[5];
                v69 = a2[7];
                *(_OWORD *)(a1 + 96) = a2[6];
                *(_OWORD *)(a1 + 112) = v69;
                *(_OWORD *)(a1 + 64) = v67;
                *(_OWORD *)(a1 + 80) = v68;
                *(_BYTE *)(a1 + 256) = 55;
                return a1;
              case 56:
                v70 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v70;
                v71 = a2[2];
                v72 = a2[3];
                v73 = a2[5];
                *(_OWORD *)(a1 + 64) = a2[4];
                *(_OWORD *)(a1 + 80) = v73;
                *(_OWORD *)(a1 + 32) = v71;
                *(_OWORD *)(a1 + 48) = v72;
                *(_BYTE *)(a1 + 256) = 56;
                return a1;
              case 57:
                v74 = *a2;
                v75 = a2[2];
                *(_OWORD *)(a1 + 16) = a2[1];
                *(_OWORD *)(a1 + 32) = v75;
                *(_OWORD *)a1 = v74;
                *(_BYTE *)(a1 + 256) = 57;
                return a1;
              case 58:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
                v76 = a2[1];
                *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
                *(_OWORD *)(a1 + 16) = v76;
                v17 = (void *)*((_QWORD *)a2 + 5);
                *(_QWORD *)(a1 + 40) = v17;
                *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
                v18 = 58;
LABEL_88:
                *(_BYTE *)(a1 + 256) = v18;
                v77 = v17;
                return a1;
              case 59:
                v78 = *a2;
                v79 = a2[2];
                *(_OWORD *)(a1 + 16) = a2[1];
                *(_OWORD *)(a1 + 32) = v79;
                *(_OWORD *)a1 = v78;
                v80 = a2[3];
                v81 = a2[4];
                v82 = a2[6];
                *(_OWORD *)(a1 + 80) = a2[5];
                *(_OWORD *)(a1 + 96) = v82;
                *(_OWORD *)(a1 + 48) = v80;
                *(_OWORD *)(a1 + 64) = v81;
                v83 = a2[7];
                v84 = a2[8];
                v85 = a2[9];
                *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
                *(_OWORD *)(a1 + 128) = v84;
                *(_OWORD *)(a1 + 144) = v85;
                *(_OWORD *)(a1 + 112) = v83;
                *(_BYTE *)(a1 + 256) = 59;
                return a1;
              case 60:
                *(_OWORD *)a1 = *a2;
                v86 = a2[1];
                v87 = a2[2];
                v88 = a2[4];
                *(_OWORD *)(a1 + 48) = a2[3];
                *(_OWORD *)(a1 + 64) = v88;
                *(_OWORD *)(a1 + 16) = v86;
                *(_OWORD *)(a1 + 32) = v87;
                v89 = a2[5];
                v90 = a2[6];
                v91 = a2[8];
                *(_OWORD *)(a1 + 112) = a2[7];
                *(_OWORD *)(a1 + 128) = v91;
                *(_OWORD *)(a1 + 80) = v89;
                *(_OWORD *)(a1 + 96) = v90;
                v92 = a2[9];
                v93 = a2[10];
                v94 = a2[11];
                *(_BYTE *)(a1 + 192) = *((_BYTE *)a2 + 192);
                *(_OWORD *)(a1 + 160) = v93;
                *(_OWORD *)(a1 + 176) = v94;
                *(_OWORD *)(a1 + 144) = v92;
                *(_BYTE *)(a1 + 256) = 60;
                return a1;
              case 61:
                v95 = *a2;
                v96 = a2[1];
                v97 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v97;
                *(_OWORD *)a1 = v95;
                *(_OWORD *)(a1 + 16) = v96;
                *(_BYTE *)(a1 + 256) = 61;
                return a1;
              case 62:
                v98 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v98;
                *(_BYTE *)(a1 + 256) = 62;
                return a1;
              case 63:
                v99 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v99;
                v100 = a2[3];
                *(_OWORD *)(a1 + 32) = a2[2];
                *(_OWORD *)(a1 + 48) = v100;
                v101 = (void *)*((_QWORD *)a2 + 8);
                *(_QWORD *)(a1 + 64) = v101;
                v102 = (void *)*((_QWORD *)a2 + 9);
                *(_QWORD *)(a1 + 72) = v102;
                v103 = (void *)*((_QWORD *)a2 + 10);
                *(_QWORD *)(a1 + 80) = v103;
                v15 = (void *)*((_QWORD *)a2 + 11);
                *(_QWORD *)(a1 + 88) = v15;
                v104 = 63;
                goto LABEL_95;
              case 64:
                v105 = a2[1];
                *(_OWORD *)a1 = *a2;
                *(_OWORD *)(a1 + 16) = v105;
                v101 = (void *)*((_QWORD *)a2 + 4);
                *(_QWORD *)(a1 + 32) = v101;
                v102 = (void *)*((_QWORD *)a2 + 5);
                *(_QWORD *)(a1 + 40) = v102;
                v103 = (void *)*((_QWORD *)a2 + 6);
                *(_QWORD *)(a1 + 48) = v103;
                v15 = (void *)*((_QWORD *)a2 + 7);
                *(_QWORD *)(a1 + 56) = v15;
                v104 = 64;
LABEL_95:
                *(_BYTE *)(a1 + 256) = v104;
                v106 = v101;
                v107 = v102;
                v108 = v103;
LABEL_96:
                v109 = v15;
                break;
              default:
                v5 = *(_DWORD *)a2 + 65;
                continue;
            }
            break;
          }
          break;
        default:
          v4 = *(_DWORD *)a1 + 65;
          continue;
      }
      break;
    }
  }
  return a1;
}

void *initializeWithTake for CRLLayerPropertyTransitionDescriptor(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x101uLL);
}

__int128 *assignWithTake for CRLLayerPropertyTransitionDescriptor(__int128 *a1, __int128 *a2)
{
  int v4;
  int v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  if (a1 != a2)
  {
    v4 = *((unsigned __int8 *)a1 + 256);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 34:
          if (*((_QWORD *)a1 + 3))
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
          if (*((_QWORD *)a1 + 7))
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)a1 + 4);
          goto LABEL_5;
        case 1:
        case 35:
          if (*((_QWORD *)a1 + 3) >= 0xFFFFFFFFuLL)
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 59:
        case 60:
        case 61:
        case 62:
          goto LABEL_5;
        case 18:
        case 20:
        case 28:
        case 30:

          v10 = (id)*((_QWORD *)a1 + 1);
          goto LABEL_22;
        case 19:
        case 21:
        case 29:
        case 31:
          v10 = *(id *)a1;
          goto LABEL_22;
        case 32:
        case 36:
          swift_bridgeObjectRelease(*(_QWORD *)a1);
          swift_bridgeObjectRelease(*((_QWORD *)a1 + 1));
          goto LABEL_5;
        case 33:
        case 37:
          swift_bridgeObjectRelease(*(_QWORD *)a1);
          goto LABEL_5;
        case 58:
          v10 = (id)*((_QWORD *)a1 + 5);
          goto LABEL_22;
        case 63:

          v10 = (id)*((_QWORD *)a1 + 11);
          goto LABEL_22;
        case 64:

          v10 = (id)*((_QWORD *)a1 + 7);
LABEL_22:

LABEL_5:
          v5 = *((unsigned __int8 *)a2 + 256);
          while (2)
          {
            switch(v5)
            {
              case 0:
                v6 = 0;
                v7 = a2[1];
                *a1 = *a2;
                a1[1] = v7;
                v8 = a2[2];
                v9 = a2[3];
                goto LABEL_78;
              case 1:
                v11 = a2[1];
                *a1 = *a2;
                a1[1] = v11;
                v6 = 1;
                break;
              case 2:
                v12 = a2[1];
                *a1 = *a2;
                a1[1] = v12;
                v13 = a2[3];
                a1[2] = a2[2];
                a1[3] = v13;
                v6 = 2;
                break;
              case 3:
                v14 = a2[1];
                *a1 = *a2;
                a1[1] = v14;
                v6 = 3;
                break;
              case 4:
                v15 = a2[1];
                *a1 = *a2;
                a1[1] = v15;
                v6 = 4;
                break;
              case 5:
                *a1 = *a2;
                v6 = 5;
                break;
              case 6:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 6;
                break;
              case 7:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v6 = 7;
                break;
              case 8:
                *(_WORD *)a1 = *(_WORD *)a2;
                v6 = 8;
                break;
              case 9:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                v6 = 9;
                break;
              case 10:
                *(_WORD *)a1 = *(_WORD *)a2;
                v6 = 10;
                break;
              case 11:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                v6 = 11;
                break;
              case 12:
                *(_WORD *)a1 = *(_WORD *)a2;
                v6 = 12;
                break;
              case 13:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                v6 = 13;
                break;
              case 14:
                *a1 = *a2;
                v6 = 14;
                break;
              case 15:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 15;
                break;
              case 16:
                *a1 = *a2;
                v6 = 16;
                break;
              case 17:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 17;
                break;
              case 18:
                *a1 = *a2;
                v6 = 18;
                break;
              case 19:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 19;
                break;
              case 20:
                *a1 = *a2;
                v6 = 20;
                break;
              case 21:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 21;
                break;
              case 22:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 22;
                break;
              case 23:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v6 = 23;
                break;
              case 24:
                *a1 = *a2;
                v6 = 24;
                break;
              case 25:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 25;
                break;
              case 26:
                v16 = a2[1];
                *a1 = *a2;
                a1[1] = v16;
                v6 = 26;
                break;
              case 27:
                *a1 = *a2;
                v6 = 27;
                break;
              case 28:
                *a1 = *a2;
                v6 = 28;
                break;
              case 29:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 29;
                break;
              case 30:
                *a1 = *a2;
                v6 = 30;
                break;
              case 31:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 31;
                break;
              case 32:
                *a1 = *a2;
                v6 = 32;
                break;
              case 33:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 33;
                break;
              case 34:
                v17 = a2[1];
                *a1 = *a2;
                a1[1] = v17;
                v18 = a2[3];
                a1[2] = a2[2];
                a1[3] = v18;
                v6 = 34;
                break;
              case 35:
                v19 = a2[1];
                *a1 = *a2;
                a1[1] = v19;
                v6 = 35;
                break;
              case 36:
                *a1 = *a2;
                v6 = 36;
                break;
              case 37:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 37;
                break;
              case 38:
                *(_WORD *)a1 = *(_WORD *)a2;
                v6 = 38;
                break;
              case 39:
                *(_BYTE *)a1 = *(_BYTE *)a2;
                v6 = 39;
                break;
              case 40:
                *a1 = *a2;
                v6 = 40;
                break;
              case 41:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 41;
                break;
              case 42:
                v20 = a2[1];
                *a1 = *a2;
                a1[1] = v20;
                v21 = a2[3];
                a1[2] = a2[2];
                a1[3] = v21;
                v6 = 42;
                break;
              case 43:
                v22 = a2[1];
                *a1 = *a2;
                a1[1] = v22;
                v6 = 43;
                break;
              case 44:
                v23 = a2[1];
                *a1 = *a2;
                a1[1] = v23;
                v6 = 44;
                break;
              case 45:
                *a1 = *a2;
                v6 = 45;
                break;
              case 46:
                *a1 = *a2;
                v6 = 46;
                break;
              case 47:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 47;
                break;
              case 48:
                *a1 = *a2;
                v6 = 48;
                break;
              case 49:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v6 = 49;
                break;
              case 50:
                v24 = a2[1];
                *a1 = *a2;
                a1[1] = v24;
                v6 = 50;
                break;
              case 51:
                *a1 = *a2;
                v6 = 51;
                break;
              case 52:
                v25 = a2[13];
                a1[12] = a2[12];
                a1[13] = v25;
                v26 = a2[15];
                a1[14] = a2[14];
                a1[15] = v26;
                v27 = a2[9];
                a1[8] = a2[8];
                a1[9] = v27;
                v28 = a2[11];
                a1[10] = a2[10];
                a1[11] = v28;
                v29 = a2[5];
                a1[4] = a2[4];
                a1[5] = v29;
                v30 = a2[7];
                a1[6] = a2[6];
                a1[7] = v30;
                v31 = a2[1];
                *a1 = *a2;
                a1[1] = v31;
                v8 = a2[2];
                v9 = a2[3];
                v6 = 52;
                goto LABEL_78;
              case 53:
                v32 = a2[5];
                a1[4] = a2[4];
                a1[5] = v32;
                v33 = a2[7];
                a1[6] = a2[6];
                a1[7] = v33;
                v34 = a2[1];
                *a1 = *a2;
                a1[1] = v34;
                v8 = a2[2];
                v9 = a2[3];
                v6 = 53;
                goto LABEL_78;
              case 54:
                v35 = a2[13];
                a1[12] = a2[12];
                a1[13] = v35;
                v36 = a2[15];
                a1[14] = a2[14];
                a1[15] = v36;
                v37 = a2[9];
                a1[8] = a2[8];
                a1[9] = v37;
                v38 = a2[11];
                a1[10] = a2[10];
                a1[11] = v38;
                v39 = a2[5];
                a1[4] = a2[4];
                a1[5] = v39;
                v40 = a2[7];
                a1[6] = a2[6];
                a1[7] = v40;
                v41 = a2[1];
                *a1 = *a2;
                a1[1] = v41;
                v8 = a2[2];
                v9 = a2[3];
                v6 = 54;
                goto LABEL_78;
              case 55:
                v42 = a2[5];
                a1[4] = a2[4];
                a1[5] = v42;
                v43 = a2[7];
                a1[6] = a2[6];
                a1[7] = v43;
                v44 = a2[1];
                *a1 = *a2;
                a1[1] = v44;
                v8 = a2[2];
                v9 = a2[3];
                v6 = 55;
LABEL_78:
                a1[2] = v8;
                a1[3] = v9;
                break;
              case 56:
                v45 = a2[3];
                a1[2] = a2[2];
                a1[3] = v45;
                v46 = a2[5];
                a1[4] = a2[4];
                a1[5] = v46;
                v47 = *a2;
                v48 = a2[1];
                v6 = 56;
                goto LABEL_87;
              case 57:
                v49 = a2[1];
                *a1 = *a2;
                a1[1] = v49;
                a1[2] = a2[2];
                v6 = 57;
                break;
              case 58:
                v50 = a2[1];
                *a1 = *a2;
                a1[1] = v50;
                a1[2] = a2[2];
                *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
                v6 = 58;
                break;
              case 59:
                v51 = a2[9];
                a1[8] = a2[8];
                a1[9] = v51;
                *((_BYTE *)a1 + 160) = *((_BYTE *)a2 + 160);
                v52 = a2[5];
                a1[4] = a2[4];
                a1[5] = v52;
                v53 = a2[7];
                a1[6] = a2[6];
                a1[7] = v53;
                v54 = a2[1];
                *a1 = *a2;
                a1[1] = v54;
                v55 = a2[3];
                v6 = 59;
                a1[2] = a2[2];
                a1[3] = v55;
                break;
              case 60:
                v56 = a2[11];
                a1[10] = a2[10];
                a1[11] = v56;
                *((_BYTE *)a1 + 192) = *((_BYTE *)a2 + 192);
                v57 = a2[7];
                a1[6] = a2[6];
                a1[7] = v57;
                v58 = a2[9];
                a1[8] = a2[8];
                a1[9] = v58;
                v59 = a2[3];
                a1[2] = a2[2];
                a1[3] = v59;
                v60 = a2[5];
                a1[4] = a2[4];
                a1[5] = v60;
                v61 = a2[1];
                v6 = 60;
                *a1 = *a2;
                a1[1] = v61;
                break;
              case 61:
                v62 = a2[1];
                *a1 = *a2;
                a1[1] = v62;
                v63 = a2[3];
                a1[2] = a2[2];
                a1[3] = v63;
                v6 = 61;
                break;
              case 62:
                v64 = a2[1];
                *a1 = *a2;
                a1[1] = v64;
                v6 = 62;
                break;
              case 63:
                v65 = a2[3];
                a1[2] = a2[2];
                a1[3] = v65;
                v66 = a2[5];
                a1[4] = a2[4];
                a1[5] = v66;
                v47 = *a2;
                v48 = a2[1];
                v6 = 63;
LABEL_87:
                *a1 = v47;
                a1[1] = v48;
                break;
              case 64:
                v67 = a2[1];
                *a1 = *a2;
                a1[1] = v67;
                v68 = a2[3];
                a1[2] = a2[2];
                a1[3] = v68;
                v6 = 64;
                break;
              default:
                v5 = *(_DWORD *)a2 + 65;
                continue;
            }
            break;
          }
          *((_BYTE *)a1 + 256) = v6;
          break;
        default:
          v4 = *(_DWORD *)a1 + 65;
          continue;
      }
      break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerPropertyTransitionDescriptor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xC0 && *(_BYTE *)(a1 + 257))
    return (*(_DWORD *)a1 + 192);
  v3 = *(unsigned __int8 *)(a1 + 256);
  if (v3 >= 0x41)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLLayerPropertyTransitionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xBF)
  {
    *(_BYTE *)(result + 256) = 0;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 192;
    if (a3 >= 0xC0)
      *(_BYTE *)(result + 257) = 1;
  }
  else
  {
    if (a3 >= 0xC0)
      *(_BYTE *)(result + 257) = 0;
    if (a2)
      *(_BYTE *)(result + 256) = -(char)a2;
  }
  return result;
}

uint64_t sub_1008A4E5C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 256);
  if (result >= 0x41)
    return (*(_DWORD *)a1 + 65);
  return result;
}

uint64_t sub_1008A4E78(uint64_t result, unsigned int a2)
{
  if (a2 > 0x40)
  {
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 65;
    LOBYTE(a2) = 65;
  }
  *(_BYTE *)(result + 256) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerPropertyTransitionDescriptor()
{
  return &type metadata for CRLLayerPropertyTransitionDescriptor;
}

uint64_t sub_1008A4EC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1008A4EFC + 4 * byte_100F12BBC[a1]))(0x73746E65746E6F63, 0xE800000000000000);
}

uint64_t sub_1008A4F20()
{
  return 0x7974696361706FLL;
}

uint64_t sub_1008A4F38()
{
  return 0x6E65646469487369;
}

uint64_t sub_1008A4F4C()
{
  return 0x426F54736B73616DLL;
}

uint64_t sub_1008A4F70()
{
  return 0x656C62756F447369;
}

uint64_t sub_1008A4F94()
{
  return 0x615272656E726F63;
}

uint64_t sub_1008A503C()
{
  return 0x664F776F64616873;
}

uint64_t sub_1008A507C()
{
  return 0x6150776F64616873;
}

uint64_t sub_1008A5098()
{
  return 0x737265746C6966;
}

unint64_t sub_1008A50B0()
{
  return 0xD000000000000011;
}

void sub_1008A51B4()
{
  JUMPOUT(0x1008A51C8);
}

void sub_1008A51D4()
{
  uint64_t *v0;
  _BYTE v1[264];

  sub_10057E090(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1008A5210()
{
  return 26;
}

uint64_t sub_1008A537C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_1004EA730((uint64_t *)va);
  return sub_1008A5210();
}

void sub_1008A5388()
{
  uint64_t *v0;
  _BYTE v1[272];

  sub_10057E090(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

void sub_1008A53E4()
{
  uint64_t v0;
  float v1;
  double v2;
  double v3;
  double v4;

  v2 = sub_10006191C(v3, v4, v1);
  *(_QWORD *)(v0 + 24) = &type metadata for CGFloat;
  *(double *)v0 = v2;
}

void sub_1008A5E84()
{
  uint64_t *v0;
  _BYTE v1[264];
  uint64_t v2[35];

  sub_10057E090(v0, (uint64_t)v2);
  sub_10057E090(v2, (uint64_t)v1);
  __asm { BR              X10 }
}

_QWORD *sub_1008A5EEC()
{
  uint64_t *v0;
  unsigned __int8 v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _QWORD v8[20];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[51];
  uint64_t v16;

  sub_1008A51D4();
  v2 = v1;
  v15[3] = &type metadata for CGFloat;
  v15[0] = v15[18];
  v8[3] = &type metadata for CGFloat;
  v8[0] = v15[19];
  v0[3] = (uint64_t)&type metadata for CRLLayerConcretePropertyTransition;
  v0[4] = sub_1008A9480();
  v3 = swift_allocObject(&unk_1012848E0, 104, 7);
  *v0 = v3;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  LOBYTE(v13) = v2;
  *((_QWORD *)&v13 + 1) = sub_1008A4EC8(v2);
  v14 = v4;
  sub_10056B738((uint64_t)v15, (uint64_t)&v9);
  sub_10056B738((uint64_t)v8, (uint64_t)&v11);
  v5 = v12;
  *(_OWORD *)(v3 + 48) = v11;
  *(_OWORD *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 80) = v13;
  *(_QWORD *)(v3 + 96) = v14;
  v6 = v10;
  *(_OWORD *)(v3 + 16) = v9;
  *(_OWORD *)(v3 + 32) = v6;
  return sub_1004EA730(&v16);
}

uint64_t sub_1008A725C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = sub_1008A4EC8(*a1);
  v5 = v4;
  v6 = sub_1008A4EC8(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_1008A72E4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  v2 = sub_1008A4EC8(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_1008A7344(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  double result;

  v3 = sub_1008A4EC8(*v1);
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

Swift::Int sub_1008A7384(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  v3 = sub_1008A4EC8(v2);
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1008A73E0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1008A970C(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1008A740C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1008A4EC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_1008A7434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  sub_1004F370C(a1, (uint64_t)&v21);
  if (v22)
  {
    sub_10050CB14(&v21, &v23);
    sub_1004F370C(a2, (uint64_t)&v19);
    if (v20)
    {
      sub_10050CB14(&v19, &v21);
      sub_1004CB6E8((uint64_t)&v23, (uint64_t)&v19);
      v4 = sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
      if ((swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
      {
        v5 = v18;
        sub_1004CB6E8((uint64_t)&v21, (uint64_t)&v19);
        if ((swift_dynamicCast(&v18, &v19, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
        {
          v6 = v18;
          v7 = (unint64_t)objc_msgSend(v5, "isEqual:", v6);

LABEL_13:
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v21);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v23);
          return v7;
        }

      }
      v11 = v24;
      v12 = sub_1004BB5A4(&v23, v24);
      v13 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
      v14 = v22;
      v15 = sub_1004BB5A4(&v21, v22);
      v16 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v14);
      swift_unknownObjectRelease(v13);
      swift_unknownObjectRelease(v16);
      v7 = v13 == v16;
      goto LABEL_13;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v23);
    v8 = &v19;
  }
  else
  {
    v8 = &v21;
  }
  sub_1004D28EC((uint64_t)v8);
  sub_1004F370C(a1, (uint64_t)&v23);
  v9 = sub_1004B804C(&qword_1013E0230);
  v10 = Optional._bridgeToObjectiveC()(v9);
  sub_1004D28EC((uint64_t)&v23);
  swift_unknownObjectRelease(v10);
  return !*(_QWORD *)(a1 + 24) && !*(_QWORD *)(a2 + 24);
}

void sub_1008A7624(uint64_t *a1)
{
  _BYTE v1[280];

  sub_10057E090(a1, (uint64_t)v1);
  __asm { BR              X10 }
}

BOOL sub_1008A7680()
{
  uint64_t *v0;
  BOOL v1;
  BOOL v2;
  _BYTE v4[128];
  _BYTE v5[144];
  _BYTE v6[144];
  _BYTE v7[144];
  _BYTE v8[144];
  _QWORD v9[4];
  _BYTE v10[232];
  uint64_t v11;
  uint64_t v12;

  sub_1004C4938((uint64_t)&v11, (uint64_t)v8, &qword_1013E0230);
  sub_1004C4938((uint64_t)&v12, (uint64_t)v7, &qword_1013E0230);
  sub_10057E090(v0, (uint64_t)v9);
  if (v10[224])
  {
    sub_1004D28EC((uint64_t)v7);
    sub_1004D28EC((uint64_t)v8);
    sub_1004EA730(v9);
    return 0;
  }
  else
  {
    sub_1004C4938((uint64_t)v9, (uint64_t)v6, &qword_1013E0230);
    sub_1004C4938((uint64_t)v10, (uint64_t)v5, &qword_1013E0230);
    v1 = sub_1008A7434((uint64_t)v8, (uint64_t)v6);
    sub_1004F370C((uint64_t)v7, (uint64_t)v9);
    sub_1004F370C((uint64_t)v5, (uint64_t)v4);
    v2 = v1 && sub_1008A7434((uint64_t)v9, (uint64_t)v4);
    sub_1004D28EC((uint64_t)v4);
    sub_1004D28EC((uint64_t)v9);
    sub_1004D28EC((uint64_t)v5);
    sub_1004D28EC((uint64_t)v6);
    sub_1004D28EC((uint64_t)v7);
    sub_1004D28EC((uint64_t)v8);
  }
  return v2;
}

unint64_t sub_1008A9128()
{
  unint64_t result;

  result = qword_1013F7830;
  if (!qword_1013F7830)
  {
    result = swift_getWitnessTable(&unk_100F05EF8, &type metadata for CRLCanvasLayerTransformByUnscaledRectTransition);
    atomic_store(result, (unint64_t *)&qword_1013F7830);
  }
  return result;
}

uint64_t sub_1008A916C()
{
  id *v0;

  return swift_deallocObject(v0, 121, 7);
}

unint64_t sub_1008A91A8()
{
  unint64_t result;

  result = qword_1013F7838;
  if (!qword_1013F7838)
  {
    result = swift_getWitnessTable(&unk_100EFA5B4, &type metadata for CRLLayerTransformByNaturalRectTransition);
    atomic_store(result, (unint64_t *)&qword_1013F7838);
  }
  return result;
}

uint64_t sub_1008A91EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 217, 7);
}

uint64_t sub_1008A9210(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLLayerTransformByNaturalRectTransition(a2, a1, (uint64_t)&type metadata for CRLLayerTransformByNaturalRectTransition);
  return a2;
}

unint64_t sub_1008A924C()
{
  unint64_t result;

  result = qword_1013F7840;
  if (!qword_1013F7840)
  {
    result = swift_getWitnessTable(&unk_100EF8FA4, &type metadata for CRLLayerTransformBy2DTranslationTransition);
    atomic_store(result, (unint64_t *)&qword_1013F7840);
  }
  return result;
}

uint64_t sub_1008A9290()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 185, 7);
}

uint64_t sub_1008A92B4(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLLayerTransformBy2DTranslationTransition(a2, a1, (uint64_t)&type metadata for CRLLayerTransformBy2DTranslationTransition);
  return a2;
}

unint64_t sub_1008A92F0()
{
  unint64_t result;

  result = qword_1013F7848;
  if (!qword_1013F7848)
  {
    result = swift_getWitnessTable(&unk_100F1E154, &type metadata for CRLLayerTransformByScaleFactorTransition);
    atomic_store(result, (unint64_t *)&qword_1013F7848);
  }
  return result;
}

uint64_t sub_1008A9334()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_unknownObjectWeakDestroy(v0 + 64);
  return swift_deallocObject(v0, 73, 7);
}

uint64_t sub_1008A9360(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLLayerTransformByScaleFactorTransition(a2, a1, (uint64_t)&type metadata for CRLLayerTransformByScaleFactorTransition);
  return a2;
}

uint64_t sub_1008A939C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

unint64_t sub_1008A93AC()
{
  unint64_t result;

  result = qword_1013F7850;
  if (!qword_1013F7850)
  {
    result = swift_getWitnessTable(&unk_100F27DFC, &type metadata for CRLLayerImplicitPropertyTransition);
    atomic_store(result, (unint64_t *)&qword_1013F7850);
  }
  return result;
}

uint64_t sub_1008A93F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  if (*(_QWORD *)(v0 + 48))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 57, 7);
}

uint64_t sub_1008A9424(uint64_t a1, uint64_t a2)
{
  initializeWithTake for CRLLayerImplicitPropertyTransition(a2, a1);
  return a2;
}

uint64_t sub_1008A9460()
{
  uint64_t v0;

  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1008A9470()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1008A9480()
{
  unint64_t result;

  result = qword_1013F7858;
  if (!qword_1013F7858)
  {
    result = swift_getWitnessTable(&unk_100F07C2C, &type metadata for CRLLayerConcretePropertyTransition);
    atomic_store(result, (unint64_t *)&qword_1013F7858);
  }
  return result;
}

uint64_t sub_1008A94C4()
{
  _QWORD *v0;

  if (v0[5])
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 2);
  if (v0[9])
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 6);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1008A9508()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 48, 7);
}

_QWORD *sub_1008A9534(_QWORD *a1)
{
  destroy for InterpolatableAny(a1);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerPropertyKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE4)
    goto LABEL_17;
  if (a2 + 28 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 28) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 28;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 28;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 28;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1D;
  v8 = v6 - 29;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerPropertyKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 28 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 28) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE3)
    return ((uint64_t (*)(void))((char *)&loc_1008A9644 + 4 * byte_100F12D23[v4]))();
  *a1 = a2 + 28;
  return ((uint64_t (*)(void))((char *)sub_1008A9678 + 4 * byte_100F12D1E[v4]))();
}

uint64_t sub_1008A9678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008A9680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008A9688);
  return result;
}

uint64_t sub_1008A9694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008A969CLL);
  *(_BYTE *)result = a2 + 28;
  return result;
}

uint64_t sub_1008A96A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008A96A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerPropertyKey()
{
  return &type metadata for CRLLayerPropertyKey;
}

unint64_t sub_1008A96C8()
{
  unint64_t result;

  result = qword_1013F7860;
  if (!qword_1013F7860)
  {
    result = swift_getWitnessTable(&unk_100F12E1C, &type metadata for CRLLayerPropertyKey);
    atomic_store(result, (unint64_t *)&qword_1013F7860);
  }
  return result;
}

uint64_t sub_1008A970C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_101265018, a1, a2, &unk_1013DDFE8);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x1D)
    return 29;
  else
    return v3;
}

void sub_1008A975C(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  void (*v33)(char *, uint64_t);
  id v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;

  v46 = a3;
  v52 = a2;
  v51 = sub_1004B804C(&qword_101405DF0);
  __chkstk_darwin(v51);
  v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v45 - v6;
  __chkstk_darwin(v8);
  v49 = (char *)&v45 - v9;
  v10 = *(_QWORD *)(a1 + 64);
  v47 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v48 = (unint64_t)(v11 + 63) >> 6;
  v53 = a1;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v14 << 6);
LABEL_24:
    v21 = v53;
    v22 = *(_QWORD *)(v53 + 48);
    v23 = type metadata accessor for UUID(0);
    v24 = *(_QWORD **)(v23 - 8);
    v25 = v22 + v24[9] * v17;
    v26 = (void (*)(char *, uint64_t, uint64_t))v24[2];
    v27 = (uint64_t)v49;
    v26(v49, v25, v23);
    v28 = *(void **)(*(_QWORD *)(v21 + 56) + 8 * v17);
    v29 = v51;
    *(_QWORD *)(v27 + *(int *)(v51 + 48)) = v28;
    sub_1008AAE84(v27, (uint64_t)v7);
    v30 = *(int *)(v29 + 48);
    v31 = v50;
    v26(v50, (uint64_t)v7, v23);
    v32 = *(void **)&v7[v30];
    *(_QWORD *)&v31[v30] = v32;
    v33 = (void (*)(char *, uint64_t))v24[1];
    v34 = v28;
    v35 = v32;
    v33(v31, v23);
    sub_100BC90D8(v52, v35);
    v36 = (*(uint64_t (**)(void))((swift_isaMask & *v35) + 0xC8))();
    if ((v37 & 1) != 0 && v36 == 8)
    {
      v38 = type metadata accessor for CRLFreehandDrawingItem(0);
      v39 = swift_dynamicCastClass(v35, v38);
      if (v39)
      {
        v40 = v39;
        v41 = v35;
        v42 = v46;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
        v44 = *(_QWORD *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v43 = *(_QWORD *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v44 >= v43 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
        v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v40);
        specialized Array._endMutation()(v15);
      }
    }

    sub_1004CB800((uint64_t)v7, &qword_101405DF0);
  }
  v18 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v18 >= v48)
    goto LABEL_29;
  v19 = *(_QWORD *)(v47 + 8 * v18);
  ++v14;
  if (v19)
    goto LABEL_23;
  v14 = v18 + 1;
  if (v18 + 1 >= v48)
    goto LABEL_29;
  v19 = *(_QWORD *)(v47 + 8 * v14);
  if (v19)
    goto LABEL_23;
  v14 = v18 + 2;
  if (v18 + 2 >= v48)
    goto LABEL_29;
  v19 = *(_QWORD *)(v47 + 8 * v14);
  if (v19)
    goto LABEL_23;
  v14 = v18 + 3;
  if (v18 + 3 >= v48)
    goto LABEL_29;
  v19 = *(_QWORD *)(v47 + 8 * v14);
  if (v19)
  {
LABEL_23:
    v13 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
    goto LABEL_24;
  }
  v20 = v18 + 4;
  if (v20 >= v48)
  {
LABEL_29:
    swift_release(v53);
    return;
  }
  v19 = *(_QWORD *)(v47 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v48)
      goto LABEL_29;
    v19 = *(_QWORD *)(v47 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

void sub_1008A9ABC(void *a1, char a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  id v19;
  __n128 v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v31[4];

  v11 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v11);
  v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v16 = swift_allocObject(&unk_101284A20, 73, 7);
  *(_QWORD *)(v16 + 16) = 0;
  v17 = (_QWORD *)(v16 + 16);
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = a1;
  *(_QWORD *)(v16 + 40) = v5;
  *(double *)(v16 + 48) = a4;
  *(double *)(v16 + 56) = a5;
  *(double *)(v16 + 64) = a3;
  *(_BYTE *)(v16 + 72) = a2;
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  v19 = a1;
  if (v18 == 1)
  {
    sub_1004CB800((uint64_t)v13, &qword_1013E01F0);
    v21 = 7168;
LABEL_6:
    v29 = 0;
    goto LABEL_7;
  }
  v22 = TaskPriority.rawValue.getter(v20);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  v21 = v22 | 0x1C00;
  v23 = *v17;
  if (!*v17)
    goto LABEL_6;
  v24 = *(_QWORD *)(v16 + 24);
  ObjectType = swift_getObjectType(*v17);
  swift_unknownObjectRetain(v23);
  v26 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v24);
  v28 = v27;
  swift_unknownObjectRelease(v23);
  if (!(v28 | v26))
    goto LABEL_6;
  v31[0] = 0;
  v31[1] = 0;
  v29 = v31;
  v31[2] = v26;
  v31[3] = v28;
LABEL_7:
  v30 = swift_task_create(v21, v29, (char *)&type metadata for () + 8, &unk_1013F7910);
  swift_release(v30);
}

uint64_t sub_1008A9CAC(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  *(_BYTE *)(v9 + 232) = a9;
  *(double *)(v9 + 112) = a2;
  *(double *)(v9 + 120) = a3;
  *(double *)(v9 + 104) = a1;
  *(_QWORD *)(v9 + 96) = a7;
  v10 = type metadata accessor for CRLBoardCRDTData(0);
  *(_QWORD *)(v9 + 128) = v10;
  *(_QWORD *)(v9 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  *(_QWORD *)(v9 + 144) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 152) = v12;
  *(_QWORD *)(v9 + 160) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  *(_QWORD *)(v9 + 168) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 176) = v14;
  *(_QWORD *)(v9 + 184) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C((uint64_t *)&unk_101405E90);
  *(_QWORD *)(v9 + 192) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  *(_QWORD *)(v9 + 200) = v16;
  *v16 = v9;
  v16[1] = sub_1008A9DA8;
  return static Task<>.sleep(nanoseconds:)(5000000000);
}

uint64_t sub_1008A9DA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 200);
  v3 = *v1;
  *(_QWORD *)(v3 + 208) = v0;
  swift_task_dealloc(v2);
  if (!v0)
    return swift_task_switch(sub_1008A9E48, 0, 0);
  v4 = *(_QWORD *)(v3 + 184);
  v5 = *(_QWORD *)(v3 + 160);
  v6 = *(_QWORD *)(v3 + 136);
  swift_task_dealloc(*(_QWORD *)(v3 + 192));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_1008A9E48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _BOOL8 v11;
  CFArrayRef (__cdecl **v12)(CTFontDescriptorRef, CFSetRef);
  id v13;
  char isUniquelyReferenced_nonNull_native;
  id v15;
  char v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _BOOL8 v22;
  id v23;
  char v24;
  unint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  double v37;
  uint64_t v38;
  id v39;
  void *v40;
  char **v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  char v51;
  uint64_t v52;
  uint64_t j;
  double v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  id v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  double v83;
  uint64_t v84;
  double v85;
  id v86;
  char v87;
  id v88;
  NSString v89;
  uint64_t v90;
  char v91;
  id v92;
  char v93;
  id v94;
  char v95;
  id v96;
  char v97;
  id v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  __n128 v104;
  id v105;
  char v106;
  uint64_t v107;
  id v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v0 + 72) = _swiftEmptyArrayStorage;
  v3 = v0 + 72;
  v4 = (unint64_t *)(v0 + 64);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  v6 = *(void **)(v5 + 16);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v7, "currentUserParticipant");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "role");

      v11 = v10 == (id)1;
    }
    else
    {

      v11 = 0;
    }
  }
  else
  {
    v11 = 1;
  }
  v12 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
  v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v11);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_100826868((uint64_t)v13, 0x72656E774F7369, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", *(_QWORD *)(v5 + 16) != 0);
  v16 = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_100826868((uint64_t)v15, 0x6465726168537369, 0xE800000000000000, v16);
  *v4 = v2;
  swift_bridgeObjectRelease();
  v17 = *(void **)(v5 + 16);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v18, "currentUserParticipant");
    if (v19)
    {
      v20 = v19;
      v21 = objc_msgSend(v19, "permission");

      v18 = v20;
    }
    else
    {
      v21 = objc_msgSend(v18, "publicPermission");
    }

    v22 = v21 == (id)2;
  }
  else
  {
    v22 = 0;
  }
  v23 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v22);
  v24 = swift_isUniquelyReferenced_nonNull_native(v2);
  sub_100826868((uint64_t)v23, 0x6E4F646165527369, 0xEA0000000000796CLL, v24);
  v25 = v2;
  swift_bridgeObjectRelease();
  v26 = *(void **)(v5 + 16);
  if (!v26)
  {
    v41 = &selRef_p_didReceiveMemoryWarning_;
LABEL_78:
    v79 = *(_QWORD *)(v0 + 152);
    v78 = *(_QWORD *)(v0 + 160);
    v81 = *(_QWORD *)(v0 + 136);
    v80 = *(_QWORD *)(v0 + 144);
    v118 = *(unsigned __int8 *)(v0 + 232);
    v83 = *(double *)(v0 + 112);
    v82 = *(double *)(v0 + 120);
    v84 = *(_QWORD *)(v0 + 96);
    v119 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
    v85 = *(double *)(v0 + 104);
    v86 = objc_msgSend(objc_allocWithZone((Class)NSNumber), v41[443], *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v84 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)+ OBJC_IVAR____TtC8Freeform16CRLContainerItem_items)+ 16));
    v87 = swift_isUniquelyReferenced_nonNull_native(v25);
    sub_100826868((uint64_t)v86, 0x756F43736D657469, 0xEA0000000000746ELL, v87);
    *(_QWORD *)(v0 + 64) = v25;
    swift_bridgeObjectRelease();
    v88 = objc_msgSend((id)objc_opt_self(NSLocale), "currentLocale");
    static Locale._unconditionallyBridgeFromObjectiveC(_:)(v88);

    Locale.identifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
    v89 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v90 = *(_QWORD *)(v0 + 64);
    v91 = swift_isUniquelyReferenced_nonNull_native(v90);
    sub_100826868((uint64_t)v89, 0x6F4C6D6574737973, 0xEC000000656C6163, v91);
    swift_bridgeObjectRelease();
    v92 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v85);
    v93 = swift_isUniquelyReferenced_nonNull_native(v90);
    sub_100826868((uint64_t)v92, 0x6965486472616F62, 0xEB00000000746867, v93);
    swift_bridgeObjectRelease();
    v94 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v83);
    v95 = swift_isUniquelyReferenced_nonNull_native(v90);
    sub_100826868((uint64_t)v94, 0x6469576472616F62, 0xEA00000000006874, v95);
    swift_bridgeObjectRelease();
    v96 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v83 * v85);
    v97 = swift_isUniquelyReferenced_nonNull_native(v90);
    sub_100826868((uint64_t)v96, 0x6572416472616F62, 0xE900000000000061, v97);
    swift_bridgeObjectRelease();
    v98 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v82);
    v99 = swift_isUniquelyReferenced_nonNull_native(v90);
    sub_100826868((uint64_t)v98, 0x6C61635377656976, 0xE900000000000065, v99);
    v100 = v90;
    swift_bridgeObjectRelease();
    v101 = *(_QWORD *)(v84 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess(v101, v0 + 16, 0, 0);
    sub_1004B8460(v101, v81, type metadata accessor for CRLBoardCRDTData);
    type metadata accessor for CRLSharedBoardMetadataCRDTData(0);
    v102 = sub_1004B804C(&qword_1013F7918);
    CRRegister.wrappedValue.getter(v102);
    v103 = *(double *)(v0 + 80);
    sub_1004B84A4(v81, type metadata accessor for CRLBoardCRDTData);
    v105 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", static Date.timeIntervalSinceReferenceDate.getter(v104) - v103);
    v106 = swift_isUniquelyReferenced_nonNull_native(v100);
    sub_100826868((uint64_t)v105, 0xD00000000000001ALL, 0x8000000100FDBE20, v106);
    v107 = v100;
    swift_bridgeObjectRelease();
    v108 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v118);
    v109 = swift_isUniquelyReferenced_nonNull_native(v107);
    sub_100826868((uint64_t)v108, 0xD000000000000015, 0x8000000100FDBE40, v109);
    *(_QWORD *)(v0 + 64) = v107;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v84 + v119) + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items));
    sub_1008A975C(v110, (uint64_t *)(v0 + 64), (_QWORD *)(v0 + 72));
    swift_bridgeObjectRelease();
    v111 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 216) = v111;
    v112 = type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain(v111);
    *(_QWORD *)(v0 + 224) = static MainActor.shared.getter(v113);
    v114 = dispatch thunk of Actor.unownedExecutor.getter(v112, &protocol witness table for MainActor);
    swift_task_switch(sub_1008AABCC, v114, v115);
    return;
  }
  v27 = v26;
  v28 = objc_msgSend(v27, "currentUserParticipant");
  if (!v28)
  {

LABEL_29:
    v42 = *(void **)(v5 + 16);
    if (v42)
    {
      v43 = objc_msgSend(v42, "participants");
      v44 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
      v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);

      if ((unint64_t)v45 >> 62)
      {
        if (v45 < 0)
          v48 = v45;
        else
          v48 = v45 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v45);
        v46 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease();
      }
      else
      {
        v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      goto LABEL_72;
    }
    goto LABEL_60;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, "role");

  if (v30 != (id)1)
    goto LABEL_29;
  v31 = *(void **)(v5 + 16);
  if (!v31)
  {
    v47 = 0;
    v34 = 0;
    goto LABEL_48;
  }
  v32 = objc_msgSend(v31, "participants");
  v33 = sub_1004B8930(0, (unint64_t *)&qword_1013FF620, CKShareParticipant_ptr);
  v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

  if ((unint64_t)v34 >> 62)
  {
    if (v34 < 0)
      v49 = v34;
    else
      v49 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v35 = _CocoaArrayWrapper.endIndex.getter(v49);
    if (v35)
    {
LABEL_18:
      if (v35 < 1)
      {
        __break(1u);
        goto LABEL_86;
      }
      for (i = 0; i != v35; ++i)
      {
        if ((v34 & 0xC000000000000001) != 0)
          v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v34);
        else
          v39 = *(id *)(v34 + 8 * i + 32);
        v40 = v39;
        if (objc_msgSend(v39, "acceptanceStatus") == (id)1)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(1);
          v37 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v37);
          v38 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v37, v40);
          specialized ContiguousArray._endMutation()(v38);
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v3 = v0 + 72;
      v4 = (unint64_t *)(v0 + 64);
      v12 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
        goto LABEL_63;
      goto LABEL_45;
    }
  }
  else
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v34);
    if (v35)
      goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
  {
LABEL_63:
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v47 = _CocoaArrayWrapper.endIndex.getter(v58);
    swift_release(_swiftEmptyArrayStorage);
    goto LABEL_47;
  }
LABEL_45:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    goto LABEL_63;
  v47 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
LABEL_47:
  swift_release(_swiftEmptyArrayStorage);
LABEL_48:
  v50 = objc_msgSend(objc_allocWithZone((Class)v12[427]), "initWithInteger:", v47);
  v51 = swift_isUniquelyReferenced_nonNull_native(v25);
  sub_100826868((uint64_t)v50, 0xD00000000000001CLL, 0x8000000100FDBEA0, v51);
  swift_bridgeObjectRelease();
  if (!v34)
  {
LABEL_60:
    v46 = 0;
LABEL_72:
    v60 = objc_msgSend(objc_allocWithZone((Class)v12[427]), "initWithInteger:", v46);
    v61 = swift_isUniquelyReferenced_nonNull_native(v25);
    sub_100826868((uint64_t)v60, 0xD000000000000015, 0x8000000100FDBE60, v61);
    v62 = v25;
    *v4 = v25;
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v0 + 192);
    v64 = *(_QWORD *)(v0 + 168);
    v65 = *(_QWORD *)(v0 + 176);
    v66 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess(v66, v3 - 32, 0, 0);
    sub_1008AAE34(v66, v63);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64);
    v68 = *(_QWORD *)(v0 + 192);
    if (v67)
    {
      sub_1004CB800(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_101405E90);
      v69 = 0;
    }
    else
    {
      v70 = *(_QWORD *)(v0 + 184);
      v71 = *(_QWORD *)(v0 + 168);
      sub_1004B8460(*(_QWORD *)(v0 + 192), v70, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_1004CB800(v68, (uint64_t *)&unk_101405E90);
      v72 = *(_QWORD *)(v70 + *(int *)(v71 + 24));
      swift_retain(v72);
      sub_1004B84A4(v70, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      KeyPath = swift_getKeyPath(byte_100F12E68);
      v74 = swift_getKeyPath(byte_100F12E90);
      static Published.subscript.getter((_QWORD *)(v3 + 16), v72, KeyPath, v74);
      swift_release(v74);
      swift_release(KeyPath);
      swift_release(v72);
      v75 = *(_QWORD *)(v0 + 88);
      if ((unint64_t)v75 >> 62)
        goto LABEL_80;
      v69 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
    while (1)
    {
      v75 = v69 + 1;
      if (!__OFADD__(v69, 1))
        break;
      __break(1u);
LABEL_80:
      if (v75 < 0)
        v116 = v75;
      else
        v116 = v75 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v75);
      v69 = _CocoaArrayWrapper.endIndex.getter(v116);
      swift_bridgeObjectRelease_n(v75, 2);
    }
    v41 = &selRef_p_didReceiveMemoryWarning_;
    v76 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v69 + 1);
    v77 = swift_isUniquelyReferenced_nonNull_native(v62);
    sub_100826868((uint64_t)v76, 0xD000000000000019, 0x8000000100FDBE80, v77);
    v25 = v62;
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }
  if (!((unint64_t)v34 >> 62))
  {
    v52 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v52)
      goto LABEL_51;
LABEL_68:
    swift_bridgeObjectRelease();
    v12 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_84;
    goto LABEL_69;
  }
  if (v34 >= 0)
    v59 = v34 & 0xFFFFFFFFFFFFFF8;
  else
    v59 = v34;
  swift_bridgeObjectRetain(v34);
  v52 = _CocoaArrayWrapper.endIndex.getter(v59);
  swift_bridgeObjectRelease();
  if (!v52)
    goto LABEL_68;
LABEL_51:
  if (v52 >= 1)
  {
    for (j = 0; j != v52; ++j)
    {
      if ((v34 & 0xC000000000000001) != 0)
        v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v34);
      else
        v56 = *(id *)(v34 + 8 * j + 32);
      v57 = v56;
      if (objc_msgSend(v56, "acceptanceStatus") == (id)2)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(2);
        v54 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(*(_QWORD *)&v54);
        v55 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(*(_QWORD *)&v54, v57);
        specialized ContiguousArray._endMutation()(v55);
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v3 = v0 + 72;
    v4 = (unint64_t *)(v0 + 64);
    v12 = &CTFontDescriptorCreateMatchingFontDescriptors_ptr;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_84;
LABEL_69:
    if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
    {
      v46 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
LABEL_71:
      swift_release(_swiftEmptyArrayStorage);
      goto LABEL_72;
    }
LABEL_84:
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v46 = _CocoaArrayWrapper.endIndex.getter(v117);
    swift_release(_swiftEmptyArrayStorage);
    goto LABEL_71;
  }
LABEL_86:
  __break(1u);
}

uint64_t sub_1008AABCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[27];
  v2 = v0[12];
  swift_release(v0[28]);
  sub_100DE15D0(v1, v2);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1008AAC20, 0, 0);
}

uint64_t sub_1008AAC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString v6;
  uint64_t v7;
  Class isa;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v6 = String._bridgeToObjectiveC()();
  v7 = *(_QWORD *)(v0 + 64);
  sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
  swift_bridgeObjectRetain(v7);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "sendEventInDomain:lazily:eventPayload:", v6, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLAnalyticsBoardOpened()
{
  return objc_opt_self(_TtC8Freeform23CRLAnalyticsBoardOpened);
}

uint64_t sub_1008AAD64()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 73, 7);
}

uint64_t sub_1008AAD90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  char v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(double *)(v1 + 48);
  v9 = *(double *)(v1 + 56);
  v10 = *(double *)(v1 + 64);
  v11 = *(_BYTE *)(v1 + 72);
  v12 = (_QWORD *)swift_task_alloc(dword_1013F790C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1004CF80C;
  return sub_1008A9CAC(v8, v9, v10, a1, v4, v5, v6, v7, v11);
}

uint64_t sub_1008AAE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_101405E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008AAE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101405DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_WORD *sub_1008AAECC(_WORD *a1, uint64_t *a2, uint64_t a3)
{
  _WORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_WORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    v8 = a2[4];
    *((_QWORD *)v4 + 3) = a2[3];
    *((_QWORD *)v4 + 4) = v8;
    *((_QWORD *)v4 + 5) = a2[5];
    *((_BYTE *)v4 + 48) = *((_BYTE *)a2 + 48);
    *(_OWORD *)(v4 + 26) = *(_OWORD *)((char *)a2 + 52);
    v9 = a2[9];
    v11 = a2 + 15;
    v10 = a2[15];
    v12 = a2[10];
    *((_QWORD *)v4 + 9) = v9;
    *((_QWORD *)v4 + 10) = v12;
    *((_BYTE *)v4 + 88) = *((_BYTE *)a2 + 88);
    *((_DWORD *)v4 + 23) = *((_DWORD *)a2 + 23);
    *((_QWORD *)v4 + 12) = a2[12];
    v4[52] = *((_WORD *)a2 + 52);
    v13 = a2[14];
    *((_QWORD *)v4 + 14) = v13;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v13);
    if (v10)
    {
      v14 = a2[16];
      v15 = a2[17];
      *((_QWORD *)v4 + 15) = v10;
      *((_QWORD *)v4 + 16) = v14;
      *((_QWORD *)v4 + 17) = v15;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v15);
    }
    else
    {
      *(_OWORD *)(v4 + 60) = *v11;
      *((_QWORD *)v4 + 17) = a2[17];
    }
    *((_QWORD *)v4 + 18) = a2[18];
    *((_QWORD *)v4 + 19) = a2[19];
    *((_BYTE *)v4 + 160) = *((_BYTE *)a2 + 160);
    *(_QWORD *)(v4 + 82) = *(uint64_t *)((char *)a2 + 164);
    v17 = a2[22];
    *((_QWORD *)v4 + 22) = v17;
    v18 = v4 + 92;
    v19 = a2 + 23;
    v20 = a2[25];
    swift_bridgeObjectRetain(v17);
    if (v20)
    {
      *v18 = *v19;
      *((_BYTE *)v4 + 192) = *((_BYTE *)a2 + 192);
      v21 = a2[26];
      v22 = a2[27];
      *((_QWORD *)v4 + 25) = v20;
      *((_QWORD *)v4 + 26) = v21;
      *((_QWORD *)v4 + 27) = v22;
      *((_QWORD *)v4 + 28) = a2[28];
      *((_QWORD *)v4 + 29) = a2[29];
      *((_BYTE *)v4 + 240) = *((_BYTE *)a2 + 240);
      *(_QWORD *)(v4 + 122) = *(uint64_t *)((char *)a2 + 244);
      v24 = a2[32];
      v23 = a2[33];
      *((_QWORD *)v4 + 32) = v24;
      *((_QWORD *)v4 + 33) = v23;
      *((_BYTE *)v4 + 272) = *((_BYTE *)a2 + 272);
      *(_QWORD *)(v4 + 138) = *(uint64_t *)((char *)a2 + 276);
      v25 = a2[36];
      *((_QWORD *)v4 + 36) = v25;
      *((_BYTE *)v4 + 296) = *((_BYTE *)a2 + 296);
      v26 = a2[38];
      *((_QWORD *)v4 + 38) = v26;
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v26);
    }
    else
    {
      v27 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(v4 + 124) = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(v4 + 132) = v27;
      v28 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(v4 + 140) = *(_OWORD *)(a2 + 35);
      *(_OWORD *)(v4 + 148) = v28;
      v29 = *(_OWORD *)(a2 + 25);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *(_OWORD *)(v4 + 100) = v29;
      v30 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(v4 + 108) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(v4 + 116) = v30;
    }
    v31 = type metadata accessor for CRLPathSourceData(0);
    v32 = *(int *)(v31 + 52);
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    v35 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    v36 = *((_QWORD *)v35 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
    {
      v37 = sub_1004B804C(&qword_1013F7920);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v33, v34, v38);
      v39 = v35[5];
      v40 = *(_QWORD *)&v34[v39];
      *(_QWORD *)&v33[v39] = v40;
      *(_QWORD *)&v33[v35[6]] = *(_QWORD *)&v34[v35[6]];
      v41 = v35[7];
      v42 = *(_QWORD *)&v34[v41];
      *(_QWORD *)&v33[v41] = v42;
      v43 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v36 + 56);
      swift_bridgeObjectRetain(v40);
      v44 = swift_bridgeObjectRetain(v42);
      v43(v33, 0, 1, v35, v44);
    }
    v45 = *(int *)(v31 + 56);
    v46 = *(uint64_t *)((char *)a2 + v45);
    *(_QWORD *)((char *)v4 + v45) = v46;
    v47 = *(int *)(a3 + 20);
    v48 = *(int *)(a3 + 24);
    v49 = (char *)v4 + v47;
    v50 = (uint64_t)a2 + v47;
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_DWORD *)v49 + 4) = *(_DWORD *)(v50 + 16);
    *((_DWORD *)v49 + 5) = *(_DWORD *)(v50 + 20);
    v51 = *(_QWORD *)(v50 + 24);
    *((_QWORD *)v49 + 3) = v51;
    v52 = *(uint64_t *)((char *)a2 + v48);
    *(_QWORD *)((char *)v4 + v48) = v52;
    swift_bridgeObjectRetain(v46);
    swift_bridgeObjectRetain(v51);
    swift_bridgeObjectRetain(v52);
  }
  return v4;
}

double sub_1008AB214(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v2 = a1 + *(int *)(type metadata accessor for CRLPathSourceData(0) + 52);
  v3 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1008AB340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_WORD *)a1 = *(_WORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  v8 = *(_QWORD *)(a2 + 72);
  v10 = a2 + 120;
  v9 = *(_QWORD *)(a2 + 120);
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v12);
  if (v9)
  {
    v13 = *(_QWORD *)(a2 + 128);
    v14 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 120) = v9;
    *(_QWORD *)(a1 + 128) = v13;
    *(_QWORD *)(a1 + 136) = v14;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v14);
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v10;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(v10 + 16);
  }
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 164) = *(_QWORD *)(a2 + 164);
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v15;
  v16 = (_QWORD *)(a1 + 184);
  v17 = (_QWORD *)(a2 + 184);
  v18 = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain(v15);
  if (v18)
  {
    *v16 = *v17;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v19 = *(_QWORD *)(a2 + 208);
    v20 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 200) = v18;
    *(_QWORD *)(a1 + 208) = v19;
    *(_QWORD *)(a1 + 216) = v20;
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
    v22 = *(_QWORD *)(a2 + 256);
    v21 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = v22;
    *(_QWORD *)(a1 + 264) = v21;
    *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
    *(_QWORD *)(a1 + 276) = *(_QWORD *)(a2 + 276);
    v23 = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 288) = v23;
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    v24 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v24;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
  }
  else
  {
    v25 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v25;
    v26 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v26;
    v27 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 200) = v27;
    v28 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v28;
  }
  v29 = type metadata accessor for CRLPathSourceData(0);
  v30 = *(int *)(v29 + 52);
  v31 = (char *)(a1 + v30);
  v32 = (char *)(a2 + v30);
  v33 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v34 = *((_QWORD *)v33 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_1004B804C(&qword_1013F7920);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v36 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v31, v32, v36);
    v37 = v33[5];
    v38 = *(_QWORD *)&v32[v37];
    *(_QWORD *)&v31[v37] = v38;
    *(_QWORD *)&v31[v33[6]] = *(_QWORD *)&v32[v33[6]];
    v39 = v33[7];
    v40 = *(_QWORD *)&v32[v39];
    *(_QWORD *)&v31[v39] = v40;
    v41 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v34 + 56);
    swift_bridgeObjectRetain(v38);
    v42 = swift_bridgeObjectRetain(v40);
    v41(v31, 0, 1, v33, v42);
  }
  v43 = *(int *)(v29 + 56);
  v44 = *(_QWORD *)(a2 + v43);
  *(_QWORD *)(a1 + v43) = v44;
  v45 = *(int *)(a3 + 20);
  v46 = *(int *)(a3 + 24);
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *(_DWORD *)(v47 + 16) = *(_DWORD *)(v48 + 16);
  *(_DWORD *)(v47 + 20) = *(_DWORD *)(v48 + 20);
  v49 = *(_QWORD *)(v48 + 24);
  *(_QWORD *)(v47 + 24) = v49;
  v50 = *(_QWORD *)(a2 + v46);
  *(_QWORD *)(a1 + v46) = v50;
  swift_bridgeObjectRetain(v44);
  swift_bridgeObjectRetain(v49);
  swift_bridgeObjectRetain(v50);
  return a1;
}

uint64_t sub_1008AB65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  int *v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, int *);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v10;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v11 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = (_OWORD *)(a1 + 120);
  v14 = (_OWORD *)(a2 + 120);
  v13 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 120) = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
      v15 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 136) = v15;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008ABCA8((_QWORD *)(a1 + 120));
      v17 = *(_QWORD *)(a2 + 136);
      *v12 = *v14;
      *(_QWORD *)(a1 + 136) = v17;
    }
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 120) = v13;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 136) = v16;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v16);
  }
  else
  {
    v18 = *v14;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *v12 = v18;
  }
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  v19 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)(a1 + 184);
  v21 = (uint64_t *)(a2 + 184);
  v22 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200))
  {
    if (v22)
    {
      v23 = *v21;
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *v20 = v23;
      v24 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 200) = v24;
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
      v25 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 216) = v25;
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
      v26 = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 232) = v26;
      *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      v27 = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 256) = v27;
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease();
      v28 = *(_QWORD *)(a2 + 264);
      *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = v28;
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      v29 = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 288) = v29;
      swift_bridgeObjectRetain(v29);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      v30 = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 304) = v30;
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008ABCDC((_QWORD *)(a1 + 184));
      v39 = *(_OWORD *)(a2 + 232);
      v41 = *(_OWORD *)v21;
      v40 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v39;
      *(_OWORD *)v20 = v41;
      *(_OWORD *)(a1 + 200) = v40;
      v42 = *(_OWORD *)(a2 + 296);
      v44 = *(_OWORD *)(a2 + 248);
      v43 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v42;
      *(_OWORD *)(a1 + 248) = v44;
      *(_OWORD *)(a1 + 264) = v43;
    }
  }
  else if (v22)
  {
    v31 = *v21;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *v20 = v31;
    v32 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 200) = v32;
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v33 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 216) = v33;
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    v34 = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v34;
    *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
    v35 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 256) = v35;
    v36 = *(_QWORD *)(a2 + 264);
    *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = v36;
    *(_QWORD *)(a1 + 276) = *(_QWORD *)(a2 + 276);
    v37 = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 288) = v37;
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    v38 = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 304) = v38;
    swift_bridgeObjectRetain(v32);
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v37);
    swift_bridgeObjectRetain(v38);
  }
  else
  {
    v45 = *(_OWORD *)v21;
    v46 = *(_OWORD *)(a2 + 200);
    v47 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v47;
    *(_OWORD *)v20 = v45;
    *(_OWORD *)(a1 + 200) = v46;
    v48 = *(_OWORD *)(a2 + 248);
    v49 = *(_OWORD *)(a2 + 264);
    v50 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v50;
    *(_OWORD *)(a1 + 248) = v48;
    *(_OWORD *)(a1 + 264) = v49;
  }
  v51 = type metadata accessor for CRLPathSourceData(0);
  v52 = *(int *)(v51 + 52);
  v53 = (char *)(a1 + v52);
  v54 = (char *)(a2 + v52);
  v55 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v56 = *((_QWORD *)v55 - 1);
  v57 = *(uint64_t (**)(char *, uint64_t, int *))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      v77 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 24))(v53, v54, v77);
      v78 = v55[5];
      v79 = *(_QWORD *)&v54[v78];
      *(_QWORD *)&v53[v78] = v79;
      swift_bridgeObjectRetain(v79);
      swift_bridgeObjectRelease();
      v80 = v55[6];
      v81 = &v53[v80];
      v82 = &v54[v80];
      *(_DWORD *)v81 = *(_DWORD *)v82;
      *((_DWORD *)v81 + 1) = *((_DWORD *)v82 + 1);
      v83 = v55[7];
      v84 = *(_QWORD *)&v54[v83];
      *(_QWORD *)&v53[v83] = v84;
      swift_bridgeObjectRetain(v84);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1004B84A4((uint64_t)v53, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_20;
  }
  if (v59)
  {
LABEL_20:
    v67 = sub_1004B804C(&qword_1013F7920);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_21;
  }
  v60 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v53, v54, v60);
  v61 = v55[5];
  v62 = *(_QWORD *)&v54[v61];
  *(_QWORD *)&v53[v61] = v62;
  *(_QWORD *)&v53[v55[6]] = *(_QWORD *)&v54[v55[6]];
  v63 = v55[7];
  v64 = *(_QWORD *)&v54[v63];
  *(_QWORD *)&v53[v63] = v64;
  v65 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v56 + 56);
  swift_bridgeObjectRetain(v62);
  v66 = swift_bridgeObjectRetain(v64);
  v65(v53, 0, 1, v55, v66);
LABEL_21:
  v68 = *(int *)(v51 + 56);
  v69 = *(_QWORD *)(a2 + v68);
  *(_QWORD *)(a1 + v68) = v69;
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRelease();
  v70 = *(int *)(a3 + 20);
  v71 = a1 + v70;
  v72 = a2 + v70;
  *(_DWORD *)v71 = *(_DWORD *)v72;
  *(_DWORD *)(v71 + 4) = *(_DWORD *)(v72 + 4);
  *(_DWORD *)(v71 + 8) = *(_DWORD *)(v72 + 8);
  *(_DWORD *)(v71 + 12) = *(_DWORD *)(v72 + 12);
  *(_DWORD *)(v71 + 16) = *(_DWORD *)(v72 + 16);
  *(_BYTE *)(v71 + 20) = *(_BYTE *)(v72 + 20);
  *(_BYTE *)(v71 + 21) = *(_BYTE *)(v72 + 21);
  *(_BYTE *)(v71 + 22) = *(_BYTE *)(v72 + 22);
  *(_BYTE *)(v71 + 23) = *(_BYTE *)(v72 + 23);
  v73 = *(_QWORD *)(v72 + 24);
  *(_QWORD *)(v71 + 24) = v73;
  swift_bridgeObjectRetain(v73);
  swift_bridgeObjectRelease();
  v74 = *(int *)(a3 + 24);
  v75 = *(_QWORD *)(a2 + v74);
  *(_QWORD *)(a1 + v74) = v75;
  swift_bridgeObjectRetain(v75);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1008ABCA8(_QWORD *a1)
{
  destroy for CRLStrokePatternData(a1);
  return a1;
}

_QWORD *sub_1008ABCDC(_QWORD *a1)
{
  destroy for CRLConnectionLinePathSourceData(a1);
  return a1;
}

uint64_t sub_1008ABD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  v8 = *(_OWORD *)(a2 + 296);
  v9 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(_OWORD *)(a1 + 264) = v9;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v10 = type metadata accessor for CRLPathSourceData(0);
  v11 = *(int *)(v10 + 52);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C(&qword_1013F7920);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v12, v13, v17);
    *(_QWORD *)&v12[v14[5]] = *(_QWORD *)&v13[v14[5]];
    *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
    *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  *(_QWORD *)(a1 + *(int *)(v10 + 56)) = *(_QWORD *)(a2 + *(int *)(v10 + 56));
  v18 = *(int *)(a3 + 20);
  v19 = *(int *)(a3 + 24);
  v20 = (_OWORD *)(a1 + v18);
  v21 = (_OWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_1008ABED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, int *);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 92) = *(_QWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 120) = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1008ABCA8((_QWORD *)(a1 + 120));
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
LABEL_6:
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 164) = *(_QWORD *)(a2 + 164);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(a1 + 184);
  v10 = (_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 200))
  {
    v11 = *(_QWORD *)(a2 + 200);
    if (v11)
    {
      *v9 = *v10;
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v11;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *(_QWORD *)(a1 + 244) = *(_QWORD *)(a2 + 244);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1008ABCDC((_QWORD *)(a1 + 184));
  }
  v12 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v12;
  v13 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v13;
  v14 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 200) = v14;
  v15 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v15;
LABEL_11:
  v16 = type metadata accessor for CRLPathSourceData(0);
  v17 = *(int *)(v16 + 52);
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(char *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      v31 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v18, v19, v31);
      *(_QWORD *)&v18[v20[5]] = *(_QWORD *)&v19[v20[5]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v18[v20[6]] = *(_QWORD *)&v19[v20[6]];
      *(_QWORD *)&v18[v20[7]] = *(_QWORD *)&v19[v20[7]];
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_16;
  }
  if (v24)
  {
LABEL_16:
    v26 = sub_1004B804C(&qword_1013F7920);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_17;
  }
  v25 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v18, v19, v25);
  *(_QWORD *)&v18[v20[5]] = *(_QWORD *)&v19[v20[5]];
  *(_QWORD *)&v18[v20[6]] = *(_QWORD *)&v19[v20[6]];
  *(_QWORD *)&v18[v20[7]] = *(_QWORD *)&v19[v20[7]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
LABEL_17:
  *(_QWORD *)(a1 + *(int *)(v16 + 56)) = *(_QWORD *)(a2 + *(int *)(v16 + 56));
  swift_bridgeObjectRelease();
  v27 = *(int *)(a3 + 20);
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_DWORD *)(v28 + 16) = *(_DWORD *)(v29 + 16);
  *(_BYTE *)(v28 + 20) = *(_BYTE *)(v29 + 20);
  *(_BYTE *)(v28 + 21) = *(_BYTE *)(v29 + 21);
  *(_BYTE *)(v28 + 22) = *(_BYTE *)(v29 + 22);
  *(_BYTE *)(v28 + 23) = *(_BYTE *)(v29 + 23);
  *(_QWORD *)(v28 + 24) = *(_QWORD *)(v29 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008AC2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008AC2E4);
}

uint64_t sub_1008AC2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for CRLPathSourceData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1008AC364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008AC370);
}

uint64_t sub_1008AC370(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for CRLPathSourceData(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for CRLMaskInfoData(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F7980;
  if (!qword_1013F7980)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLMaskInfoData);
  return result;
}

uint64_t sub_1008AC428(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLPathSourceData(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = " ";
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

BOOL sub_1008AC4A8(char *a1, char *a2)
{
  return qword_100F132B0[*a1] == qword_100F132B0[*a2];
}

Swift::Int sub_1008AC4CC()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F132B0[v1]);
  return Hasher._finalize()();
}

void sub_1008AC518()
{
  char *v0;

  Hasher._combine(_:)(qword_100F132B0[*v0]);
}

Swift::Int sub_1008AC54C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F132B0[v2]);
  return Hasher._finalize()();
}

void sub_1008AC594(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F132B0[*v1];
}

uint64_t sub_1008AC5AC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x797274656D6F6567;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x72756F5368746170;
}

uint64_t sub_1008AC618@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1008AD5E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008AC63C()
{
  char *v0;

  return qword_100F132B0[*v0];
}

void sub_1008AC654(_QWORD *a1@<X8>)
{
  *a1 = &off_101263BB0;
}

uint64_t sub_1008AC664(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1008AD328();
  v5 = sub_1008AD370();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1008AC6A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008AD370();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008AC6D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008AD370();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1008AC6F8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  float v24;
  double v25;
  float v26;
  double v27;
  float v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;

  v4 = type metadata accessor for CRLMaskInfoData(0);
  *(_QWORD *)(a2 + *(int *)(v4 + 24)) = _swiftEmptyDictionarySingleton;
  objc_msgSend(a1, "size");
  v7 = objc_msgSend(objc_allocWithZone((Class)CRLBezierPathSource), "initWithNaturalSize:", v5, v6);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(a1, "center");
    v10 = v9;
    v12 = v11;
    objc_msgSend(a1, "position");
    v14 = sub_1000603B8(v10, v12, v13);
    v16 = v15;
    objc_msgSend(a1, "size");
    v19 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithCenter:size:", v14, v16, v17, v18);
    v20 = v8;
    sub_10092BFC8(v20, a2);
    objc_msgSend(v19, "position");
    *(float *)&v14 = v21;
    *(float *)&v16 = v22;
    objc_msgSend(v19, "size");
    v24 = v23;
    v26 = v25;
    objc_msgSend(v19, "angle");
    v28 = v27;
    v29 = objc_msgSend(v19, "widthValid");
    v30 = objc_msgSend(v19, "heightValid");
    v31 = objc_msgSend(v19, "horizontalFlip");
    v32 = objc_msgSend(v19, "verticalFlip");

    v33 = a2 + *(int *)(v4 + 20);
    *(_DWORD *)v33 = LODWORD(v14);
    *(_DWORD *)(v33 + 4) = LODWORD(v16);
    *(float *)(v33 + 8) = v24;
    *(float *)(v33 + 12) = v26;
    *(float *)(v33 + 16) = v28;
    *(_BYTE *)(v33 + 20) = v29;
    *(_BYTE *)(v33 + 21) = v30;
    *(_BYTE *)(v33 + 22) = v31;
    *(_BYTE *)(v33 + 23) = v32;
    *(_QWORD *)(v33 + 24) = _swiftEmptyDictionarySingleton;
  }
  else
  {
    __break(1u);
  }
}

id sub_1008AC904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  float32x4_t *v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float32x4_t *v10;
  float32x4_t v12;

  v3 = *(int *)(type metadata accessor for CRLMaskInfoData(0) + 20);
  v4 = (float32x4_t *)(v1 + v3);
  v5 = *(float *)(v1 + v3 + 16);
  v6 = *(unsigned __int8 *)(v1 + v3 + 20);
  v7 = *(unsigned __int8 *)(v1 + v3 + 21);
  v8 = v4[1].u8[6];
  v9 = v4[1].u8[7];
  v10 = (float32x4_t *)(a1 + v3);
  v12 = *v4;
  if ((vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vceqq_f32(*v4, *v10))), 0xFuLL))) & 1) != 0
    || v5 != v10[1].f32[0]
    || ((v6 ^ v10[1].u8[4]) & 1) != 0
    || ((v7 ^ v10[1].u8[5]) & 1) != 0
    || ((v8 ^ v10[1].u8[6]) & 1) != 0
    || ((v9 ^ v10[1].u8[7]) & 1) != 0
    || (sub_100C9E04C(v4[1].i64[1], v10[1].i64[1]) & 1) == 0)
  {
    return objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:", v6, v7, v8, v9, v12.f32[0], v12.f32[1], v12.f32[2], v12.f32[3], v5);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1008ACA38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  char v27;
  __int128 v28;
  int v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F7A40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1008AD370();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLMaskInfoData.CodingKeys, &type metadata for CRLMaskInfoData.CodingKeys, v11, v9, v10);
  LOBYTE(v28) = 0;
  v12 = type metadata accessor for CRLPathSourceData(0);
  v13 = sub_1004B7878(&qword_1013F7A48, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F173F8);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v28, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for CRLMaskInfoData(0);
    v15 = (__int128 *)(v3 + *(int *)(v14 + 20));
    v16 = *((_DWORD *)v15 + 4);
    v17 = *((_BYTE *)v15 + 20);
    v18 = *((_BYTE *)v15 + 21);
    v19 = *((_BYTE *)v15 + 22);
    v20 = *((_BYTE *)v15 + 23);
    v21 = *((_QWORD *)v15 + 3);
    v28 = *v15;
    v29 = v16;
    v30 = v17;
    v31 = v18;
    v32 = v19;
    v33 = v20;
    v34 = v21;
    v27 = 1;
    v22 = sub_1005E3EF0();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v27, v5, &type metadata for CRLCanvasInfoGeometryData, v22);
    *(_QWORD *)&v28 = *(_QWORD *)(v3 + *(int *)(v14 + 24));
    v27 = 2;
    v23 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v24 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v28, &v27, v5, v23, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1008ACC28(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  __int128 v39;
  int v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;

  v34 = a2;
  v4 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v4);
  v35 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1004B804C(&qword_1013F7A30);
  v6 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLMaskInfoData(0);
  __chkstk_darwin(v9);
  v12 = *(int *)(v11 + 24);
  v37 = a1;
  v38 = v12;
  v13 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v13[v12] = _swiftEmptyDictionarySingleton;
  v14 = a1[3];
  v15 = a1[4];
  sub_1004BB5A4(a1, v14);
  v16 = sub_1008AD370();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLMaskInfoData.CodingKeys, &type metadata for CRLMaskInfoData.CodingKeys, v16, v14, v15);
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = v6;
    LOBYTE(v39) = 0;
    v18 = sub_1004B7878(&qword_1013F7A38, type metadata accessor for CRLPathSourceData, (uint64_t)&unk_100F17420);
    v19 = (uint64_t)v35;
    v20 = v36;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v4, &v39, v36, v4, v18);
    sub_1008AD754(v19, (uint64_t)v13);
    v46 = 1;
    v21 = sub_1005E3E2C();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for CRLCanvasInfoGeometryData, &v46, v20, &type metadata for CRLCanvasInfoGeometryData, v21);
    v22 = v40;
    v23 = v41;
    v24 = v42;
    v25 = v43;
    v26 = v44;
    v27 = v45;
    v28 = &v13[*(int *)(v9 + 20)];
    *(_OWORD *)v28 = v39;
    *((_DWORD *)v28 + 4) = v22;
    v28[20] = v23;
    v28[21] = v24;
    v28[22] = v25;
    v28[23] = v26;
    *((_QWORD *)v28 + 3) = v27;
    v29 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v46 = 2;
    v30 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v29, &v46, v20, v29, v30);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v20);
    v32 = v38;
    v31 = v39;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v13[v32] = v31;
    sub_1008AD798((uint64_t)v13, v34);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v37);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLMaskInfoData);
  }
}

void sub_1008ACF70(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1008ACC28(a1, a2);
}

uint64_t sub_1008ACF84(_QWORD *a1)
{
  return sub_1008ACA38(a1);
}

uint64_t sub_1008ACF98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F7A50, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F13188);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008ACFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878(&qword_1013F79C8, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F131C8);
  v7 = sub_1004B7878(&qword_1013F7A58, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F13160);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008AD084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F7A50, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F13188);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1008AD0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F7A20, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12FE0);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1008AD138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F7A20, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12FE0);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1008AD194(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F7A20, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12FE0);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1008AD1E4()
{
  return sub_1004B7878(&qword_1013F79C0, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12EE8);
}

uint64_t sub_1008AD210()
{
  return sub_1004B7878(&qword_1013F79C8, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F131C8);
}

uint64_t sub_1008AD23C()
{
  return sub_1004B7878(&qword_1013F79D0, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12FB8);
}

uint64_t sub_1008AD268()
{
  return sub_1004B7878(&qword_1013F79D8, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12F90);
}

unint64_t sub_1008AD298()
{
  unint64_t result;

  result = qword_1013F79E0;
  if (!qword_1013F79E0)
  {
    result = swift_getWitnessTable(&unk_100F13028, &type metadata for CRLMaskInfoData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F79E0);
  }
  return result;
}

unint64_t sub_1008AD2E0()
{
  unint64_t result;

  result = qword_1013F79E8;
  if (!qword_1013F79E8)
  {
    result = swift_getWitnessTable(&unk_100F13138, &type metadata for CRLMaskInfoData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F79E8);
  }
  return result;
}

unint64_t sub_1008AD328()
{
  unint64_t result;

  result = qword_1013F79F0;
  if (!qword_1013F79F0)
  {
    result = swift_getWitnessTable(&unk_100F13100, &type metadata for CRLMaskInfoData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F79F0);
  }
  return result;
}

unint64_t sub_1008AD370()
{
  unint64_t result;

  result = qword_1013F79F8;
  if (!qword_1013F79F8)
  {
    result = swift_getWitnessTable(&unk_100F13060, &type metadata for CRLMaskInfoData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F79F8);
  }
  return result;
}

unint64_t sub_1008AD3B8()
{
  unint64_t result;

  result = qword_1013F7A00;
  if (!qword_1013F7A00)
  {
    result = swift_getWitnessTable(&unk_100F130D8, &type metadata for CRLMaskInfoData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F7A00);
  }
  return result;
}

unint64_t sub_1008AD400()
{
  unint64_t result;

  result = qword_1013F7A08;
  if (!qword_1013F7A08)
  {
    result = swift_getWitnessTable(&unk_100F130B0, &type metadata for CRLMaskInfoData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F7A08);
  }
  return result;
}

unint64_t sub_1008AD448()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F7A10;
  if (!qword_1013F7A10)
  {
    v1 = sub_1004CB6A4(&qword_1013F7A18);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1013F7A10);
  }
  return result;
}

uint64_t sub_1008AD494()
{
  return sub_1004B7878(&qword_1013F7A20, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12FE0);
}

uint64_t sub_1008AD4C0()
{
  return sub_1004B7878(&qword_1013F7A28, type metadata accessor for CRLMaskInfoData, (uint64_t)&unk_100F12F30);
}

uint64_t sub_1008AD4EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  float32x4_t *v6;
  float v7;
  float32x4_t *v8;
  uint64_t v9;

  if ((sub_1009345F4(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for CRLMaskInfoData(0);
  v5 = *(int *)(v4 + 20);
  v6 = (float32x4_t *)&a1[v5];
  v7 = *(float *)&a1[v5 + 16];
  v8 = (float32x4_t *)&a2[v5];
  if ((vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vceqq_f32(*v6, *v8))), 0xFuLL))) & 1) != 0)
    return 0;
  if (v7 != v8[1].f32[0])
    return 0;
  if (((v6[1].u8[4] ^ v8[1].u8[4]) & 1) != 0)
    return 0;
  if (((v6[1].u8[5] ^ v8[1].u8[5]) & 1) != 0)
    return 0;
  if (((v6[1].u8[6] ^ v8[1].u8[6]) & 1) != 0)
    return 0;
  if (((v6[1].u8[7] ^ v8[1].u8[7]) & 1) != 0)
    return 0;
  v9 = v4;
  if ((sub_100C9E04C(v6[1].i64[1], v8[1].i64[1]) & 1) == 0)
    return 0;
  else
    return sub_100C9E04C(*(_QWORD *)&a1[*(int *)(v9 + 24)], *(_QWORD *)&a2[*(int *)(v9 + 24)]);
}

uint64_t sub_1008AD5E0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x72756F5368746170 && a2 == 0xEE00617461446563)
  {
    v5 = 0xEE00617461446563;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x72756F5368746170, 0xEE00617461446563, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x797274656D6F6567 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x797274656D6F6567, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1008AD754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLPathSourceData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008AD798(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLMaskInfoData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for CRLMaskInfoData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1008AD828 + 4 * byte_100F12EB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1008AD85C + 4 * byte_100F12EB0[v4]))();
}

uint64_t sub_1008AD85C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008AD864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008AD86CLL);
  return result;
}

uint64_t sub_1008AD878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008AD880);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1008AD884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008AD88C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLMaskInfoData.CodingKeys()
{
  return &type metadata for CRLMaskInfoData.CodingKeys;
}

unint64_t sub_1008AD8AC()
{
  unint64_t result;

  result = qword_1013F7A60[0];
  if (!qword_1013F7A60[0])
  {
    result = swift_getWitnessTable(&unk_100F13284, &type metadata for CRLMaskInfoData.CodingKeys);
    atomic_store(result, qword_1013F7A60);
  }
  return result;
}

uint64_t sub_1008AD8F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = sub_1004CB6A4(&qword_1013E0210);
  v4 = type metadata accessor for CheckedContinuation(255, v2, v3, &protocol self-conformance witness table for Error);
  result = type metadata accessor for Optional(319, v4);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 1, &v7, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1008AD988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v3 = sub_1004CB6A4(&qword_1013E0210);
  v4 = type metadata accessor for CheckedContinuation(255, v1, v3, &protocol self-conformance witness table for Error);
  v5 = type metadata accessor for Optional(0, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  return v0;
}

uint64_t sub_1008AD9FC()
{
  uint64_t v0;

  sub_1008AD988();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLAsyncEventObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLAsyncEventObserver);
}

uint64_t sub_1008ADA2C(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 88);
}

uint64_t type metadata accessor for CRLAsyncEventObserverQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLAsyncEventObserverQueue);
}

void sub_1008ADB60(unint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v11;
  double v12;
  CGContext *v13;
  CGContext *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  CGFloat v29;
  CGFloat v30;
  double v31;
  double v32;
  double v33;
  double v34;
  CGFloat v35;
  double v36;
  double v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43[24];
  _OWORD v44[8];
  CGRect v45;
  CGRect v46;

  v11 = v5 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter;
  swift_beginAccess(v5 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter, v43, 1, 0);
  *(_QWORD *)(v11 + 96) = a1;
  if (!a1)
  {
    v12 = sub_1008ADF9C(a2, a3, a4, a5);
    swift_beginAccess(v11, v44, 33, 0);
    *(double *)v11 = v12;
    objc_msgSend(*(id *)(v11 + 104), "setViewScale:", v12);
    *(CGFloat *)(v11 + 16) = a2;
    *(CGFloat *)(v11 + 24) = a3;
    *(CGFloat *)(v11 + 32) = a4;
    *(CGFloat *)(v11 + 40) = a5;
    *(_BYTE *)(v11 + 48) = 0;
    swift_endAccess(v44);
  }
  v13 = UIGraphicsGetCurrentContext();
  if (v13)
  {
    v14 = v13;
    v15 = *(id *)(v11 + 104);
    v16 = objc_msgSend(v15, "canvas");
    v17 = objc_msgSend(v15, "infos");
    objc_msgSend(v16, "setInfosToDisplay:", v17);

    v18 = objc_msgSend(v15, "canvas");
    objc_msgSend(v18, "nonInteractiveLayoutIfNeeded");

    v19 = objc_msgSend(v15, "canvas");
    objc_msgSend(v19, "unscaledRectOfLayouts");
    v21 = v20;
    v23 = v22;

    if (*(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes) == 1)
    {
      v24 = *(_QWORD *)(v11 + 8);
      if (!v24)
      {
LABEL_33:

        return;
      }
      if (!((unint64_t)v24 >> 62))
      {
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)(v11 + 8));
        if ((a1 & 0x8000000000000000) == 0)
        {
          while (v25 > a1)
          {
            if ((v24 & 0xC000000000000001) != 0)
              goto LABEL_29;
            if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
            {
              v27 = (char *)*(id *)(v24 + 8 * a1 + 32);
              goto LABEL_12;
            }
            __break(1u);
LABEL_31:
            v25 = v26;
            if ((a1 & 0x8000000000000000) != 0)
              break;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      if (v24 >= 0)
        v42 = v24 & 0xFFFFFFFFFFFFFF8;
      else
        v42 = *(_QWORD *)(v11 + 8);
      swift_bridgeObjectRetain(*(_QWORD *)(v11 + 8));
      v26 = _CocoaArrayWrapper.endIndex.getter(v42);
      if ((v26 & 0x8000000000000000) == 0)
        goto LABEL_31;
      __break(1u);
LABEL_29:
      v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v24);
LABEL_12:
      v28 = v27;
      swift_bridgeObjectRelease();
      v29 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
      v30 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
      v21 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
      v23 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];

      if (*(_BYTE *)(v11 + 50) == 1 && (*(_BYTE *)(v11 + 88) & 1) == 0)
      {
        sub_100062EB4(1, *(double *)(v11 + 72), *(double *)(v11 + 80), v29, v30, v21, v23);
        v21 = v31;
        v23 = v32;
      }
      v33 = 1.0;
      if ((*(_BYTE *)(v11 + 48) & 1) == 0)
      {
        v34 = *(double *)(v11 + 40) / v23;
        if (v34 >= *(double *)(v11 + 32) / v21)
          v34 = *(double *)(v11 + 32) / v21;
        v33 = floor(v34 * 100.0) / 100.0;
      }
    }
    else
    {
      v33 = *(double *)v11;
    }
    v35 = v33 * v23;
    CGContextTranslateCTM(v14, 0.0, v35);
    CGContextScaleCTM(v14, 1.0, -1.0);
    v45.origin.x = a2;
    v45.origin.y = a3;
    v45.size.width = a4;
    v45.size.height = a5;
    v36 = CGRectGetMidX(v45) - v33 * v21 * 0.5;
    v46.origin.x = a2;
    v46.origin.y = a3;
    v46.size.width = a4;
    v46.size.height = a5;
    v37 = CGRectGetMidY(v46) - v35 * 0.5;
    if (v36 != 0.0 || v37 != 0.0)
      CGContextTranslateCTM(v14, v36, -v37);
    v38 = *(_OWORD *)(v11 + 80);
    v44[4] = *(_OWORD *)(v11 + 64);
    v44[5] = v38;
    v39 = *(_OWORD *)(v11 + 112);
    v44[6] = *(_OWORD *)(v11 + 96);
    v44[7] = v39;
    v40 = *(_OWORD *)(v11 + 16);
    v44[0] = *(_OWORD *)v11;
    v44[1] = v40;
    v41 = *(_OWORD *)(v11 + 48);
    v44[2] = *(_OWORD *)(v11 + 32);
    v44[3] = v41;
    sub_1006D3DDC(v44);
    sub_10098861C((uint64_t)v14);

    sub_1006D3E20((uint64_t)v44);
  }
}

double sub_1008ADF9C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double Width;
  double Height;
  double v21;
  double v22;
  _BYTE v24[24];
  CGRect v25;
  CGRect v26;

  v9 = v4 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter;
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter, v24, 0, 0);
  v10 = *(id *)(v9 + 104);
  v11 = objc_msgSend(v10, "canvas");
  v12 = objc_msgSend(v10, "infos");
  objc_msgSend(v11, "setInfosToDisplay:", v12);

  v13 = objc_msgSend(v10, "canvas");
  objc_msgSend(v13, "nonInteractiveLayoutIfNeeded");

  v14 = objc_msgSend(v10, "canvas");
  objc_msgSend(v14, "unscaledRectOfLayouts");
  v16 = v15;
  v18 = v17;

  v25.origin.x = a1;
  v25.origin.y = a2;
  v25.size.width = a3;
  v25.size.height = a4;
  Width = CGRectGetWidth(v25);
  if (v16 <= 1.0)
    v16 = 1.0;
  v26.origin.x = a1;
  v26.origin.y = a2;
  v26.size.width = a3;
  v26.size.height = a4;
  Height = CGRectGetHeight(v26);
  if (v18 > 1.0)
    v21 = v18;
  else
    v21 = 1.0;
  v22 = Height / v21;
  if (v22 >= Width / v16)
    v22 = Width / v16;
  return fmin(floor(v22 * 100.0) / 100.0, 1.0);
}

void sub_1008AE134()
{
  char *v0;
  char *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t v11;
  char v12[24];
  CGRect v13;
  CGRect v14;

  v1 = &v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  v2 = swift_beginAccess(&v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter], v12, 0, 0).n128_u64[0];
  v3 = *((_QWORD *)v1 + 1);
  if (!v3)
    goto LABEL_18;
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*((_QWORD *)v1 + 1));
    if (v4)
      goto LABEL_4;
LABEL_17:
    v2 = swift_bridgeObjectRelease(v3).n128_u64[0];
    goto LABEL_18;
  }
  if (v3 >= 0)
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  else
    v11 = *((_QWORD *)v1 + 1);
  swift_bridgeObjectRetain(*((_QWORD *)v1 + 1));
  if (!_CocoaArrayWrapper.endIndex.getter(v11))
    goto LABEL_17;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v5 = (char *)*(id *)(v3 + 32);
  }
  v6 = v5;
  swift_bridgeObjectRelease(v3);
  v7 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
  v8 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
  v9 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
  v10 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];

  objc_msgSend(v0, "paperRect");
  v14.origin.x = 0.0;
  v14.origin.y = 0.0;
  v14.size.width = 0.0;
  v14.size.height = 0.0;
  if (!CGRectEqualToRect(v13, v14))
    objc_msgSend(v0, "paperRect");
  if (v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize] == 1)
  {
    if ((v1[88] & 1) == 0)
    {
      sub_100062EB4(1, *((double *)v1 + 9), *((double *)v1 + 10), v7, v8, v9, v10);
      return;
    }
LABEL_18:
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printInfo], "orientation", *(double *)&v2);
  }
}

id sub_1008AE300()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPrintPageRenderer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSPrintPageRenderer()
{
  return objc_opt_self(_TtC8Freeform23CRLiOSPrintPageRenderer);
}

_BYTE *sub_1008AE3B8(_OWORD *a1, void *a2)
{
  _BYTE *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE *v12;
  id v13;
  _BYTE *v14;
  char *v15;
  char v17[24];
  objc_super v18;

  v4 = a1;
  *(_OWORD *)&v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_defaultPaperSize] = xmmword_100F13370;
  v5 = OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes;
  v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes] = 0;
  v6 = OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize;
  v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize] = 1;
  v7 = &v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  v8 = a1[5];
  v7[4] = a1[4];
  v7[5] = v8;
  v9 = a1[7];
  v7[6] = a1[6];
  v7[7] = v9;
  v10 = a1[1];
  *v7 = *a1;
  v7[1] = v10;
  v11 = a1[3];
  v7[2] = a1[2];
  v7[3] = v11;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printInfo] = a2;
  v12 = v2;
  sub_1006D3DDC(v4);
  v13 = a2;
  v2[v5] = sub_1006D2DB8() & 1;
  v2[v6] = sub_1006D2F14() & 1;

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for CRLiOSPrintPageRenderer();
  v14 = objc_msgSendSuper2(&v18, "init");
  LOBYTE(v4) = v14[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes];
  v15 = &v14[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  swift_beginAccess(&v14[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter], v17, 1, 0);
  v15[49] = (char)v4;
  v15[50] = v14[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize];
  return v14;
}

id sub_1008AE4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  id result;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void *v22;
  void (*v23)(char *, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  Class v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  result = (id)NSNotFound.getter(v17);
  if (v16 == result || a1 == 0)
    return objc_msgSend(objc_allocWithZone(ObjectType), "init:caretAffinity:", v16, 0);
  v43 = (uint64_t)v16;
  v39 = ObjectType;
  v40 = a1;
  v41 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  v42 = a2;
  v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v20)
  {
    __break(1u);
    goto LABEL_16;
  }
  (*(void (**)(void))(*(_QWORD *)v20 + 760))();
  sub_1004D29BC((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v15);
  sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
  v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v21(v9, v15, v6);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPStorageCRDTData);
  v22 = (void *)CRAttributedString.attributedString.getter(v6);
  v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v23(v9, v6);
  v24 = objc_msgSend(v22, "length");

  result = 0;
  v25 = v43;
  if ((v43 & 0x8000000000000000) == 0 && (uint64_t)v24 >= v43)
  {
    v26 = *(_QWORD *)(v42 + v41);
    if (v26)
    {
      (*(void (**)(_QWORD))(*(_QWORD *)v26 + 760))(0);
      sub_1004D29BC((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v15);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
      v21(v9, v15, v6);
      sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLWPStorageCRDTData);
      v27 = (void *)CRAttributedString.attributedString.getter(v6);
      v23(v9, v6);
      v28 = objc_msgSend(v27, "string");

      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

      v44 = v29;
      v45 = v31;
      v32 = sub_1004D292C();
      v33 = swift_bridgeObjectRetain(v31);
      v34 = String.Index.init<A>(utf16Offset:in:)(v25, &v44, &type metadata for String, v32, v33);
      v35 = String.UTF16View.index(_:offsetBy:limitedBy:)(v34);
      if ((v36 & 1) != 0)
      {
        swift_bridgeObjectRelease(v31);
        return 0;
      }
      else
      {
        v44 = v29;
        v45 = v31;
        v37 = String.Index.utf16Offset<A>(in:)(&v44, v35, &type metadata for String, v32);
        swift_bridgeObjectRelease(v31);
        return objc_msgSend(objc_allocWithZone(v39), "init:caretAffinity:", v37, 0);
      }
    }
LABEL_16:
    __break(1u);
  }
  return result;
}

id sub_1008AE860(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, "init");
}

uint64_t sub_1008AEAE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  _BOOL4 v4;
  uint64_t v5;
  char *v7;
  _BYTE v8[24];
  uint64_t v9;

  ObjectType = swift_getObjectType(v1);
  sub_1004F370C(a1, (uint64_t)v8);
  if (v9)
  {
    if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) != 0)
    {
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) == *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location])
      {
        v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity) != 1;
        v5 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];

        return v4 ^ (v5 == 1);
      }

    }
  }
  else
  {
    sub_1004D28EC((uint64_t)v8);
  }
  return 0;
}

uint64_t sub_1008AEC7C()
{
  char *v0;
  objc_class *ObjectType;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Swift::String v13;
  objc_super v15;
  uint64_t v16;
  unint64_t v17;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v16 = 0;
  v17 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  v15.receiver = v0;
  v15.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v15, "description");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;
  swift_bridgeObjectRelease(0xE000000000000000);

  v16 = v3;
  v17 = v5;
  v6._countAndFlagsBits = 0x7461636F6C207B20;
  v6._object = (void *)0xED0000203A6E6F69;
  String.append(_:)(v6);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 0x6666416C6F65202CLL;
  v9._object = (void *)0xEF203A7974696E69;
  String.append(_:)(v9);
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] == 1)
    v10 = 1702195828;
  else
    v10 = 0x65736C6166;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] == 1)
    v11 = 0xE400000000000000;
  else
    v11 = 0xE500000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 8200236;
  v13._object = (void *)0xE300000000000000;
  String.append(_:)(v13);
  return v16;
}

uint64_t type metadata accessor for CRLTextPosition()
{
  return objc_opt_self(_TtC8Freeform15CRLTextPosition);
}

unint64_t sub_1008AEED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F7C60;
  if (!qword_1013F7C60)
  {
    v1 = type metadata accessor for CRLTextPosition();
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013F7C60);
  }
  return result;
}

BOOL sub_1008AEF18(_QWORD *a1, _QWORD *a2)
{
  return *(_QWORD *)(*a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) < *(_QWORD *)(*a2
                                                                                            + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

BOOL sub_1008AEF3C(_QWORD *a1, _QWORD *a2)
{
  return *(_QWORD *)(*a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) >= *(_QWORD *)(*a1
                                                                                             + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

BOOL sub_1008AEF60(_QWORD *a1, _QWORD *a2)
{
  return *(_QWORD *)(*a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) >= *(_QWORD *)(*a2
                                                                                             + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

BOOL sub_1008AEF84(_QWORD *a1, _QWORD *a2)
{
  return *(_QWORD *)(*a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) < *(_QWORD *)(*a1
                                                                                            + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

uint64_t sub_1008AEFA8(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  ObjectType = swift_getObjectType(a2);
  v5 = swift_dynamicCastClass(a1, ObjectType);
  if (!v5)
    return 1;
  v6 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  if (v7 < v6)
    return 1;
  if (v6 >= v7)
    return 0;
  return -1;
}

uint64_t sub_1008AF008(uint64_t a1, uint64_t a2)
{
  return a1 + a2;
}

uint64_t sub_1008AF010(uint64_t a1, void *a2)
{
  uint64_t ObjectType;
  id v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v11;
  _BYTE v12[24];
  uint64_t v13;
  _QWORD v14[4];

  ObjectType = swift_getObjectType(a2);
  v14[3] = ObjectType;
  v14[0] = a2;
  sub_1004F370C((uint64_t)v14, (uint64_t)v12);
  if (!v13)
  {
    v9 = a2;
    sub_1004D28EC((uint64_t)v12);
    goto LABEL_7;
  }
  v5 = a2;
  if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) == 0)
  {
LABEL_7:
    v8 = 0;
    goto LABEL_8;
  }
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) != *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location])
  {

    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity) != 1;
  v7 = *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];

  v8 = v6 ^ (v7 == 1);
LABEL_8:
  sub_1004D28EC((uint64_t)v14);
  return v8;
}

uint64_t sub_1008AF0FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(uint64_t, char *, uint64_t);
  void (*v55)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD v72[2];
  uint64_t v73;
  char *v74;

  v64 = a3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v63 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v67 = (char *)&v58 - v8;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v9);
  v65 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v71 = (uint64_t)&v58 - v12;
  v13 = type metadata accessor for CRLProto_Data(0);
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  __chkstk_darwin(v13);
  v66 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v68 = (uint64_t *)((char *)&v58 - v16);
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD **)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v58 - v23;
  v25 = type metadata accessor for BinaryDecodingOptions(0, v22);
  __chkstk_darwin(v25);
  v27 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = 0;
  memset(v72, 0, sizeof(v72));
  v31 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v31);
  v32 = sub_1008AFC74();
  v33 = v74;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, v72, 0, v27, v28, v32);
  if (v33)
    return sub_1004BBBC8(a1, a2);
  v59 = v20;
  v60 = v17;
  v61 = 0;
  v35 = v18;
  v74 = v24;
  v36 = v71;
  sub_1004CB7BC((uint64_t)&v30[*(int *)(v28 + 20)], v71, (uint64_t *)&unk_1013E16F0);
  v37 = v70;
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v39 = v38(v36, 1, v70);
  v62 = v30;
  v40 = v68;
  if ((_DWORD)v39 == 1)
  {
    *(_OWORD *)v68 = xmmword_100EF78C0;
    UnknownStorage.init()(v39);
    sub_1004CB800(v36, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_100552FCC(v36, (uint64_t)v68);
  }
  v41 = v35;
  v42 = *v40;
  v43 = v40[1];
  sub_1004BE310(*v40, v43);
  sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLProto_Data);
  v44 = v61;
  UUID.init(crl_data:)(v42, v43);
  if (v44)
  {
    sub_1004BBBC8(a1, a2);
    return sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLProto_StartOrEndFollow);
  }
  else
  {
    v45 = (uint64_t)&v62[*(int *)(v28 + 24)];
    v46 = v65;
    sub_1004CB7BC(v45, v65, (uint64_t *)&unk_1013E16F0);
    v47 = v38(v46, 1, v37);
    v48 = v66;
    if ((_DWORD)v47 == 1)
    {
      *(_OWORD *)v66 = xmmword_100EF78C0;
      UnknownStorage.init()(v47);
      sub_1004CB800(v46, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_100552FCC(v46, (uint64_t)v66);
    }
    v49 = (uint64_t)v67;
    v50 = *v48;
    v51 = v48[1];
    sub_1004BE310(*v48, v51);
    sub_1004B84A4((uint64_t)v48, type metadata accessor for CRLProto_Data);
    v52 = v59;
    UUID.init(crl_data:)(v50, v51);
    v53 = v60;
    v61 = 0;
    v54 = (void (*)(uint64_t, char *, uint64_t))v41[2];
    v54(v49, v74, v60);
    v55 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41[7];
    v55(v49, 0, 1, v53);
    v56 = (uint64_t)v63;
    v54((uint64_t)v63, v52, v53);
    v55(v56, 0, 1, v53);
    sub_1008AF608(v49, v56, v64);
    sub_1004BBBC8(a1, a2);
    v57 = (void (*)(char *, uint64_t))v41[1];
    v57(v52, v53);
    v57(v74, v53);
    return sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLProto_StartOrEndFollow);
  }
}

uint64_t sub_1008AF608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  unint64_t v20;
  _BYTE *v21;
  __n128 v22;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v26 = a3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v26 - v16;
  v27 = a1;
  sub_1004CB7BC(a1, (uint64_t)v10, (uint64_t *)&unk_1013E1A50);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v18(v10, 1, v11) == 1)
  {
    v8 = v10;
LABEL_5:
    sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E1A50);
    v20 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v20, 0, 0);
    *v21 = 0;
    swift_willThrow(v22);
    sub_1004CB800(a2, (uint64_t *)&unk_1013E1A50);
    return sub_1004CB800(v27, (uint64_t *)&unk_1013E1A50);
  }
  v19 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v19(v17, v10, v11);
  sub_1004CB7BC(a2, (uint64_t)v8, (uint64_t *)&unk_1013E1A50);
  if (v18(v8, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    goto LABEL_5;
  }
  sub_1004CB800(a2, (uint64_t *)&unk_1013E1A50);
  sub_1004CB800(v27, (uint64_t *)&unk_1013E1A50);
  v19(v15, v8, v11);
  v24 = v26;
  v19(v26, v17, v11);
  v25 = type metadata accessor for CRLStartOrEndFollow(0);
  return ((uint64_t (*)(char *, char *, uint64_t))v19)(&v24[*(int *)(v25 + 20)], v15, v11);
}

uint64_t sub_1008AF84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __int128 v45;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v1 = __chkstk_darwin(v0);
  v44 = (uint64_t)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v39 = (uint64_t)&v38 - v3;
  v4 = type metadata accessor for CRLProto_Data(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v38 - v10;
  __chkstk_darwin(v9);
  v13 = (__int128 *)((char *)&v38 - v12);
  v14 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  UnknownStorage.init()(v15);
  v18 = (uint64_t)&v17[*(int *)(v14 + 20)];
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v19(v18, 1, 1, v4);
  v42 = v14;
  v43 = v17;
  v20 = (uint64_t)&v17[*(int *)(v14 + 24)];
  v21 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v20, 1, 1, v4);
  v45 = xmmword_100EF78C0;
  *v13 = xmmword_100EF78C0;
  UnknownStorage.init()(v21);
  sub_1004CB800(v18, (uint64_t *)&unk_1013E16F0);
  sub_100552FCC((uint64_t)v13, v18);
  v41 = v19;
  v19(v18, 0, 1, v4);
  v38 = UUID.crl_data()();
  v23 = v22;
  v24 = v39;
  sub_1004CB7BC(v18, v39, (uint64_t *)&unk_1013E16F0);
  v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v25 = v40(v24, 1, v4);
  if ((_DWORD)v25 == 1)
  {
    *(_OWORD *)v11 = v45;
    UnknownStorage.init()(v25);
    sub_1004CB800(v24, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_100552FCC(v24, (uint64_t)v11);
  }
  sub_1004BBBC8(*(_QWORD *)v11, *((_QWORD *)v11 + 1));
  *(_QWORD *)v11 = v38;
  *((_QWORD *)v11 + 1) = v23;
  sub_1004CB800(v18, (uint64_t *)&unk_1013E16F0);
  sub_100552FCC((uint64_t)v11, v18);
  v26 = v18;
  v27 = v41;
  v28 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41)(v26, 0, 1, v4);
  *v13 = v45;
  UnknownStorage.init()(v28);
  sub_1004CB800(v20, (uint64_t *)&unk_1013E16F0);
  sub_100552FCC((uint64_t)v13, v20);
  v27(v20, 0, 1, v4);
  type metadata accessor for CRLStartOrEndFollow(0);
  v29 = UUID.crl_data()();
  v31 = v30;
  v32 = v44;
  sub_1004CB7BC(v20, v44, (uint64_t *)&unk_1013E16F0);
  v33 = v40(v32, 1, v4);
  if ((_DWORD)v33 == 1)
  {
    *(_OWORD *)v8 = v45;
    UnknownStorage.init()(v33);
    sub_1004CB800(v32, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_100552FCC(v32, (uint64_t)v8);
  }
  sub_1004BBBC8(*(_QWORD *)v8, *((_QWORD *)v8 + 1));
  *(_QWORD *)v8 = v29;
  *((_QWORD *)v8 + 1) = v31;
  sub_1004CB800(v20, (uint64_t *)&unk_1013E16F0);
  sub_100552FCC((uint64_t)v8, v20);
  v27(v20, 0, 1, v4);
  v34 = sub_1008AFC74();
  v35 = (uint64_t)v43;
  v36 = Message.serializedData(partial:)(0, v42, v34);
  sub_1004B84A4(v35, type metadata accessor for CRLProto_StartOrEndFollow);
  return v36;
}

uint64_t type metadata accessor for CRLStartOrEndFollow(uint64_t a1)
{
  uint64_t result;

  result = qword_1013F7CC8;
  if (!qword_1013F7CC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLStartOrEndFollow);
  return result;
}

unint64_t sub_1008AFC74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F7C68;
  if (!qword_1013F7C68)
  {
    v1 = type metadata accessor for CRLProto_StartOrEndFollow(255);
    result = swift_getWitnessTable(&unk_100F248E8, v1);
    atomic_store(result, (unint64_t *)&qword_1013F7C68);
  }
  return result;
}

uint64_t *sub_1008AFCBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_1008AFD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = type metadata accessor for UUID(0);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_1008AFDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1008AFE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1008AFEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1008AFF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UUID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_1008AFF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008AFF8C);
}

uint64_t sub_1008AFF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1008AFFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008AFFD4);
}

uint64_t sub_1008AFFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1008B0014(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1008B007C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[7] = v0;
  v2 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  v1[8] = v2;
  v1[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[10] = v3;
  v1[11] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[12] = v4;
  v1[13] = v5;
  return swift_task_switch(sub_1008B0110, v4, v5);
}

uint64_t sub_1008B0110(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = static MainActor.shared.getter(a1);
  v1[14] = v2;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v1[15] = v3;
  v4 = sub_1004B8930(0, &qword_1013F8180, NSXPCConnection_ptr);
  *v3 = v1;
  v3[1] = sub_1008B01C8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 5, v2, &protocol witness table for MainActor, 0xD000000000000016, 0x8000000100FDC2B0, sub_1008B4374, v1[7], v4);
}

uint64_t sub_1008B01C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[12];
    v5 = v2[13];
    v6 = sub_1008B0474;
  }
  else
  {
    swift_release(v2[14]);
    v4 = v2[12];
    v5 = v2[13];
    v6 = sub_1008B0234;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1008B0234()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t Strong;
  unint64_t v15;
  _OWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)&v2 = swift_release(*(_QWORD *)(v0 + 88)).n128_u64[0];
  v3 = *(void **)(v0 + 40);
  objc_msgSend(v3, "resume", v2);
  if (*(_BYTE *)(v1 + 40) != 2)
  {
    v15 = sub_1006DCA18();
    swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v15, 0, 0);
    *v16 = xmmword_100F02070;
    swift_willThrow((__n128)xmmword_100F02070);

    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v8 = v4
     + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
  swift_beginAccess(v4+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState, v0 + 16, 0, 0);
  sub_1008B437C(v8, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      swift_retain(v4);
      Strong = sub_1008B43C0(v20);
      goto LABEL_11;
    }
    v10 = *(uint64_t **)(v0 + 72);
    v11 = *v10;
    v12 = (char *)v10 + *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
    swift_retain(v4);
    Strong = sub_1008B43C0(v13);
    Task.cancel()();
    swift_release(v11);
  }
  else
  {
    sub_1008B45F4(*(_QWORD *)(v0 + 72), v0 + 48);
    Strong = swift_weakLoadStrong(v0 + 48);
    swift_retain(v4);
    if (!Strong)
      Strong = sub_1008B43C0(v4);
    v18 = *(_QWORD *)(v0 + 72);
    v12 = (char *)(v18 + *(int *)(sub_1004B804C(&qword_1013F8018) + 48));
    sub_1004CB800(v0 + 48, &qword_1013F8188);
  }
  v19 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v12, v19);
LABEL_11:
  v21 = *(_QWORD *)(v0 + 72);
  sub_1008B34FC(v4, v5, 2);
  v22 = type metadata accessor for CRLUSDRenderingExtensionConnector.APIEndpointProxy();
  v23 = swift_allocObject(v22, 32, 7);
  *(_QWORD *)(v23 + 16) = v3;
  *(_QWORD *)(v23 + 24) = Strong;
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v23);
}

uint64_t sub_1008B0474()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B04BC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 == 2)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v2 = *(_QWORD *)(v0 + 32);
    swift_retain(v3);
    _AppExtensionProcess.invalidate()();
    sub_1008B34FC(v3, v2, 2);
    LOBYTE(v1) = *(_BYTE *)(v0 + 40);
  }
  sub_1008B34FC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
  return swift_deallocClassInstance(v0, 41, 7);
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector()
{
  return objc_opt_self(_TtC8Freeform33CRLUSDRenderingExtensionConnector);
}

double sub_1008B0550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v4 = sub_1004B804C(&qword_1013F81B8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for MainActor(0);
  swift_retain(a2);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 40) & ~v14;
  v16 = (char *)swift_allocObject(&unk_101285038, v15 + v6, v14 | 7);
  *((_QWORD *)v16 + 2) = v13;
  *((_QWORD *)v16 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v7, v4);
  v17 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013F81C8, (uint64_t)v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_1008B06B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[8] = a4;
  v5[9] = a5;
  v6 = sub_1004B804C(&qword_1013F81B8);
  v5[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[11] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v8);
  v5[13] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v5[14] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[15] = v10;
  v5[16] = v11;
  return swift_task_switch(sub_1008B075C, v10, v11);
}

void sub_1008B075C()
{
  __asm { BR              X10 }
}

uint64_t sub_1008B07AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v5 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 72);
  swift_retain(v0);
  swift_bridgeObjectRetain(v2);
  v9 = swift_release(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16))(v5, v8, v6, v9);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100D11614(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v11 = *(_QWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v2 + 24);
  if (v11 >= v10 >> 1)
    v2 = sub_100D11614(v10 > 1, v11 + 1, 1, v2);
  v12 = *(_QWORD *)(v1 + 104);
  v13 = *(_QWORD *)(v1 + 80);
  v14 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v2 + 16) = v11 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v2+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v11, v12, v13);
  v15 = *(_QWORD *)(v3 + 24);
  v16 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v3 + 32) = v2;
  v17 = *(_BYTE *)(v3 + 40);
  *(_BYTE *)(v3 + 40) = 0;
  sub_1008B34FC(v15, v16, v17);
  v18 = *(_QWORD *)(v1 + 96);
  swift_task_dealloc(*(_QWORD *)(v1 + 104));
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1008B0A74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1008B0B14;
  else
    v4 = sub_1008B0AD4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_1008B0AD4()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1008B0B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 112));
  v3 = *(_QWORD *)(v1 + 24);
  v2 = *(_QWORD *)(v1 + 32);
  v4 = *(unsigned __int8 *)(v1 + 40);
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 3;
  sub_1008B34A8(v3, v2, v4);
  sub_1008B34FC(v3, v2, v4);
  __asm { BR              X9 }
}

uint64_t sub_1008B0B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v0 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(v2 + 88);
    v6 = v0 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain_n(v0, 2);
    do
    {
      v8 = *(_QWORD *)(v2 + 144);
      v9 = *(_QWORD *)(v2 + 80);
      *(_QWORD *)(v2 + 48) = v8;
      swift_errorRetain(v8);
      CheckedContinuation.resume(throwing:)(v3, v9);
      v6 += v7;
      --v4;
    }
    while (v4);
    v10 = *(_QWORD *)(v2 + 144);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)(v2 + 144);
    swift_bridgeObjectRetain(v0);
  }
  swift_errorRelease(v10);
  sub_1008B34FC(v1, v0, 0);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v2 + 96);
  swift_task_dealloc(*(_QWORD *)(v2 + 104));
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1008B0D64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_1004B804C(&qword_1013F81B8);
  v2[21] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[22] = v4;
  v2[23] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _AppExtensionProcess(0);
  v2[24] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[25] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v7);
  v2[27] = swift_task_alloc(v7);
  v8 = type metadata accessor for _AppExtensionProcess.Configuration(0);
  v2[28] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[29] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[30] = swift_task_alloc(v10);
  v2[31] = swift_task_alloc(v10);
  v11 = type metadata accessor for _AppExtensionIdentity(0);
  v2[32] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[33] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[34] = swift_task_alloc(v13);
  v2[35] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v2[36] = v14;
  v2[37] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v2[38] = v15;
  v2[39] = v16;
  return swift_task_switch(sub_1008B0EDC, v15, v16);
}

uint64_t sub_1008B0EDC()
{
  uint64_t v0;
  uint64_t v1;
  CKRecordID v2;
  Swift::String v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 160);
  if (*(_BYTE *)(v1 + 40) == 3 && *(_OWORD *)(v1 + 24) == 0)
  {
    v5 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v7 = *(_QWORD *)(v0 + 152);
    v8 = sub_1006D40D4();
    *(_QWORD *)(v0 + 320) = v8;
    v9 = sub_1004B804C(&qword_1013F81D8);
    v10 = *(_QWORD *)(v6 + 72);
    *(_QWORD *)(v0 + 328) = v10;
    LODWORD(v11) = *(_DWORD *)(v6 + 80);
    *(_DWORD *)(v0 + 416) = v11;
    v11 = v11;
    v12 = (v11 + 32) & ~v11;
    v13 = swift_allocObject(v9, v12 + v10, v11 | 7);
    *(_OWORD *)(v13 + 16) = xmmword_100EF5E40;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    *(_QWORD *)(v0 + 336) = v14;
    v14(v13 + v12, v7, v5);
    v15 = *(_QWORD *)(v1 + 24);
    v16 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = v8;
    *(_QWORD *)(v1 + 32) = v13;
    LOBYTE(v13) = *(_BYTE *)(v1 + 40);
    *(_BYTE *)(v1 + 40) = 0;
    swift_retain(v8);
    sub_1008B34FC(v15, v16, v13);
    v17 = (_QWORD *)swift_task_alloc(async function pointer to Task.value.getter[1]);
    *(_QWORD *)(v0 + 344) = v17;
    v18 = sub_1004B804C(&qword_1013E0210);
    *v17 = v0;
    v17[1] = sub_1008B1150;
    return Task.value.getter(*(_QWORD *)(v0 + 280), v8, *(_QWORD *)(v0 + 256), v18, &protocol self-conformance witness table for Error);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 296));
    sub_100757E04(&_mh_execute_header, (uint64_t)"doConnect(awaitingTask:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 243, "Can only connect when in .disconnected state.", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can only connect when in .disconnected state.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"doConnect(awaitingTask:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2u, 243, (uint64_t)"Can only connect when in .disconnected state.", 45, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v2, v3);
    return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  }
}

uint64_t sub_1008B1150()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 344);
  *(_QWORD *)(*v1 + 352) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1008B2314;
  else
    v4 = sub_1008B11FC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 304), *(_QWORD *)(v2 + 312));
}

uint64_t sub_1008B11FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  _QWORD *v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  if (v3)
  {
    v4 = *(_QWORD *)(v0 + 320);
    v5 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v1 + 24);
    sub_1008B34A8(v9, v2, v3);
    swift_release(v5);
    swift_release(v4);
    v10 = sub_1008B34FC(v9, v2, v3);
    (*(void (**)(uint64_t, uint64_t, double))(v8 + 8))(v6, v7, v10);
    v11 = *(_QWORD *)(v0 + 272);
    v13 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 280));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 272);
    v18 = *(_QWORD *)(v0 + 280);
    v20 = *(_QWORD *)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 248);
    v32 = *(_QWORD *)(v0 + 240);
    v22 = *(_QWORD *)(v0 + 224);
    v23 = *(_QWORD *)(v0 + 232);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 264) + 16);
    v25 = swift_bridgeObjectRetain(v2);
    v24(v19, v18, v20, v25);
    v26 = swift_allocObject(&unk_101285060, 24, 7);
    swift_weakInit(v26 + 16, v1);
    _AppExtensionProcess.Configuration.init(appExtension:onInterruption:)(v19, sub_1008B5F80, v26);
    v27 = *(_QWORD *)(v1 + 24);
    v28 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = v2;
    *(_QWORD *)(v1 + 32) = 0;
    v29 = *(_BYTE *)(v1 + 40);
    *(_BYTE *)(v1 + 40) = 1;
    v30 = sub_1008B34FC(v27, v28, v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v23 + 16))(v32, v21, v22, v30);
    v31 = (_QWORD *)swift_task_alloc(async function pointer to _AppExtensionProcess.init(configuration:)[1]);
    *(_QWORD *)(v0 + 360) = v31;
    *v31 = v0;
    v31[1] = sub_1008B141C;
    return _AppExtensionProcess.init(configuration:)(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 240));
  }
}

uint64_t sub_1008B141C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 360);
  *(_QWORD *)(*v1 + 368) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1008B23DC;
  else
    v4 = sub_1008B14C8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 304), *(_QWORD *)(v2 + 312));
}

uint64_t sub_1008B14C8()
{
  uint64_t v0;
  NSXPCConnection v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class isa;
  uint64_t v20;
  objc_class *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v1.super.isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
  *(NSXPCConnection *)(v0 + 376) = v1;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 320);
    v4 = *(_QWORD *)(v0 + 264);
    v27 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD *)(v0 + 280);
    v5 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 200);
    swift_release(*(_QWORD *)(v0 + 296));
    v11 = swift_release(v3);
    (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v8, v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v28, v27);
    v12 = *(_QWORD *)(v0 + 272);
    v14 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 208);
    v15 = *(_QWORD *)(v0 + 216);
    v17 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 280));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    isa = v1.super.isa;
    if (qword_1013DCF68 != -1)
      swift_once(&qword_1013DCF68, sub_1006D5AA4);
    -[objc_class setRemoteObjectInterface:](isa, "setRemoteObjectInterface:", qword_10147F260);
    -[objc_class resume](isa, "resume");
    v20 = type metadata accessor for AnyCancellable(0);
    swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
    v21 = isa;
    v22 = AnyCancellable.init(_:)(SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    v23 = type metadata accessor for CRLUSDRenderingExtensionConnector.APIEndpointProxy();
    inited = swift_initStackObject(v23, v0 + 64);
    *(_QWORD *)(v0 + 384) = inited;
    *(_QWORD *)(inited + 16) = v21;
    *(_QWORD *)(inited + 24) = v22;
    *(_QWORD *)(v0 + 392) = static MainActor.shared.getter(inited);
    v25 = dword_1013EB000;
    v26 = (_QWORD *)swift_task_alloc(unk_1013EB004);
    *(_QWORD *)(v0 + 400) = v26;
    *v26 = v0;
    v26[1] = sub_1008B1738;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1013EB000 + v25))(0xD000000000000017, 0x8000000100FDC670, (uint64_t)sub_1008B36EC, 0);
  }
}

uint64_t sub_1008B1738(int a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 400);
  *(_QWORD *)(*v2 + 408) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 288);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_1008B182C;
  }
  else
  {
    *(_DWORD *)(v4 + 420) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_1008B19E4;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_1008B182C()
{
  _QWORD *v0;

  swift_release(v0[49]);
  return swift_task_switch(sub_1008B1890, v0[38], v0[39]);
}

uint64_t sub_1008B1890()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(void **)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 320);
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 248);
  v19 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 296));
  swift_setDeallocating(v1);
  v9 = *(void **)(v1 + 16);
  objc_msgSend(v9, "invalidate");

  swift_release(*(_QWORD *)(v1 + 24));
  v10 = swift_release(v3);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v6, v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v5);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  v11 = *(_QWORD *)(v0 + 272);
  v13 = *(_QWORD *)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 248);
  v15 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B19E4()
{
  _QWORD *v0;

  swift_release(v0[49]);
  return swift_task_switch(sub_1008B1A48, v0[38], v0[39]);
}

uint64_t sub_1008B1A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  NSString v14;
  Class isa;
  id v16;
  uint64_t v17;
  void *v18;
  unsigned int v19;
  void *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSXPCConnection *v35;
  unint64_t v36;
  void (*v37)(uint64_t, unint64_t, uint64_t, __n128);
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  NSXPCConnection v41;
  NSXPCConnection v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  __n128 v54;
  void *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(void);
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  Class v73;
  void (*v74)(_QWORD, _QWORD);
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t i;
  NSXPCConnection v93;
  NSXPCConnection v94;
  uint64_t v95;
  Class v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v1 = *(unsigned int *)(v0 + 420);
  v2 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 296));
  v3 = objc_msgSend((id)objc_opt_self(RBSTarget), "targetWithPid:", v1);
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v4, v5);

  v7 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v8 = swift_allocObject(v7, 72, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v8 + 56) = &type metadata for Int32;
  *(_QWORD *)(v8 + 64) = &protocol witness table for Int32;
  *(_DWORD *)(v8 + 32) = v1;
  String.init(format:_:)(0xD00000000000002BLL, 0x8000000100FDC690, v8);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v10 + 32) = v6;
  specialized Array._endMutation()(v10);
  v11 = objc_allocWithZone((Class)RBSAssertion);
  v12 = v3;
  v13 = v6;
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1004B8930(0, (unint64_t *)&unk_1013F81E0, RBSAttribute_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v16 = objc_msgSend(v11, "initWithExplanation:target:attributes:", v14, v12, isa, swift_bridgeObjectRelease().n128_f64[0]);

  v17 = swift_allocObject(&unk_101285060, 24, 7);
  swift_weakInit(v17 + 16, v2);
  *(_QWORD *)(v0 + 48) = sub_1008B5F88;
  *(_QWORD *)(v0 + 56) = v17;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = *(_QWORD *)"";
  *(_QWORD *)(v0 + 32) = sub_1008B2AB4;
  *(_QWORD *)(v0 + 40) = &unk_101285078;
  v18 = _Block_copy((const void *)(v0 + 16));
  objc_msgSend(v16, "setInvalidationHandler:", v18, swift_release(*(_QWORD *)(v0 + 56)).n128_f64[0]);
  _Block_release(v18);
  *(_QWORD *)(v0 + 128) = 0;
  v19 = objc_msgSend(v16, "acquireWithError:", v0 + 128);
  v20 = *(void **)(v0 + 128);
  if (v19)
  {
    v21 = *(_QWORD *)(v0 + 160);
    v113 = v13;
    v115 = *(_QWORD *)(v21 + 24);
    v117 = *(_QWORD *)(v21 + 32);
    v22 = *(unsigned __int8 *)(v21 + 40);
    if (v22 == 1)
    {
      v120 = v12;
      v23 = *(_QWORD *)(v0 + 208);
      v24 = *(_QWORD *)(v0 + 192);
      v25 = *(_QWORD *)(v0 + 200);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 16))(v23, *(_QWORD *)(v0 + 216), v24);
      v26 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess(0);
      v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v27+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_process, v23, v24);
      *(_QWORD *)(v27
                + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion) = v16;
      v28 = v27
          + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
      v29 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
      swift_storeEnumTagMultiPayload(v28, v29, 2);
      v30 = *(_QWORD *)(v21 + 24);
      v31 = *(_QWORD *)(v21 + 32);
      *(_QWORD *)(v21 + 24) = v27;
      *(_QWORD *)(v21 + 32) = 0;
      LOBYTE(v27) = *(_BYTE *)(v21 + 40);
      *(_BYTE *)(v21 + 40) = 2;
      v32 = v20;
      sub_1008B34A8(v115, v117, 1);
      v110 = v16;
      sub_1008B34FC(v30, v31, v27);
      v33 = *(_QWORD *)(v115 + 16);
      v34 = v115;
      if (v33)
      {
        v35 = (NSXPCConnection *)(v0 + 136);
        v36 = v115 + ((*(unsigned __int8 *)(v0 + 416) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 416));
        v37 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v0 + 336);
        v38 = *(_QWORD *)(v0 + 184);
        v107 = *(_QWORD *)(v0 + 176);
        v39 = *(_QWORD *)(v0 + 168);
        v40 = swift_bridgeObjectRetain(v115);
        v37(v38, v36, v39, v40);
        v41.super.isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
        v43 = *(_QWORD *)(v0 + 168);
        if (v42.super.isa)
        {
          v35->super.isa = v42.super.isa;
          CheckedContinuation.resume(throwing:)(v0 + 136, v43);
        }
        else
        {
          v73 = v41.super.isa;
          -[objc_class setRemoteObjectInterface:](v41.super.isa, "setRemoteObjectInterface:", qword_10147F260);
          *(_QWORD *)(v0 + 144) = v73;
          CheckedContinuation.resume(returning:)(v0 + 144, v43);
        }
        v74 = *(void (**)(_QWORD, _QWORD))(v107 + 8);
        v74(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
        if (v33 != 1)
        {
          for (i = 1; i != v33; ++i)
          {
            (*(void (**)(_QWORD, unint64_t, _QWORD))(v0 + 336))(*(_QWORD *)(v0 + 184), v36 + *(_QWORD *)(v0 + 328) * i, *(_QWORD *)(v0 + 168));
            v93.super.isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
            v95 = *(_QWORD *)(v0 + 168);
            if (v94.super.isa)
            {
              v35->super.isa = v94.super.isa;
              CheckedContinuation.resume(throwing:)(v0 + 136, v95);
            }
            else
            {
              v96 = v93.super.isa;
              -[objc_class setRemoteObjectInterface:](v93.super.isa, "setRemoteObjectInterface:", qword_10147F260);
              *(_QWORD *)(v0 + 144) = v96;
              CheckedContinuation.resume(returning:)(v0 + 144, v95);
            }
            v74(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
          }
        }
        v71 = *(_QWORD *)(v0 + 384);
        sub_1008B34FC(v115, v117, 1);
        v34 = v115;
        v72 = v117;
      }
      else
      {
        v71 = *(_QWORD *)(v0 + 384);
        v72 = v117;
      }
      sub_1008B34FC(v34, v72, 1);
      swift_release(v71);
      v75 = *(void **)(v0 + 376);
      v76 = *(_QWORD *)(v0 + 320);
      v124 = *(_QWORD *)(v0 + 280);
      v77 = *(_QWORD *)(v0 + 264);
      v119 = *(_QWORD *)(v0 + 256);
      v78 = *(_QWORD *)(v0 + 248);
      v80 = *(_QWORD *)(v0 + 224);
      v79 = *(_QWORD *)(v0 + 232);
      v81 = *(_QWORD *)(v0 + 216);
      v83 = *(_QWORD *)(v0 + 192);
      v82 = *(_QWORD *)(v0 + 200);

      v84 = swift_release(v76);
      (*(void (**)(uint64_t, uint64_t, __n128))(v82 + 8))(v81, v83, v84);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v124, v119);
    }
    else
    {
      v65 = *(void **)(v0 + 376);
      v64 = *(_QWORD *)(v0 + 384);
      v66 = *(_QWORD *)(v0 + 320);
      v121 = *(_QWORD *)(v0 + 256);
      v123 = *(_QWORD *)(v0 + 280);
      v109 = *(_QWORD *)(v0 + 248);
      v112 = *(_QWORD *)(v0 + 264);
      v104 = *(_QWORD *)(v0 + 232);
      v106 = *(_QWORD *)(v0 + 224);
      v98 = *(_QWORD *)(v0 + 200);
      v100 = *(_QWORD *)(v0 + 192);
      v102 = *(_QWORD *)(v0 + 216);
      swift_setDeallocating(v64);
      v67 = v12;
      v68 = *(void **)(v64 + 16);
      v69 = v20;
      sub_1008B34A8(v115, v117, v22);
      objc_msgSend(v68, "invalidate");

      swift_release(*(_QWORD *)(v64 + 24));
      swift_release(v66);
      v70 = sub_1008B34FC(v115, v117, v22);
      (*(void (**)(uint64_t, uint64_t, double))(v98 + 8))(v102, v100, v70);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v109, v106);
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v123, v121);
    }
    v85 = *(_QWORD *)(v0 + 272);
    v87 = *(_QWORD *)(v0 + 240);
    v86 = *(_QWORD *)(v0 + 248);
    v89 = *(_QWORD *)(v0 + 208);
    v88 = *(_QWORD *)(v0 + 216);
    v90 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 280));
    swift_task_dealloc(v85);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    v63 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v44 = *(_QWORD *)(v0 + 384);
    v103 = *(void **)(v0 + 376);
    v105 = *(_QWORD *)(v0 + 320);
    v122 = *(_QWORD *)(v0 + 280);
    v116 = *(_QWORD *)(v0 + 264);
    v118 = *(_QWORD *)(v0 + 256);
    v108 = *(_QWORD *)(v0 + 232);
    v111 = *(_QWORD *)(v0 + 224);
    v114 = *(_QWORD *)(v0 + 248);
    v97 = *(_QWORD *)(v0 + 200);
    v99 = *(_QWORD *)(v0 + 192);
    v101 = *(_QWORD *)(v0 + 216);
    v45 = v20;
    v46 = v13;
    v47 = _convertNSErrorToError(_:)(v20);

    swift_willThrow(v48);
    objc_msgSend(v16, "invalidate");
    swift_getErrorValue(v47, v0 + 120, v0 + 96);
    v49 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    v51 = v50;
    v52 = sub_1006DCA18();
    swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v52, 0, 0);
    *v53 = v49;
    v53[1] = v51;
    swift_willThrow(v54);
    swift_setDeallocating(v44);
    v55 = *(void **)(v44 + 16);
    objc_msgSend(v55, "invalidate");

    swift_release(*(_QWORD *)(v44 + 24));
    swift_errorRelease(v47);

    v56 = swift_release(v105);
    (*(void (**)(uint64_t, uint64_t, __n128))(v97 + 8))(v101, v99, v56);
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v114, v111);
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v122, v118);
    v57 = *(_QWORD *)(v0 + 272);
    v59 = *(_QWORD *)(v0 + 240);
    v58 = *(_QWORD *)(v0 + 248);
    v61 = *(_QWORD *)(v0 + 208);
    v60 = *(_QWORD *)(v0 + 216);
    v62 = *(_QWORD *)(v0 + 184);
    swift_task_dealloc(*(_QWORD *)(v0 + 280));
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    v63 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v63();
}

uint64_t sub_1008B2314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release(*(_QWORD *)(v0 + 320));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v7 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B23DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 296));
  v8 = swift_release(v1);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v5, v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v9 = *(_QWORD *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 248);
  v13 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B24D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_process;
  v2 = type metadata accessor for _AppExtensionProcess(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion));
  sub_1008B31A4(v0+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1008B2544()
{
  return type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess(0);
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F7DE8, (uint64_t)&nominal type descriptor for CRLUSDRenderingExtensionConnector.ExtensionProcess);
}

uint64_t sub_1008B2560(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for _AppExtensionProcess(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1013F8098, (uint64_t)&nominal type descriptor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState);
}

double sub_1008B2608(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _BYTE v14[24];

  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v14, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v7 = Strong;
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    type metadata accessor for MainActor(0);
    swift_retain(v7);
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_101285128, 40, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v7;
    v12 = sub_100521B98((uint64_t)v4, (uint64_t)&unk_1013F8210, (uint64_t)v11);
    swift_release(v12);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_1008B2718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008B2784, v6, v7);
}

uint64_t sub_1008B2784()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 24));
  if (*(_BYTE *)(v1 + 40) == 2)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v3 + 24);
    v4 = *(_QWORD *)(v3 + 32);
    *(_QWORD *)(v3 + 24) = 0;
    *(_QWORD *)(v3 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 3;
    swift_retain(v5);
    objc_msgSend(*(id *)(v5+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion), "invalidate", sub_1008B34FC(v6, v4, 2));
    _AppExtensionProcess.invalidate()();
    v2.n128_f64[0] = sub_1008B34FC(v5, v4, 2);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_1008B2828(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    sub_1008B2898(a1, a2);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

double sub_1008B2898(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  double result;
  id v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  char v26[8];
  char v27[72];
  char v28[24];

  if (*(_BYTE *)(v2 + 40) == 2)
  {
    v5 = *(_QWORD *)(v2 + 24);
    v6 = *(_QWORD *)(v2 + 32);
    sub_1004B8930(0, (unint64_t *)&qword_1013E0490, NSObject_ptr);
    v7 = *(void **)(v5
                  + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion);
    sub_1008B34A8(v5, v6, 2);
    v8 = v7;
    v9 = static NSObject.== infix(_:_:)(v8, a1);

    if ((v9 & 1) != 0)
    {
      if (qword_1013DD7E8 != -1)
        swift_once(&qword_1013DD7E8, sub_100A04074);
      swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v28, 0, 0);
      v10 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      v11 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v11, v27);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      if (a2)
      {
        swift_getErrorValue(a2, v26, v25);
        v13 = v25[1];
        v14 = v25[2];
        v15 = v10;
        v16 = Error.localizedDescription.getter(v13, v14);
        a2 = v17;
      }
      else
      {
        v19 = v10;
        v16 = 0;
      }
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v20 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v20;
      v21 = 0x6E776F6E6B6E7528;
      if (a2)
        v21 = v16;
      v22 = 0xE900000000000029;
      if (a2)
        v22 = a2;
      *(_QWORD *)(inited + 32) = v21;
      *(_QWORD *)(inited + 40) = v22;
      v23 = static os_log_type_t.error.getter(v20);
      sub_100A06EBC((uint64_t)v10, &_mh_execute_header, v23, "System invalidated USD renderer runtime assertion: %{public}@", 61, 2, inited);
      swift_setDeallocating(inited);
      v24 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v24);

      return sub_1008B34FC(v5, v6, 2);
    }
    else
    {
      return sub_1008B34FC(v5, v6, 2);
    }
  }
  return result;
}

void sub_1008B2AB4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(id, void *);
  id v7;
  id v8;

  v6 = *(void (**)(id, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(v8, a3);
  swift_release(v5);

}

uint64_t sub_1008B2C84()
{
  return type metadata accessor for CRLUSDRenderingExtensionConnector.ViewControllerDelegate(0);
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.ViewControllerDelegate(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1013F7F30, (uint64_t)&nominal type descriptor for CRLUSDRenderingExtensionConnector.ViewControllerDelegate);
}

void sub_1008B2CA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1008B2D0C(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

void sub_1008B2D0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1013F7F40)
  {
    v2 = sub_1004CB6A4(&qword_1013EB680);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1013F7F40);
  }
}

uint64_t sub_1008B2D64()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "invalidate");

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.APIEndpointProxy()
{
  return objc_opt_self(_TtCC8Freeform33CRLUSDRenderingExtensionConnector16APIEndpointProxy);
}

uint64_t *sub_1008B2DC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v13);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = *a2;
      *a1 = *a2;
      swift_retain(v14);
      v15 = *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      swift_weakCopyInit(a1, a2);
      v9 = *(int *)(sub_1004B804C(&qword_1013F8018) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1008B2EFC(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t *v4;
  char *v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    swift_release(*a1);
    v4 = &qword_1013F8020;
  }
  else
  {
    if ((_DWORD)result)
      return result;
    swift_weakDestroy(a1);
    v4 = &qword_1013F8018;
  }
  v5 = (char *)a1 + *(int *)(sub_1004B804C(v4) + 48);
  v6 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t *sub_1008B2F7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v12 = *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    swift_weakCopyInit(a1, a2);
    v7 = *(int *)(sub_1004B804C(&qword_1013F8018) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

uint64_t *sub_1008B3088(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_1008B31A4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v12 = *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      swift_weakCopyInit(a1, a2);
      v7 = *(int *)(sub_1004B804C(&qword_1013F8018) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1008B31A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1008B31E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v11 = *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    swift_weakTakeInit(a1, a2);
    v7 = *(int *)(sub_1004B804C(&qword_1013F8018) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_QWORD *sub_1008B32E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1008B31A4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v11 = *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      swift_weakTakeInit(a1, a2);
      v7 = *(int *)(sub_1004B804C(&qword_1013F8018) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_1008B3400(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  _BYTE v5[32];
  _BYTE v6[32];
  _QWORD v7[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2(v6, "\b", v4);
    v7[0] = v6;
    swift_getTupleTypeLayout2(v5, (char *)&value witness table for Builtin.NativeObject + 64, v4);
    v7[1] = v5;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v7);
    return 0;
  }
  return result;
}

uint64_t sub_1008B34A8(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 2)
    return swift_retain(result);
  if (a3 != 1)
  {
    if (a3)
      return result;
    swift_retain(result);
    result = a2;
  }
  return swift_bridgeObjectRetain(result);
}

double destroy for CRLUSDRenderingExtensionConnector.State(uint64_t a1)
{
  return sub_1008B34FC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

double sub_1008B34FC(uint64_t a1, uint64_t a2, char a3)
{
  double result;

  if (a3 == 2)
  {
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  else
  {
    if (a3 != 1)
    {
      if (a3)
        return result;
      swift_release(a1);
      a1 = a2;
    }
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

uint64_t _s8Freeform33CRLUSDRenderingExtensionConnectorC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1008B34A8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLUSDRenderingExtensionConnector.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1008B34A8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1008B34FC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLUSDRenderingExtensionConnector.State(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1008B34FC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRenderingExtensionConnector.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRenderingExtensionConnector.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1008B36AC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1008B36C4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRenderingExtensionConnector.State()
{
  return &type metadata for CRLUSDRenderingExtensionConnector.State;
}

void sub_1008B36EC(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[5];
  uint64_t v14;

  v4 = sub_1004B804C(&qword_1013F81F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  v9 = *(unsigned __int8 *)(v5 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_1012850B0, v10 + v6, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1008B5F9C;
  v14 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1006084F4;
  aBlock[3] = &unk_1012850C8;
  v12 = _Block_copy(aBlock);
  objc_msgSend(v8, "getExtensionProcessIDWithResponse:", v12, swift_release(v14).n128_f64[0]);
  _Block_release(v12);
}

double sub_1008B3828(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;

  v4 = sub_1004B804C(&qword_1013F81F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  v12 = type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = (v6 + v15 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  v17 = swift_allocObject(&unk_101285100, v16 + 4, v14 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v15, v7, v4);
  *(_DWORD *)(v17 + v16) = a1;
  v18 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013F8200, v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1008B3998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)(v5 + 36) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 24) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008B3A08, v7, v8);
}

uint64_t sub_1008B3A08()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(v0 + 36);
  swift_release(*(_QWORD *)(v0 + 24));
  *(_DWORD *)(v0 + 32) = v1;
  v2 = sub_1004B804C(&qword_1013F81F0);
  CheckedContinuation.resume(returning:)(v0 + 32, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1008B3A64(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v23 = a5;
  v8 = sub_1004B804C((uint64_t *)&unk_1013F80F0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = *a1;
  UUID.uuidString.getter(v12);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8, v16);
  v17 = *(unsigned __int8 *)(v9 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_101284F20, v18 + v10, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_1008B4270;
  v25 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_100628D1C;
  aBlock[3] = &unk_101284F38;
  v20 = _Block_copy(aBlock);
  *(_QWORD *)&v21 = swift_release(v25).n128_u64[0];
  objc_msgSend(v11, "makeCoreRERendererProxyForUUID:delegateProxy:flags:response:", v15, a4, v23, v20, v21);
  _Block_release(v20);

}

double sub_1008B3BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F80F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  type metadata accessor for MainActor(0);
  v12 = swift_unknownObjectRetain(a1);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 40) & ~v14;
  v16 = (char *)swift_allocObject(&unk_101284F70, v15 + v6, v14 | 7);
  *((_QWORD *)v16 + 2) = v13;
  *((_QWORD *)v16 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v16 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v7, v4);
  v17 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013F8108, (uint64_t)v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_1008B3D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[9] = v7;
  v5[10] = v8;
  return swift_task_switch(sub_1008B3DAC, v7, v8);
}

uint64_t sub_1008B3DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  *(_QWORD *)(v0 + 16) = &OBJC_PROTOCOL___NSXPCProxyCreating;
  v1 = swift_dynamicCastObjCProtocolConditional(*(_QWORD *)(v0 + 48), 1, v0 + 16);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 48);
    v4 = type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(0);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    v5 = dword_1013ED63C;
    swift_unknownObjectRetain_n(v3, 2);
    v6 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 88) = v6;
    *v6 = v0;
    v6[1] = sub_1008B3EB0;
    return sub_1006D73A0(v2);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 64));
    v8 = sub_1006DCA18();
    v9 = swift_allocError(&type metadata for CRLUSDRendererExtensionShared.ExtensionError, v8, 0, 0);
    *v10 = 0;
    v10[1] = 0;
    *(_QWORD *)(v0 + 24) = v9;
    v11 = sub_1004B804C((uint64_t *)&unk_1013F80F0);
    CheckedContinuation.resume(throwing:)(v0 + 24, v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1008B3EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  *(_QWORD *)(*(_QWORD *)v2 + 96) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[9];
    v7 = v4[10];
    v8 = sub_1008B3F9C;
  }
  else
  {
    v4[13] = a1;
    v6 = v4[9];
    v7 = v4[10];
    v8 = sub_1008B3F24;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1008B3F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  *(_QWORD *)(v0 + 40) = v1;
  swift_retain(v1);
  v3 = sub_1004B804C((uint64_t *)&unk_1013F80F0);
  CheckedContinuation.resume(returning:)(v0 + 40, v3);
  swift_unknownObjectRelease(v2);
  v4 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
}

uint64_t sub_1008B3F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  *(_QWORD *)(v0 + 32) = v1;
  swift_errorRetain(v1);
  v3 = sub_1004B804C((uint64_t *)&unk_1013F80F0);
  CheckedContinuation.resume(throwing:)(v0 + 32, v3);
  swift_unknownObjectRelease(v2);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B4014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[5] = v7;
  v5[6] = v8;
  return swift_task_switch(sub_1008B4080, v7, v8);
}

uint64_t sub_1008B4080()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(unint64_t, unint64_t, uint64_t (*)(void **), uint64_t);

  v1 = v0[3];
  v2 = swift_task_alloc(32);
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t (*)(void **), uint64_t))((char *)&dword_1013EAFF0 + dword_1013EAFF0);
  v3 = (_QWORD *)swift_task_alloc(unk_1013EAFF4);
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1008B411C;
  return v5(0xD00000000000001FLL, 0x8000000100FDC260, sub_1008B424C, v2);
}

uint64_t sub_1008B411C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 56);
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  if (v0)
    v5 = sub_1008B418C;
  else
    v5 = sub_10053457C;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1008B418C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B41C8(void **a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t v5;

  v1 = *a1;
  UUID.uuidString.getter(a1);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "didTeardownCoreRERendererForUUID:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v5 = sub_1004B804C(&qword_1013EB680);
  return CheckedContinuation.resume(returning:)(v5, v5);
}

uint64_t sub_1008B424C(void **a1)
{
  return sub_1008B41C8(a1);
}

uint64_t sub_1008B4264()
{
  return sub_100634AA4((uint64_t *)&unk_1013F80F0);
}

double sub_1008B4270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013F80F0) - 8) + 80);
  return sub_1008B3BDC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1008B42B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1008B42C0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1008B42C8()
{
  return sub_1008B5E64((uint64_t *)&unk_1013F80F0, (void (*)(_QWORD, __n128))&_swift_unknownObjectRelease);
}

uint64_t sub_1008B42DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013F80F0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013F8104);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1008B3D40(a1, v5, v6, v7, v8);
}

double sub_1008B4374(uint64_t a1)
{
  uint64_t v1;

  return sub_1008B0550(a1, v1);
}

uint64_t sub_1008B437C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B43C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, _BYTE *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  _BYTE v29[24];

  v28 = a1;
  v2 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  __chkstk_darwin(v2);
  v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v29[-v6 - 8];
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12);
  v14 = &v29[-v13 - 8];
  UUID.init()(v15);
  v16 = swift_allocObject(&unk_101284F98, 24, 7);
  swift_weakInit(v16 + 16, a1);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v11, v14, v8);
  v17 = *(unsigned __int8 *)(v9 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = swift_allocObject(&unk_101284FC0, v18 + v10, v17 | 7);
  *(_QWORD *)(v19 + 16) = v16;
  v20 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32);
  v20(v19 + v18, v11, v8);
  v21 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = AnyCancellable.init(_:)(sub_1008B4834, v19);
  v23 = &v7[*(int *)(sub_1004B804C(&qword_1013F8018) + 48)];
  v24 = swift_weakInit(v29, 0);
  v25 = swift_weakAssign(v24, v22);
  sub_1008B45F4(v25, (uint64_t)v7);
  v20((uint64_t)v23, v14, v8);
  swift_storeEnumTagMultiPayload(v7, v2, 0);
  sub_1008B4864((uint64_t)v7, (uint64_t)v4);
  v26 = v28
      + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
  swift_beginAccess(v28+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState, v29, 33, 0);
  sub_1008B48A8((uint64_t)v4, v26);
  swift_endAccess(v29);
  return v22;
}

uint64_t sub_1008B45F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F8188);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B463C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1008B4660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  type metadata accessor for MainActor(0);
  swift_retain(a1);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 40) & ~v14;
  v16 = (char *)swift_allocObject(&unk_101284FE8, v15 + v6, v14 | 7);
  *((_QWORD *)v16 + 2) = v13;
  *((_QWORD *)v16 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v16 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v7, v4);
  v17 = sub_100521B98((uint64_t)v10, (uint64_t)&unk_1013F8198, (uint64_t)v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_1008B47C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1008B4834()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_1008B4660(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1008B4864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B48A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B48EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5[37] = a4;
  v5[38] = a5;
  v6 = sub_1004B804C(&qword_1013E01F0);
  v5[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v5[40] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[41] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[42] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[43] = swift_task_alloc(v10);
  v5[44] = swift_task_alloc(v10);
  v5[45] = swift_task_alloc(v10);
  v11 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  v5[46] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[47] = swift_task_alloc(v12);
  v5[48] = swift_task_alloc(v12);
  v5[49] = swift_task_alloc(v12);
  v13 = type metadata accessor for MainActor(0);
  v5[50] = v13;
  v5[51] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  return swift_task_switch(sub_1008B4A08, v14, v15);
}

uint64_t sub_1008B4A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  char *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release(*(_QWORD *)(v0 + 408));
  v1 += 16;
  swift_beginAccess(v1, v0 + 200, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    if (byte_1013DDFB8 == 2 && Strong == qword_1013DDFA8)
    {
      v120 = qword_1013DDFA8;
      v119 = qword_1013DDFB0;
      v11 = qword_1013DD7E8;
      swift_retain(Strong);
      if (v11 != -1)
        swift_once(&qword_1013DD7E8, sub_100A04074);
      v12 = *(_QWORD *)(v0 + 392);
      v114 = *(_QWORD *)(v0 + 368);
      swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 224, 0, 0);
      v13 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      v111 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v111, v0 + 128);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v15 = v13;
      v16 = UUID.uuidString.getter(v15);
      v18 = v17;
      v19 = String.index(_:offsetBy:)(15, 8, v16, v17);
      v20 = String.subscript.getter(15, v19, v16, v18);
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v27 = swift_bridgeObjectRelease();
      v28 = static String._fromSubstring(_:)(v20, v22, v24, v26, v27);
      v30 = v29;
      swift_bridgeObjectRelease();
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v31 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v31;
      *(_QWORD *)(inited + 32) = v28;
      *(_QWORD *)(inited + 40) = v30;
      v33 = static os_log_type_t.debug.getter(v32);
      sub_100A06EBC((uint64_t)v15, &_mh_execute_header, v33, "[ExtGracePeriod] Cancellation triggered for extension. (uuid: %{public}@)", 73, 2, inited);
      swift_setDeallocating(inited);
      v34 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v34);

      v35 = v3
          + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
      swift_beginAccess(v3+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState, v0 + 248, 0, 0);
      sub_1008B437C(v35, v12);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v114);
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v37 = *(_QWORD **)(v0 + 392);
          v38 = *(_QWORD *)(v0 + 328);
          v117 = *(_QWORD *)(v0 + 320);
          swift_release(*v37);
          v39 = (char *)v37 + *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
          sub_100757E04(&_mh_execute_header, (uint64_t)"makeCancellationToken()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 599, "[ExtGracePeriod] Unexpected ExtensionProcess cancellation state: .timingOut", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeCancellationToken()", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2u, 599, (uint64_t)"[ExtGracePeriod] Unexpected ExtensionProcess cancellation state: .timingOut", 75, 2u);
          swift_release(v3);
          v40 = sub_1008B34FC(v120, v119, 2);
          (*(void (**)(char *, uint64_t, double))(v38 + 8))(v39, v117, v40);
        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"makeCancellationToken()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 584, "[ExtGracePeriod] Unexpected ExtensionProcess cancellation state: .initializing", 78, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeCancellationToken()", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2u, 584, (uint64_t)"[ExtGracePeriod] Unexpected ExtensionProcess cancellation state: .initializing", 78, 2u);
          swift_release(v3);
          sub_1008B34FC(v120, v119, 2);
        }
      }
      else
      {
        v118 = v34;
        v41 = *(_QWORD *)(v0 + 392);
        v42 = *(_QWORD *)(v0 + 360);
        v43 = *(_QWORD *)(v0 + 320);
        v44 = *(_QWORD *)(v0 + 328);
        v45 = *(_QWORD *)(v0 + 304);
        v46 = v41 + *(int *)(sub_1004B804C(&qword_1013F8018) + 48);
        v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32);
        v47(v42, v46, v43);
        v48 = static UUID.== infix(_:_:)(v45);
        if ((v48 & 1) != 0)
        {
          v115 = *(_QWORD *)(v0 + 376);
          v109 = *(uint64_t **)(v0 + 384);
          v112 = *(_QWORD *)(v0 + 368);
          v49 = *(_QWORD *)(v0 + 352);
          v106 = v49;
          v107 = *(_QWORD *)(v0 + 360);
          v50 = *(_QWORD *)(v0 + 344);
          v51 = *(_QWORD *)(v0 + 320);
          v52 = *(_QWORD *)(v0 + 328);
          v102 = v50;
          v103 = v52;
          v53 = *(_QWORD *)(v0 + 312);
          v104 = *(_QWORD *)(v0 + 336);
          v105 = v53;
          UUID.init()(v48);
          v54 = type metadata accessor for TaskPriority(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 1, 1, v54);
          v55 = swift_allocObject(&unk_101284F98, 24, 7);
          swift_weakInit(v55 + 16, v3);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v50, v49, v51);
          swift_retain(v55);
          v57 = static MainActor.shared.getter(v56);
          v58 = *(unsigned __int8 *)(v52 + 80);
          v59 = v47;
          v60 = (v58 + 32) & ~v58;
          v61 = (v104 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
          v62 = swift_allocObject(&unk_101285010, v61 + 8, v58 | 7);
          *(_QWORD *)(v62 + 16) = v57;
          *(_QWORD *)(v62 + 24) = &protocol witness table for MainActor;
          v59(v62 + v60, v102, v51);
          *(_QWORD *)(v62 + v61) = v55;
          swift_release(v55);
          v63 = sub_100521B98(v105, (uint64_t)&unk_1013F81B0, v62);
          v64 = swift_release(v3);
          (*(void (**)(uint64_t, uint64_t, __n128))(v103 + 8))(v107, v51, v64);
          v65 = (char *)v109 + *(int *)(sub_1004B804C(&qword_1013F8020) + 48);
          *v109 = v63;
          v59((uint64_t)v65, v106, v51);
          swift_storeEnumTagMultiPayload(v109, v112, 1);
          sub_1008B4864((uint64_t)v109, v115);
          swift_beginAccess(v35, v0 + 272, 33, 0);
          sub_1008B48A8(v115, v35);
          swift_endAccess(v0 + 272);
          sub_1008B34FC(v120, v119, 2);
        }
        else
        {
          v108 = *(_QWORD *)(v0 + 360);
          v110 = *(_QWORD *)(v0 + 328);
          v116 = *(_QWORD *)(v0 + 320);
          v66 = (void *)static OS_os_log.crlThreeDimensionalObjects;
          v67 = swift_initStackObject(v111, v0 + 16);
          *(_OWORD *)(v67 + 16) = xmmword_100EF5A10;
          v113 = v66;
          v68 = UUID.uuidString.getter(v113);
          v70 = v69;
          v71 = String.index(_:offsetBy:)(15, 8, v68, v69);
          v72 = String.subscript.getter(15, v71, v68, v70);
          v74 = v73;
          v76 = v75;
          v78 = v77;
          v79 = swift_bridgeObjectRelease();
          v80 = static String._fromSubstring(_:)(v72, v74, v76, v78, v79);
          v82 = v81;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v67 + 56) = &type metadata for String;
          *(_QWORD *)(v67 + 64) = v31;
          *(_QWORD *)(v67 + 32) = v80;
          *(_QWORD *)(v67 + 40) = v82;
          v84 = UUID.uuidString.getter(v83);
          v86 = v85;
          v87 = String.index(_:offsetBy:)(15, 8, v84, v85);
          v88 = String.subscript.getter(15, v87, v84, v86);
          v90 = v89;
          v92 = v91;
          v94 = v93;
          v95 = swift_bridgeObjectRelease();
          v96 = static String._fromSubstring(_:)(v88, v90, v92, v94, v95);
          v98 = v97;
          v99 = swift_bridgeObjectRelease();
          *(_QWORD *)(v67 + 96) = &type metadata for String;
          *(_QWORD *)(v67 + 104) = v31;
          *(_QWORD *)(v67 + 72) = v96;
          *(_QWORD *)(v67 + 80) = v98;
          v100 = static os_log_type_t.debug.getter(v99);
          sub_100A06EBC((uint64_t)v113, &_mh_execute_header, v100, "[ExtGracePeriod]   (Cancellation ignored: UUID mismatch) (uuid: %{public}@, found: %{public}@)", 94, 2, v67);
          swift_setDeallocating(v67);
          swift_arrayDestroy(v67 + 32, 2, v118);

          swift_release(v3);
          v101 = sub_1008B34FC(v120, v119, 2);
          (*(void (**)(uint64_t, uint64_t, double))(v110 + 8))(v108, v116, v101);
        }
        sub_1004CB800(*(_QWORD *)(v0 + 392), &qword_1013F8188);
      }
    }
    else
    {
      swift_release(Strong);
    }
  }
  v4 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 376);
  v7 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 344);
  v9 = *(_QWORD *)(v0 + 312);
  swift_task_dealloc(*(_QWORD *)(v0 + 392));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B5238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1008B52B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013F8194);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_1008B48EC(a1, v5, v6, v7, v8);
}

uint64_t sub_1008B5348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[47] = a4;
  v5[48] = a5;
  v6 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  v5[49] = v6;
  v5[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v5[51] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[52] = v8;
  v5[53] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[54] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[55] = v10;
  v5[56] = v11;
  return swift_task_switch(sub_1008B5400, v10, v11);
}

uint64_t sub_1008B5400()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, v0 + 38, 0, 0);
  v1 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v0[57] = v2;
  inited = swift_initStackObject(v2, v0 + 11);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v4 = v1;
  v5 = UUID.uuidString.getter(v4);
  v7 = v6;
  v8 = String.index(_:offsetBy:)(15, 8, v5, v6);
  v9 = String.subscript.getter(15, v8, v5, v7);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = swift_bridgeObjectRelease();
  v17 = static String._fromSubstring(_:)(v9, v11, v13, v15, v16);
  v19 = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v20 = sub_1004CFC2C();
  v0[58] = v20;
  *(_QWORD *)(inited + 64) = v20;
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(inited + 40) = v19;
  v22 = static os_log_type_t.debug.getter(v21);
  sub_100A06EBC((uint64_t)v4, &_mh_execute_header, v22, "[ExtGracePeriod] Grace period begins. (uuid: %{public}@)", 56, 2, inited);
  swift_setDeallocating(inited);
  v23 = sub_1004B804C(&qword_1013E0190);
  v0[59] = v23;
  swift_arrayDestroy(inited + 32, 1, v23);

  v24 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
  v0[60] = v24;
  *v24 = v0;
  v24[1] = sub_1008B55D8;
  return static Task<>.sleep(nanoseconds:)(30000000000);
}

uint64_t sub_1008B55D8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 480);
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1008B5B9C;
  else
    v4 = sub_1008B5638;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 440), *(_QWORD *)(v2 + 448));
}

uint64_t sub_1008B5638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v1 = *(_QWORD *)(v0 + 488);
  swift_release(*(_QWORD *)(v0 + 432));
  static Task<>.checkCancellation()(v2);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 464);
    v97 = *(_QWORD *)(v0 + 472);
    v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    inited = swift_initStackObject(*(_QWORD *)(v0 + 456), v0 + 160);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    v6 = v4;
    v7 = UUID.uuidString.getter(v6);
    v9 = v8;
    v10 = String.index(_:offsetBy:)(15, 8, v7, v8);
    v11 = String.subscript.getter(15, v10, v7, v9);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = swift_bridgeObjectRelease();
    v19 = static String._fromSubstring(_:)(v11, v13, v15, v17, v18);
    v21 = v20;
    v22 = swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = v3;
    *(_QWORD *)(inited + 32) = v19;
    *(_QWORD *)(inited + 40) = v21;
    v23 = static os_log_type_t.debug.getter(v22);
    sub_100A06EBC((uint64_t)v6, &_mh_execute_header, v23, "[ExtGracePeriod] Grace period cancelled (new API endpoint created). (uuid: %{public}@)", 86, 2, inited);
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, 1, v97);

    swift_errorRelease(v1);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 384) + 16;
    swift_beginAccess(v24, v0 + 352, 0, 0);
    Strong = swift_weakLoadStrong(v24);
    if (Strong)
    {
      v26 = Strong;
      if (byte_1013DDFB8 == 2 && (v27 = qword_1013DDFA8, Strong == qword_1013DDFA8))
      {
        v52 = qword_1013DDFB0;
        v54 = *(_QWORD *)(v0 + 392);
        v53 = *(_QWORD *)(v0 + 400);
        v55 = Strong
            + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
        swift_beginAccess(Strong+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState, v0 + 328, 0, 0);
        sub_1008B437C(v55, v53);
        if (swift_getEnumCaseMultiPayload(v53, v54) == 1)
        {
          v98 = v52;
          v57 = *(_QWORD *)(v0 + 416);
          v56 = *(_QWORD *)(v0 + 424);
          v59 = *(char **)(v0 + 400);
          v58 = *(_QWORD *)(v0 + 408);
          v60 = *(_QWORD *)(v0 + 376);
          v61 = *(_QWORD *)v59;
          swift_retain(v26);
          swift_release(v61);
          v62 = sub_1004B804C(&qword_1013F8020);
          (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v56, &v59[*(int *)(v62 + 48)], v58);
          if ((static UUID.== infix(_:_:)(v60) & 1) != 0)
          {
            v92 = *(_QWORD *)(v0 + 464);
            v93 = *(_QWORD *)(v0 + 472);
            v94 = *(_QWORD *)(v0 + 416);
            v95 = *(_QWORD *)(v0 + 408);
            v96 = *(_QWORD *)(v0 + 424);
            v63 = (void *)static OS_os_log.crlThreeDimensionalObjects;
            v64 = swift_initStackObject(*(_QWORD *)(v0 + 456), v0 + 16);
            *(_OWORD *)(v64 + 16) = xmmword_100EF5E40;
            v91 = v63;
            v65 = UUID.uuidString.getter(v91);
            v67 = v66;
            v68 = String.index(_:offsetBy:)(15, 8, v65, v66);
            v69 = String.subscript.getter(15, v68, v65, v67);
            v71 = v70;
            v73 = v72;
            v75 = v74;
            v76 = swift_bridgeObjectRelease();
            v77 = static String._fromSubstring(_:)(v69, v71, v73, v75, v76);
            v79 = v78;
            v80 = swift_bridgeObjectRelease();
            *(_QWORD *)(v64 + 56) = &type metadata for String;
            *(_QWORD *)(v64 + 64) = v92;
            *(_QWORD *)(v64 + 32) = v77;
            *(_QWORD *)(v64 + 40) = v79;
            v81 = static os_log_type_t.debug.getter(v80);
            sub_100A06EBC((uint64_t)v91, &_mh_execute_header, v81, "[ExtGracePeriod] Grace period ended. Extension process invalidated. (uuid: %{public}@)", 86, 2, v64);
            swift_setDeallocating(v64);
            swift_arrayDestroy(v64 + 32, 1, v93);

            v82 = qword_1013DDFA8;
            v83 = qword_1013DDFB0;
            qword_1013DDFA8 = 0;
            qword_1013DDFB0 = 0;
            v84 = byte_1013DDFB8;
            byte_1013DDFB8 = 3;
            objc_msgSend(*(id *)(v26+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion), "invalidate", sub_1008B34FC(v82, v83, v84));
            _AppExtensionProcess.invalidate()();
            swift_release(v26);
            v85 = sub_1008B34FC(v27, v98, 2);
            (*(void (**)(uint64_t, uint64_t, double))(v94 + 8))(v96, v95, v85);
            goto LABEL_8;
          }
          v88 = *(_QWORD *)(v0 + 416);
          v87 = *(_QWORD *)(v0 + 424);
          v89 = *(_QWORD *)(v0 + 408);
          swift_release(v26);
          v90 = sub_1008B34FC(v27, v98, 2);
          (*(void (**)(uint64_t, uint64_t, double))(v88 + 8))(v87, v89, v90);
        }
        else
        {
          v86 = *(_QWORD *)(v0 + 400);
          swift_release(v26);
          sub_1008B31A4(v86);
        }
      }
      else
      {
        swift_release(Strong);
      }
    }
    v29 = *(_QWORD *)(v0 + 464);
    v28 = *(_QWORD *)(v0 + 472);
    v30 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    v31 = swift_initStackObject(*(_QWORD *)(v0 + 456), v0 + 232);
    *(_OWORD *)(v31 + 16) = xmmword_100EF5E40;
    v32 = v30;
    v33 = UUID.uuidString.getter(v32);
    v35 = v34;
    v36 = String.index(_:offsetBy:)(15, 8, v33, v34);
    v37 = String.subscript.getter(15, v36, v33, v35);
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v44 = swift_bridgeObjectRelease();
    v45 = static String._fromSubstring(_:)(v37, v39, v41, v43, v44);
    v47 = v46;
    v48 = swift_bridgeObjectRelease();
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_QWORD *)(v31 + 64) = v29;
    *(_QWORD *)(v31 + 32) = v45;
    *(_QWORD *)(v31 + 40) = v47;
    v49 = static os_log_type_t.debug.getter(v48);
    sub_100A06EBC((uint64_t)v32, &_mh_execute_header, v49, "[ExtGracePeriod] Grace period cancelled (state changed). (uuid: %{public}@)", 75, 2, v31);
    swift_setDeallocating(v31);
    swift_arrayDestroy(v31 + 32, 1, v28);

  }
LABEL_8:
  v50 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 424));
  swift_task_dealloc(v50);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B5B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  swift_release(*(_QWORD *)(v0 + 432));
  v25 = *(_QWORD *)(v0 + 488);
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 472);
  v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  inited = swift_initStackObject(*(_QWORD *)(v0 + 456), v0 + 160);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v5 = v3;
  v6 = UUID.uuidString.getter(v5);
  v8 = v7;
  v9 = String.index(_:offsetBy:)(15, 8, v6, v7);
  v10 = String.subscript.getter(15, v9, v6, v8);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = swift_bridgeObjectRelease();
  v18 = static String._fromSubstring(_:)(v10, v12, v14, v16, v17);
  v20 = v19;
  v21 = swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = v1;
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(inited + 40) = v20;
  v22 = static os_log_type_t.debug.getter(v21);
  sub_100A06EBC((uint64_t)v5, &_mh_execute_header, v22, "[ExtGracePeriod] Grace period cancelled (new API endpoint created). (uuid: %{public}@)", 86, 2, inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, v2);

  swift_errorRelease(v25);
  v23 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 424));
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1008B5D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1008B5DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1013F81AC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1008B5348(a1, v6, v7, v8, v9);
}

uint64_t sub_1008B5E50()
{
  return sub_1008B5E64(&qword_1013F81B8, (void (*)(_QWORD, __n128))&_swift_release);
}

uint64_t sub_1008B5E64(uint64_t *a1, void (*a2)(_QWORD, __n128))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v4 = sub_1004B804C(a1);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 40) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v6 | 7;
  v10 = swift_unknownObjectRelease(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32), v10);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2 + v7, v4);
  return swift_deallocObject(v2, v8, v9);
}

uint64_t sub_1008B5EE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013F81B8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013F81C4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_1008B06B4(a1, v5, v6, v7, v8);
}

double sub_1008B5F80()
{
  uint64_t v0;

  return sub_1008B2608(v0);
}

double sub_1008B5F88(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1008B2828(a1, a2, v2);
}

uint64_t sub_1008B5F90()
{
  return sub_100634AA4(&qword_1013F81F0);
}

double sub_1008B5F9C(int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013F81F0) - 8) + 80);
  return sub_1008B3828(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1008B5FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013F81F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1008B6060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_1004B804C(&qword_1013F81F0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_DWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 3) & 0xFFFFFFFFFFFFFCLL));
  v10 = (_QWORD *)swift_task_alloc(dword_1013F81FC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1008B3998(a1, v6, v7, v8, v9);
}

uint64_t sub_1008B6108()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1008B6134(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1013F820C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1004CFD00;
  return sub_1008B2718(a1, v4, v5, v6);
}

uint64_t sub_1008B61A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v1 = sub_1004B804C(&qword_1013F8218);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v14[-v5];
  v7 = sub_1004B804C(&qword_1013EB680);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F22ViewControllerDelegate_continuation;
  swift_beginAccess(v0+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F22ViewControllerDelegate_continuation, v15, 0, 0);
  sub_1008B64E0(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1004CB800((uint64_t)v6, &qword_1013F8218);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v3, 1, 1, v7);
  swift_beginAccess(v11, v14, 33, 0);
  sub_1008B6528((uint64_t)v3, v11);
  v13 = swift_endAccess(v14);
  CheckedContinuation.resume(returning:)(v13, v7);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1008B6334(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[3];
  _BYTE v16[24];

  v3 = sub_1004B804C(&qword_1013F8218);
  __chkstk_darwin(v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v15 - v7;
  v9 = sub_1004B804C(&qword_1013EB680);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1
      + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F22ViewControllerDelegate_continuation;
  swift_beginAccess(v1+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F22ViewControllerDelegate_continuation, v16, 0, 0);
  sub_1008B64E0(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013F8218);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
    swift_beginAccess(v13, v15, 33, 0);
    swift_errorRetain(a1);
    sub_1008B6528((uint64_t)v5, v13);
    swift_endAccess(v15);
    v15[0] = a1;
    CheckedContinuation.resume(throwing:)(v15, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1008B64E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F8218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B6528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013F8218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_1008B6584()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLCanvasEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "canvasEditorHelper");
    v9 = objc_msgSend(v8, "layoutsForAlignAndDistribute", swift_unknownObjectRelease(v5).n128_f64[0]);

    v10 = sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
    v11 = sub_1008B6E44();
    v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);

    if ((v12 & 0xC000000000000001) != 0)
    {
      if (v12 < 0)
        v13 = v12;
      else
        v13 = v12 & 0xFFFFFFFFFFFFFF8;
      v14 = __CocoaSet.count.getter(v13);
    }
    else
    {
      v14 = *(_QWORD *)(v12 + 16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease(v5);
    v14 = 0;
  }
  return v14 > 2;
}

BOOL sub_1008B66D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLCanvasEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "canvasEditorHelper");
    v9 = objc_msgSend(v8, "layoutsForAlignAndDistribute", swift_unknownObjectRelease(v5).n128_f64[0]);

    v10 = sub_1004B8930(0, (unint64_t *)&qword_1013FC960, off_101229810);
    v11 = sub_1008B6E44();
    v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v9, v10, v11);

    if ((v12 & 0xC000000000000001) != 0)
    {
      if (v12 < 0)
        v13 = v12;
      else
        v13 = v12 & 0xFFFFFFFFFFFFFF8;
      v14 = __CocoaSet.count.getter(v13);
    }
    else
    {
      v14 = *(_QWORD *)(v12 + 16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease(v5);
    v14 = 0;
  }
  return v14 > 1;
}

uint64_t sub_1008B6824()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _BOOL4 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  int v18;
  int v19;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
  v4 = v2;
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v6 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v7 = objc_opt_self(CRLCanvasEditor);
  v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
  if (v8)
  {
    v9 = objc_msgSend(v8, "canvasEditorHelper");
    v10 = objc_msgSend(v9, "canvasEditorCanPerformGroupActionWithSender:", v0, swift_unknownObjectRelease(v6).n128_f64[0]);

    v12 = v10 == (id)1;
    if (v4)
    {
LABEL_6:
      v13 = swift_getObjCClassFromMetadata(v4, v11);
      goto LABEL_9;
    }
  }
  else
  {
    swift_unknownObjectRelease(v6);
    v12 = 0;
    if (v4)
      goto LABEL_6;
  }
  v13 = 0;
LABEL_9:
  v14 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", v13);
  v15 = objc_opt_self(CRLCanvasEditor);
  v16 = (void *)swift_dynamicCastObjCClass(v14, v15);
  if (v16)
  {
    v17 = objc_msgSend(v16, "canvasEditorHelper");
    v18 = objc_msgSend(v17, "canvasEditorCanPerformUngroupActionWithSender:", v0, swift_unknownObjectRelease(v14).n128_f64[0]) == (id)1;

    v19 = v18 << 8;
  }
  else
  {
    swift_unknownObjectRelease(v14);
    v19 = 0;
  }
  return v19 | v12;
}

double sub_1008B69C0(int a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  char **v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;

  switch(a1)
  {
    case 0:
      v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v3 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
      if (v3)
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3, v4);
      else
        ObjCClassFromMetadata = 0;
      v26 = objc_msgSend(v2, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
      v27 = objc_opt_self(CRLCanvasEditor);
      v28 = (void *)swift_dynamicCastObjCClass(v26, v27);
      if (!v28)
        goto LABEL_33;
      v29 = &selRef_alignDrawablesByLeftEdge_;
      break;
    case 1:
      v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v7 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
      if (v7)
        v9 = swift_getObjCClassFromMetadata(v7, v8);
      else
        v9 = 0;
      v26 = objc_msgSend(v6, "mostSpecificCurrentEditorOfClass:", v9);
      v30 = objc_opt_self(CRLCanvasEditor);
      v28 = (void *)swift_dynamicCastObjCClass(v26, v30);
      if (!v28)
        goto LABEL_33;
      v29 = &selRef_alignDrawablesByVerticalCenter_;
      break;
    case 2:
      v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v11 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
      if (v11)
        v13 = swift_getObjCClassFromMetadata(v11, v12);
      else
        v13 = 0;
      v26 = objc_msgSend(v10, "mostSpecificCurrentEditorOfClass:", v13);
      v31 = objc_opt_self(CRLCanvasEditor);
      v28 = (void *)swift_dynamicCastObjCClass(v26, v31);
      if (!v28)
        goto LABEL_33;
      v29 = &selRef_alignDrawablesByRightEdge_;
      break;
    case 3:
      v14 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v15 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
      if (v15)
        v17 = swift_getObjCClassFromMetadata(v15, v16);
      else
        v17 = 0;
      v26 = objc_msgSend(v14, "mostSpecificCurrentEditorOfClass:", v17);
      v32 = objc_opt_self(CRLCanvasEditor);
      v28 = (void *)swift_dynamicCastObjCClass(v26, v32);
      if (!v28)
        goto LABEL_33;
      v29 = &selRef_alignDrawablesByTopEdge_;
      break;
    case 4:
      v18 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v19 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
      if (v19)
        v21 = swift_getObjCClassFromMetadata(v19, v20);
      else
        v21 = 0;
      v26 = objc_msgSend(v18, "mostSpecificCurrentEditorOfClass:", v21);
      v33 = objc_opt_self(CRLCanvasEditor);
      v28 = (void *)swift_dynamicCastObjCClass(v26, v33);
      if (!v28)
        goto LABEL_33;
      v29 = &selRef_alignDrawablesByHorizontalCenter_;
      break;
    case 5:
      v22 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      v23 = sub_1004B8930(0, &qword_1013F8248, off_1012297F8);
      if (v23)
        v25 = swift_getObjCClassFromMetadata(v23, v24);
      else
        v25 = 0;
      v26 = objc_msgSend(v22, "mostSpecificCurrentEditorOfClass:", v25);
      v34 = objc_opt_self(CRLCanvasEditor);
      v28 = (void *)swift_dynamicCastObjCClass(v26, v34);
      if (!v28)
        goto LABEL_33;
      v29 = &selRef_alignDrawablesByBottomEdge_;
      break;
    default:
      return result;
  }
  objc_msgSend(v28, *v29, v1);
LABEL_33:
  *(_QWORD *)&result = swift_unknownObjectRelease(v26).n128_u64[0];
  return result;
}

BOOL sub_1008B6D2C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  v2 = sub_1004B8930(0, &qword_1013F6DB0, off_1012298A0);
  if (v2)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2, v3);
  else
    ObjCClassFromMetadata = 0;
  v5 = objc_msgSend(v1, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v6 = objc_opt_self(CRLFreehandDrawingEditor);
  v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
  if (v7)
  {
    v8 = objc_msgSend(v7, "canPerformEditorAction:withSender:", "mergeDrawings:", v0);
    swift_unknownObjectRelease(v5);
    return v8 == (id)1;
  }
  else
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
}

id sub_1008B6DF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterArrangeDataProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLMiniFormatterArrangeDataProvider()
{
  return objc_opt_self(_TtC8Freeform35CRLMiniFormatterArrangeDataProvider);
}

unint64_t sub_1008B6E44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F8250;
  if (!qword_1013F8250)
  {
    v1 = sub_1004B8930(255, (unint64_t *)&qword_1013FC960, off_101229810);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1013F8250);
  }
  return result;
}

unint64_t sub_1008B6E9C()
{
  unint64_t result;

  result = sub_1008D5828((uint64_t)_swiftEmptyArrayStorage);
  qword_10147FC28 = result;
  return result;
}

void sub_1008B6F88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t inited;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  NSString v27;
  Swift::String v28;
  uint64_t v29;
  Swift::String v30;
  __n128 v31;
  Swift::String v32;
  Swift::String v33;
  NSString v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  uint64_t v40;
  void (*v41)(void *, uint64_t, uint64_t, __n128);
  __n128 v42;
  NSString v43;
  Swift::String v44;
  NSString v45;
  void *v46;
  _QWORD v47[2];
  uint64_t v48;
  unint64_t v49;
  _BYTE v50[24];
  _BYTE v51[120];

  sub_100579408();
  v8 = (void *)static OS_os_log.default.getter();
  v9 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v9, v51);
  *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
  if (!a3)
  {
    __break(1u);
    goto LABEL_25;
  }
  v11 = (_QWORD *)inited;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  v11[4] = a2;
  v11[5] = a3;
  if (!a4)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v11[12] = sub_1004B804C(&qword_1013FA4C0);
  v11[13] = sub_1008B7440();
  v11[9] = a4;
  swift_bridgeObjectRetain(a3);
  v12 = swift_bridgeObjectRetain(a4);
  v13 = static os_log_type_t.default.getter(v12);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v13, "[CARMEL-PPT] Running test %@ options %@", 39, 2, (uint64_t)v11);
  swift_setDeallocating(v11);
  v14 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(v11 + 4, 2, v14);

  if (qword_1013DD398 != -1)
    swift_once(&qword_1013DD398, sub_1008B6E9C);
  swift_beginAccess(&qword_10147FC28, v50, 1, 0);
  qword_10147FC28 = a4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRelease();
  v15 = sub_10096EE64();
  v16 = v15;
  v17 = *(_QWORD *)(v15 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    if (a1)
    {
      v27 = String._bridgeToObjectiveC()();
      v48 = 0;
      v49 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v28._countAndFlagsBits = 0x7373616C63206F4ELL;
      v28._object = (void *)0xED000020726F6620;
      String.append(_:)(v28);
      v47[0] = a2;
      v47[1] = a3;
      v29 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
      _print_unlocked<A, B>(_:_:)(v47, &v48, v29, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v30._countAndFlagsBits = 23328;
      v30._object = (void *)0xE200000000000000;
      String.append(_:)(v30);
      sub_10096EE64();
      sub_1004B804C(&qword_1013F82C8);
      v32._countAndFlagsBits = Array.description.getter(v31);
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33._countAndFlagsBits = 93;
      v33._object = (void *)0xE100000000000000;
      String.append(_:)(v33);
      v34 = String._bridgeToObjectiveC()();
      objc_msgSend(a1, "failedTest:withFailure:", v27, v34, swift_bridgeObjectRelease().n128_f64[0]);

      return;
    }
    goto LABEL_26;
  }
  v46 = a1;
  v18 = swift_bridgeObjectRetain(v15);
  v19 = (uint64_t *)(v16 + 48);
  while (1)
  {
    v20 = *(v19 - 2);
    v21 = *(v19 - 1);
    v22 = *v19;
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 8))(v20, v21, v18);
    if (v23 == a2 && v24 == a3)
    {
      swift_bridgeObjectRelease_n(v16, 2);
      v35 = swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, a2, a3, 0);
    v18 = swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
      break;
    v19 += 3;
    if (!--v17)
    {
      swift_bridgeObjectRelease_n(v16, 2);
      a1 = v46;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n(v16, 2);
LABEL_19:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v22 + 8))(&v48, v20, v22, v35);
  v36 = qword_10147FC10;
  qword_10147FC10 = v48;
  *(_QWORD *)algn_10147FC18 = v21;
  qword_10147FC20 = v22;
  swift_unknownObjectRelease(v36);
  v37 = qword_10147FC10;
  if (qword_10147FC10)
  {
    v38 = qword_10147FC20;
    ObjectType = swift_getObjectType(qword_10147FC10);
    v48 = v37;
    if (v46)
    {
      v40 = ObjectType;
      v41 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v38 + 16);
      v42 = swift_unknownObjectRetain(v37);
      v41(v46, v40, v38, v42);
      swift_unknownObjectRelease(v37);
      return;
    }
    goto LABEL_27;
  }
  if (v46)
  {
    v43 = String._bridgeToObjectiveC()();
    v48 = 0;
    v49 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    v48 = 0x742064656C696146;
    v49 = 0xEF2074696E69206FLL;
    v44._countAndFlagsBits = _typeName(_:qualified:)(v20, 0);
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v46, "failedTest:withFailure:", v43, v45, swift_bridgeObjectRelease().n128_f64[0]);

    return;
  }
LABEL_28:
  __break(1u);
}

unint64_t sub_1008B7440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F82C0;
  if (!qword_1013F82C0)
  {
    v1 = sub_1004CB6A4(&qword_1013FA4C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1013F82C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipConnectionLinesEntryPointFull()
{
  return &type metadata for CRLTipConnectionLinesEntryPointFull;
}

uint64_t sub_1008B749C(uint64_t a1)
{
  return sub_1008B7648(a1, qword_10147FC30, 0xD000000000000026, 0x8000000100FDC800);
}

uint64_t sub_1008B74C0(uint64_t a1)
{
  return sub_1008B7584(a1, qword_10147FC48, 0x655341657661682BLL, 0xEF6E6F697463656CLL);
}

uint64_t sub_1008B74EC(uint64_t a1)
{
  return sub_1008B7584(a1, qword_10147FC60, 0xD000000000000010, 0x8000000100FB9630);
}

uint64_t sub_1008B7510(uint64_t a1)
{
  return sub_1008B7584(a1, qword_10147FC78, 0xD000000000000013, 0x8000000100FB9610);
}

uint64_t sub_1008B7534(uint64_t a1)
{
  return sub_1008B7584(a1, qword_10147FC90, 0xD000000000000018, 0x8000000100FDC830);
}

uint64_t sub_1008B7558(uint64_t a1)
{
  return sub_1008B7584(a1, qword_10147FCA8, 0x746361706D6F632BLL, 0xEE0074756F79614CLL);
}

uint64_t sub_1008B7584(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipConnectionLinesEntryPointFull, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipConnectionLinesEntryPointFull, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1008B7624(uint64_t a1)
{
  return sub_1008B7648(a1, qword_10147FCC0, 0xD000000000000038, 0x8000000100FDC7C0);
}

uint64_t sub_1008B7648(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_1004B804C(&qword_1013E6D60);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  return Tips.Event.init<>(id:)(a3, a4);
}

uint64_t sub_1008B76A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a2;
  v39 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v37 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C(&qword_1013E6D78);
  v5 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v42 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C(&qword_1013E6D80);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D88);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1004B804C(&qword_1013F5970);
  v38 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v8, v18);
  KeyPath = swift_getKeyPath(byte_100F13658);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v11, KeyPath, v8, v18);
  v20 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v20);
  v21 = swift_getKeyPath(byte_100F13690);
  v22 = sub_1004CBA30(&qword_1013F5978, &qword_1013E6D88, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, v21, v12, v22);
  v23 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v23);
  v43 = 1;
  static PredicateExpressions.build_Arg<A>(_:)(&v43, &type metadata for Int);
  v25 = v36;
  v24 = v37;
  v26 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v39);
  v27 = sub_1004B804C(&qword_1013F5980);
  v28 = v40;
  v40[3] = v27;
  v28[4] = sub_1008B85F8((unint64_t *)&qword_1013F5988, &qword_1013F5980, (void (*)(void))sub_10085A0D8);
  sub_10050D1B0(v28);
  v29 = sub_1004CBA30(&qword_1013F5998, &qword_1013F5970, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v30 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v31 = v35;
  v32 = v41;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v17, v7, v25, v35, v41, v29, v30, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v31);
}

uint64_t sub_1008B7A1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __n128 v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  __chkstk_darwin(v3);
  v55 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  v60 = v6;
  v7 = __chkstk_darwin(v5);
  v53 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Tips.DonationTimeRange(0, v7);
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D80);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E6D88);
  v48 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013E6D90);
  v49 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1004B804C(&qword_1013E6D98);
  v54 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v47 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v12, v23);
  KeyPath = swift_getKeyPath(byte_100F13658);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, KeyPath, v12, v23);
  v25 = swift_release(KeyPath);
  v26 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v25);
  static Tips.DonationTimeRange.day.getter(v26);
  v27 = type metadata accessor for Tips.EmptyDonation(0);
  v28 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v29 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v30 = sub_1005EA664();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)(v18, v11, v27, v16, v28, v29, v30);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v16);
  v31 = swift_getKeyPath(byte_100F13690);
  v32 = sub_1004CBA30(&qword_1013E6DB8, &qword_1013E6D90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.DonatedWithin<A, B>);
  v33 = v47;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, v31, v19, v32);
  v34 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v21, v19, v34);
  v61 = 1;
  v35 = v53;
  static PredicateExpressions.build_Arg<A>(_:)(&v61, &type metadata for Int);
  v37 = v55;
  v36 = v56;
  v38 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v57);
  v39 = sub_1004B804C(&qword_1013E6DC0);
  v40 = v58;
  v58[3] = v39;
  v40[4] = sub_1008B85F8((unint64_t *)&qword_1013E6DC8, &qword_1013E6DC0, (void (*)(void))sub_1005EA768);
  sub_10050D1B0(v40);
  v41 = sub_1004CBA30(&qword_1013E6DE8, &qword_1013E6D98, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v42 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v43 = v52;
  v44 = v59;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v33, v35, v37, v52, v59, v41, v42, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v33, v43);
}

uint64_t sub_1008B7EAC()
{
  return sub_100D2D414();
}

uint64_t sub_1008B7ED4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054F4B4();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1008B7F14()
{
  unint64_t result;

  result = qword_1013F8330;
  if (!qword_1013F8330)
  {
    result = swift_getWitnessTable(&unk_100F135A4, &type metadata for CRLTipConnectionLinesEntryPointFull);
    atomic_store(result, (unint64_t *)&qword_1013F8330);
  }
  return result;
}

unint64_t sub_1008B7F58(uint64_t a1)
{
  unint64_t result;

  result = sub_10054F4B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008B7F7C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];
  char v56[24];
  char v57[24];
  char v58[24];
  char v59[32];

  v0 = sub_1004B804C(&qword_1013E6D60);
  v53 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Tips.Rule(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD3A8 != -1)
    swift_once(&qword_1013DD3A8, sub_1008B74C0);
  v12 = sub_1004F2A1C(v3, (uint64_t)qword_10147FC48);
  v13 = swift_beginAccess(v12, v59, 0, 0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v14(v7, v12, v3, v13);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v54 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  if (qword_1013DD3C0 != -1)
    swift_once(&qword_1013DD3C0, sub_1008B7534);
  v16 = sub_1004F2A1C(v3, (uint64_t)qword_10147FC90);
  v17 = swift_beginAccess(v16, v58, 0, 0);
  v14(v7, v16, v3, v17);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v52 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  v18 = v0;
  if (qword_1013DD3B0 != -1)
    swift_once(&qword_1013DD3B0, sub_1008B74EC);
  v19 = sub_1004F2A1C(v3, (uint64_t)qword_10147FC60);
  v20 = swift_beginAccess(v19, v57, 0, 0);
  v14(v7, v19, v3, v20);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v51 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DD3B8 != -1)
    swift_once(&qword_1013DD3B8, sub_1008B7510);
  v21 = sub_1004F2A1C(v3, (uint64_t)qword_10147FC78);
  v22 = swift_beginAccess(v21, v56, 0, 0);
  v14(v7, v21, v3, v22);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v50 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DD3C8 != -1)
    swift_once(&qword_1013DD3C8, sub_1008B7558);
  v23 = v2;
  v24 = sub_1004F2A1C(v3, (uint64_t)qword_10147FCA8);
  v25 = swift_beginAccess(v24, v55, 0, 0);
  v14(v7, v24, v3, v25);
  Tips.Rule.init<A>(_:_:)(v7, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v49 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DD3A0 != -1)
    swift_once(&qword_1013DD3A0, sub_1008B749C);
  v26 = sub_1004F2A1C(v18, (uint64_t)qword_10147FC30);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v28 = v23;
  v27(v23, v26, v18);
  v29 = type metadata accessor for Tips.EmptyDonation(0);
  v30 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v31 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v28, sub_1008B76A8, 0, v29, v30, v31);
  v32 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  if (qword_1013DD3D0 != -1)
    swift_once(&qword_1013DD3D0, sub_1008B7624);
  v33 = sub_1004F2A1C(v18, (uint64_t)qword_10147FCC0);
  v27(v28, v33, v18);
  Tips.Rule.init<A>(_:_:)(v28, sub_1008B7A1C, 0, v29, v30, v31);
  v34 = static Tips.RuleBuilder.buildExpression(_:)(v11);
  v15(v11, v8);
  v35 = static Tips.RuleBuilder.buildPartialBlock(first:)(v54);
  v36 = swift_bridgeObjectRelease();
  v37 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v35, v52, v36);
  swift_bridgeObjectRelease();
  v38 = swift_bridgeObjectRelease();
  v39 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v37, v51, v38);
  swift_bridgeObjectRelease();
  v40 = swift_bridgeObjectRelease();
  v41 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v39, v50, v40);
  swift_bridgeObjectRelease();
  v42 = swift_bridgeObjectRelease();
  v43 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v41, v49, v42);
  swift_bridgeObjectRelease();
  v44 = swift_bridgeObjectRelease();
  v45 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v43, v32, v44);
  swift_bridgeObjectRelease();
  v46 = swift_bridgeObjectRelease();
  v47 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v45, v34, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v47;
}

uint64_t sub_1008B85F8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_1004CB6A4(a2);
    a3();
    sub_1004CBA30(&qword_1013E6DE0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008B867C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
    return ((uint64_t (*)(void))((char *)&loc_1008B86A8 + dword_1008B8724[*(_QWORD *)(v1 + 48) >> 62]))();
  else
    return 16;
}

_QWORD *sub_1008B8734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD **v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  __int128 *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  __int128 *v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v2);
  v62 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(0);
  __chkstk_darwin(v4);
  v63 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLProto_Data(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v69 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (__int128 *)((char *)&v54 - v10);
  __chkstk_darwin(v11);
  v60 = (__int128 *)((char *)&v54 - v12);
  __chkstk_darwin(v13);
  v15 = (__int128 *)((char *)&v54 - v14);
  v16 = type metadata accessor for CRLProto_RealTimeMessage(0);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18[1] = _swiftEmptyArrayStorage;
  UnknownStorage.init()(v19);
  v20 = *(_QWORD *)(v1 + 24);
  *v18 = *(_QWORD *)(v1 + 16);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v54 = v16;
    v58 = v6;
    v56 = v18;
    swift_bridgeObjectRetain(v20);
    v55 = v22;
    v23 = (_QWORD **)(v22 + 48);
    v24 = _swiftEmptyArrayStorage;
    v25 = xmmword_100EF78C0;
    v26 = v71;
    v70 = xmmword_100EF78C0;
    v68 = v15;
    v59 = v4;
    v57 = v7;
    while (1)
    {
      v64 = v21;
      v67 = v24;
      v71 = v26;
      v27 = (uint64_t)*(v23 - 1);
      v0 = *v23;
      v28 = (uint64_t)*(v23 - 2);
      *v15 = v25;
      v29 = v7;
      v30 = v58;
      v31 = v27;
      v32 = sub_1004BE310(v27, (unint64_t)v0);
      v33 = UnknownStorage.init()(v32);
      v34 = v63;
      UnknownStorage.init()(v33);
      v35 = (uint64_t)v34 + *(int *)(v4 + 24);
      v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v37 = v36(v35, 1, 1, v30);
      *v34 = v28;
      v38 = (uint64_t)v60;
      *v60 = v70;
      UnknownStorage.init()(v37);
      sub_10078F968(v35);
      sub_100552FCC(v38, v35);
      v36(v35, 0, 1, v30);
      v39 = v62;
      sub_100552F84(v35, v62);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v39, 1, v30) == 1)
      {
        v40 = v61;
        *v61 = v70;
        v41 = sub_1004BE310(v31, (unint64_t)v0);
        v34 = v63;
        UnknownStorage.init()(v41);
        sub_10078F968(v39);
      }
      else
      {
        v40 = v61;
        sub_100552FCC(v39, (uint64_t)v61);
        sub_1004BE310(v31, (unint64_t)v0);
      }
      v42 = v71;
      sub_1004BBBC8(*(_QWORD *)v40, *((_QWORD *)v40 + 1));
      v65 = v31;
      v66 = v0;
      *(_QWORD *)v40 = v31;
      *((_QWORD *)v40 + 1) = v0;
      sub_10078F968(v35);
      sub_100552FCC((uint64_t)v40, v35);
      v36(v35, 0, 1, v30);
      v43 = sub_1004B7878(&qword_1013F8428, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F24078);
      v4 = v59;
      v44 = Message.serializedData(partial:)(0, v59, v43);
      v26 = v42;
      if (v42)
        break;
      v46 = v44;
      v47 = v45;
      sub_1004B84A4((uint64_t)v34, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
      v0 = v68;
      sub_1004BBBC8(*(_QWORD *)v68, *((_QWORD *)v68 + 1));
      *v0 = v46;
      v0[1] = v47;
      sub_1008B925C((uint64_t)v0, v69);
      v24 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0)
        v24 = (_QWORD *)sub_100D1075C(0, v24[2] + 1, 1, (unint64_t)v24);
      v7 = v57;
      v49 = v24[2];
      v48 = v24[3];
      if (v49 >= v48 >> 1)
        v24 = (_QWORD *)sub_100D1075C(v48 > 1, v49 + 1, 1, (unint64_t)v24);
      v23 += 3;
      v24[2] = v49 + 1;
      sub_100552FCC(v69, (uint64_t)v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v49);
      sub_1004BBBC8(v65, (unint64_t)v66);
      v15 = v68;
      sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLProto_Data);
      v21 = v64 - 1;
      v25 = v70;
      if (v64 == 1)
      {
        v71 = 0;
        swift_bridgeObjectRelease(v55);
        v18 = v56;
        v16 = v54;
        goto LABEL_15;
      }
    }
    sub_1004B84A4((uint64_t)v34, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
    sub_1004BBBC8(v65, (unint64_t)v66);
    swift_bridgeObjectRelease(v67);
    swift_bridgeObjectRelease(v55);
    sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLProto_Data);
    v18 = v56;
  }
  else
  {
    v24 = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease(v18[1]);
    v18[1] = v24;
    v50 = sub_1004B7878(&qword_1013F8430, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23F10);
    v51 = v71;
    v52 = Message.serializedData(partial:)(0, v16, v50);
    if (!v51)
    {
      v0 = (_QWORD *)v52;
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLProto_RealTimeMessage);
      return v0;
    }
  }
  sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLProto_RealTimeMessage);
  return v0;
}

uint64_t sub_1008B8C9C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365676E616863;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_1008B8CD0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1008B99F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008B8CF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008B9128();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008B8D1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008B9128();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008B8D44()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLRealTimeMessage()
{
  return objc_opt_self(_TtC8Freeform18CRLRealTimeMessage);
}

uint64_t sub_1008B8D88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F8410);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1008B9128();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLRealTimeMessage.CodingKeys, &type metadata for CRLRealTimeMessage.CodingKeys, v11, v9, v10);
  v12 = *(_QWORD *)(v3 + 16);
  v19 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, &v19, v5);
  if (!v2)
  {
    v18 = *(_QWORD *)(v3 + 24);
    v17 = 1;
    v13 = sub_1004B804C(&qword_1013F83F8);
    v14 = sub_1008B91B0(&qword_1013F8418, (void (*)(void))sub_1008B9218, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v17, v5, v13, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *sub_1008B8ED8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  char v18;
  char v19;

  v3 = v1;
  v5 = *v1;
  v17[0] = sub_1004B804C(&qword_1013F83E8);
  v6 = *(_QWORD *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1008B9128();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLRealTimeMessage.CodingKeys, &type metadata for CRLRealTimeMessage.CodingKeys, v11, v9, v10);
  if (v2)
  {
    swift_deallocPartialClassInstance(v1, v5, 32, 7);
  }
  else
  {
    v12 = v6;
    v19 = 0;
    v13 = v17[0];
    v1[2] = KeyedDecodingContainer.decode(_:forKey:)(&v19, v17[0]);
    v14 = sub_1004B804C(&qword_1013F83F8);
    v18 = 1;
    v15 = sub_1008B91B0(&qword_1013F8400, (void (*)(void))sub_1008B916C, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v14, &v18, v13, v14, v15);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v13);
    v3[3] = v17[1];
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v3;
}

_QWORD *sub_1008B9088@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *result;

  v6 = swift_allocObject(v2, 32, 7);
  result = sub_1008B8ED8(a1);
  if (!v3)
    *a2 = v6;
  return result;
}

uint64_t sub_1008B90DC(_QWORD *a1)
{
  return sub_1008B8D88(a1);
}

uint64_t sub_1008B90FC(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16))
    return sub_100546394(*(_QWORD *)(*(_QWORD *)a1 + 24), *(_QWORD *)(*(_QWORD *)a2 + 24));
  else
    return 0;
}

unint64_t sub_1008B9128()
{
  unint64_t result;

  result = qword_1013F83F0;
  if (!qword_1013F83F0)
  {
    result = swift_getWitnessTable(&unk_100F13870, &type metadata for CRLRealTimeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F83F0);
  }
  return result;
}

unint64_t sub_1008B916C()
{
  unint64_t result;

  result = qword_1013F8408;
  if (!qword_1013F8408)
  {
    result = swift_getWitnessTable(&unk_100F166A0, &type metadata for CRLRealTimeOpaqueChangeRecord);
    atomic_store(result, (unint64_t *)&qword_1013F8408);
  }
  return result;
}

uint64_t sub_1008B91B0(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1004CB6A4(&qword_1013F83F8);
    a2();
    result = swift_getWitnessTable(a3, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008B9218()
{
  unint64_t result;

  result = qword_1013F8420;
  if (!qword_1013F8420)
  {
    result = swift_getWitnessTable(&unk_100F16678, &type metadata for CRLRealTimeOpaqueChangeRecord);
    atomic_store(result, (unint64_t *)&qword_1013F8420);
  }
  return result;
}

uint64_t sub_1008B925C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B92A0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  _QWORD *v52;
  __n128 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  _QWORD *v76;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v4);
  v69 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(0);
  __chkstk_darwin(v72);
  v70 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for CRLProto_Data(0);
  v7 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v9 = (uint64_t *)((char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v56 - v12);
  v14 = type metadata accessor for BinaryDecodingOptions(0, v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v56 - v18;
  v20 = type metadata accessor for CRLProto_RealTimeMessage(0);
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = 0;
  v73 = 0u;
  v74 = 0u;
  v23 = sub_1004BE310(a1, a2);
  BinaryDecodingOptions.init()(v23);
  v24 = sub_1004B7878(&qword_1013F8430, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23F10);
  v25 = v76;
  Message.init(serializedData:extensions:partial:options:)(a1, a2, &v73, 0, v19, v20, v24);
  v26 = v25;
  if (v25)
    return sub_1004BBBC8(a1, a2);
  v65 = v16;
  v66 = v13;
  v64 = v9;
  v67 = v7;
  v29 = *v22;
  v28 = v22[1];
  v30 = *(_QWORD *)(v28 + 16);
  if (v30)
  {
    v57 = *v22;
    v58 = v22;
    v59 = v28;
    v60 = a1;
    v61 = a2;
    v31 = v67;
    v32 = v28 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    v63 = *(_QWORD *)(v67 + 72);
    swift_bridgeObjectRetain(v28);
    v76 = _swiftEmptyArrayStorage;
    v62 = xmmword_100EF78C0;
    while (1)
    {
      v33 = v66;
      sub_1008B925C(v32, (uint64_t)v66);
      v35 = *v33;
      v34 = v33[1];
      sub_1004BE310(*v33, v34);
      sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLProto_Data);
      v75 = 0;
      v73 = 0u;
      v74 = 0u;
      v36 = sub_1004BE310(v35, v34);
      v37 = v65;
      BinaryDecodingOptions.init()(v36);
      v38 = sub_1004B7878(&qword_1013F8428, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F24078);
      v39 = (uint64_t *)v70;
      Message.init(serializedData:extensions:partial:options:)(v35, v34, &v73, 0, v37, v72, v38);
      if (v26)
      {
        sub_1004BBBC8(v35, v34);
        goto LABEL_20;
      }
      v40 = *v39;
      if ((unint64_t)*v39 >= 6)
        break;
      v71 = 0;
      v41 = v69;
      sub_100552F84((uint64_t)v39 + *(int *)(v72 + 24), v69);
      v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v41, 1, v68);
      v43 = v64;
      if ((_DWORD)v42 == 1)
      {
        *(_OWORD *)v64 = v62;
        UnknownStorage.init()(v42);
        sub_10078F968(v41);
      }
      else
      {
        sub_100552FCC(v41, (uint64_t)v64);
      }
      sub_1004BBBC8(v35, v34);
      sub_1004B84A4((uint64_t)v39, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
      v44 = *v43;
      v45 = v43[1];
      sub_1004BE310(*v43, v45);
      sub_1004B84A4((uint64_t)v43, type metadata accessor for CRLProto_Data);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v76);
      v26 = v71;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v31 = v67;
        v47 = v76;
      }
      else
      {
        v47 = sub_100D10610(0, v76[2] + 1, 1, v76);
        v31 = v67;
      }
      v49 = v47[2];
      v48 = v47[3];
      if (v49 >= v48 >> 1)
        v47 = sub_100D10610((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
      v47[2] = v49 + 1;
      v76 = v47;
      v50 = &v47[3 * v49];
      v50[4] = v40;
      v50[5] = v44;
      v50[6] = v45;
      v32 += v63;
      if (!--v30)
      {
        sub_1004BBBC8(v60, v61);
        swift_bridgeObjectRelease(v59);
        v22 = v58;
        v54 = v76;
        v29 = v57;
        goto LABEL_21;
      }
    }
    v51 = sub_1008B980C();
    swift_allocError(&type metadata for CRLRealTimeOpaqueChangeRecord.ProtobufCodingError, v51, 0, 0);
    *v52 = v40;
    swift_willThrow(v53);
    sub_1004BBBC8(v35, v34);
    sub_1004B84A4((uint64_t)v39, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
LABEL_20:
    sub_1004BBBC8(v60, v61);
    swift_bridgeObjectRelease(v76);
    swift_bridgeObjectRelease(v59);
    return sub_1004B84A4((uint64_t)v58, type metadata accessor for CRLProto_RealTimeMessage);
  }
  else
  {
    swift_bridgeObjectRetain(v22[1]);
    sub_1004BBBC8(a1, a2);
    swift_bridgeObjectRelease(v28);
    v54 = _swiftEmptyArrayStorage;
LABEL_21:
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_RealTimeMessage);
    v55 = type metadata accessor for CRLRealTimeMessage();
    result = swift_allocObject(v55, 32, 7);
    *(_QWORD *)(result + 16) = v29;
    *(_QWORD *)(result + 24) = v54;
  }
  return result;
}

unint64_t sub_1008B980C()
{
  unint64_t result;

  result = qword_1013F8438;
  if (!qword_1013F8438)
  {
    result = swift_getWitnessTable(&unk_100F167B8, &type metadata for CRLRealTimeOpaqueChangeRecord.ProtobufCodingError);
    atomic_store(result, (unint64_t *)&qword_1013F8438);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1008B989C + 4 * byte_100F136C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1008B98D0 + 4 * byte_100F136C0[v4]))();
}

uint64_t sub_1008B98D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008B98D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1008B98E0);
  return result;
}

uint64_t sub_1008B98EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1008B98F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1008B98F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1008B9900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeMessage.CodingKeys()
{
  return &type metadata for CRLRealTimeMessage.CodingKeys;
}

unint64_t sub_1008B9920()
{
  unint64_t result;

  result = qword_1013F8440;
  if (!qword_1013F8440)
  {
    result = swift_getWitnessTable(&unk_100F13848, &type metadata for CRLRealTimeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8440);
  }
  return result;
}

unint64_t sub_1008B9968()
{
  unint64_t result;

  result = qword_1013F8448;
  if (!qword_1013F8448)
  {
    result = swift_getWitnessTable(")\x1B7", &type metadata for CRLRealTimeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8448);
  }
  return result;
}

unint64_t sub_1008B99B0()
{
  unint64_t result;

  result = qword_1013F8450;
  if (!qword_1013F8450)
  {
    result = swift_getWitnessTable(&unk_100F137E0, &type metadata for CRLRealTimeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8450);
  }
  return result;
}

uint64_t sub_1008B99F4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7365676E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7365676E616863, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_1008B9B34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLObservableDelta();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLObservableDelta()
{
  return objc_opt_self(_TtC8Freeform18CRLObservableDelta);
}

void __swiftcall CRLCanvas.textRenderer(forLayer:context:)(CRLWPRenderer *__return_ptr retstr, CALayer_optional forLayer, CGContextRef context)
{
  if (!objc_msgSend(objc_allocWithZone((Class)CRLWPRenderer), "initWithContext:", *(_QWORD *)&forLayer.is_nil))__break(1u);
}

void CRLWPRep.hyperlinkRegions.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  uint64_t *v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  NSURL *v45;
  void *v46;
  void *v47;
  id v48;
  NSString v49;
  NSString v50;
  id v51;
  id v52;
  void *v53;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  void *v67;
  id v69;
  id v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  id v81;
  id v82;
  NSURL *v83;
  void *v84;
  void *v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t, uint64_t);
  id v111;
  unint64_t v112;
  unint64_t v113;
  id v114;
  char *v115;
  _BYTE v116[32];
  objc_super v117;
  uint64_t v118;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v98 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v93 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v92 - v5;
  v7 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v7);
  v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v92 - v11;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E87D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  v108 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)&v17 = __chkstk_darwin(v16).n128_u64[0];
  v105 = (uint64_t)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117.receiver = v0;
  v117.super_class = (Class)CRLWPRep;
  v19 = objc_msgSendSuper2(&v117, "hyperlinkRegions", v17);
  v20 = sub_1004B8930(0, &qword_1013F8488, off_1012298E0);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  v118 = v21;
  v22 = objc_msgSend(v1, "storage");
  v97 = v1;
  v23 = objc_msgSend(v1, "range");
  v25 = objc_msgSend(v22, "smartFieldsWithAttributeKind:intersectingRange:", 6, v23, v24);

  v107 = (char *)&type metadata for Any + 8;
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, (char *)&type metadata for Any + 8);

  v106 = *(_QWORD *)(v26 + 16);
  if (!v106)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    return;
  }
  v103 = v16;
  v104 = v15;
  v94 = v12;
  v95 = v9;
  v115 = v6;
  v27 = 0;
  v102 = v26 + 32;
  v96 = v2;
  v28 = v98;
  v101 = v26;
  while (1)
  {
    if (v27 >= *(_QWORD *)(v26 + 16))
      goto LABEL_51;
    v113 = v27;
    sub_1004CB6E8(v102 + 32 * v27, (uint64_t)v116);
    v32 = v103;
    v31 = (uint64_t)v104;
    v33 = swift_dynamicCast(v104, v116, v107, v103, 6);
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v108 + 56);
    if ((v33 & 1) != 0)
      break;
    v34(v31, 1, 1, v32);
    v29 = v31;
    v30 = (uint64_t *)&unk_1013E87D0;
LABEL_4:
    sub_1004CB800(v29, v30);
LABEL_5:
    v27 = v113 + 1;
    v26 = v101;
    if (v113 + 1 == v106)
      goto LABEL_48;
  }
  v34(v31, 0, 1, v32);
  v35 = v105;
  sub_1007EC108(v31, v105);
  v36 = objc_msgSend(v97, "storage");
  v37 = (uint64_t *)(v35 + *(int *)(v32 + 24));
  v38 = v37[1];
  v111 = (id)*v37;
  v39 = (void *)sub_1007DC71C((uint64_t)v111, v38);
  v41 = v40;
  v42 = v35 + *(int *)(v32 + 20);
  v43 = (uint64_t)v94;
  sub_1005773FC(v42, (uint64_t)v94);
  v114 = v39;
  v112 = v41;
  v44 = objc_msgSend(v36, "stringEquivalentFromRange:", v39, v41);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v44);

  v110 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v44) = v110(v43, 1, v2);
  swift_bridgeObjectRetain(v38);
  if ((_DWORD)v44 == 1)
  {
    v46 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v45);
    v46 = v47;
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v43, v2);
  }
  v48 = objc_allocWithZone((Class)CRLWPHyperlinkField);
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v50 = String._bridgeToObjectiveC()();
  v51 = objc_msgSend(v48, "initWithURL:range:displayText:uuidString:", v46, v114, v112, v49, v50, swift_bridgeObjectRelease().n128_f64[0]);

  v52 = objc_msgSend(v51, "url");
  if (!v52)
  {
    v28 = v98;
    v56 = (uint64_t)v95;
    v2 = v96;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v95, 1, 1, v96);
    goto LABEL_40;
  }
  v53 = v52;
  v54 = v93;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v52);

  v28 = v98;
  v55 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
  v56 = (uint64_t)v95;
  v2 = v96;
  v55(v95, v54, v96);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v56, 0, 1, v2);
  if (v110(v56, 1, v2) == 1)
  {
LABEL_40:

    sub_1008BA86C(v105);
    v29 = v56;
    v30 = &qword_1013E04D0;
    goto LABEL_4;
  }
  v57 = v115;
  v55(v115, (char *)v56, v2);
  v58 = objc_msgSend(v51, "range");
  v114 = objc_msgSend(objc_allocWithZone((Class)CRLWPSelection), "initWithRange:", v58, v59);
  if (!v114)
  {

    (*(void (**)(char *, uint64_t))(v28 + 8))(v57, v2);
    goto LABEL_47;
  }
  v60 = objc_msgSend(objc_allocWithZone((Class)CRLBezierPath), "init");
  v61 = objc_msgSend(v97, "columns");
  v62 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
  v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v61, v62);

  v109 = v63;
  if (!((unint64_t)v63 >> 62))
  {
    v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v64)
      goto LABEL_16;
LABEL_46:

    swift_bridgeObjectRelease();
    v28 = v98;
    v2 = v96;
    (*(void (**)(char *, uint64_t))(v98 + 8))(v115, v96);
LABEL_47:
    sub_1008BA86C(v105);
    goto LABEL_5;
  }
  if (v63 < 0)
    v91 = v63;
  else
    v91 = v63 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v63);
  v64 = _CocoaArrayWrapper.endIndex.getter(v91);
  swift_bridgeObjectRelease();
  if (!v64)
    goto LABEL_46;
LABEL_16:
  v65 = 0;
  v112 = v109 & 0xC000000000000001;
  v100 = v109 & 0xFFFFFFFFFFFFFF8;
  v99 = v109 + 32;
  v110 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v64;
  v111 = v51;
  while (2)
  {
    if (v112)
    {
      v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v65, v109);
    }
    else
    {
      if (v65 >= *(_QWORD *)(v100 + 16))
        goto LABEL_52;
      v66 = *(id *)(v99 + 8 * v65);
    }
    v67 = v66;
    if (!__OFADD__(v65++, 1))
    {
      v69 = v114;
      v70 = objc_msgSend(v114, "range");
      v72 = objc_msgSend(v67, "rectsForSelectionRange:selectionType:forParagraphMode:includeRuby:includePaginatedAttachments:", v70, v71, objc_msgSend(v69, "type"), 0, 0, 0);
      if (!v72)
        goto LABEL_53;
      v73 = v72;
      v74 = sub_1004B8930(0, (unint64_t *)&qword_10140B930, NSValue_ptr);
      v75 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v73, v74);

      if ((unint64_t)v75 >> 62)
      {
        if (v75 < 0)
          v80 = v75;
        else
          v80 = v75 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v75);
        v76 = _CocoaArrayWrapper.endIndex.getter(v80);
        swift_bridgeObjectRelease();
        if (v76)
        {
LABEL_25:
          if (v76 < 1)
            goto LABEL_50;
          v77 = 0;
          do
          {
            if ((v75 & 0xC000000000000001) != 0)
              v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v77, v75);
            else
              v78 = *(id *)(v75 + 8 * v77 + 32);
            v79 = v78;
            ++v77;
            objc_msgSend(v78, "CGRectValue");
            objc_msgSend(v60, "appendBezierPathWithRect:");

          }
          while (v76 != v77);
        }
      }
      else
      {
        v76 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v76)
          goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      v81 = objc_allocWithZone((Class)CRLHyperlinkRegion);
      v82 = v60;
      URL._bridgeToObjectiveC()(v83);
      v85 = v84;
      v86 = objc_msgSend(v81, "initWithURL:bezierPath:", v84, v82);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v87);
      v89 = *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v88 = *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v89 >= v88 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
      v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v86);
      specialized Array._endMutation()(v90);

      v51 = v111;
      if ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v65 == v110)
        goto LABEL_46;
      continue;
    }
    break;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
}

void sub_1008BA61C()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v9;
  id v10;
  void *v11;
  _BOOL4 v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  uint64_t v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v1 = objc_msgSend(v0, "columns");
  v2 = sub_1004B8930(0, (unint64_t *)&unk_1013E8560, off_101229A08);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v21 = v3;
    else
      v21 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  x = CGRectNull.origin.x;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  if (!v4)
    goto LABEL_12;
  if (v4 >= 1)
  {
    v9 = 0;
    v24 = CGRectNull.origin.y;
    v22 = CGRectNull.size.height;
    v23 = CGRectNull.size.width;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v3);
      else
        v10 = *(id *)(v3 + 8 * v9 + 32);
      v11 = v10;
      v25.origin.x = x;
      v25.origin.y = y;
      v25.size.width = width;
      v25.size.height = height;
      v28.origin.y = v24;
      v28.origin.x = CGRectNull.origin.x;
      v28.size.height = v22;
      v28.size.width = v23;
      v12 = CGRectEqualToRect(v25, v28);
      objc_msgSend(v11, "typographicBounds");
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;
      if (!v12)
      {
        v26.origin.x = x;
        v26.origin.y = y;
        v26.size.width = width;
        v26.size.height = height;
        v29.origin.x = v14;
        v29.origin.y = v16;
        v29.size.width = v18;
        v29.size.height = v20;
        v27 = CGRectUnion(v26, v29);
        v14 = v27.origin.x;
        v16 = v27.origin.y;
        v18 = v27.size.width;
        v20 = v27.size.height;
      }
      ++v9;

      x = v14;
      y = v16;
      width = v18;
      height = v20;
    }
    while (v4 != v9);
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

uint64_t sub_1008BA86C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for CRLStrokeData(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[12]);
  v2 = a1[18];
  if (v2)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(a1[20]);
  }
  swift_bridgeObjectRelease(a1[23]);
  v3 = a1[25];
  if (v3)
  {
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(a1[27]);
  }
  return swift_bridgeObjectRelease(a1[28]);
}

uint64_t initializeWithCopy for CRLStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v5;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v6;
  *(_QWORD *)(a1 + 96) = v7;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v8;
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  v10 = a2 + 144;
  v9 = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (v9)
  {
    *(_QWORD *)(a1 + 144) = v9;
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    v11 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 160) = v11;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v11);
  }
  else
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v10;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(v10 + 16);
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v12;
  v13 = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain(v12);
  if (v13)
  {
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v13;
    *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
    *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
    v14 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 216) = v14;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v15;
  }
  v16 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 224) = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t assignWithCopy for CRLStrokeData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  v5 = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
  v6 = a2[6];
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
  v7 = a2[9];
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
  v8 = a2[11];
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  v9 = a2[12];
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease();
  v10 = (_OWORD *)(a1 + 144);
  v11 = *(_QWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
  v12 = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 112) = v12;
  v13 = a2[16];
  *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
  *(_QWORD *)(a1 + 128) = v13;
  *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
  v15 = a2 + 18;
  v14 = a2[18];
  if (v11)
  {
    if (v14)
    {
      *(_QWORD *)(a1 + 144) = v14;
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      v16 = a2[20];
      *(_QWORD *)(a1 + 160) = v16;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008BAD90((_QWORD *)(a1 + 144));
      v18 = a2[20];
      *v10 = *v15;
      *(_QWORD *)(a1 + 160) = v18;
    }
  }
  else if (v14)
  {
    *(_QWORD *)(a1 + 144) = v14;
    *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
    v17 = a2[20];
    *(_QWORD *)(a1 + 160) = v17;
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v17);
  }
  else
  {
    v19 = *v15;
    *(_QWORD *)(a1 + 160) = a2[20];
    *v10 = v19;
  }
  v20 = a2[21];
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  *(_QWORD *)(a1 + 168) = v20;
  v21 = a2[23];
  *(_QWORD *)(a1 + 184) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease();
  v22 = (_OWORD *)(a1 + 192);
  v23 = a2 + 24;
  v24 = a2[25];
  if (*(_QWORD *)(a1 + 200))
  {
    if (v24)
    {
      *(_QWORD *)(a1 + 192) = a2[24];
      v25 = a2[25];
      *(_QWORD *)(a1 + 200) = v25;
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
      v26 = a2[27];
      *(_QWORD *)(a1 + 216) = v26;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008BADC0(a1 + 192);
      v29 = *((_OWORD *)a2 + 13);
      *v22 = *v23;
      *(_OWORD *)(a1 + 208) = v29;
    }
  }
  else if (v24)
  {
    *(_QWORD *)(a1 + 192) = a2[24];
    v27 = a2[25];
    *(_QWORD *)(a1 + 200) = v27;
    *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
    *(_BYTE *)(a1 + 212) = *((_BYTE *)a2 + 212);
    v28 = a2[27];
    *(_QWORD *)(a1 + 216) = v28;
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v28);
  }
  else
  {
    v30 = *((_OWORD *)a2 + 13);
    *v22 = *v23;
    *(_OWORD *)(a1 + 208) = v30;
  }
  v31 = a2[28];
  *(_QWORD *)(a1 + 224) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1008BAD90(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[2]);
  return a1;
}

uint64_t sub_1008BADC0(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

__n128 initializeWithTake for CRLStrokeData(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[13];
  *(_QWORD *)(a1 + 224) = *((_QWORD *)a2 + 28);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for CRLStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 36) = *(_QWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1008BAD90((_QWORD *)(a1 + 144));
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_6:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 200))
  {
LABEL_10:
    v7 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v7;
    goto LABEL_11;
  }
  v6 = *(_QWORD *)(a2 + 200);
  if (!v6)
  {
    sub_1008BADC0(a1 + 192);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 212) = *(_BYTE *)(a2 + 212);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_11:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLStrokeData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 232))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLStrokeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 232) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 96) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 232) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStrokeData()
{
  return &type metadata for CRLStrokeData;
}

uint64_t destroy for CRLPencilKitInkStrokeData(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for CRLPencilKitInkStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for CRLPencilKitInkStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t assignWithTake for CRLPencilKitInkStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLPencilKitInkStrokeData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLPencilKitInkStrokeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPencilKitInkStrokeData()
{
  return &type metadata for CRLPencilKitInkStrokeData;
}

uint64_t destroy for CRLStrokePatternData(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t _s8Freeform20CRLStrokePatternDataVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
  v4 = a2[2];
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for CRLStrokePatternData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t *assignWithTake for CRLStrokePatternData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for CRLStrokePatternData()
{
  return &type metadata for CRLStrokePatternData;
}

BOOL sub_1008BB3D8(char *a1, char *a2)
{
  return qword_100F15010[*a1] == qword_100F15010[*a2];
}

Swift::Int sub_1008BB3FC()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F15010[v1]);
  return Hasher._finalize()();
}

void sub_1008BB448()
{
  char *v0;

  Hasher._combine(_:)(qword_100F15010[*v0]);
}

Swift::Int sub_1008BB47C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F15010[v2]);
  return Hasher._finalize()();
}

void sub_1008BB4C4(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F15010[*v1];
}

uint64_t sub_1008BB4DC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6573616870;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x6E726574746170;
}

uint64_t sub_1008BB538@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1008BFCFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008BB55C()
{
  char *v0;

  return qword_100F15010[*v0];
}

void sub_1008BB574(_QWORD *a1@<X8>)
{
  *a1 = &off_101263F98;
}

uint64_t sub_1008BB584(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1008BBBA0, (uint64_t (*)(void))sub_1008BBBE8);
}

uint64_t sub_1008BB598(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BBBE8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008BB5C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BBBE8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008BB5E8(_QWORD *a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v9 = sub_1004B804C(&qword_1013F86C0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_1004BB5A4(a1, v13);
  v15 = sub_1008BBBE8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLStrokePatternData.CodingKeys, &type metadata for CRLStrokePatternData.CodingKeys, v15, v13, v14);
  v22 = a2;
  HIBYTE(v21) = 0;
  v16 = sub_1004B804C(&qword_1013F86B0);
  v17 = sub_1008C17A4(&qword_1013F86C8, (uint64_t)&protocol witness table for Float, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, (char *)&v21 + 7, v9, v16, v17);
  if (!v4)
  {
    LOBYTE(v22) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(&v22, v9, a4);
    v22 = a3;
    HIBYTE(v21) = 2;
    v18 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v19 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, (char *)&v21 + 7, v9, v18, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1008BB794(uint64_t a1, uint64_t a2)
{
  float v2;
  uint64_t v3;
  float v4;
  uint64_t v5;

  v2 = *(float *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(float *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (sub_100544DA0(*(_QWORD *)a1, *(_QWORD *)a2) && v2 == v4)
    return sub_100C9E04C(v3, v5);
  else
    return 0;
}

void sub_1008BB800(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  float v6;

  v6 = sub_1008BFE44(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(float *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v5;
  }
}

uint64_t sub_1008BB830(_QWORD *a1)
{
  uint64_t v1;

  return sub_1008BB5E8(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 16), *(float *)(v1 + 8));
}

uint64_t sub_1008BB850(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C1804();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008BB890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008BBA38, (uint64_t (*)(void))sub_1008C1848);
}

uint64_t sub_1008BB8A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C1804();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1008BB8DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008BBCE4();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1008BB928(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008BBCE4();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1008BB96C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BBCE4();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_1008BB9A8()
{
  unint64_t result;

  result = qword_1013F8490;
  if (!qword_1013F8490)
  {
    result = swift_getWitnessTable("y 7", &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F8490);
  }
  return result;
}

unint64_t sub_1008BB9F0()
{
  unint64_t result;

  result = qword_1013F8498;
  if (!qword_1013F8498)
  {
    result = swift_getWitnessTable(&unk_100F139E0, &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F8498);
  }
  return result;
}

unint64_t sub_1008BBA38()
{
  unint64_t result;

  result = qword_1013F84A0;
  if (!qword_1013F84A0)
  {
    result = swift_getWitnessTable(&unk_100F13A90, &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F84A0);
  }
  return result;
}

unint64_t sub_1008BBA80()
{
  unint64_t result;

  result = qword_1013F84A8;
  if (!qword_1013F84A8)
  {
    result = swift_getWitnessTable(&unk_100F13A68, &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F84A8);
  }
  return result;
}

unint64_t sub_1008BBAC8()
{
  unint64_t result;

  result = qword_1013F84B0;
  if (!qword_1013F84B0)
  {
    result = swift_getWitnessTable(&unk_100F13A40, &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F84B0);
  }
  return result;
}

unint64_t sub_1008BBB10()
{
  unint64_t result;

  result = qword_1013F84B8;
  if (!qword_1013F84B8)
  {
    result = swift_getWitnessTable(&unk_100F13B10, &type metadata for CRLStrokePatternData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F84B8);
  }
  return result;
}

unint64_t sub_1008BBB58()
{
  unint64_t result;

  result = qword_1013F84C0;
  if (!qword_1013F84C0)
  {
    result = swift_getWitnessTable(&unk_100F13C20, &type metadata for CRLStrokePatternData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F84C0);
  }
  return result;
}

unint64_t sub_1008BBBA0()
{
  unint64_t result;

  result = qword_1013F84C8;
  if (!qword_1013F84C8)
  {
    result = swift_getWitnessTable(&unk_100F13BE8, &type metadata for CRLStrokePatternData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F84C8);
  }
  return result;
}

unint64_t sub_1008BBBE8()
{
  unint64_t result;

  result = qword_1013F84D0;
  if (!qword_1013F84D0)
  {
    result = swift_getWitnessTable(&unk_100F13B48, &type metadata for CRLStrokePatternData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F84D0);
  }
  return result;
}

unint64_t sub_1008BBC30()
{
  unint64_t result;

  result = qword_1013F84D8;
  if (!qword_1013F84D8)
  {
    result = swift_getWitnessTable(&unk_100F13BC0, &type metadata for CRLStrokePatternData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F84D8);
  }
  return result;
}

unint64_t sub_1008BBC78()
{
  unint64_t result;

  result = qword_1013F84E0;
  if (!qword_1013F84E0)
  {
    result = swift_getWitnessTable(&unk_100F13B98, &type metadata for CRLStrokePatternData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F84E0);
  }
  return result;
}

uint64_t sub_1008BBCBC()
{
  return sub_1006047EC(&qword_1013F84E8, &qword_1013F84F0);
}

unint64_t sub_1008BBCE4()
{
  unint64_t result;

  result = qword_1013F84F8;
  if (!qword_1013F84F8)
  {
    result = swift_getWitnessTable(&unk_100F13AC8, &type metadata for CRLStrokePatternData);
    atomic_store(result, (unint64_t *)&qword_1013F84F8);
  }
  return result;
}

id sub_1008BBD28(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  float v10;
  unint64_t v11;
  uint64_t v12;
  id v13;

  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(a1);
    sub_100600708(0, v7, 0);
    v8 = 0;
    v9 = _swiftEmptyArrayStorage[2];
    do
    {
      v10 = *(float *)(a1 + 4 * v8 + 32);
      v11 = _swiftEmptyArrayStorage[3];
      if (v9 >= v11 >> 1)
        sub_100600708(v11 > 1, v9 + 1, 1);
      ++v8;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      *(double *)&_swiftEmptyArrayStorage[v9++ + 4] = v10;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease_n(a1, 2);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
  }
  swift_bridgeObjectRelease(a2);
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3, v12)), "initWithPattern:count:phase:", &_swiftEmptyArrayStorage[4], _swiftEmptyArrayStorage[2], a3);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v13;
}

unint64_t sub_1008BBE74@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1008C0074(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1008BBE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE7D8();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1008BBEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE7D8();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1008BBF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008C2498, (uint64_t (*)(void))sub_1008C23F4);
}

uint64_t sub_1008BBF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_1008C2498, (uint64_t (*)(void))sub_1008BE7D8);
}

uint64_t sub_1008BBF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_1008C2498, (uint64_t (*)(void))sub_1008BE7D8);
}

uint64_t sub_1008BBFA0(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_1008C2498, (uint64_t (*)(void))sub_1008BE7D8);
}

uint64_t sub_1008BBFB4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x7274537472616D73;
}

uint64_t sub_1008BC000@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1008C0084(a1, a2);
  *a3 = result;
  return result;
}

void sub_1008BC024(_QWORD *a1@<X8>)
{
  *a1 = &off_101263EA0;
}

uint64_t sub_1008BC034(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1008C2100, (uint64_t (*)(void))sub_1008C2148);
}

uint64_t sub_1008BC048(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008C2148();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008BC070(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008C2148();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008BC098(_QWORD *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v21 = a4;
  v8 = sub_1004B804C(&qword_1013F87D8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v13 = a1[4];
  sub_1004BB5A4(a1, v12);
  v14 = sub_1008C2148();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLSmartStrokeData.CodingKeys, &type metadata for CRLSmartStrokeData.CodingKeys, v14, v12, v13);
  v22 = a2;
  v23 = a3 & 1;
  v24 = 0;
  v15 = sub_1004B804C(&qword_1013F86E0);
  v16 = sub_1008C2438(&qword_1013F87E0, &qword_1013F86E0, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v24, v8, v15, v16);
  if (!v4)
  {
    v22 = v21;
    v24 = 1;
    v17 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v18 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v24, v8, v17, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1008BC220(uint64_t *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v2 = *((_BYTE *)a1 + 8);
  v3 = a1[2];
  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = a2[2];
  v12 = *a1;
  v13 = v2;
  v10 = v4;
  v11 = v5;
  v7 = sub_1008BE7D8();
  if ((static CRExtensible.== infix(_:_:)(&v12, &v10, &type metadata for CRLSmartStrokeData.SmartStrokeType, v7, &protocol witness table for Int, &protocol witness table for Int) & 1) != 0)v8 = sub_100C9E04C(v3, v6);
  else
    v8 = 0;
  return v8 & 1;
}

uint64_t sub_1008BC2B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;
  uint64_t v6;

  result = sub_1008C0194(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1008BC2E4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1008BC098(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1008BC30C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C24DC();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008BC34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008C2020, (uint64_t (*)(void))sub_1008C2520);
}

uint64_t sub_1008BC360(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C24DC();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1008BC398(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C2244();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1008BC3E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C2244();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1008BC428(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008C2244();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

BOOL sub_1008BC460(char *a1, char *a2)
{
  return qword_100F15028[*a1] == qword_100F15028[*a2];
}

Swift::Int sub_1008BC484()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F15028[v1]);
  return Hasher._finalize()();
}

void sub_1008BC4D0()
{
  char *v0;

  Hasher._combine(_:)(qword_100F15028[*v0]);
}

Swift::Int sub_1008BC504(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F15028[v2]);
  return Hasher._finalize()();
}

void sub_1008BC54C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F15028[*v1];
}

uint64_t sub_1008BC564()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1008BC594 + 4 * byte_100F13900[*v0]))(0x657079546B6E69, 0xE700000000000000);
}

uint64_t sub_1008BC594()
{
  return 0x6874646977;
}

unint64_t sub_1008BC5A8()
{
  return 0xD000000000000012;
}

unint64_t sub_1008BC5C8()
{
  return 0xD000000000000010;
}

uint64_t sub_1008BC5E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1008C034C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008BC608()
{
  char *v0;

  return qword_100F15028[*v0];
}

void sub_1008BC620(_QWORD *a1@<X8>)
{
  *a1 = &off_101264208;
}

uint64_t sub_1008BC630(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1008BCC54, (uint64_t (*)(void))sub_1008BCC9C);
}

uint64_t sub_1008BC644(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BCC9C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008BC66C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BCC9C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008BC694(_QWORD *a1)
{
  float *v1;
  uint64_t v2;
  float *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F8690);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1008BCC9C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLPencilKitInkStrokeData.CodingKeys, &type metadata for CRLPencilKitInkStrokeData.CodingKeys, v11, v9, v10);
  v12 = *(_QWORD *)v3;
  v13 = *((_QWORD *)v3 + 1);
  v24 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v24, v5);
  if (!v2)
  {
    v14 = v3[4];
    v23 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(&v23, v5, v14);
    v15 = *((unsigned __int8 *)v3 + 20);
    v22 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, &v22, v5);
    v21 = *((_QWORD *)v3 + 3);
    v20 = 3;
    v16 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v17 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1008BC81C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  _OWORD v6[2];

  v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  return sub_1008BE08C((float *)v5, (uint64_t)v6) & 1;
}

double sub_1008BC854@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];

  sub_1008C04F0(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1008BC88C(_QWORD *a1)
{
  return sub_1008BC694(a1);
}

uint64_t sub_1008BC8BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C171C();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008BC8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1008BCAEC();
  v7 = sub_1008C1760();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008BC958(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C171C();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1008BC990(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008BCD98();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1008BC9DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008BCD98();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1008BCA20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BCD98();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_1008BCA5C()
{
  unint64_t result;

  result = qword_1013F8500;
  if (!qword_1013F8500)
  {
    result = swift_getWitnessTable(&unk_100F13CB0, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8500);
  }
  return result;
}

unint64_t sub_1008BCAA4()
{
  unint64_t result;

  result = qword_1013F8508;
  if (!qword_1013F8508)
  {
    result = swift_getWitnessTable(&unk_100F13CF8, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8508);
  }
  return result;
}

unint64_t sub_1008BCAEC()
{
  unint64_t result;

  result = qword_1013F8510;
  if (!qword_1013F8510)
  {
    result = swift_getWitnessTable(&unk_100F13DA8, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8510);
  }
  return result;
}

unint64_t sub_1008BCB34()
{
  unint64_t result;

  result = qword_1013F8518;
  if (!qword_1013F8518)
  {
    result = swift_getWitnessTable(&unk_100F13D80, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8518);
  }
  return result;
}

unint64_t sub_1008BCB7C()
{
  unint64_t result;

  result = qword_1013F8520;
  if (!qword_1013F8520)
  {
    result = swift_getWitnessTable(&unk_100F13D58, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8520);
  }
  return result;
}

unint64_t sub_1008BCBC4()
{
  unint64_t result;

  result = qword_1013F8528;
  if (!qword_1013F8528)
  {
    result = swift_getWitnessTable(&unk_100F13E28, &type metadata for CRLPencilKitInkStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8528);
  }
  return result;
}

unint64_t sub_1008BCC0C()
{
  unint64_t result;

  result = qword_1013F8530;
  if (!qword_1013F8530)
  {
    result = swift_getWitnessTable(&unk_100F13F38, &type metadata for CRLPencilKitInkStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8530);
  }
  return result;
}

unint64_t sub_1008BCC54()
{
  unint64_t result;

  result = qword_1013F8538;
  if (!qword_1013F8538)
  {
    result = swift_getWitnessTable(&unk_100F13F00, &type metadata for CRLPencilKitInkStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8538);
  }
  return result;
}

unint64_t sub_1008BCC9C()
{
  unint64_t result;

  result = qword_1013F8540;
  if (!qword_1013F8540)
  {
    result = swift_getWitnessTable(&unk_100F13E60, &type metadata for CRLPencilKitInkStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8540);
  }
  return result;
}

unint64_t sub_1008BCCE4()
{
  unint64_t result;

  result = qword_1013F8548;
  if (!qword_1013F8548)
  {
    result = swift_getWitnessTable(&unk_100F13ED8, &type metadata for CRLPencilKitInkStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8548);
  }
  return result;
}

unint64_t sub_1008BCD2C()
{
  unint64_t result;

  result = qword_1013F8550;
  if (!qword_1013F8550)
  {
    result = swift_getWitnessTable(&unk_100F13EB0, &type metadata for CRLPencilKitInkStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8550);
  }
  return result;
}

uint64_t sub_1008BCD70()
{
  return sub_1006047EC(&qword_1013F8558, &qword_1013F8560);
}

unint64_t sub_1008BCD98()
{
  unint64_t result;

  result = qword_1013F8568;
  if (!qword_1013F8568)
  {
    result = swift_getWitnessTable(&unk_100F13DE0, &type metadata for CRLPencilKitInkStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8568);
  }
  return result;
}

uint64_t sub_1008BCDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE70C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1008BCE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE70C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1008BCE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008C25EC, (uint64_t (*)(void))sub_1008C1D98);
}

uint64_t sub_1008BCE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_1008C25EC, (uint64_t (*)(void))sub_1008BE70C);
}

uint64_t sub_1008BCEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_1008C25EC, (uint64_t (*)(void))sub_1008BE70C);
}

uint64_t sub_1008BCEE0(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_1008C25EC, (uint64_t (*)(void))sub_1008BE70C);
}

uint64_t sub_1008BCEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE750();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1008BCF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE750();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1008BCF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008C25A8, (uint64_t (*)(void))sub_1008C1E70);
}

uint64_t sub_1008BCFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_1008C25A8, (uint64_t (*)(void))sub_1008BE750);
}

uint64_t sub_1008BCFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_1008C25A8, (uint64_t (*)(void))sub_1008BE750);
}

uint64_t sub_1008BCFF8(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_1008C25A8, (uint64_t (*)(void))sub_1008BE750);
}

uint64_t sub_1008BD00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE794();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1008BD068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1008BE794();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1008BD0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100866188(a1, a2, a3, a4, (uint64_t (*)(void))sub_1008C2564, (uint64_t (*)(void))sub_1008C1F48);
}

uint64_t sub_1008BD0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD0EC(a1, a2, a3, (uint64_t (*)(void))sub_1008C2564, (uint64_t (*)(void))sub_1008BE794);
}

uint64_t sub_1008BD0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v8;
  uint64_t v9;

  v8 = a4();
  v9 = a5();
  return CRValue<>.init(from:)(a1, a2, v8, v9, &protocol witness table for Int);
}

uint64_t sub_1008BD158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008BD17C(a1, a2, a3, (uint64_t (*)(void))sub_1008C2564, (uint64_t (*)(void))sub_1008BE794);
}

uint64_t sub_1008BD17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v8;
  uint64_t v9;

  v8 = a4();
  v9 = a5();
  return CRValue<>.encode(to:)(a1, a2, v8, v9, &protocol witness table for Int);
}

uint64_t sub_1008BD1E0(uint64_t a1, uint64_t a2)
{
  return sub_1008BD1F4(a1, a2, (uint64_t (*)(void))sub_1008C2564, (uint64_t (*)(void))sub_1008BE794);
}

uint64_t sub_1008BD1F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;

  v6 = a3();
  v7 = a4();
  return CRValue<>.minEncodingVersion.getter(a1, v6, v7, &protocol witness table for Int);
}

uint64_t sub_1008BD24C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1008BD278 + 4 * byte_100F13904[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1008BD278()
{
  return 0x726F6C6F63;
}

uint64_t sub_1008BD28C()
{
  return 0x6874646977;
}

uint64_t sub_1008BD2A0()
{
  return 7364963;
}

uint64_t sub_1008BD2B0()
{
  return 1852403562;
}

uint64_t sub_1008BD2BC()
{
  return 0x6D694C726574696DLL;
}

uint64_t sub_1008BD2D8()
{
  return 0x6E726574746170;
}

uint64_t sub_1008BD2F0()
{
  return 0x7274537472616D73;
}

unint64_t sub_1008BD314()
{
  return 0xD000000000000016;
}

unint64_t sub_1008BD334()
{
  return 0xD000000000000010;
}

BOOL sub_1008BD350(char *a1, char *a2)
{
  return qword_100F15048[*a1] == qword_100F15048[*a2];
}

Swift::Int sub_1008BD374()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F15048[v1]);
  return Hasher._finalize()();
}

void sub_1008BD3C0()
{
  char *v0;

  Hasher._combine(_:)(qword_100F15048[*v0]);
}

Swift::Int sub_1008BD3F4(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F15048[v2]);
  return Hasher._finalize()();
}

uint64_t sub_1008BD43C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1008C0720(*a1);
  *a2 = result;
  return result;
}

void sub_1008BD464(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F15048[*v1];
}

uint64_t sub_1008BD47C()
{
  unsigned __int8 *v0;

  return sub_1008BD24C(*v0);
}

uint64_t sub_1008BD484@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1008C0744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008BD4A8()
{
  char *v0;

  return qword_100F15048[*v0];
}

uint64_t sub_1008BD4C0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1008C0720(a1);
  *a2 = result;
  return result;
}

void sub_1008BD4E4(_QWORD *a1@<X8>)
{
  *a1 = &off_101263B30;
}

uint64_t sub_1008BD4F4(uint64_t a1, uint64_t a2)
{
  return sub_1004ED430(a1, a2, (uint64_t (*)(void))sub_1008BDEBC, (uint64_t (*)(void))sub_1008BDF04);
}

uint64_t sub_1008BD508(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BDF04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008BD530(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BDF04();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008BD55C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  float v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _OWORD v30[5];
  uint64_t v31;
  _BYTE v32[32];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[16];
  _BYTE v36[16];
  _BYTE v37[16];
  char v38;

  v3 = v1;
  v5 = sub_1004B804C(&qword_1013F8638);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1008BDF04();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLStrokeData.CodingKeys, &type metadata for CRLStrokeData.CodingKeys, v11, v9, v10);
  sub_1004C4938(v3, (uint64_t)v37, &qword_1013F85D8);
  sub_1004C4938((uint64_t)v37, (uint64_t)v30, &qword_1013F85D8);
  v38 = 0;
  v12 = sub_1004B804C(&qword_1013F85D8);
  v13 = sub_1008C2438(&qword_1013F8640, &qword_1013F85D8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v38, v5, v12, v13);
  if (!v2)
  {
    v14 = *(_OWORD *)(v3 + 64);
    v30[2] = *(_OWORD *)(v3 + 48);
    v15 = *(_OWORD *)(v3 + 80);
    v30[3] = v14;
    v30[4] = v15;
    v31 = *(_QWORD *)(v3 + 96);
    v16 = *(_OWORD *)(v3 + 32);
    v30[0] = *(_OWORD *)(v3 + 16);
    v30[1] = v16;
    v38 = 1;
    v17 = sub_1006C6680();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v38, v5, &type metadata for CRLColorData, v17);
    v18 = *(float *)(v3 + 104);
    LOBYTE(v30[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v30, v5, v18);
    sub_1004C4938(v3 + 112, (uint64_t)v36, &qword_1013F85E8);
    sub_1004C4938((uint64_t)v36, (uint64_t)v30, &qword_1013F85E8);
    v38 = 3;
    v19 = sub_1004B804C(&qword_1013F85E8);
    v20 = sub_1008C2438(&qword_1013F8648, &qword_1013F85E8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v38, v5, v19, v20);
    sub_1004C4938(v3 + 128, (uint64_t)v35, &qword_1013F85F8);
    sub_1004C4938((uint64_t)v35, (uint64_t)v30, &qword_1013F85F8);
    v38 = 4;
    v21 = sub_1004B804C(&qword_1013F85F8);
    v22 = sub_1008C2438(&qword_1013F8650, &qword_1013F85F8, (uint64_t)&protocol conformance descriptor for <> CRExtensible<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v38, v5, v21, v22);
    v23 = *(float *)(v3 + 140);
    LOBYTE(v30[0]) = 5;
    KeyedEncodingContainer.encode(_:forKey:)(v30, v5, v23);
    sub_1004C4938(v3 + 144, (uint64_t)v34, &qword_1013F8658);
    sub_1004C4938((uint64_t)v34, (uint64_t)v30, &qword_1013F8658);
    v38 = 6;
    v24 = sub_1008BBAC8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v30, &v38, v5, &type metadata for CRLStrokePatternData, v24);
    sub_1004C4938(v3 + 168, (uint64_t)v33, &qword_1013F8660);
    sub_1004C4938((uint64_t)v33, (uint64_t)v30, &qword_1013F8660);
    v38 = 7;
    v25 = sub_1008C1650();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v30, &v38, v5, &type metadata for CRLSmartStrokeData, v25);
    sub_1004C4938(v3 + 192, (uint64_t)v32, &qword_1013F8670);
    sub_1004C4938((uint64_t)v32, (uint64_t)v30, &qword_1013F8670);
    v38 = 8;
    v26 = sub_1008BCB7C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v30, &v38, v5, &type metadata for CRLPencilKitInkStrokeData, v26);
    *(_QWORD *)&v30[0] = *(_QWORD *)(v3 + 224);
    v38 = 9;
    v27 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v28 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v30, &v38, v5, v27, v28);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1008BD9CC()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 224));
}

uint64_t sub_1008BD9D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 224));
  *(_QWORD *)(v1 + 224) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1008BD9FC())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1008BDA0C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[14];
  uint64_t v18;
  _OWORD v19[14];
  uint64_t v20;

  v2 = *(_OWORD *)(a1 + 208);
  v17[12] = *(_OWORD *)(a1 + 192);
  v17[13] = v2;
  v18 = *(_QWORD *)(a1 + 224);
  v3 = *(_OWORD *)(a1 + 144);
  v17[8] = *(_OWORD *)(a1 + 128);
  v17[9] = v3;
  v4 = *(_OWORD *)(a1 + 176);
  v17[10] = *(_OWORD *)(a1 + 160);
  v17[11] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  v17[4] = *(_OWORD *)(a1 + 64);
  v17[5] = v5;
  v6 = *(_OWORD *)(a1 + 112);
  v17[6] = *(_OWORD *)(a1 + 96);
  v17[7] = v6;
  v7 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v17[2] = *(_OWORD *)(a1 + 32);
  v17[3] = v8;
  v9 = *(_OWORD *)(a2 + 208);
  v19[12] = *(_OWORD *)(a2 + 192);
  v19[13] = v9;
  v20 = *(_QWORD *)(a2 + 224);
  v10 = *(_OWORD *)(a2 + 144);
  v19[8] = *(_OWORD *)(a2 + 128);
  v19[9] = v10;
  v11 = *(_OWORD *)(a2 + 176);
  v19[10] = *(_OWORD *)(a2 + 160);
  v19[11] = v11;
  v12 = *(_OWORD *)(a2 + 80);
  v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v12;
  v13 = *(_OWORD *)(a2 + 112);
  v19[6] = *(_OWORD *)(a2 + 96);
  v19[7] = v13;
  v14 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v15;
  return sub_1008BD558(v17, v19) & 1;
}

__n128 sub_1008BDABC@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[14];
  uint64_t v12;

  sub_1008C0B38(a1, (uint64_t)v11);
  if (!v2)
  {
    v5 = v11[13];
    *(_OWORD *)(a2 + 192) = v11[12];
    *(_OWORD *)(a2 + 208) = v5;
    *(_QWORD *)(a2 + 224) = v12;
    v6 = v11[9];
    *(_OWORD *)(a2 + 128) = v11[8];
    *(_OWORD *)(a2 + 144) = v6;
    v7 = v11[11];
    *(_OWORD *)(a2 + 160) = v11[10];
    *(_OWORD *)(a2 + 176) = v7;
    v8 = v11[5];
    *(_OWORD *)(a2 + 64) = v11[4];
    *(_OWORD *)(a2 + 80) = v8;
    v9 = v11[7];
    *(_OWORD *)(a2 + 96) = v11[6];
    *(_OWORD *)(a2 + 112) = v9;
    v10 = v11[1];
    *(_OWORD *)a2 = v11[0];
    *(_OWORD *)(a2 + 16) = v10;
    result = (__n128)v11[3];
    *(_OWORD *)(a2 + 32) = v11[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1008BDB48(_QWORD *a1)
{
  return sub_1008BD55C(a1);
}

uint64_t sub_1008BDBB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C1694();
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008BDBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_1004EF934();
  v7 = sub_1008C16D8();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008BDC4C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008C1694();
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1008BDC84(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008BE000();
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1008BDCD0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_1008BE000();
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1008BDD14(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1008BE000();
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_1008BDD50()
{
  unint64_t result;

  result = qword_1013F8570;
  if (!qword_1013F8570)
  {
    result = swift_getWitnessTable(&unk_100F13FC8, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8570);
  }
  return result;
}

unint64_t sub_1008BDD9C()
{
  unint64_t result;

  result = qword_1013F8578;
  if (!qword_1013F8578)
  {
    result = swift_getWitnessTable(&unk_100F14098, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8578);
  }
  return result;
}

unint64_t sub_1008BDDE4()
{
  unint64_t result;

  result = qword_1013F8580;
  if (!qword_1013F8580)
  {
    result = swift_getWitnessTable(&unk_100F14070, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F8580);
  }
  return result;
}

unint64_t sub_1008BDE2C()
{
  unint64_t result;

  result = qword_1013F8588;
  if (!qword_1013F8588)
  {
    result = swift_getWitnessTable(&unk_100F14108, &type metadata for CRLStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8588);
  }
  return result;
}

unint64_t sub_1008BDE74()
{
  unint64_t result;

  result = qword_1013F8590;
  if (!qword_1013F8590)
  {
    result = swift_getWitnessTable(&unk_100F14218, &type metadata for CRLStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8590);
  }
  return result;
}

unint64_t sub_1008BDEBC()
{
  unint64_t result;

  result = qword_1013F8598;
  if (!qword_1013F8598)
  {
    result = swift_getWitnessTable(&unk_100F141E0, &type metadata for CRLStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F8598);
  }
  return result;
}

unint64_t sub_1008BDF04()
{
  unint64_t result;

  result = qword_1013F85A0;
  if (!qword_1013F85A0)
  {
    result = swift_getWitnessTable(&unk_100F14140, &type metadata for CRLStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F85A0);
  }
  return result;
}

unint64_t sub_1008BDF4C()
{
  unint64_t result;

  result = qword_1013F85A8;
  if (!qword_1013F85A8)
  {
    result = swift_getWitnessTable(&unk_100F141B8, &type metadata for CRLStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F85A8);
  }
  return result;
}

unint64_t sub_1008BDF94()
{
  unint64_t result;

  result = qword_1013F85B0;
  if (!qword_1013F85B0)
  {
    result = swift_getWitnessTable(&unk_100F14190, &type metadata for CRLStrokeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1013F85B0);
  }
  return result;
}

uint64_t sub_1008BDFD8()
{
  return sub_1006047EC(&qword_1013F85B8, &qword_1013F85C0);
}

unint64_t sub_1008BE000()
{
  unint64_t result;

  result = qword_1013F85C8;
  if (!qword_1013F85C8)
  {
    result = swift_getWitnessTable(&unk_100F140C0, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F85C8);
  }
  return result;
}

unint64_t sub_1008BE048()
{
  unint64_t result;

  result = qword_1013F85D0;
  if (!qword_1013F85D0)
  {
    result = swift_getWitnessTable(&unk_100F14010, &type metadata for CRLStrokeData);
    atomic_store(result, (unint64_t *)&qword_1013F85D0);
  }
  return result;
}

uint64_t sub_1008BE08C(float *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  int v9;
  _BOOL4 v10;

  v4 = *(_QWORD *)a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0) & 1) == 0
    || a1[4] != *(float *)(a2 + 16))
  {
    return 0;
  }
  v8 = *((unsigned __int8 *)a1 + 20);
  v9 = *(unsigned __int8 *)(a2 + 20);
  if (v8 != 2)
  {
    v10 = (v8 & 1) == 0;
    if (v9 == 2 || ((v10 ^ v9) & 1) == 0)
      return 0;
    return sub_100C9E04C(*((_QWORD *)a1 + 3), *(_QWORD *)(a2 + 24));
  }
  if (v9 == 2)
    return sub_100C9E04C(*((_QWORD *)a1 + 3), *(_QWORD *)(a2 + 24));
  return 0;
}

uint64_t sub_1008BE12C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  _BYTE v44[16];
  _BYTE v45[16];
  _BYTE v46[16];
  _BYTE v47[16];
  _OWORD v48[5];
  uint64_t v49;
  _OWORD v50[5];
  uint64_t v51;
  _BYTE v52[16];
  _BYTE v53[24];

  sub_1004C4938(a1, (uint64_t)v53, &qword_1013F85D8);
  sub_1004C4938((uint64_t)v53, (uint64_t)v50, &qword_1013F85D8);
  sub_1004C4938(a2, (uint64_t)v52, &qword_1013F85D8);
  sub_1004C4938((uint64_t)v52, (uint64_t)v48, &qword_1013F85D8);
  v4 = sub_1008BE70C();
  if ((static CRExtensible.== infix(_:_:)(v50, v48, &type metadata for CRLStrokeData.StrokeType, v4, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_21;
  v5 = *(_OWORD *)(a1 + 64);
  v50[2] = *(_OWORD *)(a1 + 48);
  v50[3] = v5;
  v50[4] = *(_OWORD *)(a1 + 80);
  v51 = *(_QWORD *)(a1 + 96);
  v6 = *(_OWORD *)(a1 + 32);
  v50[0] = *(_OWORD *)(a1 + 16);
  v50[1] = v6;
  v7 = *(_OWORD *)(a2 + 64);
  v48[2] = *(_OWORD *)(a2 + 48);
  v48[3] = v7;
  v48[4] = *(_OWORD *)(a2 + 80);
  v49 = *(_QWORD *)(a2 + 96);
  v8 = *(_OWORD *)(a2 + 32);
  v48[0] = *(_OWORD *)(a2 + 16);
  v48[1] = v8;
  if ((sub_1006C4CF8(v50, v48) & 1) == 0)
    goto LABEL_21;
  if (*(float *)(a1 + 104) != *(float *)(a2 + 104))
    goto LABEL_21;
  sub_1004C4938(a1 + 112, (uint64_t)v47, &qword_1013F85E8);
  sub_1004C4938((uint64_t)v47, (uint64_t)v45, &qword_1013F85E8);
  sub_1004C4938(a2 + 112, (uint64_t)v46, &qword_1013F85E8);
  sub_1004C4938((uint64_t)v46, (uint64_t)v44, &qword_1013F85E8);
  v9 = sub_1008BE750();
  if ((static CRExtensible.== infix(_:_:)(v45, v44, &type metadata for CRLStrokeData.CapType, v9, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)goto LABEL_21;
  sub_1004C4938(a1 + 128, (uint64_t)v45, &qword_1013F85F8);
  sub_1004C4938((uint64_t)v45, (uint64_t)&v42, &qword_1013F85F8);
  sub_1004C4938(a2 + 128, (uint64_t)v44, &qword_1013F85F8);
  sub_1004C4938((uint64_t)v44, (uint64_t)&v40, &qword_1013F85F8);
  v10 = sub_1008BE794();
  if ((static CRExtensible.== infix(_:_:)(&v42, &v40, &type metadata for CRLStrokeData.JoinType, v10, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0|| *(float *)(a1 + 140) != *(float *)(a2 + 140))
  {
    goto LABEL_21;
  }
  v11 = *(_QWORD *)(a1 + 144);
  v12 = *(_QWORD *)(a2 + 144);
  if (v11)
  {
    if (!v12)
      goto LABEL_21;
    v13 = *(_QWORD *)(a1 + 152);
    v14 = *(_QWORD *)(a1 + 160);
    v16 = *(_QWORD *)(a2 + 152);
    v15 = *(_QWORD *)(a2 + 160);
    if (sub_100544DA0(*(_QWORD *)(a1 + 144), *(_QWORD *)(a2 + 144)))
    {
      sub_1004C3910(v11, v13, v14);
      sub_1004C3910(v11, v13, v14);
      sub_1004C3910(v12, v16, v15);
      if (*(float *)&v13 == *(float *)&v16)
      {
        v17 = sub_100C9E04C(v14, v15);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v12);
        sub_1004C36BC(v11, v13, v14);
        if ((v17 & 1) == 0)
          goto LABEL_21;
        goto LABEL_14;
      }
    }
    else
    {
      sub_1004C3910(v11, v13, v14);
      sub_1004C3910(v11, v13, v14);
      sub_1004C3910(v12, v16, v15);
    }
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v15);
    sub_1004C36BC(v11, v13, v14);
    goto LABEL_21;
  }
  if (v12)
    goto LABEL_21;
LABEL_14:
  v18 = *(_QWORD *)(a1 + 184);
  v19 = *(_QWORD *)(a2 + 184);
  if (!v18)
  {
    if (v19)
      goto LABEL_21;
LABEL_24:
    v28 = *(_QWORD *)(a1 + 192);
    v27 = *(_QWORD *)(a1 + 200);
    v30 = *(_QWORD *)(a1 + 208);
    v29 = *(_QWORD *)(a1 + 216);
    v32 = *(_QWORD *)(a2 + 192);
    v31 = *(_QWORD *)(a2 + 200);
    v34 = *(_QWORD *)(a2 + 208);
    v33 = *(_QWORD *)(a2 + 216);
    if (v27)
    {
      if (v31)
      {
        if ((v28 != v32 || v27 != v31)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200), *(_QWORD *)(a2 + 192), *(_QWORD *)(a2 + 200), 0) & 1) == 0|| *(float *)&v30 != *(float *)&v34)
        {
          goto LABEL_40;
        }
        if ((v30 & 0xFF00000000) == 0x200000000)
        {
          if (BYTE4(v34) != 2)
          {
LABEL_40:
            sub_1004C393C(v28, v27, v30, v29);
            sub_1004C393C(v28, v27, v30, v29);
            sub_1004C393C(v32, v31, v34, v33);
            swift_bridgeObjectRelease(v31);
            swift_bridgeObjectRelease(v29);
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease(v33);
            v35 = v28;
            v36 = v27;
            v37 = v30;
            v38 = v29;
            goto LABEL_41;
          }
        }
        else if (BYTE4(v34) == 2 || ((v30 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(v34) & 1))
        {
          goto LABEL_40;
        }
        sub_1004C393C(v28, v27, v30, v29);
        sub_1004C393C(v28, v27, v30, v29);
        sub_1004C393C(v32, v31, v34, v33);
        v39 = sub_100C9E04C(v29, v33);
        swift_bridgeObjectRelease(v29);
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v33);
        swift_bridgeObjectRelease(v31);
        sub_1004C36E8(v28, v27, v30, v29);
        if ((v39 & 1) != 0)
        {
LABEL_39:
          v25 = sub_100C9E04C(*(_QWORD *)(a1 + 224), *(_QWORD *)(a2 + 224));
          return v25 & 1;
        }
        goto LABEL_21;
      }
    }
    else if (!v31)
    {
      goto LABEL_39;
    }
    sub_1004C393C(*(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200), *(_QWORD *)(a1 + 208), *(_QWORD *)(a1 + 216));
    sub_1004C393C(v32, v31, v34, v33);
    sub_1004C36E8(v28, v27, v30, v29);
    v35 = v32;
    v36 = v31;
    v37 = v34;
    v38 = v33;
LABEL_41:
    sub_1004C36E8(v35, v36, v37, v38);
    goto LABEL_21;
  }
  if (v19)
  {
    v20 = *(_QWORD *)(a1 + 176);
    v21 = *(_QWORD *)(a2 + 168);
    v22 = *(_QWORD *)(a2 + 176);
    v42 = *(_QWORD *)(a1 + 168);
    v43 = v20 & 1;
    v40 = v21;
    v41 = v22 & 1;
    v23 = sub_1008BE7D8();
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v18);
    if ((static CRExtensible.== infix(_:_:)(&v42, &v40, &type metadata for CRLSmartStrokeData.SmartStrokeType, v23, &protocol witness table for Int, &protocol witness table for Int) & 1) == 0)
    {
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v19);
      goto LABEL_21;
    }
    v24 = sub_100C9E04C(v18, v19);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v19);
    if ((v24 & 1) != 0)
      goto LABEL_24;
  }
LABEL_21:
  v25 = 0;
  return v25 & 1;
}

unint64_t sub_1008BE70C()
{
  unint64_t result;

  result = qword_1013F85E0;
  if (!qword_1013F85E0)
  {
    result = swift_getWitnessTable(&unk_100F14F30, &type metadata for CRLStrokeData.StrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F85E0);
  }
  return result;
}

unint64_t sub_1008BE750()
{
  unint64_t result;

  result = qword_1013F85F0;
  if (!qword_1013F85F0)
  {
    result = swift_getWitnessTable(&unk_100F14EF8, &type metadata for CRLStrokeData.CapType);
    atomic_store(result, (unint64_t *)&qword_1013F85F0);
  }
  return result;
}

unint64_t sub_1008BE794()
{
  unint64_t result;

  result = qword_1013F8600;
  if (!qword_1013F8600)
  {
    result = swift_getWitnessTable(&unk_100F14EC0, &type metadata for CRLStrokeData.JoinType);
    atomic_store(result, (unint64_t *)&qword_1013F8600);
  }
  return result;
}

unint64_t sub_1008BE7D8()
{
  unint64_t result;

  result = qword_1013F8608;
  if (!qword_1013F8608)
  {
    result = swift_getWitnessTable(&unk_100F14E88, &type metadata for CRLSmartStrokeData.SmartStrokeType);
    atomic_store(result, (unint64_t *)&qword_1013F8608);
  }
  return result;
}

id sub_1008BE81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  char v10;
  __n128 v11;
  uint64_t v12;
  int v13;
  double v14;
  const PKInkType *v15;
  id v16;
  NSString v17;
  _BYTE v19[24];
  _BYTE v20[32];
  uint64_t v21;
  uint64_t v22;
  float v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[16];
  _BYTE v30[16];

  v4 = sub_1004B804C(&qword_1013F86E8);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004C4938(a1 + 192, (uint64_t)v20, &qword_1013F8670);
  sub_1004C4938((uint64_t)v20, (uint64_t)&v21, &qword_1013F8670);
  v7 = v22;
  if (v22)
  {
    v8 = v21;
    v9 = v23;
    v10 = v24;
    v11 = swift_bridgeObjectRetain(v22);
    PKInkingTool.InkType.init(rawValue:)(v8, v7, v11);
    v12 = type metadata accessor for PKInkingTool.InkType(0);
    v13 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12);
    sub_1008C188C((uint64_t)v6);
    if (v13 != 1)
    {
      v17 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(objc_allocWithZone((Class)CRLPencilKitInkStroke), "initWithInkType:color:adjustedWidth:isFountainPenInkV2:", v17, a2, v10 & 1, v9);

      return v16;
    }
  }
  v14 = *(float *)(a1 + 104);
  sub_1004C4938(a1 + 168, (uint64_t)v19, &qword_1013F8660);
  sub_1004C4938((uint64_t)v19, (uint64_t)&v25, &qword_1013F8660);
  if (!v26)
    goto LABEL_8;
  v27 = v25;
  v28 = v26;
  sub_1004C4938((uint64_t)&v27, (uint64_t)v29, &qword_1013F86E0);
  sub_1004C4938((uint64_t)v29, (uint64_t)v30, &qword_1013F86E0);
  if ((v30[8] & 1) != 0)
    goto LABEL_8;
  if (v30[0] == 5)
  {
    v15 = &PKInkTypeCrayon;
    return objc_msgSend(objc_allocWithZone((Class)CRLPencilKitInkStroke), "initWithInkType:color:adjustedWidth:", *v15, a2, v14);
  }
  if (v30[0] == 4)
    v15 = &PKInkTypePencil;
  else
LABEL_8:
    v15 = &PKInkTypeMonoline;
  return objc_msgSend(objc_allocWithZone((Class)CRLPencilKitInkStroke), "initWithInkType:color:adjustedWidth:", *v15, a2, v14);
}

id sub_1008BEA4C(uint64_t a1, char a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  CGColorSpace *v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  id v12;
  double v14;
  double v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  CGColorSpace *v20;
  CGColorSpace *v21;
  _BYTE v22[24];
  _BYTE v23[32];
  _BYTE v24[16];
  _BYTE v25[16];
  _OWORD v26[5];
  uint64_t v27;
  _BYTE v28[16];
  _BYTE v29[16];
  char v30[8];
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _BYTE v36[16];
  _BYTE v37[32];

  sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
  v4 = *(_OWORD *)(a1 + 48);
  v5 = *(_OWORD *)(a1 + 80);
  v26[3] = *(_OWORD *)(a1 + 64);
  v26[4] = v5;
  v27 = *(_QWORD *)(a1 + 96);
  v6 = *(_OWORD *)(a1 + 32);
  v26[0] = *(_OWORD *)(a1 + 16);
  v26[1] = v6;
  v26[2] = v4;
  sub_1005E4130(v26);
  v7 = sub_1006C52C0((uint64_t)v26);
  v8 = *(float *)(a1 + 104);
  sub_1004C4938(a1 + 112, (uint64_t)v25, &qword_1013F85E8);
  sub_1004C4938((uint64_t)v25, (uint64_t)v28, &qword_1013F85E8);
  if ((v28[8] & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 303, "Tried to decode unknown line cap value. Falling back to unarchiving butt.", 73, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 303, (uint64_t)"Tried to decode unknown line cap value. Falling back to unarchiving butt.", 73, 2u);
    v9 = 0;
  }
  else
  {
    v9 = v28[0];
  }
  sub_1004C4938(a1 + 128, (uint64_t)v24, &qword_1013F85F8);
  sub_1004C4938((uint64_t)v24, (uint64_t)v29, &qword_1013F85F8);
  if ((v29[8] & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 318, "Tried to decode unknown line join value. Falling back to unarchiving miter.", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 318, (uint64_t)"Tried to decode unknown line join value. Falling back to unarchiving miter.", 75, 2u);
    v10 = 0;
    if ((a2 & 1) != 0)
      goto LABEL_9;
LABEL_8:
    v11 = *(float *)(a1 + 140);
    sub_1004C4938(a1 + 192, (uint64_t)v23, &qword_1013F8670);
    sub_1004C4938((uint64_t)v23, (uint64_t)v30, &qword_1013F8670);
    if (v31)
      goto LABEL_9;
    v14 = v8;
    v15 = v11;
    sub_1004C4938(a1 + 168, (uint64_t)v22, &qword_1013F8660);
    sub_1004C4938((uint64_t)v22, (uint64_t)&v32, &qword_1013F8660);
    if (v33)
    {
      v34 = v32;
      v35 = v33;
      sub_1004C4938((uint64_t)&v34, (uint64_t)v36, &qword_1013F86E0);
      sub_1004C4938((uint64_t)v36, (uint64_t)v37, &qword_1013F86E0);
      if ((v37[8] & 1) == 0)
        __asm { BR              X11 }
      sub_100757E04(&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 350, "Tried to decode unknown smart stroke type. Falling back to unarchiving plain stroke.", 84, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 350, (uint64_t)"Tried to decode unknown smart stroke type. Falling back to unarchiving plain stroke.", 84, 2u);
      v16 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "solidPattern");
    }
    else
    {
      sub_1004C4938(a1, (uint64_t)v37, &qword_1013F85D8);
      sub_1004C4938((uint64_t)v37, (uint64_t)&v34, &qword_1013F85D8);
      if ((BYTE8(v34) & 1) != 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 373, "Tried to decode unknown stroke type. Falling back to unarchiving solid.", 71, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 373, (uint64_t)"Tried to decode unknown stroke type. Falling back to unarchiving solid.", 71, 2u);
        v16 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "solidPattern");
      }
      else if ((_BYTE)v34)
      {
        if (v34 == 1)
        {
          v17 = *(_QWORD *)(a1 + 144);
          if (v17)
          {
            v18 = *(_QWORD *)(a1 + 160);
            v19 = *(float *)(a1 + 152);
            sub_1004B8930(0, &qword_1013EB6C8, off_1012299E8);
            swift_bridgeObjectRetain(v17);
            swift_bridgeObjectRetain(v18);
            v20 = (CGColorSpace *)sub_1008BBD28(v17, v18, v19);
LABEL_25:
            v21 = v20;
            v12 = objc_msgSend(objc_allocWithZone((Class)CRLStroke), "initWithColor:width:cap:join:pattern:miterLimit:", v7, v9, v10, v20, v14, v15);

            v7 = v21;
            goto LABEL_10;
          }
          sub_100757E04(&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 364, "Stroke with pattern type should have pattern data. Falling back to unarchiving solid pattern.", 93, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 364, (uint64_t)"Stroke with pattern type should have pattern data. Falling back to unarchiving solid pattern.", 93, 2u);
          v16 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "solidPattern");
        }
        else
        {
          v16 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "emptyPattern");
        }
      }
      else
      {
        v16 = objc_msgSend((id)objc_opt_self(CRLStrokePattern), "solidPattern");
      }
    }
    v20 = (CGColorSpace *)v16;
    goto LABEL_25;
  }
  v10 = v29[0];
  if ((a2 & 1) == 0)
    goto LABEL_8;
LABEL_9:
  v12 = sub_1008BE81C(a1, (uint64_t)v7);
LABEL_10:

  return v12;
}

float *sub_1008BF1A8(void *a1)
{
  double *v2;
  char *v3;
  char *v4;
  float *result;
  float *v6;
  unint64_t v7;
  double v8;
  unint64_t v9;
  unint64_t v10;
  float v11;

  v2 = (double *)objc_msgSend(a1, "pattern");
  v3 = (char *)objc_msgSend(a1, "count");
  if (v3)
  {
    v4 = v3;
    result = (float *)sub_100D0ED80(0, 1, 1, _swiftEmptyArrayStorage);
    v6 = result;
    v7 = 0x8000000000000000;
    while (v7)
    {
      v8 = v2[v7];
      v10 = *((_QWORD *)v6 + 2);
      v9 = *((_QWORD *)v6 + 3);
      if (v10 >= v9 >> 1)
      {
        result = (float *)sub_100D0ED80((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
        v6 = result;
      }
      v11 = v8;
      *((_QWORD *)v6 + 2) = v10 + 1;
      v6[v10 + 8] = v11;
      ++v7;
      if (!--v4)
        goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    v6 = (float *)_swiftEmptyArrayStorage;
LABEL_9:
    objc_msgSend(a1, "phase");
    return v6;
  }
  return result;
}

uint64_t sub_1008BF2B0(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t inited;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[72];

  v2 = objc_msgSend(a1, "strokeName");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Chalk2"));
  if (v6 == v3 && v7 == v5)
  {

    swift_bridgeObjectRelease_n(v5, 2);
    return 0;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v3, v5, 0);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
  {
    swift_bridgeObjectRelease(v5);

    return 0;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Dry Brush"));
  if (v13 == v3 && v14 == v5)
  {

    swift_bridgeObjectRelease_n(v5, 2);
    return 1;
  }
  else
  {
    v16 = v14;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v3, v5, 0);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) != 0)
    {
      swift_bridgeObjectRelease(v5);

      return 1;
    }
    else
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Feathered Brush"));
      v20 = v19;
      if (v18 == v3 && v19 == v5)
      {

        v11 = 2;
        swift_bridgeObjectRelease_n(v5, 2);
      }
      else
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v3, v5, 0);
        swift_bridgeObjectRelease(v20);
        if ((v21 & 1) != 0)
        {
          swift_bridgeObjectRelease(v5);

          return 2;
        }
        else
        {
          v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Pen"));
          v24 = v23;
          if (v22 == v3 && v23 == v5)
          {

            swift_bridgeObjectRelease_n(v5, 2);
            return 3;
          }
          else
          {
            v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v3, v5, 0);
            swift_bridgeObjectRelease(v24);
            if ((v25 & 1) != 0)
            {
              swift_bridgeObjectRelease(v5);

              return 3;
            }
            else
            {
              v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Pencil"));
              v28 = v27;
              if (v26 == v3 && v27 == v5)
              {

                swift_bridgeObjectRelease_n(v5, 2);
                return 4;
              }
              else
              {
                v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v3, v5, 0);
                swift_bridgeObjectRelease(v28);
                if ((v29 & 1) != 0)
                {
                  swift_bridgeObjectRelease(v5);

                  return 4;
                }
                else
                {
                  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Crayon"));
                  v32 = v31;
                  if (v30 == v3 && v31 == v5)
                  {

                    swift_bridgeObjectRelease_n(v5, 2);
                    return 5;
                  }
                  else
                  {
                    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v3, v5, 0);
                    swift_bridgeObjectRelease(v32);
                    if ((v33 & 1) != 0)
                    {
                      swift_bridgeObjectRelease(v5);

                      return 5;
                    }
                    else
                    {
                      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("Calligraphy"));
                      if (v34 == v3 && v35 == v5)
                      {

                        swift_bridgeObjectRelease_n(v5, 2);
                        return 6;
                      }
                      else
                      {
                        v36 = v35;
                        v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v3, v5, 0);
                        swift_bridgeObjectRelease(v5);
                        swift_bridgeObjectRelease(v36);
                        if ((v37 & 1) != 0)
                        {

                          return 6;
                        }
                        else
                        {
                          v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
                          inited = swift_initStackObject(v38, v45);
                          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
                          v40 = objc_msgSend(a1, "strokeName");
                          v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
                          v43 = v42;

                          *(_QWORD *)(inited + 56) = &type metadata for String;
                          *(_QWORD *)(inited + 64) = sub_1004CFC2C();
                          *(_QWORD *)(inited + 32) = v41;
                          *(_QWORD *)(inited + 40) = v43;
                          sub_100757E04(&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 102, "Unknown smart stroke type %@. Falling back to archiving dryBrush.", 65, 2u, inited);
                          sub_1004F5394(inited, (uint64_t)"init(archiving:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2u, 102, (uint64_t)"Unknown smart stroke type %@. Falling back to archiving dryBrush.", 65, 2u);

                          swift_setDeallocating(inited);
                          v44 = sub_1004B804C(&qword_1013E0190);
                          v11 = 1;
                          swift_arrayDestroy(inited + 32, 1, v44);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return v11;
}

