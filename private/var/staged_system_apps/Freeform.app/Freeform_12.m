id sub_1009D7650(void *a1, uint64_t a2, char *a3)
{
  char *v6;
  char *v7;
  char *v8;
  objc_super v10;
  __int128 v11;
  uint64_t ObjectType;
  _UNKNOWN **v13;

  v6 = &a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingUnscaledCanvasPosition];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_OWORD *)&a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession] = xmmword_100EF72A0;
  *(_OWORD *)&a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession] = xmmword_100EF72A0;
  ObjectType = swift_getObjectType(a1);
  v13 = &off_10128E8B0;
  *(_QWORD *)&v11 = a1;
  sub_1004DB728(&v11, (uint64_t)&a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate]);
  v10.receiver = a3;
  v10.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  return objc_msgSendSuper2(&v10, "initWithRep:knob:", a1, a2);
}

uint64_t sub_1009D772C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FC8B4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CFD00;
  return sub_10096205C(a1, v5, v6, v7, v8);
}

uint64_t sub_1009D77C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1013FFE9C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_1009C8C94(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1009D7860()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1009D7870(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  _QWORD *v7;

  v6 = *(_BYTE *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1013FFEC4);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1004CF80C;
  return sub_1009C9860(a1, a2, v6);
}

uint64_t sub_1009D78DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009D7950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = v2 + ((v6 + 24) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_1013FFEEC);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1004CFD00;
  return sub_1009C7F10(a1, a2, v7, v8);
}

uint64_t sub_1009D79D8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1009D7A00(uint64_t a1)
{
  return sub_1009D7B80(a1, (uint64_t)&unk_10128EAD0, (uint64_t)&unk_1013FFF10);
}

uint64_t sub_1009D7A18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1013FFF0C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1009C5024(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1009D7AB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1009D7AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1009D7B6C(uint64_t a1)
{
  return sub_1009D7B80(a1, (uint64_t)&unk_10128EB20, (uint64_t)&unk_1013FFF20);
}

double sub_1009D7B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_1009C4E7C(a1, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7), a2, a3);
}

uint64_t sub_1009D7BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009D7C5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1013FFF1C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1009C3168(a1, v5, v6, v7, v8, v9);
}

double sub_1009D7CF4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6;
  double result;

  v6 = a4 >> 62;
  if (a4 >> 62 == 2)
  {
    sub_100689D34(a1, a2, a3);
  }
  else if ((_DWORD)v6 == 1)
  {
    swift_retain(a1);
    swift_retain(a2);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a3).n128_u64[0];
  }
  else if (!(_DWORD)v6)
  {
    *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  }
  return result;
}

double sub_1009D7D68(uint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  unint64_t v5;
  double result;

  v5 = a4 >> 62;
  if (a4 >> 62 == 2)
  {
    sub_100689EEC(a1, a2, a3);
  }
  else if ((_DWORD)v5 == 1)
  {
    swift_release(a1);
    swift_release(a2);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else if (!(_DWORD)v5)
  {
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_1009D7DDC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1009D6A54(*(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1009D7E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1013FFF34);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1004CFD00;
  return sub_1009C8578(a1, a2, v6);
}

uint64_t sub_1009D7E74()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1009D7EB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1013FFF54);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1009CE48C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1009D7F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1013FFF64);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1004CFD00;
  return sub_1009CCC4C(a1, a2, v6);
}

uint64_t sub_1009D7FA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1013FFE9C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CF80C;
  return sub_1009C8C94(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1009D8038()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009D8060()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1009D809C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 15);
}

uint64_t sub_1009D80D8(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  __n128 v12;

  v4 = v1[1].n128_i64[0];
  v5 = v1[1].n128_i64[1];
  v6 = v1[2].n128_u64[0];
  v7 = v1[2].n128_u64[1];
  v12 = v1[3];
  v9 = v1[4].n128_u64[0];
  v8 = v1[4].n128_u64[1];
  v10 = (_QWORD *)swift_task_alloc(dword_1013FFFF4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1004CFD00;
  return sub_1009D2488(v12, a1, v4, v5, v6, v7, v9, v8);
}

double destroy for CRLUSDZRep.PlatformContent(uint64_t a1)
{
  return sub_1009D6A54(*(void **)a1, *(void **)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t _s8Freeform10CRLUSDZRepC15PlatformContentOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  unsigned int v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1009D6A08(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLUSDZRep.PlatformContent(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  unsigned int v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  sub_1009D6A08(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1009D6A54(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLUSDZRep.PlatformContent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1009D6A54(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDZRep.PlatformContent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1E && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 30);
  v3 = ((2 * *(unsigned __int8 *)(a1 + 16)) & 0x1C | (*(unsigned __int8 *)(a1 + 16) >> 4) & 3) ^ 0x1F;
  if (v3 >= 0x1D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLUSDZRep.PlatformContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1D)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 30;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x1E)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x1E)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * ((((-a2 >> 2) & 7) - 8 * a2) & 0x1F);
    }
  }
  return result;
}

uint64_t sub_1009D830C(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 4) & 3;
}

uint64_t sub_1009D8318(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0xCFu;
  return result;
}

uint64_t sub_1009D8328(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 0xC1 | (16 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.PlatformContent()
{
  return &type metadata for CRLUSDZRep.PlatformContent;
}

uint64_t storeEnumTagSinglePayload for CRLUSDZRep.RenderingStrategy.USDRendererKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1009D839C + 4 * byte_100F1FBB5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1009D83D0 + 4 * byte_100F1FBB0[v4]))();
}

uint64_t sub_1009D83D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009D83D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009D83E0);
  return result;
}

uint64_t sub_1009D83EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009D83F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1009D83F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009D8400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.RenderingStrategy.USDRendererKind()
{
  return &type metadata for CRLUSDZRep.RenderingStrategy.USDRendererKind;
}

unint64_t sub_1009D8420()
{
  unint64_t result;

  result = qword_101400028;
  if (!qword_101400028)
  {
    result = swift_getWitnessTable(&unk_100F1FE24, &type metadata for CRLUSDZRep.RenderingStrategy.USDRendererKind);
    atomic_store(result, (unint64_t *)&qword_101400028);
  }
  return result;
}

uint64_t sub_1009D847C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[29] = a6;
  v7[30] = a7;
  v7[27] = a4;
  v7[28] = a5;
  v7[25] = a2;
  v7[26] = a3;
  v7[24] = a1;
  v8 = type metadata accessor for URL(0);
  v7[31] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[32] = v9;
  v7[33] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009D84E8, 0, 0);
}

uint64_t sub_1009D84E8()
{
  _QWORD *v0;
  unint64_t v1;
  id v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)();
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  v1 = v0[25];
  swift_beginAccess(&static OS_os_log.shareState, v0 + 21, 0, 0);
  v2 = (id)static OS_os_log.shareState;
  v4 = static os_log_type_t.default.getter(v3);
  sub_100A06EBC((uint64_t)v2, &_mh_execute_header, v4, "No share existed. Preparing a new share.", 40, 2, (uint64_t)_swiftEmptyArrayStorage);

  if (v1 >> 60 == 15)
  {
    v5 = type metadata accessor for MainActor(0);
    v0[34] = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
    v8 = v7;
    v9 = sub_1009D8644;
  }
  else
  {
    v10 = v0[24];
    v11 = v0[25];
    v0[38] = v10;
    v0[39] = v11;
    v12 = type metadata accessor for MainActor(0);
    v13 = sub_10057939C(v10, v11);
    v0[40] = static MainActor.shared.getter(v13);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
    v8 = v14;
    v9 = sub_1009D88CC;
  }
  return swift_task_switch(v9, v6, v8);
}

void sub_1009D8644()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  void (*v7)(_QWORD, double);

  swift_release(v0[34]);
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (v2)
  {
    v3 = type metadata accessor for CRLiOSAppDelegate();
    v4 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                   + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
    swift_retain(v4);
    swift_unknownObjectRelease(v2);
    if (v4)
    {
      v5 = *(void **)(v4 + 16);
      v0[35] = v5;
      v5;
      swift_release(v4);
      v7 = (void (*)(_QWORD, double))((char *)&dword_1013E45B0 + dword_1013E45B0);
      v6 = (_QWORD *)swift_task_alloc(unk_1013E45B4);
      v0[36] = v6;
      *v6 = v0;
      v6[1] = sub_1009D875C;
      v7(v0[26], 2.0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1009D875C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v4 = *(void **)(*v2 + 280);
  v3 = *(_QWORD *)(*v2 + 288);
  v5 = *v2;
  *(_QWORD *)(v5 + 296) = a1;
  swift_task_dealloc(v3);

  if (!v1)
    return swift_task_switch(sub_1009D87E8, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v5 + 264));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1009D87E8()
{
  uint64_t v0;
  UIImage *v1;
  NSData *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (UIImage *)objc_msgSend(*(id *)(v0 + 296), "UIImage");
  v2 = UIImagePNGRepresentation(v1);

  v3 = *(void **)(v0 + 296);
  if (v2)
  {
    v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {

    v4 = 0;
    v6 = 0xF000000000000000;
  }
  *(_QWORD *)(v0 + 304) = v4;
  *(_QWORD *)(v0 + 312) = v6;
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 200);
  v9 = type metadata accessor for MainActor(0);
  v10 = sub_10057939C(v7, v8);
  *(_QWORD *)(v0 + 320) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1009D88CC, v11, v12);
}

void sub_1009D88CC()
{
  uint64_t *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t **v6;

  swift_release(v0[40]);
  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (v2)
  {
    v3 = type metadata accessor for CRLiOSAppDelegate();
    v4 = *(_QWORD *)(swift_dynamicCastClassUnconditional(v2, v3, 0, 0, 0)
                   + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
    swift_retain(v4);
    swift_unknownObjectRelease(v2);
    if (v4)
    {
      v5 = *(void **)(v4 + 16);
      v0[41] = (uint64_t)v5;
      v5;
      swift_release(v4);
      v6 = (uint64_t **)swift_task_alloc(dword_1013E4314);
      v0[42] = (uint64_t)v6;
      *v6 = v0;
      v6[1] = (uint64_t *)sub_1009D89E0;
      sub_1005905DC(v0[33], v0[26], 2.0, v0[27], v0[28], 0, 0, 1);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1009D89E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t (*v4)();

  v3 = *(void **)(*(_QWORD *)v1 + 328);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 336);
  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc(v2);

  if (v0)
    v4 = sub_1009D8E64;
  else
    v4 = sub_1009D8A48;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009D8A48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSURL *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v2 = v0[32];
  v1 = v0[33];
  v3 = v0[31];
  v4 = v0[29];
  v5 = objc_allocWithZone((Class)CKAsset);
  URL._bridgeToObjectiveC()(v6);
  v8 = v7;
  v9 = objc_msgSend(v5, "initWithFileURL:", v7);
  v0[44] = v9;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v10 = v9;
  return swift_task_switch(sub_1009D8AE4, v4, 0);
}

uint64_t sub_1009D8AE4()
{
  uint64_t *v0;
  uint64_t v1;
  Class v2;
  uint64_t **v3;

  v1 = v0[28];
  v2 = sub_100B4AD90(v0[26]);
  v0[45] = (uint64_t)v2;
  v3 = (uint64_t **)swift_task_alloc(dword_1013EA234);
  v0[46] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = (uint64_t *)sub_1009D8B58;
  return sub_10067301C((uint64_t)v2, v0[27], v1, v0[38], v0[39]);
}

uint64_t sub_1009D8B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 368);
  *(_QWORD *)(*v2 + 376) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 232);
    v7 = sub_1009D8BDC;
  }
  else
  {
    v8 = *(_QWORD *)(v4 + 232);

    *(_QWORD *)(v4 + 384) = a1;
    v7 = sub_1009D8C60;
    v6 = v8;
  }
  return swift_task_switch(v7, v6, 0);
}

uint64_t sub_1009D8BDC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 352);

  return swift_task_switch(sub_1009D8C1C, 0, 0);
}

uint64_t sub_1009D8C1C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 352);
  sub_1004BE2FC(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));

  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D8C60()
{
  uint64_t v0;

  return swift_task_switch(sub_1009D8C9C, 0, 0);
}

uint64_t sub_1009D8C9C()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v17 = *(void **)(v0 + 352);
  v18 = *(_QWORD *)(v0 + 264);
  v4 = *(void **)(v0 + 240);
  v5 = (void *)static OS_os_log.shareState;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 56) = sub_1004B8930(0, &qword_1013E0240, CKShare_ptr);
  *(_QWORD *)(inited + 64) = sub_10056B004((unint64_t *)&qword_1013EF500, &qword_1013E0240, CKShare_ptr);
  *(_QWORD *)(inited + 32) = v1;
  v8 = v5;
  v9 = UUID.uuidString.getter(v1);
  v11 = v10;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = sub_1004CFC2C();
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v11;
  *(_QWORD *)(inited + 136) = sub_1004B8930(0, &qword_1013E2DB0, CKContainer_ptr);
  *(_QWORD *)(inited + 144) = sub_10056B004(&qword_101400210, &qword_1013E2DB0, CKContainer_ptr);
  *(_QWORD *)(inited + 112) = v4;
  v12 = v4;
  v14 = static os_log_type_t.default.getter(v13);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v14, "New share: %@ for boardID: %@ in container %@.", 46, 2, inited);
  sub_1004BE2FC(v3, v2);

  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v15);

  swift_task_dealloc(v18);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 384));
}

uint64_t sub_1009D8E64()
{
  uint64_t v0;

  sub_1004BE2FC(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1009D8EA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v36 = a2;
  v34 = a1;
  v9 = type metadata accessor for CRLBoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLSendACopyHelper();
  swift_allocObject(v16, 72, 7);
  v17 = a3;
  v18 = sub_1008A0524(v17);

  v19 = objc_msgSend(objc_allocWithZone((Class)NSProgress), "init");
  objc_msgSend(v19, "setCancellable:", 0);
  objc_msgSend(v19, "publish");
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 1, 1, v20);
  sub_1004E1B3C(a4, (uint64_t)v12);
  v21 = *(unsigned __int8 *)(v10 + 80);
  v22 = (v21 + 40) & ~v21;
  v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)swift_allocObject(&unk_10128EF20, v25 + 8, v21 | 7);
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v18;
  sub_1004DB5FC((uint64_t)v12, (uint64_t)v26 + v22);
  v27 = (_QWORD *)((char *)v26 + v23);
  v28 = v36;
  *v27 = v35;
  v27[1] = a6;
  v29 = (_QWORD *)((char *)v26 + v24);
  *v29 = v34;
  v29[1] = v28;
  *(_QWORD *)((char *)v26 + v25) = v19;
  v30 = v19;
  swift_retain(v18);
  swift_bridgeObjectRetain(a6);
  swift_retain(v28);
  v31 = sub_100521B98((uint64_t)v15, (uint64_t)&unk_1014001F0, (uint64_t)v26);
  swift_release(v18);

  swift_release(v31);
  return v19;
}

id sub_1009D90C0(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  uint64_t (*v3)(void (*)(uint64_t, uint64_t), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(void (*)(uint64_t, uint64_t), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_10128EEF8, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v7 = (void *)v3(sub_100874FF8, v5, v6);
  swift_release(v2);
  swift_release(v5);
  return v7;
}

uint64_t sub_1009D913C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1009D938C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_10128EE80, (uint64_t)&unk_101400180);
}

uint64_t sub_1009D916C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v7[4] = v12;
  v7[5] = v13;
  v7[2] = a4;
  v7[3] = a7;
  v8 = type metadata accessor for MainActor(0);
  v7[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[7] = v9;
  v7[8] = v10;
  return swift_task_switch(sub_1009D91E4, v9, v10);
}

void sub_1009D91E4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, double);

  sub_10090373C();
  v0[9] = v1;
  if (v1)
  {
    v3 = (void (*)(uint64_t, double))((char *)&dword_1013E45B0 + dword_1013E45B0);
    v2 = (_QWORD *)swift_task_alloc(unk_1013E45B4);
    v0[10] = v2;
    *v2 = v0;
    v2[1] = sub_1009D9260;
    v3(v0[2], 2.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1009D9260(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 64);
    v8 = sub_1009D9318;
  }
  else
  {

    *(_QWORD *)(v4 + 96) = a1;
    v6 = *(_QWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 64);
    v8 = sub_1009D92DC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1009D92DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_task_switch(sub_1009DA440, 0, 0);
}

uint64_t sub_1009D9318()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_task_switch(sub_1009DA444, 0, 0);
}

uint64_t sub_1009D935C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1009D938C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_10128EE58, (uint64_t)&unk_101400170);
}

uint64_t sub_1009D938C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a7;
  v41 = a8;
  v37 = a4;
  v38 = a1;
  v39 = a2;
  v42 = a10;
  v36 = a9;
  v13 = type metadata accessor for CRLBoardIdentifier(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_1004E1B3C(a3, (uint64_t)v16);
  v21 = *(unsigned __int8 *)(v14 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject(v36, v26 + 8, v21 | 7);
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  sub_1004DB5FC((uint64_t)v16, v27 + v22);
  v28 = (_QWORD *)(v27 + v23);
  *v28 = v37;
  v28[1] = a5;
  v29 = (_QWORD *)(v27 + v24);
  v31 = v39;
  v30 = v40;
  *v29 = a6;
  v29[1] = v30;
  v32 = (_QWORD *)(v27 + v25);
  *v32 = v38;
  v32[1] = v31;
  *(_QWORD *)(v27 + v26) = v41;
  swift_bridgeObjectRetain(a5);
  swift_unknownObjectRetain(a6);
  swift_retain(v31);
  v33 = sub_100521B98((uint64_t)v19, v42, v27);
  swift_release(v33);
  return 0;
}

uint64_t sub_1009D9540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v7[4] = v12;
  v7[5] = v13;
  v7[2] = a4;
  v7[3] = a7;
  v8 = type metadata accessor for MainActor(0);
  v7[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[7] = v9;
  v7[8] = v10;
  return swift_task_switch(sub_1009D95B8, v9, v10);
}

void sub_1009D95B8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, double);

  sub_10090373C();
  v0[9] = v1;
  if (v1)
  {
    v3 = (void (*)(uint64_t, double))((char *)&dword_1013E45B0 + dword_1013E45B0);
    v2 = (_QWORD *)swift_task_alloc(unk_1013E45B4);
    v0[10] = v2;
    *v2 = v0;
    v2[1] = sub_1009D9634;
    v3(v0[2], 2.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1009D9634(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(_QWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 64);
    v8 = sub_1009D9778;
  }
  else
  {

    *(_QWORD *)(v4 + 96) = a1;
    v6 = *(_QWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 64);
    v8 = sub_1009D96B0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1009D96B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_task_switch(sub_1009D96EC, 0, 0);
}

uint64_t sub_1009D96EC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, unint64_t, _QWORD);
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(void **)(v0 + 96);
  v2 = *(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 32);
  v3 = objc_msgSend(v1, "PNGRepresentation");
  v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v2(v4, v6, 0);
  sub_1004BBBC8(v4, v6);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009D9778()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_task_switch(sub_1009D97BC, 0, 0);
}

uint64_t sub_1009D97BC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, unint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void (**)(_QWORD, unint64_t, uint64_t))(v0 + 32);
  swift_errorRetain(v1);
  v2(0, 0xF000000000000000, v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLBoardShareItemProviderHelper()
{
  return objc_opt_self(_TtC8Freeform31CRLBoardShareItemProviderHelper);
}

uint64_t sub_1009D9840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 16);
  v8 = v1 + v4;
  v9 = (uint64_t *)(v1 + v5);
  v10 = *v9;
  v11 = v9[1];
  v12 = *(_QWORD *)(v1 + v6);
  v13 = (_QWORD *)swift_task_alloc(dword_10140016C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_1009D9540(a1, v15, v7, v8, v10, v11, v12);
}

id sub_1009D993C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  __n128 v37;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46[24];

  v45 = a7;
  v43 = a4;
  v12 = type metadata accessor for CRLBoardIdentifier(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController);
  v16 = *(void **)(*(_QWORD *)(v42 + 112) + 112);
  v17 = objc_allocWithZone((Class)NSItemProvider);
  v18 = v16;
  v19 = objc_msgSend(v17, "init");
  v20 = objc_msgSend((id)objc_opt_self(CKAllowedSharingOptions), "standardOptions");
  objc_msgSend(v20, "setSupportAllowingAddedParticipantsToInviteOthers:", 1);
  if (a1)
  {
    v21 = qword_1013DD8C8;
    v22 = a1;
    if (v21 != -1)
      swift_once(&qword_1013DD8C8, sub_100A069BC);
    swift_beginAccess(&static OS_os_log.shareState, v46, 0, 0);
    v23 = (id)static OS_os_log.shareState;
    v25 = static os_log_type_t.default.getter(v24);
    sub_100A06EBC((uint64_t)v23, &_mh_execute_header, v25, "A share already exists. Creating item provider with existing share.", 67, 2, (uint64_t)_swiftEmptyArrayStorage);

    NSItemProvider.registerCKShare(_:container:allowedSharingOptions:)((CKShare)v22, (CKContainer)v18, (CKAllowedSharingOptions)v20);
  }
  else
  {
    sub_1004E1B3C(a3, (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    v26 = *(unsigned __int8 *)(v13 + 80);
    v27 = (v26 + 32) & ~v26;
    v28 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    v40 = v20;
    v41 = v19;
    v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    v32 = swift_allocObject(&unk_10128EF48, v31 + 8, v26 | 7);
    *(_QWORD *)(v32 + 16) = a6;
    v39 = a6;
    v33 = v45;
    *(_QWORD *)(v32 + 24) = v45;
    sub_1004DB5FC((uint64_t)v15, v32 + v27);
    v34 = (_QWORD *)(v32 + v28);
    v35 = v42;
    *v34 = v43;
    v34[1] = a5;
    *(_QWORD *)(v32 + v29) = v35;
    *(_QWORD *)(v32 + v30) = v18;
    *(_QWORD *)(v32 + v31) = v44;
    v20 = v40;
    v19 = v41;
    v36 = v18;
    sub_10057939C(v39, v33);
    swift_bridgeObjectRetain(a5);
    v37 = swift_retain(v35);
    NSItemProvider.registerCKShare(container:allowedSharingOptions:preparationHandler:)(v36, v20, &unk_101400200, v32, v37);
    swift_release(v32);
  }

  return v19;
}

id sub_1009D9BDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v26;

  v8 = type metadata accessor for CRLBoardIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  v13 = sub_1004B8930(0, &qword_101400188, NSURL_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v13, v14);
  sub_1004E1B3C(a2, (uint64_t)v11);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_10128EEA8, v18 + 16, v16 | 7);
  *(_QWORD *)(v19 + 16) = a1;
  sub_1004DB5FC((uint64_t)v11, v19 + v17);
  v20 = (_QWORD *)(v19 + v18);
  *v20 = a3;
  v20[1] = a4;
  aBlock[4] = sub_1009DA008;
  v26 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(_QWORD *)"";
  aBlock[2] = sub_1009D90C0;
  aBlock[3] = &unk_10128EEC0;
  v21 = _Block_copy(aBlock);
  v22 = v26;
  v23 = a1;
  swift_bridgeObjectRetain(a4);
  objc_msgSend(v12, "registerObjectOfClass:visibility:loadHandler:", ObjCClassFromMetadata, 0, v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);
  return v12;
}

uint64_t sub_1009D9D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = v2 | 7;
  v5 = (((*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v4);
}

uint64_t sub_1009D9E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 16);
  v8 = v1 + v4;
  v9 = (uint64_t *)(v1 + v5);
  v10 = *v9;
  v11 = v9[1];
  v12 = *(_QWORD *)(v1 + v6);
  v13 = (_QWORD *)swift_task_alloc(dword_10140017C);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1004CFD00;
  return sub_1009D916C(a1, v15, v7, v8, v10, v11, v12);
}

uint64_t sub_1009D9F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v5 + 16, v4);
}

id sub_1009DA008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1009D8EA0(a1, a2, *(void **)(v2 + 16), v2 + v6, *v7, v7[1]);
}

double sub_1009DA070(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009DA080(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1009DA088()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009DA0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (((*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + v5 + 8));

  return swift_deallocObject(v0, v6 + 8, v4);
}

uint64_t sub_1009DA190(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v3 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (uint64_t)v1 + v4;
  v11 = (_QWORD *)((char *)v1 + v5);
  v12 = *v11;
  v13 = v11[1];
  v14 = *(_QWORD *)((char *)v1 + v6);
  v15 = (_QWORD *)swift_task_alloc(dword_1013F75F4);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_1004CF80C;
  return sub_10089F66C(a1, v7, v8, v9, v10, v12, v13, v14);
}

uint64_t sub_1009DA278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v0 + 24);
  if (v4 >> 60 != 15)
    sub_1004BBBC8(*(_QWORD *)(v0 + 16), v4);
  v5 = (v2 + 32) & ~v2;
  v6 = (((v3 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v5;
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1009DA368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = *(_QWORD *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = v0 + v3;
  v9 = (uint64_t *)(v0 + v4);
  v10 = *v9;
  v11 = v9[1];
  v12 = *(_QWORD *)(v0 + v5);
  v13 = *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_1014001FC);
  *(_QWORD *)(v1 + 16) = v14;
  *v14 = v1;
  v14[1] = sub_1006E97CC;
  return sub_1009D847C(v6, v7, v8, v10, v11, v12, v13);
}

_QWORD *sub_1009DA448(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  v31 = (uint64_t)&v29 - v9;
  if ((a1 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"copy(clearCRDTMetadata:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2, 50, "Cannot clear CRDT metadata for unknown item's specific data.", 60, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"copy(clearCRDTMetadata:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2u, 50, (uint64_t)"Cannot clear CRDT metadata for unknown item's specific data.", 60, 2u);
    v11 = (uint64_t)v2 + *(_QWORD *)(*v2 + 632);
    swift_beginAccess(v11, v32, 0, 0);
    sub_1009DAC18(v11, (uint64_t)v7);
    v12 = sub_100890010();
    CRStruct_6.copy(renamingReferences:)(0, v5, v12);
    sub_1009DAC60((uint64_t)v7);
  }
  else
  {
    v13 = (uint64_t)v2 + *(_QWORD *)(v4 + 632);
    swift_beginAccess(v13, v32, 0, 0);
    sub_1009DAC18(v13, (uint64_t)v10);
  }
  v14 = qword_101400218;
  v15 = *(_QWORD *)((char *)v2 + qword_101400218);
  v16 = *((_BYTE *)v2 + qword_101400218 + 8);
  v17 = qword_101400220;
  v18 = *(_QWORD *)((char *)v2 + qword_101400220);
  v19 = *(_QWORD *)((char *)v2 + qword_101400220 + 8);
  v20 = v2[5];
  v30 = v2[4];
  v23 = v2 + 2;
  v21 = v2[2];
  v22 = v23[1];
  v24 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v25 = v24 + v14;
  *(_QWORD *)v25 = v15;
  *(_BYTE *)(v25 + 8) = v16;
  v26 = (uint64_t *)(v24 + v17);
  *v26 = v18;
  v26[1] = v19;
  sub_1009DACA0(v31, v24 + *(_QWORD *)(*(_QWORD *)v24 + 632));
  v27 = sub_1005E1000(v22, v30, v20, v21);
  sub_1004BE310(v18, v19);
  return v27;
}

uint64_t sub_1009DA6A4(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v4;
  _BYTE *v5;
  __n128 v6;
  _BYTE v7[24];
  _BYTE v8[24];

  if (*(_BYTE *)(a1 + 16) == 1 && (v1[16] & 4) != 0
    || (swift_beginAccess(a1 + 32, v8, 0, 0), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)) && (v1[16] & 2) != 0)
  {
    v4 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v4, 0, 0);
    *v5 = 14;
    return swift_willThrow(v6);
  }
  else
  {
    swift_beginAccess(&v1[*(_QWORD *)(*(_QWORD *)v1 + 632)], v7, 33, 0);
    sub_100D3D410(a1);
    return swift_endAccess(v7);
  }
}

uint64_t sub_1009DA780()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_101400218);
}

uint64_t sub_1009DA798()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1009DA7A0()
{
  uint64_t v0;

  return *(_DWORD *)(v0 + 16) & 1;
}

uint64_t sub_1009DA7AC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1009DA7B4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1009DA7BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v21[-v7];
  if (*(_UNKNOWN ****)a1 != &off_101400278)
    goto LABEL_2;
  v11 = *(_QWORD *)(v1 + qword_101400218);
  v12 = *(_BYTE *)(a1 + qword_101400218 + 8);
  if (*(_BYTE *)(v1 + qword_101400218 + 8) == 1)
    __asm { BR              X12 }
  if (v11 != *(_QWORD *)(a1 + qword_101400218))
    v12 = 1;
  if ((v12 & 1) != 0)
  {
LABEL_2:
    v9 = 0;
  }
  else
  {
    v13 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
    swift_beginAccess(v13, v22, 0, 0);
    sub_1009DAC18(v13, (uint64_t)v8);
    v14 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 632);
    swift_beginAccess(v14, v21, 0, 0);
    sub_1009DAC18(v14, (uint64_t)v5);
    swift_retain(a1);
    LOBYTE(v14) = sub_100D5ED30((uint64_t)v8, (uint64_t)v5);
    sub_1009DAC60((uint64_t)v5);
    sub_1009DAC60((uint64_t)v8);
    if ((v14 & 1) != 0)
    {
      v15 = v1 + qword_101400220;
      v16 = *(_QWORD *)(v1 + qword_101400220);
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(_QWORD *)(a1 + qword_101400220);
      v19 = *(_QWORD *)(a1 + qword_101400220 + 8);
      sub_1004BE310(v18, v19);
      sub_1007B38CC(v16, v17);
      v9 = v20;
      sub_1004BBBC8(v18, v19);
    }
    else
    {
      v9 = 0;
    }
    swift_release(a1);
  }
  return v9 & 1;
}

void sub_1009DA99C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 1)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DA9AC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 2)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DA9BC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 3)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DA9CC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 4)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DA9DC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 5)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DA9EC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 6)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DA9FC(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 7)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DAA0C(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 9)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

void sub_1009DAA1C(int a1@<W8>)
{
  unint64_t v1;

  if (v1 <= 9)
    a1 = 0;
  if (a1 != 1)
    JUMPOUT(0x1009DA840);
  JUMPOUT(0x1009DA8BCLL);
}

void sub_1009DAA30(char a1@<W8>)
{
  uint64_t v1;

  if (v1 != 8)
    a1 = 0;
  if ((a1 & 1) != 0)
    JUMPOUT(0x1009DA8BCLL);
  JUMPOUT(0x1009DA840);
}

uint64_t sub_1009DAA40(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"serializedItemSpecificData(_:clearCRDTMetadata:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2, 65, "Cannot clear CRDT metadata for unknown item's specific data.", 60, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"serializedItemSpecificData(_:clearCRDTMetadata:)", 48, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2u, 65, (uint64_t)"Cannot clear CRDT metadata for unknown item's specific data.", 60, 2u);
  }
  v3 = v2 + qword_101400220;
  v4 = *(_QWORD *)(v2 + qword_101400220);
  sub_1004BE310(v4, *(_QWORD *)(v3 + 8));
  return v4;
}

uint64_t sub_1009DAB30()
{
  return 0;
}

uint64_t sub_1009DAB3C()
{
  uint64_t v0;

  return sub_1004BBBC8(*(_QWORD *)(v0 + qword_101400220), *(_QWORD *)(v0 + qword_101400220 + 8));
}

uint64_t sub_1009DAB50()
{
  uint64_t v0;

  sub_1009DAC60(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632));
  sub_1004BBBC8(*(_QWORD *)(v0 + qword_101400220), *(_QWORD *)(v0 + qword_101400220 + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLUnknownItemData(uint64_t a1)
{
  uint64_t result;

  result = qword_101400250;
  if (!qword_101400250)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUnknownItemData);
  return result;
}

uint64_t sub_1009DABD0(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = "\t";
  v2[1] = &unk_100F1FF40;
  return swift_initClassMetadata2(a1, 256, 2, v2, a1 + 672);
}

uint64_t sub_1009DAC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009DAC60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009DACA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1009DACFC(double a1, double a2)
{
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;

  v4 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v5 = a1 + -5.75;
  v6 = a2 + -5.75;
  v7 = a1 + 5.75;
  v8 = a2 + 5.75;
  objc_msgSend(v4, "moveToPoint:", v5, v6);
  objc_msgSend(v4, "addLineToPoint:", v7, v8);
  objc_msgSend(v4, "moveToPoint:", v5, v8);
  objc_msgSend(v4, "addLineToPoint:", v7, v6);
  objc_msgSend(v4, "closePath");
  v9 = objc_msgSend(v4, "CGPath");
  v10 = objc_msgSend((id)objc_opt_self(CRLBezierPath), "bezierPathWithCGPath:", v9);

  if (v10)
  else
    __break(1u);
}

uint64_t sub_1009DAE24(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = swift_getObjectType(v2);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 56) = v5;
  *(_QWORD *)(v3 + 64) = v6;
  return swift_task_switch(sub_1009DAEA4, v5, v6);
}

uint64_t sub_1009DAEA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 72) = v6;
  v7 = swift_allocObject(&unk_10128F038, 24, 7);
  *(_QWORD *)(v1 + 80) = v7;
  swift_unknownObjectWeakInit(v7 + 16, v4);
  v8 = swift_task_alloc(48);
  *(_QWORD *)(v1 + 88) = v8;
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v5;
  *(_BYTE *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v2;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 96) = v9;
  *v9 = v1;
  v9[1] = sub_1009DAF94;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, v6, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x8000000100FE9690, sub_1009DC330, v8, (char *)&type metadata for () + 8);
}

uint64_t sub_1009DAF94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[7];
    v5 = v2[8];
    v6 = sub_1009DB01C;
  }
  else
  {
    v7 = v2[11];
    v8 = v2[9];
    swift_release(v2[10]);
    swift_release(v8);
    swift_task_dealloc(v7);
    v4 = v2[7];
    v5 = v2[8];
    v6 = sub_100590EA8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1009DB01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(v1);
  swift_release(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DB078(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 24) = swift_getObjectType(v1);
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 56) = v5;
  return swift_task_switch(sub_1009DB0F8, v4, v5);
}

uint64_t sub_1009DB0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 112);
  v4 = swift_allocObject(&unk_10128F010, 32, 7);
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = static MainActor.shared.getter(v4);
  *(_QWORD *)(v0 + 72) = v5;
  v6 = swift_allocObject(&unk_10128F038, 24, 7);
  *(_QWORD *)(v0 + 80) = v6;
  swift_unknownObjectWeakInit(v6 + 16, v2);
  v7 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 88) = v7;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v4;
  *(_BYTE *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v1;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 96) = v8;
  *v8 = v0;
  v8[1] = sub_1009DB208;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v5, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000100FE93B0, sub_1009DC2F8, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1009DB208()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_1009DB2D0;
  }
  else
  {
    v7 = v2[11];
    v8 = v2[9];
    swift_release(v2[10]);
    swift_release(v8);
    swift_task_dealloc(v7);
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_1009DB290;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1009DB290()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 40));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1009DB2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v1);
  swift_release(v3);
  swift_release(v4);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009DB33C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009DB360()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1009DB384(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  double result;
  void *v22;
  double v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  double v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  Swift::String v41;
  Swift::String v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  Swift::String v48;
  void **v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **aBlock;
  unint64_t v61;
  double (*v62)(uint64_t);
  void *v63;
  uint64_t (*v64)();
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char v68[24];

  v8 = sub_1004B804C(&qword_1013EB680);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = a2 + 16;
  v12 = swift_allocObject(&unk_10128F010, 32, 7);
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  swift_beginAccess(v11, v68, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v14 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    v15 = *(unsigned __int8 *)(v9 + 80);
    v59 = a1;
    v16 = (v15 + 24) & ~v15;
    v17 = swift_allocObject(&unk_10128F0B0, v16 + v10, v15 | 7);
    *(_QWORD *)(v17 + 16) = v12;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    v64 = sub_1009DC3BC;
    v65 = v17;
    aBlock = _NSConcreteStackBlock;
    v61 = *(_QWORD *)"";
    v62 = sub_1005D2FC0;
    v63 = &unk_10128F0C8;
    v18 = _Block_copy(&aBlock);
    v19 = v65;
    swift_retain(v12);
    objc_msgSend(v14, "presentViewController:animated:completion:", a3, a4 & 1, v18, swift_release(v19).n128_f64[0]);
    _Block_release(v18);
    v20 = objc_msgSend(a3, "presentationController");

    if (v20)
    {
      swift_release(v12);

      return result;
    }
    aBlock = 0;
    v61 = 0xE000000000000000;
    v35 = v14;
    _StringGuts.grow(_:)(42);
    *(_QWORD *)&v36 = swift_bridgeObjectRelease(v61).n128_u64[0];
    aBlock = (void **)0xD000000000000022;
    v61 = 0x8000000100FE96B0;
    v37 = objc_msgSend(a3, "description", v36);
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v40 = v39;

    v41._countAndFlagsBits = v38;
    v41._object = v40;
    String.append(_:)(v41);
    swift_bridgeObjectRelease(v40);
    v42._countAndFlagsBits = 544108320;
    v42._object = (void *)0xE400000000000000;
    String.append(_:)(v42);
    v43 = v35;
    v44 = objc_msgSend(v43, "description");
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v47 = v46;

    v48._countAndFlagsBits = v45;
    v48._object = v47;
    String.append(_:)(v48);
    swift_bridgeObjectRelease(v47);
    v49 = aBlock;
    v50 = v61;

    v51 = sub_10092169C();
    v52 = swift_allocError(&_s34CRLViewControllerPresentationErrorON, v51, 0, 0);
    *(_QWORD *)v53 = v49;
    *(_QWORD *)(v53 + 8) = v50;
    *(_QWORD *)(v53 + 16) = 0xD000000000000078;
    *(_QWORD *)(v53 + 24) = 0x8000000100FE96E0;
    *(_BYTE *)(v53 + 32) = 0;
    sub_1009DB8A8(v59, v52, 1, v12);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"crl_presentAsync(_:animated:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 74, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_presentAsync(_:animated:)", 29, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2u, 74, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_beginAccess(v11, &aBlock, 0, 0);
    v22 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    v66 = 0;
    v67 = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    *(_QWORD *)&v23 = swift_bridgeObjectRelease(v67).n128_u64[0];
    v66 = 0xD000000000000022;
    v67 = 0x8000000100FE96B0;
    v24 = objc_msgSend(a3, "description", v23);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28._countAndFlagsBits = v25;
    v28._object = v27;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v27);
    v29._countAndFlagsBits = 544108320;
    v29._object = (void *)0xE400000000000000;
    String.append(_:)(v29);
    if (v22)
    {
      v30 = v22;
      v31 = objc_msgSend(v30, "description");
      v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v34 = v33;

    }
    else
    {
      v34 = (void *)0xE500000000000000;
      v32 = 0x3E6C696E3CLL;
    }
    v54._countAndFlagsBits = v32;
    v54._object = v34;
    String.append(_:)(v54);
    swift_bridgeObjectRelease(v34);
    v55 = v66;
    v56 = v67;

    v57 = sub_10092169C();
    v52 = swift_allocError(&_s34CRLViewControllerPresentationErrorON, v57, 0, 0);
    *(_QWORD *)v58 = v55;
    *(_QWORD *)(v58 + 8) = v56;
    *(_QWORD *)(v58 + 16) = 0xD000000000000078;
    *(_QWORD *)(v58 + 24) = 0x8000000100FE96E0;
    *(_BYTE *)(v58 + 32) = 0;
    sub_1009DB8A8(a1, v52, 1, v12);
  }
  swift_errorRelease(v52);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_1009DB8A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  __int128 *v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[72];
  __int128 v30;
  _QWORD v31[3];
  uint64_t v32;
  unint64_t v33;
  _BYTE v34[24];

  v7 = (__int128 *)(a4 + 16);
  swift_beginAccess(a4 + 16, v34, 0, 0);
  if (*(_QWORD *)(a4 + 24))
  {
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(328);
    v32 = 0;
    v33 = 0xE000000000000000;
    v8._countAndFlagsBits = 0xD000000000000101;
    v8._object = (void *)0x8000000100FE9760;
    String.append(_:)(v8);
    swift_beginAccess(v7, v31, 0, 0);
    v30 = *v7;
    v9 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
    _print_unlocked<A, B>(_:_:)(&v30, &v32, v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v10._object = (void *)0x8000000100FE9610;
    v10._countAndFlagsBits = 0xD000000000000043;
    String.append(_:)(v10);
    v11 = objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "packedBacktraceString");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v15._countAndFlagsBits = v12;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v14);
    v16 = v32;
    v17 = v33;
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v29);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v16;
    *(_QWORD *)(inited + 40) = v17;
    sub_100757E04(&_mh_execute_header, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 70, "%@", 2, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2u, 70, (uint64_t)"%@", 2, 2u);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    return swift_arrayDestroy(inited + 32, 1, v20);
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "packedBacktraceString");
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    swift_beginAccess(v7, v31, 1, 0);
    v26 = *(_QWORD *)(a4 + 24);
    *(_QWORD *)(a4 + 16) = v23;
    *(_QWORD *)(a4 + 24) = v25;
    swift_bridgeObjectRelease(v26);
    if ((a3 & 1) != 0)
    {
      v32 = a2;
      swift_errorRetain(a2);
      v28 = sub_1004B804C(&qword_1013EB680);
      return CheckedContinuation.resume(throwing:)(&v32, v28);
    }
    else
    {
      v27 = sub_1004B804C(&qword_1013EB680);
      return CheckedContinuation.resume(returning:)(v27, v27);
    }
  }
}

uint64_t sub_1009DBB84(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  __int128 *v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[72];
  __int128 v30;
  _QWORD v31[3];
  uint64_t v32;
  unint64_t v33;
  _BYTE v34[24];

  v7 = (__int128 *)(a4 + 16);
  swift_beginAccess(a4 + 16, v34, 0, 0);
  if (*(_QWORD *)(a4 + 24))
  {
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(328);
    v32 = 0;
    v33 = 0xE000000000000000;
    v8._countAndFlagsBits = 0xD000000000000101;
    v8._object = (void *)0x8000000100FE9500;
    String.append(_:)(v8);
    swift_beginAccess(v7, v31, 0, 0);
    v30 = *v7;
    v9 = sub_1004B804C((uint64_t *)&unk_1013E1C80);
    _print_unlocked<A, B>(_:_:)(&v30, &v32, v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v10._object = (void *)0x8000000100FE9610;
    v10._countAndFlagsBits = 0xD000000000000043;
    String.append(_:)(v10);
    v11 = objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "packedBacktraceString");
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    v15._countAndFlagsBits = v12;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v14);
    v16 = v32;
    v17 = v33;
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v29);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v16;
    *(_QWORD *)(inited + 40) = v17;
    sub_100757E04(&_mh_execute_header, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 129, "%@", 2, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2u, 129, (uint64_t)"%@", 2, 2u);
    swift_setDeallocating(inited);
    v20 = sub_1004B804C(&qword_1013E0190);
    return swift_arrayDestroy(inited + 32, 1, v20);
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "packedBacktraceString");
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    swift_beginAccess(v7, v31, 1, 0);
    v26 = *(_QWORD *)(a4 + 24);
    *(_QWORD *)(a4 + 16) = v23;
    *(_QWORD *)(a4 + 24) = v25;
    swift_bridgeObjectRelease(v26);
    if ((a3 & 1) != 0)
    {
      v32 = a2;
      swift_errorRetain(a2);
      v28 = sub_1004B804C(&qword_1013EB680);
      return CheckedContinuation.resume(throwing:)(&v32, v28);
    }
    else
    {
      v27 = sub_1004B804C(&qword_1013EB680);
      return CheckedContinuation.resume(returning:)(v27, v27);
    }
  }
}

void sub_1009DBE60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *Strong;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  Swift::String v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void **aBlock;
  unint64_t v47;
  double (*v48)(uint64_t);
  void *v49;
  uint64_t (*v50)();
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54[24];

  v8 = sub_1004B804C(&qword_1013EB680);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v54, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = objc_msgSend(Strong, "presentationController");

    if (v14)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
      v15 = *(unsigned __int8 *)(v9 + 80);
      v16 = (v15 + 24) & ~v15;
      v17 = swift_allocObject(&unk_10128F060, v16 + v10, v15 | 7);
      *(_QWORD *)(v17 + 16) = a3;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      v50 = sub_1009DC30C;
      v51 = v17;
      aBlock = _NSConcreteStackBlock;
      v47 = *(_QWORD *)"";
      v48 = sub_1005D2FC0;
      v49 = &unk_10128F078;
      v18 = _Block_copy(&aBlock);
      v19 = v51;
      swift_retain(a3);
      objc_msgSend(v13, "dismissViewControllerAnimated:completion:", a4 & 1, v18, swift_release(v19).n128_f64[0]);
      _Block_release(v18);
    }
    else
    {
      aBlock = 0;
      v47 = 0xE000000000000000;
      v27 = v13;
      _StringGuts.grow(_:)(89);
      v28._countAndFlagsBits = 0xD00000000000002FLL;
      v28._object = (void *)0x8000000100FE9430;
      String.append(_:)(v28);
      v13 = v27;
      v29 = objc_msgSend(v13, "description");
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v32 = v31;

      v33._countAndFlagsBits = v30;
      v33._object = v32;
      String.append(_:)(v33);
      swift_bridgeObjectRelease(v32);
      v34._object = (void *)0x8000000100FE9460;
      v34._countAndFlagsBits = 0xD000000000000028;
      String.append(_:)(v34);

      v35 = sub_10092169C();
      v36 = swift_allocError(&_s34CRLViewControllerPresentationErrorON, v35, 0, 0);
      *(_QWORD *)v37 = 0;
      *(_QWORD *)(v37 + 8) = 0xE000000000000000;
      *(_QWORD *)(v37 + 16) = 0xD000000000000065;
      *(_QWORD *)(v37 + 24) = 0x8000000100FE9490;
      *(_BYTE *)(v37 + 32) = 1;
      sub_1009DBB84(a1, v36, 1, a3);
      swift_errorRelease(v36);
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"crl_dismissAsync(animated:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 134, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_dismissAsync(animated:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2u, 134, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    swift_beginAccess(v11, &aBlock, 0, 0);
    v20 = (void *)swift_unknownObjectWeakLoadStrong(v11);
    v52 = 0;
    v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(89);
    v21._countAndFlagsBits = 0xD00000000000002FLL;
    v21._object = (void *)0x8000000100FE9430;
    String.append(_:)(v21);
    if (v20)
    {
      v22 = v20;
      v23 = objc_msgSend(v22, "description");
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v26 = v25;

    }
    else
    {
      v26 = (void *)0xE500000000000000;
      v24 = 0x3E6C696E3CLL;
    }
    v38._countAndFlagsBits = v24;
    v38._object = v26;
    String.append(_:)(v38);
    swift_bridgeObjectRelease(v26);
    v39._object = (void *)0x8000000100FE9460;
    v39._countAndFlagsBits = 0xD000000000000028;
    String.append(_:)(v39);
    v40 = v52;
    v41 = v53;

    v42 = sub_10092169C();
    v43 = swift_allocError(&_s34CRLViewControllerPresentationErrorON, v42, 0, 0);
    *(_QWORD *)v44 = v40;
    *(_QWORD *)(v44 + 8) = v41;
    *(_QWORD *)(v44 + 16) = 0xD000000000000065;
    *(_QWORD *)(v44 + 24) = 0x8000000100FE9490;
    *(_BYTE *)(v44 + 32) = 1;
    sub_1009DBB84(a1, v43, 1, a3);
    swift_errorRelease(v43);
  }
}

void sub_1009DC2F8(uint64_t a1)
{
  uint64_t v1;

  sub_1009DBE60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1009DC30C()
{
  return sub_1009DC3C8((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1009DBB84);
}

double sub_1009DC318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009DC328(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_1009DC330(uint64_t a1)
{
  uint64_t v1;

  return sub_1009DB384(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1009DC344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009DC3BC()
{
  return sub_1009DC3C8((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1009DB8A8);
}

uint64_t sub_1009DC3C8(uint64_t (*a1)(uint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1004B804C(&qword_1013EB680) - 8) + 80);
  return a1(v1 + ((v2 + 24) & ~v2), 0, 0, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1009DC414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  result = a2;
  if (a5 < 2u)
  {
    swift_bridgeObjectRetain(a2);
    result = a4;
    return swift_bridgeObjectRetain(result);
  }
  if (a5 == 2)
    return swift_bridgeObjectRetain(result);
  return result;
}

uint64_t _s34CRLViewControllerPresentationErrorOwxx(uint64_t a1)
{
  return sub_1009DC468(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1009DC468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  result = a2;
  if (a5 < 2u)
  {
    swift_bridgeObjectRelease(a2);
    result = a4;
    return swift_bridgeObjectRelease(result);
  }
  if (a5 == 2)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s34CRLViewControllerPresentationErrorOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1009DC414(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s34CRLViewControllerPresentationErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1009DC414(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1009DC468(v8, v9, v10, v11, v12);
  return a1;
}

__n128 _s34CRLViewControllerPresentationErrorOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s34CRLViewControllerPresentationErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1009DC468(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s34CRLViewControllerPresentationErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s34CRLViewControllerPresentationErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1009DC664(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1009DC66C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *_s34CRLViewControllerPresentationErrorOMa()
{
  return &_s34CRLViewControllerPresentationErrorON;
}

uint64_t sub_1009DC690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = OBJC_IVAR____TtC8Freeform30CRLBoardCloudFetchSyncObserver_syncObserver;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLBoardCloudFetchSyncObserver_syncObserver);
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    v4 = objc_msgSend(v3, "defaultCenter", swift_unknownObjectRetain(v2).n128_f64[0]);
    objc_msgSend(v4, "removeObserver:", v2);
    swift_unknownObjectRelease(v2);

  }
  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform30CRLBoardCloudFetchSyncObserver_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v1));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform30CRLBoardCloudFetchSyncObserver_notificationBlock + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1009DC754()
{
  return type metadata accessor for CRLBoardCloudFetchSyncObserver(0);
}

uint64_t type metadata accessor for CRLBoardCloudFetchSyncObserver(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101400578, (uint64_t)&nominal type descriptor for CRLBoardCloudFetchSyncObserver);
}

uint64_t sub_1009DC770(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = (char *)&value witness table for () + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_1009DC7F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_1004B804C(&qword_101400610);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for Date(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = sub_1004B804C(&qword_1013E04F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_1009DC924(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1004B804C(&qword_101400610);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Date(0);
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *sub_1009DC9B4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1004B804C(&qword_101400610);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_1004B804C(&qword_1013E04F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1009DCAC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_1004B804C(&qword_101400610);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Date(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_1004B804C(&qword_1013E04F0) - 8);
      goto LABEL_8;
    }
    sub_1004CB800((uint64_t)a1, &qword_101400610);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_1004B804C(&qword_1013E04F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

void *sub_1009DCCA8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1004B804C(&qword_101400610);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_1004B804C(&qword_1013E04F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1009DCDB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_1004B804C(&qword_101400610);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Date(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_1004B804C(&qword_1013E04F0) - 8);
      goto LABEL_8;
    }
    sub_1004CB800((uint64_t)a1, &qword_101400610);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_1004B804C(&qword_1013E04F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1009DCF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009DCFA8);
}

uint64_t sub_1009DCFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1004B804C(&qword_101400610);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5)
    return v5 - 4;
  else
    return 0;
}

uint64_t sub_1009DCFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009DD004);
}

uint64_t sub_1009DD004(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = sub_1004B804C(&qword_101400610);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1009DD05C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_101400610);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
}

uint64_t sub_1009DD098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101400610);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 4, v4);
}

uint64_t type metadata accessor for CRLBoardCloudFetchSyncObserver.Result(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101400688, (uint64_t)&nominal type descriptor for CRLBoardCloudFetchSyncObserver.Result);
}

void sub_1009DD0F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_10056ACC0(319);
  if (v3 <= 0x3F)
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(v2 - 8) + 64, 4);
}

void sub_1009DD144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Sync;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];

  v4 = type metadata accessor for Date(0);
  v16[0] = *(_QWORD *)(v4 - 8);
  v16[1] = v4;
  __chkstk_darwin(v4);
  v5 = sub_1004B804C(&qword_101400698);
  __chkstk_darwin(v5);
  v6 = sub_1004B804C(&qword_1013E04F0);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  Sync = type metadata accessor for CRLBoardCloudFetchSyncObserver.Result(0);
  __chkstk_darwin(Sync);
  v9 = sub_1004B804C(&qword_1014006A0);
  __chkstk_darwin(v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v11[*(int *)(v12 + 48)];
  sub_1009DD558(a1, (uint64_t)v11);
  sub_1009DD558(a2, v13);
  v14 = sub_1004B804C(&qword_101400610);
  v15 = (char *)sub_1009DD304
      + 4
      * byte_100F20010[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 4, v14)];
  __asm { BR              X10 }
}

uint64_t sub_1009DD304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  char v16;
  void (*v17)(uint64_t, uint64_t);

  sub_1009DD558(v0, v9);
  if (!v8(v1, 4, v7))
  {
    sub_100657FA8(v1, v5);
    v12 = v2 + *(int *)(v6 + 48);
    sub_100657FA8(v9, v2);
    sub_1004E1F60(v5, v12);
    v14 = *(_QWORD *)(v10 - 96);
    v13 = *(_QWORD *)(v10 - 88);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (v15(v2, 1, v13) == 1)
    {
      sub_1004CB800(v5, &qword_1013E04F0);
      if (v15(v12, 1, v13) == 1)
      {
        sub_1004CB800(v2, &qword_1013E04F0);
LABEL_3:
        sub_1004B84A4(v0, type metadata accessor for CRLBoardCloudFetchSyncObserver.Result);
        return 1;
      }
    }
    else
    {
      sub_1004E1F60(v2, v4);
      if (v15(v12, 1, v13) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v3, v12, v13);
        sub_1009DD59C();
        v16 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v3);
        v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
        v17(v3, v13);
        sub_1004CB800(v5, &qword_1013E04F0);
        v17(v4, v13);
        sub_1004CB800(v2, &qword_1013E04F0);
        if ((v16 & 1) != 0)
          goto LABEL_3;
LABEL_12:
        sub_1004B84A4(v0, type metadata accessor for CRLBoardCloudFetchSyncObserver.Result);
        return 0;
      }
      sub_1004CB800(v5, &qword_1013E04F0);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v13);
    }
    sub_1004CB800(v2, &qword_101400698);
    goto LABEL_12;
  }
  sub_1004CB800(v9, &qword_1013E04F0);
  sub_1004CB800(v0, &qword_1014006A0);
  return 0;
}

uint64_t sub_1009DD558(uint64_t a1, uint64_t a2)
{
  uint64_t Sync;

  Sync = type metadata accessor for CRLBoardCloudFetchSyncObserver.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Sync - 8) + 16))(a2, a1, Sync);
  return a2;
}

unint64_t sub_1009DD59C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EDD80;
  if (!qword_1013EDD80)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_1013EDD80);
  }
  return result;
}

_UNKNOWN **sub_1009DD5E4()
{
  return &off_10126D348;
}

_UNKNOWN **sub_1009DD5F0()
{
  return &off_1012A12B8;
}

_UNKNOWN **sub_1009DD5FC()
{
  return &off_10126BA70;
}

_UNKNOWN **sub_1009DD608()
{
  return &off_101290348;
}

_QWORD *sub_1009DD614(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _BYTE v30[24];
  _BYTE v31[24];

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v30[-v9];
  v11 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v11);
  v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v30[-v15];
  v17 = *(_QWORD *)(v4 + 632);
  v18 = (uint64_t)v2 + v17;
  if ((a1 & 1) != 0)
  {
    swift_beginAccess((char *)v2 + v17, v30, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v19 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v11, v19);
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013F02C0);
    v20 = (uint64_t)v2 + qword_101480208;
    swift_beginAccess((char *)v2 + qword_101480208, v31, 0, 0);
    sub_1004B8460(v20, (uint64_t)v7, type metadata accessor for CRLURLItemCRDTData);
    v21 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
    CRStruct_1.copy(renamingReferences:)(0, v5, v21);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLURLItemCRDTData);
  }
  else
  {
    swift_beginAccess((char *)v2 + v17, v31, 0, 0);
    sub_1004CB7BC(v18, (uint64_t)v16, (uint64_t *)&unk_1013F02C0);
    v22 = (uint64_t)v2 + qword_101480208;
    swift_beginAccess((char *)v2 + qword_101480208, v30, 0, 0);
    sub_1004B8460(v22, (uint64_t)v10, type metadata accessor for CRLURLItemCRDTData);
  }
  v23 = v2[4];
  v24 = v2[5];
  v27 = v2 + 2;
  v25 = v2[2];
  v26 = v27[1];
  v28 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  sub_1004B84E0((uint64_t)v10, v28 + qword_101480208, type metadata accessor for CRLURLItemCRDTData);
  sub_1009DACA0((uint64_t)v16, v28 + *(_QWORD *)(*(_QWORD *)v28 + 632));
  return sub_1005E1000(v26, v23, v24, v25);
}

uint64_t sub_1009DD8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[24];
  _BYTE v43[24];
  uint64_t v44;

  v39 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v9);
  v40 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  swift_beginAccess(a1 + 32, v43, 0, 0);
  v44 = a1;
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16))
  {
    v38 = v1;
    v17 = v41 + qword_101480208;
    swift_beginAccess(v41 + qword_101480208, v42, 32, 0);
    v37 = sub_1004B804C(&qword_1013EF360);
    CRRegister.wrappedValue.getter(v37);
    swift_endAccess(v42);
    sub_1008FD5D8((uint64_t)v13, (uint64_t)v5);
    v18 = v3;
    v19 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v20 = v39;
    v19(v8, v5, v39);
    v21 = *(int *)(v6 + 20);
    v23 = *(_QWORD *)&v13[v21];
    v22 = *(_QWORD *)&v13[v21 + 8];
    v24 = *(_QWORD *)&v13[*(int *)(v6 + 24)];
    v25 = &v8[v21];
    *(_QWORD *)v25 = v23;
    *((_QWORD *)v25 + 1) = v22;
    *(_QWORD *)&v8[*(int *)(v6 + 24)] = v24;
    v26 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
    swift_bridgeObjectRetain(v22);
    v27 = swift_bridgeObjectRetain(v24);
    v26(v5, v20, v27);
    v28 = *(int *)(v9 + 20);
    v29 = &v13[v28];
    v30 = &v16[v28];
    v31 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v30, v29, v31);
    v32 = *(_QWORD *)&v13[*(int *)(v9 + 24)];
    sub_1004B84E0((uint64_t)v8, (uint64_t)v16, type metadata accessor for CRLAssetData);
    *(_QWORD *)&v16[*(int *)(v9 + 24)] = v32;
    swift_bridgeObjectRetain(v32);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLURLItemAtomicDataStruct);
    sub_1004B8460((uint64_t)v16, (uint64_t)v13, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_beginAccess(v17, v42, 33, 0);
    v33 = v40;
    sub_1004B8460((uint64_t)v13, v40, type metadata accessor for CRLURLItemAtomicDataStruct);
    CRRegister.wrappedValue.setter(v33, v37, v34);
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_endAccess(v42);
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLURLItemAtomicDataStruct);
  }
  swift_beginAccess(v41 + *(_QWORD *)(*(_QWORD *)v41 + 632), v42, 33, 0);
  sub_100D3D410(v44);
  return swift_endAccess(v42);
}

uint64_t sub_1009DDBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a1;
  v29 = a3;
  v5 = sub_1004B804C(&qword_1013EF360);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  __chkstk_darwin(v5);
  v26 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v24);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v24 - v16;
  sub_1004B8460(a1, (uint64_t)&v24 - v16, type metadata accessor for CRLAssetData);
  v18 = &v17[*(int *)(v9 + 20)];
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a2, v19);
  *(_QWORD *)&v17[*(int *)(v9 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1004B8460((uint64_t)v17, (uint64_t)v14, type metadata accessor for CRLURLItemAtomicDataStruct);
  *(_QWORD *)&v8[*(int *)(v24 + 20)] = _swiftEmptyDictionarySingleton;
  sub_1004B8460((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLURLItemAtomicDataStruct);
  v21 = sub_1004B7878((unint64_t *)&unk_101400AF0, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2069C);
  v22 = v26;
  CRRegister.init(_:)(v11, v9, v21);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLURLItemAtomicDataStruct);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v8, v22, v28);
  sub_1004B84E0((uint64_t)v8, v29, type metadata accessor for CRLURLItemCRDTData);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a2, v19);
  sub_1004B84A4(v25, type metadata accessor for CRLAssetData);
  return sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLURLItemAtomicDataStruct);
}

uint64_t sub_1009DDE24()
{
  uint64_t result;

  qword_1014801F0 = 97;
  *(_QWORD *)algn_1014801F8 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F206D8);
  qword_101480200 = result;
  return result;
}

uint64_t sub_1009DDE60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000011, 0x8000000100FE98F0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    if (qword_1013DDE28 != -1)
      swift_once(&qword_1013DDE28, sub_100C88730);
    v13 = type metadata accessor for UUID(0);
    v14 = sub_1004F2A1C(v13, (uint64_t)qword_101481278);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v14, v13);
    v15 = &v8[*(int *)(v6 + 20)];
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = 0xE000000000000000;
    *(_QWORD *)&v8[*(int *)(v6 + 24)] = _swiftEmptyDictionarySingleton;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v11, v2);
    sub_1009DDBD4((uint64_t)v8, (uint64_t)v5, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  return result;
}

uint64_t sub_1009DE030()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1013DD648 != -1)
    swift_once(&qword_1013DD648, sub_1009DDE24);
  v0 = qword_1014801F0;
  v1 = qword_101480200;
  swift_bridgeObjectRetain(*(_QWORD *)algn_1014801F8);
  swift_retain(v1);
  return v0;
}

uint64_t sub_1009DE0A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_1009DE0E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F53F8, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F204CC);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_1009DE128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1009DE180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.apply(_:)(a1, a2, v4);
}

uint64_t sub_1009DE1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_1009DE220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_1009DE288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1009DE2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.merge(delta:)(a1, a2, v4);
}

uint64_t sub_1009DE328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1009DE380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1009DE3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1009DE438()
{
  sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_1009DE478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1009DE4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.merge(_:)(a1, a2, v4);
}

uint64_t sub_1009DE518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7480, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F2052C);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_1009DE57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F7480, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F2052C);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_1009DE5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.init(from:)(a1, a2, v4);
}

uint64_t sub_1009DE654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.encode(to:)(a1, a2, v4);
}

uint64_t sub_1009DE6B0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

BOOL sub_1009DE700(char *a1, char *a2)
{
  return qword_100F207A8[*a1] == qword_100F207A8[*a2];
}

Swift::Int sub_1009DE724()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100F207A8[v1]);
  return Hasher._finalize()();
}

void sub_1009DE770()
{
  char *v0;

  Hasher._combine(_:)(qword_100F207A8[*v0]);
}

Swift::Int sub_1009DE7A4(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(qword_100F207A8[v2]);
  return Hasher._finalize()();
}

void sub_1009DE7EC(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_100F207A8[*v1];
}

unint64_t sub_1009DE804()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 == 1)
    v1 = 7107189;
  if (*v0)
    return v1;
  else
    return 0xD000000000000015;
}

uint64_t sub_1009DE860@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1009E1420(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009DE884()
{
  char *v0;

  return qword_100F207A8[*v0];
}

void sub_1009DE89C(_QWORD *a1@<X8>)
{
  *a1 = &off_1012642A8;
}

uint64_t sub_1009DE8AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_1009E0FBC();
  v5 = sub_1009E1004();
  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1009DE8F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009E1004();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009DE918(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009E1004();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009DE940(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_1004B804C(&qword_101400C60);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_1004BB5A4(a1, v9);
  v11 = sub_1009E1004();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CRLURLItemAtomicDataStruct.CodingKeys, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys, v11, v9, v10);
  v25 = 0;
  v12 = type metadata accessor for CRLAssetData(0);
  v13 = sub_1004B7878(&qword_1013E0DC0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C58);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v25, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
    v15 = v3 + *(int *)(v14 + 20);
    v24 = 1;
    v16 = type metadata accessor for URL(0);
    v17 = sub_1004B7878(&qword_1013F3D18, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v24, v5, v16, v17);
    v23 = *(_QWORD *)(v3 + *(int *)(v14 + 24));
    v22 = 2;
    v18 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v19 = sub_1004F31B4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v23, &v22, v5, v18, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1009DEB18(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  v29 = a2;
  v3 = type metadata accessor for URL(0);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v6);
  v32 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1004B804C(&qword_101400C58);
  v8 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v11);
  v34 = *(int *)(v13 + 24);
  v35 = (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v35 + v34) = _swiftEmptyDictionarySingleton;
  v14 = a1[3];
  v15 = a1[4];
  v36 = a1;
  sub_1004BB5A4(a1, v14);
  v16 = sub_1009E1004();
  v17 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CRLURLItemAtomicDataStruct.CodingKeys, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys, v16, v14, v15);
  if (v17)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = v8;
    v37 = v11;
    v19 = v31;
    v41 = 0;
    v20 = sub_1004B7878(&qword_1013E0DB0, type metadata accessor for CRLAssetData, (uint64_t)&unk_100F30C80);
    v22 = (uint64_t)v32;
    v21 = v33;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v6, &v41, v33, v6, v20);
    v23 = v35;
    sub_1004B84E0(v22, v35, type metadata accessor for CRLAssetData);
    v40 = 1;
    v24 = sub_1004B7878(&qword_1013F3CE8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v19, &v40, v21, v19, v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v23 + *(int *)(v37 + 20), v5, v19);
    v25 = sub_1004B804C((uint64_t *)&unk_1013F3CF0);
    v39 = 2;
    v26 = sub_1004F3130();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v25, &v39, v21, v25, v26);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v21);
    v27 = v38;
    v28 = v34;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v23 + v28) = v27;
    sub_1004B8460(v23, v29, type metadata accessor for CRLURLItemAtomicDataStruct);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v36);
    sub_1004B84A4(v23, type metadata accessor for CRLURLItemAtomicDataStruct);
  }
}

uint64_t sub_1009DEEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;

  if ((static UUID.== infix(_:_:)(a1) & 1) != 0
    && ((v6 = type metadata accessor for CRLAssetData(0),
         v7 = *(int *)(v6 + 20),
         v8 = *(_QWORD *)(a1 + v7),
         v9 = *(_QWORD *)(a1 + v7 + 8),
         v10 = (_QWORD *)(a2 + v7),
         v11 = v10[1],
         v8 == *v10)
      ? (v12 = v9 == v11)
      : (v12 = 0),
        (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, *v10, v11, 0) & 1) != 0)
     && (sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(v6 + 24)), *(_QWORD *)(a2 + *(int *)(v6 + 24))) & 1) != 0
     && (static URL.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) != 0))
  {
    return sub_100C9E04C(*(_QWORD *)(a1 + *(int *)(a3 + 24)), *(_QWORD *)(a2 + *(int *)(a3 + 24)));
  }
  else
  {
    return 0;
  }
}

void sub_1009DEF6C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1009DEB18(a1, a2);
}

uint64_t sub_1009DEF80(_QWORD *a1)
{
  return sub_1009DE940(a1);
}

uint64_t sub_1009DEF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101400C68, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2040C);
  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1009DEFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1004B7878((unint64_t *)&unk_101400AF0, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2069C);
  v7 = sub_1004B7878(&qword_101400C70, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F203E4);
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1009DF080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101400C68, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2040C);
  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1009DF0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101400C10, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F20264);
  return CRValueStruct.init(from:)(a1, a2, v4);
}

uint64_t sub_1009DF134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101400C10, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F20264);
  return CRValueStruct.encode(to:)(a1, a2, v4);
}

uint64_t sub_1009DF190(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101400C10, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F20264);
  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1009DF1E0()
{
  return 6;
}

void sub_1009DF1EC(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];

  v3 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_1014007D0)
  {
    v6 = (uint64_t)a1 + qword_101480208;
    swift_beginAccess((char *)a1 + qword_101480208, v9, 0, 0);
    sub_1004B8460(v6, (uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
    swift_beginAccess(v1 + qword_101480208, v8, 33, 0);
    v7 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
    swift_retain(a1);
    CRStruct_1.merge(_:)(v5, v3, v7);
    swift_endAccess(v8);
    swift_release(a1);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
  }
}

uint64_t sub_1009DF318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];
  _BYTE v24[24];

  v3 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v21[-v7];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v9);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v21[-v13];
  if (*(_UNKNOWN ****)a1 != &off_1014007D0)
    goto LABEL_5;
  v15 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v15, v24, 0, 0);
  sub_1004CB7BC(v15, (uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  v16 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 632);
  swift_beginAccess(v16, v23, 0, 0);
  sub_1004CB7BC(v16, (uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  swift_retain(a1);
  LOBYTE(v16) = sub_100D5ED30((uint64_t)v14, (uint64_t)v11);
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  if ((v16 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v19 = 0;
    return v19 & 1;
  }
  v17 = v1 + qword_101480208;
  swift_beginAccess(v17, v22, 0, 0);
  sub_1004B8460(v17, (uint64_t)v8, type metadata accessor for CRLURLItemCRDTData);
  v18 = a1 + qword_101480208;
  swift_beginAccess(a1 + qword_101480208, v21, 0, 0);
  sub_1004B8460(v18, (uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
  v19 = sub_1009E12BC();
  swift_release(a1);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLURLItemCRDTData);
  return v19 & 1;
}

uint64_t sub_1009DF550(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];

  v5 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  v11 = v2 + qword_101480208;
  swift_beginAccess(v2 + qword_101480208, v19, 0, 0);
  if ((a2 & 1) != 0)
  {
    sub_1004B8460(v11, (uint64_t)v7, type metadata accessor for CRLURLItemCRDTData);
    v12 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
    CRStruct_1.copy(renamingReferences:)(0, v5, v12);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLURLItemCRDTData);
  }
  else
  {
    sub_1004B8460(v11, (uint64_t)v10, type metadata accessor for CRLURLItemCRDTData);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_1013F7480, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F2052C);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLURLItemCRDTData);
  return v16;
}

uint64_t sub_1009DF71C(_UNKNOWN ****a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  _BYTE v14[24];
  _BYTE v15[24];

  v3 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v14[-v7];
  if (*a1 == &off_1014007D0)
  {
    v9 = v1 + qword_101480208;
    swift_beginAccess(v9, v15, 0, 0);
    sub_1004B8460(v9, (uint64_t)v8, type metadata accessor for CRLURLItemCRDTData);
    v10 = (uint64_t)a1 + qword_101480208;
    swift_beginAccess((char *)a1 + qword_101480208, v14, 0, 0);
    sub_1004B8460(v10, (uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
    v11 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
    v12 = CRStruct_1.hasDelta(from:)(v5, v3, v11);
    sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLURLItemCRDTData);
    return v12 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLURLItemData.swift", 29, 2, 130, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1009DF8C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];

  v31 = a2;
  v4 = *v2;
  v30 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v30);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1004B804C(&qword_101400C78);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v30 - v14;
  v16 = swift_dynamicCastClass(a1, v4);
  if (v16)
  {
    v17 = v16;
    v18 = (uint64_t)v2 + qword_101480208;
    swift_beginAccess(v18, v33, 0, 0);
    sub_1004B8460(v18, (uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
    v19 = v17 + qword_101480208;
    swift_beginAccess(v19, v32, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
    v20 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
    swift_retain(a1);
    v21 = v31;
    CRStruct_1.delta(_:from:)(v31, v6, v30, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v12, &qword_101400C78);
    v22 = sub_1004B804C(&qword_101400C30);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v22) == 1)
    {
      sub_1004CB800((uint64_t)v15, &qword_101400C78);
      swift_release(a1);
      sub_1004CB800((uint64_t)v12, &qword_101400C78);
      return 0;
    }
    else
    {
      v25 = v21;
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v26 = type metadata accessor for CRCodableVersion(0);
      v27 = sub_1004F2A1C(v26, (uint64_t)qword_10147EB08);
      v28 = sub_1004CBA30(&qword_101400C28, &qword_101400C30, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
      v24 = PartialCRDT.deltaSerializedData(_:version:)(v25, v27, v22, v28);
      swift_release(a1);
      sub_1004CB800((uint64_t)v15, &qword_101400C78);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
    }
    return v24;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLURLItemData.swift", 29, 2, 143, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1009DFC38(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];
  char v50[112];
  _BYTE v51[32];
  uint64_t v52;

  v46 = *v2;
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v44 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_101400C30);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v14 = sub_1004CBA30(&qword_101400C28, &qword_101400C30, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
  LOBYTE(v2) = v10;
  v15 = v48;
  PartialCRDT.init(serializedData:)(a1, a2, v10, v14);
  if (!v15)
  {
    v42 = v9;
    v43 = v7;
    v48 = v11;
    v16 = v47;
    swift_beginAccess(v47 + qword_101480208, v51, 33, 0);
    v17 = type metadata accessor for CRLURLItemCRDTData(0);
    v18 = sub_1004B7878(&qword_1013F53E0, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20674);
    LODWORD(v2) = CRStruct_1.merge(delta:)(v13, v17, v18);
    swift_endAccess(v51);
    if ((v2 & 1) == 0)
    {
      v39 = v13;
      v40 = v10;
      v41 = (int)v2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v51, 0, 0);
      v19 = (void *)static OS_os_log.realTimeSync;
      v20 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v20, v50);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v22 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 632);
      swift_beginAccess(v22, v49, 0, 0);
      v23 = v22;
      v24 = v44;
      sub_1004CB7BC(v23, v44, (uint64_t *)&unk_1013F02C0);
      v25 = v19;
      v26 = sub_1004B804C(&qword_1013E1A80);
      v27 = v42;
      CRRegister.wrappedValue.getter(v26);
      v28 = sub_1004CB800(v24, (uint64_t *)&unk_1013F02C0);
      v29 = UUID.uuidString.getter(v28);
      v31 = v30;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v45);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v32 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v32;
      *(_QWORD *)(inited + 32) = v29;
      *(_QWORD *)(inited + 40) = v31;
      v52 = v16;
      swift_retain(v16);
      v33 = String.init<A>(describing:)(&v52, v46);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v32;
      *(_QWORD *)(inited + 72) = v33;
      *(_QWORD *)(inited + 80) = v34;
      v35 = static os_log_type_t.error.getter(v33);
      sub_100A06EBC((uint64_t)v25, &_mh_execute_header, v35, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      v2 = *(uint64_t **)(inited + 16);
      v36 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, v2, v36);

      LOBYTE(v2) = v41;
      v10 = v40;
      v13 = v39;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
  }
  return v2 & 1;
}

unint64_t sub_1009E001C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];

  v1 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1004B804C(&qword_1013E0DD8);
  v8 = sub_1004B804C(&qword_101405DE0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(v7, v12 + v10, v11 | 7);
  *(_OWORD *)(v13 + 16) = xmmword_100EF5E40;
  v14 = v13 + v12;
  v15 = v13 + v12 + *(int *)(v8 + 48);
  strcpy((char *)(v13 + v12), "linkMetadata");
  *(_BYTE *)(v14 + 13) = 0;
  *(_WORD *)(v14 + 14) = -5120;
  swift_beginAccess(v0 + qword_101480208, v21, 32, 0);
  v16 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v16);
  swift_endAccess(v21);
  sub_1004B8460((uint64_t)v6, (uint64_t)v3, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLURLItemAtomicDataStruct);
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v18 + 16))(v15, v3, v17);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return sub_1008D5968(v13);
}

uint64_t sub_1009E01F4()
{
  uint64_t v0;

  return sub_1004B84A4(v0 + qword_101480208, type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_1009E021C()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v0 + qword_101480208, type metadata accessor for CRLURLItemCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLURLItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014007A8, (uint64_t)&nominal type descriptor for CRLURLItemData);
}

uint64_t sub_1009E0280(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLURLItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 672);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLURLItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101400AD8, (uint64_t)&nominal type descriptor for CRLURLItemCRDTData);
}

uint64_t *sub_1009E0300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013EF360);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

double sub_1009E0390(uint64_t a1)
{
  uint64_t v2;
  double result;

  v2 = sub_1004B804C(&qword_1013EF360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1009E03D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C(&qword_1013EF360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_1009E043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C(&qword_1013EF360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009E04AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C(&qword_1013EF360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1009E050C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C(&qword_1013EF360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009E0574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009E0580);
}

uint64_t sub_1009E0580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C(&qword_1013EF360);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1009E0600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009E060C);
}

uint64_t sub_1009E060C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C(&qword_1013EF360);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1009E0688(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1009E06FC(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_1009E06FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_101400AE8)
  {
    v2 = type metadata accessor for CRLURLItemAtomicDataStruct(255);
    v3 = sub_1004B7878((unint64_t *)&unk_101400AF0, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2069C);
    v4 = type metadata accessor for CRRegister(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_101400AE8);
  }
}

uint64_t type metadata accessor for CRLURLItemAtomicDataStruct(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101400B78, (uint64_t)&nominal type descriptor for CRLURLItemAtomicDataStruct);
}

uint64_t *sub_1009E0788(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v23);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for CRLAssetData(0);
    v9 = *(int *)(v8 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = *(int *)(v8 + 24);
    v14 = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = v14;
    v15 = *(int *)(a3 + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for URL(0);
    v19 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain(v12);
    v20 = swift_bridgeObjectRetain(v14);
    v19(v16, v17, v18, v20);
    v21 = *(int *)(a3 + 24);
    v22 = *(uint64_t *)((char *)a2 + v21);
    *(uint64_t *)((char *)a1 + v21) = v22;
    swift_bridgeObjectRetain(v22);
  }
  return a1;
}

double sub_1009E0894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CRLAssetData(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1009E092C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = *(int *)(v7 + 24);
  v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v14 = *(int *)(a3 + 20);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for URL(0);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain(v11);
  v19 = swift_bridgeObjectRetain(v13);
  v18(v15, v16, v17, v19);
  v20 = *(int *)(a3 + 24);
  v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  return a1;
}

uint64_t sub_1009E0A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v11 = v10[1];
  v9[1] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  v12 = *(int *)(v7 + 24);
  v13 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 20);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(a3 + 24);
  v19 = *(_QWORD *)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009E0B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1009E0BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  v13 = *(int *)(a3 + 20);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009E0C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009E0C90);
}

uint64_t sub_1009E0C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_1009E0D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009E0D44);
}

uint64_t sub_1009E0D44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for CRLAssetData(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1009E0DE8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for CRLAssetData(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1009E0E78()
{
  return sub_1004B7878(&qword_101400BB8, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2016C);
}

uint64_t sub_1009E0EA4()
{
  return sub_1004B7878((unint64_t *)&unk_101400AF0, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2069C);
}

uint64_t sub_1009E0ED0()
{
  return sub_1004B7878(&qword_101400BC0, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F2023C);
}

uint64_t sub_1009E0EFC()
{
  return sub_1004B7878(&qword_101400BC8, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F20214);
}

unint64_t sub_1009E0F2C()
{
  unint64_t result;

  result = qword_101400BD0;
  if (!qword_101400BD0)
  {
    result = swift_getWitnessTable(&unk_100F202AC, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101400BD0);
  }
  return result;
}

unint64_t sub_1009E0F74()
{
  unint64_t result;

  result = qword_101400BD8;
  if (!qword_101400BD8)
  {
    result = swift_getWitnessTable(&unk_100F203BC, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101400BD8);
  }
  return result;
}

unint64_t sub_1009E0FBC()
{
  unint64_t result;

  result = qword_101400BE0;
  if (!qword_101400BE0)
  {
    result = swift_getWitnessTable(&unk_100F20384, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101400BE0);
  }
  return result;
}

unint64_t sub_1009E1004()
{
  unint64_t result;

  result = qword_101400BE8;
  if (!qword_101400BE8)
  {
    result = swift_getWitnessTable(&unk_100F202E4, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101400BE8);
  }
  return result;
}

unint64_t sub_1009E104C()
{
  unint64_t result;

  result = qword_101400BF0;
  if (!qword_101400BF0)
  {
    result = swift_getWitnessTable(&unk_100F2035C, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101400BF0);
  }
  return result;
}

unint64_t sub_1009E1094()
{
  unint64_t result;

  result = qword_101400BF8;
  if (!qword_101400BF8)
  {
    result = swift_getWitnessTable(&unk_100F20334, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101400BF8);
  }
  return result;
}

uint64_t sub_1009E10D8()
{
  return sub_1004CBA30(&qword_101400C00, &qword_101400C08, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_1009E1104()
{
  return sub_1004B7878(&qword_101400C10, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F20264);
}

uint64_t sub_1009E1130()
{
  return sub_1004B7878(&qword_101400C18, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F2044C);
}

uint64_t sub_1009E115C()
{
  return sub_1004B7878(&qword_101400C20, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F20494);
}

uint64_t sub_1009E1188()
{
  return sub_1004B7878(&qword_1013F53F8, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F204CC);
}

uint64_t sub_1009E11B4()
{
  return sub_1004CBA30(&qword_101400C28, &qword_101400C30, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
}

uint64_t sub_1009E11E0()
{
  return sub_1004B7878(&qword_1013F7480, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F2052C);
}

uint64_t sub_1009E120C()
{
  return sub_1004B7878(&qword_101400C38, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F205AC);
}

uint64_t sub_1009E1238()
{
  return sub_1004CBA30(&qword_101400C40, &qword_1013EF360, (uint64_t)&protocol conformance descriptor for CRRegister<A>);
}

uint64_t sub_1009E1264()
{
  return sub_1004B7878(&qword_101400C48, type metadata accessor for CRLURLItemCRDTData, (uint64_t)&unk_100F2060C);
}

uint64_t sub_1009E1290()
{
  return sub_1004B7878(&qword_101400C50, type metadata accessor for CRLURLItemAtomicDataStruct, (uint64_t)&unk_100F201B4);
}

uint64_t sub_1009E12BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v16;

  v0 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - v4;
  v6 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v6);
  CRRegister.wrappedValue.getter(v6);
  if ((static UUID.== infix(_:_:)(v5) & 1) == 0)
    goto LABEL_10;
  v7 = type metadata accessor for CRLAssetData(0);
  v8 = *(int *)(v7 + 20);
  v9 = *(_QWORD *)&v5[v8];
  v10 = *(_QWORD *)&v5[v8 + 8];
  v11 = &v2[v8];
  v12 = *((_QWORD *)v11 + 1);
  v13 = v9 == *(_QWORD *)v11 && v10 == v12;
  if (v13 || (v14 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, *(_QWORD *)v11, v12, 0) & 1) != 0))
  {
    if ((sub_100C9E04C(*(_QWORD *)&v5[*(int *)(v7 + 24)], *(_QWORD *)&v2[*(int *)(v7 + 24)]) & 1) != 0
      && (static URL.== infix(_:_:)(&v5[*(int *)(v0 + 20)], &v2[*(int *)(v0 + 20)]) & 1) != 0)
    {
      v14 = sub_100C9E04C(*(_QWORD *)&v5[*(int *)(v0 + 24)], *(_QWORD *)&v2[*(int *)(v0 + 24)]);
      goto LABEL_11;
    }
LABEL_10:
    v14 = 0;
  }
LABEL_11:
  sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLURLItemAtomicDataStruct);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLURLItemAtomicDataStruct);
  return v14 & 1;
}

uint64_t sub_1009E1420(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  char v7;

  if (a1 == 0xD000000000000015)
  {
    v4 = 0x8000000100FE9910;
    if (a2 == 0x8000000100FE9910)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x8000000100FE9910, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    v6 = 0xE300000000000000;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7107189, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_11;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100FAF1E0)
  {
    swift_bridgeObjectRelease(0x8000000100FAF1E0);
    return 2;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x8000000100FAF1E0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t storeEnumTagSinglePayload for CRLURLItemAtomicDataStruct.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1009E15AC + 4 * byte_100F20105[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1009E15E0 + 4 * byte_100F20100[v4]))();
}

uint64_t sub_1009E15E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E15E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009E15F0);
  return result;
}

uint64_t sub_1009E15FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009E1604);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1009E1608(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E1610(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLURLItemAtomicDataStruct.CodingKeys()
{
  return &type metadata for CRLURLItemAtomicDataStruct.CodingKeys;
}

unint64_t sub_1009E1630()
{
  unint64_t result;

  result = qword_101400C80;
  if (!qword_101400C80)
  {
    result = swift_getWitnessTable(&unk_100F2077C, &type metadata for CRLURLItemAtomicDataStruct.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_101400C80);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipScenesEntryPointCompact()
{
  return &type metadata for CRLTipScenesEntryPointCompact;
}

uint64_t sub_1009E1684@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1004B804C(&qword_1013E6D60);
  result = Tips.Event.donations.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1009E16B8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

uint64_t sub_1009E16C8(uint64_t a1)
{
  return sub_1009E1760(a1, qword_101480210, 0xD000000000000010, 0x8000000100FB9630);
}

uint64_t sub_1009E16EC(uint64_t a1)
{
  return sub_1009E1760(a1, qword_101480228, 0xD000000000000010, 0x8000000100FC2470);
}

uint64_t sub_1009E1710(uint64_t a1)
{
  return sub_1009E1760(a1, qword_101480240, 0x746361706D6F632BLL, 0xEE0074756F79614CLL);
}

uint64_t sub_1009E173C(uint64_t a1)
{
  return sub_1009E1760(a1, qword_101480258, 0xD000000000000018, 0x8000000100FC2420);
}

uint64_t sub_1009E1760(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipScenesEntryPointCompact, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipScenesEntryPointCompact, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1009E1800()
{
  uint64_t v0;

  v0 = sub_1004B804C(&qword_1013E6D60);
  sub_100501DE0(v0, qword_101480270);
  sub_1004F2A1C(v0, (uint64_t)qword_101480270);
  return Tips.Event.init<>(id:)(0xD00000000000002CLL, 0x8000000100FE9950);
}

uint64_t sub_1009E1864@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v3 = type metadata accessor for PredicateExpressions.ComparisonOperator(0);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  __chkstk_darwin(v3);
  v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E6D78);
  v6 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v62 = v6;
  v7 = __chkstk_darwin(v5);
  v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Tips.DonationTimeRange(0, v7);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E6D80);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1013E6D88);
  v50 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1004B804C(&qword_1013E6D90);
  v51 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1004B804C(&qword_1013E6D98);
  v23 = *(_QWORD *)(v22 - 8);
  v54 = v22;
  v55 = v23;
  __chkstk_darwin(v22);
  v49 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004CBA30(&qword_1013E6DA0, &qword_1013E6D80, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v12, v25);
  KeyPath = swift_getKeyPath(byte_100F20898);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, KeyPath, v12, v25);
  v27 = swift_release(KeyPath);
  v28 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v27);
  static Tips.DonationTimeRange.day.getter(v28);
  v29 = type metadata accessor for Tips.EmptyDonation(0);
  v30 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v31 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v32 = sub_1005EA664();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)(v18, v11, v29, v16, v30, v31, v32);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v16);
  v33 = swift_getKeyPath("ȷS");
  v34 = sub_1004CBA30(&qword_1013E6DB8, &qword_1013E6D90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.DonatedWithin<A, B>);
  v35 = v49;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, v33, v19, v34);
  v36 = swift_release(v33);
  (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v21, v19, v36);
  v63 = 1;
  v37 = v56;
  static PredicateExpressions.build_Arg<A>(_:)(&v63, &type metadata for Int);
  v39 = v57;
  v38 = v58;
  v40 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v59);
  v41 = sub_1004B804C(&qword_1013E6DC0);
  v42 = v60;
  v60[3] = v41;
  v42[4] = sub_1005EA6E4();
  sub_10050D1B0(v42);
  v43 = sub_1004CBA30(&qword_1013E6DE8, &qword_1013E6D98, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v44 = sub_1004CBA30(&qword_1013E6DF0, &qword_1013E6D78, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v45 = v54;
  v46 = v61;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v35, v37, v39, v54, v61, v43, v44, &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v46);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v35, v45);
}

uint64_t sub_1009E1CD8()
{
  return sub_1009E1DE4();
}

uint64_t sub_1009E1CF8()
{
  return sub_1009E1EEC();
}

uint64_t sub_1009E1D0C()
{
  return Image.init(_:bundle:)(0x6365722E72617473, 0xEE00656C676E6174, 0);
}

uint64_t sub_1009E1D38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054F958();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1009E1D78()
{
  unint64_t result;

  result = qword_101400C88;
  if (!qword_101400C88)
  {
    result = swift_getWitnessTable(&unk_100F207E0, &type metadata for CRLTipScenesEntryPointCompact);
    atomic_store(result, (unint64_t *)&qword_101400C88);
  }
  return result;
}

unint64_t sub_1009E1DBC(uint64_t a1)
{
  unint64_t result;

  result = sub_10054F958();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009E1DE4()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_1009E1EEC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_1009E1FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44[24];
  char v45[24];
  char v46[24];
  char v47[24];

  v0 = sub_1004B804C(&qword_1013E6D60);
  v42 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v43 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Tips.Rule(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1013DD650 != -1)
    swift_once(&qword_1013DD650, sub_1009E16C8);
  v11 = sub_1004F2A1C(v2, (uint64_t)qword_101480210);
  v12 = swift_beginAccess(v11, v47, 0, 0);
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v13(v6, v11, v2, v12);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v41 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if (qword_1013DD658 != -1)
    swift_once(&qword_1013DD658, sub_1009E16EC);
  v15 = sub_1004F2A1C(v2, (uint64_t)qword_101480228);
  v16 = swift_beginAccess(v15, v46, 0, 0);
  v13(v6, v15, v2, v16);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v17 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DD660 != -1)
    swift_once(&qword_1013DD660, sub_1009E1710);
  v18 = sub_1004F2A1C(v2, (uint64_t)qword_101480240);
  v19 = swift_beginAccess(v18, v45, 0, 0);
  v13(v6, v18, v2, v19);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v20 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DD668 != -1)
    swift_once(&qword_1013DD668, sub_1009E173C);
  v21 = sub_1004F2A1C(v2, (uint64_t)qword_101480258);
  v22 = swift_beginAccess(v21, v44, 0, 0);
  v13(v6, v21, v2, v22);
  Tips.Rule.init<A>(_:_:)(v6, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v23 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  if (qword_1013DD670 != -1)
    swift_once(&qword_1013DD670, sub_1009E1800);
  v24 = sub_1004F2A1C(v0, (uint64_t)qword_101480270);
  v25 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v24, v0);
  v26 = type metadata accessor for Tips.EmptyDonation(0);
  v27 = sub_1005EA5D8(&qword_1013E6D68, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  v28 = sub_1005EA5D8(&qword_1013E6D70, (uint64_t)&protocol conformance descriptor for Tips.EmptyDonation);
  Tips.Rule.init<A>(_:_:)(v25, sub_1009E1864, 0, v26, v27, v28);
  v29 = static Tips.RuleBuilder.buildExpression(_:)(v10);
  v14(v10, v7);
  v30 = static Tips.RuleBuilder.buildPartialBlock(first:)(v41);
  v31 = swift_bridgeObjectRelease();
  v32 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v30, v17, v31);
  swift_bridgeObjectRelease();
  v33 = swift_bridgeObjectRelease();
  v34 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v32, v20, v33);
  swift_bridgeObjectRelease();
  v35 = swift_bridgeObjectRelease();
  v36 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v34, v23, v35);
  swift_bridgeObjectRelease();
  v37 = swift_bridgeObjectRelease();
  v38 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v36, v29, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_1009E24C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1004B804C(&qword_1013E6D60);
  result = Tips.Event.donations.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1009E24FC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeSyncError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1009E2558 + 4 * byte_100F20905[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1009E258C + 4 * byte_100F20900[v4]))();
}

uint64_t sub_1009E258C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E2594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009E259CLL);
  return result;
}

uint64_t sub_1009E25A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009E25B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1009E25B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E25BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeSyncError()
{
  return &type metadata for CRLRealTimeSyncError;
}

unint64_t sub_1009E25DC()
{
  unint64_t result;

  result = qword_101400C90;
  if (!qword_101400C90)
  {
    result = swift_getWitnessTable(&unk_100F20968, &type metadata for CRLRealTimeSyncError);
    atomic_store(result, (unint64_t *)&qword_101400C90);
  }
  return result;
}

void sub_1009E2620(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  __n128 v38;
  void (*v39)(_QWORD, uint64_t, uint64_t, uint64_t);
  void *v40;
  uint64_t v41;
  uint64_t inited;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  _QWORD v59[2];
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, __n128);
  char *v71;
  __int128 v72;
  uint64_t v73;
  char v74[72];
  char v75[56];
  uint64_t v76;
  _BYTE v77[4];
  uint64_t v78;

  v64 = a3;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v59 - v11;
  v13 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v13);
  v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v59 - v17;
  sub_100DBEE64(a1, (uint64_t)&off_1012942F0);
  if (!v3)
  {
    v71 = v15;
    *(_QWORD *)&v72 = v18;
    v59[1] = a2;
    v60 = v12;
    v63 = v7;
    v62 = 0;
    v19 = *(_QWORD *)(v78 + OBJC_IVAR____TtC8Freeform22CRLCommandDeleteScenes_sceneIDs);
    v20 = *(_QWORD *)(v19 + 16);
    v61 = v19;
    if (v20)
    {
      v67 = v9;
      v69 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      v21 = v63;
      v22 = v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
      v66 = *(_QWORD *)(v63 + 72);
      v70 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v63 + 16);
      v23 = swift_bridgeObjectRetain(v19);
      v24 = v60;
      v25 = v72;
      v68 = a1;
      while (1)
      {
        v70(v25, v22, v6, v23);
        v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
        v26(v25, 0, 1, v6);
        v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
        if (v27(v25, 1, v6) == 1)
          break;
        v65 = v26;
        v73 = v22;
        v78 = v20;
        v28 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
        v28(v24, v25, v6);
        v29 = *(_QWORD *)(a1 + v69);
        swift_beginAccess(v29 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v77, 33, 0);
        type metadata accessor for CRLBoardCRDTData(0);
        swift_retain(v29);
        v30 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
        v31 = (uint64_t)v71;
        CROrderedSet.remove(_:)(v24, v30);
        v32 = v31;
        if (v27(v31, 1, v6) == 1)
        {
          v73 = v29;
          v78 = v6;
          sub_1004C1F2C(v31);
          if (qword_1013DD7E0 != -1)
            swift_once(&qword_1013DD7E0, sub_100A03F14);
          swift_beginAccess(&static OS_os_log.crlScenes, &v76, 0, 0);
          v40 = (void *)static OS_os_log.crlScenes;
          v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          inited = swift_initStackObject(v41, v75);
          v72 = xmmword_100EF5E40;
          *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
          v43 = v40;
          v44 = v60;
          v45 = UUID.uuidString.getter(v43);
          v47 = v46;
          *(_QWORD *)(inited + 56) = &type metadata for String;
          v48 = sub_1004CFC2C();
          *(_QWORD *)(inited + 64) = v48;
          *(_QWORD *)(inited + 32) = v45;
          *(_QWORD *)(inited + 40) = v47;
          v50 = static os_log_type_t.default.getter(v49);
          sub_100A06EBC((uint64_t)v43, &_mh_execute_header, v50, "Scene attribute lookup failed for UUID %{public}", 48, 2, inited);
          swift_endAccess(v77);
          swift_setDeallocating(inited);
          v51 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(inited + 32, 1, v51);
          swift_bridgeObjectRelease();
          swift_release(v73);

          v52 = (void *)static OS_os_log.crlScenes;
          v53 = swift_initStackObject(v41, v74);
          *(_OWORD *)(v53 + 16) = v72;
          v54 = v52;
          v55 = UUID.uuidString.getter(v54);
          *(_QWORD *)(v53 + 56) = &type metadata for String;
          *(_QWORD *)(v53 + 64) = v48;
          *(_QWORD *)(v53 + 32) = v55;
          *(_QWORD *)(v53 + 40) = v56;
          v58 = static os_log_type_t.default.getter(v57);
          sub_100A06EBC((uint64_t)v54, &_mh_execute_header, v58, "Can't delete scene %{public} that doesn't exist.", 48, 2, v53);
          swift_setDeallocating(v53);
          swift_arrayDestroy(v53 + 32, 1, v51);

          (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v78);
          return;
        }
        v33 = v67;
        v28(v67, v32, v6);
        type metadata accessor for CRLBoardScenesCRDTData(0);
        v34 = sub_1004B804C((uint64_t *)&unk_101405CB0);
        CRDictionary.removeValue(forKey:)(&v76, v33, v34);
        swift_bridgeObjectRelease();
        v35 = sub_1004B804C(&qword_101405CC0);
        CRDictionary.removeValue(forKey:)(&v76, v33, v35);
        v36 = swift_bridgeObjectRelease();
        v37 = *(void (**)(char *, uint64_t, __n128))(v21 + 8);
        v25 = v72;
        v37(v33, v6, v36);
        swift_endAccess(v77);
        v38 = swift_release(v29);
        v37(v24, v6, v38);
        v22 = v73 + v66;
        v20 = v78 - 1;
        a1 = v68;
        if (v78 == 1)
        {
          v65(v25, 1, 1, v6);
          break;
        }
      }
    }
    else
    {
      v39 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v63 + 56);
      swift_bridgeObjectRetain(v19);
      v39(v72, 1, 1, v6);
    }
    swift_bridgeObjectRelease();
    sub_100DB0D78(a1, (uint64_t)&off_1012942F0, v64);
  }
}

uint64_t sub_1009E2C6C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform22CRLCommandDeleteScenes_sceneIDs));
}

id sub_1009E2C7C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandDeleteScenes();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCommandDeleteScenes()
{
  return objc_opt_self(_TtC8Freeform22CRLCommandDeleteScenes);
}

uint64_t sub_1009E2CDC()
{
  id v0;
  NSString v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  return v5;
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.SortStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1009E2E1C + 4 * byte_100F20A05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1009E2E50 + 4 * byte_100F20A00[v4]))();
}

uint64_t sub_1009E2E50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E2E58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009E2E60);
  return result;
}

uint64_t sub_1009E2E6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009E2E74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1009E2E78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E2E80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.SortStyle()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.SortStyle;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel()
{
  return &type metadata for CRLBoardLibraryFolderViewModel;
}

void destroy for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1)
{
  sub_1004DD8B8(*(void **)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1004DD884(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1004DD884(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1004DD8B8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1004DD8B8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 125);
  v3 = ((*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1009E3084(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 24) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1009E30A0(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1009E30B0(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 3;
    *(_BYTE *)(result + 24) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.GroupSection()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.GroupSection;
}

void sub_1009E30F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1009E3138()
{
  uint64_t v0;
  uint64_t v1;

  if (!v1)
    return 0;
  swift_bridgeObjectRetain(v1);
  return v0;
}

uint64_t sub_1009E353C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_1009E36E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1009E4328();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1009E3740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1009E4328();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1009E378C()
{
  return sub_1009E353C();
}

void sub_1009E3794(char a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Date(0);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_1009E3808()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void sub_1009E3D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1009E30F0(a2, a3, a4, a5);
  v8 = v7;
  String.hash(into:)(a1, v9, v7);
  swift_bridgeObjectRelease(v8);
  __asm { BR              X10 }
}

void sub_1009E3E10()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  void *v4;

  if (v3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v3);
    String.hash(into:)(v1, v4, v3);
    sub_1004DD8B8(v4, v3, v0, v2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_1009E40E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1009E4270(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009E5BA8);
}

BOOL sub_1009E40EC(uint64_t a1, uint64_t a2)
{
  return (sub_1009E5BA8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24)) & 1) == 0;
}

BOOL sub_1009E4128(uint64_t a1, uint64_t a2)
{
  return (sub_1009E5BA8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24)) & 1) == 0;
}

uint64_t sub_1009E4164(uint64_t a1, uint64_t a2)
{
  return sub_1009E5BA8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

void sub_1009E4188()
{
  uint64_t v0;

  sub_1009E30F0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

Swift::Int sub_1009E4198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  Hasher.init(_seed:)(v6, 0);
  sub_1009E3D90((uint64_t)v6, v1, v2, v3, v4);
  return Hasher._finalize()();
}

void sub_1009E41F8(uint64_t a1)
{
  uint64_t v1;

  sub_1009E3D90(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

Swift::Int sub_1009E4208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD v7[9];

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  Hasher.init(_seed:)(v7, a1);
  sub_1009E3D90((uint64_t)v7, v2, v3, v4, v5);
  return Hasher._finalize()();
}

uint64_t sub_1009E4264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1009E4270(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1009E554C);
}

uint64_t sub_1009E4270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
}

unint64_t sub_1009E429C()
{
  unint64_t result;

  result = qword_101400D28;
  if (!qword_101400D28)
  {
    result = swift_getWitnessTable(&unk_100F20A4C, &type metadata for CRLBoardLibraryFolderViewModel.GroupSection);
    atomic_store(result, (unint64_t *)&qword_101400D28);
  }
  return result;
}

unint64_t sub_1009E42E4()
{
  unint64_t result;

  result = qword_101400D30;
  if (!qword_101400D30)
  {
    result = swift_getWitnessTable(&unk_100F20C14, &type metadata for CRLBoardLibraryFolderViewModel.SortStyle);
    atomic_store(result, (unint64_t *)&qword_101400D30);
  }
  return result;
}

unint64_t sub_1009E4328()
{
  unint64_t result;

  result = qword_101400D38;
  if (!qword_101400D38)
  {
    result = swift_getWitnessTable(&unk_100F20BDC, &type metadata for CRLBoardLibraryFolderViewModel.SortStyle);
    atomic_store(result, (unint64_t *)&qword_101400D38);
  }
  return result;
}

uint64_t sub_1009E436C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  unint64_t v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  int EnumCaseMultiPayload;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _BYTE v68[32];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  unsigned __int8 *v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v6 = __chkstk_darwin(v5);
  v8 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v6);
  v11 = &v68[-v10];
  v12 = __chkstk_darwin(v9);
  v84 = &v68[-v13];
  __chkstk_darwin(v12);
  v83 = &v68[-v14];
  v15 = type metadata accessor for UUID(0);
  v73 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v72 = &v68[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = sub_1004B804C(&qword_1013E8798);
  __chkstk_darwin(v77);
  v85 = &v68[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v19 = __chkstk_darwin(v18);
  v76 = &v68[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __chkstk_darwin(v19);
  v82 = &v68[-v22];
  __chkstk_darwin(v21);
  v81 = &v68[-v23];
  v91 = sub_1004B804C((uint64_t *)&unk_1013E87A0);
  __chkstk_darwin(v91);
  v25 = &v68[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v26 = *(_QWORD *)(v86 - 8);
  v27 = __chkstk_darwin(v86);
  v28 = __chkstk_darwin(v27);
  v88 = &v68[-v29];
  v30 = __chkstk_darwin(v28);
  v87 = &v68[-v31];
  __chkstk_darwin(v30);
  v34 = &v68[-v32];
  v92 = *(_QWORD *)(a2 + 16);
  if (!v92)
    return 0;
  v80 = v33;
  v71 = v15;
  v78 = v8;
  v35 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  sub_1004B8460(a2 + v35, (uint64_t)&v68[-v32], type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_bridgeObjectRetain(a2);
  v90 = a1;
  v36 = sub_100BD121C((uint64_t)v34, a1);
  sub_1004B84A4((uint64_t)v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if ((v36 & 1) != 0)
  {
    swift_bridgeObjectRelease(a2);
    return 1;
  }
  if (v92 == 1)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  v74 = v11;
  v70 = v2;
  v38 = *(_QWORD *)(v26 + 72);
  v75 = v80 + 8;
  v69 = a2;
  v39 = a2 + v38 + v35;
  v40 = 1;
  v41 = v86;
  v42 = (uint64_t)v88;
  v79 = v38;
  v89 = v34;
  do
  {
    sub_1004B8460(v39, (uint64_t)v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v43 = v40 + 1;
    if (__OFADD__(v40, 1))
    {
      __break(1u);
      JUMPOUT(0x1009E4D14);
    }
    v44 = (uint64_t)v34;
    v45 = &v25[*(int *)(v91 + 48)];
    sub_1004B8460(v44, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1004B8460(v90, (uint64_t)v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v25, v41);
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_1004B8460((uint64_t)v25, v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload(v45, v41) == 1)
        {
          v47 = v81;
          sub_1004B84E0(v42, (uint64_t)v81, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          v48 = v82;
          sub_1004B84E0((uint64_t)v45, (uint64_t)v82, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          v49 = v85;
          v50 = (uint64_t)&v85[*(int *)(v77 + 48)];
          sub_1004B8460((uint64_t)v47, (uint64_t)v85, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_1004B8460((uint64_t)v48, v50, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          v51 = sub_1004B804C(&qword_1013E1790);
          v52 = (char *)&loc_1009E4848
              + dword_1009E4D14[(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v49, 5, v51)];
          __asm { BR              X9 }
        }
        sub_1004B84A4(v42, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        goto LABEL_9;
      }
      v54 = v80;
      sub_1004B8460((uint64_t)v25, v80, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v55 = sub_1004B804C((uint64_t *)&unk_1013EA630);
      swift_bridgeObjectRelease(*(_QWORD *)(v75 + *(int *)(v55 + 48)));
      if (swift_getEnumCaseMultiPayload(v45, v41) != 2)
      {
        sub_1004B84A4(v54, type metadata accessor for CRLBoardIdentifier);
        v42 = (uint64_t)v88;
        v38 = v79;
LABEL_9:
        sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E87A0);
        v34 = v89;
        sub_1004B84A4((uint64_t)v89, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_10;
      }
      swift_bridgeObjectRelease(*(_QWORD *)&v45[*(int *)(v55 + 48) + 8]);
      v56 = v83;
      sub_1004B84E0(v54, (uint64_t)v83, type metadata accessor for CRLBoardIdentifier);
      v57 = v84;
      sub_1004B84E0((uint64_t)v45, (uint64_t)v84, type metadata accessor for CRLBoardIdentifier);
      v58 = static UUID.== infix(_:_:)(v56);
      v59 = (uint64_t)v56;
      v60 = (uint64_t)v74;
      sub_1004B8460(v59, (uint64_t)v74, type metadata accessor for CRLBoardIdentifier);
      v61 = (uint64_t)v57;
      v62 = (uint64_t)v78;
      sub_1004B8460(v61, (uint64_t)v78, type metadata accessor for CRLBoardIdentifier);
      if ((v58 & 1) != 0)
      {
        v63 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        v64 = *(_QWORD *)(v60 + v63);
        v65 = *(_QWORD *)(v60 + v63 + 8);
        v66 = (_QWORD *)(v62 + v63);
        v67 = v66[1];
        v38 = v79;
        if (v64 == *v66 && v65 == v67)
          v53 = 1;
        else
          v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, *v66, v67, 0);
        v41 = v86;
        v42 = (uint64_t)v88;
      }
      else
      {
        v53 = 0;
        v41 = v86;
        v42 = (uint64_t)v88;
        v38 = v79;
      }
      sub_1004B84A4((uint64_t)v78, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v74, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v84, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84A4((uint64_t)v83, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {
      sub_1004B8460((uint64_t)v25, (uint64_t)v87, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload(v45, v41))
        goto LABEL_9;
      v53 = *v87 == *v45;
    }
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v34 = v89;
    sub_1004B84A4((uint64_t)v89, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((v53 & 1) != 0)
    {
      swift_bridgeObjectRelease(v69);
      return 1;
    }
LABEL_10:
    ++v40;
    v39 += v38;
  }
  while (v43 != v92);
  swift_bridgeObjectRelease(v69);
  return 0;
}

uint64_t sub_1009E4D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v36 = a3;
  v39 = a2;
  v40 = sub_1004B804C(&qword_101400D40);
  __chkstk_darwin(v40);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TimeZone(0);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  __chkstk_darwin(v6);
  v38 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v37 = (char *)&v36 - v9;
  v10 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date.FormatStyle(0, v15);
  v19 = a1;
  v20 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v36 - v25;
  if (*v24 != -1)
    swift_once(v24, v36);
  v27 = sub_1004F2A1C(v18, v39);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v26, v27, v18);
  if (qword_1013DD688 != -1)
    swift_once(&qword_1013DD688, sub_1009E54A8);
  v28 = sub_1004F2A1C(v10, (uint64_t)qword_101400CF8);
  sub_1004CB7BC(v28, (uint64_t)v12, &qword_1013E1748);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1004CB800((uint64_t)v12, &qword_1013E1748);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
    Date.FormatStyle.locale(_:)(v17);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v18);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v26, v22, v18);
  }
  v30 = v41;
  v29 = v42;
  if (qword_1013DD690 != -1)
    swift_once(&qword_1013DD690, sub_1009E54C4);
  v31 = sub_1004F2A1C(v40, (uint64_t)qword_101400D10);
  sub_1004CB7BC(v31, (uint64_t)v5, &qword_101400D40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v5, 1, v29) == 1)
  {
    sub_1004CB800((uint64_t)v5, &qword_101400D40);
  }
  else
  {
    v32 = v37;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v37, v5, v29);
    v33 = v38;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v38, v32, v29);
    Date.FormatStyle.timeZone.setter(v33);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
  v34 = sub_1004B7878(&qword_101400D48, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v43, v26, v18, v34);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v18);
  return v43;
}

Swift::Int sub_1009E50F8(unsigned __int8 a1, Swift::UInt64 a2, char a3, double a4)
{
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, 0);
  Hasher._combine(_:)(a1);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&a4;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((a3 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v9 = a2;
    else
      v9 = 0;
    Hasher._combine(_:)(v9);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1009E5198()
{
  uint64_t v0;

  return sub_1009E50F8(*(_BYTE *)v0, *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(double *)(v0 + 8));
}

void sub_1009E51AC()
{
  unsigned __int8 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  int v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;

  v2 = *((_QWORD *)v0 + 1);
  v1 = *((_QWORD *)v0 + 2);
  v3 = v0[24];
  Hasher._combine(_:)(*v0);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v5 = v1;
    else
      v5 = 0;
    Hasher._combine(_:)(v5);
  }
}

Swift::Int sub_1009E5218(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  int v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  _QWORD v9[9];

  v2 = *v1;
  v4 = *((_QWORD *)v1 + 1);
  v3 = *((_QWORD *)v1 + 2);
  v5 = v1[24];
  Hasher.init(_seed:)(v9, a1);
  Hasher._combine(_:)(v2);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  if (v5 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v7 = v3;
    else
      v7 = 0;
    Hasher._combine(_:)(v7);
  }
  return Hasher._finalize()();
}

uint64_t sub_1009E52B0(double *a1, double *a2)
{
  char v4;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2 || a1[1] != a2[1])
    return 0;
  v4 = *((_BYTE *)a2 + 24);
  if (((_BYTE)a1[3] & 1) != 0)
  {
    if (*((_BYTE *)a2 + 24))
      return 1;
  }
  else
  {
    if (a1[2] != a2[2])
      v4 = 1;
    if ((v4 & 1) == 0)
      return 1;
  }
  return 0;
}

uint64_t sub_1009E5308(uint64_t a1)
{
  return sub_1009E5350(a1, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for Date.FormatStyle.Symbol.Month, qword_101400CC8, (void (*)(uint64_t))&static Date.FormatStyle.Symbol.Month.wide.getter, (void (*)(char *))&Date.FormatStyle.month(_:));
}

uint64_t sub_1009E532C(uint64_t a1)
{
  return sub_1009E5350(a1, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for Date.FormatStyle.Symbol.Year, qword_101400CE0, (void (*)(uint64_t))&static Date.FormatStyle.Symbol.Year.defaultDigits.getter, (void (*)(char *))&Date.FormatStyle.year(_:));
}

uint64_t sub_1009E5350(uint64_t a1, uint64_t (*a2)(_QWORD, __n128), uint64_t *a3, void (*a4)(uint64_t), void (*a5)(char *))
{
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v9 = type metadata accessor for FormatStyleCapitalizationContext(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v26 - v16;
  v18 = type metadata accessor for Date.FormatStyle(0, v15);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100501DE0(v22, a3);
  sub_1004F2A1C(v18, (uint64_t)a3);
  v23 = static ParseableFormatStyle<>.dateTime.getter();
  a4(v23);
  a5(v17);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  static FormatStyleCapitalizationContext.beginningOfSentence.getter(v24);
  return Date.FormatStyle.capitalizationContext.setter(v12);
}

uint64_t sub_1009E54A8(uint64_t a1)
{
  return sub_1009E54E0(a1, &qword_1013E1748, qword_101400CF8, (uint64_t (*)(_QWORD))&type metadata accessor for Locale);
}

uint64_t sub_1009E54C4(uint64_t a1)
{
  return sub_1009E54E0(a1, &qword_101400D40, qword_101400D10, (uint64_t (*)(_QWORD))&type metadata accessor for TimeZone);
}

uint64_t sub_1009E54E0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C(a2);
  sub_100501DE0(v6, a3);
  v7 = sub_1004F2A1C(v6, (uint64_t)a3);
  v8 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
}

uint64_t sub_1009E554C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, id a13, uint64_t a14)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  sub_1009E30F0(a1, a2, a3, a4);
  v20 = v19;
  v22 = v21;
  sub_1009E30F0(a5, a6, a7, a8);
  v25 = v24;
  if (v20 == v23 && v22 == v24)
  {
    swift_bridgeObjectRelease_n(v22, 2);
    goto LABEL_5;
  }
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v23, v24, 0);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) != 0)
LABEL_5:
    __asm { BR              X10 }
  return 0;
}

uint64_t sub_1009E5BA8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  char *v24;
  int v25;
  unsigned __int8 v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  double v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  double v44;
  uint64_t v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;

  LODWORD(v63) = a8;
  v57 = a7;
  v58 = a5;
  v59 = a6;
  v60 = a1;
  v61 = a3;
  v62 = *(double *)&a2;
  v8 = type metadata accessor for Calendar.Component(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  v19 = type metadata accessor for Calendar(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v22 >> 6;
  if (!(v22 >> 6))
    goto LABEL_26;
  if (v25 == 2)
  {
    v26 = v63;
    if ((v63 & 0xC0) != 0x80)
    {
LABEL_15:
      LODWORD(v24) = 0;
      v41 = v61;
      v40 = v62;
      v42 = v60;
      if (v26 < 0x40u)
        return v24 & 1;
      goto LABEL_16;
    }
    v32 = (void *)v60;
    if (v60)
    {
      v34 = v61;
      v33 = v62;
      v35 = (id)v58;
      if (!v58)
      {
LABEL_26:
        LOBYTE(v24) = 1;
        return v24 & 1;
      }
      v36 = (id)v59;
      v37 = v57;
      v38 = v22;
      v39 = v63;
      sub_1004DD884((id)v58, (id)v59, v57, v63);
      sub_1004DD884(v32, *(id *)&v33, v34, v38);
      sub_1004DD884(v32, *(id *)&v33, v34, v38);
      sub_1004DD884(v35, v36, v37, v39);
      if ((sub_10063A9F4() & 1) != 0)
      {
        sub_1004DD8B8(v32, *(id *)&v33, v34, v38);
        sub_1004DD8B8(v35, v36, v37, v39);
        sub_1004DD8B8(v35, v36, v37, v39);
        sub_1004DD8B8(v32, *(id *)&v33, v34, v38);
        goto LABEL_26;
      }
      v46 = v38;
      if ((sub_10063A9F4() & 1) == 0)
      {
        v49 = sub_10063B4E0();
        v51 = v50;
        v53 = sub_10063B4E0();
        if (v49 == v53 && v51 == v52)
          LOBYTE(v24) = 0;
        else
          LOBYTE(v24) = _stringCompareWithSmolCheck(_:_:expecting:)(v49, v51, v53, v52, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v54 = v57;
        v55 = v63;
        sub_1004DD8B8(v35, v36, v57, v63);
        sub_1004DD8B8(v32, *(id *)&v33, v34, v46);
        sub_1004DD8B8(v35, v36, v54, v55);
        sub_1004DD8B8(v32, *(id *)&v33, v34, v46);
        return v24 & 1;
      }
      sub_1004DD8B8(v32, *(id *)&v33, v34, v38);
      v47 = v63;
      sub_1004DD8B8(v35, v36, v37, v63);
      sub_1004DD8B8(v35, v36, v37, v47);
      v43 = v32;
      v44 = v33;
      v45 = v34;
      v22 = v38;
    }
    else
    {
      v43 = 0;
      v45 = v61;
      v44 = v62;
    }
    sub_1004DD8B8(v43, *(id *)&v44, v45, v22);
    goto LABEL_31;
  }
  if (v25 == 1)
  {
    v26 = v63;
    if ((v63 & 0xC0) == 0x40)
    {
      v27 = v62;
      v28 = *(double *)&v59;
      v29 = static Calendar.current.getter(v21);
      v30 = Date.init(timeIntervalSinceReferenceDate:)(v29, v27);
      Date.init(timeIntervalSinceReferenceDate:)(v30, v28);
      (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Calendar.Component.day(_:), v8);
      v63 = Calendar.compare(_:to:toGranularity:)(v18, v15, v11);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v31 = *(void (**)(char *, uint64_t))(v13 + 8);
      v31(v15, v12);
      v31(v18, v12);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
      LOBYTE(v24) = v63 == -1;
      return v24 & 1;
    }
    goto LABEL_15;
  }
  v26 = v63;
  if (v63 < 0x40u)
    goto LABEL_31;
  v41 = v61;
  v40 = v62;
  LODWORD(v24) = 1;
  v42 = v60;
  if (v61 | *(_QWORD *)&v62 | v60 || v22 != 192)
  {
LABEL_16:
    if (v26 >= 0xC0u)
    {
      if (!(v57 | v59 | v58) && v26 == 192)
        goto LABEL_31;
      if (v26 == 192 && v58 == 1 && !(v57 | v59))
        goto LABEL_26;
    }
    if (!(_DWORD)v24 || v22 != 192 || v42 != 1 || v41 | *(_QWORD *)&v40)
      goto LABEL_26;
LABEL_31:
    LOBYTE(v24) = 0;
  }
  return v24 & 1;
}

double sub_1009E6080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t);
  uint64_t v132;
  unsigned int v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  __n128 v138;
  void (*v139)(_BYTE *, uint64_t);
  _BYTE *v140;
  _BYTE *v141;
  uint64_t v142;
  void (*v143)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v144;
  uint64_t v145;
  void (*v146)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v147;
  uint64_t v148;
  double v149;
  _BYTE *v151;
  _BYTE *v152;
  _QWORD *v153;
  _BYTE *v154;
  _BYTE *v155;
  uint64_t v156;
  double v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;
  double v161;
  uint64_t v162;
  void (*v163)(_BYTE *, uint64_t);
  void (*v164)(_BYTE *, uint64_t, uint64_t, uint64_t);
  double v165;
  _BYTE *v166;
  double v167;
  _BYTE *v168;
  void (*v169)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  _BYTE *v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE *v175;
  _BYTE *v176;
  _BYTE *v177;
  _BYTE *v178;
  uint64_t v179;
  void (*v180)(_BYTE *, uint64_t);
  _BYTE *v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE *v184;
  _BYTE *v185;
  uint64_t v186;
  _BYTE *v187;
  _BYTE *v188;
  void (*v189)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v190;
  uint64_t v191;
  double v192;
  _BYTE *v193;
  uint64_t v194;
  uint64_t v195;
  double v196;
  void (*v197)(_BYTE *, uint64_t);
  double v198;
  _BYTE *v199;
  _BYTE *v200;
  double v201;
  _BYTE *v202;
  void (*v203)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  uint64_t v207;
  _BYTE *v208;
  _BYTE *v209;
  void (*v210)(_BYTE *, uint64_t);
  _BYTE *v211;
  void (*v212)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v213;
  uint64_t v214;
  double v215;
  _BYTE *v216;
  uint64_t v217;
  uint64_t v218;
  double v219;
  double v220;
  _BYTE *v221;
  void (*v222)(_BYTE *, uint64_t);
  double v223;
  _BYTE *v224;
  _BYTE *v225;
  void (*v226)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  uint64_t v230;
  _BYTE *v231;
  _BYTE *v232;
  _BYTE *v233;
  void (*v234)(_BYTE *, uint64_t);
  _BYTE *v235;
  _BYTE *v236;
  void (*v237)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v238;
  uint64_t v239;
  double v240;
  _BYTE *v241;
  uint64_t v242;
  uint64_t v243;
  double v244;
  void (*v245)(_BYTE *, uint64_t);
  _BYTE *v246;
  uint64_t v247;
  double v248;
  double v249;
  _BYTE *v250;
  void (*v251)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v252;
  uint64_t v253;
  _BYTE *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(uint64_t);
  void *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _BYTE *v266;
  void *v267;
  _BYTE *v268;
  __n128 v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  _BYTE *v278;
  _BYTE *v279;
  uint64_t v280;
  _BYTE *v281;
  __n128 v282;
  uint64_t v283;
  void (*v284)(_BYTE *, uint64_t);
  void (*v285)(_BYTE *, uint64_t);
  void (*v286)(_BYTE *, uint64_t);
  _BYTE *v287;
  void (*v288)(_BYTE *, uint64_t);
  _BYTE *v289;
  _BYTE *v290;
  _BYTE *v291;
  uint64_t v292;
  _BYTE *v293;
  _BYTE *v294;
  _BYTE *v295;
  uint64_t v296;
  double v297;
  _BYTE *v298;
  uint64_t v299;
  uint64_t v300;
  double v301;
  double v302;
  double v303;
  void (*v304)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v305;
  uint64_t v306;
  _BYTE *v307;
  uint64_t v308;
  void (*v309)(_BYTE *, uint64_t);
  _BYTE *v310;
  uint64_t v311;
  _BYTE *v312;
  __n128 v313;
  uint64_t v314;
  void (*v315)(_BYTE *, uint64_t);
  void (*v316)(_BYTE *, uint64_t);
  _BYTE *v317;
  _BYTE *v318;
  void (*v319)(_BYTE *, uint64_t);
  _BYTE *v320;
  _BYTE *v321;
  _BYTE *v322;
  uint64_t v323;
  _BYTE *v324;
  int v325;
  _BYTE *v326;
  _BYTE *v327;
  uint64_t v328;
  uint64_t v329;
  double v330;
  _BYTE *v331;
  uint64_t v332;
  uint64_t v333;
  double v334;
  double v335;
  double v336;
  void (*v337)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v338;
  uint64_t v339;
  uint64_t v340;
  _BYTE *v341;
  uint64_t v342;
  void (*v343)(_BYTE *, uint64_t);
  uint64_t v344;
  void (*v345)(_BYTE *, uint64_t);
  _BYTE *v346;
  void (*v347)(_BYTE *, uint64_t);
  uint64_t v348;
  void (*v349)(_BYTE *, uint64_t);
  _BYTE *v350;
  void (*v351)(_BYTE *, uint64_t);
  uint64_t v352;
  void (*v353)(_BYTE *, uint64_t);
  int v354;
  int v355;
  int v356;
  int v357;
  int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  int v364;
  int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  int v383;
  int v384;
  int v385;
  int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  int v396;
  int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  int v404;
  int v405;
  int v406;
  int v407;
  int v408;
  _BYTE v409[12];
  unsigned int v410;
  uint64_t v411;
  void (*v412)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v413;
  void (*v414)(_BYTE *, uint64_t, uint64_t, uint64_t);
  void (*v415)(_BYTE *, uint64_t);
  void (*v416)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v417;
  _BYTE *v418;
  _BYTE *v419;
  _BYTE *v420;
  _BYTE *v421;
  _BYTE *v422;
  _BYTE *v423;
  _BYTE *v424;
  _BYTE *v425;
  _BYTE *v426;
  _BYTE *v427;
  _BYTE *v428;
  _BYTE *v429;
  _BYTE *v430;
  _BYTE *v431;
  _BYTE *v432;
  _BYTE *v433;
  _BYTE *v434;
  _BYTE *v435;
  _BYTE *v436;
  _BYTE *v437;
  _BYTE *v438;
  _BYTE *v439;
  _BYTE *v440;
  uint64_t v441;
  void (*v442)(uint64_t);
  uint64_t v443;
  _BYTE *v444;
  _BYTE *v445;
  _BYTE *v446;
  uint64_t v447;
  unsigned int v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  _BYTE *v452;
  _BYTE *v453;
  _BYTE *v454;
  _BYTE *v455;
  _BYTE *v456;
  _BYTE *v457;
  _BYTE *v458;
  _BYTE *v459;
  _BYTE *v460;
  _BYTE *v461;
  _BYTE *v462;
  _BYTE *v463;
  _BYTE *v464;
  _BYTE *v465;
  _BYTE *v466;
  _BYTE *v467;
  _BYTE *v468;
  _BYTE *v469;
  _BYTE *v470;
  _BYTE *v471;
  _BYTE *v472;
  __int128 v473;
  _BYTE *v474;
  _BYTE *v475;
  uint64_t v476;
  _BYTE *v477;
  _BYTE *v478;
  _BYTE *v479;
  _BYTE *v480;
  _BYTE *v481;
  _BYTE *v482;
  uint64_t v483;
  _QWORD *v484;
  _BYTE *v485;
  uint64_t v486;
  uint64_t v487;

  v486 = a3;
  v483 = a2;
  v476 = a1;
  v3 = sub_1004B804C(&qword_101400D40);
  __chkstk_darwin(v3);
  v482 = &v409[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C(&qword_101400D50);
  __chkstk_darwin(v5);
  v481 = &v409[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v487 = type metadata accessor for DateComponents(0);
  v484 = *(_QWORD **)(v487 - 8);
  v7 = __chkstk_darwin(v487);
  v444 = &v409[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v7);
  v452 = &v409[-v10];
  __chkstk_darwin(v9);
  v485 = &v409[-v11];
  v12 = sub_1004B804C(&qword_1013E04F0);
  v13 = __chkstk_darwin(v12);
  v422 = &v409[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __chkstk_darwin(v13);
  v421 = &v409[-v16];
  v17 = __chkstk_darwin(v15);
  v424 = &v409[-v18];
  v19 = __chkstk_darwin(v17);
  v425 = &v409[-v20];
  v21 = __chkstk_darwin(v19);
  v431 = &v409[-v22];
  v23 = __chkstk_darwin(v21);
  v434 = &v409[-v24];
  v25 = __chkstk_darwin(v23);
  v419 = &v409[-v26];
  v27 = __chkstk_darwin(v25);
  v418 = &v409[-v28];
  v29 = __chkstk_darwin(v27);
  v423 = &v409[-v30];
  v31 = __chkstk_darwin(v29);
  v426 = &v409[-v32];
  v33 = __chkstk_darwin(v31);
  v427 = &v409[-v34];
  v35 = __chkstk_darwin(v33);
  v432 = &v409[-v36];
  v37 = __chkstk_darwin(v35);
  v437 = &v409[-v38];
  v39 = __chkstk_darwin(v37);
  v436 = &v409[-v40];
  v41 = __chkstk_darwin(v39);
  v445 = &v409[-v42];
  v43 = __chkstk_darwin(v41);
  v446 = &v409[-v44];
  v45 = __chkstk_darwin(v43);
  v456 = &v409[-v46];
  v47 = __chkstk_darwin(v45);
  v440 = &v409[-v48];
  v49 = __chkstk_darwin(v47);
  v439 = &v409[-v50];
  v51 = __chkstk_darwin(v49);
  v459 = &v409[-v52];
  v53 = __chkstk_darwin(v51);
  v460 = &v409[-v54];
  v55 = __chkstk_darwin(v53);
  v461 = &v409[-v56];
  v57 = __chkstk_darwin(v55);
  v455 = &v409[-v58];
  v59 = __chkstk_darwin(v57);
  v454 = &v409[-v60];
  v61 = __chkstk_darwin(v59);
  v464 = &v409[-v62];
  v63 = __chkstk_darwin(v61);
  v469 = &v409[-v64];
  v65 = __chkstk_darwin(v63);
  *(_QWORD *)&v473 = &v409[-v66];
  v67 = __chkstk_darwin(v65);
  v472 = &v409[-v68];
  v69 = __chkstk_darwin(v67);
  v471 = &v409[-v70];
  v71 = __chkstk_darwin(v69);
  v467 = &v409[-v72];
  v73 = __chkstk_darwin(v71);
  v466 = &v409[-v74];
  v75 = __chkstk_darwin(v73);
  v475 = &v409[-v76];
  v77 = __chkstk_darwin(v75);
  v478 = &v409[-v78];
  v79 = __chkstk_darwin(v77);
  v477 = &v409[-v80];
  __chkstk_darwin(v79);
  v82 = &v409[-v81];
  v83 = type metadata accessor for Date(0);
  v84 = *(_QWORD **)(v83 - 8);
  v85 = __chkstk_darwin(v83);
  v420 = &v409[-((v86 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = __chkstk_darwin(v85);
  v429 = &v409[-v88];
  v89 = __chkstk_darwin(v87);
  v433 = &v409[-v90];
  v91 = __chkstk_darwin(v89);
  v417 = &v409[-v92];
  v93 = __chkstk_darwin(v91);
  v428 = &v409[-v94];
  v95 = __chkstk_darwin(v93);
  v430 = &v409[-v96];
  v97 = __chkstk_darwin(v95);
  v435 = &v409[-v98];
  v99 = __chkstk_darwin(v97);
  v457 = &v409[-v100];
  v101 = __chkstk_darwin(v99);
  v458 = &v409[-v102];
  v103 = __chkstk_darwin(v101);
  v438 = &v409[-v104];
  v105 = __chkstk_darwin(v103);
  v462 = &v409[-v106];
  v107 = __chkstk_darwin(v105);
  v463 = &v409[-v108];
  v109 = __chkstk_darwin(v107);
  v453 = &v409[-v110];
  v111 = __chkstk_darwin(v109);
  v474 = &v409[-v112];
  v113 = __chkstk_darwin(v111);
  v468 = &v409[-v114];
  v115 = __chkstk_darwin(v113);
  v470 = &v409[-v116];
  v117 = __chkstk_darwin(v115);
  v465 = &v409[-v118];
  v119 = __chkstk_darwin(v117);
  v480 = &v409[-v120];
  __chkstk_darwin(v119);
  v479 = &v409[-v121];
  v122 = sub_1004B804C(&qword_1013E0528);
  v123 = type metadata accessor for Calendar.Component(0);
  v124 = *(_QWORD *)(v123 - 8);
  v125 = *(_QWORD *)(v124 + 72);
  v126 = *(unsigned __int8 *)(v124 + 80);
  v127 = (v126 + 32) & ~v126;
  v128 = 2 * v125;
  v450 = v122;
  v447 = v126 | 7;
  v129 = swift_allocObject(v122, v127 + 3 * v125, v126 | 7);
  *(_OWORD *)(v129 + 16) = xmmword_100EF5550;
  v449 = v127;
  v130 = v129 + v127;
  v131 = *(void (**)(uint64_t))(v124 + 104);
  v448 = enum case for Calendar.Component.year(_:);
  v131(v130);
  v451 = v125;
  v132 = v130 + v125;
  v133 = enum case for Calendar.Component.month(_:);
  ((void (*)(uint64_t, _QWORD, uint64_t))v131)(v132, enum case for Calendar.Component.month(_:), v123);
  v441 = v128;
  v442 = v131;
  ((void (*)(uint64_t, _QWORD, uint64_t))v131)(v130 + v128, enum case for Calendar.Component.day(_:), v123);
  v134 = sub_1004B55E4(v129);
  swift_setDeallocating(v129);
  v443 = v123;
  swift_arrayDestroy(v130, 3, v123);
  v135 = v129;
  v136 = v487;
  swift_deallocClassInstance(v135, 32, 7);
  v137 = v485;
  Calendar.dateComponents(_:from:)(v134, v483);
  v138 = swift_bridgeObjectRelease(v134);
  Calendar.date(from:)(v137, v138);
  v139 = (void (*)(_BYTE *, uint64_t))v484[1];
  v139(v137, v136);
  v484 = v84;
  v140 = (_BYTE *)v84[6];
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v140)(v82, 1, v83) == 1)
    goto LABEL_4;
  v410 = v133;
  v141 = v479;
  v416 = (void (*)(_BYTE *, _BYTE *, uint64_t))v484[4];
  v416(v479, v82, v83);
  v142 = type metadata accessor for Calendar(0);
  v143 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56);
  v144 = v481;
  v413 = v142;
  v412 = v143;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v143)(v481, 1, 1);
  v145 = type metadata accessor for TimeZone(0);
  v146 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56);
  v147 = v482;
  v411 = v145;
  v414 = v146;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v146)(v482, 1, 1);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v144, v147, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1);
  v82 = v477;
  Calendar.date(byAdding:to:wrappingComponents:)(v137, v141, 0);
  v415 = v139;
  v139(v137, v136);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v140)(v82, 1, v83) == 1)
  {
    ((void (*)(_BYTE *, uint64_t))v484[1])(v141, v83);
LABEL_4:
    v148 = (uint64_t)v82;
LABEL_5:
    sub_1004CB800(v148, &qword_1013E04F0);
    return -INFINITY;
  }
  v151 = v140;
  v152 = v480;
  v416(v480, v82, v83);
  v153 = v484;
  v154 = v478;
  v477 = (_BYTE *)v484[2];
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v478, v152, v83);
  v155 = (_BYTE *)v153[7];
  v156 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v155)(v154, 0, 1, v83);
  v157 = Date.timeIntervalSinceReferenceDate.getter(v156);
  v158 = v475;
  sub_1004CB7BC((uint64_t)v154, (uint64_t)v475, &qword_1013E04F0);
  v159 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v140)(v158, 1, v83);
  if ((_DWORD)v159 == 1)
  {
    v160 = sub_1004CB800((uint64_t)v158, &qword_1013E04F0);
    v161 = INFINITY;
  }
  else
  {
    v161 = Date.timeIntervalSinceReferenceDate.getter(v159);
    v160 = ((uint64_t (*)(_BYTE *, uint64_t))v153[1])(v158, v83);
  }
  v162 = v476;
  v163 = v415;
  v164 = v414;
  v165 = Date.timeIntervalSinceReferenceDate.getter(v160);
  v166 = v480;
  if (v157 <= v165)
  {
    v167 = v165;
    sub_1004CB800((uint64_t)v478, &qword_1013E04F0);
    if (v167 < v161)
    {
      v168 = v465;
      v169 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v465, v141, v83);
      v170 = (uint64_t)v466;
      v169(v466, v166, v83);
      v171 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v155)(v170, 0, 1, v83);
      v149 = Date.timeIntervalSinceReferenceDate.getter(v171);
      v172 = v467;
      sub_1004CB7BC(v170, (uint64_t)v467, &qword_1013E04F0);
      v173 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v151)(v172, 1, v83);
      if ((_DWORD)v173 == 1)
      {
        sub_1004CB800(v170, &qword_1013E04F0);
        v197 = (void (*)(_BYTE *, uint64_t))v153[1];
        v197(v168, v83);
        sub_1004CB800((uint64_t)v172, &qword_1013E04F0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter(v173);
        sub_1004CB800(v170, &qword_1013E04F0);
        v197 = (void (*)(_BYTE *, uint64_t))v153[1];
        v197(v168, v83);
        v197(v172, v83);
      }
      goto LABEL_25;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v478, &qword_1013E04F0);
  }
  v174 = sub_1004B7878(&qword_101400D58, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  if ((dispatch thunk of static Comparable.< infix(_:_:)(v162, v166, v83, v174) & 1) == 0)
  {
    v181 = v470;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v470, v166, v83);
    v182 = (uint64_t)v471;
    v183 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v155)(v471, 1, 1, v83);
    v184 = v181;
    v149 = Date.timeIntervalSinceReferenceDate.getter(v183);
    v185 = v472;
    sub_1004CB7BC(v182, (uint64_t)v472, &qword_1013E04F0);
    v186 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v151)(v185, 1, v83);
    if ((_DWORD)v186 == 1)
    {
      sub_1004CB800(v182, &qword_1013E04F0);
      v197 = (void (*)(_BYTE *, uint64_t))v153[1];
      v197(v184, v83);
      sub_1004CB800((uint64_t)v185, &qword_1013E04F0);
    }
    else
    {
      Date.timeIntervalSinceReferenceDate.getter(v186);
      sub_1004CB800(v182, &qword_1013E04F0);
      v197 = (void (*)(_BYTE *, uint64_t))v153[1];
      v197(v184, v83);
      v197(v185, v83);
    }
LABEL_25:
    v197(v166, v83);
    v197(v141, v83);
    return v149;
  }
  v478 = v155;
  v175 = v481;
  v412(v481, 1, 1, v413);
  v176 = v482;
  v164(v482, 1, 1, v411);
  LOBYTE(v404) = 1;
  LOBYTE(v399) = 1;
  LOBYTE(v394) = 1;
  LOBYTE(v389) = 1;
  LOBYTE(v384) = 1;
  LOBYTE(v379) = 1;
  LOBYTE(v374) = 1;
  LOBYTE(v369) = 1;
  LOBYTE(v364) = 1;
  LOBYTE(v359) = 1;
  LOBYTE(v354) = 0;
  v177 = v175;
  v178 = v485;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v177, v176, 0, 1, 0, 1, 0, 1, -1, v354, 0, v359, 0, v364, 0, v369, 0, v374, 0,
    v379,
    0,
    v384,
    0,
    v389,
    0,
    v394,
    0,
    v399,
    0,
    v404);
  v179 = v473;
  Calendar.date(byAdding:to:wrappingComponents:)(v178, v141, 0);
  v163(v178, v487);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v151)(v179, 1, v83) == 1)
  {
    v180 = (void (*)(_BYTE *, uint64_t))v153[1];
    v180(v480, v83);
    v180(v141, v83);
    v148 = v179;
    goto LABEL_5;
  }
  v187 = v468;
  v416(v468, (_BYTE *)v179, v83);
  v188 = v474;
  v189 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v474, v141, v83);
  v190 = v469;
  v189(v469, v188, v83);
  v191 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v478)(v190, 0, 1, v83);
  v192 = Date.timeIntervalSinceReferenceDate.getter(v191);
  v193 = v464;
  sub_1004CB7BC((uint64_t)v190, (uint64_t)v464, &qword_1013E04F0);
  v194 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v151)(v193, 1, v83);
  if ((_DWORD)v194 == 1)
  {
    v195 = sub_1004CB800((uint64_t)v193, &qword_1013E04F0);
    v196 = INFINITY;
  }
  else
  {
    v196 = Date.timeIntervalSinceReferenceDate.getter(v194);
    v195 = ((uint64_t (*)(_BYTE *, uint64_t))v484[1])(v193, v83);
  }
  v198 = Date.timeIntervalSinceReferenceDate.getter(v195);
  v199 = v485;
  if (v192 <= v198)
  {
    v201 = v198;
    sub_1004CB800((uint64_t)v469, &qword_1013E04F0);
    v200 = v482;
    if (v201 < v196)
    {
      v202 = v453;
      v203 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v453, v187, v83);
      v204 = (uint64_t)v454;
      v203(v454, v474, v83);
      v205 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v478)(v204, 0, 1, v83);
      v149 = Date.timeIntervalSinceReferenceDate.getter(v205);
      v206 = v455;
      sub_1004CB7BC(v204, (uint64_t)v455, &qword_1013E04F0);
      v207 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v151)(v206, 1, v83);
      if ((_DWORD)v207 == 1)
      {
        sub_1004CB800(v204, &qword_1013E04F0);
        v245 = (void (*)(_BYTE *, uint64_t))v484[1];
        v245(v202, v83);
        sub_1004CB800((uint64_t)v206, &qword_1013E04F0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter(v207);
        sub_1004CB800(v204, &qword_1013E04F0);
        v245 = (void (*)(_BYTE *, uint64_t))v484[1];
        v245(v202, v83);
        v245(v206, v83);
      }
      v246 = v480;
      v245(v474, v83);
      v245(v468, v83);
      v245(v246, v83);
      v245(v141, v83);
      return v149;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v469, &qword_1013E04F0);
    v200 = v482;
  }
  v208 = v481;
  v412(v481, 1, 1, v413);
  v164(v200, 1, 1, v411);
  LOBYTE(v405) = 1;
  LOBYTE(v400) = 1;
  LOBYTE(v395) = 1;
  LOBYTE(v390) = 1;
  LOBYTE(v385) = 1;
  LOBYTE(v380) = 1;
  LOBYTE(v375) = 1;
  LOBYTE(v370) = 1;
  LOBYTE(v365) = 1;
  LOBYTE(v360) = 1;
  LOBYTE(v355) = 0;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v208, v200, 0, 1, 0, 1, 0, 1, -7, v355, 0, v360, 0, v365, 0, v370, 0, v375, 0,
    v380,
    0,
    v385,
    0,
    v390,
    0,
    v395,
    0,
    v400,
    0,
    v405);
  v209 = v461;
  Calendar.date(byAdding:to:wrappingComponents:)(v199, v187, 0);
  v163(v199, v487);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v151)(v209, 1, v83) == 1)
  {
    v210 = (void (*)(_BYTE *, uint64_t))v484[1];
    v210(v474, v83);
    v210(v187, v83);
    v210(v480, v83);
    v210(v141, v83);
    v148 = (uint64_t)v209;
    goto LABEL_5;
  }
  v416(v463, v209, v83);
  v211 = v462;
  v212 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v462, v187, v83);
  v213 = v460;
  v212(v460, v211, v83);
  v214 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v478)(v213, 0, 1, v83);
  v215 = Date.timeIntervalSinceReferenceDate.getter(v214);
  v216 = v459;
  sub_1004CB7BC((uint64_t)v213, (uint64_t)v459, &qword_1013E04F0);
  v217 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v151)(v216, 1, v83);
  if ((_DWORD)v217 == 1)
  {
    v218 = sub_1004CB800((uint64_t)v216, &qword_1013E04F0);
    v219 = INFINITY;
  }
  else
  {
    v219 = Date.timeIntervalSinceReferenceDate.getter(v217);
    v218 = ((uint64_t (*)(_BYTE *, uint64_t))v484[1])(v216, v83);
  }
  v220 = Date.timeIntervalSinceReferenceDate.getter(v218);
  v221 = v482;
  v222 = v415;
  if (v215 <= v220)
  {
    v223 = v220;
    sub_1004CB800((uint64_t)v460, &qword_1013E04F0);
    if (v223 < v219)
    {
      v224 = v438;
      v225 = v463;
      v226 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v438, v463, v83);
      v227 = (uint64_t)v439;
      v226(v439, v462, v83);
      v228 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v478)(v227, 0, 1, v83);
      v149 = Date.timeIntervalSinceReferenceDate.getter(v228);
      v229 = v440;
      sub_1004CB7BC(v227, (uint64_t)v440, &qword_1013E04F0);
      v230 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v151)(v229, 1, v83);
      if ((_DWORD)v230 == 1)
      {
        sub_1004CB800(v227, &qword_1013E04F0);
        v286 = (void (*)(_BYTE *, uint64_t))v484[1];
        v286(v224, v83);
        sub_1004CB800((uint64_t)v229, &qword_1013E04F0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter(v230);
        sub_1004CB800(v227, &qword_1013E04F0);
        v286 = (void (*)(_BYTE *, uint64_t))v484[1];
        v286(v224, v83);
        v286(v229, v83);
      }
      v287 = v480;
      v286(v462, v83);
      v286(v225, v83);
      v286(v474, v83);
      v286(v468, v83);
      v286(v287, v83);
      v286(v141, v83);
      return v149;
    }
  }
  else
  {
    sub_1004CB800((uint64_t)v460, &qword_1013E04F0);
  }
  v231 = v481;
  v412(v481, 1, 1, v413);
  v164(v221, 1, 1, v411);
  LOBYTE(v406) = 1;
  LOBYTE(v401) = 1;
  LOBYTE(v396) = 1;
  LOBYTE(v391) = 1;
  LOBYTE(v386) = 1;
  LOBYTE(v381) = 1;
  LOBYTE(v376) = 1;
  LOBYTE(v371) = 1;
  LOBYTE(v366) = 1;
  LOBYTE(v361) = 1;
  LOBYTE(v356) = 0;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v231, v221, 0, 1, 0, 1, 0, 1, -30, v356, 0, v361, 0, v366, 0, v371, 0, v376, 0,
    v381,
    0,
    v386,
    0,
    v391,
    0,
    v396,
    0,
    v401,
    0,
    v406);
  v232 = v456;
  v233 = v463;
  Calendar.date(byAdding:to:wrappingComponents:)(v199, v463, 0);
  v222(v199, v487);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v151)(v232, 1, v83) == 1)
  {
    v234 = (void (*)(_BYTE *, uint64_t))v484[1];
    v234(v462, v83);
    v234(v233, v83);
    v234(v474, v83);
    v234(v187, v83);
    v234(v480, v83);
    v234(v141, v83);
    v148 = (uint64_t)v232;
    goto LABEL_5;
  }
  v416(v458, v232, v83);
  v235 = v457;
  v236 = v233;
  v237 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v457, v236, v83);
  v238 = (uint64_t)v446;
  v237(v446, v235, v83);
  v239 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v478)(v238, 0, 1, v83);
  v240 = Date.timeIntervalSinceReferenceDate.getter(v239);
  v241 = v445;
  sub_1004CB7BC(v238, (uint64_t)v445, &qword_1013E04F0);
  v472 = v151;
  v242 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v151)(v241, 1, v83);
  if ((_DWORD)v242 == 1)
  {
    v243 = sub_1004CB800((uint64_t)v241, &qword_1013E04F0);
    v244 = INFINITY;
  }
  else
  {
    v244 = Date.timeIntervalSinceReferenceDate.getter(v242);
    v243 = ((uint64_t (*)(_BYTE *, uint64_t))v484[1])(v241, v83);
  }
  v247 = v476;
  v248 = Date.timeIntervalSinceReferenceDate.getter(v243);
  if (v240 <= v248)
  {
    v249 = v248;
    sub_1004CB800(v238, &qword_1013E04F0);
    if (v249 < v244)
    {
      v250 = v435;
      v251 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v435, v458, v83);
      v252 = (uint64_t)v436;
      v251(v436, v457, v83);
      v253 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v478)(v252, 0, 1, v83);
      v149 = Date.timeIntervalSinceReferenceDate.getter(v253);
      v254 = v437;
      sub_1004CB7BC(v252, (uint64_t)v437, &qword_1013E04F0);
      v255 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v472)(v254, 1, v83);
      if ((_DWORD)v255 == 1)
      {
        sub_1004CB800(v252, &qword_1013E04F0);
        v288 = (void (*)(_BYTE *, uint64_t))v484[1];
        v288(v250, v83);
        sub_1004CB800((uint64_t)v254, &qword_1013E04F0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter(v255);
        sub_1004CB800(v252, &qword_1013E04F0);
        v288 = (void (*)(_BYTE *, uint64_t))v484[1];
        v288(v250, v83);
        v288(v254, v83);
      }
      v289 = v463;
      v288(v457, v83);
      v288(v458, v83);
      v288(v462, v83);
      v288(v289, v83);
      v288(v474, v83);
      v288(v468, v83);
      v288(v480, v83);
      v288(v141, v83);
      return v149;
    }
  }
  else
  {
    sub_1004CB800(v238, &qword_1013E04F0);
  }
  v475 = (_BYTE *)(v449 + v441);
  v256 = v449;
  v257 = swift_allocObject(v450, v449 + v441, v447);
  v473 = xmmword_100EF5A10;
  *(_OWORD *)(v257 + 16) = xmmword_100EF5A10;
  v258 = v257 + v256;
  v259 = v410;
  v260 = v443;
  v261 = v442;
  ((void (*)(uint64_t, _QWORD, uint64_t))v442)(v258, v410, v443);
  ((void (*)(uint64_t, _QWORD, uint64_t))v261)(v258 + v451, v448, v260);
  v262 = sub_1004B55E4(v257);
  swift_setDeallocating(v257);
  swift_arrayDestroy(v258, 2, v260);
  swift_deallocClassInstance(v257, 32, 7);
  Calendar.dateComponents(_:from:)(v262, v247);
  swift_bridgeObjectRelease(v262);
  v263 = swift_allocObject(v450, v475, v447);
  *(_OWORD *)(v263 + 16) = v473;
  v264 = v263 + v449;
  v265 = v259;
  v266 = v452;
  ((void (*)(uint64_t, uint64_t, uint64_t))v261)(v263 + v449, v265, v260);
  ((void (*)(uint64_t, _QWORD, uint64_t))v261)(v264 + v451, v448, v260);
  v267 = sub_1004B55E4(v263);
  swift_setDeallocating(v263);
  swift_arrayDestroy(v264, 2, v260);
  swift_deallocClassInstance(v263, 32, 7);
  v268 = v444;
  Calendar.dateComponents(_:from:)(v267, v483);
  v269 = swift_bridgeObjectRelease(v267);
  v270 = DateComponents.month.getter(v269);
  if ((v271 & 1) != 0
    || (v272 = v270, v273 = DateComponents.year.getter(), (v274 & 1) != 0)
    || (v275 = v273, v276 = DateComponents.year.getter(), (v277 & 1) != 0))
  {
    v283 = v487;
    v284 = v415;
    v415(v268, v487);
    v284(v266, v283);
    v285 = (void (*)(_BYTE *, uint64_t))v484[1];
    v285(v457, v83);
    v285(v458, v83);
    v285(v462, v83);
    v285(v463, v83);
    v285(v474, v83);
    v285(v468, v83);
    v285(v480, v83);
    v285(v479, v83);
    return -INFINITY;
  }
  v278 = v481;
  if (v275 == v276)
  {
    v412(v481, 1, 1, v413);
    v279 = v482;
    v164(v482, 1, 1, v411);
    LOBYTE(v407) = 1;
    LOBYTE(v402) = 1;
    LOBYTE(v397) = 1;
    LOBYTE(v392) = 1;
    LOBYTE(v387) = 1;
    LOBYTE(v382) = 1;
    LOBYTE(v377) = 1;
    LOBYTE(v372) = 1;
    LOBYTE(v367) = 1;
    LOBYTE(v362) = 1;
    LOBYTE(v357) = 1;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v278, v279, 0, 1, v275, 0, v272, 0, 0, v357, 0, v362, 0, v367, 0, v372, 0, v377, 0,
      v382,
      0,
      v387,
      0,
      v392,
      0,
      v397,
      0,
      v402,
      0,
      v407);
    v280 = (uint64_t)v432;
    v281 = v278;
    Calendar.date(from:)(v199, v282);
    v415(v199, v487);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v472)(v280, 1, v83) == 1)
    {
      sub_1004CB800(v280, &qword_1013E04F0);
    }
    else
    {
      v290 = v430;
      v416(v430, (_BYTE *)v280, v83);
      v412(v281, 1, 1, v413);
      v291 = v482;
      v164(v482, 1, 1, v411);
      LOBYTE(v407) = 1;
      LOBYTE(v402) = 1;
      LOBYTE(v397) = 1;
      LOBYTE(v392) = 1;
      LOBYTE(v387) = 1;
      LOBYTE(v382) = 1;
      LOBYTE(v377) = 1;
      LOBYTE(v372) = 1;
      LOBYTE(v367) = 1;
      LOBYTE(v362) = 1;
      LOBYTE(v357) = 1;
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v281, v291, 0, 1, 0, 1, 1, 0, 0, v357, 0, v362, 0, v367, 0, v372, 0, v377, 0,
        v382,
        0,
        v387,
        0,
        v392,
        0,
        v397,
        0,
        v402,
        0,
        v407);
      v292 = (uint64_t)v427;
      Calendar.date(byAdding:to:wrappingComponents:)(v199, v290, 0);
      v415(v199, v487);
      v293 = v472;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v472)(v292, 1, v83) == 1)
      {
        ((void (*)(_BYTE *, uint64_t))v484[1])(v290, v83);
        sub_1004CB800(v292, &qword_1013E04F0);
        v278 = v481;
      }
      else
      {
        v294 = v428;
        v416(v428, (_BYTE *)v292, v83);
        v295 = v426;
        ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v426, v294, v83);
        v296 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v478)(v295, 0, 1, v83);
        v297 = Date.timeIntervalSinceReferenceDate.getter(v296);
        v298 = v423;
        sub_1004CB7BC((uint64_t)v295, (uint64_t)v423, &qword_1013E04F0);
        v299 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v293)(v298, 1, v83);
        if ((_DWORD)v299 == 1)
        {
          v300 = sub_1004CB800((uint64_t)v298, &qword_1013E04F0);
          v301 = INFINITY;
        }
        else
        {
          v301 = Date.timeIntervalSinceReferenceDate.getter(v299);
          v300 = ((uint64_t (*)(_BYTE *, uint64_t))v484[1])(v298, v83);
        }
        v302 = Date.timeIntervalSinceReferenceDate.getter(v300);
        if (v297 <= v302)
        {
          v303 = v302;
          sub_1004CB800((uint64_t)v426, &qword_1013E04F0);
          if (v303 < v301)
          {
            v304 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
            ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v417, v430, v83);
            v305 = v418;
            v304(v418, v428, v83);
            v306 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v478)(v305, 0, 1, v83);
            v149 = Date.timeIntervalSinceReferenceDate.getter(v306);
            v307 = v419;
            sub_1004CB7BC((uint64_t)v305, (uint64_t)v419, &qword_1013E04F0);
            v308 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v293)(v307, 1, v83);
            if ((_DWORD)v308 == 1)
            {
              sub_1004CB800((uint64_t)v418, &qword_1013E04F0);
              v351 = (void (*)(_BYTE *, uint64_t))v484[1];
              v351(v417, v83);
              sub_1004CB800((uint64_t)v419, &qword_1013E04F0);
            }
            else
            {
              v350 = v419;
              Date.timeIntervalSinceReferenceDate.getter(v308);
              sub_1004CB800((uint64_t)v418, &qword_1013E04F0);
              v351 = (void (*)(_BYTE *, uint64_t))v484[1];
              v351(v417, v83);
              v351(v350, v83);
            }
            v351(v428, v83);
            v351(v430, v83);
            v352 = v487;
            v353 = v415;
            v415(v444, v487);
            v353(v452, v352);
            v351(v457, v83);
            v351(v458, v83);
            v351(v462, v83);
            v351(v463, v83);
            v351(v474, v83);
            v351(v468, v83);
            v351(v480, v83);
            v351(v479, v83);
            return v149;
          }
        }
        else
        {
          sub_1004CB800((uint64_t)v426, &qword_1013E04F0);
        }
        v309 = (void (*)(_BYTE *, uint64_t))v484[1];
        v309(v428, v83);
        v309(v430, v83);
        v266 = v452;
        v199 = v485;
        v278 = v481;
        v164 = v414;
      }
    }
  }
  v412(v278, 1, 1, v413);
  v310 = v482;
  v164(v482, 1, 1, v411);
  LOBYTE(v407) = 1;
  LOBYTE(v402) = 1;
  LOBYTE(v397) = 1;
  LOBYTE(v392) = 1;
  LOBYTE(v387) = 1;
  LOBYTE(v382) = 1;
  LOBYTE(v377) = 1;
  LOBYTE(v372) = 1;
  LOBYTE(v367) = 1;
  LOBYTE(v362) = 1;
  LOBYTE(v357) = 1;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v278, v310, 0, 1, v275, 0, 0, 1, 0, v357, 0, v362, 0, v367, 0, v372, 0, v377, 0,
    v382,
    0,
    v387,
    0,
    v392,
    0,
    v397,
    0,
    v402,
    0,
    v407);
  v311 = (uint64_t)v434;
  v312 = v278;
  Calendar.date(from:)(v199, v313);
  v314 = v487;
  v315 = v415;
  v415(v199, v487);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v472)(v311, 1, v83) == 1)
  {
    v315(v444, v314);
    v315(v266, v314);
    v316 = (void (*)(_BYTE *, uint64_t))v484[1];
    v316(v457, v83);
    v316(v458, v83);
    v316(v462, v83);
    v316(v463, v83);
    v316(v474, v83);
    v316(v468, v83);
    v317 = v480;
LABEL_81:
    v316(v317, v83);
    v316(v479, v83);
    sub_1004CB800(v311, &qword_1013E04F0);
    return -INFINITY;
  }
  v318 = v433;
  v319 = v315;
  v416(v433, (_BYTE *)v311, v83);
  v412(v312, 1, 1, v413);
  v320 = v482;
  v164(v482, 1, 1, v411);
  LOBYTE(v408) = 1;
  LOBYTE(v403) = 1;
  LOBYTE(v398) = 1;
  LOBYTE(v393) = 1;
  LOBYTE(v388) = 1;
  LOBYTE(v383) = 1;
  LOBYTE(v378) = 1;
  LOBYTE(v373) = 1;
  LOBYTE(v368) = 1;
  LOBYTE(v363) = 1;
  LOBYTE(v358) = 1;
  v321 = v312;
  v322 = v318;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v321, v320, 0, 1, 1, 0, 0, 1, 0, v358, 0, v363, 0, v368, 0, v373, 0, v378, 0,
    v383,
    0,
    v388,
    0,
    v393,
    0,
    v398,
    0,
    v403,
    0,
    v408);
  v311 = (uint64_t)v431;
  Calendar.date(byAdding:to:wrappingComponents:)(v199, v318, 0);
  v323 = v487;
  v319(v199, v487);
  v324 = v472;
  v325 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v472)(v311, 1, v83);
  v326 = v480;
  if (v325 == 1)
  {
    v316 = (void (*)(_BYTE *, uint64_t))v484[1];
    v316(v322, v83);
    v319(v444, v323);
    v319(v452, v323);
    v316(v457, v83);
    v316(v458, v83);
    v316(v462, v83);
    v316(v463, v83);
    v316(v474, v83);
    v316(v468, v83);
    v317 = v326;
    goto LABEL_81;
  }
  v327 = v429;
  v416(v429, (_BYTE *)v311, v83);
  v328 = (uint64_t)v425;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v425, v327, v83);
  v329 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v478)(v328, 0, 1, v83);
  v330 = Date.timeIntervalSinceReferenceDate.getter(v329);
  v331 = v424;
  sub_1004CB7BC(v328, (uint64_t)v424, &qword_1013E04F0);
  v332 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v324)(v331, 1, v83);
  if ((_DWORD)v332 == 1)
  {
    v333 = sub_1004CB800((uint64_t)v331, &qword_1013E04F0);
    v334 = INFINITY;
  }
  else
  {
    v334 = Date.timeIntervalSinceReferenceDate.getter(v332);
    v333 = ((uint64_t (*)(_BYTE *, uint64_t))v484[1])(v331, v83);
  }
  v335 = Date.timeIntervalSinceReferenceDate.getter(v333);
  if (v330 > v335)
  {
    sub_1004CB800(v328, &qword_1013E04F0);
LABEL_91:
    v343 = (void (*)(_BYTE *, uint64_t))v484[1];
    v343(v327, v83);
    v343(v322, v83);
    v344 = v487;
    v345 = v415;
    v415(v444, v487);
    v345(v452, v344);
    v343(v457, v83);
    v343(v458, v83);
    v343(v462, v83);
    v343(v463, v83);
    v343(v474, v83);
    v343(v468, v83);
    v343(v326, v83);
    v343(v479, v83);
    return -INFINITY;
  }
  v336 = v335;
  sub_1004CB800(v328, &qword_1013E04F0);
  if (v336 >= v334)
    goto LABEL_91;
  v337 = (void (*)(_BYTE *, _BYTE *, uint64_t))v477;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v477)(v420, v322, v83);
  v338 = v421;
  v337(v421, v327, v83);
  v339 = ((uint64_t (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v478)(v338, 0, 1, v83);
  v149 = Date.timeIntervalSinceReferenceDate.getter(v339);
  v340 = (uint64_t)v338;
  v341 = v422;
  sub_1004CB7BC(v340, (uint64_t)v422, &qword_1013E04F0);
  v342 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v324)(v341, 1, v83);
  if ((_DWORD)v342 == 1)
  {
    sub_1004CB800((uint64_t)v421, &qword_1013E04F0);
    v347 = (void (*)(_BYTE *, uint64_t))v484[1];
    v347(v420, v83);
    sub_1004CB800((uint64_t)v422, &qword_1013E04F0);
  }
  else
  {
    v346 = v422;
    Date.timeIntervalSinceReferenceDate.getter(v342);
    sub_1004CB800((uint64_t)v421, &qword_1013E04F0);
    v347 = (void (*)(_BYTE *, uint64_t))v484[1];
    v347(v420, v83);
    v347(v346, v83);
  }
  v347(v429, v83);
  v347(v433, v83);
  v348 = v487;
  v349 = v415;
  v415(v444, v487);
  v349(v452, v348);
  v347(v457, v83);
  v347(v458, v83);
  v347(v462, v83);
  v347(v463, v83);
  v347(v474, v83);
  v347(v468, v83);
  v347(v480, v83);
  v347(v479, v83);
  return v149;
}

_QWORD *sub_1009E8C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  int v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  _QWORD *result;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  double v89;
  _QWORD *v90;

  v85 = a2;
  v3 = type metadata accessor for Calendar(0);
  v83 = *(_QWORD *)(v3 - 8);
  v84 = v3;
  __chkstk_darwin(v3);
  v82 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v81 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B804C(&qword_1013E1C78);
  v13 = __chkstk_darwin(v12);
  v80 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v70 - v16;
  __chkstk_darwin(v15);
  v20 = (char *)&v70 - v19;
  v21 = *(_QWORD *)(a1 + 16);
  if (!v21)
    return _swiftEmptyDictionarySingleton;
  v79 = &v20[*(int *)(v12 + 48)];
  v22 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v71 = *(_QWORD *)(v18 + 72);
  v70 = a1;
  swift_bridgeObjectRetain(a1);
  v23 = v22;
  v88 = _swiftEmptyDictionarySingleton;
  v78 = xmmword_100EF5E40;
  v76 = v6;
  v77 = v5;
  v74 = v12;
  v75 = v8;
  v73 = v17;
  v72 = v20;
  while (1)
  {
    v86 = v23;
    v87 = v21;
    sub_1004CB7BC(v23, (uint64_t)v20, &qword_1013E1C78);
    v26 = &v17[*(int *)(v12 + 48)];
    sub_1004B84E0((uint64_t)v20, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v27 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v27(v26, v79, v5);
    v28 = v80;
    v29 = v80 + *(int *)(v12 + 48);
    sub_1004B8460((uint64_t)v17, v80, type metadata accessor for CRLBoardLibraryViewModel.Item);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v29, v26, v5);
    sub_1004B84E0(v28, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v8, v29, v5);
    v31 = (uint64_t)v82;
    static Calendar.current.getter(v30);
    v32 = sub_1009E6080((uint64_t)v8, v85, v31);
    v34 = v33;
    v35 = v32;
    v37 = v36;
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v31, v84);
    v40 = v34;
    v41 = v39 & 1 | 0x40;
    v42 = v88;
    v43 = v88[2];
    v89 = v35;
    if (v43)
    {
      v44 = sub_100843E70(v34, *(void **)&v35, v37, v39 & 1 | 0x40u);
      v45 = _swiftEmptyArrayStorage;
      if ((v46 & 1) != 0)
      {
        v45 = *(_QWORD **)(v42[7] + 8 * v44);
        swift_bridgeObjectRetain(v45);
      }
    }
    else
    {
      v45 = _swiftEmptyArrayStorage;
    }
    v47 = sub_1004B804C(&qword_1014072D0);
    v48 = *(unsigned __int8 *)(v81 + 80);
    v49 = (v48 + 32) & ~v48;
    v50 = swift_allocObject(v47, v49 + *(_QWORD *)(v81 + 72), v48 | 7);
    *(_OWORD *)(v50 + 16) = v78;
    v51 = (uint64_t)v11;
    sub_1004B8460((uint64_t)v11, v50 + v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v90 = v45;
    sub_10061F86C(v50);
    v52 = v90;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v42);
    v90 = v42;
    v54 = v40;
    v55 = v37;
    v57 = sub_100843E70(v40, *(void **)&v89, v37, v41);
    v58 = v42[2];
    v59 = (v56 & 1) == 0;
    v60 = v58 + v59;
    if (__OFADD__(v58, v59))
    {
      __break(1u);
LABEL_21:
      __break(1u);
    }
    v61 = v56;
    if (v42[3] >= v60)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1008333B4();
      goto LABEL_15;
    }
    sub_100821930(v60, isUniquelyReferenced_nonNull_native);
    v62 = sub_100843E70(v54, *(void **)&v89, v55, v41);
    if ((v61 & 1) != (v63 & 1))
      break;
    v57 = v62;
LABEL_15:
    v64 = v90;
    v88 = v90;
    if ((v61 & 1) != 0)
    {
      v24 = v90[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v24 + 8 * v57));
      *(_QWORD *)(v24 + 8 * v57) = v52;
    }
    else
    {
      v90[(v57 >> 6) + 8] |= 1 << v57;
      v65 = v64[6] + 32 * v57;
      *(_QWORD *)v65 = v54;
      *(double *)(v65 + 8) = v35;
      *(_QWORD *)(v65 + 16) = v55;
      *(_BYTE *)(v65 + 24) = v41;
      *(_QWORD *)(v64[7] + 8 * v57) = v52;
      v66 = v64[2];
      v67 = __OFADD__(v66, 1);
      v68 = v66 + 1;
      if (v67)
        goto LABEL_21;
      v64[2] = v68;
    }
    v25 = swift_bridgeObjectRelease(0x8000000000000000);
    v8 = v75;
    v6 = v76;
    v5 = v77;
    (*(void (**)(char *, __n128))(v76 + 8))(v75, v25);
    v11 = (char *)v51;
    sub_1004B84A4(v51, type metadata accessor for CRLBoardLibraryViewModel.Item);
    v17 = v73;
    sub_1004CB800((uint64_t)v73, &qword_1013E1C78);
    v23 = v86 + v71;
    v21 = v87 - 1;
    v12 = v74;
    v20 = v72;
    if (v87 == 1)
    {
      swift_bridgeObjectRelease(v70);
      return v88;
    }
  }
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for CRLBoardLibraryFolderViewModel.GroupSection);
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && a1[25])
    return (*(_DWORD *)a1 + 248);
  v3 = *a1;
  v4 = v3 >= 9;
  v5 = v3 - 9;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 248;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.TimeBucket()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.TimeBucket;
}

unint64_t sub_1009E9258()
{
  unint64_t result;

  result = qword_101400D60;
  if (!qword_101400D60)
  {
    result = swift_getWitnessTable(&unk_100F20C48, &type metadata for CRLBoardLibraryFolderViewModel.TimeBucket);
    atomic_store(result, (unint64_t *)&qword_101400D60);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1009E92E8 + 4 * byte_100F20A0F[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1009E931C + 4 * byte_100F20A0A[v4]))();
}

uint64_t sub_1009E931C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E9324(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009E932CLL);
  return result;
}

uint64_t sub_1009E9338(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009E9340);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1009E9344(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009E934C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType;
}

unint64_t sub_1009E936C()
{
  unint64_t result;

  result = qword_101400D68;
  if (!qword_101400D68)
  {
    result = swift_getWitnessTable(&unk_100F20CFC, &type metadata for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType);
    atomic_store(result, (unint64_t *)&qword_101400D68);
  }
  return result;
}

void sub_1009E93B0(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v3 = objc_msgSend(v1, "activityType");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;
  v7 = v6;

  v8 = sub_100874944(v5, v7);
  v9 = sub_100873F84(v8);
  if (v9 == 0xD000000000000027 && v10 == 0x8000000100FAA2A0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, 0xD000000000000027, 0x8000000100FAA2A0, 0);
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
LABEL_9:
      v22 = sub_1009E9770();
      if ((v23 & 1) != 0 || (v20 = v22, v24 = sub_1009E95A4(), (v26 & 1) != 0))
      {
        v18 = 0;
        v16 = 0;
        v15 = 0;
        v20 = 0;
        v19 = 0;
        v21 = 2;
      }
      else
      {
        v15 = v24;
        v16 = v25;
        v21 = 0;
        v19 = 0xF000000000000000;
        v18 = 1;
      }
      goto LABEL_13;
    }
  }
  v12 = sub_1009E95A4();
  if ((v14 & 1) != 0)
    goto LABEL_9;
  v15 = v12;
  v16 = v13;
  sub_1009E9770();
  if ((v17 & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"crl_boardViewState", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInteractiveCanvasController_UserActivity.swift", 113, 2, 26, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_boardViewState", 18, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInteractiveCanvasController_UserActivity.swift", 113, 2u, 26, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
  }
  v18 = 1;
  v19 = 0xF000000000000000;
  v20 = 0x3FF0000000000000;
  v21 = 1;
LABEL_13:
  *(_QWORD *)a1 = v20;
  *(_QWORD *)(a1 + 8) = v15;
  *(_QWORD *)(a1 + 16) = v16;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v18;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v19;
  *(_BYTE *)(a1 + 72) = v21;
}

uint64_t sub_1009E95A4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _WORD v14[8];
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;

  v1 = objc_msgSend(v0, "userInfo");
  if (!v1)
  {
    v16 = 0u;
    v17 = 0u;
LABEL_10:
    sub_1004D28EC((uint64_t)&v16);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  strcpy((char *)v14, "contentOffset");
  v14[7] = unk_101400D8E;
  swift_bridgeObjectRetain(aContentoffset_2[1]);
  AnyHashable.init<A>(_:)(v14, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1008432BC((uint64_t)v15), (v5 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_1004B89A4((uint64_t)v15);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v17 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast(v15, &v16, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
  {
    v6 = v15[0];
    v7 = v15[1];
    v8 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    v9 = JSONDecoder.init()();
    type metadata accessor for CGPoint(0);
    v11 = v10;
    v12 = sub_100587B48(&qword_1013E4230, (uint64_t)&protocol conformance descriptor for CGPoint);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v15, v11, v6, v7, v11, v12);
    sub_1004BBBC8(v6, v7);
    swift_release(v9);
    return v15[0];
  }
  return 0;
}

uint64_t sub_1009E9770()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  _QWORD v7[5];
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(v0, "userInfo");
  if (!v1)
  {
    v8 = 0u;
    v9 = 0u;
LABEL_12:
    sub_1004D28EC((uint64_t)&v8);
    return 0;
  }
  v2 = v1;
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v8 = xmmword_101400D70;
  swift_bridgeObjectRetain(*((_QWORD *)&xmmword_101400D70 + 1));
  AnyHashable.init<A>(_:)(&v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1008432BC((uint64_t)v7), (v5 & 1) != 0))
  {
    sub_1004CB6E8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_1004B89A4((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v9 + 1))
    goto LABEL_12;
  if (swift_dynamicCast(v7, &v8, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))
    return v7[0];
  else
    return 0;
}

uint64_t sub_1009E98A4(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __n128 v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  unint64_t v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  Class v32;
  _BYTE v34[104];
  _BYTE v35[112];
  _QWORD v36[2];

  v2 = v1;
  v4 = objc_msgSend(a1, "activityType");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = sub_100874944(v5, v7);
  v9 = sub_100873F84(v8);
  v11 = v10;
  if (v9 == 0xD000000000000033 && v10 == 0x8000000100FAA220)
  {
    swift_bridgeObjectRelease(0x8000000100FAA220);
LABEL_5:
    v14 = sub_1004B804C(&qword_1013E49B0);
    inited = swift_initStackObject(v14, v34);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    strcpy((char *)v36, "viewScale");
    WORD1(v36[1]) = unk_101400D7A;
    HIDWORD(v36[1]) = unk_101400D7C;
    swift_bridgeObjectRetain(aViewscale_7[1]);
    AnyHashable.init<A>(_:)(v36, &type metadata for String, &protocol witness table for String);
    objc_msgSend(v2, "viewScale");
    *(_QWORD *)(inited + 96) = &type metadata for CGFloat;
    *(_QWORD *)(inited + 72) = v16;
    v17 = sub_1008D5828(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "addUserInfoEntriesFromDictionary:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

    goto LABEL_6;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, 0xD000000000000033, 0x8000000100FAA220, 0);
  v13 = swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  v19 = type metadata accessor for JSONEncoder(0, v13);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = JSONEncoder.init()();
  objc_msgSend(v2, "contentOffset");
  v36[0] = v21;
  v36[1] = v22;
  type metadata accessor for CGPoint(0);
  v24 = v23;
  v25 = sub_100587B48(&qword_1013E4248, (uint64_t)&protocol conformance descriptor for CGPoint);
  v26 = dispatch thunk of JSONEncoder.encode<A>(_:)(v36, v24, v25);
  v28 = v27;
  swift_release(v20);
  v29 = sub_1004B804C(&qword_1013E49B0);
  v30 = swift_initStackObject(v29, v35);
  *(_OWORD *)(v30 + 16) = xmmword_100EF5E40;
  strcpy((char *)v36, "contentOffset");
  HIWORD(v36[1]) = unk_101400D8E;
  swift_bridgeObjectRetain(aContentoffset_2[1]);
  AnyHashable.init<A>(_:)(v36, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(v30 + 96) = &type metadata for Data;
  *(_QWORD *)(v30 + 72) = v26;
  *(_QWORD *)(v30 + 80) = v28;
  sub_1004BE310(v26, v28);
  v31 = sub_1008D5828(v30);
  v32 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "addUserInfoEntriesFromDictionary:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  return sub_1004BBBC8(v26, v28);
}

id sub_1009E9B9C(uint64_t a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  unint64_t v13;
  void *v14;
  id v15;
  objc_super v17;
  uint64_t v18;
  _QWORD v19[4];

  v3 = v2;
  v6 = (char *)objc_allocWithZone(v3);
  v7 = OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource] = 0;
  v8 = &v6[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_id];
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  v11 = v6;
  v12 = objc_msgSend(a2, "copy");
  _bridgeAnyObjectToAny(_:)(v19, v12);
  swift_unknownObjectRelease(v12);
  v13 = sub_1009EA2F8();
  swift_dynamicCast(&v18, v19, (char *)&type metadata for Any + 8, v13, 7);
  v14 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = v18;

  v17.receiver = v11;
  v17.super_class = v3;
  v15 = objc_msgSendSuper2(&v17, "init");

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v15;
}

void sub_1009E9E68(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  void (*v17)(void);
  id v18;
  void *v19;
  id v20;
  CKRecordID v21;
  uint64_t v22;
  unsigned __int8 v24;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v9)
    goto LABEL_8;
  v10 = type metadata accessor for CRLShapeItem(0);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
  {

LABEL_8:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetPathSource.swift", 95, 2, 29, "Unable to retrieve shape item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve shape item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetPathSource.swift", 95, 2u, 29, (uint64_t)"Unable to retrieve shape item.", 30, 2u);
LABEL_10:
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v21, *(Swift::String *)&v22);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v12 = OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource;
  v13 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource);
  if (!v13)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetPathSource.swift", 95, 2, 32, "Should have path source in commit.", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should have path source in commit.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetPathSource.swift", 95, 2u, 32, (uint64_t)"Should have path source in commit.", 34, 2u);
    goto LABEL_10;
  }
  v14 = (_QWORD *)v11;
  v15 = v13;
  v16 = v9;
  sub_100DBEE64((uint64_t)v14, (uint64_t)&off_10127C5E0);
  if (v4)
  {

  }
  else
  {

    v24 = a3;
    v17 = *(void (**)(void))((swift_isaMask & *v14) + 0x480);
    v18 = v15;
    v17();
    v19 = *(void **)(v5 + v12);
    *(_QWORD *)(v5 + v12) = 0;

    v20 = v16;
    sub_100DB0D78((uint64_t)v14, (uint64_t)&off_10127C5E0, v24);

  }
}

void sub_1009EA170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_id;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

id sub_1009EA1BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetPathSource(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1009EA240()
{
  return type metadata accessor for CRLCommandSetPathSource(0);
}

uint64_t type metadata accessor for CRLCommandSetPathSource(uint64_t a1)
{
  uint64_t result;

  result = qword_101400DC8;
  if (!qword_101400DC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetPathSource);
  return result;
}

uint64_t sub_1009EA284(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 200);
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1009EA2F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013EC648;
  if (!qword_1013EC648)
  {
    v1 = objc_opt_self(CRLPathSource);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013EC648);
  }
  return result;
}

id sub_1009EA334(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unint64_t v11;
  void *v12;
  id v13;
  objc_super v15;
  uint64_t v16;
  _QWORD v17[4];

  v5 = OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource] = 0;
  v6 = &v2[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_id];
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v9 = v2;
  v10 = objc_msgSend(a2, "copy");
  _bridgeAnyObjectToAny(_:)(v17, v10);
  swift_unknownObjectRelease(v10);
  v11 = sub_1009EA2F8();
  swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v11, 7);
  v12 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = v16;

  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for CRLCommandSetPathSource(0);
  v13 = objc_msgSendSuper2(&v15, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v13;
}

id sub_1009EA44C(char *a1, objc_class *a2, uint64_t a3)
{
  return sub_1009EA460(a1, a2, a3, type metadata accessor for CRLUSDZAssetDataStruct, &qword_101400F38);
}

id sub_1009EA460(char *a1, objc_class *a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(__n128);
  id v22;
  __n128 v23;
  Class isa;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(__n128);
  uint64_t v29;
  char *v30;
  __n128 v31;
  __n128 v32;
  uint64_t (*v33)(_QWORD);
  id v34;
  uint64_t *v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  Class v39;
  objc_super v40;

  v39 = a2;
  v10 = a4(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 16);
  if (!Strong)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"commandToSetItemValue(item:value:keyPath:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardCommandProvider.swift", 95, 2, 37, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandToSetItemValue(item:value:keyPath:)", 42, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardCommandProvider.swift", 95, 2u, 37, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return 0;
  }
  v18 = (void *)Strong;
  v36 = a5;
  v37 = a3;
  v38 = a4;
  v19 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v21 = *(void (**)(__n128))(*(_QWORD *)v20 + 256);
  v22 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v23 = swift_retain(v20);
  v21(v23);
  swift_release(v20);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  LOBYTE(v21) = objc_msgSend(v22, "containsObject:", isa);

  if ((v21 & 1) == 0)
  {

    return 0;
  }
  sub_1004B8460((uint64_t)v39, (uint64_t)v12, v38);
  v39 = (Class)sub_1004B804C(v36);
  v25 = objc_allocWithZone(v39);
  v26 = (_QWORD *)((char *)v25 + *(_QWORD *)((swift_isaMask & *v25) + 0xF0));
  *v26 = 0;
  v26[1] = 0xE000000000000000;
  v27 = *(_QWORD *)&a1[v19];
  v28 = *(void (**)(__n128))(*(_QWORD *)v27 + 256);
  v36 = a1;
  v29 = v37;
  swift_retain(v37);
  v30 = v25;
  v31 = swift_retain(v27);
  v28(v31);
  v32 = swift_release(v27);
  (*(void (**)(char *, char *, uint64_t, __n128))(v14 + 32))(&v30[*(_QWORD *)((swift_isaMask & *(_QWORD *)v30) + 0xD8)], v16, v13, v32);
  v33 = v38;
  sub_1004B8460((uint64_t)v12, (uint64_t)&v30[*(_QWORD *)((swift_isaMask & *(_QWORD *)v30) + 0xE0)], v38);
  *(_QWORD *)&v30[*(_QWORD *)((swift_isaMask & *(_QWORD *)v30) + 0xE8)] = v29;
  swift_retain(v29);

  v40.receiver = v30;
  v40.super_class = v39;
  v34 = objc_msgSendSuper2(&v40, "init");

  swift_release(v29);
  sub_1004B84A4((uint64_t)v12, v33);

  return v34;
}

uint64_t sub_1009EA79C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = type metadata accessor for URL(0);
  v3[8] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[9] = v5;
  v3[10] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  v3[11] = v6;
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E04D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v7);
  v3[14] = swift_task_alloc(v7);
  v3[15] = swift_task_alloc(v7);
  v3[16] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v3[17] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v3[18] = v9;
  v3[19] = v10;
  return swift_task_switch(sub_1009EA8A4, v9, v10);
}

uint64_t sub_1009EA8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _UNKNOWN ****v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  sub_1005773FC(*(_QWORD *)(v0 + 48), v2);
  sub_1005773FC(v2, v1);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  LODWORD(v2) = v5(v1, 1, v3);
  sub_1005534BC(v1);
  if ((_DWORD)v2 == 1)
  {
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 96);
    v29 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 72);
    v11 = *(_UNKNOWN *****)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v11 == &off_1014007D0)
      v12 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v12 = 0;
    swift_beginAccess(v12 + qword_101480208, v0 + 16, 32, 0);
    swift_retain(v11);
    v13 = sub_1004B804C(&qword_1013EF360);
    CRRegister.wrappedValue.getter(v13);
    swift_endAccess(v0 + 16);
    v14 = swift_release(v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16))(v7, v8 + *(int *)(v29 + 20), v9, v14);
    sub_1004B84A4(v8, type metadata accessor for CRLURLItemAtomicDataStruct);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    sub_1005534BC(v6);
    sub_10057EE1C(v7, v6);
  }
  v15 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 64);
  sub_1005773FC(*(_QWORD *)(v0 + 128), v15);
  if (v5(v15, 1, v16) == 1)
  {
    v17 = *(_QWORD *)(v0 + 104);
    swift_release(*(_QWORD *)(v0 + 136));
    sub_1005534BC(v17);
    v18 = sub_1009EC2B4();
    swift_allocError(&type metadata for CRLURLItemCommandProvider.ProviderError, v18, 0, 0);
    *v19 = 0;
    swift_willThrow(v20);
    v22 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 128);
    v24 = *(_QWORD *)(v0 + 104);
    v23 = *(_QWORD *)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 96);
    v26 = *(_QWORD *)(v0 + 80);
    sub_1005534BC(v21);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 64));
    v28 = (_QWORD *)swift_task_alloc(dword_101400E0C);
    *(_QWORD *)(v0 + 160) = v28;
    *v28 = v0;
    v28[1] = sub_1009EAB38;
    return sub_1009EACE8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 80), 1);
  }
}

uint64_t sub_1009EAB38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 160);
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009EAC3C;
  else
    v4 = sub_1009EAB98;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_1009EAB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = swift_release(*(_QWORD *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v6, v8, v9);
  sub_1005534BC(v1);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EAC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = swift_release(*(_QWORD *)(v0 + 136));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v1, v3, v4);
  v6 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 80);
  sub_1005534BC(v5);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EACE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  *(_QWORD *)(v4 + 256) = a2;
  *(_QWORD *)(v4 + 264) = v3;
  *(_BYTE *)(v4 + 432) = a3;
  *(_QWORD *)(v4 + 248) = a1;
  v7 = type metadata accessor for CancellationError(0);
  *(_QWORD *)(v4 + 272) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 280) = v8;
  *(_QWORD *)(v4 + 288) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  *(_QWORD *)(v4 + 296) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 304) = v10;
  *(_QWORD *)(v4 + 312) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for CRLURLItemAtomicDataStruct(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 320) = swift_task_alloc(v11);
  v12 = swift_task_alloc(v11);
  *(_QWORD *)(v4 + 328) = v12;
  v13 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 336) = v13;
  *(_QWORD *)(v4 + 344) = static MainActor.shared.getter(v13);
  v14 = (_QWORD *)swift_task_alloc(dword_101400E14);
  *(_QWORD *)(v4 + 352) = v14;
  *v14 = v4;
  v14[1] = sub_1009EAE04;
  return sub_1009EB570(v12, a2, a1);
}

uint64_t sub_1009EAE04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 352);
  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2[42], &protocol witness table for MainActor);
  v6 = v4;
  if (v0)
  {
    v2[46] = v4;
    v2[47] = v5;
    v7 = sub_1009EAF80;
  }
  else
  {
    v7 = sub_1009EAE8C;
  }
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1009EAE8C()
{
  uint64_t v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(__n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(objc_class **)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 344));
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v7 = *(void (**)(__n128))(*(_QWORD *)v6 + 256);
  v8 = swift_retain(v6);
  v7(v8);
  swift_release(v6);
  sub_1009EBD88(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1004B84A4((uint64_t)v1, type metadata accessor for CRLURLItemAtomicDataStruct);
  v9 = *(_QWORD *)(v0 + 320);
  v10 = *(_QWORD *)(v0 + 312);
  v11 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EAF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 360);
  *(_QWORD *)(v0 + 240) = v1;
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  swift_errorRetain(v1);
  v4 = sub_1004B804C(&qword_1013E0210);
  if (swift_dynamicCast(v2, v0 + 240, v4, v3, 0))
  {
    v5 = *(_QWORD *)(v0 + 360);
    swift_release(*(_QWORD *)(v0 + 344));
    swift_errorRelease(v5);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    v7 = *(_QWORD *)(v0 + 280);
    v6 = *(_QWORD *)(v0 + 288);
    v8 = *(_QWORD *)(v0 + 272);
    swift_beginAccess(&static OS_os_log.crlDefault, v0 + 176, 0, 0);
    v9 = (id)static OS_os_log.crlDefault;
    v11 = static os_log_type_t.info.getter(v10);
    sub_100A06EBC((uint64_t)v9, &_mh_execute_header, v11, "Task cancelled. Not an error.", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_errorRelease(*(_QWORD *)(v0 + 240));
    v12 = *(_QWORD *)(v0 + 320);
    v13 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 328));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 240));
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    v16 = *(_QWORD *)(v0 + 360);
    v34 = *(_QWORD *)(v0 + 336);
    swift_beginAccess(&static OS_os_log.crlDefault, v0 + 128, 0, 0);
    v17 = (void *)static OS_os_log.crlDefault;
    v18 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v18, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    swift_getErrorValue(v16, v0 + 224, v0 + 152);
    v20 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 168);
    v22 = v17;
    v23 = Error.publicDescription.getter(v20, v21);
    v25 = v24;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v26 = sub_1004CFC2C();
    *(_QWORD *)(inited + 64) = v26;
    *(_QWORD *)(inited + 32) = v23;
    *(_QWORD *)(inited + 40) = v25;
    swift_getErrorValue(v16, v0 + 232, v0 + 200);
    v27 = Error.fullDescription.getter(*(_QWORD *)(v0 + 208));
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v26;
    *(_QWORD *)(inited + 72) = v27;
    *(_QWORD *)(inited + 80) = v28;
    v29 = static os_log_type_t.error.getter(v27);
    sub_100A06EBC((uint64_t)v22, &_mh_execute_header, v29, "Error loading URL metadata: %{public}@ <%@>", 43, 2, inited);
    swift_setDeallocating(inited);
    v30 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v30);

    *(_QWORD *)(v0 + 384) = static MainActor.shared.getter(v31);
    v32 = dispatch thunk of Actor.unownedExecutor.getter(v34, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 392) = v32;
    *(_QWORD *)(v0 + 400) = v33;
    return swift_task_switch(sub_1009EB2AC, v32, v33);
  }
}

uint64_t sub_1009EB2AC()
{
  uint64_t *v0;
  id v1;
  uint64_t **v2;

  v1 = sub_100B5E264();
  v0[51] = (uint64_t)v1;
  v2 = (uint64_t **)swift_task_alloc(dword_101400E1C);
  v0[52] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = (uint64_t *)sub_1009EB310;
  return sub_1009EB938(v0[40], (uint64_t)v1, v0[31]);
}

uint64_t sub_1009EB310()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 416);
  *(_QWORD *)(*v1 + 424) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009EB4C0;
  else
    v4 = sub_1009EB370;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 392), *(_QWORD *)(v2 + 400));
}

uint64_t sub_1009EB370()
{
  _QWORD *v0;
  void *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__n128);
  __n128 v9;

  v1 = (void *)v0[51];
  v3 = v0[39];
  v2 = (objc_class *)v0[40];
  v4 = v0[37];
  v5 = v0[38];
  v6 = v0[31];
  swift_release(v0[48]);
  v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v8 = *(void (**)(__n128))(*(_QWORD *)v7 + 256);
  v9 = swift_retain(v7);
  v8(v9);
  swift_release(v7);
  sub_1009EBD88(v2);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1004B84A4((uint64_t)v2, type metadata accessor for CRLURLItemAtomicDataStruct);
  return swift_task_switch(sub_1009EB44C, v0[46], v0[47]);
}

uint64_t sub_1009EB44C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_release(*(_QWORD *)(v0 + 344));
  swift_willThrow(v1);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EB4C0()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[51];
  swift_release(v0[48]);

  return swift_task_switch(sub_1009EB500, v0[46], v0[47]);
}

uint64_t sub_1009EB500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 344));
  swift_errorRelease(v1);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EB570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for URL(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v4[10] = v8;
  v4[11] = v9;
  return swift_task_switch(sub_1009EB608, v8, v9);
}

uint64_t sub_1009EB608()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[8];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[7] + 16))(v1, v0[3], v0[6]);
  v2 = objc_allocWithZone((Class)type metadata accessor for CRLRemoteURLMetadataProvider(0));
  v3 = sub_100BF75F8(v1);
  v0[12] = v3;
  v4 = dword_101409754;
  v3;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_1009EB6D0;
  return sub_100BF6574();
}

uint64_t sub_1009EB6D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 104);
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = *(_QWORD *)(v3 + 80);
    v6 = *(_QWORD *)(v3 + 88);
    v7 = sub_1009EB8A4;
  }
  else
  {

    v5 = *(_QWORD *)(v3 + 80);
    v6 = *(_QWORD *)(v3 + 88);
    v7 = sub_1009EB744;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1009EB744(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v6;

  v2 = *(_QWORD *)(v1 + 120);
  static Task<>.checkCancellation()(a1);
  if (v2)
  {
    v3 = *(void **)(v1 + 112);
    v4 = *(_QWORD *)(v1 + 72);

    swift_release(v4);
    swift_task_dealloc(*(_QWORD *)(v1 + 64));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc(dword_101400E1C);
    *(_QWORD *)(v1 + 128) = v6;
    *v6 = v1;
    v6[1] = sub_1009EB7EC;
    return sub_1009EB938(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 32));
  }
}

uint64_t sub_1009EB7EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009EB8EC;
  else
    v4 = sub_1009EB84C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1009EB84C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);

  swift_release(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EB8A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 72));

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EB8EC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 72));

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EB938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = type metadata accessor for CRLAssetData(0);
  v3[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_1013E04D0);
  v3[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v3[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[11] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v8);
  v3[13] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v3[14] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v3[15] = v10;
  v3[16] = v11;
  return swift_task_switch(sub_1009EBA24, v10, v11);
}

uint64_t sub_1009EBA24()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = objc_msgSend(*(id *)(v0 + 48), "URL");
  if (v1)
  {
    v2 = v1;
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v1);

    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    *(_QWORD *)(v0 + 136) = v7;
    v7(v6, v3, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) != 1)
    {
      v8 = *(_QWORD *)(v0 + 56);
      v7(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
      v9 = type metadata accessor for CRLBoardItemImporterHelper();
      inited = swift_initStackObject(v9, v0 + 16);
      *(_QWORD *)(v0 + 144) = inited;
      *(_QWORD *)(inited + 16) = v8;
      v11 = dword_1014077FC;
      swift_unknownObjectRetain(v8);
      v12 = (_QWORD *)swift_task_alloc(v11);
      *(_QWORD *)(v0 + 152) = v12;
      *v12 = v0;
      v12[1] = sub_1009EBBE4;
      return sub_100BC270C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 72), 1, 1, *(_QWORD *)(v0 + 80));
  }
  v14 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 112));
  sub_1005534BC(v14);
  v15 = sub_1009EC2B4();
  swift_allocError(&type metadata for CRLURLItemCommandProvider.ProviderError, v15, 0, 0);
  *v16 = 0;
  swift_willThrow(v17);
  v18 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EBBE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1009EBD08;
  else
    v4 = sub_1009EBC44;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_1009EBC44()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 144));
  swift_release(v3);
  sub_10078DF08(v7, v8);
  v9 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  v1(v8 + *(int *)(v9 + 20), v2, v5);
  *(_QWORD *)(v8 + *(int *)(v9 + 24)) = _swiftEmptyDictionarySingleton;
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EBD08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 112));
  v5 = swift_release(v1);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v2, v3, v5);
  v6 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009EBD88(objc_class *a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  Class isa;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v4 = (void *)Strong;
    v16 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);

    v5 = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = (char *)*(id *)(v5 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);

      v8 = *(id *)&v7[OBJC_IVAR____TtC8Freeform20CRLCommandController_board];
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v10 = (char *)objc_msgSend(v8, "getBoardItemForUUID:", isa);

      if (v10)
      {
        v11 = type metadata accessor for CRLURLItem(0);
        v12 = (char *)swift_dynamicCastClass(v10, v11);
        if (v12)
        {
          v13 = sub_1009EBF08(a1, v12);
          if (v13)
          {
            v14 = v13;
            sub_1006A5F54(v13, 0, 0, 4, 0);

            v15 = v10;
            v16 = v14;
          }
          else
          {
            v15 = v16;
            v16 = v10;
          }
        }
        else
        {
          v15 = v10;
        }

      }
    }

  }
}

char *sub_1009EBF08(objc_class *a1, char *a2)
{
  uint64_t KeyPath;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  NSString v17;
  NSString v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25[3];

  KeyPath = swift_getKeyPath(&unk_100F20D90);
  v5 = sub_1009EA460(a2, a1, KeyPath, type metadata accessor for CRLURLItemAtomicDataStruct, &qword_101400F28);
  swift_release(KeyPath);
  if (!v5)
    return 0;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v7 + 32) = v5;
  v25[0] = v7;
  specialized Array._endMutation()(v7);
  v8 = v25[0];
  v9 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
  v10 = v5;
  v11 = (char *)objc_msgSend(v9, "init");
  v12 = &v11[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
  swift_beginAccess(&v11[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands], v25, 1, 0);
  v13 = *(_QWORD *)v12;
  *(_QWORD *)v12 = v8;
  swift_bridgeObjectRelease(v13);
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = v11;
  v16 = objc_msgSend(v14, "mainBundle");
  v17 = String._bridgeToObjectiveC()();
  v18 = String._bridgeToObjectiveC()();
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v16, "localizedStringForKey:value:table:", v17, v18, v19);

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *(_QWORD *)v15) + 0x110))(v21, v23);
  return v11;
}

double sub_1009EC168(_QWORD *a1)
{
  _UNKNOWN ****v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v1 = *(_UNKNOWN *****)(*a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v1 == &off_1014007D0)
    v2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v2 = 0;
  swift_beginAccess(v2 + qword_101480208, v5, 32, 0);
  swift_retain(v1);
  v3 = sub_1004B804C(&qword_1013EF360);
  CRRegister.wrappedValue.getter(v3);
  swift_endAccess(v5);
  *(_QWORD *)&result = swift_release(v1).n128_u64[0];
  return result;
}

uint64_t sub_1009EC20C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004B8460(a1, (uint64_t)v4, v5);
  return sub_100837A98((uint64_t)v4);
}

uint64_t type metadata accessor for CRLURLItemCommandProvider()
{
  return objc_opt_self(_TtC8Freeform25CRLURLItemCommandProvider);
}

unint64_t sub_1009EC2B4()
{
  unint64_t result;

  result = qword_101400F30;
  if (!qword_101400F30)
  {
    result = swift_getWitnessTable(&unk_100F20E30, &type metadata for CRLURLItemCommandProvider.ProviderError);
    atomic_store(result, (unint64_t *)&qword_101400F30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLURLItemCommandProvider.ProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009EC344 + 4 * byte_100F20D65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009EC378 + 4 * byte_100F20D60[v4]))();
}

uint64_t sub_1009EC378(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EC380(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009EC388);
  return result;
}

uint64_t sub_1009EC394(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009EC39CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1009EC3A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EC3A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLURLItemCommandProvider.ProviderError()
{
  return &type metadata for CRLURLItemCommandProvider.ProviderError;
}

unint64_t sub_1009EC3C8()
{
  unint64_t result;

  result = qword_101400F40;
  if (!qword_101400F40)
  {
    result = swift_getWitnessTable(&unk_100F20E08, &type metadata for CRLURLItemCommandProvider.ProviderError);
    atomic_store(result, (unint64_t *)&qword_101400F40);
  }
  return result;
}

void sub_1009EC40C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLCalculateResultAttributionHandler();
  inited = swift_initStaticObject(v3, &unk_1013DDFC8);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  v6 = type metadata accessor for MainActor(0);
  v7 = static MainActor.shared.getter(v6);
  v8 = swift_allocObject(&unk_10128FC00, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = &protocol witness table for MainActor;
  v9 = sub_100521BD4((uint64_t)v2, (uint64_t)&unk_101400FF8, v8);
  swift_release(v9);
  qword_101480288 = inited;
}

uint64_t sub_1009EC4F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[4] = v3;
  v1[5] = v4;
  return swift_task_switch(sub_1009EC560, v3, v4);
}

uint64_t sub_1009EC560()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  type metadata accessor for StocksKitCurrencyCache(0);
  *(_QWORD *)(v0 + 48) = static StocksKitCurrencyCache.shared.getter();
  v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of StocksKitCurrencyCache.refresh()
                         + async function pointer to dispatch thunk of StocksKitCurrencyCache.refresh());
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of StocksKitCurrencyCache.refresh()
                                  + 1));
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1009EC5D0;
  return v3();
}

uint64_t sub_1009EC5D0(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v4 = *(void **)(*v1 + 48);
  v3 = *(_QWORD *)(*v1 + 56);
  *(_BYTE *)(*v1 + 64) = a1;
  swift_task_dealloc(v3);

  return swift_task_switch(sub_1009EC62C, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1009EC62C()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;
  __n128 v3;

  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(_BYTE **)(v0 + 16);
  v3 = swift_release(*(_QWORD *)(v0 + 24));
  *v2 = v1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_1009EC664()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for CRLCalculateResultAttributionHandler()
{
  return objc_opt_self(_TtC8Freeform36CRLCalculateResultAttributionHandler);
}

uint64_t sub_1009EC6B0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009EC6D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_101400FF4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_1009EC4F4(a1);
}

uint64_t sub_1009EC738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

uint64_t sub_1009EC7B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[2] = v0;
  v2 = sub_1004B804C(&qword_101401008);
  v1[3] = v2;
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ColorScheme(0);
  v1[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[6] = v4;
  v1[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101401010);
  v1[8] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v6);
  v1[10] = swift_task_alloc(v6);
  v7 = sub_1004B804C(&qword_1013F07E0);
  v1[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v1[12] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v1[13] = v9;
  v1[14] = v10;
  return swift_task_switch(sub_1009EC8CC, v9, v10);
}

uint64_t sub_1009EC8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v1 = *(_QWORD *)(v0 + 80);
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v1);
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  else
  {
    type metadata accessor for StocksKitCurrencyCache(0);
    *(_QWORD *)(v0 + 120) = static StocksKitCurrencyCache.shared.getter();
    v7 = (_QWORD *)swift_task_alloc(async function pointer to StocksKitCurrencyCache.provider.getter[1]);
    *(_QWORD *)(v0 + 128) = v7;
    *v7 = v0;
    v7[1] = sub_1009EC9B4;
    return StocksKitCurrencyCache.provider.getter(*(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_1009EC9B4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 120);
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));

  return swift_task_switch(sub_1009ECA04, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_1009ECA04()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t KeyPath;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = swift_release(*(_QWORD *)(v0 + 96));
  v3 = type metadata accessor for StocksKitCurrencyCache.Provider(0, v2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 88);
  if (v5 == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 88), &qword_1013F07E0);
  }
  else
  {
    v7 = StocksKitCurrencyCache.Provider.logo.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
    if (v7)
    {
      v8 = *(uint64_t **)(v0 + 80);
      v9 = *(_QWORD *)(v0 + 56);
      v10 = *(_QWORD *)(v0 + 64);
      v11 = *(_QWORD *)(v0 + 40);
      v12 = *(_QWORD *)(v0 + 48);
      v13 = *(_QWORD *)(v0 + 24);
      v14 = *(uint64_t **)(v0 + 32);
      v31 = *(_QWORD *)(v0 + 72);
      v32 = *(_QWORD *)(v0 + 16);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v9, enum case for ColorScheme.light(_:), v11);
      KeyPath = swift_getKeyPath(&unk_100F20EA8);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v14 + *(int *)(v13 + 28), v9, v11);
      *v14 = KeyPath;
      sub_1004CB7BC((uint64_t)v14, (uint64_t)v8 + *(int *)(v10 + 36), &qword_101401008);
      *v8 = v7;
      swift_retain(v7);
      sub_1004CB800((uint64_t)v14, &qword_101401008);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
      sub_1004CB7BC((uint64_t)v8, v31, &qword_101401010);
      v16 = sub_1004B804C(&qword_101401018);
      swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
      v18 = ImageRenderer.init(content:)(v31, v17);
      v19 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v19, "scale");
      v21 = v20;

      v22 = ImageRenderer.scale.setter(v21);
      v23 = ImageRenderer.uiImage.getter(v22);
      swift_release(v18);
      swift_release(v7);
      sub_1004CB800((uint64_t)v8, &qword_101401010);
      v24 = *(void **)(v32 + 16);
      *(_QWORD *)(v32 + 16) = v23;

    }
  }
  v25 = *(_QWORD *)(v0 + 80);
  v26 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 56);
  v28 = *(_QWORD *)(v0 + 32);
  v29 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v29);
}

uint64_t sub_1009ECC5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[2] = v0;
  v2 = sub_1004B804C(&qword_101401008);
  v1[3] = v2;
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ColorScheme(0);
  v1[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[6] = v4;
  v1[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101401010);
  v1[8] = v5;
  v6 = (*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[9] = swift_task_alloc(v6);
  v1[10] = swift_task_alloc(v6);
  v7 = sub_1004B804C(&qword_1013F07E0);
  v1[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v1[12] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v1[13] = v9;
  v1[14] = v10;
  return swift_task_switch(sub_1009ECD74, v9, v10);
}

uint64_t sub_1009ECD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 24))
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v1 = *(_QWORD *)(v0 + 80);
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24);
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    swift_task_dealloc(v1);
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
  }
  else
  {
    type metadata accessor for StocksKitCurrencyCache(0);
    *(_QWORD *)(v0 + 120) = static StocksKitCurrencyCache.shared.getter();
    v7 = (_QWORD *)swift_task_alloc(async function pointer to StocksKitCurrencyCache.provider.getter[1]);
    *(_QWORD *)(v0 + 128) = v7;
    *v7 = v0;
    v7[1] = sub_1009ECE5C;
    return StocksKitCurrencyCache.provider.getter(*(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_1009ECE5C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 120);
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));

  return swift_task_switch(sub_1009ECEAC, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

uint64_t sub_1009ECEAC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t KeyPath;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = swift_release(*(_QWORD *)(v0 + 96));
  v3 = type metadata accessor for StocksKitCurrencyCache.Provider(0, v2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 88);
  if (v5 == 1)
  {
    sub_1004CB800(*(_QWORD *)(v0 + 88), &qword_1013F07E0);
  }
  else
  {
    v7 = StocksKitCurrencyCache.Provider.logo.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
    if (v7)
    {
      v8 = *(uint64_t **)(v0 + 80);
      v9 = *(_QWORD *)(v0 + 56);
      v10 = *(_QWORD *)(v0 + 64);
      v11 = *(_QWORD *)(v0 + 40);
      v12 = *(_QWORD *)(v0 + 48);
      v13 = *(_QWORD *)(v0 + 24);
      v14 = *(uint64_t **)(v0 + 32);
      v31 = *(_QWORD *)(v0 + 72);
      v32 = *(_QWORD *)(v0 + 16);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v9, enum case for ColorScheme.dark(_:), v11);
      KeyPath = swift_getKeyPath(&unk_100F20EA8);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v14 + *(int *)(v13 + 28), v9, v11);
      *v14 = KeyPath;
      sub_1004CB7BC((uint64_t)v14, (uint64_t)v8 + *(int *)(v10 + 36), &qword_101401008);
      *v8 = v7;
      swift_retain(v7);
      sub_1004CB800((uint64_t)v14, &qword_101401008);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
      sub_1004CB7BC((uint64_t)v8, v31, &qword_101401010);
      v16 = sub_1004B804C(&qword_101401018);
      swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
      v18 = ImageRenderer.init(content:)(v31, v17);
      v19 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v19, "scale");
      v21 = v20;

      v22 = ImageRenderer.scale.setter(v21);
      v23 = ImageRenderer.uiImage.getter(v22);
      swift_release(v18);
      swift_release(v7);
      sub_1004CB800((uint64_t)v8, &qword_101401010);
      v24 = *(void **)(v32 + 24);
      *(_QWORD *)(v32 + 24) = v23;

    }
  }
  v25 = *(_QWORD *)(v0 + 80);
  v26 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 56);
  v28 = *(_QWORD *)(v0 + 32);
  v29 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v29);
}

uint64_t sub_1009ED104()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t type metadata accessor for CRLMemoryReadChannel()
{
  return objc_opt_self(_TtC8Freeform20CRLMemoryReadChannel);
}

void sub_1009ED3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = type metadata accessor for DispatchData(0);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

void sub_1009ED444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  Class isa;

  if (BYTE6(a4) <= v5 || v6 <= 0)
  {
    v12 = static DispatchData.empty.getter(a1);
    v13 = (void *)DispatchData._bridgeToObjectiveC()(v12);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v7);
    (*(void (**)(uint64_t, uint64_t, void *, _QWORD))(v4 + 16))(v4, 1, v13, 0);

    return;
  }
  v14 = BYTE6(a4) - v5;
  if (__OFSUB__(BYTE6(a4), v5))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v14 >= v6)
    v14 = v6;
  v15 = v5 + v14;
  if (__OFADD__(v5, v14))
    goto LABEL_14;
  if (v15 < v5)
  {
LABEL_15:
    __break(1u);
    JUMPOUT(0x1009ED58CLL);
  }
  v16 = Data.subdata(in:)(v5, v15, a3, a4);
  v18 = v17;
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_1004BBBC8(v16, v18);
  *(_QWORD *)(v10 - 72) = -[objc_class crl_dispatchData](isa, "crl_dispatchData");

  (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD))(v4 + 16))(v4, 1, *(_QWORD *)(v10 - 72), 0);
}

uint64_t sub_1009ED5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD v22[2];

  v0 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v0);
  v22[0] = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TypeDisplayRepresentation(0, v14);
  sub_100501DE0(v17, qword_101480290);
  sub_1004F2A1C(v17, (uint64_t)qword_101480290);
  v18 = String.LocalizationValue.init(stringLiteral:)(0x6E6F432074786554, 0xEE0072656E696174);
  static Locale.current.getter(v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Entity type name", 16, 2);
  v19 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v20 = v22[0];
  v19(v22[0], 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v16, v20);
}

unint64_t sub_1009ED7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t result;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v0 = sub_1004B804C(&qword_1013E9A70);
  __chkstk_darwin(v0);
  v40 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v2);
  v39 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C(&qword_1014010D0);
  v17 = sub_1004B804C(&qword_1013F92B8);
  v18 = *(_QWORD *)(v17 - 8);
  v36 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v36, v19 | 7);
  v38 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_100EF5A10;
  v22 = v21 + v20;
  v34 = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x786F422074786554, 0xE800000000000000);
  static Locale.current.getter(v23);
  v35 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v37 = *(_QWORD *)(v37 + 104);
  v24 = v5;
  ((void (*)(char *))v37)(v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v5, "Text box text container display representation", 46, 2);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v25 = v39;
  v32(v39, 1, 1, v12);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28 = v40;
  v27(v40, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  *(_BYTE *)(v22 + v36) = 1;
  v29 = String.LocalizationValue.init(stringLiteral:)(0x4E20796B63697453, 0xEB0000000065746FLL);
  static Locale.current.getter(v29);
  ((void (*)(char *, _QWORD, uint64_t))v37)(v24, v35, v41);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0x6E497070414C5243, 0xED000073746E6574, v8, v24, "Sticky Note text container display representation", 49, 2);
  v32(v25, 1, 1, v33);
  v27(v28, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  result = sub_1008D7E74(v38);
  qword_1014802A8 = result;
  return result;
}

uint64_t sub_1009EDBC4(char *a1, char *a2)
{
  return sub_10083BEF4(*a1, *a2);
}

unint64_t sub_1009EDBD4()
{
  unint64_t result;

  result = qword_101401060;
  if (!qword_101401060)
  {
    result = swift_getWitnessTable(&unk_100F20F0C, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401060);
  }
  return result;
}

Swift::Int sub_1009EDC18()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x6F4E796B63697473;
  else
    v2 = 0x786F6274786574;
  if (v1)
    v3 = 0xEA00000000006574;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1009EDC9C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6F4E796B63697473;
  else
    v2 = 0x786F6274786574;
  if (*v1)
    v3 = 0xEA00000000006574;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1009EDCFC(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x6F4E796B63697473;
  else
    v3 = 0x786F6274786574;
  if (v2)
    v4 = 0xEA00000000006574;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1009EDD7C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012656F8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1009EDDD8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x786F6274786574;
  if (*v1)
    v2 = 0x6F4E796B63697473;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xEA00000000006574;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1009EDE20()
{
  unint64_t result;

  result = qword_101401068;
  if (!qword_101401068)
  {
    result = swift_getWitnessTable(&unk_100F20FEC, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401068);
  }
  return result;
}

unint64_t sub_1009EDE68()
{
  unint64_t result;

  result = qword_101401070;
  if (!qword_101401070)
  {
    result = swift_getWitnessTable(&unk_100F21024, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401070);
  }
  return result;
}

unint64_t sub_1009EDEB0()
{
  unint64_t result;

  result = qword_101401078;
  if (!qword_101401078)
  {
    result = swift_getWitnessTable(&unk_100F20F74, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401078);
  }
  return result;
}

unint64_t sub_1009EDEF8()
{
  unint64_t result;

  result = qword_101401080;
  if (!qword_101401080)
  {
    result = swift_getWitnessTable(&unk_100F21054, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401080);
  }
  return result;
}

unint64_t sub_1009EDF40()
{
  unint64_t result;

  result = qword_101401088;
  if (!qword_101401088)
  {
    result = swift_getWitnessTable(&unk_100F2107C, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401088);
  }
  return result;
}

unint64_t sub_1009EDF88()
{
  unint64_t result;

  result = qword_101401090;
  if (!qword_101401090)
  {
    result = swift_getWitnessTable(&unk_100F210A4, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401090);
  }
  return result;
}

unint64_t sub_1009EDFD0()
{
  unint64_t result;

  result = qword_101401098;
  if (!qword_101401098)
  {
    result = swift_getWitnessTable(&unk_100F210FC, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_101401098);
  }
  return result;
}

uint64_t sub_1009EE014@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_1013DD6A0 != -1)
    swift_once(&qword_1013DD6A0, sub_1009ED5A4);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_1004F2A1C(v3, (uint64_t)qword_101480290);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1009EE084(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1009EE0C4();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1009EE0C4()
{
  unint64_t result;

  result = qword_1014010A0;
  if (!qword_1014010A0)
  {
    result = swift_getWitnessTable(&unk_100F20FAC, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_1014010A0);
  }
  return result;
}

uint64_t sub_1009EE108(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009EE0C4();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1009EE144()
{
  unint64_t result;

  result = qword_1014010A8;
  if (!qword_1014010A8)
  {
    result = swift_getWitnessTable(&unk_100F2113C, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_1014010A8);
  }
  return result;
}

unint64_t sub_1009EE18C()
{
  unint64_t result;

  result = qword_1014010B0;
  if (!qword_1014010B0)
  {
    result = swift_getWitnessTable(&unk_100F21164, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_1014010B0);
  }
  return result;
}

unint64_t sub_1009EE1D4()
{
  unint64_t result;

  result = qword_1014010B8;
  if (!qword_1014010B8)
  {
    result = swift_getWitnessTable(&unk_100F20F34, &type metadata for CRLSupportedTextContainerEntity);
    atomic_store(result, (unint64_t *)&qword_1014010B8);
  }
  return result;
}

double sub_1009EE218()
{
  double result;

  if (qword_1013DD6A8 != -1)
    swift_once(&qword_1013DD6A8, sub_1009ED7E0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_1014802A8).n128_u64[0];
  return result;
}

uint64_t sub_1009EE258(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1009EDFD0();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1009EE294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014010C0;
  if (!qword_1014010C0)
  {
    v1 = sub_1004CB6A4(&qword_1014010C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1014010C0);
  }
  return result;
}

void sub_1009EE2E0(_QWORD *a1@<X8>)
{
  *a1 = &off_101264440;
}

uint64_t storeEnumTagSinglePayload for CRLSupportedTextContainerEntity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009EE33C + 4 * byte_100F20F05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009EE370 + 4 * asc_100F20F00[v4]))();
}

uint64_t sub_1009EE370(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EE378(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009EE380);
  return result;
}

uint64_t sub_1009EE38C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009EE394);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1009EE398(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EE3A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLSupportedTextContainerEntity()
{
  return &type metadata for CRLSupportedTextContainerEntity;
}

uint64_t sub_1009EE3BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1009EE3E8 + 4 * aF_7[a1]))("AdoptTipsNext", 13);
}

const char *sub_1009EE3E8()
{
  return "AppIntents";
}

const char *sub_1009EE510()
{
  return "Stencils";
}

const char *sub_1009EE538()
{
  return "ToolPickerItemAPI";
}

const char *sub_1009EE54C()
{
  return "VerticalTextBoxAlignment";
}

const char *sub_1009EE560()
{
  return "AllowMinRequiredVersionForGoodEnoughFidelityToSaveToCloudKit";
}

const char *sub_1009EE588()
{
  return "Freeform";
}

uint64_t sub_1009EE59C()
{
  unsigned __int8 *v0;

  return sub_1009EE3BC(*v0);
}

const char *sub_1009EE5B8()
{
  return "UIKit";
}

const char *sub_1009EE5CC()
{
  return "redesigned_text_cursor";
}

const char *sub_1009EE5E0()
{
  return "GenerativePlayground";
}

const char *sub_1009EE5F4()
{
  return "App";
}

const char *sub_1009EE608()
{
  return "AppleAccount";
}

const char *sub_1009EE61C()
{
  return "AABranding";
}

const char *sub_1009EE630()
{
  return "PencilAndPaper";
}

const char *sub_1009EE644()
{
  _BYTE *v0;

  if (*v0)
    return "DrawingDataDetectors";
  else
    return "MathPaper";
}

uint64_t sub_1009EE710(uint64_t a1, uint64_t a2, char a3, char a4)
{
  char v6;
  char v7;
  _QWORD v9[3];
  ValueMetadata *v10;
  unint64_t v11;

  v10 = &type metadata for CRLPencilAndPaperFeatureFlags;
  v11 = sub_10054E910();
  LOBYTE(v9[0]) = a3;
  v6 = isFeatureEnabled(_:)(v9);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
  if ((v6 & 1) != 0)
  {
    v10 = &type metadata for CRLFeatureFlags;
    v11 = sub_1004DB6DC();
    LOBYTE(v9[0]) = a4;
    v7 = isFeatureEnabled(_:)(v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1009EE7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  char v4;
  _QWORD v6[5];

  v6[3] = a3;
  v6[4] = a4();
  v4 = isFeatureEnabled(_:)(v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
  return v4 & 1;
}

uint64_t sub_1009EE840(uint64_t a1, uint64_t a2, char a3)
{
  char v4;
  _QWORD v6[5];

  v6[3] = &type metadata for CRLFeatureFlags;
  v6[4] = sub_1004DB6DC();
  LOBYTE(v6[0]) = a3;
  v4 = isFeatureEnabled(_:)(v6);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
  return v4 & 1;
}

id sub_1009EE8D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFeatureFlagGroup();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLFeatureFlagGroup()
{
  return objc_opt_self(_TtC8Freeform19CRLFeatureFlagGroup);
}

id sub_1009EE920()
{
  char v0;
  char v1;
  uint64_t v2;
  _QWORD v4[3];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
  v6 = sub_10054F350();
  v0 = isFeatureEnabled(_:)(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
  if ((v0 & 1) != 0
    && (v5 = &type metadata for CRLFeatureFlags,
        v6 = sub_1004DB6DC(),
        LOBYTE(v4[0]) = 12,
        v1 = isFeatureEnabled(_:)(v4),
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4),
        (v1 & 1) != 0))
  {
    return objc_msgSend((id)type metadata accessor for ImagePlaygroundViewController(0, v2), "available");
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1009EE9BC()
{
  char v0;
  uint64_t result;
  char v2;
  unsigned __int8 *v3;
  _QWORD v4[3];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for CRLPencilAndPaperFeatureFlags;
  v6 = sub_10054E910();
  LOBYTE(v4[0]) = 0;
  v0 = isFeatureEnabled(_:)(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
  result = 0;
  if ((v0 & 1) != 0)
  {
    v5 = &type metadata for CRLFeatureFlags;
    v6 = sub_1004DB6DC();
    LOBYTE(v4[0]) = 14;
    v2 = isFeatureEnabled(_:)(v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
    if ((v2 & 1) != 0)
    {
      if (qword_1013DD618 != -1)
        swift_once(&qword_1013DD618, sub_1009A4410);
      v3 = (unsigned __int8 *)(qword_1013FF120
                             + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess(qword_1013FF120 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, v4, 0, 0);
      return *v3;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUIKitFeatureFlags()
{
  return &type metadata for CRLUIKitFeatureFlags;
}

ValueMetadata *type metadata accessor for CRLGenerativePlaygroundFeatureFlags()
{
  return &type metadata for CRLGenerativePlaygroundFeatureFlags;
}

uint64_t _s8Freeform20CRLUIKitFeatureFlagsOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1009EEB08 + 4 * byte_100F211D9[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1009EEB28 + 4 * byte_100F211DE[v4]))();
}

_BYTE *sub_1009EEB08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1009EEB28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1009EEB30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1009EEB38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1009EEB40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1009EEB48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLAppleAccountFeatureFlags()
{
  return &type metadata for CRLAppleAccountFeatureFlags;
}

uint64_t storeEnumTagSinglePayload for CRLPencilAndPaperFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1009EEBB0 + 4 * byte_100F211E8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1009EEBE4 + 4 * byte_100F211E3[v4]))();
}

uint64_t sub_1009EEBE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EEBEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009EEBF4);
  return result;
}

uint64_t sub_1009EEC00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009EEC08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1009EEC0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EEC14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLPencilAndPaperFeatureFlags()
{
  return &type metadata for CRLPencilAndPaperFeatureFlags;
}

uint64_t getEnumTagSinglePayload for CRLFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_1009EED0C + 4 * byte_100F211F2[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_1009EED40 + 4 * byte_100F211ED[v4]))();
}

uint64_t sub_1009EED40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EED48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009EED50);
  return result;
}

uint64_t sub_1009EED5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009EED64);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_1009EED68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009EED70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFeatureFlags()
{
  return &type metadata for CRLFeatureFlags;
}

unint64_t sub_1009EED90()
{
  unint64_t result;

  result = qword_101401100;
  if (!qword_101401100)
  {
    result = swift_getWitnessTable(&unk_100F21300, &type metadata for CRLFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_101401100);
  }
  return result;
}

unint64_t sub_1009EEDD8()
{
  unint64_t result;

  result = qword_101401108;
  if (!qword_101401108)
  {
    result = swift_getWitnessTable(&unk_100F21368, &type metadata for CRLPencilAndPaperFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_101401108);
  }
  return result;
}

unint64_t sub_1009EEE20()
{
  unint64_t result;

  result = qword_101401110;
  if (!qword_101401110)
  {
    result = swift_getWitnessTable(&unk_100F213D0, &type metadata for CRLAppleAccountFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_101401110);
  }
  return result;
}

unint64_t sub_1009EEE68()
{
  unint64_t result;

  result = qword_101401118;
  if (!qword_101401118)
  {
    result = swift_getWitnessTable(&unk_100F21438, &type metadata for CRLGenerativePlaygroundFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_101401118);
  }
  return result;
}

unint64_t sub_1009EEEB0()
{
  unint64_t result;

  result = qword_101401120;
  if (!qword_101401120)
  {
    result = swift_getWitnessTable(&unk_100F214A0, &type metadata for CRLUIKitFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_101401120);
  }
  return result;
}

uint64_t sub_1009EEEF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1[10] = v0;
  v2 = sub_1004B804C(&qword_101401210);
  v3 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[11] = v3;
  v4 = (_QWORD *)swift_task_alloc(dword_101401224);
  v1[12] = v4;
  *v4 = v1;
  v4[1] = sub_1009EEF70;
  return sub_1009F000C(v3, 0);
}

uint64_t sub_1009EEF70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009EF31C;
  }
  else
  {
    sub_1004CB800(*(_QWORD *)(v2 + 88), &qword_101401210);
    v4 = sub_1009EEFE4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009EEFE4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10140122C);
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_1009EF02C;
  return sub_1009F0428();
}

uint64_t sub_1009EF02C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 112);
  v3 = *v1;
  *(_QWORD *)(v3 + 120) = v0;
  swift_task_dealloc(v2);
  if (!v0)
    return swift_task_switch(sub_1009EF0A0, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 88));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1009EF0A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  unint64_t v21;
  _BYTE *v22;
  __n128 v23;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD **)(v0 + 80);
  v3 = v2[5];
  v4 = v2[6];
  sub_1004BB5A4(v2 + 2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *(_QWORD *)(v0 + 128) = v5;
  if (v1)
    goto LABEL_2;
  v7 = v5;
  if (!v5)
  {
    v21 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v21, 0, 0);
    *v22 = 4;
    swift_willThrow(v23);
LABEL_2:
    swift_task_dealloc(*(_QWORD *)(v0 + 88));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v8 = *(_QWORD **)(v0 + 80);
  v10 = (void *)v8[7];
  v9 = (void *)v8[8];
  v12 = v8[9];
  v11 = v8[10];
  v13 = type metadata accessor for CRLSerializableObjectReader();
  inited = (_QWORD *)swift_initStackObject(v13, v0 + 16);
  *(_QWORD *)(v0 + 136) = inited;
  inited[7] = _swiftEmptyDictionarySingleton;
  v15 = type metadata accessor for CRLReadChannelHelper();
  v16 = swift_allocObject(v15, 32, 7);
  *(_QWORD *)(v16 + 16) = v7;
  *(_QWORD *)(v16 + 24) = 0;
  inited[2] = v16;
  inited[3] = v11;
  inited[4] = v10;
  inited[5] = v9;
  inited[6] = v12;
  v17 = dword_101410034;
  swift_unknownObjectRetain(v7);
  swift_retain(v11);
  v18 = v10;
  v19 = v9;
  v20 = (_QWORD *)swift_task_alloc(v17);
  *(_QWORD *)(v0 + 144) = v20;
  *v20 = v0;
  v20[1] = sub_1009EF214;
  return sub_100D49504();
}

uint64_t sub_1009EF214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 144);
  *(_QWORD *)(*v3 + 152) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1009EF350;
  }
  else
  {
    *(_QWORD *)(v6 + 160) = a2;
    *(_QWORD *)(v6 + 168) = a1;
    v8 = sub_1009EF28C;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1009EF28C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 88);
  swift_setDeallocating(v2);
  swift_release(*(_QWORD *)(v2 + 16));
  swift_release(*(_QWORD *)(v2 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
  objc_msgSend(v1, "close");
  swift_unknownObjectRelease(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 160));
}

uint64_t sub_1009EF31C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF350()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_setDeallocating(v2);
  swift_release(*(_QWORD *)(v2 + 16));
  swift_release(*(_QWORD *)(v2 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
  objc_msgSend(v1, "close");
  swift_unknownObjectRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF3D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = sub_1004B804C(&qword_101401210);
  v2 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = v2;
  v3 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v0[3] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[4] = v4;
  v0[5] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)swift_task_alloc(dword_101401224);
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1009EF470;
  return sub_1009F000C(v2, 1);
}

uint64_t sub_1009EF470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009EF630;
  else
    v3 = sub_1009EF4D4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009EF4D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _BYTE *v3;
  __n128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  _BYTE *v14;
  __n128 v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 48))(v1, 1, *(_QWORD *)(v0 + 24)) == 1)
  {
    sub_1004CB800(v1, &qword_101401210);
    v2 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v2, 0, 0);
    *v3 = 3;
    swift_willThrow(v4);
  }
  else
  {
    v5 = *(_QWORD **)(v0 + 40);
    sub_1004B84E0(v1, (uint64_t)v5, type metadata accessor for CRLProto_ObjectMetadata);
    swift_bridgeObjectRetain(*v5);
    v7 = sub_100D6B6D0(v6);
    v8 = *(_QWORD *)(v0 + 40);
    if ((v9 & 1) == 0)
    {
      v10 = v7;
      v11 = *(_QWORD *)(v0 + 16);
      sub_1004B84A4(*(_QWORD *)(v0 + 40), type metadata accessor for CRLProto_ObjectMetadata);
      swift_task_dealloc(v8);
      swift_task_dealloc(v11);
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
    }
    v13 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v13, 0, 0);
    *v14 = 11;
    swift_willThrow(v15);
    sub_1004B84A4(v8, type metadata accessor for CRLProto_ObjectMetadata);
  }
  v16 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF630()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009EF670(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1[2] = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CRLProto_Data(0);
  v1[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[5] = v4;
  v1[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101401210);
  v6 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[7] = v6;
  v7 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v1[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[9] = v8;
  v1[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)swift_task_alloc(dword_101401224);
  v1[11] = v9;
  *v9 = v1;
  v9[1] = sub_1009EF760;
  return sub_1009F000C(v6, 1);
}

uint64_t sub_1009EF760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009EF9B8;
  else
    v3 = sub_1009EF7C4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009EF7C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE *v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[8];
  v2 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 48))(v2, 1, v1) == 1)
  {
    sub_1004CB800(v2, &qword_101401210);
    v3 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v3, 0, 0);
    *v4 = 3;
    swift_willThrow(v5);
  }
  else
  {
    v6 = v0[10];
    v7 = v0[4];
    v8 = v0[5];
    v9 = v0[3];
    sub_1004B84E0(v2, v6, type metadata accessor for CRLProto_ObjectMetadata);
    sub_1004CB7BC(v6 + *(int *)(v1 + 28), v9, (uint64_t *)&unk_1013E16F0);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
    v11 = (_OWORD *)v0[6];
    if ((_DWORD)v10 == 1)
    {
      v12 = v0[3];
      *v11 = xmmword_100EF78C0;
      UnknownStorage.init()(v10);
      sub_1004CB800(v12, (uint64_t *)&unk_1013E16F0);
    }
    else
    {
      sub_1004B84E0(v0[3], (uint64_t)v11, type metadata accessor for CRLProto_Data);
    }
    v13 = v0[12];
    v14 = v0[10];
    v15 = (uint64_t *)v0[6];
    v16 = *v15;
    v17 = v15[1];
    sub_1004BE310(*v15, v17);
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_Data);
    UUID.init(crl_data:)(v16, v17);
    sub_1004B84A4(v14, type metadata accessor for CRLProto_ObjectMetadata);
    if (!v13)
    {
      v22 = v0[6];
      v23 = v0[7];
      v24 = v0[3];
      swift_task_dealloc(v0[10]);
      swift_task_dealloc(v23);
      swift_task_dealloc(v22);
      swift_task_dealloc(v24);
      v21 = (uint64_t (*)(void))v0[1];
      return v21();
    }
  }
  v19 = v0[6];
  v18 = v0[7];
  v20 = v0[3];
  swift_task_dealloc(v0[10]);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1009EF9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1009EFA14(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  NSObject *v21;
  id v22;
  double v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  __n128 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void **aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  _QWORD *v57;

  v42 = a2;
  v44 = a1;
  v47 = type metadata accessor for DispatchWorkItemFlags(0);
  v50 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  __chkstk_darwin(v5);
  v45 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013EB680);
  v8 = *(_QWORD *)(v7 - 8);
  v40 = *(_QWORD *)(v8 + 64);
  v41 = v7;
  v9 = __chkstk_darwin(v7);
  v39 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS.QoSClass(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject(&unk_101290150, 24, 7);
  *(_QWORD *)(v15 + 16) = 0;
  v16 = swift_allocObject(&unk_101290178, 17, 7);
  *(_BYTE *)(v16 + 16) = 0;
  v17 = dispatch_group_create();
  dispatch_group_enter(v17);
  v18 = (_QWORD *)swift_allocObject(&unk_1012901A0, 48, 7);
  v18[2] = v16;
  v18[3] = v15;
  v43 = v16;
  v18[4] = v17;
  v18[5] = a3;
  v56 = sub_1009F2C6C;
  v57 = v18;
  aBlock = _NSConcreteStackBlock;
  v53 = *(_QWORD *)"";
  v54 = sub_100696F7C;
  v55 = &unk_1012901B8;
  v19 = _Block_copy(&aBlock);
  v20 = v57;
  swift_retain(v16);
  swift_retain(v15);
  v21 = v17;
  v22 = a3;
  *(_QWORD *)&v23 = swift_release(v20).n128_u64[0];
  objc_msgSend(v42, "readWithHandler:", v19, v23);
  _Block_release(v19);
  sub_100503E34();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchQoS.QoSClass.userInitiated(_:), v11);
  v24 = (void *)static OS_dispatch_queue.global(qos:)(v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v25 = v39;
  v26 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v39, v44, v41);
  v27 = *(unsigned __int8 *)(v8 + 80);
  v28 = (v27 + 24) & ~v27;
  v29 = swift_allocObject(&unk_1012901F0, v28 + v40, v27 | 7);
  *(_QWORD *)(v29 + 16) = v15;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v29 + v28, v25, v26);
  v56 = sub_1006984E0;
  v57 = (_QWORD *)v29;
  aBlock = _NSConcreteStackBlock;
  v53 = *(_QWORD *)"";
  v54 = sub_1005D2FC0;
  v55 = &unk_101290208;
  v30 = _Block_copy(&aBlock);
  v31 = swift_retain(v15);
  v32 = v45;
  static DispatchQoS.unspecified.getter(v31);
  v51 = _swiftEmptyArrayStorage;
  v33 = sub_1004B7878((unint64_t *)&qword_1013E1D20, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_1004B804C((uint64_t *)&unk_1013DFBF0);
  v35 = sub_100503E88();
  v37 = v46;
  v36 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v34, v35, v47, v33);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v32, v37, v24, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v36);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v49);
  v38 = v57;
  swift_release(v15);
  swift_release(v43);
  swift_release(v38);
}

void sub_1009EFE04(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, void *a7)
{
  _BYTE *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  NSObject *v22;
  uint64_t v23;
  char v24[24];
  _QWORD aBlock[5];
  _QWORD *v26;
  char v27[24];
  char v28[24];

  v14 = (_BYTE *)(a4 + 16);
  swift_beginAccess(a4 + 16, v28, 0, 0);
  if ((*(_BYTE *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      v15 = (_QWORD *)(a5 + 16);
      swift_beginAccess(v14, v24, 1, 0);
      *v14 = 1;
      swift_beginAccess(a5 + 16, &v23, 1, 0);
      v16 = *(_QWORD *)(a5 + 16);
      *v15 = a3;
      swift_errorRetain(a3);
      swift_errorRetain(a3);
      swift_errorRelease(v16);
      dispatch_group_leave(a6);
      swift_errorRelease(a3);
    }
    else if (a2)
    {
      v17 = swift_allocObject(&unk_101290178, 17, 7);
      *(_BYTE *)(v17 + 16) = 0;
      v18 = a2;
      dispatch_group_enter(a6);
      v19 = (_QWORD *)swift_allocObject(&unk_101290240, 40, 7);
      v19[2] = v17;
      v19[3] = a5;
      v19[4] = a6;
      aBlock[4] = sub_100698548;
      v26 = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100697AD0;
      aBlock[3] = &unk_101290258;
      v20 = _Block_copy(aBlock);
      v21 = v26;
      swift_retain(v17);
      swift_retain(a5);
      v22 = a6;
      objc_msgSend(a7, "writeData:handler:", v18, v20, swift_release(v21).n128_f64[0]);
      _Block_release(v20);

      swift_release(v17);
    }
    if ((a1 & 1) != 0)
    {
      swift_beginAccess(v14, aBlock, 0, 0);
      if ((*v14 & 1) == 0)
      {
        swift_beginAccess(v14, v27, 1, 0);
        *v14 = 1;
        dispatch_group_leave(a6);
      }
    }
  }
}

uint64_t sub_1009F000C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  *(_BYTE *)(v3 + 184) = a2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v2;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_101401210) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 112) = swift_task_alloc(v4);
  *(_QWORD *)(v3 + 120) = swift_task_alloc(v4);
  return swift_task_switch(sub_1009F007C, 0, 0);
}

uint64_t sub_1009F007C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  unint64_t v25;
  _BYTE *v26;
  __n128 v27;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  *(_QWORD *)(v0 + 128) = OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  v4 = v2 + v3;
  swift_beginAccess(v2 + v3, v0 + 48, 0, 0);
  sub_1004CB7BC(v4, v1, &qword_101401210);
  v5 = type metadata accessor for CRLProto_ObjectMetadata(0);
  *(_QWORD *)(v0 + 136) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v0 + 144) = v6;
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  v8 = *(_QWORD *)(v0 + 120);
  if (v7 != 1)
  {
    v15 = *(_QWORD *)(v0 + 96);
    sub_1004B84E0(v8, v15, type metadata accessor for CRLProto_ObjectMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v5);
LABEL_6:
    v16 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v16);
    v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  v9 = *(_BYTE *)(v0 + 184);
  sub_1004CB800(v8, &qword_101401210);
  v10 = *(_QWORD *)(v0 + 104);
  if ((v9 & 1) == 0 && (*(_BYTE *)(v10 + 72) & 3) == 0)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v6 + 56))(*(_QWORD *)(v0 + 96), 1, 1, v5);
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v10 + 40);
  v12 = *(_QWORD *)(v10 + 48);
  sub_1004BB5A4((_QWORD *)(v10 + 16), v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  *(_QWORD *)(v0 + 152) = v13;
  v19 = v13;
  if (!v13)
  {
    v25 = sub_100577444();
    swift_allocError(&type metadata for CRLSerializationError, v25, 0, 0);
    *v26 = 3;
    swift_willThrow(v27);
    v14 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v14);
    v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  v20 = type metadata accessor for CRLReadChannelHelper();
  inited = swift_initStackObject(v20, v0 + 16);
  *(_QWORD *)(v0 + 160) = inited;
  *(_QWORD *)(inited + 16) = v19;
  *(_QWORD *)(inited + 24) = 0;
  v22 = dword_101401234;
  swift_unknownObjectRetain(v19);
  v23 = (_QWORD *)swift_task_alloc(v22);
  *(_QWORD *)(v0 + 168) = v23;
  *v23 = v0;
  v23[1] = sub_1009F02A0;
  return sub_1009F22BC(*(_QWORD *)(v0 + 112), inited, v24);
}

uint64_t sub_1009F02A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009F03D0;
  else
    v3 = sub_1009F0304;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009F0304()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104) + *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 56))(v2, 0, 1, *(_QWORD *)(v0 + 136));
  swift_beginAccess(v4, v0 + 72, 33, 0);
  sub_1009F2D3C(v2, v4);
  swift_endAccess(v0 + 72);
  sub_1004CB7BC(v4, v3, &qword_101401210);
  objc_msgSend(v1, "close");
  swift_unknownObjectRelease(v1);
  v5 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F03D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 152);
  objc_msgSend(v1, "close");
  swift_unknownObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F0428()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1[20] = v0;
  v2 = sub_1004B804C(&qword_1013FFA70);
  v1[21] = v2;
  v1[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v1[23] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[24] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[25] = swift_task_alloc(v5);
  v1[26] = swift_task_alloc(v5);
  v1[27] = swift_task_alloc(v5);
  v1[28] = swift_task_alloc(v5);
  v6 = sub_1004B804C(&qword_1013E04D0);
  v1[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v1[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLProto_Data(0);
  v1[31] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[32] = v9;
  v1[33] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v1[34] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[35] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[36] = swift_task_alloc(v12);
  v1[37] = swift_task_alloc(v12);
  v1[38] = swift_task_alloc(v12);
  v13 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  v1[39] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v1[40] = v14;
  v1[41] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_101401210);
  v1[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v1[43] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v1[44] = v17;
  v1[45] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F062C, 0, 0);
}

uint64_t sub_1009F062C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 160) + 72) & 2) != 0)
  {
    v11 = (_QWORD *)swift_task_alloc(dword_101401224);
    *(_QWORD *)(v0 + 368) = v11;
    *v11 = v0;
    v11[1] = sub_1009F07B4;
    return sub_1009F000C(*(_QWORD *)(v0 + 336), 0);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 328);
    v2 = *(_QWORD *)(v0 + 336);
    v4 = *(_QWORD *)(v0 + 296);
    v3 = *(_QWORD *)(v0 + 304);
    v5 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 264);
    v8 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 224);
    v12 = *(_QWORD *)(v0 + 216);
    v13 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v2);
    swift_task_dealloc(v1);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1009F07B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 368);
  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009F21A0;
  else
    v3 = sub_1009F085C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009F085C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  char *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  id v18;
  char *v19;
  id v20;
  void *v21;
  os_unfair_lock_s *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(void);
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v1 = *(_QWORD *)(v0 + 336);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 352) + 48))(v1, 1, *(_QWORD *)(v0 + 344)) == 1)
  {
    sub_1004CB800(v1, &qword_101401210);
LABEL_15:
    v39 = *(_QWORD *)(v0 + 328);
    v40 = *(_QWORD *)(v0 + 336);
    v42 = *(_QWORD *)(v0 + 296);
    v41 = *(_QWORD *)(v0 + 304);
    v43 = *(_QWORD *)(v0 + 288);
    v44 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 232);
    v45 = *(_QWORD *)(v0 + 240);
    v47 = *(_QWORD *)(v0 + 224);
    v66 = *(_QWORD *)(v0 + 216);
    v68 = *(_QWORD *)(v0 + 208);
    v70 = *(_QWORD *)(v0 + 200);
    v72 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v40);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    v48 = *(uint64_t (**)(void))(v0 + 8);
    return v48();
  }
  v2 = *(_QWORD *)(v0 + 360);
  sub_1004B84E0(v1, v2, type metadata accessor for CRLProto_ObjectMetadata);
  v3 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v0 + 384) = v3;
  if (!*(_QWORD *)(v3 + 16))
  {
    v14 = *(_QWORD *)(v0 + 360);
LABEL_14:
    sub_1004B84A4(v14, type metadata accessor for CRLProto_ObjectMetadata);
    goto LABEL_15;
  }
  v4 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  *(_QWORD *)(v0 + 152) = 0;
  v5 = objc_msgSend(v4, "initWithError:", v0 + 152);
  *(_QWORD *)(v0 + 392) = v5;
  v6 = *(void **)(v0 + 152);
  if (!v5)
  {
    v15 = *(_QWORD *)(v0 + 360);
    v16 = v6;
    _convertNSErrorToError(_:)(v6);

    swift_willThrow(v17);
LABEL_19:
    sub_1004B84A4(v15, type metadata accessor for CRLProto_ObjectMetadata);
    v56 = *(_QWORD *)(v0 + 328);
    v55 = *(_QWORD *)(v0 + 336);
    v58 = *(_QWORD *)(v0 + 296);
    v57 = *(_QWORD *)(v0 + 304);
    v59 = *(_QWORD *)(v0 + 288);
    v60 = *(_QWORD *)(v0 + 264);
    v62 = *(_QWORD *)(v0 + 232);
    v61 = *(_QWORD *)(v0 + 240);
    v63 = *(_QWORD *)(v0 + 224);
    v67 = *(_QWORD *)(v0 + 216);
    v69 = *(_QWORD *)(v0 + 208);
    v71 = *(_QWORD *)(v0 + 200);
    v73 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v67);
    swift_task_dealloc(v69);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    v48 = *(uint64_t (**)(void))(v0 + 8);
    return v48();
  }
  v7 = *(char **)(*(_QWORD *)(v0 + 160) + 56);
  v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  v10 = v6;
  os_unfair_lock_lock(v9);
  v11 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v12 = *(void **)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v12)
  {
    v13 = *(id *)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v18 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v19 = v7;
    v20 = sub_100C7EE84((uint64_t)v19);

    v21 = *(void **)&v7[v11];
    *(_QWORD *)&v7[v11] = v20;
    v13 = v20;

    v12 = 0;
  }
  *(_QWORD *)(v0 + 400) = v13;
  v22 = *(os_unfair_lock_s **)(v8 + 16);
  v23 = v12;
  os_unfair_lock_unlock(v22);
  v24 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 408) = v24;
  if (!v24)
  {
    v37 = *(void **)(v0 + 400);
    v38 = *(_QWORD *)(v0 + 360);

    v14 = v38;
    goto LABEL_14;
  }
  v25 = *(_QWORD *)(v0 + 320);
  v26 = *(_QWORD *)(v0 + 328);
  v27 = *(_QWORD *)(v0 + 312);
  v28 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 256);
  v30 = *(_DWORD *)(v25 + 80);
  *(_DWORD *)(v0 + 528) = v30;
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v25 + 72);
  *(_QWORD *)(v0 + 424) = 0;
  v31 = *(_QWORD *)(v0 + 376);
  v32 = *(_QWORD *)(v0 + 240);
  v33 = *(_QWORD *)(v0 + 384) + ((v30 + 32) & ~(unint64_t)v30);
  swift_bridgeObjectRetain(v3);
  sub_1008653A0(v33, v26);
  sub_1004CB7BC(v26 + *(int *)(v27 + 28), v32, (uint64_t *)&unk_1013E16F0);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v32, 1, v28);
  v35 = *(_OWORD **)(v0 + 264);
  if ((_DWORD)v34 == 1)
  {
    v36 = *(_QWORD *)(v0 + 240);
    *v35 = xmmword_100EF78C0;
    UnknownStorage.init()(v34);
    sub_1004CB800(v36, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 240), (uint64_t)v35, type metadata accessor for CRLProto_Data);
  }
  v49 = *(uint64_t **)(v0 + 264);
  v50 = *v49;
  v51 = v49[1];
  sub_1004BE310(*v49, v51);
  sub_1004B84A4((uint64_t)v49, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v50, v51);
  *(_QWORD *)(v0 + 432) = v31;
  if (v31)
  {
    v52 = *(void **)(v0 + 400);
    v53 = *(_QWORD *)(v0 + 384);
    v15 = *(_QWORD *)(v0 + 360);
    v54 = *(_QWORD *)(v0 + 328);

    sub_1004B84A4(v54, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    swift_bridgeObjectRelease(v53);
    goto LABEL_19;
  }
  v65 = (_QWORD *)swift_task_alloc(dword_10140C61C);
  *(_QWORD *)(v0 + 440) = v65;
  *v65 = v0;
  v65[1] = sub_1009F0D68;
  return sub_100C78DC8(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 304), 0, 0, 3);
}

uint64_t sub_1009F0D68()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 440));
  return swift_task_switch(sub_1009F0DE8, 0, 0);
}

uint64_t sub_1009F0DE8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  __n128 v37;
  void (*v38)(uint64_t, uint64_t, __n128);
  __n128 v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t inited;
  unint64_t v45;
  id v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 48))(v1, 1, *(_QWORD *)(v0 + 184));
  v3 = sub_1004CB800(v1, &qword_1013E04D0);
  v4 = *(_QWORD *)(v0 + 432);
  if (v2 == 1)
  {
    v5 = *(uint64_t **)(v0 + 328);
    v6 = *(_QWORD **)(v0 + 160);
    v7 = UUID.uuidString.getter(v3);
    v9 = v8;
    v10 = v6[5];
    v11 = v6[6];
    sub_1004BB5A4(v6 + 2, v10);
    v13 = *v5;
    v12 = v5[1];
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v11 + 24);
    v15 = swift_bridgeObjectRetain(v12);
    v16 = v14(v7, v9, v13, v12, v10, v11, v15);
    *(_QWORD *)(v0 + 448) = v16;
    if (v4)
    {
      v18 = *(void **)(v0 + 392);
      v17 = *(void **)(v0 + 400);
      v102 = *(_QWORD *)(v0 + 384);
      v19 = *(_QWORD *)(v0 + 360);
      v20 = *(_QWORD *)(v0 + 328);
      v21 = *(_QWORD *)(v0 + 304);
      v23 = *(_QWORD *)(v0 + 272);
      v22 = *(_QWORD *)(v0 + 280);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v9);

      v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v25 = v19;
      v24(v21, v23);
      sub_1004B84A4(v20, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      v26 = v102;
LABEL_16:
      swift_bridgeObjectRelease(v26);
      sub_1004B84A4(v25, type metadata accessor for CRLProto_ObjectMetadata);
      v81 = *(_QWORD *)(v0 + 328);
      v82 = *(_QWORD *)(v0 + 336);
      v84 = *(_QWORD *)(v0 + 296);
      v83 = *(_QWORD *)(v0 + 304);
      v85 = *(_QWORD *)(v0 + 288);
      v86 = *(_QWORD *)(v0 + 264);
      v88 = *(_QWORD *)(v0 + 232);
      v87 = *(_QWORD *)(v0 + 240);
      v89 = *(_QWORD *)(v0 + 224);
      v95 = *(_QWORD *)(v0 + 216);
      v98 = *(id *)(v0 + 208);
      v101 = *(_QWORD *)(v0 + 200);
      v105 = *(_QWORD *)(v0 + 176);
      swift_task_dealloc(*(_QWORD *)(v0 + 360));
      swift_task_dealloc(v82);
      swift_task_dealloc(v81);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      swift_task_dealloc(v85);
      swift_task_dealloc(v86);
      swift_task_dealloc(v87);
      swift_task_dealloc(v88);
      swift_task_dealloc(v89);
      swift_task_dealloc(v95);
      swift_task_dealloc(v98);
      swift_task_dealloc(v101);
      swift_task_dealloc(v105);
      v64 = *(uint64_t (**)(void))(v0 + 8);
      return v64();
    }
    v27 = v16;
    swift_bridgeObjectRelease(v12);
    if (v27)
    {
      v28 = *(_QWORD *)(v0 + 216);
      v29 = *(_QWORD *)(v0 + 208);
      v103 = *(_QWORD *)(v0 + 224);
      v106 = *(_QWORD *)(v0 + 200);
      v30 = *(_QWORD *)(v0 + 184);
      v96 = *(id *)(v0 + 392);
      v99 = *(_QWORD *)(v0 + 192);
      swift_bridgeObjectRetain(v12);
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend(v31, "pathExtension", swift_bridgeObjectRelease(v12).n128_f64[0]);

      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      v36 = objc_msgSend(v96, "URL");
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v36);

      URL.appendingPathComponent(_:)(v7, v9);
      v37 = swift_bridgeObjectRelease(v9);
      v38 = *(void (**)(uint64_t, uint64_t, __n128))(v99 + 8);
      *(_QWORD *)(v0 + 456) = v38;
      v38(v29, v30, v37);
      URL.appendingPathExtension(_:)(v33);
      v39 = swift_bridgeObjectRelease(v35);
      v38(v28, v30, v39);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v106, v103, v30);
      v40 = objc_allocWithZone((Class)CRLFileIOChannel);
      v41 = sub_1009F29FC(v106);
      *(_QWORD *)(v0 + 464) = v41;
      v91 = v41;
      swift_unknownObjectRetain(v27);
      v92 = swift_task_alloc(32);
      *(_QWORD *)(v0 + 472) = v92;
      *(_QWORD *)(v92 + 16) = v27;
      *(_QWORD *)(v92 + 24) = v91;
      v93 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 480) = v93;
      *v93 = v0;
      v93[1] = sub_1009F1634;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v93, 0, 0, 0xD000000000000012, 0x8000000100FC2070, sub_1009F2BE8, v92, (char *)&type metadata for () + 8);
    }
    if (qword_1013DD708 != -1)
      swift_once(&qword_1013DD708, sub_100A018C8);
    swift_beginAccess(&static OS_os_log.crlSerializableObject, v0 + 128, 0, 0);
    v42 = (void *)static OS_os_log.crlSerializableObject;
    v43 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v43, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    v45 = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v7;
    *(_QWORD *)(inited + 40) = v9;
    *(_QWORD *)(inited + 96) = &type metadata for String;
    *(_QWORD *)(inited + 104) = v45;
    *(_QWORD *)(inited + 64) = v45;
    *(_QWORD *)(inited + 72) = v13;
    *(_QWORD *)(inited + 80) = v12;
    swift_bridgeObjectRetain(v12);
    v46 = v42;
    v48 = static os_log_type_t.default.getter(v47);
    sub_100A06EBC((uint64_t)v46, &_mh_execute_header, v48, "Skipping reading asset without backing read channel. assetID=%@, assetFilename=%@", 81, 2, inited);
    swift_setDeallocating(inited);
    v49 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 2, v49);

    v4 = 0;
  }
  v50 = *(_QWORD *)(v0 + 408);
  v51 = *(_QWORD *)(v0 + 328);
  v52 = *(_QWORD *)(v0 + 424) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
  sub_1004B84A4(v51, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  if (v52 == v50)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 384));
    v53 = *(void **)(v0 + 400);
    v54 = *(_QWORD *)(v0 + 360);

    sub_1004B84A4(v54, type metadata accessor for CRLProto_ObjectMetadata);
    v55 = *(_QWORD *)(v0 + 328);
    v56 = *(_QWORD *)(v0 + 336);
    v58 = *(_QWORD *)(v0 + 296);
    v57 = *(_QWORD *)(v0 + 304);
    v59 = *(_QWORD *)(v0 + 288);
    v60 = *(_QWORD *)(v0 + 264);
    v62 = *(_QWORD *)(v0 + 232);
    v61 = *(_QWORD *)(v0 + 240);
    v63 = *(_QWORD *)(v0 + 224);
    v97 = *(id *)(v0 + 216);
    v100 = *(_QWORD *)(v0 + 208);
    v104 = *(_QWORD *)(v0 + 200);
    v107 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v56);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v97);
    swift_task_dealloc(v100);
    swift_task_dealloc(v104);
    swift_task_dealloc(v107);
    v64 = *(uint64_t (**)(void))(v0 + 8);
    return v64();
  }
  v65 = *(_QWORD *)(v0 + 416);
  v66 = *(_QWORD *)(v0 + 424) + 1;
  *(_QWORD *)(v0 + 424) = v66;
  v67 = *(_QWORD *)(v0 + 328);
  v68 = *(_QWORD *)(v0 + 312);
  v69 = *(_QWORD *)(v0 + 248);
  v70 = *(_QWORD *)(v0 + 256);
  v71 = *(_QWORD *)(v0 + 240);
  sub_1008653A0(*(_QWORD *)(v0 + 384)+ ((*(unsigned __int8 *)(v0 + 528) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 528))+ v65 * v66, v67);
  sub_1004CB7BC(v67 + *(int *)(v68 + 28), v71, (uint64_t *)&unk_1013E16F0);
  v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v71, 1, v69);
  v73 = *(_OWORD **)(v0 + 264);
  if ((_DWORD)v72 == 1)
  {
    v74 = *(_QWORD *)(v0 + 240);
    *v73 = xmmword_100EF78C0;
    UnknownStorage.init()(v72);
    sub_1004CB800(v74, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 240), (uint64_t)v73, type metadata accessor for CRLProto_Data);
  }
  v75 = *(uint64_t **)(v0 + 264);
  v76 = *v75;
  v77 = v75[1];
  sub_1004BE310(*v75, v77);
  sub_1004B84A4((uint64_t)v75, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v76, v77);
  *(_QWORD *)(v0 + 432) = v4;
  if (v4)
  {
    v78 = *(void **)(v0 + 400);
    v79 = *(_QWORD *)(v0 + 384);
    v25 = *(_QWORD *)(v0 + 360);
    v80 = *(_QWORD *)(v0 + 328);

    sub_1004B84A4(v80, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    v26 = v79;
    goto LABEL_16;
  }
  v90 = (_QWORD *)swift_task_alloc(dword_10140C61C);
  *(_QWORD *)(v0 + 440) = v90;
  *v90 = v0;
  v90[1] = sub_1009F0D68;
  return sub_100C78DC8(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 304), 0, 0, 3);
}

uint64_t sub_1009F1634()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 480);
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009F1898;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 472));
    v4 = sub_1009F16EC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009F16EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = v0[50];
  v2 = (uint64_t *)v0[41];
  v3 = v0[28];
  swift_unknownObjectRelease(v0[56]);
  v5 = *v2;
  v4 = v2[1];
  v0[62] = v4;
  swift_bridgeObjectRetain(v4);
  v6 = (_QWORD *)swift_task_alloc(48);
  v0[63] = v6;
  v6[2] = v1;
  v6[3] = v3;
  v6[4] = v5;
  v6[5] = v4;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[64] = v7;
  *v7 = v0;
  v7[1] = sub_1009F17E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0[22], 0, 0, 0xD00000000000001CLL, 0x8000000100FEA560, sub_1009F2BF0, v6, v0[21]);
}

uint64_t sub_1009F17E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 512);
  *(_QWORD *)(*v1 + 520) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1009F1FC8;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 504));
    v4 = sub_1009F1A60;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009F1898()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t);
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(void **)(v0 + 464);
  v1 = *(_QWORD *)(v0 + 472);
  v4 = *(void **)(v0 + 448);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  v6 = *(void **)(v0 + 392);
  v5 = *(void **)(v0 + 400);
  v24 = *(_QWORD *)(v0 + 328);
  v26 = *(_QWORD *)(v0 + 360);
  v7 = *(_QWORD *)(v0 + 280);
  v20 = *(_QWORD *)(v0 + 272);
  v22 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 384));
  swift_unknownObjectRelease(v4);
  swift_task_dealloc(v1);
  objc_msgSend(v2, "close");

  v3(v8, v9);
  objc_msgSend(v4, "close");

  swift_unknownObjectRelease(v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v20);
  sub_1004B84A4(v24, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  sub_1004B84A4(v26, type metadata accessor for CRLProto_ObjectMetadata);
  v11 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F1A60()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  __n128 v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  v3 = *(_QWORD *)(v0 + 296);
  v71 = *(_QWORD *)(v0 + 304);
  v75 = *(_QWORD *)(v0 + 520);
  v4 = *(_QWORD *)(v0 + 288);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v6 + *(int *)(v8 + 48) + 8);
  v10 = v6 + *(int *)(v8 + 64);
  v11 = *(void (**)(uint64_t))(*(_QWORD *)(v0 + 280) + 32);
  v11(v4);
  v2(v10, v7);
  swift_bridgeObjectRelease(v1);
  v12 = swift_bridgeObjectRelease(v9);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(v3, v4, v5, v12);
  sub_1008FD9E8(v71, v3);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  v13 = *(void **)(v0 + 464);
  v15 = *(void **)(v0 + 448);
  if (v75)
  {
    v16 = *(void **)(v0 + 392);
    v17 = *(_QWORD *)(v0 + 384);
    v68 = *(_QWORD *)(v0 + 360);
    v72 = *(_QWORD *)(v0 + 328);
    v63 = *(void **)(v0 + 400);
    v65 = *(_QWORD *)(v0 + 304);
    v18 = *(_QWORD *)(v0 + 272);
    v19 = *(_QWORD *)(v0 + 224);
    v20 = *(_QWORD *)(v0 + 184);
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 280) + 8);
    v21(*(_QWORD *)(v0 + 296), v18);
    objc_msgSend(v13, "close", swift_bridgeObjectRelease(v17).n128_f64[0]);

    v14(v19, v20);
    objc_msgSend(v15, "close");

    swift_unknownObjectRelease(v15);
    v21(v65, v18);
    sub_1004B84A4(v72, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    sub_1004B84A4(v68, type metadata accessor for CRLProto_ObjectMetadata);
    v22 = *(_QWORD *)(v0 + 328);
    v23 = *(_QWORD *)(v0 + 336);
    v25 = *(_QWORD *)(v0 + 296);
    v24 = *(_QWORD *)(v0 + 304);
    v26 = *(_QWORD *)(v0 + 288);
    v27 = *(_QWORD *)(v0 + 264);
    v29 = *(_QWORD *)(v0 + 232);
    v28 = *(_QWORD *)(v0 + 240);
    v30 = *(_QWORD *)(v0 + 224);
    v64 = *(_QWORD *)(v0 + 216);
    v66 = *(_QWORD *)(v0 + 208);
    v69 = *(_QWORD *)(v0 + 200);
    v73 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v23);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v69);
    swift_task_dealloc(v73);
    v31 = *(uint64_t (**)(void))(v0 + 8);
    return v31();
  }
  v32 = *(_QWORD *)(v0 + 224);
  v33 = *(_QWORD *)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272));
  objc_msgSend(v13, "close");

  v14(v32, v33);
  objc_msgSend(v15, "close");
  swift_unknownObjectRelease(v15);
  v34 = *(_QWORD *)(v0 + 408);
  v35 = *(_QWORD *)(v0 + 328);
  v36 = *(_QWORD *)(v0 + 424) + 1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
  sub_1004B84A4(v35, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  if (v36 == v34)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 384));
    v37 = *(void **)(v0 + 400);
    v38 = *(_QWORD *)(v0 + 360);

    sub_1004B84A4(v38, type metadata accessor for CRLProto_ObjectMetadata);
    v39 = *(_QWORD *)(v0 + 328);
    v40 = *(_QWORD *)(v0 + 336);
    v42 = *(_QWORD *)(v0 + 296);
    v41 = *(_QWORD *)(v0 + 304);
    v43 = *(_QWORD *)(v0 + 288);
    v44 = *(_QWORD *)(v0 + 264);
    v46 = *(_QWORD *)(v0 + 232);
    v45 = *(_QWORD *)(v0 + 240);
    v47 = *(_QWORD *)(v0 + 224);
    v67 = *(_QWORD *)(v0 + 216);
    v70 = *(_QWORD *)(v0 + 208);
    v74 = *(_QWORD *)(v0 + 200);
    v76 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc(*(_QWORD *)(v0 + 360));
    swift_task_dealloc(v40);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v67);
    swift_task_dealloc(v70);
    swift_task_dealloc(v74);
    swift_task_dealloc(v76);
    v31 = *(uint64_t (**)(void))(v0 + 8);
    return v31();
  }
  v49 = *(_QWORD *)(v0 + 416);
  v50 = *(_QWORD *)(v0 + 424) + 1;
  *(_QWORD *)(v0 + 424) = v50;
  v51 = *(_QWORD *)(v0 + 328);
  v52 = *(_QWORD *)(v0 + 312);
  v53 = *(_QWORD *)(v0 + 248);
  v54 = *(_QWORD *)(v0 + 256);
  v55 = *(_QWORD *)(v0 + 240);
  sub_1008653A0(*(_QWORD *)(v0 + 384)+ ((*(unsigned __int8 *)(v0 + 528) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 528))+ v49 * v50, v51);
  sub_1004CB7BC(v51 + *(int *)(v52 + 28), v55, (uint64_t *)&unk_1013E16F0);
  v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v55, 1, v53);
  v57 = *(_OWORD **)(v0 + 264);
  if ((_DWORD)v56 == 1)
  {
    v58 = *(_QWORD *)(v0 + 240);
    *v57 = xmmword_100EF78C0;
    UnknownStorage.init()(v56);
    sub_1004CB800(v58, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    sub_1004B84E0(*(_QWORD *)(v0 + 240), (uint64_t)v57, type metadata accessor for CRLProto_Data);
  }
  v59 = *(uint64_t **)(v0 + 264);
  v60 = *v59;
  v61 = v59[1];
  sub_1004BE310(*v59, v61);
  sub_1004B84A4((uint64_t)v59, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v60, v61);
  *(_QWORD *)(v0 + 432) = 0;
  v62 = (_QWORD *)swift_task_alloc(dword_10140C61C);
  *(_QWORD *)(v0 + 440) = v62;
  *v62 = v0;
  v62[1] = sub_1009F0D68;
  return sub_100C78DC8(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 304), 0, 0, 3);
}

uint64_t sub_1009F1FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(v0 + 496);
  v1 = *(_QWORD *)(v0 + 504);
  v3 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  v4 = *(void **)(v0 + 464);
  v5 = *(void **)(v0 + 448);
  v7 = *(void **)(v0 + 392);
  v6 = *(void **)(v0 + 400);
  v25 = *(_QWORD *)(v0 + 328);
  v27 = *(_QWORD *)(v0 + 360);
  v20 = *(_QWORD *)(v0 + 280);
  v21 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 384));
  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  objc_msgSend(v4, "close");

  v3(v8, v9);
  objc_msgSend(v5, "close");

  swift_unknownObjectRelease(v5);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v21);
  sub_1004B84A4(v25, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  sub_1004B84A4(v27, type metadata accessor for CRLProto_ObjectMetadata);
  v11 = *(_QWORD *)(v0 + 328);
  v10 = *(_QWORD *)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 288);
  v15 = *(_QWORD *)(v0 + 264);
  v17 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 240);
  v18 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 208);
  v26 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F21A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 328);
  v1 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 232);
  v7 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F22BC(uint64_t a1, uint64_t a2, __n128 a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[2] = a1;
  v3[3] = a2;
  v4 = type metadata accessor for BinaryDecodingOptions(0, a3);
  v3[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v3[5] = v5;
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F2338, 0, 0);
}

uint64_t sub_1009F2338(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD *v11;

  v2 = v1[5];
  v4 = (_QWORD *)v1[2];
  v3 = v1[3];
  *v4 = _swiftEmptyArrayStorage;
  v4[1] = _swiftEmptyArrayStorage;
  UnknownStorage.init()(a1);
  v5 = (char *)v4 + *(int *)(v2 + 28);
  v6 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = *(_QWORD *)(v3 + 24);
  if (__OFADD__(v8, 8))
  {
    __break(1u);
  }
  else
  {
    v9 = v1[3];
    *(_QWORD *)(v3 + 24) = v8 + 8;
    ObjectType = swift_getObjectType(*(_QWORD *)(v9 + 16));
    v11 = (_QWORD *)swift_task_alloc(dword_1013EB68C);
    v1[7] = v11;
    *v11 = v1;
    v11[1] = sub_1009F240C;
    return sub_100696FF8(v8, 8, 1, ObjectType);
  }
  return result;
}

uint64_t sub_1009F240C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 56);
  v4[8] = a1;
  v4[9] = a2;
  v4[10] = v2;
  swift_task_dealloc(v5);
  if (v2)
    v6 = sub_1009F2604;
  else
    v6 = sub_1009F247C;
  return swift_task_switch(v6, 0, 0);
}

void sub_1009F247C()
{
  __asm { BR              X10 }
}

uint64_t sub_1009F24BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  v1 = v0[8];
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v2 = v0[3];
  v3 = *(_QWORD *)(v2 + 24);
  if (__OFADD__(v3, v1))
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x1009F25D8);
  }
  *(_QWORD *)(v2 + 24) = v3 + v1;
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 16));
  v5 = (_QWORD *)swift_task_alloc(dword_1013EB68C);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1009F265C;
  return sub_100696FF8(v3, v1, 1, ObjectType);
}

uint64_t sub_1009F2604()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1004B84A4(*(_QWORD *)(v0 + 16), type metadata accessor for CRLProto_ObjectMetadata);
  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F265C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 88);
  *(_QWORD *)(*v3 + 96) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_1009F2804;
  }
  else
  {
    *(_QWORD *)(v6 + 104) = a2;
    *(_QWORD *)(v6 + 112) = a1;
    v8 = sub_1009F26D4;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1009F26D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 40);
  v9 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v14 = *(_QWORD *)(v1 + 16);
  v16 = 0;
  memset(v15, 0, sizeof(v15));
  BinaryDecodingOptions.init()(a1);
  v10 = sub_1004B7878((unint64_t *)&qword_1013F5FB0, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24BB8);
  Message.init(serializedData:extensions:partial:options:)(v3, v2, v15, 0, v8, v7, v10);
  sub_1004BBBC8(v6, v5);
  swift_release(v9);
  sub_1004B84A4(v14, type metadata accessor for CRLProto_ObjectMetadata);
  v11 = *(_QWORD *)(v1 + 48);
  v12 = *(_QWORD *)(v1 + 32);
  if (v4)
  {
    swift_task_dealloc(*(_QWORD *)(v1 + 48));
  }
  else
  {
    sub_1004B84E0(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), type metadata accessor for CRLProto_ObjectMetadata);
    swift_task_dealloc(v11);
  }
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1009F2804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1004BBBC8(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  swift_release(v1);
  sub_1004B84A4(*(_QWORD *)(v0 + 16), type metadata accessor for CRLProto_ObjectMetadata);
  v2 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F2868()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 80));
  sub_1004CB800(v0 + OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata, &qword_101401210);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1009F28C0()
{
  return type metadata accessor for CRLSerializableObjectReadCoordinator(0);
}

uint64_t type metadata accessor for CRLSerializableObjectReadCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_101401158;
  if (!qword_101401158)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSerializableObjectReadCoordinator);
  return result;
}

void sub_1009F2904(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1009F29A8(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_1009F29A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_101401168)
  {
    v2 = type metadata accessor for CRLProto_ObjectMetadata(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_101401168);
  }
}

id sub_1009F29FC(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  id v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  id v15;

  v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  v5 = v4;
  v15 = 0;
  v6 = objc_msgSend(v2, "initForStreamWritingURL:error:", v4, &v15);

  v7 = v15;
  if (v6)
  {
    v8 = type metadata accessor for URL(0);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = v7;
    v9(a1, v8);
  }
  else
  {
    v11 = v15;
    _convertNSErrorToError(_:)(v7);

    swift_willThrow(v12);
    v13 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  }
  return v6;
}

_QWORD *sub_1009F2B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];

  v19[3] = a6;
  v19[4] = a7;
  v13 = sub_10050D1B0(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v13, a1, a6);
  v14 = (char *)a5 + OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  v15 = type metadata accessor for CRLProto_ObjectMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1004E90B0((uint64_t)v19, (uint64_t)(a5 + 2));
  a5[7] = a2;
  a5[8] = a3;
  a5[9] = a4;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v19);
  v16 = type metadata accessor for CRLUUIDRemapHelper();
  v17 = swift_allocObject(v16, 40, 7);
  *(_QWORD *)(v17 + 24) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v17 + 32) = _swiftEmptyDictionarySingleton;
  *(_BYTE *)(v17 + 16) = (a4 & 4) != 0;
  a5[10] = v17;
  return a5;
}

void sub_1009F2BE8(uint64_t a1)
{
  uint64_t v1;

  sub_1009EFA14(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

double sub_1009F2BF0(uint64_t a1)
{
  uint64_t *v1;

  return sub_100C7BD20(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1009F2BFC()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009F2C20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1009F2C30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1009F2C6C(char a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_1009EFE04(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(NSObject **)(v3 + 32), *(void **)(v3 + 40));
}

double sub_1009F2C78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_1009F2C88(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1009F2C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_1013EB680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1009F2D08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1009F2D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101401210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1009F2D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v13 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(a1);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a6);
  return sub_1009F2B04((uint64_t)v15, a2, a3, a4, v17, a6, a7);
}

uint64_t sub_1009F2F1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[31] = a1;
  v2[32] = v1;
  v2[33] = swift_getObjectType(v1);
  v3 = type metadata accessor for DispatchData(0);
  v2[34] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[35] = v4;
  v2[36] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1009F2F88, 0, 0);
}

uint64_t sub_1009F2F88()
{
  uint64_t v0;
  void *v1;
  char *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD *inited;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;

  v1 = *(void **)(v0 + 248);
  v2 = *(char **)(v0 + 256);
  v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_store];
  v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_context];
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 264);
  *(_QWORD *)(v0 + 152) = &off_101290280;
  *(_QWORD *)(v0 + 120) = v2;
  v5 = type metadata accessor for CRLSerializableObjectWriteCoordinator();
  inited = (_QWORD *)swift_initStackObject(v5, v0 + 16);
  *(_QWORD *)(v0 + 296) = inited;
  inited[12] = 0;
  inited[2] = v1;
  inited[3] = &off_1012763B8;
  sub_1004DB728((__int128 *)(v0 + 120), (uint64_t)(inited + 4));
  inited[9] = v3;
  inited[10] = v4;
  inited[11] = 5;
  v7 = dword_1013F5FA4;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v1;
  v12 = (_QWORD *)swift_task_alloc(v7);
  *(_QWORD *)(v0 + 304) = v12;
  *v12 = v0;
  v12[1] = sub_1009F3068;
  return sub_100862AE4();
}

uint64_t sub_1009F3068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1009F33C0;
  else
    v3 = sub_1009F30CC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009F30CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v10;
  void *v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 288);
  v30 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 256);
  sub_1004E90B0(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_pasteboardDataManaging, v0 + 160);
  v34 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_itemMaxSize);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_metadataWriteChannel);
  v6 = (void *)objc_opt_self(NSData);
  v7 = v5 + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
  v8 = swift_beginAccess(v7, v0 + 200, 0, 0);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16);
  v10 = v9(v1, v7, v2, v8);
  v11 = (void *)DispatchData._bridgeToObjectiveC()(v10);
  v12 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v12(v1, v2);
  v13 = objc_msgSend(v6, "crl_dataFromDispatchData:", v11);

  v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v32 = v15;
  v33 = v14;

  v16 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_objectsWriteChannel)
      + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
  v17 = swift_beginAccess(v16, v0 + 224, 0, 0);
  v18 = v9(v1, v16, v2, v17);
  v19 = (void *)DispatchData._bridgeToObjectiveC()(v18);
  v12(v1, v2);
  v20 = objc_msgSend(v6, "crl_dataFromDispatchData:", v19);

  v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = *(_QWORD *)(v30 + 96);
  if (v24)
  {
    v25 = *(_QWORD **)(v30 + 96);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"assetFileURLMap", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2, 38, "Reading asset file URL map before writing the object.", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"assetFileURLMap", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2u, 38, (uint64_t)"Reading asset file URL map before writing the object.", 53, 2u);
    v24 = 0;
    v25 = _swiftEmptyDictionarySingleton;
  }
  v26 = *(_QWORD *)(v0 + 296);
  v31 = *(_QWORD *)(v0 + 288);
  v27 = objc_allocWithZone((Class)type metadata accessor for CRLPasteboardNativeDataProvider());
  swift_bridgeObjectRetain(v24);
  v28 = sub_1009F4FA4((_QWORD *)(v0 + 160), v34, v33, v32, v21, v23, (uint64_t)v25);
  sub_1004BBBC8(v21, v23);
  sub_1004BBBC8(v33, v32);
  swift_setDeallocating(v26);
  swift_unknownObjectRelease(*(_QWORD *)(v26 + 16));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v26 + 32));

  swift_bridgeObjectRelease();
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v28);
}

uint64_t sub_1009F33C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  swift_setDeallocating(v2);
  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v2 + 32));

  swift_bridgeObjectRelease();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009F3564(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = dword_1014012B4;
  v7 = a1;
  a3;
  v8 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_1009F35E0;
  return sub_1009F2F1C((uint64_t)v7);
}

uint64_t sub_1009F35E0(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  void *v10;

  v3 = v1;
  v5 = *(_QWORD *)(*v2 + 40);
  v7 = *(void **)(*v2 + 16);
  v6 = *(void **)(*v2 + 24);
  v8 = *v2;
  swift_task_dealloc(v5);

  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v8 + 32);
  if (v3)
  {
    v10 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v9)[2](v9, a1, 0);
    _Block_release(v9);

  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t type metadata accessor for CRLPasteboardObjectWriteAssistant()
{
  return objc_opt_self(_TtC8Freeform33CRLPasteboardObjectWriteAssistant);
}

id sub_1009F375C()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_metadataWriteChannel);
}

id sub_1009F3790()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_objectsWriteChannel);
}

void sub_1009F37C4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000033, 0x8000000100FEA6D0, "Freeform/CRLPasteboardObjectWriteAssistant.swift", 48, 2, 51, 0);
  __break(1u);
}

uint64_t sub_1009F381C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1009F3850()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1014012A4);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1004CF80C;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_1014012A0 + dword_1014012A0))(v2, v3, v4);
}

id sub_1009F38C4(uint64_t a1, uint64_t a2, void *a3, void *a4, char *a5)
{
  objc_class *ObjectType;
  uint64_t v11;
  objc_class *v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;
  _QWORD v21[5];

  ObjectType = (objc_class *)swift_getObjectType(a5);
  v21[3] = sub_1006E2538();
  v21[4] = &off_101299F18;
  v21[0] = a1;
  v11 = OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_metadataWriteChannel;
  v12 = (objc_class *)type metadata accessor for CRLMemoryWriteChannel(0);
  v13 = objc_allocWithZone(v12);
  v14 = a5;
  *(_QWORD *)&a5[v11] = objc_msgSend(v13, "init");
  v15 = OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_objectsWriteChannel;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(v12), "init");
  sub_1004E90B0((uint64_t)v21, (uint64_t)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_pasteboardDataManaging]);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_itemMaxSize] = a2;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_store] = a3;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_context] = a4;
  v16 = a3;
  v17 = a4;

  v20.receiver = v14;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, "init");
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
  return v18;
}

double *sub_1009F3A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[7];
  uint64_t v11;
  double *v12;

  v1 = v0;
  v11 = type metadata accessor for URL(0);
  __chkstk_darwin(v11);
  v10[6] = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_101401320);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
  v6 = _swiftEmptyArrayStorage;
  if (v5 >= 1)
  {
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider__promisedDataTypes);
    if (!v7)
    {
      v10[1] = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider__promisedDataTypes;
      v12 = _swiftEmptyArrayStorage;
      static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.freeform.CRLNativeMetadata"));
      __asm { BR              X12 }
    }
    swift_bridgeObjectRetain(v7);
    return (double *)v8;
  }
  return v6;
}

double *sub_1009F3F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
  if (v4 < 1 || a3 < 1)
    return _swiftEmptyArrayStorage;
  v7 = a3;
  v10 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
  v11 = swift_allocObject(v10, 48, 7);
  v6 = (_QWORD *)v11;
  *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  if (v4 >= v7)
  {
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    do
    {
      swift_bridgeObjectRetain(a2);
      v12._countAndFlagsBits = 46;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      String.append(_:)(v13);
      swift_bridgeObjectRelease();
      v15 = v6[2];
      v14 = v6[3];
      if (v15 >= v14 >> 1)
        v6 = sub_100D0EF94((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
      v6[2] = v15 + 1;
      v16 = &v6[2 * v15];
      v16[4] = a1;
      v16[5] = a2;
      v7 -= v4;
    }
    while (v4 < (uint64_t)v7);
  }
  return (double *)v6;
}

uint64_t sub_1009F40F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  Swift::String v25;
  Swift::Bool v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t inited;
  uint64_t v37;
  __n128 v38;
  _BYTE v40[24];
  uint64_t v41;
  _BYTE v42[72];
  _BYTE v43[24];

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_fulfilledPromises);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_fulfilledPromises, v43, 0, 0);
  v14 = *v13;
  swift_bridgeObjectRetain(*v13);
  v15 = sub_100622CA4(a1, a2, v14);
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.freeform.CRLNativeMetadata"));
    if (v17 == a1 && v18 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v17, v18, 0);
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.freeform.CRLNativeData"));
        if (v21 == a1 && v22 == a2)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v24 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v21, v22, 0);
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
            v25._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("com.apple.freeform.CRLAsset."));
            v26 = String.hasPrefix(_:)(v25);
            v27 = swift_bridgeObjectRelease();
            if (v26)
            {
              v28 = *(_QWORD *)(v3
                              + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_assetPasteboardTypeToURLMap);
              if (*(_QWORD *)(v28 + 16))
              {
                swift_bridgeObjectRetain(a2);
                v29 = sub_100842E98(a1, a2);
                if ((v30 & 1) != 0)
                {
                  (*(void (**)(_BYTE *, unint64_t, uint64_t))(v10 + 16))(v8, *(_QWORD *)(v28 + 56) + *(_QWORD *)(v10 + 72) * v29, v9);
                  v31 = 0;
                }
                else
                {
                  v31 = 1;
                }
                (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v31, 1, v9);
                v38 = swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v38) != 1)
                {
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
                  v16 = sub_1009F47B4((uint64_t)v12);
                  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
                  goto LABEL_22;
                }
              }
              else
              {
                (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v27);
              }
              sub_1005534BC((uint64_t)v8);
            }
            else
            {
              v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
              inited = swift_initStackObject(v35, v42);
              *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
              *(_QWORD *)(inited + 56) = &type metadata for String;
              *(_QWORD *)(inited + 64) = sub_1004CFC2C();
              *(_QWORD *)(inited + 32) = a1;
              *(_QWORD *)(inited + 40) = a2;
              swift_bridgeObjectRetain(a2);
              sub_100757E04(&_mh_execute_header, (uint64_t)"fulfillPromises(forPasteboardType:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardNativeDataProvider.swift", 98, 2, 123, "Unexpected pasteboard type: %{public}@", 38, 2u, inited);
              sub_1004F5394(inited, (uint64_t)"fulfillPromises(forPasteboardType:)", 35, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardNativeDataProvider.swift", 98, 2u, 123, (uint64_t)"Unexpected pasteboard type: %{public}@", 38, 2u);
              swift_setDeallocating(inited);
              v37 = sub_1004B804C(&qword_1013E0190);
              swift_arrayDestroy(inited + 32, 1, v37);
            }
            v16 = 0;
LABEL_22:
            swift_beginAccess(v13, v40, 33, 0);
            swift_bridgeObjectRetain(a2);
            sub_100AD8690(&v41, a1, a2);
            swift_endAccess(v40);
            swift_bridgeObjectRelease();
            return v16;
          }
        }
        v32 = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData;
LABEL_21:
        sub_1009F4558(*(_QWORD *)(v3 + v32), *(_QWORD *)(v3 + v32 + 8));
        v16 = v33;
        goto LABEL_22;
      }
    }
    v32 = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData;
    goto LABEL_21;
  }
  return 0;
}

void sub_1009F4558(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1009F459C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  BOOL v22;
  uint64_t result;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (!BYTE6(v2))
    return 0;
  v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
  if (v30 >= BYTE6(v2))
    v3 = BYTE6(v2);
  else
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
  if (v3 < 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v4 = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_pasteboardDataManaging;
  v27 = Data.subdata(in:)(0, v3, a1, v2);
  v6 = BYTE6(v2) - v3;
  if (v6 >= 1)
  {
    v24 = (_QWORD *)(v1 + v4);
    v25 = v2;
    v7 = 1;
    v8 = a1;
    v9 = v5;
    while (1)
    {
      v10 = v30 >= v6 ? v6 : v30;
      v11 = v3 + v10;
      if (__OFADD__(v3, v10))
        break;
      if (v11 < v3)
        goto LABEL_24;
      v12 = Data.subdata(in:)(v3, v3 + v10, v8, v2);
      v14 = v12;
      v15 = v13;
      if (v9 >> 60 == 15)
      {
        v27 = v12;
        v9 = v13;
      }
      else
      {
        ((void (*)())swift_bridgeObjectRetain)();
        v16._countAndFlagsBits = 46;
        v16._object = (void *)0xE100000000000000;
        String.append(_:)(v16);
        v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        String.append(_:)(v17);
        swift_bridgeObjectRelease();
        v18 = v24[3];
        v19 = v24[4];
        sub_1004BB5A4(v24, v18);
        v20 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16);
        v21 = v19;
        v2 = v25;
        v20(v14, v15, v28, v29, v18, v21);
        sub_1004BBBC8(v14, v15);
        v8 = a1;
        swift_bridgeObjectRelease();
      }
      if (__OFADD__(v7, 1))
        goto LABEL_26;
      v22 = __OFSUB__(v6, v10);
      v6 -= v10;
      if (v22)
        goto LABEL_27;
      ++v7;
      v3 = v11;
      if (v6 <= 0)
        goto LABEL_21;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    JUMPOUT(0x1009F479CLL);
  }
  v9 = v5;
LABEL_21:
  result = v27;
  if (v9 >> 60 == 15)
    return 0;
  return result;
}

uint64_t sub_1009F47B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1009F4F68();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = sub_100C76648((uint64_t)v7);
  v11 = NSFileHandle.read(upToCount:)(*(_QWORD *)(v2
                                                + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize));
  if (v10 >> 60 != 15)
    __asm { BR              X10 }
  objc_msgSend(v8, "closeFile");

  return v11;
}

uint64_t type metadata accessor for CRLPasteboardNativeDataProvider()
{
  return objc_opt_self(_TtC8Freeform31CRLPasteboardNativeDataProvider);
}

id sub_1009F4DD8(uint64_t a1, uint64_t a2)
{
  return sub_1009F4E10(a1, a2, &OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData);
}

id sub_1009F4DF4(uint64_t a1, uint64_t a2)
{
  return sub_1009F4E10(a1, a2, &OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData);
}

id sub_1009F4E10(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  objc_class *Channel;
  char *v8;
  uint64_t *v9;
  objc_super v11;

  v4 = (uint64_t *)(*v3 + *a3);
  v5 = *v4;
  v6 = v4[1];
  Channel = (objc_class *)type metadata accessor for CRLMemoryReadChannel();
  v8 = (char *)objc_allocWithZone(Channel);
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC8Freeform20CRLMemoryReadChannel_data];
  *v9 = v5;
  v9[1] = v6;
  sub_1004BE310(v5, v6);
  v11.receiver = v8;
  v11.super_class = Channel;
  return objc_msgSendSuper2(&v11, "init");
}

uint64_t sub_1009F4E9C()
{
  sub_100757E04(&_mh_execute_header, (uint64_t)"readChannelForAsset(_:filename:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardNativeDataProvider.swift", 98, 2, 207, "Should not attempt to read assets to pasteboard.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"readChannelForAsset(_:filename:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardNativeDataProvider.swift", 98, 2u, 207, (uint64_t)"Should not attempt to read assets to pasteboard.", 48, 2u);
  return 0;
}

unint64_t sub_1009F4F68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101401318;
  if (!qword_101401318)
  {
    v1 = objc_opt_self(NSFileHandle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_101401318);
  }
  return result;
}

uint64_t sub_1009F4FA4(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  Swift::String v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  void (*v71)(char *, unint64_t, uint64_t, __n128);
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  int isUniquelyReferenced_nonNull_native;
  __n128 v77;
  void (*v78)(unint64_t, char *, uint64_t);
  _QWORD *v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  char v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char *v94;
  id v95;
  uint64_t result;
  uint64_t v97;
  int64_t v98;
  char *v99;
  objc_class *ObjectType;
  _QWORD *v101;
  uint64_t v102;
  int64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  const __CFString *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  int64_t v114;
  _QWORD *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  objc_super v120;

  v8 = v7;
  v116 = a6;
  ObjectType = (objc_class *)swift_getObjectType(v8);
  v15 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v15);
  v105 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v97 - v18;
  v20 = type metadata accessor for URL(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v108 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v106 = (char *)&v97 - v24;
  v113 = type metadata accessor for UUID(0);
  v111 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v117 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1004B804C(&qword_101401330);
  __chkstk_darwin(v26);
  v112 = (char *)&v97 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v110 = (uint64_t)&v97 - v29;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider__promisedDataTypes] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_fulfilledPromises] = &_swiftEmptySetSingleton;
  v101 = a1;
  sub_1004E90B0((uint64_t)a1, (uint64_t)&v8[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_pasteboardDataManaging]);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize] = a2;
  v30 = &v8[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData];
  v31 = a3;
  *(_QWORD *)v30 = a3;
  *((_QWORD *)v30 + 1) = a4;
  v32 = a4;
  v33 = (uint64_t *)&v8[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData];
  v34 = v116;
  *v33 = a5;
  v33[1] = v34;
  v107 = a7;
  v35 = *(_QWORD *)(a7 + 64);
  v102 = a7 + 64;
  v36 = 1 << *(_BYTE *)(a7 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v38 = v37 & v35;
  v99 = v8;
  v39 = v31;
  v40 = v111;
  v41 = v32;
  v42 = v113;
  v43 = v106;
  sub_1004BE310(v39, v41);
  sub_1004BE310(a5, v34);
  v114 = 0;
  v109 = CFSTR("com.apple.freeform.CRLAsset.");
  v103 = (unint64_t)(v36 + 63) >> 6;
  v98 = v103 - 1;
  v115 = _swiftEmptyDictionarySingleton;
  v104 = v19;
  while (1)
  {
    if (v38)
    {
      v116 = (v38 - 1) & v38;
      v46 = __clz(__rbit64(v38)) | (v114 << 6);
      v47 = v112;
LABEL_9:
      v48 = v107;
      (*(void (**)(char *, unint64_t, uint64_t))(v40 + 16))(v47, *(_QWORD *)(v107 + 48) + *(_QWORD *)(v40 + 72) * v46, v42);
      v49 = *(_QWORD *)(v48 + 56) + *(_QWORD *)(v21 + 72) * v46;
      v50 = sub_1004B804C(&qword_101401338);
      (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(&v47[*(int *)(v50 + 48)], v49, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v47, 0, 1, v50);
      goto LABEL_28;
    }
    v51 = v114 + 1;
    v47 = v112;
    if (__OFADD__(v114, 1))
      goto LABEL_47;
    if (v51 < v103)
    {
      v52 = *(_QWORD *)(v102 + 8 * v51);
      if (v52)
        goto LABEL_13;
      v53 = v114 + 2;
      ++v114;
      if (v51 + 1 < v103)
      {
        v52 = *(_QWORD *)(v102 + 8 * v53);
        if (v52)
          goto LABEL_16;
        v114 = v51 + 1;
        if (v51 + 2 < v103)
        {
          v52 = *(_QWORD *)(v102 + 8 * (v51 + 2));
          if (v52)
          {
            v51 += 2;
            goto LABEL_13;
          }
          v53 = v51 + 3;
          v114 = v51 + 2;
          if (v51 + 3 < v103)
            break;
        }
      }
    }
LABEL_27:
    v54 = sub_1004B804C(&qword_101401338);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v47, 1, 1, v54);
    v116 = 0;
LABEL_28:
    v55 = (uint64_t)v47;
    v56 = v110;
    sub_1004C4938(v55, v110, &qword_101401330);
    v57 = sub_1004B804C(&qword_101401338);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v56, 1, v57) == 1)
    {
      swift_release(v107);
      v94 = v99;
      *(_QWORD *)&v99[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_assetPasteboardTypeToURLMap] = v115;

      v120.receiver = v94;
      v120.super_class = ObjectType;
      v95 = objc_msgSendSuper2(&v120, "init");
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v101);
      return (uint64_t)v95;
    }
    v58 = v56 + *(int *)(v57 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v117, v56, v42);
    v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 32);
    v60 = v59(v43, v58, v20);
    v61 = UUID.uuidString.getter(v60);
    v63 = v62;
    v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v109);
    v119 = v64;
    swift_bridgeObjectRetain(v64);
    v65._countAndFlagsBits = v61;
    v65._object = v63;
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    v66 = swift_bridgeObjectRelease();
    v68 = v118;
    v67 = v119;
    (*(void (**)(char *, char *, uint64_t, __n128))(v21 + 16))(v19, v43, v20, v66);
    v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v69(v19, 0, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      v70 = (uint64_t)v19;
      v71 = (void (*)(char *, unint64_t, uint64_t, __n128))v59;
      sub_1005534BC(v70);
      v72 = (uint64_t)v115;
      swift_bridgeObjectRetain(v115);
      v73 = sub_100842E98(v68, v67);
      v75 = v74;
      swift_bridgeObjectRelease();
      if ((v75 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v72);
        v118 = v72;
        v42 = v113;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_100833578();
          v72 = v118;
        }
        v77 = swift_bridgeObjectRelease();
        v45 = (uint64_t)v105;
        v71(v105, *(_QWORD *)(v72 + 56) + *(_QWORD *)(v21 + 72) * v73, v20, v77);
        v115 = (_QWORD *)v72;
        sub_10051CF68(v73, v72);
        swift_bridgeObjectRelease();
        v44 = 0;
      }
      else
      {
        v44 = 1;
        v42 = v113;
        v45 = (uint64_t)v105;
      }
      v69((char *)v45, v44, 1, v20);
      swift_bridgeObjectRelease();
      sub_1005534BC(v45);
      v38 = v116;
      v19 = v104;
    }
    else
    {
      v78 = (void (*)(unint64_t, char *, uint64_t))v59;
      v59(v108, (uint64_t)v19, v20);
      v79 = v115;
      v80 = swift_isUniquelyReferenced_nonNull_native(v115);
      v118 = (uint64_t)v79;
      v82 = sub_100842E98(v68, v67);
      v83 = v79[2];
      v84 = (v81 & 1) == 0;
      v85 = v83 + v84;
      if (__OFADD__(v83, v84))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v86 = v81;
      if (v79[3] >= v85)
      {
        if ((v80 & 1) == 0)
          sub_100833578();
      }
      else
      {
        sub_100821C58(v85, v80);
        v87 = sub_100842E98(v68, v67);
        if ((v86 & 1) != (v88 & 1))
          goto LABEL_50;
        v82 = v87;
      }
      v38 = v116;
      v89 = (_QWORD *)v118;
      if ((v86 & 1) != 0)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v21 + 40))(*(_QWORD *)(v118 + 56) + *(_QWORD *)(v21 + 72) * v82, v108, v20);
      }
      else
      {
        *(_QWORD *)(v118 + 8 * (v82 >> 6) + 64) |= 1 << v82;
        v90 = (uint64_t *)(v89[6] + 16 * v82);
        *v90 = v68;
        v90[1] = v67;
        v78(v89[7] + *(_QWORD *)(v21 + 72) * v82, v108, v20);
        v91 = v89[2];
        v92 = __OFADD__(v91, 1);
        v93 = v91 + 1;
        if (v92)
          goto LABEL_48;
        v89[2] = v93;
        swift_bridgeObjectRetain(v67);
      }
      v115 = (_QWORD *)v118;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v106;
      v42 = v113;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v43, v20);
    v40 = v111;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v117, v42);
  }
  v52 = *(_QWORD *)(v102 + 8 * v53);
  if (v52)
  {
LABEL_16:
    v51 = v53;
LABEL_13:
    v116 = (v52 - 1) & v52;
    v46 = __clz(__rbit64(v52)) + (v51 << 6);
    v114 = v51;
    goto LABEL_9;
  }
  while (1)
  {
    v51 = v53 + 1;
    if (__OFADD__(v53, 1))
      break;
    if (v51 >= v103)
    {
      v114 = v98;
      goto LABEL_27;
    }
    v52 = *(_QWORD *)(v102 + 8 * v51);
    ++v53;
    if (v52)
      goto LABEL_13;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_1009F5800(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  _QWORD v20[5];
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a3;
  v3 = a2;
  v4 = a1;
  if (a2 >> 62)
    goto LABEL_11;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(v3);
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v19 = v3 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v7 = v19 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3) : *(id *)(v3 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      sub_1004E90B0(v24, (uint64_t)v20);
      sub_1009F59A0((uint64_t)v20, v21);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20);
      v10 = v5;
      v11 = v3;
      v12 = v22;
      v13 = v23;
      sub_1004BB5A4(v21, v22);
      v14 = v12;
      v3 = v11;
      v5 = v10;
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v14, v13);
      v20[0] = v4;
      swift_bridgeObjectRetain(v4);
      sub_10061FCD8(v15);
      v16 = v20[0];
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v21);
      swift_bridgeObjectRelease();

      v4 = v16;
      if (v9 == v10)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    __break(1u);
LABEL_11:
    if (v3 < 0)
      v17 = v3;
    else
      v17 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v3);
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1009F59A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  int *v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v19;
  id v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  Swift::String v25;
  _QWORD v26[40];
  _BYTE v27[320];
  _BYTE v28[48];

  v5 = (int *)type metadata accessor for CRLSpringLayerAnimation(0);
  __chkstk_darwin(v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for CRLBasicLayerAnimation(0);
  __chkstk_darwin(v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E90B0(a1, (uint64_t)v28);
  v11 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(v26, v28, v11, &type metadata for CRLBasicLayerAnimation.Def, 6))
  {
    memcpy(v27, v26, 0x12CuLL);
    a2[3] = v8;
    a2[4] = &off_10126D348;
    v12 = sub_10050D1B0(a2);
    sub_1004E91D4((uint64_t)v27, (uint64_t)v26);
    v13 = v2;
    UUID.init()(v13);
    v14 = &v10[v8[6]];
    swift_unknownObjectWeakInit(v14);
    v15 = &v10[v8[7]];
    v16 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v17(v15, 1, 1, v16);
    v17(&v10[v8[8]], 1, 1, v16);
    swift_unknownObjectWeakAssign(v14, v13);

    memcpy(v10, v26, 0x12CuLL);
    sub_1004B84E0((uint64_t)v10, (uint64_t)v12, type metadata accessor for CRLBasicLayerAnimation);
    return sub_1004E9210((uint64_t)v27);
  }
  else
  {
    memset(v26, 0, 300);
    sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_101406CB0);
    sub_1004E90B0(a1, (uint64_t)v28);
    if ((swift_dynamicCast(v26, v28, v11, &type metadata for CRLSpringLayerAnimation.Def, 6) & 1) != 0)
    {
      memcpy(v27, v26, 0x13CuLL);
      a2[3] = v5;
      a2[4] = &off_1012A12B8;
      v19 = sub_10050D1B0(a2);
      sub_100720EB4((uint64_t)v27, (uint64_t)v26);
      v20 = v2;
      UUID.init()(v20);
      v21 = &v7[v5[6]];
      swift_unknownObjectWeakInit(v21);
      v22 = &v7[v5[7]];
      v23 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
      v24(v22, 1, 1, v23);
      v24(&v7[v5[8]], 1, 1, v23);
      swift_unknownObjectWeakAssign(v21, v20);

      memcpy(v7, v26, 0x13CuLL);
      sub_1004B84E0((uint64_t)v7, (uint64_t)v19, type metadata accessor for CRLSpringLayerAnimation);
      return sub_100635C68((uint64_t)v27);
    }
    else
    {
      memset(v26, 0, 304);
      v26[38] = 1;
      LODWORD(v26[39]) = 0;
      sub_1004CB800((uint64_t)v26, &qword_1013E1FD0);
      sub_1004E90B0(a1, (uint64_t)v27);
      v26[0] = 0;
      v26[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(36);
      v25._object = (void *)0x8000000100FEAAA0;
      v25._countAndFlagsBits = 0xD000000000000022;
      String.append(_:)(v25);
      _print_unlocked<A, B>(_:_:)(v27, v26, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v26[0], v26[1], "Freeform/CRLLayerAnimatable.swift", 33, 2, 93, 0);
      __break(1u);
    }
  }
  return result;
}

double sub_1009F5DC4()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  if (*(_BYTE *)(v0 + 64) == 1)
  {
    sub_1004E90B0(v0 + 24, (uint64_t)v9);
    v2 = 0.0;
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    sub_1004BB5A4((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
    v2 = (*(double (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 8))(v4);
    sub_1004E90B0(v1 + 24, (uint64_t)v9);
    v6 = v10;
    v5 = v11;
    sub_1004CB9AC((uint64_t)v9, v10);
    (*(void (**)(uint64_t, double))(*(_QWORD *)(v5 + 32) + 16))(v6, 0.0);
  }
  v7 = sub_1004B9E5C();
  sub_1009F5800((uint64_t)_swiftEmptyArrayStorage, (unint64_t)v7, (uint64_t)v9);
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v9);
  return v2;
}

void sub_1009F5EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  double *v6;
  _QWORD *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  char v30;
  void *v31;
  int v32;
  id Strong;
  id v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(__int128 *, uint64_t, uint64_t);
  id v59;
  id v60;
  void (*v61)(__int128 *, _QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  id v67;
  char *v68;
  char *v69;
  __int128 v70;
  __int128 v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _BYTE v76[32];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  char v87;
  char v88;
  _OWORD v89[8];
  __int128 v90;
  __int128 v91;
  _OWORD v92[8];
  char v93;
  _BYTE v94[136];
  _BYTE v95[136];
  __int128 v96;
  __int128 v97;
  char v98;
  id v99;
  unsigned __int8 v100;
  char v101;
  _QWORD v102[3];
  uint64_t v103;
  uint64_t v104;

  v1 = v0;
  v2 = type metadata accessor for CRLRepAnimation(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100756CD8(v1, (uint64_t)&v96);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(&v96);
  sub_1004BAB64((uint64_t)&v96);
  if (!v5)
  {
    sub_1009A3BE4((uint64_t)_swiftEmptyArrayStorage, 0.0);
    return;
  }
  v73 = v1;
  sub_1009F6AAC(v1, (uint64_t)v4);
  v4[64] = 1;
  sub_1004E90B0((uint64_t)(v4 + 24), (uint64_t)&v96);
  v6 = sub_1004B9E5C();
  v7 = (_QWORD *)sub_1009F5800((uint64_t)_swiftEmptyArrayStorage, (unint64_t)v6, (uint64_t)&v96);
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v96);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLRepAnimation);
  v8 = objc_msgSend(v5, "allPlatformViews", swift_bridgeObjectRetain(v7).n128_f64[0]);
  v9 = sub_1009F6AF0();
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  *(_QWORD *)&v96 = _swiftEmptyArrayStorage;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v21 = v10;
    else
      v21 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v11 = _CocoaArrayWrapper.endIndex.getter(v21);
    v12 = v73;
    if (v11)
      goto LABEL_4;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v10);
    v12 = v73;
    if (v11)
    {
LABEL_4:
      if (v11 < 1)
        goto LABEL_56;
      v75 = v7;
      for (i = 0; i != v11; ++i)
      {
        if ((v10 & 0xC000000000000001) != 0)
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
        else
          v15 = *(id *)(v10 + 8 * i + 32);
        v16 = v15;
        v17 = objc_msgSend(v15, "layer");

        if (v17)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
          v20 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v19 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v20 >= v19 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
          v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
          specialized Array._endMutation()(v14);
        }
      }
      swift_bridgeObjectRelease();
      v7 = v75;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v7[2];
  swift_bridgeObjectRelease();
  v74 = v22;
  if (!v22)
  {

    return;
  }
  v23 = 0;
  v24 = (_QWORD *)(v12 + 24);
  v66 = v92;
  v67 = v5;
  v68 = (char *)&v96 + 8;
  v69 = &v98;
  v25 = 4;
  v72 = (_QWORD *)(v12 + 24);
  while (v23 < v7[2])
  {
    v75 = v7;
    sub_1004E90B0((uint64_t)&v7[v25], (uint64_t)v102);
    v27 = *(_QWORD *)(v12 + 48);
    v26 = *(_QWORD *)(v12 + 56);
    sub_1004BB5A4(v24, v27);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v26 + 56))(&v96, v27, v26);
    if (v101 == 58)
    {
      v28 = v96;
      v29 = v97;
      v30 = v98;
      v31 = v99;
      v32 = v100;
      Strong = v99;
      if (!v99)
      {
        v70 = v97;
        v71 = v96;
        sub_100756CD8(v12, (uint64_t)&v96);
        Strong = (id)swift_unknownObjectWeakLoadStrong(v68);
        sub_1004BAB64((uint64_t)&v96);
        if (Strong)
        {
          v34 = objc_msgSend(Strong, "renderableForRep:", v67);

          if (v34)
          {
            Strong = objc_msgSend(v34, "layer");

          }
          else
          {
            Strong = 0;
          }
        }
        v29 = v70;
        v28 = v71;
      }
      if (v32 == 2)
        v55 = 0;
      else
        v55 = v32;
      v96 = v28;
      v97 = v29;
      v98 = v30;
      v99 = Strong;
      v100 = v55;
      v101 = 58;
      v56 = v103;
      v57 = v104;
      sub_1004CB9AC((uint64_t)v102, v103);
      v58 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v57 + 104);
      v59 = Strong;
      v60 = v31;
      v61 = (void (*)(__int128 *, _QWORD))v58(&v77, v56, v57);
      v63 = *(_QWORD *)(v62 + 24);
      v64 = *(_QWORD *)(v62 + 32);
      sub_1004CB9AC(v62, v63);
      v65 = v63;
      v24 = v72;
      (*(void (**)(__int128 *, uint64_t, uint64_t))(v64 + 64))(&v96, v65, v64);
      v61(&v77, 0);

      goto LABEL_46;
    }
    sub_1004EA730(&v96);
    v35 = *(_QWORD *)(v12 + 48);
    v36 = *(_QWORD *)(v12 + 56);
    sub_1004BB5A4(v24, v35);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v36 + 56))(&v96, v35, v36);
    if (v101 != 59)
    {
      sub_1004EA730(&v96);
LABEL_46:
      v7 = v75;
      goto LABEL_47;
    }
    v37 = v96;
    v38 = v97;
    sub_10056B6C4((uint64_t)v69, (uint64_t)v94);
    sub_10056B6C4((uint64_t)v94, (uint64_t)v95);
    if (sub_10056B70C((uint64_t)v95) != 1)
      goto LABEL_36;
    v39 = v103;
    v40 = v104;
    v41 = sub_1004BB5A4(v102, v103);
    v42 = *(_QWORD *)(v39 - 8);
    v43 = __chkstk_darwin(v41);
    v45 = (char *)&v66 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v42 + 16))(v45, v43);
    v46 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 64))(v39, v40);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v39);
    if (!v46)
    {
      v24 = v72;
      v12 = v73;
LABEL_36:
      sub_1004E90B0((uint64_t)v102, (uint64_t)&v77);
      v7 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_100D14F8C(v7);
      if (v23 >= v7[2])
        goto LABEL_55;
      v53 = (uint64_t)&v7[v25];
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v7[v25]);
      v54 = &v77;
      goto LABEL_23;
    }
    objc_msgSend(v46, "transform");
    v89[0] = v77;
    v89[1] = v78;
    v89[2] = v79;
    v89[3] = v80;
    v89[4] = v81;
    v89[5] = v82;
    v89[6] = v83;
    v89[7] = v84;
    sub_1009F6B2C((uint64_t)v89);
    v90 = v37;
    v91 = v38;
    sub_10056B6C4((uint64_t)v89, (uint64_t)v66);
    v85 = v92[6];
    v86 = v92[7];
    v87 = v93;
    v81 = v92[2];
    v82 = v92[3];
    v83 = v92[4];
    v84 = v92[5];
    v77 = v90;
    v78 = v91;
    v79 = v92[0];
    v80 = v92[1];
    v88 = 59;
    v47 = v103;
    v48 = v104;
    sub_1004CB9AC((uint64_t)v102, v103);
    v49 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v48 + 104))(v76, v47, v48);
    v51 = *(_QWORD *)(v50 + 24);
    v52 = *(_QWORD *)(v50 + 32);
    sub_1004CB9AC(v50, v51);
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v52 + 64))(&v77, v51, v52);
    v49(v76, 0);

    v7 = v75;
    v24 = v72;
LABEL_47:
    sub_1004E90B0((uint64_t)v102, (uint64_t)&v96);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_100D14F8C(v7);
    v12 = v73;
    if (v23 >= v7[2])
      goto LABEL_54;
    v53 = (uint64_t)&v7[v25];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(&v7[v25]);
    v54 = &v96;
LABEL_23:
    sub_1004DB728(v54, v53);
    ++v23;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v102);
    v25 += 5;
    if (v74 == v23)
    {

      return;
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
}

uint64_t sub_1009F6628()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  _BOOL8 v20;
  uint64_t v22;

  v1 = (uint64_t)v0;
  v2 = sub_1004B804C(&qword_1013E06C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - v6;
  v8 = type metadata accessor for CRLRepAnimation(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v22 - v12;
  v14 = v0[6];
  v15 = v0[7];
  sub_1004BB5A4(v0 + 3, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 184))(v14, v15);
  sub_1009F6AAC(v1, (uint64_t)v13);
  if ((v16 & 1) != 0)
  {
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLRepAnimation);
    sub_1009F6AAC(v1, (uint64_t)v10);
LABEL_5:
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLRepAnimation);
    return 1;
  }
  sub_1009F7820((uint64_t)&v13[*(int *)(v8 + 28)], (uint64_t)v7);
  sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLRepAnimation);
  v17 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
  v19 = v18(v7, 1, v17);
  sub_1004CB800((uint64_t)v7, &qword_1013E06C0);
  sub_1009F6AAC(v1, (uint64_t)v10);
  if (v19 != 1)
    goto LABEL_5;
  sub_1009F7820((uint64_t)&v10[*(int *)(v8 + 32)], (uint64_t)v4);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLRepAnimation);
  v20 = v18(v4, 1, v17) != 1;
  sub_1004CB800((uint64_t)v4, &qword_1013E06C0);
  return v20;
}

uint64_t sub_1009F6844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1009F7820(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1009F6854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1009F7820(v2 + *(int *)(a1 + 32), a2);
}

uint64_t sub_1009F6864()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 64) & 1) == 0)
  {
    v1 = (_QWORD *)(v0 + 24);
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    sub_1004BB5A4(v1, v2);
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 8))(v2);
  }
  return result;
}

uint64_t sub_1009F68B0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + 24;
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  sub_1004CB9AC(v3, v4);
  return (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)(v5 + 32) + 16))(v4, a1);
}

uint64_t (*sub_1009F68FC(uint64_t a1))(double *a1)
{
  uint64_t v1;
  double v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = 0.0;
  if ((*(_BYTE *)(v1 + 64) & 1) == 0)
  {
    v4 = (_QWORD *)(v1 + 24);
    v6 = *(_QWORD *)(v1 + 48);
    v5 = *(_QWORD *)(v1 + 56);
    sub_1004BB5A4(v4, v6);
    v3 = (*(double (**)(uint64_t))(*(_QWORD *)(v5 + 32) + 8))(v6);
  }
  *(double *)a1 = v3;
  return sub_1009F6964;
}

uint64_t sub_1009F6964(double *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((_QWORD *)a1 + 1);
  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  sub_1004CB9AC(v1 + 24, v3);
  return (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)(v4 + 32) + 16))(v3, v2);
}

uint64_t sub_1009F69B4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + 3;
  v2 = v0[6];
  v3 = v0[7];
  sub_1004BB5A4(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 32))(v2);
}

double sub_1009F69F0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  v2 = v0 + 3;
  v4 = v0[6];
  v3 = v0[7];
  sub_1004BB5A4(v2, v4);
  v5 = (*(double (**)(uint64_t))(*(_QWORD *)(v3 + 32) + 8))(v4);
  v7 = v1[6];
  v6 = v1[7];
  sub_1004BB5A4(v2, v7);
  return v5 + (*(double (**)(uint64_t))(*(_QWORD *)(v6 + 32) + 32))(v7);
}

uint64_t type metadata accessor for CRLRepAnimation(uint64_t a1)
{
  uint64_t result;

  result = qword_101401398;
  if (!qword_101401398)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLRepAnimation);
  return result;
}

uint64_t sub_1009F6AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLRepAnimation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1009F6AF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013DFC10;
  if (!qword_1013DFC10)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013DFC10);
  }
  return result;
}

uint64_t sub_1009F6B2C(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_1009F6B34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v33;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v15);
  }
  else
  {
    swift_unknownObjectWeakCopyInit(a1, a2);
    swift_unknownObjectWeakCopyInit(v4 + 8, a2 + 1);
    *(_QWORD *)(v4 + 16) = a2[2];
    v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(v4 + 48) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v4 + 24, (uint64_t)(a2 + 3));
    *(_BYTE *)(v4 + 64) = *((_BYTE *)a2 + 64);
    v8 = *(int *)(a3 + 28);
    v9 = (char *)(v4 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      v14 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      v17 = *(int *)(v11 + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      v20 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v20;
      v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56);
      v22 = swift_retain(v20);
      v21(v9, 0, 1, v11, v22);
    }
    v23 = *(int *)(a3 + 32);
    v24 = (char *)(v4 + v23);
    v25 = (char *)a2 + v23;
    if (v13(v25, 1, v11))
    {
      v26 = sub_1004B804C(&qword_1013E06C0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = *(int *)(v11 + 20);
      v29 = &v24[v28];
      v30 = &v25[v28];
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *((_QWORD *)v29 + 1) = v31;
      v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56);
      v33 = swift_retain(v31);
      v32(v24, 0, 1, v11, v33);
    }
  }
  return v4;
}

double sub_1009F6D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;

  swift_unknownObjectWeakDestroy(a1);
  swift_unknownObjectWeakDestroy(a1 + 8);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
    v7 = swift_release(*(_QWORD *)(v4 + *(int *)(v5 + 20) + 8));
  }
  v9 = a1 + *(int *)(a2 + 32);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v6)(v9, 1, v5, v7))
  {
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
    *(_QWORD *)&result = swift_release(*(_QWORD *)(v9 + *(int *)(v5 + 20) + 8)).n128_u64[0];
  }
  return result;
}

uint64_t sub_1009F6E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v32;

  v6 = swift_unknownObjectWeakCopyInit(a1, a2);
  swift_unknownObjectWeakCopyInit(v6 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 24, a2 + 24);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(int *)(a3 + 28);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    v16 = *(int *)(v11 + 20);
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56);
    v21 = swift_retain(v19);
    v20(v9, 0, 1, v11, v21);
  }
  v22 = *(int *)(a3 + 32);
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  if (v13(v24, 1, v11))
  {
    v25 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
    v27 = *(int *)(v11 + 20);
    v28 = &v23[v27];
    v29 = &v24[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v12 + 56);
    v32 = swift_retain(v30);
    v31(v23, 0, 1, v11, v32);
  }
  return a1;
}

uint64_t sub_1009F6FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = swift_unknownObjectWeakCopyAssign(a1, a2);
  swift_unknownObjectWeakCopyAssign(v6 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1004EA5C8((_QWORD *)(a1 + 24), (_QWORD *)(a2 + 24));
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(int *)(a3 + 28);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v8, v9, v15);
      v16 = *(int *)(v10 + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v19;
      v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v11 + 56);
      v21 = swift_retain(v19);
      v20(v8, 0, 1, v10, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_6:
    v22 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v37 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v8, v9, v37);
  v38 = *(int *)(v10 + 20);
  v39 = &v8[v38];
  v40 = &v9[v38];
  v41 = *((_QWORD *)v40 + 1);
  v42 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  swift_retain(v41);
  swift_release(v42);
LABEL_7:
  v23 = *(int *)(a3 + 32);
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = v12((char *)(a1 + v23), 1, v10);
  v27 = v12(v25, 1, v10);
  if (!v26)
  {
    if (!v27)
    {
      v43 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v24, v25, v43);
      v44 = *(int *)(v10 + 20);
      v45 = &v24[v44];
      v46 = &v25[v44];
      v47 = *((_QWORD *)v46 + 1);
      v48 = *((_QWORD *)v45 + 1);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = v47;
      swift_retain(v47);
      swift_release(v48);
      return a1;
    }
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v35 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  v28 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
  v29 = *(int *)(v10 + 20);
  v30 = &v24[v29];
  v31 = &v25[v29];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v11 + 56);
  v34 = swift_retain(v32);
  v33(v24, 0, 1, v10, v34);
  return a1;
}

uint64_t sub_1009F7270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = swift_unknownObjectWeakTakeInit(a1, a2);
  swift_unknownObjectWeakTakeInit(v6 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = *(int *)(a3 + 28);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v10 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v8, v9, v14);
    *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = *(int *)(a3 + 32);
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  if (v12(v17, 1, v10))
  {
    v18 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    *(_OWORD *)&v16[*(int *)(v10 + 20)] = *(_OWORD *)&v17[*(int *)(v10 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1009F740C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = swift_unknownObjectWeakTakeAssign(a1, a2);
  swift_unknownObjectWeakTakeAssign(v6 + 8, a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(int *)(a3 + 28);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      v15 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
      *(_OWORD *)&v8[*(int *)(v10 + 20)] = *(_OWORD *)&v9[*(int *)(v10 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_6:
    v16 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v25 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v8, v9, v25);
  v26 = *(int *)(v10 + 20);
  v27 = *(_QWORD *)&v8[v26 + 8];
  *(_OWORD *)&v8[v26] = *(_OWORD *)&v9[v26];
  swift_release(v27);
LABEL_7:
  v17 = *(int *)(a3 + 32);
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = v12((char *)(a1 + v17), 1, v10);
  v21 = v12(v19, 1, v10);
  if (!v20)
  {
    if (!v21)
    {
      v28 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v18, v19, v28);
      v29 = *(int *)(v10 + 20);
      v30 = *(_QWORD *)&v18[v29 + 8];
      *(_OWORD *)&v18[v29] = *(_OWORD *)&v19[v29];
      swift_release(v30);
      return a1;
    }
    sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v23 = sub_1004B804C(&qword_1013E06C0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  v22 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v18, v19, v22);
  *(_OWORD *)&v18[*(int *)(v10 + 20)] = *(_OWORD *)&v19[*(int *)(v10 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
  return a1;
}

uint64_t sub_1009F7688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009F7694);
}

uint64_t sub_1009F7694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1004B804C(&qword_1013E06C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1009F7714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009F7720);
}

uint64_t sub_1009F7720(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 48) = (a2 - 1);
  }
  else
  {
    v7 = sub_1004B804C(&qword_1013E06C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1009F7798(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  v4[0] = &unk_100F21708;
  v4[1] = &unk_100F21720;
  v4[2] = &unk_100F21738;
  sub_1004EAE54(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_1009F7820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E06C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1009F7868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id i;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for CRLBoardItem(0);
    v5 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    v1 = v27[0];
    v25 = v27[1];
    v7 = v27[2];
    v8 = v27[3];
    v9 = v27[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
LABEL_11:
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
    goto LABEL_32;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 < v13)
    {
      v22 = *(_QWORD *)(v25 + 8 * v21);
      v16 = v8 + 1;
      if (v22)
        goto LABEL_31;
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_36;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (v22)
        goto LABEL_31;
      v16 = v8 + 3;
      if (v8 + 3 >= v13)
        goto LABEL_36;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (v22)
        goto LABEL_31;
      v16 = v8 + 4;
      if (v8 + 4 >= v13)
        goto LABEL_36;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (v22)
      {
LABEL_31:
        v14 = (v22 - 1) & v22;
        v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
        for (i = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15); i; v14 = v9)
        {
          v24 = type metadata accessor for CRLConnectionLineItem(0);
          if (swift_dynamicCastClass(i, v24))
            break;

          v8 = v16;
          v9 = v14;
          if ((v1 & 0x8000000000000000) == 0)
            goto LABEL_11;
LABEL_13:
          v17 = __CocoaSet.Iterator.next()(v6);
          if (!v17)
            break;
          v18 = v17;
          v26 = v17;
          v19 = type metadata accessor for CRLBoardItem(0);
          swift_unknownObjectRetain(v18);
          swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
          i = v28;
          swift_unknownObjectRelease(v18);
          v16 = v8;
        }
        goto LABEL_36;
      }
      v16 = v8 + 5;
      if (v8 + 5 < v13)
      {
        v22 = *(_QWORD *)(v25 + 8 * v16);
        if (!v22)
        {
          v23 = v8 + 6;
          while (v13 != v23)
          {
            v22 = *(_QWORD *)(v25 + 8 * v23++);
            if (v22)
            {
              v16 = v23 - 1;
              goto LABEL_31;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_31;
      }
    }
LABEL_36:
    sub_1004D284C(v1);
    return;
  }
  __break(1u);
}

uint64_t sub_1009F7B1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1009F7B58 + 4 * byte_100F21790[a1]))(0xD00000000000001ELL, 0x8000000100FEAE00);
}

unint64_t sub_1009F7B58()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1009F7BA0()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_1009F7BB0()
{
  uint64_t v0;

  return v0 + 4;
}

void sub_1009F7BC0()
{
  JUMPOUT(0x1009F7BCCLL);
}

uint64_t sub_1009F7BD8()
{
  return 0x73697370696C6C65;
}

void sub_1009F7BF0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1009F7C1C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_1009F7FC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1009F7FF8 + 4 * byte_100F21799[a1]))(0xD000000000000011, 0x8000000100FEAE40);
}

uint64_t sub_1009F7FF8()
{
  return 0x656C63726963;
}

uint64_t sub_1009F800C()
{
  return 0x656C676E61697274;
}

uint64_t sub_1009F8024()
{
  return 0x6E6F67796C6F70;
}

uint64_t sub_1009F803C()
{
  return 0x657261757173;
}

uint64_t sub_1009F8050()
{
  return 0x646E6F6D616964;
}

uint64_t sub_1009F807C()
{
  return 0x6C656C6C61726170;
}

uint64_t sub_1009F80A0()
{
  return 0x726568746FLL;
}

void sub_1009F80B4(char a1)
{
  __asm { BR              X10 }
}

id sub_1009F8100()
{
  double v0;
  double v1;

  return objc_msgSend(objc_allocWithZone((Class)CRLScalarPathSource), "initWithType:scalar:naturalSize:continuousCurve:", 0, 1, (v1 + v0) * 0.075, v1, v0);
}

#error "1009F844C: call analysis failed (funcsize=104)"

uint64_t sub_1009F8534(unsigned __int8 a1)
{
  int v1;
  uint64_t result;

  v1 = a1;
  result = 5;
  switch(v1)
  {
    case 0:
      result = 4;
      break;
    case 1:
      return result;
    case 2:
      result = 6;
      break;
    case 3:
      result = 13;
      break;
    case 4:
      result = 3;
      break;
    case 5:
      result = 10;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

void sub_1009F85B0(_QWORD *a1@<X8>)
{
  *a1 = &off_101263960;
}

uint64_t sub_1009F85C0()
{
  unsigned __int8 *v0;

  return sub_1009F7FC0(*v0);
}

id sub_1009F867C()
{
  return sub_1004C3370(type metadata accessor for CRLMiniShapePickerHelper);
}

uint64_t type metadata accessor for CRLMiniShapePickerHelper()
{
  return objc_opt_self(_TtC8Freeform24CRLMiniShapePickerHelper);
}

char *sub_1009F8728(_BOOL8 a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  objc_class *v6;
  char *v13;
  char *v14;

  v13 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController] = 0;
  v14 = sub_100BF17A8(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
  return v14;
}

char *sub_1009F87CC(char a1, _QWORD *a2, double a3, double a4)
{
  _BYTE *v4;
  double *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double *v25;
  double (*v26)(double, double);
  __int128 v27;
  __int128 v28;
  double (**v29)(double, double);
  id v30;
  BOOL v31;
  id v32;
  char *v33;
  uint64_t v34;
  objc_super v36;
  _BYTE v37[88];
  _OWORD v38[5];
  _QWORD v39[10];
  char v40;

  v9 = (double *)&v4[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  *v9 = 0.0;
  v9[1] = 0.0;
  v4[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = 0;
  v10 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets;
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_1008D7828((uint64_t)_swiftEmptyArrayStorage);
  if (a3 != 0.0 && a4 != 0.0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 110, "One dimension of defaultSize should be 0 to indicate autosizing.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2u, 110, (uint64_t)"One dimension of defaultSize should be 0 to indicate autosizing.", 64, 2u);
  }
  v12 = type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = sub_100BECFBC();
  KeyPath = swift_getKeyPath(&unk_100F21838);
  v15 = swift_getKeyPath(&unk_100F21860);
  LOBYTE(v39[0]) = 1;
  swift_retain(v13);
  static Published.subscript.setter(v39, v13, KeyPath, v15);
  v16 = swift_getKeyPath(&unk_100F21880);
  v17 = swift_getKeyPath(&unk_100F218A8);
  *(double *)v39 = a3;
  *(double *)&v39[1] = a4;
  swift_retain(v13);
  static Published.subscript.setter(v39, v13, v16, v17);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostProxy] = v13;
  v18 = sub_1004B7878(&qword_101401460, type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy, (uint64_t)&unk_100F2CC4C);
  v19 = swift_retain_n(v13, 2);
  v20 = ObservedObject.init(wrappedValue:)(v19, v12, v18);
  v22 = v21;
  sub_10093E108((uint64_t)a2, (uint64_t)v39);
  v39[8] = v20;
  v39[9] = v22;
  v40 = 0;
  sub_1004CB7BC((uint64_t)v39, (uint64_t)v38, &qword_101401468);
  v23 = (char *)objc_allocWithZone((Class)sub_1004B804C(&qword_101401470));
  *(_QWORD *)&v23[*(_QWORD *)(qword_101409030 + (swift_isaMask & *(_QWORD *)v23) + 16)] = 0;
  sub_1004CB7BC((uint64_t)v38, (uint64_t)v37, &qword_101401468);
  v24 = UIHostingController.init(rootView:)(v37);
  sub_1004CB800((uint64_t)v38, &qword_101401468);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController] = v24;
  v25 = (double *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  *v25 = a3;
  v25[1] = a4;
  *v9 = a3;
  v9[1] = a4;
  sub_10093E108((uint64_t)a2, (uint64_t)v38);
  v26 = (double (*)(double, double))swift_allocObject(&unk_101290448, 80, 7);
  v27 = v38[1];
  *((_OWORD *)v26 + 1) = v38[0];
  *((_OWORD *)v26 + 2) = v27;
  v28 = v38[3];
  *((_OWORD *)v26 + 3) = v38[2];
  *((_OWORD *)v26 + 4) = v28;
  v29 = (double (**)(double, double))&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_calculatePreliminaryFittingSize];
  *v29 = sub_1009FA860;
  v29[1] = v26;
  v30 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v30, "setAlwaysBounceHorizontal:", 0);
  objc_msgSend(v30, "setAlwaysBounceVertical:", 0);
  if (a1 == 2)
    v31 = a4 == 0.0;
  else
    v31 = a1;
  if (a1 == 2)
    a1 = a3 == 0.0;
  objc_msgSend(v30, "setShowsVerticalScrollIndicator:", v31);
  objc_msgSend(v30, "setShowsHorizontalScrollIndicator:", a1 & 1);
  *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView] = v30;
  v32 = v30;

  v36.receiver = v11;
  v36.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  v33 = (char *)objc_msgSendSuper2(&v36, "initWithNibName:bundle:", 0, 0);
  v34 = ObservableObject<>.objectWillChange.getter(v12, v18);
  ObservableObjectPublisher.send()();
  swift_release(v34);
  swift_unknownObjectWeakAssign(v13 + 16, v33);
  objc_msgSend(v33, "setPreferredContentSize:", *(double *)&v33[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize], *(double *)&v33[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8]);
  swift_release(v13);

  sub_1009FA7F0(a2);
  sub_1004CB800((uint64_t)v39, &qword_101401468);
  return v33;
}

void sub_1009F8CD8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v3 = OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController);
  if (v4)
  {
    v5 = objc_msgSend(v4, "changeNotifier");
    if (v5)
    {
      v6 = v5;
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v1
                                           + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems));
        v8 = (void *)sub_100857E90(v7);
        v9 = objc_msgSend(v8, "parentContainerItem", swift_bridgeObjectRelease().n128_f64[0]);

      }
      else
      {
        v9 = 0;
      }
      v10 = sub_1004B804C(&qword_101401448);
      v11 = Optional._bridgeToObjectiveC()(v10);

      objc_msgSend(v6, "addObserver:forChangeSource:", v2, v11, v9);
      *(_QWORD *)&a1 = swift_unknownObjectRelease(v11).n128_u64[0];
    }
  }
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems))
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2
                                       + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems));
    sub_1009F7868(v12);
    v14 = v13;
    *(_QWORD *)&a1 = swift_bridgeObjectRelease().n128_u64[0];
    v15 = *(void **)(v2 + v3);
    if (!v15)
      goto LABEL_13;
  }
  else
  {
    v14 = 0;
    v15 = *(void **)(v2 + v3);
    if (!v15)
      goto LABEL_13;
  }
  v16 = objc_msgSend(v15, "changeNotifier", a1);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1004B804C(&qword_101401440);
    v19 = Optional._bridgeToObjectiveC()(v18);
    objc_msgSend(v17, "addObserver:forChangeSource:", v2, v19, v14);

    swift_unknownObjectRelease(v19);
  }
LABEL_13:

}

void sub_1009F8E70(char a1)
{
  char *v1;
  char *v2;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  objc_super v25;

  v2 = v1;
  v25.receiver = v2;
  v25.super_class = (Class)type metadata accessor for CRLiOSMiniShapePickerHostingController();
  objc_msgSendSuper2(&v25, "viewDidDisappear:", a1 & 1);
  v5 = OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController;
  v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController];
  if (v6)
  {
    objc_msgSend(v6, "removeDecorator:", v2);
    v7 = *(void **)&v2[v5];
    if (v7)
    {
      v8 = objc_msgSend(v7, "changeNotifier");
      if (v8)
      {
        v9 = v8;
        if (*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems])
        {
          swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems]);
          v11 = (void *)sub_100857E90(v10);
          v12 = objc_msgSend(v11, "parentContainerItem", swift_bridgeObjectRelease().n128_f64[0]);

        }
        else
        {
          v12 = 0;
        }
        v13 = sub_1004B804C(&qword_101401448);
        v14 = Optional._bridgeToObjectiveC()(v13);

        objc_msgSend(v9, "removeObserver:forChangeSource:", v2, v14, v12);
        v4 = swift_unknownObjectRelease(v14).n128_u64[0];
      }
    }
  }
  v15 = OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems])
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems]);
    sub_1009F7868(v16);
    v18 = v17;
    v4 = swift_bridgeObjectRelease().n128_u64[0];
    v19 = *(void **)&v2[v5];
    if (!v19)
      goto LABEL_14;
  }
  else
  {
    v18 = 0;
    v19 = *(void **)&v2[v5];
    if (!v19)
      goto LABEL_14;
  }
  v20 = objc_msgSend(v19, "changeNotifier", *(double *)&v4);
  if (v20)
  {
    v21 = v20;
    v22 = sub_1004B804C(&qword_101401440);
    v23 = Optional._bridgeToObjectiveC()(v22);
    objc_msgSend(v21, "removeObserver:forChangeSource:", v2, v23, v18);

    swift_unknownObjectRelease(v23);
  }
LABEL_14:
  *(_QWORD *)&v2[v15] = 0;
  swift_bridgeObjectRelease();
  v24 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = 0;

}

void sub_1009F9098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double *v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  void *i;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  _BYTE v44[24];
  id v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController);
  if (v4)
  {
    v5 = v2;
    v7 = objc_msgSend(v4, "layerHost");
    if (v7)
    {
      v8 = v7;
      if ((objc_msgSend(v7, "respondsToSelector:", "asiOSCVC") & 1) == 0)
      {
        swift_unknownObjectRelease(v8);
        return;
      }
      v43 = objc_msgSend(v8, "asiOSCVC");
      v9 = objc_msgSend(v43, "presentedViewController", swift_unknownObjectRelease(v8).n128_f64[0]);
      if (!v9)
      {
LABEL_8:

        return;
      }
      v10 = v9;
      v11 = type metadata accessor for CRLiOSMiniShapePickerHostingController();
      v12 = (void *)swift_dynamicCastClass(v10, v11);
      if (!v12 || (v13 = v12, (objc_msgSend(v12, "isBeingDismissed") & 1) != 0))
      {

        goto LABEL_8;
      }
      sub_1004CB6E8(a2, (uint64_t)&v46);
      v14 = type metadata accessor for CRLContainerItem(0);
      if (swift_dynamicCast(v45, &v46, (char *)&type metadata for Any + 8, v14, 6))
      {
        v15 = (char *)v45[0];
        v16 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
        v17 = *(double **)((char *)v45[0] + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
        if (!v17)
        {
          sub_100740DA4();
          v17 = *(double **)&v15[v16];
        }
        if (v17)
          v18 = v17;
        else
          v18 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v17);

        v19 = *(_QWORD *)(v5 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems);
        if (v19)
        {
          swift_bridgeObjectRetain(v19);
          sub_1009FA484(v20, (uint64_t)v18);
          v22 = v21;
          swift_bridgeObjectRelease();
          if ((v22 & 0xC000000000000001) != 0)
            v23 = __CocoaSet.count.getter(v22);
          else
            v23 = *(_QWORD *)(v22 + 16);
          *(_QWORD *)&v24 = swift_release(v22).n128_u64[0];
          if (v23)
          {
            objc_msgSend(v13, "dismissViewControllerAnimated:completion:", 1, 0, v24);

            return;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      sub_1004CB6E8(a2, (uint64_t)&v46);
      v25 = type metadata accessor for CRLConnectionLineItem(0);
      if (swift_dynamicCast(v45, &v46, (char *)&type metadata for Any + 8, v25, 6))
      {

        v41 = 0;
        v42 = v13;
        if ((unint64_t)a1 >> 62)
          goto LABEL_41;
        v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a1);
        for (i = v43; v26; i = v43)
        {
          v28 = 4;
          v29 = 0;
          if ((a1 & 0xC000000000000001) != 0)
          {
LABEL_27:
            v30 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, a1);
            goto LABEL_29;
          }
          while (1)
          {
            v30 = (char *)*(id *)(a1 + 8 * v28);
LABEL_29:
            v31 = v30;
            v32 = v29 + 1;
            if (__OFADD__(v29, 1))
              break;
            v33 = OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details;
            v34 = (uint64_t *)(*(_QWORD *)&v30[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details]
                            + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
            swift_beginAccess(v34, v45, 0, 0);
            v35 = *v34;
            if (*(_QWORD *)(v35 + 16))
            {
              v36 = sub_100843260(7);
              if ((v37 & 1) != 0)
                goto LABEL_34;
            }
            v46 = 0;
            v47 = 0;
            v48 = 0;
            v49 = 1;
            sub_1004CB800((uint64_t)&v46, (uint64_t *)&unk_1013DFC00);
            v38 = (uint64_t *)(*(_QWORD *)&v31[v33] + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
            swift_beginAccess(v38, v44, 0, 0);
            v35 = *v38;
            if (!*(_QWORD *)(v35 + 16))
              goto LABEL_35;
            v36 = sub_100843260(6);
            if ((v39 & 1) != 0)
            {
LABEL_34:
              sub_1004CB7BC(*(_QWORD *)(v35 + 56) + 32 * v36, (uint64_t)&v46, &qword_1013E0230);
              sub_1004CB800((uint64_t)&v46, (uint64_t *)&unk_1013DFC00);
              objc_msgSend(v42, "dismissViewControllerAnimated:completion:", 1, 0, v41);
            }
            else
            {
LABEL_35:
              v46 = 0;
              v47 = 0;
              v48 = 0;
              v49 = 1;
              sub_1004CB800((uint64_t)&v46, (uint64_t *)&unk_1013DFC00);
            }

            i = v43;
            if (v32 == v26)
              goto LABEL_45;
            v29 = ++v28 - 4;
            if ((a1 & 0xC000000000000001) != 0)
              goto LABEL_27;
          }
          __break(1u);
LABEL_41:
          if (a1 < 0)
            v40 = a1;
          else
            v40 = a1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(a1);
          v26 = _CocoaArrayWrapper.endIndex.getter(v40);
        }
LABEL_45:

        swift_bridgeObjectRelease();
      }
      else
      {

      }
    }
  }
}

double sub_1009F9594()
{
  uint64_t v0;
  void *v1;
  id v2;
  double result;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController);
  if (v1)
  {
    v2 = objc_msgSend(v1, "layerHost");
    if (v2)
    {
      v4 = v2;
      if ((objc_msgSend(v2, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v5 = objc_msgSend(v4, "asiOSCVC");
        v9 = objc_msgSend(v5, "presentedViewController", swift_unknownObjectRelease(v4).n128_f64[0]);

        if (v9)
        {
          v6 = type metadata accessor for CRLiOSMiniShapePickerHostingController();
          v7 = (void *)swift_dynamicCastClass(v9, v6);
          if (v7)
          {
            v8 = v7;
            if ((objc_msgSend(v7, "isBeingDismissed") & 1) == 0)
              objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 1, 0);
          }

        }
      }
      else
      {
        *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
      }
    }
  }
  return result;
}

void sub_1009F96E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems));

}

id sub_1009F9710()
{
  return sub_1004C3370(type metadata accessor for CRLiOSMiniShapePickerHostingController);
}

uint64_t type metadata accessor for CRLiOSMiniShapePickerHostingController()
{
  return objc_opt_self(_TtC8Freeform38CRLiOSMiniShapePickerHostingController);
}

double sub_1009F9774(uint64_t a1, double a2, double a3)
{
  id v5;
  void *v6;
  double v7;
  _BYTE v9[64];

  sub_10093E108(a1, (uint64_t)v9);
  v5 = objc_allocWithZone((Class)sub_1004B804C((uint64_t *)&unk_101401478));
  v6 = (void *)UIHostingController.init(rootView:)(v9);
  v7 = dispatch thunk of UIHostingController.sizeThatFits(in:)(a2, a3);

  return v7;
}

char *sub_1009F97EC(void *a1, uint64_t a2, _OWORD *a3)
{
  __int128 v5;
  __int128 v6;
  char *v7;
  char *v8;
  char *v9;
  void *v10;
  id v11;
  double v12;
  _QWORD v14[8];
  _QWORD v15[8];
  _OWORD v16[4];

  v5 = a3[1];
  v16[0] = *a3;
  v16[1] = v5;
  v6 = a3[3];
  v16[2] = a3[2];
  v16[3] = v6;
  sub_10093E108((uint64_t)v16, (uint64_t)v15);
  v7 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniShapePickerHostingController());
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController] = 0;
  sub_10093E108((uint64_t)v15, (uint64_t)v14);
  v8 = sub_1009F87CC(0, v14, 0.0, 0.0);
  sub_1009FA7F0(v15);
  *(_QWORD *)&v8[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems] = a2;
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController];
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController] = a1;
  v11 = a1;

  sub_1009F8CD8(v12);
  sub_1009FA7F0(v16);
  return v9;
}

char *sub_1009F98DC(void *a1, void *a2, double a3, double a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  char *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t inited;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  id v44;
  void *v45;
  id v46;
  char *v47;
  _OWORD v49[4];
  char v50[48];
  _QWORD v51[8];
  _QWORD v52[5];

  v52[3] = sub_1004B8930(0, (unint64_t *)&unk_101401450, off_101229858);
  v52[4] = &off_1012912D8;
  v52[0] = a1;
  v8 = a1;
  v9 = objc_msgSend(a2, "interactiveCanvasController");
  if (!v9)
    goto LABEL_35;
  v10 = v9;
  v11 = objc_msgSend(v9, "layerHost");
  if (!v11)
    goto LABEL_34;
  v12 = v11;
  if ((objc_msgSend(v11, "respondsToSelector:", "asiOSCVC") & 1) == 0)
  {

    swift_unknownObjectRelease(v12);
LABEL_35:
    v25 = 0;
    goto LABEL_36;
  }
  v13 = objc_msgSend(v12, "asiOSCVC");
  v14 = objc_msgSend(a2, "anyConnectionLine", swift_unknownObjectRelease(v12).n128_f64[0]);
  v15 = objc_msgSend(v14, "connectionLineInfo");

  if (!v15)
  {
LABEL_16:

    goto LABEL_35;
  }
  v16 = objc_msgSend(v10, "layoutForInfo:", v15);
  if (!v16)
  {
LABEL_15:

    goto LABEL_16;
  }
  v17 = v16;
  v18 = objc_opt_self(CRLConnectionLineAbstractLayout);
  v19 = (void *)swift_dynamicCastObjCClass(v17, v18);
  if (!v19)
  {

    goto LABEL_15;
  }
  v20 = objc_msgSend(v19, "connectedFrom");
  if (!v20)
  {

    goto LABEL_35;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "info");
  if (!v22)
  {

    goto LABEL_35;
  }
  v23 = v22;
  v24 = type metadata accessor for CRLBoardItem(0);
  v25 = (char *)swift_dynamicCastClass(v23, v24);
  if (v25)
  {
    objc_msgSend(v10, "convertUnscaledToBoundsPoint:", a3, a4);
    v27 = v26;
    v29 = v28;
    sub_1004E90B0((uint64_t)v52, (uint64_t)v51);
    v51[7] = &off_101263960;
    *(double *)&v51[5] = a3;
    *(double *)&v51[6] = a4;
    v30 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    inited = swift_initStackObject(v30, v50);
    *(_OWORD *)(inited + 16) = xmmword_100EF5560;
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v25;
    *(_QWORD *)&v49[0] = inited;
    specialized Array._endMutation()(inited);
    if (*(_QWORD *)&v49[0] >> 62)
    {
      if (*(uint64_t *)&v49[0] < 0)
        v36 = *(_QWORD *)&v49[0];
      else
        v36 = *(_QWORD *)&v49[0] & 0xFFFFFFFFFFFFFF8;
      v37 = v15;
      swift_unknownObjectRetain(v23);
      swift_bridgeObjectRetain(*(_QWORD *)&v49[0]);
      v38 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease();
      if (v38)
        goto LABEL_12;
    }
    else
    {
      v32 = *(_QWORD *)((*(_QWORD *)&v49[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      v33 = v15;
      swift_unknownObjectRetain(v23);
      if (v32)
      {
LABEL_12:
        sub_1004B5FB0(*(uint64_t *)&v49[0]);
        v35 = v34;
LABEL_25:
        swift_bridgeObjectRelease();
        sub_10093E108((uint64_t)v51, (uint64_t)v49);
        v10 = v10;
        v39 = sub_1009F97EC(v10, (uint64_t)v35, v49);
        v40 = qword_1013DD540;
        v25 = v39;
        if (v40 != -1)
          swift_once(&qword_1013DD540, sub_10093C5E0);
        v41 = *(double *)&xmmword_10147FF90 * 3.0;
        if (qword_1013DD550 != -1)
          swift_once(&qword_1013DD550, sub_10093C604);
        v42 = *(double *)&qword_10147FFA8 + *(double *)&qword_10147FFA8;
        v43 = v41 + *(double *)&qword_10147FFA8 + *(double *)&qword_10147FFA8;
        if (qword_1013DD558 != -1)
        {
          swift_once(&qword_1013DD558, sub_10093C614);
          v42 = *(double *)&qword_10147FFA8 + *(double *)&qword_10147FFA8;
        }
        objc_msgSend(v25, "setPreferredContentSize:", v43 + *(double *)&qword_10147FFB0 + *(double *)&qword_10147FFB0, *(double *)&qword_10147FFB0 + *(double *)&qword_10147FFB0 + *((double *)&xmmword_10147FF90 + 1) * 3.0 + v42);

        objc_msgSend(v25, "setModalPresentationStyle:", 7);
        v44 = objc_msgSend(v25, "popoverPresentationController");
        if (v44)
        {
          v45 = v44;
          v46 = objc_msgSend(v13, "canvasView");
          objc_msgSend(v45, "setSourceView:", v46);

          objc_msgSend(v45, "setSourceRect:", v27, v29, 1.0, 1.0);
          v47 = v25;
          objc_msgSend(v45, "setDelegate:", v47);

          swift_unknownObjectRelease(v23);
          sub_1009FA7F0(v51);
          goto LABEL_36;
        }
        sub_1009FA7F0(v51);

        swift_unknownObjectRelease(v23);
LABEL_34:

        goto LABEL_35;
      }
    }
    v35 = &_swiftEmptySetSingleton;
    goto LABEL_25;
  }
  swift_unknownObjectRelease(v23);

LABEL_36:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v52);
  return v25;
}

void sub_1009F9E14(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  if (a1)
  {
    v1 = objc_msgSend(a1, "interactiveCanvasController");
    if (v1)
    {
      v10 = v1;
      v2 = objc_msgSend(v1, "layerHost");
      if (v2)
      {
        v3 = v2;
        if ((objc_msgSend(v2, "respondsToSelector:", "asiOSCVC") & 1) == 0)
        {

          swift_unknownObjectRelease(v3);
          return;
        }
        v4 = objc_msgSend(v3, "asiOSCVC");
        v5 = objc_msgSend(v4, "presentedViewController", swift_unknownObjectRelease(v3).n128_f64[0]);
        if (v5)
        {
          v9 = v5;
          v6 = type metadata accessor for CRLiOSMiniShapePickerHostingController();
          v7 = (void *)swift_dynamicCastClass(v9, v6);
          if (v7)
          {
            if ((objc_msgSend(v7, "isBeingDismissed") & 1) == 0)
              objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

            v8 = v9;
            goto LABEL_15;
          }

        }
      }
      v8 = v10;
LABEL_15:

    }
  }
}

void sub_1009F9F54(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char v30;
  id v32;
  uint64_t v33;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;

  v5 = a3;
  v6 = 0;
  v37 = 0;
  v38 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = a4 & 0xFFFFFFFFFFFFFF8;
  v39 = (unint64_t)(v7 + 63) >> 6;
  v40 = a4 & 0xFFFFFFFFFFFFFF8;
  if (a4 < 0)
    v10 = a4;
  v33 = v10;
  v41 = a4 & 0xC000000000000001;
  while (1)
  {
LABEL_7:
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_23;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_52;
    if (v13 >= v39)
    {
LABEL_49:
      swift_retain(v5);
      sub_100CD8140(a1, a2, v37, v5);
      return;
    }
    v14 = *(_QWORD *)(v38 + 8 * v13);
    ++v6;
    if (!v14)
    {
      v6 = v13 + 1;
      if (v13 + 1 >= v39)
        goto LABEL_49;
      v14 = *(_QWORD *)(v38 + 8 * v6);
      if (!v14)
      {
        v6 = v13 + 2;
        if (v13 + 2 >= v39)
          goto LABEL_49;
        v14 = *(_QWORD *)(v38 + 8 * v6);
        if (!v14)
          break;
      }
    }
LABEL_22:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v6 << 6);
LABEL_23:
    v16 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v12);
    if ((unint64_t)a4 >> 62)
    {
      v32 = v16;
      swift_bridgeObjectRetain(a4);
      v17 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (!v17)
      {
LABEL_47:

        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    else
    {
      v17 = *(_QWORD *)(v40 + 16);
      v18 = v16;
      swift_bridgeObjectRetain(a4);
      if (!v17)
        goto LABEL_47;
    }
    v42 = v6;
    if (v41)
      v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
    else
      v19 = *(id *)(a4 + 32);
    v20 = v19;
    type metadata accessor for CRLBoardItem(0);
    v21 = static NSObject.== infix(_:_:)(v20, v16);

    if ((v21 & 1) != 0)
    {

      swift_bridgeObjectRelease();
      v6 = v42;
    }
    else
    {
      if (v17 != 1)
      {
        if (v41)
        {
          v22 = 1;
          while (1)
          {
            v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v22, a4);
            v24 = v22 + 1;
            if (__OFADD__(v22, 1))
              break;
            v25 = v23;
            v26 = static NSObject.== infix(_:_:)(v23, v16);
            swift_unknownObjectRelease(v25);
            if ((v26 & 1) != 0)
              goto LABEL_44;
            ++v22;
            if (v24 == v17)
              goto LABEL_39;
          }
          __break(1u);
        }
        else
        {
          v27 = 5;
          while (1)
          {
            v28 = v27 - 3;
            if (__OFADD__(v27 - 4, 1))
              break;
            v29 = *(id *)(a4 + 8 * v27);
            v30 = static NSObject.== infix(_:_:)(v29, v16);

            if ((v30 & 1) != 0)
            {
LABEL_44:

              swift_bridgeObjectRelease();
              v5 = a3;
              v6 = v42;
              goto LABEL_7;
            }
            ++v27;
            if (v28 == v17)
            {
LABEL_39:

              swift_bridgeObjectRelease();
              v5 = a3;
              goto LABEL_40;
            }
          }
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }

      swift_bridgeObjectRelease();
LABEL_40:
      v6 = v42;
LABEL_41:
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v37++, 1))
        goto LABEL_53;
    }
  }
  v15 = v13 + 3;
  if (v15 >= v39)
    goto LABEL_49;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
  {
    v6 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v6 >= v39)
      goto LABEL_49;
    v14 = *(_QWORD *)(v38 + 8 * v6);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_54:
  __break(1u);
}

uint64_t sub_1009FA2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a2, 2);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v8, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain(a2);
    sub_1009F9F54((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_release(a1);
    v12 = swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow(v12);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v8, -1);
    bzero(v13, v8);
    swift_bridgeObjectRetain(a2);
    sub_1009F9F54((unint64_t *)v13, v7, a1, a2);
    v11 = v14;
    swift_release(a1);
    swift_bridgeObjectRelease();
    swift_slowDealloc(v13, -1, -1);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v11;
}

void sub_1009FA484(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  char v20;
  id v21;
  _QWORD *v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD *v41;

  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1009FA2C0(a1, a2);
    return;
  }
  v41 = &_swiftEmptySetSingleton;
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v4 = __CocoaSet.makeIterator()(v3);
  v5 = __CocoaSet.Iterator.next()(v4);
  if (!v5)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    swift_release(v4);
    return;
  }
  v6 = v5;
  v7 = type metadata accessor for CRLBoardItem(0);
  v8 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v9 = a2;
  else
    v9 = a2 & 0xFFFFFFFFFFFFFF8;
  v37 = v9;
  v38 = a2 & 0xC000000000000001;
  while (1)
  {
    v39 = v6;
    swift_dynamicCast(&v40, &v39, (char *)&type metadata for Swift.AnyObject + 8, v7, 7);
    v16 = v40;
    if ((unint64_t)a2 >> 62)
    {
      swift_bridgeObjectRetain(a2);
      v17 = _CocoaArrayWrapper.endIndex.getter(v37);
      if (!v17)
        goto LABEL_21;
    }
    else
    {
      v17 = *(_QWORD *)(v8 + 16);
      swift_bridgeObjectRetain(a2);
      if (!v17)
        goto LABEL_21;
    }
    if (v38)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    else
      v18 = *(id *)(a2 + 32);
    v19 = v18;
    v20 = static NSObject.== infix(_:_:)(v18, v16);

    if ((v20 & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_44:

      goto LABEL_13;
    }
    if (v17 != 1)
      break;
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    v21 = v40;
    v22 = v41;
    v23 = v41[2];
    if (v41[3] <= v23)
    {
      sub_100ADE280(v23 + 1);
      v22 = v41;
    }
    v10 = NSObject._rawHashValue(seed:)(v22[5]);
    v11 = v22 + 7;
    v12 = -1 << *((_BYTE *)v22 + 32);
    v13 = v10 & ~v12;
    v14 = v13 >> 6;
    if (((-1 << v13) & ~v22[(v13 >> 6) + 7]) != 0)
    {
      v15 = __clz(__rbit64((-1 << v13) & ~v22[(v13 >> 6) + 7])) | v13 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v12) >> 6;
      do
      {
        if (++v14 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_50;
        }
        v26 = v14 == v25;
        if (v14 == v25)
          v14 = 0;
        v24 |= v26;
        v27 = v11[v14];
      }
      while (v27 == -1);
      v15 = __clz(__rbit64(~v27)) + (v14 << 6);
    }
    *(_QWORD *)((char *)v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(v22[6] + 8 * v15) = v21;
    ++v22[2];
LABEL_13:
    v6 = __CocoaSet.Iterator.next()(v10);
    if (!v6)
      goto LABEL_49;
  }
  if (v38)
  {
    v28 = 1;
    while (1)
    {
      v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, a2);
      v30 = v28 + 1;
      if (__OFADD__(v28, 1))
        break;
      v31 = v29;
      v32 = static NSObject.== infix(_:_:)(v29, v16);
      swift_unknownObjectRelease(v31);
      if ((v32 & 1) != 0)
        goto LABEL_43;
      ++v28;
      if (v30 == v17)
        goto LABEL_42;
    }
LABEL_50:
    __break(1u);
  }
  else
  {
    v33 = 5;
    while (1)
    {
      v34 = v33 - 3;
      if (__OFADD__(v33 - 4, 1))
        break;
      v35 = *(id *)(a2 + 8 * v33);
      v36 = static NSObject.== infix(_:_:)(v35, v16);

      if ((v36 & 1) != 0)
      {
LABEL_43:
        swift_bridgeObjectRelease();
        v8 = a2 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_44;
      }
      ++v33;
      if (v34 == v17)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        v8 = a2 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_22;
      }
    }
  }
  __break(1u);
}

_QWORD *sub_1009FA7F0(_QWORD *a1)
{
  destroy for CRLMiniShapePickerUI.ShapeButtonGrid(a1);
  return a1;
}

uint64_t sub_1009FA834()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 80, 7);
}

double sub_1009FA860(double a1, double a2)
{
  uint64_t v2;

  return sub_1009F9774(v2 + 16, a1, a2);
}

uint64_t storeEnumTagSinglePayload for CRLMiniShapePickerShapeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1009FA8B4 + 4 * byte_100F217AD[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1009FA8E8 + 4 * byte_100F217A8[v4]))();
}

uint64_t sub_1009FA8E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009FA8F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1009FA8F8);
  return result;
}

uint64_t sub_1009FA904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1009FA90CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1009FA910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1009FA918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerShapeType()
{
  return &type metadata for CRLMiniShapePickerShapeType;
}

unint64_t sub_1009FA938()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101401488;
  if (!qword_101401488)
  {
    v1 = sub_1004CB6A4(&qword_101401490);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_101401488);
  }
  return result;
}

unint64_t sub_1009FA988()
{
  unint64_t result;

  result = qword_101401498;
  if (!qword_101401498)
  {
    result = swift_getWitnessTable(&unk_100F2198C, &type metadata for CRLMiniShapePickerShapeType);
    atomic_store(result, (unint64_t *)&qword_101401498);
  }
  return result;
}

uint64_t sub_1009FA9CC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  unsigned int v11;
  char v12;
  char v13;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = URL.isFileURL.getter(v8);
  if ((v9 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
LABEL_6:
    v13 = sub_1009FAD84();
    goto LABEL_7;
  }
  HIBYTE(v15) = 0;
  URL.path.getter(v9);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v2, "fileExistsAtPath:isDirectory:", v10, (char *)&v15 + 7, swift_bridgeObjectRelease().n128_f64[0]);

  v12 = HIBYTE(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (!v11 || (v12 & 1) != 0)
    goto LABEL_6;
  v13 = 1;
LABEL_7:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13 & 1;
}

uint64_t sub_1009FAB10()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v10;
  __n128 v11;
  id v12;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v5 = objc_msgSend(v0, "URLForDirectory:inDomain:appropriateForURL:create:error:", 5, 1, 0, 1, &v12);
  v6 = v12;
  if (v5)
  {
    v7 = v5;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v6;

    URL.appendingPathComponent(_:isDirectory:)(0x6D726F6665657246, 0xE90000000000002FLL, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v6);

    return swift_willThrow(v11);
  }
}

uint64_t sub_1009FAD84()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t inited;
  NSString *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  Swift::String v26;
  __n128 v27;
  char v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40[40];

  v0 = type metadata accessor for URLResourceValues(0);
  v37 = *(_QWORD *)(v0 - 8);
  v38 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UTType(0);
  v6 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - v13;
  v15 = sub_1004B804C(&qword_1013E8860);
  inited = swift_initStackObject(v15, v40);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSURLContentTypeKey;
  v17 = NSURLContentTypeKey;
  sub_1004B584C(inited);
  v19 = v18;
  swift_setDeallocating(inited);
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy(inited + 32, 1, v20);
  URL.resourceValues(forKeys:)(v19);
  v35 = v11;
  v36 = v8;
  v21 = swift_bridgeObjectRelease();
  URLResourceValues.contentType.getter(v21);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v2, v38);
  v22 = v39;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v39) == 1)
  {
    sub_1009FB0F0((uint64_t)v5);
LABEL_3:
    v23 = 0;
    return v23 & 1;
  }
  v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v14, v5, v22);
  URL.pathExtension.getter(v25);
  v26 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v26._countAndFlagsBits == 7368801 && v26._object == (void *)0xE300000000000000)
  {
    v27 = swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v14, v22, v27);
    goto LABEL_3;
  }
  v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v26._countAndFlagsBits, v26._object, 7368801, 0xE300000000000000, 0);
  v27 = swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
    goto LABEL_9;
  v29 = v35;
  static UTType.bundle.getter(v27);
  v30 = UTType.conforms(to:)(v29);
  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v29, v22);
  v32 = v36;
  v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v36, v14, v22);
  if ((v30 & 1) != 0)
  {
    v31(v32, v22);
    v31(v14, v22);
    v23 = 1;
  }
  else
  {
    static UTType.package.getter(v33);
    v23 = UTType.conforms(to:)(v29);
    v31(v29, v22);
    v31(v32, v22);
    v31(v14, v22);
  }
  return v23 & 1;
}

uint64_t sub_1009FB0F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1009FB1FC(void *a1, void *a2)
{
  char *v2;
  uint64_t *v3;
  void *v4;
  char *v5;
  id v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t *v23;
  char *v24;
  char v25;
  char v26;
  id v27;
  uint64_t v28;
  void *v29;
  char *v30;
  id v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  _BYTE v41[72];
  objc_super v42;

  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController] = 0;
  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printScenesSummaryMessage];
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = v2;
  v6 = objc_msgSend(v4, "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  *v3 = v10;
  v3[1] = v12;
  v13 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printBoardSummaryMessage];
  v14 = objc_msgSend(v4, "mainBundle");
  v15 = String._bridgeToObjectiveC()();
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v14, "localizedStringForKey:value:table:", v15, v16, 0);

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  *v13 = v18;
  v13[1] = v20;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer] = a2;
  v21 = a1;
  v22 = a2;
  if ((sub_1006D2DB8() & 1) != 0)
  {
    v18 = *v3;
    v20 = v3[1];
  }
  swift_bridgeObjectRetain(v20);
  v23 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_summary];
  *v23 = v18;
  v23[1] = v20;

  v42.receiver = v5;
  v42.super_class = (Class)type metadata accessor for CRLiOSPrintOptionsViewController();
  v24 = (char *)objc_msgSendSuper2(&v42, "initWithNibName:bundle:", 0, 0);
  v25 = sub_1006D2DB8();
  v26 = sub_1006D2F14();
  sub_1009FB58C(v24, v25 & 1, v26 & 1, (uint64_t)v41);
  v27 = objc_allocWithZone((Class)sub_1004B804C(&qword_101401608));
  v28 = UIHostingController.init(rootView:)(v41);
  v29 = *(void **)&v24[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController];
  *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController] = v28;

  v30 = v24;
  v31 = objc_msgSend(v4, "mainBundle");
  v32 = String._bridgeToObjectiveC()();
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v31, "localizedStringForKey:value:table:", v32, v33, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v36 = v35;

  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setTitle:", v37, swift_bridgeObjectRelease(v36).n128_f64[0]);

  return v30;
}

void sub_1009FB58C(void *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  void *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;

  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  *(_QWORD *)(a4 + 32) = v12;
  *(_QWORD *)(a4 + 40) = v14;
  v15 = objc_msgSend(v7, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "localizedStringForKey:value:table:", v16, v17, 0);

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  *(_QWORD *)(a4 + 48) = v19;
  *(_QWORD *)(a4 + 56) = v21;
  v22 = swift_unknownObjectWeakInit(a4 + 64, 0);
  swift_unknownObjectWeakAssign(v22, a1);
  v26 = a2;
  State.init(wrappedValue:)(&v27, &v26, &type metadata for Bool);
  v23 = v28;
  *(_BYTE *)a4 = v27;
  *(_QWORD *)(a4 + 8) = v23;
  v26 = a3;
  State.init(wrappedValue:)(&v27, &v26, &type metadata for Bool);

  v24 = v28;
  *(_BYTE *)(a4 + 16) = v27;
  *(_QWORD *)(a4 + 24) = v24;
}

void sub_1009FB7B0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  Class isa;
  _QWORD v51[2];
  objc_super v52;

  v1 = v0;
  v2 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v2);
  v4 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for CRLiOSPrintOptionsViewController();
  v52.receiver = v1;
  v52.super_class = v5;
  objc_msgSendSuper2(&v52, "viewDidLoad");
  v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController];
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v7, "view");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
      dispatch thunk of UIHostingController.sizingOptions.setter(v4);
      objc_msgSend(v1, "addChildViewController:", v7);
      objc_msgSend(v7, "didMoveToParentViewController:", v1);
      v10 = objc_msgSend(v1, "view");
      if (v10)
      {
        v11 = v10;
        v12 = objc_msgSend(v7, "view");
        if (v12)
        {
          v13 = v12;
          objc_msgSend(v11, "addSubview:", v12);

          v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
          v15 = swift_allocObject(v14, 64, 7);
          *(_OWORD *)(v15 + 16) = xmmword_100EF7310;
          v16 = objc_msgSend(v1, "view");
          if (v16)
          {
            v17 = v16;
            v18 = objc_msgSend(v16, "leadingAnchor");

            v19 = objc_msgSend(v7, "view");
            if (v19)
            {
              v20 = v19;
              v21 = objc_msgSend(v19, "safeAreaLayoutGuide");

              v22 = objc_msgSend(v21, "leadingAnchor");
              v23 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v22, -10.0);

              *(_QWORD *)(v15 + 32) = v23;
              v24 = objc_msgSend(v1, "view");
              if (v24)
              {
                v25 = v24;
                v26 = objc_msgSend(v24, "trailingAnchor");

                v27 = objc_msgSend(v7, "view");
                if (v27)
                {
                  v28 = v27;
                  v29 = objc_msgSend(v27, "safeAreaLayoutGuide");

                  v30 = objc_msgSend(v29, "trailingAnchor");
                  v31 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v30, 10.0);

                  *(_QWORD *)(v15 + 40) = v31;
                  v32 = objc_msgSend(v1, "view");
                  if (v32)
                  {
                    v33 = v32;
                    v34 = objc_msgSend(v32, "topAnchor");

                    v35 = objc_msgSend(v7, "view");
                    if (v35)
                    {
                      v36 = v35;
                      v37 = objc_msgSend(v35, "safeAreaLayoutGuide");

                      v38 = objc_msgSend(v37, "topAnchor");
                      v39 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v38, -30.0);

                      *(_QWORD *)(v15 + 48) = v39;
                      v40 = objc_msgSend(v1, "view");
                      if (v40)
                      {
                        v41 = v40;
                        v42 = objc_msgSend(v40, "bottomAnchor");

                        v43 = objc_msgSend(v7, "view");
                        if (v43)
                        {
                          v44 = v43;
                          v45 = (void *)objc_opt_self(NSLayoutConstraint);
                          v46 = objc_msgSend(v44, "safeAreaLayoutGuide");

                          v47 = objc_msgSend(v46, "bottomAnchor");
                          v48 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v47, 10.0);

                          *(_QWORD *)(v15 + 56) = v48;
                          v51[1] = v15;
                          specialized Array._endMutation()(v49);
                          sub_1004DD8D8();
                          isa = Array._bridgeToObjectiveC()().super.isa;
                          objc_msgSend(v45, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

                          return;
                        }
LABEL_25:
                        __break(1u);
                        return;
                      }
LABEL_24:
                      __break(1u);
                      goto LABEL_25;
                    }
LABEL_23:
                    __break(1u);
                    goto LABEL_24;
                  }
LABEL_22:
                  __break(1u);
                  goto LABEL_23;
                }
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void sub_1009FBCD8(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _BYTE *v7;
  char *v8;
  _BYTE *v9;
  Class isa;
  NSString v11;
  Class v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSString v25;
  id v26;
  NSString v27;
  char v28[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo;
  v5 = *(id *)&v1[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo];
  sub_1006D13FC(a1);

  v6 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer;
  v7 = *(_BYTE **)&v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer];
  v7[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes] = a1;
  v8 = &v7[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  swift_beginAccess(&v7[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter], v28, 1, 0);
  v8[49] = a1;
  v9 = v7;
  objc_msgSend(v9, "paperRect");
  isa = CGRect._bridgeToObjectiveC()().super.isa;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setValue:forKey:", isa, v11);

  v12 = CGRect._bridgeToObjectiveC()().super.isa;
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setValue:forKey:", v12, v13);

  if ((sub_1006D2DB8() & 1) != 0)
  {
    v14 = *(void **)&v2[v6];
    v15 = *(id *)&v2[v4];
    v16 = v14;
    sub_1008AE134();
    v18 = v17;

    objc_msgSend(v15, "setOrientation:", v18);
  }
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "willChangeValueForKey:", v19);

  v20 = &OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printScenesSummaryMessage;
  if ((a1 & 1) == 0)
    v20 = &OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printBoardSummaryMessage;
  v21 = &v2[*v20];
  v22 = *(_QWORD *)v21;
  swift_bridgeObjectRetain(*((_QWORD *)v21 + 1));
  v23 = &v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_summary];
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = v24;
  swift_bridgeObjectRelease();
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "didChangeValueForKey:", v25);

  v26 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "postNotificationName:object:", v27, v2);

}

void sub_1009FBFB0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  _BYTE v16[24];

  v2 = v1;
  v4 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo;
  v5 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo);
  sub_1006D2490(a1);

  v6 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize) = a1;
  v8 = v7 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter;
  swift_beginAccess(v7 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter, v16, 1, 0);
  *(_BYTE *)(v8 + 50) = a1;
  if ((sub_1006D2DB8() & 1) != 0)
  {
    v9 = *(void **)(v2 + v6);
    v10 = *(id *)(v2 + v4);
    v11 = v9;
    sub_1008AE134();
    v13 = v12;

    objc_msgSend(v10, "setOrientation:", v13);
  }
  v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "postNotificationName:object:", v15, v2);

}

id sub_1009FC120()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPrintOptionsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSPrintOptionsViewController()
{
  return objc_opt_self(_TtC8Freeform32CRLiOSPrintOptionsViewController);
}

uint64_t destroy for CRLiOSPrintView(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_unknownObjectWeakDestroy(a1 + 8);
}

uint64_t initializeWithCopy for CRLiOSPrintView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  v7 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v6;
  v8 = *(_QWORD *)(a2 + 56);
  v9 = a2 + 64;
  *(_QWORD *)(a1 + 56) = v8;
  swift_retain(v3);
  swift_retain(v5);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_unknownObjectWeakCopyInit(a1 + 64, v9);
  return a1;
}

uint64_t assignWithCopy for CRLiOSPrintView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  swift_unknownObjectWeakCopyAssign(a1 + 64, a2 + 64);
  return a1;
}

_OWORD *initializeWithTake for CRLiOSPrintView(_OWORD *a1, _OWORD *a2)
{
  __int128 v3;
  __int128 v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_unknownObjectWeakTakeInit(a1 + 4, a2 + 4);
  return a1;
}

uint64_t assignWithTake for CRLiOSPrintView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease(v9);
  swift_unknownObjectWeakTakeAssign(a1 + 64, a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLiOSPrintView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSPrintView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPrintView()
{
  return &type metadata for CRLiOSPrintView;
}

uint64_t sub_1009FC4E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10112FC50, 1);
}

uint64_t sub_1009FC4F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  __n128 v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  _QWORD v58[2];
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char v65[16];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;

  v64 = a2;
  v4 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, a3);
  __chkstk_darwin(v4);
  v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101401568);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v60 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v59 = (char *)v58 - v10;
  v11 = sub_1004B804C(&qword_101401570);
  __chkstk_darwin(v11);
  v61 = (uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v58 - v14;
  v16 = sub_1004B804C(&qword_101401578);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v58 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)v58 - v24;
  v66 = a1;
  v26 = sub_1004B804C(&qword_101401580);
  v27 = sub_1004CBA30(&qword_101401588, &qword_101401580, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v58[1] = v26;
  Section<>.init(content:)(sub_1009FDE30, v65, v26, v27);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v22, v16);
  v28 = *(_QWORD *)(a1 + 8);
  LOBYTE(v67) = *(_BYTE *)a1;
  v68 = v28;
  v29 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.getter(v29);
  if (v71 == 1)
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v30);
    v31 = *(_QWORD *)(a1 + 24);
    LOBYTE(v67) = *(_BYTE *)(a1 + 16);
    v68 = v31;
    State.wrappedValue.getter(v29);
    v32 = 56;
    if (v71)
      v32 = 40;
    v33 = 48;
    if (v71)
      v33 = 32;
    v34 = *(void **)(a1 + v32);
    v35 = *(_QWORD *)(a1 + v33);
    swift_bridgeObjectRetain(v34);
    v36._countAndFlagsBits = v35;
    v36._object = v34;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v36);
    swift_bridgeObjectRelease();
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v37);
    v38 = LocalizedStringKey.init(stringInterpolation:)(v6);
    v67 = Text.init(_:tableName:bundle:comment:)(v38);
    v68 = v39;
    v69 = v40 & 1;
    v70 = v41;
    v42 = __chkstk_darwin(v67);
    v43 = v60;
    Section<>.init(footer:content:)(&v67, sub_1009FDE38, v42);
    v44 = v62;
    v45 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
    v46 = v59;
    v47 = v43;
    v48 = v63;
    v45(v59, v47, v63);
    v45(v15, v46, v48);
    v49 = 0;
    v50 = v48;
    v51 = v44;
  }
  else
  {
    v49 = 1;
    v51 = v62;
    v50 = v63;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v15, v49, 1, v50);
  v52 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v52(v19, v25, v16);
  v53 = v61;
  sub_1004CB7BC((uint64_t)v15, v61, &qword_101401570);
  v54 = v64;
  v52(v64, v19, v16);
  v55 = sub_1004B804C(&qword_101401598);
  sub_1004CB7BC(v53, (uint64_t)&v54[*(int *)(v55 + 48)], &qword_101401570);
  sub_1004CB800((uint64_t)v15, &qword_101401570);
  v56 = *(void (**)(char *, uint64_t))(v17 + 8);
  v56(v25, v16);
  sub_1004CB800(v53, &qword_101401570);
  return ((uint64_t (*)(char *, uint64_t))v56)(v19, v16);
}

uint64_t sub_1009FC958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  _OWORD v31[4];

  v26 = a2;
  v3 = sub_1004B804C(&qword_1014015A0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  sub_1009FDE40(a1, (uint64_t)v31);
  v16 = swift_allocObject(&unk_101290670, 88, 7);
  sub_1009FDE78(v31, (_OWORD *)(v16 + 16));
  v30 = a1;
  v17 = sub_1004B804C(&qword_1014015A8);
  v18 = sub_1004CBA30(&qword_1014015B0, &qword_1014015A8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  Button.init(action:label:)(sub_1009FDFA4, v16, sub_1009FDFAC, v29, v17, v18);
  sub_1009FDE40(a1, (uint64_t)v31);
  v19 = swift_allocObject(&unk_101290698, 88, 7);
  sub_1009FDE78(v31, (_OWORD *)(v19 + 16));
  v28 = a1;
  Button.init(action:label:)(sub_1009FE014, v19, sub_1009FE01C, v27, v17, v18);
  v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
  v20(v9, v15, v3);
  v20(v6, v12, v3);
  v21 = v26;
  v20(v26, v9, v3);
  v22 = sub_1004B804C(&qword_1014015B8);
  v20(v21 + *(int *)(v22 + 48), v6, v3);
  v23 = *(void (**)(_QWORD, _QWORD))(v4 + 8);
  v23(v12, v3);
  v23(v15, v3);
  v23(v6, v3);
  return ((uint64_t (*)(char *, uint64_t))v23)(v9, v3);
}

void sub_1009FCBA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[9];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 8);
  v6[1] = *(_BYTE *)a1;
  v7 = v2;
  v6[0] = 0;
  v3 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(v6, v3);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1009FBCD8(0);

  }
}

double sub_1009FCC14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  _BYTE *v39;
  uint64_t v40;
  double result;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  _BYTE *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a1;
  v3 = sub_1004B804C((uint64_t *)&unk_1014015C8);
  __chkstk_darwin(v3);
  v45 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v42[-v6];
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v47 = v12;
  v48 = v14;
  v15 = sub_1004D292C();
  v16 = Text.init<A>(_:)(&v47, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v23 = static Color.primary.getter();
  v47 = v23;
  v24 = Text.foregroundStyle<A>(_:)(&v47, v16, v18, v22, v20, &type metadata for Color, &protocol witness table for Color);
  v26 = v25;
  v43 = v27;
  v29 = v28;
  sub_1005EFC24(v16, v18, v22);
  swift_release(v23);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v44 + 8);
  LOBYTE(v47) = *(_BYTE *)v44;
  v48 = v30;
  v31 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.getter(v31);
  if ((v46 & 1) != 0)
  {
    v32 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 1, 1, v32);
  }
  else
  {
    v33 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
    v34 = static Color.accentColor.getter(v33);
    v47 = v33;
    v48 = v34;
    v35 = sub_1004B804C(&qword_1014015D8);
    v36 = sub_1009FDF1C();
    View.bold(_:)(1, v35, v36);
    swift_release(v34);
    swift_release(v33);
    v37 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 0, 1, v37);
  }
  v38 = v43 & 1;
  v39 = v45;
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v45, (uint64_t *)&unk_1014015C8);
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v38;
  *(_QWORD *)(a2 + 24) = v29;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  v40 = sub_1004B804C(&qword_101401600);
  sub_1004CB7BC((uint64_t)v39, a2 + *(int *)(v40 + 64), (uint64_t *)&unk_1014015C8);
  sub_1006CCFD0(v24, v26, v38);
  swift_bridgeObjectRetain(v29);
  sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1014015C8);
  sub_1004CB800((uint64_t)v39, (uint64_t *)&unk_1014015C8);
  sub_1005EFC24(v24, v26, v38);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1009FCF7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[9];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 8);
  v6[1] = *(_BYTE *)a1;
  v7 = v2;
  v6[0] = 1;
  v3 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(v6, v3);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1009FBCD8(1);

  }
}

double sub_1009FCFF0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _BYTE *v39;
  uint64_t v40;
  double result;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  _BYTE *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a1;
  v3 = sub_1004B804C((uint64_t *)&unk_1014015C8);
  __chkstk_darwin(v3);
  v45 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v42[-v6];
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v47 = v12;
  v48 = v14;
  v15 = sub_1004D292C();
  v16 = Text.init<A>(_:)(&v47, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v23 = static Color.primary.getter();
  v47 = v23;
  v24 = Text.foregroundStyle<A>(_:)(&v47, v16, v18, v22, v20, &type metadata for Color, &protocol witness table for Color);
  v26 = v25;
  v43 = v27;
  v29 = v28;
  sub_1005EFC24(v16, v18, v22);
  swift_release(v23);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v44 + 8);
  LOBYTE(v47) = *(_BYTE *)v44;
  v48 = v30;
  v31 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.getter(v31);
  if (v46 == 1)
  {
    v32 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
    v33 = static Color.accentColor.getter(v32);
    v47 = v32;
    v48 = v33;
    v34 = sub_1004B804C(&qword_1014015D8);
    v35 = sub_1009FDF1C();
    View.bold(_:)(1, v34, v35);
    swift_release(v33);
    swift_release(v32);
    v36 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v7, 0, 1, v36);
  }
  else
  {
    v37 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 1, 1, v37);
  }
  v38 = v43 & 1;
  v39 = v45;
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v45, (uint64_t *)&unk_1014015C8);
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v38;
  *(_QWORD *)(a2 + 24) = v29;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  v40 = sub_1004B804C(&qword_101401600);
  sub_1004CB7BC((uint64_t)v39, a2 + *(int *)(v40 + 64), (uint64_t *)&unk_1014015C8);
  sub_1006CCFD0(v24, v26, v38);
  swift_bridgeObjectRetain(v29);
  sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1014015C8);
  sub_1004CB800((uint64_t)v39, (uint64_t *)&unk_1014015C8);
  sub_1005EFC24(v24, v26, v38);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1009FD35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  _OWORD v31[4];

  v26 = a2;
  v3 = sub_1004B804C(&qword_1014015A0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  sub_1009FDE40(a1, (uint64_t)v31);
  v16 = swift_allocObject(&unk_101290620, 88, 7);
  sub_1009FDE78(v31, (_OWORD *)(v16 + 16));
  v30 = a1;
  v17 = sub_1004B804C(&qword_1014015A8);
  v18 = sub_1004CBA30(&qword_1014015B0, &qword_1014015A8, (uint64_t)&protocol conformance descriptor for HStack<A>);
  Button.init(action:label:)(sub_1009FDEC8, v16, sub_1009FDED0, v29, v17, v18);
  sub_1009FDE40(a1, (uint64_t)v31);
  v19 = swift_allocObject(&unk_101290648, 88, 7);
  sub_1009FDE78(v31, (_OWORD *)(v19 + 16));
  v28 = a1;
  Button.init(action:label:)(sub_1009FDEF4, v19, sub_1009FDEFC, v27, v17, v18);
  v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
  v20(v9, v15, v3);
  v20(v6, v12, v3);
  v21 = v26;
  v20(v26, v9, v3);
  v22 = sub_1004B804C(&qword_1014015B8);
  v20(v21 + *(int *)(v22 + 48), v6, v3);
  v23 = *(void (**)(_QWORD, _QWORD))(v4 + 8);
  v23(v12, v3);
  v23(v15, v3);
  v23(v6, v3);
  return ((uint64_t (*)(char *, uint64_t))v23)(v9, v3);
}

void sub_1009FD5A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[9];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  v6[1] = *(_BYTE *)(a1 + 16);
  v7 = v2;
  v6[0] = 1;
  v3 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(v6, v3);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1009FBFB0(1);

  }
}

double sub_1009FD61C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _BYTE *v39;
  uint64_t v40;
  double result;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  _BYTE *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a1;
  v3 = sub_1004B804C((uint64_t *)&unk_1014015C8);
  __chkstk_darwin(v3);
  v45 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v42[-v6];
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v47 = v12;
  v48 = v14;
  v15 = sub_1004D292C();
  v16 = Text.init<A>(_:)(&v47, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v23 = static Color.primary.getter();
  v47 = v23;
  v24 = Text.foregroundStyle<A>(_:)(&v47, v16, v18, v22, v20, &type metadata for Color, &protocol witness table for Color);
  v26 = v25;
  v43 = v27;
  v29 = v28;
  sub_1005EFC24(v16, v18, v22);
  swift_release(v23);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v44 + 24);
  LOBYTE(v47) = *(_BYTE *)(v44 + 16);
  v48 = v30;
  v31 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.getter(v31);
  if (v46 == 1)
  {
    v32 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
    v33 = static Color.accentColor.getter(v32);
    v47 = v32;
    v48 = v33;
    v34 = sub_1004B804C(&qword_1014015D8);
    v35 = sub_1009FDF1C();
    View.bold(_:)(1, v34, v35);
    swift_release(v33);
    swift_release(v32);
    v36 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v7, 0, 1, v36);
  }
  else
  {
    v37 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 1, 1, v37);
  }
  v38 = v43 & 1;
  v39 = v45;
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v45, (uint64_t *)&unk_1014015C8);
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v38;
  *(_QWORD *)(a2 + 24) = v29;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  v40 = sub_1004B804C(&qword_101401600);
  sub_1004CB7BC((uint64_t)v39, a2 + *(int *)(v40 + 64), (uint64_t *)&unk_1014015C8);
  sub_1006CCFD0(v24, v26, v38);
  swift_bridgeObjectRetain(v29);
  sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1014015C8);
  sub_1004CB800((uint64_t)v39, (uint64_t *)&unk_1014015C8);
  sub_1005EFC24(v24, v26, v38);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_1009FD990(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[9];
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 24);
  v6[1] = *(_BYTE *)(a1 + 16);
  v7 = v2;
  v6[0] = 0;
  v3 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.setter(v6, v3);
  Strong = swift_unknownObjectWeakLoadStrong(a1 + 64);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1009FBFB0(0);

  }
}

uint64_t sub_1009FDA00@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  *(_QWORD *)a3 = static VerticalAlignment.center.getter(a4);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  sub_1004B804C(&qword_1014015C0);
  return a2(a1);
}

double sub_1009FDA58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  _BYTE *v39;
  uint64_t v40;
  double result;
  _BYTE v42[12];
  int v43;
  uint64_t v44;
  _BYTE *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a1;
  v3 = sub_1004B804C((uint64_t *)&unk_1014015C8);
  __chkstk_darwin(v3);
  v45 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v42[-v6];
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "localizedStringForKey:value:table:", v9, v10, 0);

  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v47 = v12;
  v48 = v14;
  v15 = sub_1004D292C();
  v16 = Text.init<A>(_:)(&v47, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v23 = static Color.primary.getter();
  v47 = v23;
  v24 = Text.foregroundStyle<A>(_:)(&v47, v16, v18, v22, v20, &type metadata for Color, &protocol witness table for Color);
  v26 = v25;
  v43 = v27;
  v29 = v28;
  sub_1005EFC24(v16, v18, v22);
  swift_release(v23);
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v44 + 24);
  LOBYTE(v47) = *(_BYTE *)(v44 + 16);
  v48 = v30;
  v31 = sub_1004B804C(&qword_101401590);
  State.wrappedValue.getter(v31);
  if ((v46 & 1) != 0)
  {
    v32 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 1, 1, v32);
  }
  else
  {
    v33 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
    v34 = static Color.accentColor.getter(v33);
    v47 = v33;
    v48 = v34;
    v35 = sub_1004B804C(&qword_1014015D8);
    v36 = sub_1009FDF1C();
    View.bold(_:)(1, v35, v36);
    swift_release(v34);
    swift_release(v33);
    v37 = sub_1004B804C(&qword_1014015F8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v7, 0, 1, v37);
  }
  v38 = v43 & 1;
  v39 = v45;
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v45, (uint64_t *)&unk_1014015C8);
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v38;
  *(_QWORD *)(a2 + 24) = v29;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  v40 = sub_1004B804C(&qword_101401600);
  sub_1004CB7BC((uint64_t)v39, a2 + *(int *)(v40 + 64), (uint64_t *)&unk_1014015C8);
  sub_1006CCFD0(v24, v26, v38);
  swift_bridgeObjectRetain(v29);
  sub_1004CB800((uint64_t)v7, (uint64_t *)&unk_1014015C8);
  sub_1004CB800((uint64_t)v39, (uint64_t *)&unk_1014015C8);
  sub_1005EFC24(v24, v26, v38);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_1009FDDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_1004B804C(&qword_101401558);
  v1 = sub_1004CBA30(&qword_101401560, &qword_101401558, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_1009FDE28, &v3, v0, v1);
}

uint64_t sub_1009FDE28@<X0>(char *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_1009FC4F0(*(_QWORD *)(v2 + 16), a1, a2);
}

uint64_t sub_1009FDE30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1009FC958(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1009FDE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1009FD35C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1009FDE40(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CRLiOSPrintView(a2, a1);
  return a2;
}

_OWORD *sub_1009FDE78(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  a2[1] = a1[1];
  a2[2] = a1[2];
  a2[3] = a1[3];
  swift_unknownObjectWeakTakeInit(a2 + 4, a1 + 4);
  return a2;
}

void sub_1009FDEC8()
{
  uint64_t v0;

  sub_1009FD5A8(v0 + 16);
}

uint64_t sub_1009FDED0@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_1009FDA00(*(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))sub_1009FD61C, a1, a2);
}

void sub_1009FDEF4()
{
  uint64_t v0;

  sub_1009FD990(v0 + 16);
}

uint64_t sub_1009FDEFC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_1009FDA00(*(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))sub_1009FDA58, a1, a2);
}

unint64_t sub_1009FDF1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014015E0;
  if (!qword_1014015E0)
  {
    v1 = sub_1004CB6A4(&qword_1014015D8);
    sub_1004CBA30(&qword_1014015E8, &qword_1014015F0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1014015E0);
  }
  return result;
}

void sub_1009FDFA4()
{
  uint64_t v0;

  sub_1009FCBA4(v0 + 16);
}

uint64_t sub_1009FDFAC@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_1009FDA00(*(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))sub_1009FCC14, a1, a2);
}

uint64_t sub_1009FDFD0()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  swift_unknownObjectWeakDestroy(v0 + 10);
  return swift_deallocObject(v0, 88, 7);
}

void sub_1009FE014()
{
  uint64_t v0;

  sub_1009FCF7C(v0 + 16);
}

uint64_t sub_1009FE01C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;

  return sub_1009FDA00(*(_QWORD *)(v2 + 16), (uint64_t (*)(uint64_t))sub_1009FCFF0, a1, a2);
}

void sub_1009FE03C()
{
  char *v0;
  uint64_t *v1;
  void *v2;
  id v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController] = 0;
  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printScenesSummaryMessage];
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, v5, 0);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  *v1 = v7;
  v1[1] = v9;
  v10 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printBoardSummaryMessage];
  v11 = objc_msgSend(v2, "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  *v10 = v15;
  v10[1] = v17;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLiOSPrintOptionsViewController.swift", 47, 2, 30, 0);
  __break(1u);
}

uint64_t sub_1009FE234()
{
  return sub_1004CBA30(&qword_101401610, &qword_101401618, (uint64_t)&protocol conformance descriptor for List<A, B>);
}

void sub_1009FE424()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  void *v65;
  Class isa;

  if (qword_1013DD6B0 != -1)
    swift_once(&qword_1013DD6B0, sub_1009FF5C8);
  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", *(double *)&qword_101401620, *(double *)algn_101401628, xmmword_101401630);
  objc_msgSend(v0, "setView:", v1);

  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = v5;
  v7 = sub_1009FF1C4();
  objc_msgSend(v6, "addSubview:", v7);

  v8 = sub_1009FF08C();
  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v10 = v9;
  objc_msgSend(v9, "addSubview:", v8);

  v11 = sub_1009FF1C4();
  objc_msgSend(v11, "becomeFirstResponder");

  v12 = objc_msgSend(v0, "view");
  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, "layoutMarginsGuide");

  v15 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v16 = swift_allocObject(v15, 120, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100EF8610;
  v17 = objc_msgSend(v8, "topAnchor");
  v18 = objc_msgSend(v14, "topAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v16 + 32) = v19;
  v20 = objc_msgSend(v8, "leadingAnchor");
  v21 = objc_msgSend(v14, "leadingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v16 + 40) = v22;
  v23 = objc_msgSend(v8, "trailingAnchor");
  v24 = objc_msgSend(v14, "trailingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v16 + 48) = v25;
  v26 = sub_1009FF1C4();
  v27 = objc_msgSend(v26, "topAnchor");

  v65 = v8;
  v28 = objc_msgSend(v8, "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:", v28, 2.0);

  *(_QWORD *)(v16 + 56) = v29;
  v30 = sub_1009FF1C4();
  v31 = objc_msgSend(v30, "leadingAnchor");

  v32 = objc_msgSend(v14, "leadingAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v16 + 64) = v33;
  v34 = sub_1009FF1C4();
  v35 = objc_msgSend(v34, "trailingAnchor");

  v36 = objc_msgSend(v14, "trailingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v16 + 72) = v37;
  v38 = sub_1009FF1C4();
  v39 = objc_msgSend(v38, "heightAnchor");

  v40 = objc_msgSend(v14, "heightAnchor");
  v41 = objc_msgSend(v39, "constraintLessThanOrEqualToAnchor:", v40);

  *(_QWORD *)(v16 + 80) = v41;
  v42 = sub_1009FF1C4();
  v43 = objc_msgSend(v42, "heightAnchor");

  v44 = objc_msgSend(v43, "constraintGreaterThanOrEqualToConstant:", 40.0);
  *(_QWORD *)(v16 + 88) = v44;
  v45 = sub_1009FF1C4();
  v46 = objc_msgSend(v45, "bottomAnchor");

  v47 = objc_msgSend(v0, "view");
  if (!v47)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, "safeAreaLayoutGuide");

  v50 = objc_msgSend(v49, "bottomAnchor");
  v51 = objc_msgSend(v46, "constraintLessThanOrEqualToAnchor:", v50);

  *(_QWORD *)(v16 + 96) = v51;
  v52 = sub_1009FF1C4();
  v53 = objc_msgSend(v52, "bottomAnchor");

  v54 = objc_msgSend(v0, "view");
  if (v54)
  {
    v55 = v54;
    v56 = (void *)objc_opt_self(NSLayoutConstraint);
    v57 = objc_msgSend(v55, "keyboardLayoutGuide");

    v58 = objc_msgSend(v57, "topAnchor");
    v59 = objc_msgSend(v53, "constraintLessThanOrEqualToAnchor:constant:", v58, -12.0);

    *(_QWORD *)(v16 + 104) = v59;
    v60 = sub_1009FF1C4();
    v61 = objc_msgSend(v60, "bottomAnchor");

    v62 = objc_msgSend(v14, "bottomAnchor");
    v63 = objc_msgSend(v61, "constraintLessThanOrEqualToAnchor:", v62);

    *(_QWORD *)(v16 + 112) = v63;
    specialized Array._endMutation()(v64);
    sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v56, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    return;
  }
LABEL_15:
  __break(1u);
}

id sub_1009FECF8(char a1)
{
  char *v1;
  id v3;
  void *Strong;
  void *v5;
  objc_super v7;

  v3 = sub_1009FF1C4();

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_delegate]);
  if (Strong)
  {
    v5 = Strong;
    objc_msgSend(Strong, "accessibilityDescriptionEditor:didEndEditingWithReason:", v1, v1[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCancelled]);
    swift_unknownObjectRelease(v5);
  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  return objc_msgSendSuper2(&v7, "viewWillDisappear:", a1 & 1);
}

void sub_1009FEDE0(char a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  NSString v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  void *v19;
  id v20;
  id v21;

  if ((a1 & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
    v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v2);

    v4 = v3;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v5, v4);

    v7 = objc_allocWithZone((Class)UIBarButtonItem);
    v8 = v1;
    v9 = objc_msgSend(v7, "initWithImage:style:target:action:", v6, 0, v8, "triggerClose");

  }
  else
  {
    v9 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v1, "triggerClose");
  }
  v10 = (void *)objc_opt_self(NSBundle);
  v21 = v9;
  v11 = objc_msgSend(v10, "mainBundle");
  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, v13, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v16 = v15;

  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v21, "setAccessibilityLabel:", v17);

  v18 = objc_msgSend(v1, "navigationController");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "setNavigationBarHidden:animated:", 0, 0);

  }
  v20 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v20, "setRightBarButtonItem:", v21);

}

id sub_1009FF08C()
{
  id v0;
  NSString v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setText:", v1);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v0, "setFont:", v2);

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v3);

  objc_msgSend(v0, "setTextAlignment:", 4);
  objc_msgSend(v0, "setNumberOfLines:", 0);
  return v0;
}

id sub_1009FF1C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView);
  }
  else
  {
    v4 = sub_1009FF224(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1009FF224(uint64_t a1)
{
  id v2;
  NSString v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t inited;
  NSString *v12;
  id v13;
  unint64_t v14;
  id v15;
  void *v16;
  NSString *v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  id v21;
  NSString v22;
  Class isa;
  id v24;
  double v25;
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;
  _BYTE v30[72];

  v2 = objc_msgSend(objc_allocWithZone((Class)UITextView), "initWithFrame:textContainer:", 0, 0.0, 0.0, 0.0, 0.0);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v3);

  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "labelColor");
  objc_msgSend(v2, "setTextColor:", v5);

  v6 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v2, "setFont:", v6);

  v7 = v2;
  v8 = objc_msgSend(v4, "secondarySystemBackgroundColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  v9 = objc_msgSend(v7, "layer");
  objc_msgSend(v9, "setCornerRadius:", 15.0);

  v10 = sub_1004B804C((uint64_t *)&unk_1013F4250);
  inited = swift_initStackObject(v10, v30);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v12 = NSForegroundColorAttributeName;
  v13 = objc_msgSend(v4, "systemGrayColor");
  *(_QWORD *)(inited + 64) = sub_1004B8930(0, (unint64_t *)&qword_1013F4260, UIColor_ptr);
  *(_QWORD *)(inited + 40) = v13;
  v14 = sub_1008D4FE0(inited);
  v15 = objc_msgSend(v7, "font");
  if (v15)
  {
    v16 = v15;
    v29 = sub_1004B8930(0, (unint64_t *)&qword_101401710, UIFont_ptr);
    *(_QWORD *)&v28 = v16;
    sub_10050CB14(&v28, v27);
    v17 = NSFontAttributeName;
    v18 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    sub_100826134(v27, v17, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  v20 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_placeholderText + 8);
  v21 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain(v20);
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1004BFA1C();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v21, "initWithString:attributes:", v22, isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v7, "setAttributedPlaceholder:", v24);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v25) = 1132068864;
  objc_msgSend(v7, "setContentCompressionResistancePriority:forAxis:", 0, v25);
  return v7;
}

double sub_1009FF5C8()
{
  double result;

  qword_101401620 = 0;
  *(_QWORD *)algn_101401628 = 0;
  result = 520.0;
  xmmword_101401630 = xmmword_100F21A50;
  return result;
}

id sub_1009FF614()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController()
{
  return objc_opt_self(_TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController);
}

unsigned __int8 *sub_1009FF7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _BYTE *a12)
{
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  objc_super v30;

  swift_bridgeObjectRelease();
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCancelled] = 0;
  v18 = swift_unknownObjectWeakInit(&a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_delegate]);
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = 0;
  *(_QWORD *)&a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView] = 0;
  v19 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_initialAccessibilityDescription];
  *v19 = a1;
  v19[1] = a2;
  swift_unknownObjectWeakAssign(v18, a11);
  v20 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_titleText];
  *v20 = a3;
  v20[1] = a4;
  v21 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_subtitleText];
  *v21 = a5;
  v21[1] = a6;
  v22 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_placeholderText];
  *v22 = a9;
  v22[1] = a10;
  v30.receiver = a12;
  v30.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  v23 = (unsigned __int8 *)objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
  v24 = objc_msgSend(v23, "traitCollection");
  v25 = objc_msgSend(v24, "horizontalSizeClass");
  if (v25 != (id)1)
    LOBYTE(v25) = objc_msgSend(v24, "verticalSizeClass") == (id)1;
  v26 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact;
  v23[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = v25;
  sub_1009FEDE0((char)v25);
  LODWORD(v26) = v23[v26];

  if ((_DWORD)v26)
    v27 = 1;
  else
    v27 = 2;
  objc_msgSend(v23, "setModalPresentationStyle:", v27);

  v28 = v23;
  objc_msgSend(v28, "setModalInPresentation:", 0);

  swift_unknownObjectRelease(a11);
  return v28;
}

uint64_t sub_1009FF998(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(a1, "horizontalSizeClass");
  if (v3 != (id)1)
    LOBYTE(v3) = objc_msgSend(a1, "verticalSizeClass") == (id)1;
  v4 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact) = (_BYTE)v3;
  sub_1009FEDE0((char)v3);
  if (*(_BYTE *)(v1 + v4))
    return 1;
  else
    return 2;
}

uint64_t sub_1009FFA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;

  *(_OWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data) = xmmword_100F062D0;
  *(_OWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData) = xmmword_100F062D0;
  *(_OWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData) = xmmword_100F062D0;
  sub_1004E1B3C(a1, v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier);
  v28 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  v29 = *v28;
  v30 = v28[1];
  swift_bridgeObjectRetain(v30);
  sub_1004BBB8C(a1);
  v31 = (_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ownerName);
  *v31 = v29;
  v31[1] = v30;
  v32 = (_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
  *v32 = a2;
  v32[1] = a3;
  v32[2] = a4;
  v33 = v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_rootContainerUUID;
  v34 = type metadata accessor for UUID(0);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
  v35(v33, a5, v34);
  v35(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_alternateRootContainerUUID, a6, v34);
  v36 = (_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
  v37 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
  v38 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8);
  *v36 = a7;
  v36[1] = a8;
  sub_1004BE2FC(v37, v38);
  *(_BYTE *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_isLocalTombstone) = a11;
  *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_unsyncedChanges) = a12;
  *(_BYTE *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareUnsyncedChanges) = a13;
  v39 = (_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData);
  v40 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData);
  v41 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData + 8);
  *v39 = a14;
  v39[1] = a15;
  sub_1004BE2FC(v40, v41);
  *(double *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_tombstoneDate) = a9;
  *(_BYTE *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_hideFromRecentlyDeleted) = a16;
  v42 = (_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
  v43 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
  v44 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8);
  *v42 = a17;
  v42[1] = a18;
  sub_1004BE2FC(v43, v44);
  *(double *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_lastActivityTime) = a10;
  *(_BYTE *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_isDiscardable) = a19;
  return v19;
}

uint64_t sub_1009FFC44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  sub_1004BBB8C(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_rootContainerUUID;
  v2 = type metadata accessor for UUID(0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_alternateRootContainerUUID, v2);
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData + 8));
  sub_1004BE2FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData), *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1009FFD14()
{
  return type metadata accessor for CRLBoardDatabaseRow(0);
}

uint64_t type metadata accessor for CRLBoardDatabaseRow(uint64_t a1)
{
  uint64_t result;

  result = qword_101401740;
  if (!qword_101401740)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardDatabaseRow);
  return result;
}

uint64_t sub_1009FFD58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  char *v13;
  void *v14;
  void *v15;
  char *v16;
  void *v17;
  void *v18;

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_100F21AC8;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      v8 = &unk_100F21AE0;
      v9 = (char *)&value witness table for Builtin.Int64 + 64;
      v10 = &unk_100F21AF8;
      v11 = &unk_100F21B10;
      v12 = &unk_100F21AF8;
      v13 = (char *)&value witness table for Builtin.Int64 + 64;
      v14 = &unk_100F21AF8;
      v15 = &unk_100F21B10;
      v16 = (char *)&value witness table for Builtin.Int64 + 64;
      v17 = &unk_100F21AF8;
      v18 = &unk_100F21B10;
      return swift_updateClassMetadata2(a1, 256, 15, v5, a1 + 80);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardUnsyncedChanges()
{
  return &type metadata for CRLBoardUnsyncedChanges;
}

unint64_t sub_1009FFE34()
{
  unint64_t result;

  result = qword_101401970;
  if (!qword_101401970)
  {
    result = swift_getWitnessTable(&unk_100F21B78, &type metadata for CRLBoardUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_101401970);
  }
  return result;
}

unint64_t sub_1009FFE7C()
{
  unint64_t result;

  result = qword_101401978;
  if (!qword_101401978)
  {
    result = swift_getWitnessTable(&unk_100F21B48, &type metadata for CRLBoardUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_101401978);
  }
  return result;
}

unint64_t sub_1009FFEC4()
{
  unint64_t result;

  result = qword_101401980;
  if (!qword_101401980)
  {
    result = swift_getWitnessTable(&unk_100F21BA0, &type metadata for CRLBoardUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_101401980);
  }
  return result;
}

unint64_t sub_1009FFF0C()
{
  unint64_t result;

  result = qword_101401988;
  if (!qword_101401988)
  {
    result = swift_getWitnessTable(&unk_100F21BD8, &type metadata for CRLBoardUnsyncedChanges);
    atomic_store(result, (unint64_t *)&qword_101401988);
  }
  return result;
}

uint64_t sub_1009FFF50()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
}

uint64_t *OS_os_log.crlDefault.unsafeMutableAddressor()
{
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  return &static OS_os_log.crlDefault;
}

uint64_t *OS_os_log.crlStatusHUD.unsafeMutableAddressor()
{
  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  return &static OS_os_log.crlStatusHUD;
}

uint64_t *OS_os_log.crlFollow.unsafeMutableAddressor()
{
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  return &static OS_os_log.crlFollow;
}

uint64_t *OS_os_log.boardItemLifecycle.unsafeMutableAddressor()
{
  if (qword_1013DD8B8 != -1)
    swift_once(&qword_1013DD8B8, sub_100A06704);
  return &static OS_os_log.boardItemLifecycle;
}

uint64_t *OS_os_log.crlWarning.unsafeMutableAddressor()
{
  if (qword_1013DD6D0 != -1)
    swift_once(&qword_1013DD6D0, sub_100A00E84);
  return &static OS_os_log.crlWarning;
}

uint64_t *OS_os_log.shareState.unsafeMutableAddressor()
{
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  return &static OS_os_log.shareState;
}

uint64_t *OS_os_log.realTimeSync.unsafeMutableAddressor()
{
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  return &static OS_os_log.realTimeSync;
}

uint64_t *OS_os_log.crlSidebar.unsafeMutableAddressor()
{
  if (qword_1013DD7A8 != -1)
    swift_once(&qword_1013DD7A8, sub_100A03518);
  return &static OS_os_log.crlSidebar;
}

uint64_t *OS_os_log.crlCollaboratorCursor.unsafeMutableAddressor()
{
  if (qword_1013DD7B8 != -1)
    swift_once(&qword_1013DD7B8, sub_100A037D0);
  return &static OS_os_log.crlCollaboratorCursor;
}

uint64_t *OS_os_log.crlCollaborationParticipant.unsafeMutableAddressor()
{
  if (qword_1013DD710 != -1)
    swift_once(&qword_1013DD710, sub_100A01A20);
  return &static OS_os_log.crlCollaborationParticipant;
}

uint64_t *OS_os_log.crlInsertMedia.unsafeMutableAddressor()
{
  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  return &static OS_os_log.crlInsertMedia;
}

uint64_t *OS_os_log.crlRealTimeMessageTransfer.unsafeMutableAddressor()
{
  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  return &static OS_os_log.crlRealTimeMessageTransfer;
}

uint64_t *OS_os_log.crlFolderUI.unsafeMutableAddressor()
{
  if (qword_1013DD740 != -1)
    swift_once(&qword_1013DD740, sub_100A02288);
  return &static OS_os_log.crlFolderUI;
}

uint64_t *OS_os_log.dataSync.unsafeMutableAddressor()
{
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  return &static OS_os_log.dataSync;
}

uint64_t *OS_os_log.crlAnalytics.unsafeMutableAddressor()
{
  if (qword_1013DD730 != -1)
    swift_once(&qword_1013DD730, sub_100A01F88);
  return &static OS_os_log.crlAnalytics;
}

uint64_t *OS_os_log.assetManagement.unsafeMutableAddressor()
{
  if (qword_1013DD8C0 != -1)
    swift_once(&qword_1013DD8C0, sub_100A0685C);
  return &static OS_os_log.assetManagement;
}

uint64_t *OS_os_log.crlBoardPreviewImageCache.unsafeMutableAddressor()
{
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  return &static OS_os_log.crlBoardPreviewImageCache;
}

uint64_t *OS_os_log.appIntents.unsafeMutableAddressor()
{
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  return &static OS_os_log.appIntents;
}

uint64_t *OS_os_log.crlScenes.unsafeMutableAddressor()
{
  if (qword_1013DD7E0 != -1)
    swift_once(&qword_1013DD7E0, sub_100A03F14);
  return &static OS_os_log.crlScenes;
}

uint64_t *OS_os_log.crlAssetDownloadManager.unsafeMutableAddressor()
{
  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  return &static OS_os_log.crlAssetDownloadManager;
}

uint64_t *OS_os_log.crlError.unsafeMutableAddressor()
{
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  return &static OS_os_log.crlError;
}

uint64_t *OS_os_log.crlSharingExtension.unsafeMutableAddressor()
{
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  return &static OS_os_log.crlSharingExtension;
}

uint64_t *OS_os_log.sceneManagement.unsafeMutableAddressor()
{
  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  return &static OS_os_log.sceneManagement;
}

uint64_t *OS_os_log.crlSendACopy.unsafeMutableAddressor()
{
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  return &static OS_os_log.crlSendACopy;
}

uint64_t *OS_os_log.crlCloudKitEnvironment.unsafeMutableAddressor()
{
  if (qword_1013DD780 != -1)
    swift_once(&qword_1013DD780, sub_100A02D58);
  return &static OS_os_log.crlCloudKitEnvironment;
}

uint64_t *OS_os_log.crlTextInput.unsafeMutableAddressor()
{
  if (qword_1013DD6F0 != -1)
    swift_once(&qword_1013DD6F0, sub_100A01478);
  return &static OS_os_log.crlTextInput;
}

uint64_t *OS_os_log.suspendResumeCollaboration.unsafeMutableAddressor()
{
  if (qword_1013DD880 != -1)
    swift_once(&qword_1013DD880, sub_100A05C8C);
  return &static OS_os_log.suspendResumeCollaboration;
}

uint64_t *OS_os_log.crlPencilHover.unsafeMutableAddressor()
{
  if (qword_1013DD7D8 != -1)
    swift_once(&qword_1013DD7D8, sub_100A03DBC);
  return &static OS_os_log.crlPencilHover;
}

uint64_t *OS_os_log.crlThreeDimensionalObjects.unsafeMutableAddressor()
{
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  return &static OS_os_log.crlThreeDimensionalObjects;
}

uint64_t *OS_os_log.crlStorageHierachy.unsafeMutableAddressor()
{
  if (qword_1013DD700 != -1)
    swift_once(&qword_1013DD700, sub_100A01770);
  return &static OS_os_log.crlStorageHierachy;
}

uint64_t *OS_os_log.commandController.unsafeMutableAddressor()
{
  if (qword_1013DD878 != -1)
    swift_once(&qword_1013DD878, sub_100A05B34);
  return &static OS_os_log.commandController;
}

uint64_t *OS_os_log.crlBoardLibrary.unsafeMutableAddressor()
{
  if (qword_1013DD748 != -1)
    swift_once(&qword_1013DD748, sub_100A023E8);
  return &static OS_os_log.crlBoardLibrary;
}

uint64_t *OS_os_log.boardStore.unsafeMutableAddressor()
{
  if (qword_1013DD858 != -1)
    swift_once(&qword_1013DD858, sub_100A05554);
  return &static OS_os_log.boardStore;
}

uint64_t *OS_os_log.crlMiniFormatter.unsafeMutableAddressor()
{
  if (qword_1013DD818 != -1)
    swift_once(&qword_1013DD818, sub_100A04944);
  return &static OS_os_log.crlMiniFormatter;
}

uint64_t *OS_os_log.crlAssert.unsafeMutableAddressor()
{
  if (qword_1013DD6C0 != -1)
    swift_once(&qword_1013DD6C0, sub_100A00BCC);
  return &static OS_os_log.crlAssert;
}

uint64_t *OS_os_log.sideStore.unsafeMutableAddressor()
{
  if (qword_1013DD8D8 != -1)
    swift_once(&qword_1013DD8D8, sub_100A06CAC);
  return &static OS_os_log.sideStore;
}

uint64_t *OS_os_log.crlSerializableObject.unsafeMutableAddressor()
{
  if (qword_1013DD708 != -1)
    swift_once(&qword_1013DD708, sub_100A018C8);
  return &static OS_os_log.crlSerializableObject;
}

uint64_t *OS_os_log.crlNetworkReachability.unsafeMutableAddressor()
{
  if (qword_1013DD720 != -1)
    swift_once(&qword_1013DD720, sub_100A01CD8);
  return &static OS_os_log.crlNetworkReachability;
}

uint64_t *OS_os_log.crlZoneRefetch.unsafeMutableAddressor()
{
  if (qword_1013DD770 != -1)
    swift_once(&qword_1013DD770, sub_100A02AA0);
  return &static OS_os_log.crlZoneRefetch;
}

uint64_t *OS_os_log.crlCloudQuotaMessaging.unsafeMutableAddressor()
{
  if (qword_1013DD7F8 != -1)
    swift_once(&qword_1013DD7F8, sub_100A04364);
  return &static OS_os_log.crlCloudQuotaMessaging;
}

uint64_t *OS_os_log.crlStencilLibrary.unsafeMutableAddressor()
{
  if (qword_1013DD760 != -1)
    swift_once(&qword_1013DD760, sub_100A027F0);
  return &static OS_os_log.crlStencilLibrary;
}

uint64_t *OS_os_log.crlSpotlight.unsafeMutableAddressor()
{
  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  return &static OS_os_log.crlSpotlight;
}

uint64_t *OS_os_log.crlLayerAnimation.unsafeMutableAddressor()
{
  if (qword_1013DD808 != -1)
    swift_once(&qword_1013DD808, sub_100A04654);
  return &static OS_os_log.crlLayerAnimation;
}

uint64_t *OS_os_log.pasteboard.unsafeMutableAddressor()
{
  if (qword_1013DD8A8 != -1)
    swift_once(&qword_1013DD8A8, sub_100A06414);
  return &static OS_os_log.pasteboard;
}

void sub_100A00A6C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9068, v3, 33, 0);
  swift_beginAccess(&qword_10147E368, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9068, &qword_10147E368);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlDefault = (uint64_t)v1;
}

id static OS_os_log.crlDefault.getter()
{
  return sub_100A06D7C(&qword_1013DD6B8, (id *)&static OS_os_log.crlDefault, (uint64_t)sub_100A00A6C);
}

void static OS_os_log.crlDefault.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6B8, (void **)&static OS_os_log.crlDefault, (uint64_t)sub_100A00A6C);
}

uint64_t (*static OS_os_log.crlDefault.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6B8 != -1)
    swift_once(&qword_1013DD6B8, sub_100A00A6C);
  swift_beginAccess(&static OS_os_log.crlDefault, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A00BCC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9070, v3, 33, 0);
  swift_beginAccess(&qword_10147E370, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9070, &qword_10147E370);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlAssert = (uint64_t)v1;
}

id static OS_os_log.crlAssert.getter()
{
  return sub_100A06D7C(&qword_1013DD6C0, (id *)&static OS_os_log.crlAssert, (uint64_t)sub_100A00BCC);
}

void static OS_os_log.crlAssert.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6C0, (void **)&static OS_os_log.crlAssert, (uint64_t)sub_100A00BCC);
}

uint64_t (*static OS_os_log.crlAssert.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6C0 != -1)
    swift_once(&qword_1013DD6C0, sub_100A00BCC);
  swift_beginAccess(&static OS_os_log.crlAssert, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A00D28()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9078, v3, 33, 0);
  swift_beginAccess(&qword_10147E378, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9078, &qword_10147E378);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlError = (uint64_t)v1;
}

id static OS_os_log.crlError.getter()
{
  return sub_100A06D7C(&qword_1013DD6C8, (id *)&static OS_os_log.crlError, (uint64_t)sub_100A00D28);
}

void static OS_os_log.crlError.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6C8, (void **)&static OS_os_log.crlError, (uint64_t)sub_100A00D28);
}

uint64_t (*static OS_os_log.crlError.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  swift_beginAccess(&static OS_os_log.crlError, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A00E84()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9080, v3, 33, 0);
  swift_beginAccess(&qword_10147E380, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9080, &qword_10147E380);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlWarning = (uint64_t)v1;
}

id static OS_os_log.crlWarning.getter()
{
  return sub_100A06D7C(&qword_1013DD6D0, (id *)&static OS_os_log.crlWarning, (uint64_t)sub_100A00E84);
}

void static OS_os_log.crlWarning.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6D0, (void **)&static OS_os_log.crlWarning, (uint64_t)sub_100A00E84);
}

uint64_t (*static OS_os_log.crlWarning.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6D0 != -1)
    swift_once(&qword_1013DD6D0, sub_100A00E84);
  swift_beginAccess(&static OS_os_log.crlWarning, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A00FE4()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9088, v3, 33, 0);
  swift_beginAccess(&qword_10147E388, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9088, &qword_10147E388);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlAlert = (uint64_t)v1;
}

uint64_t *OS_os_log.crlAlert.unsafeMutableAddressor()
{
  if (qword_1013DD6D8 != -1)
    swift_once(&qword_1013DD6D8, sub_100A00FE4);
  return &static OS_os_log.crlAlert;
}

id static OS_os_log.crlAlert.getter()
{
  return sub_100A06D7C(&qword_1013DD6D8, (id *)&static OS_os_log.crlAlert, (uint64_t)sub_100A00FE4);
}

void static OS_os_log.crlAlert.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6D8, (void **)&static OS_os_log.crlAlert, (uint64_t)sub_100A00FE4);
}

uint64_t (*static OS_os_log.crlAlert.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6D8 != -1)
    swift_once(&qword_1013DD6D8, sub_100A00FE4);
  swift_beginAccess(&static OS_os_log.crlAlert, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01180()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9090, v3, 33, 0);
  swift_beginAccess(&qword_10147E390, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9090, &qword_10147E390);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlPerformance = (uint64_t)v1;
}

uint64_t *OS_os_log.crlPerformance.unsafeMutableAddressor()
{
  if (qword_1013DD6E0 != -1)
    swift_once(&qword_1013DD6E0, sub_100A01180);
  return &static OS_os_log.crlPerformance;
}

id static OS_os_log.crlPerformance.getter()
{
  return sub_100A06D7C(&qword_1013DD6E0, (id *)&static OS_os_log.crlPerformance, (uint64_t)sub_100A01180);
}

void static OS_os_log.crlPerformance.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6E0, (void **)&static OS_os_log.crlPerformance, (uint64_t)sub_100A01180);
}

uint64_t (*static OS_os_log.crlPerformance.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6E0 != -1)
    swift_once(&qword_1013DD6E0, sub_100A01180);
  swift_beginAccess(&static OS_os_log.crlPerformance, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01318()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9098, v3, 33, 0);
  swift_beginAccess(&qword_10147E398, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9098, &qword_10147E398);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlStatusHUD = (uint64_t)v1;
}

id static OS_os_log.crlStatusHUD.getter()
{
  return sub_100A06D7C(&qword_1013DD6E8, (id *)&static OS_os_log.crlStatusHUD, (uint64_t)sub_100A01318);
}

void static OS_os_log.crlStatusHUD.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6E8, (void **)&static OS_os_log.crlStatusHUD, (uint64_t)sub_100A01318);
}

uint64_t (*static OS_os_log.crlStatusHUD.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6E8 != -1)
    swift_once(&qword_1013DD6E8, sub_100A01318);
  swift_beginAccess(&static OS_os_log.crlStatusHUD, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01478()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90A0, v3, 33, 0);
  swift_beginAccess(&qword_10147E3A0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90A0, &qword_10147E3A0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlTextInput = (uint64_t)v1;
}

id static OS_os_log.crlTextInput.getter()
{
  return sub_100A06D7C(&qword_1013DD6F0, (id *)&static OS_os_log.crlTextInput, (uint64_t)sub_100A01478);
}

void static OS_os_log.crlTextInput.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6F0, (void **)&static OS_os_log.crlTextInput, (uint64_t)sub_100A01478);
}

uint64_t (*static OS_os_log.crlTextInput.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6F0 != -1)
    swift_once(&qword_1013DD6F0, sub_100A01478);
  swift_beginAccess(&static OS_os_log.crlTextInput, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A015D8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90A8, v3, 33, 0);
  swift_beginAccess(&qword_10147E3A8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90A8, &qword_10147E3A8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlTraceableResource = (uint64_t)v1;
}

uint64_t *OS_os_log.crlTraceableResource.unsafeMutableAddressor()
{
  if (qword_1013DD6F8 != -1)
    swift_once(&qword_1013DD6F8, sub_100A015D8);
  return &static OS_os_log.crlTraceableResource;
}

id static OS_os_log.crlTraceableResource.getter()
{
  return sub_100A06D7C(&qword_1013DD6F8, (id *)&static OS_os_log.crlTraceableResource, (uint64_t)sub_100A015D8);
}

void static OS_os_log.crlTraceableResource.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD6F8, (void **)&static OS_os_log.crlTraceableResource, (uint64_t)sub_100A015D8);
}

uint64_t (*static OS_os_log.crlTraceableResource.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD6F8 != -1)
    swift_once(&qword_1013DD6F8, sub_100A015D8);
  swift_beginAccess(&static OS_os_log.crlTraceableResource, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01770()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9130, v3, 33, 0);
  swift_beginAccess(&qword_10147E430, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9130, &qword_10147E430);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlStorageHierachy = (uint64_t)v1;
}

id static OS_os_log.crlStorageHierachy.getter()
{
  return sub_100A06D7C(&qword_1013DD700, (id *)&static OS_os_log.crlStorageHierachy, (uint64_t)sub_100A01770);
}

void static OS_os_log.crlStorageHierachy.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD700, (void **)&static OS_os_log.crlStorageHierachy, (uint64_t)sub_100A01770);
}

uint64_t (*static OS_os_log.crlStorageHierachy.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD700 != -1)
    swift_once(&qword_1013DD700, sub_100A01770);
  swift_beginAccess(&static OS_os_log.crlStorageHierachy, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A018C8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9168, v3, 33, 0);
  swift_beginAccess(&qword_10147E468, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9168, &qword_10147E468);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlSerializableObject = (uint64_t)v1;
}

id static OS_os_log.crlSerializableObject.getter()
{
  return sub_100A06D7C(&qword_1013DD708, (id *)&static OS_os_log.crlSerializableObject, (uint64_t)sub_100A018C8);
}

void static OS_os_log.crlSerializableObject.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD708, (void **)&static OS_os_log.crlSerializableObject, (uint64_t)sub_100A018C8);
}

uint64_t (*static OS_os_log.crlSerializableObject.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD708 != -1)
    swift_once(&qword_1013DD708, sub_100A018C8);
  swift_beginAccess(&static OS_os_log.crlSerializableObject, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01A20()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9170, v3, 33, 0);
  swift_beginAccess(&qword_10147E470, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9170, &qword_10147E470);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlCollaborationParticipant = (uint64_t)v1;
}

id static OS_os_log.crlCollaborationParticipant.getter()
{
  return sub_100A06D7C(&qword_1013DD710, (id *)&static OS_os_log.crlCollaborationParticipant, (uint64_t)sub_100A01A20);
}

void static OS_os_log.crlCollaborationParticipant.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD710, (void **)&static OS_os_log.crlCollaborationParticipant, (uint64_t)sub_100A01A20);
}

uint64_t (*static OS_os_log.crlCollaborationParticipant.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD710 != -1)
    swift_once(&qword_1013DD710, sub_100A01A20);
  swift_beginAccess(&static OS_os_log.crlCollaborationParticipant, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01B78()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9178, v3, 33, 0);
  swift_beginAccess(&qword_10147E478, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9178, &qword_10147E478);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlSpotlight = (uint64_t)v1;
}

id static OS_os_log.crlSpotlight.getter()
{
  return sub_100A06D7C(&qword_1013DD718, (id *)&static OS_os_log.crlSpotlight, (uint64_t)sub_100A01B78);
}

void static OS_os_log.crlSpotlight.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD718, (void **)&static OS_os_log.crlSpotlight, (uint64_t)sub_100A01B78);
}

uint64_t (*static OS_os_log.crlSpotlight.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD718 != -1)
    swift_once(&qword_1013DD718, sub_100A01B78);
  swift_beginAccess(&static OS_os_log.crlSpotlight, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01CD8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9180, v3, 33, 0);
  swift_beginAccess(&qword_10147E480, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9180, &qword_10147E480);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlNetworkReachability = (uint64_t)v1;
}

id static OS_os_log.crlNetworkReachability.getter()
{
  return sub_100A06D7C(&qword_1013DD720, (id *)&static OS_os_log.crlNetworkReachability, (uint64_t)sub_100A01CD8);
}

void static OS_os_log.crlNetworkReachability.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD720, (void **)&static OS_os_log.crlNetworkReachability, (uint64_t)sub_100A01CD8);
}

uint64_t (*static OS_os_log.crlNetworkReachability.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD720 != -1)
    swift_once(&qword_1013DD720, sub_100A01CD8);
  swift_beginAccess(&static OS_os_log.crlNetworkReachability, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01E30()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9188, v3, 33, 0);
  swift_beginAccess(&qword_10147E488, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9188, &qword_10147E488);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlAssetDownloadManager = (uint64_t)v1;
}

id static OS_os_log.crlAssetDownloadManager.getter()
{
  return sub_100A06D7C(&qword_1013DD728, (id *)&static OS_os_log.crlAssetDownloadManager, (uint64_t)sub_100A01E30);
}

void static OS_os_log.crlAssetDownloadManager.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD728, (void **)&static OS_os_log.crlAssetDownloadManager, (uint64_t)sub_100A01E30);
}

uint64_t (*static OS_os_log.crlAssetDownloadManager.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD728 != -1)
    swift_once(&qword_1013DD728, sub_100A01E30);
  swift_beginAccess(&static OS_os_log.crlAssetDownloadManager, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A01F88()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9190, v3, 33, 0);
  swift_beginAccess(&qword_10147E490, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9190, &qword_10147E490);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlAnalytics = (uint64_t)v1;
}

id static OS_os_log.crlAnalytics.getter()
{
  return sub_100A06D7C(&qword_1013DD730, (id *)&static OS_os_log.crlAnalytics, (uint64_t)sub_100A01F88);
}

void static OS_os_log.crlAnalytics.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD730, (void **)&static OS_os_log.crlAnalytics, (uint64_t)sub_100A01F88);
}

uint64_t (*static OS_os_log.crlAnalytics.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD730 != -1)
    swift_once(&qword_1013DD730, sub_100A01F88);
  swift_beginAccess(&static OS_os_log.crlAnalytics, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A020E8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9198, v3, 33, 0);
  swift_beginAccess(&qword_10147E498, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9198, &qword_10147E498);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlKeyboard = (uint64_t)v1;
}

uint64_t *OS_os_log.crlKeyboard.unsafeMutableAddressor()
{
  if (qword_1013DD738 != -1)
    swift_once(&qword_1013DD738, sub_100A020E8);
  return &static OS_os_log.crlKeyboard;
}

id static OS_os_log.crlKeyboard.getter()
{
  return sub_100A06D7C(&qword_1013DD738, (id *)&static OS_os_log.crlKeyboard, (uint64_t)sub_100A020E8);
}

void static OS_os_log.crlKeyboard.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD738, (void **)&static OS_os_log.crlKeyboard, (uint64_t)sub_100A020E8);
}

uint64_t (*static OS_os_log.crlKeyboard.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD738 != -1)
    swift_once(&qword_1013DD738, sub_100A020E8);
  swift_beginAccess(&static OS_os_log.crlKeyboard, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02288()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91A0, v3, 33, 0);
  swift_beginAccess(&qword_10147E4A0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91A0, &qword_10147E4A0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlFolderUI = (uint64_t)v1;
}

id static OS_os_log.crlFolderUI.getter()
{
  return sub_100A06D7C(&qword_1013DD740, (id *)&static OS_os_log.crlFolderUI, (uint64_t)sub_100A02288);
}

void static OS_os_log.crlFolderUI.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD740, (void **)&static OS_os_log.crlFolderUI, (uint64_t)sub_100A02288);
}

uint64_t (*static OS_os_log.crlFolderUI.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD740 != -1)
    swift_once(&qword_1013DD740, sub_100A02288);
  swift_beginAccess(&static OS_os_log.crlFolderUI, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A023E8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91B0, v3, 33, 0);
  swift_beginAccess(&qword_10147E4B0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91B0, &qword_10147E4B0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlBoardLibrary = (uint64_t)v1;
}

id static OS_os_log.crlBoardLibrary.getter()
{
  return sub_100A06D7C(&qword_1013DD748, (id *)&static OS_os_log.crlBoardLibrary, (uint64_t)sub_100A023E8);
}

void static OS_os_log.crlBoardLibrary.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD748, (void **)&static OS_os_log.crlBoardLibrary, (uint64_t)sub_100A023E8);
}

uint64_t (*static OS_os_log.crlBoardLibrary.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD748 != -1)
    swift_once(&qword_1013DD748, sub_100A023E8);
  swift_beginAccess(&static OS_os_log.crlBoardLibrary, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02540()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91B8, v3, 33, 0);
  swift_beginAccess(&qword_10147E4B8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91B8, &qword_10147E4B8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlBoardPreviewImageCache = (uint64_t)v1;
}

id static OS_os_log.crlBoardPreviewImageCache.getter()
{
  return sub_100A06D7C(&qword_1013DD750, (id *)&static OS_os_log.crlBoardPreviewImageCache, (uint64_t)sub_100A02540);
}

void static OS_os_log.crlBoardPreviewImageCache.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD750, (void **)&static OS_os_log.crlBoardPreviewImageCache, (uint64_t)sub_100A02540);
}

uint64_t (*static OS_os_log.crlBoardPreviewImageCache.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD750 != -1)
    swift_once(&qword_1013DD750, sub_100A02540);
  swift_beginAccess(&static OS_os_log.crlBoardPreviewImageCache, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02698()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91C0, v3, 33, 0);
  swift_beginAccess(&qword_10147E4C0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91C0, &qword_10147E4C0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlSharingExtension = (uint64_t)v1;
}

id static OS_os_log.crlSharingExtension.getter()
{
  return sub_100A06D7C(&qword_1013DD758, (id *)&static OS_os_log.crlSharingExtension, (uint64_t)sub_100A02698);
}

void static OS_os_log.crlSharingExtension.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD758, (void **)&static OS_os_log.crlSharingExtension, (uint64_t)sub_100A02698);
}

uint64_t (*static OS_os_log.crlSharingExtension.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD758 != -1)
    swift_once(&qword_1013DD758, sub_100A02698);
  swift_beginAccess(&static OS_os_log.crlSharingExtension, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A027F0()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91C8, v3, 33, 0);
  swift_beginAccess(&qword_10147E4C8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91C8, &qword_10147E4C8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlStencilLibrary = (uint64_t)v1;
}

id static OS_os_log.crlStencilLibrary.getter()
{
  return sub_100A06D7C(&qword_1013DD760, (id *)&static OS_os_log.crlStencilLibrary, (uint64_t)sub_100A027F0);
}

void static OS_os_log.crlStencilLibrary.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD760, (void **)&static OS_os_log.crlStencilLibrary, (uint64_t)sub_100A027F0);
}

uint64_t (*static OS_os_log.crlStencilLibrary.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD760 != -1)
    swift_once(&qword_1013DD760, sub_100A027F0);
  swift_beginAccess(&static OS_os_log.crlStencilLibrary, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02948()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90D8, v3, 33, 0);
  swift_beginAccess(&qword_10147E3D8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90D8, &qword_10147E3D8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlRealTimeMessageTransfer = (uint64_t)v1;
}

id static OS_os_log.crlRealTimeMessageTransfer.getter()
{
  return sub_100A06D7C(&qword_1013DD768, (id *)&static OS_os_log.crlRealTimeMessageTransfer, (uint64_t)sub_100A02948);
}

void static OS_os_log.crlRealTimeMessageTransfer.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD768, (void **)&static OS_os_log.crlRealTimeMessageTransfer, (uint64_t)sub_100A02948);
}

uint64_t (*static OS_os_log.crlRealTimeMessageTransfer.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD768 != -1)
    swift_once(&qword_1013DD768, sub_100A02948);
  swift_beginAccess(&static OS_os_log.crlRealTimeMessageTransfer, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02AA0()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90E0, v3, 33, 0);
  swift_beginAccess(&qword_10147E3E0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90E0, &qword_10147E3E0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlZoneRefetch = (uint64_t)v1;
}

id static OS_os_log.crlZoneRefetch.getter()
{
  return sub_100A06D7C(&qword_1013DD770, (id *)&static OS_os_log.crlZoneRefetch, (uint64_t)sub_100A02AA0);
}

void static OS_os_log.crlZoneRefetch.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD770, (void **)&static OS_os_log.crlZoneRefetch, (uint64_t)sub_100A02AA0);
}

uint64_t (*static OS_os_log.crlZoneRefetch.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD770 != -1)
    swift_once(&qword_1013DD770, sub_100A02AA0);
  swift_beginAccess(&static OS_os_log.crlZoneRefetch, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02BF8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9248, v3, 33, 0);
  swift_beginAccess(&qword_10147E548, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9248, &qword_10147E548);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlSendACopy = (uint64_t)v1;
}

id static OS_os_log.crlSendACopy.getter()
{
  return sub_100A06D7C(&qword_1013DD778, (id *)&static OS_os_log.crlSendACopy, (uint64_t)sub_100A02BF8);
}

void static OS_os_log.crlSendACopy.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD778, (void **)&static OS_os_log.crlSendACopy, (uint64_t)sub_100A02BF8);
}

uint64_t (*static OS_os_log.crlSendACopy.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD778 != -1)
    swift_once(&qword_1013DD778, sub_100A02BF8);
  swift_beginAccess(&static OS_os_log.crlSendACopy, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02D58()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9250, v3, 33, 0);
  swift_beginAccess(&qword_10147E550, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9250, &qword_10147E550);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlCloudKitEnvironment = (uint64_t)v1;
}

id static OS_os_log.crlCloudKitEnvironment.getter()
{
  return sub_100A06D7C(&qword_1013DD780, (id *)&static OS_os_log.crlCloudKitEnvironment, (uint64_t)sub_100A02D58);
}

void static OS_os_log.crlCloudKitEnvironment.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD780, (void **)&static OS_os_log.crlCloudKitEnvironment, (uint64_t)sub_100A02D58);
}

uint64_t (*static OS_os_log.crlCloudKitEnvironment.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD780 != -1)
    swift_once(&qword_1013DD780, sub_100A02D58);
  swift_beginAccess(&static OS_os_log.crlCloudKitEnvironment, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A02EB0()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013DB588, v3, 33, 0);
  swift_beginAccess(&qword_10147E5D0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013DB588, &qword_10147E5D0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlGesture = (uint64_t)v1;
}

uint64_t *OS_os_log.crlGesture.unsafeMutableAddressor()
{
  if (qword_1013DD788 != -1)
    swift_once(&qword_1013DD788, sub_100A02EB0);
  return &static OS_os_log.crlGesture;
}

id static OS_os_log.crlGesture.getter()
{
  return sub_100A06D7C(&qword_1013DD788, (id *)&static OS_os_log.crlGesture, (uint64_t)sub_100A02EB0);
}

void static OS_os_log.crlGesture.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD788, (void **)&static OS_os_log.crlGesture, (uint64_t)sub_100A02EB0);
}

uint64_t (*static OS_os_log.crlGesture.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD788 != -1)
    swift_once(&qword_1013DD788, sub_100A02EB0);
  swift_beginAccess(&static OS_os_log.crlGesture, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03050()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013DB590, v3, 33, 0);
  swift_beginAccess(&qword_10147E5D8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013DB590, &qword_10147E5D8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlGesturePlus = (uint64_t)v1;
}

uint64_t *OS_os_log.crlGesturePlus.unsafeMutableAddressor()
{
  if (qword_1013DD790 != -1)
    swift_once(&qword_1013DD790, sub_100A03050);
  return &static OS_os_log.crlGesturePlus;
}

id static OS_os_log.crlGesturePlus.getter()
{
  return sub_100A06D7C(&qword_1013DD790, (id *)&static OS_os_log.crlGesturePlus, (uint64_t)sub_100A03050);
}

void static OS_os_log.crlGesturePlus.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD790, (void **)&static OS_os_log.crlGesturePlus, (uint64_t)sub_100A03050);
}

uint64_t (*static OS_os_log.crlGesturePlus.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD790 != -1)
    swift_once(&qword_1013DD790, sub_100A03050);
  swift_beginAccess(&static OS_os_log.crlGesturePlus, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A031E8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013DB598, v3, 33, 0);
  swift_beginAccess(&qword_10147E5E0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013DB598, &qword_10147E5E0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlGestureMonitor = (uint64_t)v1;
}

uint64_t *OS_os_log.crlGestureMonitor.unsafeMutableAddressor()
{
  if (qword_1013DD798 != -1)
    swift_once(&qword_1013DD798, sub_100A031E8);
  return &static OS_os_log.crlGestureMonitor;
}

id static OS_os_log.crlGestureMonitor.getter()
{
  return sub_100A06D7C(&qword_1013DD798, (id *)&static OS_os_log.crlGestureMonitor, (uint64_t)sub_100A031E8);
}

void static OS_os_log.crlGestureMonitor.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD798, (void **)&static OS_os_log.crlGestureMonitor, (uint64_t)sub_100A031E8);
}

uint64_t (*static OS_os_log.crlGestureMonitor.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD798 != -1)
    swift_once(&qword_1013DD798, sub_100A031E8);
  swift_beginAccess(&static OS_os_log.crlGestureMonitor, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03380()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013DC0D0, v3, 33, 0);
  swift_beginAccess(&qword_10147E5F8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013DC0D0, &qword_10147E5F8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlInteractiveCanvasLayer = (uint64_t)v1;
}

uint64_t *OS_os_log.crlInteractiveCanvasLayer.unsafeMutableAddressor()
{
  if (qword_1013DD7A0 != -1)
    swift_once(&qword_1013DD7A0, sub_100A03380);
  return &static OS_os_log.crlInteractiveCanvasLayer;
}

id static OS_os_log.crlInteractiveCanvasLayer.getter()
{
  return sub_100A06D7C(&qword_1013DD7A0, (id *)&static OS_os_log.crlInteractiveCanvasLayer, (uint64_t)sub_100A03380);
}

void static OS_os_log.crlInteractiveCanvasLayer.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7A0, (void **)&static OS_os_log.crlInteractiveCanvasLayer, (uint64_t)sub_100A03380);
}

uint64_t (*static OS_os_log.crlInteractiveCanvasLayer.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7A0 != -1)
    swift_once(&qword_1013DD7A0, sub_100A03380);
  swift_beginAccess(&static OS_os_log.crlInteractiveCanvasLayer, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03518()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91D0, v3, 33, 0);
  swift_beginAccess(&qword_10147E4D0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91D0, &qword_10147E4D0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlSidebar = (uint64_t)v1;
}

id static OS_os_log.crlSidebar.getter()
{
  return sub_100A06D7C(&qword_1013DD7A8, (id *)&static OS_os_log.crlSidebar, (uint64_t)sub_100A03518);
}

void static OS_os_log.crlSidebar.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7A8, (void **)&static OS_os_log.crlSidebar, (uint64_t)sub_100A03518);
}

uint64_t (*static OS_os_log.crlSidebar.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7A8 != -1)
    swift_once(&qword_1013DD7A8, sub_100A03518);
  swift_beginAccess(&static OS_os_log.crlSidebar, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03678()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91D8, v3, 33, 0);
  swift_beginAccess(&qword_10147E4D8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91D8, &qword_10147E4D8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlInsertMedia = (uint64_t)v1;
}

id static OS_os_log.crlInsertMedia.getter()
{
  return sub_100A06D7C(&qword_1013DD7B0, (id *)&static OS_os_log.crlInsertMedia, (uint64_t)sub_100A03678);
}

void static OS_os_log.crlInsertMedia.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7B0, (void **)&static OS_os_log.crlInsertMedia, (uint64_t)sub_100A03678);
}

uint64_t (*static OS_os_log.crlInsertMedia.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7B0 != -1)
    swift_once(&qword_1013DD7B0, sub_100A03678);
  swift_beginAccess(&static OS_os_log.crlInsertMedia, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A037D0()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91E0, v3, 33, 0);
  swift_beginAccess(&qword_10147E4E0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91E0, &qword_10147E4E0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlCollaboratorCursor = (uint64_t)v1;
}

id static OS_os_log.crlCollaboratorCursor.getter()
{
  return sub_100A06D7C(&qword_1013DD7B8, (id *)&static OS_os_log.crlCollaboratorCursor, (uint64_t)sub_100A037D0);
}

void static OS_os_log.crlCollaboratorCursor.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7B8, (void **)&static OS_os_log.crlCollaboratorCursor, (uint64_t)sub_100A037D0);
}

uint64_t (*static OS_os_log.crlCollaboratorCursor.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7B8 != -1)
    swift_once(&qword_1013DD7B8, sub_100A037D0);
  swift_beginAccess(&static OS_os_log.crlCollaboratorCursor, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03928()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91E8, v3, 33, 0);
  swift_beginAccess(&qword_10147E4E8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91E8, &qword_10147E4E8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlStateRestoration = (uint64_t)v1;
}

uint64_t *OS_os_log.crlStateRestoration.unsafeMutableAddressor()
{
  if (qword_1013DD7C0 != -1)
    swift_once(&qword_1013DD7C0, sub_100A03928);
  return &static OS_os_log.crlStateRestoration;
}

id static OS_os_log.crlStateRestoration.getter()
{
  return sub_100A06D7C(&qword_1013DD7C0, (id *)&static OS_os_log.crlStateRestoration, (uint64_t)sub_100A03928);
}

void static OS_os_log.crlStateRestoration.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7C0, (void **)&static OS_os_log.crlStateRestoration, (uint64_t)sub_100A03928);
}

uint64_t (*static OS_os_log.crlStateRestoration.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7C0 != -1)
    swift_once(&qword_1013DD7C0, sub_100A03928);
  swift_beginAccess(&static OS_os_log.crlStateRestoration, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03AC0()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91F8, v3, 33, 0);
  swift_beginAccess(&qword_10147E4F8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91F8, &qword_10147E4F8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlFollow = (uint64_t)v1;
}

id static OS_os_log.crlFollow.getter()
{
  return sub_100A06D7C(&qword_1013DD7C8, (id *)&static OS_os_log.crlFollow, (uint64_t)sub_100A03AC0);
}

void static OS_os_log.crlFollow.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7C8, (void **)&static OS_os_log.crlFollow, (uint64_t)sub_100A03AC0);
}

uint64_t (*static OS_os_log.crlFollow.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7C8 != -1)
    swift_once(&qword_1013DD7C8, sub_100A03AC0);
  swift_beginAccess(&static OS_os_log.crlFollow, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03C1C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9200, v3, 33, 0);
  swift_beginAccess(&qword_10147E500, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9200, &qword_10147E500);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlJoinLeave = (uint64_t)v1;
}

uint64_t *OS_os_log.crlJoinLeave.unsafeMutableAddressor()
{
  if (qword_1013DD7D0 != -1)
    swift_once(&qword_1013DD7D0, sub_100A03C1C);
  return &static OS_os_log.crlJoinLeave;
}

id static OS_os_log.crlJoinLeave.getter()
{
  return sub_100A06D7C(&qword_1013DD7D0, (id *)&static OS_os_log.crlJoinLeave, (uint64_t)sub_100A03C1C);
}

void static OS_os_log.crlJoinLeave.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7D0, (void **)&static OS_os_log.crlJoinLeave, (uint64_t)sub_100A03C1C);
}

uint64_t (*static OS_os_log.crlJoinLeave.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7D0 != -1)
    swift_once(&qword_1013DD7D0, sub_100A03C1C);
  swift_beginAccess(&static OS_os_log.crlJoinLeave, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03DBC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9208, v3, 33, 0);
  swift_beginAccess(&qword_10147E508, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9208, &qword_10147E508);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlPencilHover = (uint64_t)v1;
}

id static OS_os_log.crlPencilHover.getter()
{
  return sub_100A06D7C(&qword_1013DD7D8, (id *)&static OS_os_log.crlPencilHover, (uint64_t)sub_100A03DBC);
}

void static OS_os_log.crlPencilHover.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7D8, (void **)&static OS_os_log.crlPencilHover, (uint64_t)sub_100A03DBC);
}

uint64_t (*static OS_os_log.crlPencilHover.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7D8 != -1)
    swift_once(&qword_1013DD7D8, sub_100A03DBC);
  swift_beginAccess(&static OS_os_log.crlPencilHover, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A03F14()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9210, v3, 33, 0);
  swift_beginAccess(&qword_10147E510, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9210, &qword_10147E510);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlScenes = (uint64_t)v1;
}

id static OS_os_log.crlScenes.getter()
{
  return sub_100A06D7C(&qword_1013DD7E0, (id *)&static OS_os_log.crlScenes, (uint64_t)sub_100A03F14);
}

void static OS_os_log.crlScenes.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7E0, (void **)&static OS_os_log.crlScenes, (uint64_t)sub_100A03F14);
}

uint64_t (*static OS_os_log.crlScenes.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7E0 != -1)
    swift_once(&qword_1013DD7E0, sub_100A03F14);
  swift_beginAccess(&static OS_os_log.crlScenes, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04074()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9218, v3, 33, 0);
  swift_beginAccess(&qword_10147E518, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9218, &qword_10147E518);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlThreeDimensionalObjects = (uint64_t)v1;
}

id static OS_os_log.crlThreeDimensionalObjects.getter()
{
  return sub_100A06D7C(&qword_1013DD7E8, (id *)&static OS_os_log.crlThreeDimensionalObjects, (uint64_t)sub_100A04074);
}

void static OS_os_log.crlThreeDimensionalObjects.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7E8, (void **)&static OS_os_log.crlThreeDimensionalObjects, (uint64_t)sub_100A04074);
}

uint64_t (*static OS_os_log.crlThreeDimensionalObjects.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7E8 != -1)
    swift_once(&qword_1013DD7E8, sub_100A04074);
  swift_beginAccess(&static OS_os_log.crlThreeDimensionalObjects, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A041CC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9220, v3, 33, 0);
  swift_beginAccess(&qword_10147E520, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9220, &qword_10147E520);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlChangeShape = (uint64_t)v1;
}

uint64_t *OS_os_log.crlChangeShape.unsafeMutableAddressor()
{
  if (qword_1013DD7F0 != -1)
    swift_once(&qword_1013DD7F0, sub_100A041CC);
  return &static OS_os_log.crlChangeShape;
}

id static OS_os_log.crlChangeShape.getter()
{
  return sub_100A06D7C(&qword_1013DD7F0, (id *)&static OS_os_log.crlChangeShape, (uint64_t)sub_100A041CC);
}

void static OS_os_log.crlChangeShape.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7F0, (void **)&static OS_os_log.crlChangeShape, (uint64_t)sub_100A041CC);
}

uint64_t (*static OS_os_log.crlChangeShape.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7F0 != -1)
    swift_once(&qword_1013DD7F0, sub_100A041CC);
  swift_beginAccess(&static OS_os_log.crlChangeShape, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04364()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9228, v3, 33, 0);
  swift_beginAccess(&qword_10147E528, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9228, &qword_10147E528);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlCloudQuotaMessaging = (uint64_t)v1;
}

id static OS_os_log.crlCloudQuotaMessaging.getter()
{
  return sub_100A06D7C(&qword_1013DD7F8, (id *)&static OS_os_log.crlCloudQuotaMessaging, (uint64_t)sub_100A04364);
}

void static OS_os_log.crlCloudQuotaMessaging.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD7F8, (void **)&static OS_os_log.crlCloudQuotaMessaging, (uint64_t)sub_100A04364);
}

uint64_t (*static OS_os_log.crlCloudQuotaMessaging.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD7F8 != -1)
    swift_once(&qword_1013DD7F8, sub_100A04364);
  swift_beginAccess(&static OS_os_log.crlCloudQuotaMessaging, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A044BC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9230, v3, 33, 0);
  swift_beginAccess(&qword_10147E530, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9230, &qword_10147E530);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crl3DBreakthrough = (uint64_t)v1;
}

uint64_t *OS_os_log.crl3DBreakthrough.unsafeMutableAddressor()
{
  if (qword_1013DD800 != -1)
    swift_once(&qword_1013DD800, sub_100A044BC);
  return &static OS_os_log.crl3DBreakthrough;
}

id static OS_os_log.crl3DBreakthrough.getter()
{
  return sub_100A06D7C(&qword_1013DD800, (id *)&static OS_os_log.crl3DBreakthrough, (uint64_t)sub_100A044BC);
}

void static OS_os_log.crl3DBreakthrough.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD800, (void **)&static OS_os_log.crl3DBreakthrough, (uint64_t)sub_100A044BC);
}

uint64_t (*static OS_os_log.crl3DBreakthrough.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD800 != -1)
    swift_once(&qword_1013DD800, sub_100A044BC);
  swift_beginAccess(&static OS_os_log.crl3DBreakthrough, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04654()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9238, v3, 33, 0);
  swift_beginAccess(&qword_10147E538, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9238, &qword_10147E538);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlLayerAnimation = (uint64_t)v1;
}

id static OS_os_log.crlLayerAnimation.getter()
{
  return sub_100A06D7C(&qword_1013DD808, (id *)&static OS_os_log.crlLayerAnimation, (uint64_t)sub_100A04654);
}

void static OS_os_log.crlLayerAnimation.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD808, (void **)&static OS_os_log.crlLayerAnimation, (uint64_t)sub_100A04654);
}

uint64_t (*static OS_os_log.crlLayerAnimation.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD808 != -1)
    swift_once(&qword_1013DD808, sub_100A04654);
  swift_beginAccess(&static OS_os_log.crlLayerAnimation, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A047AC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9240, v3, 33, 0);
  swift_beginAccess(&qword_10147E540, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9240, &qword_10147E540);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlAnimationImpl = (uint64_t)v1;
}

uint64_t *OS_os_log.crlAnimationImpl.unsafeMutableAddressor()
{
  if (qword_1013DD810 != -1)
    swift_once(&qword_1013DD810, sub_100A047AC);
  return &static OS_os_log.crlAnimationImpl;
}

id static OS_os_log.crlAnimationImpl.getter()
{
  return sub_100A06D7C(&qword_1013DD810, (id *)&static OS_os_log.crlAnimationImpl, (uint64_t)sub_100A047AC);
}

void static OS_os_log.crlAnimationImpl.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD810, (void **)&static OS_os_log.crlAnimationImpl, (uint64_t)sub_100A047AC);
}

uint64_t (*static OS_os_log.crlAnimationImpl.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD810 != -1)
    swift_once(&qword_1013DD810, sub_100A047AC);
  swift_beginAccess(&static OS_os_log.crlAnimationImpl, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04944()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9258, v3, 33, 0);
  swift_beginAccess(&qword_10147E558, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9258, &qword_10147E558);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.crlMiniFormatter = (uint64_t)v1;
}

id static OS_os_log.crlMiniFormatter.getter()
{
  return sub_100A06D7C(&qword_1013DD818, (id *)&static OS_os_log.crlMiniFormatter, (uint64_t)sub_100A04944);
}

void static OS_os_log.crlMiniFormatter.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD818, (void **)&static OS_os_log.crlMiniFormatter, (uint64_t)sub_100A04944);
}

uint64_t (*static OS_os_log.crlMiniFormatter.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD818 != -1)
    swift_once(&qword_1013DD818, sub_100A04944);
  swift_beginAccess(&static OS_os_log.crlMiniFormatter, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04A9C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9128, v3, 33, 0);
  swift_beginAccess(&qword_10147E428, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9128, &qword_10147E428);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.sceneManagement = (uint64_t)v1;
}

id static OS_os_log.sceneManagement.getter()
{
  return sub_100A06D7C(&qword_1013DD820, (id *)&static OS_os_log.sceneManagement, (uint64_t)sub_100A04A9C);
}

void static OS_os_log.sceneManagement.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD820, (void **)&static OS_os_log.sceneManagement, (uint64_t)sub_100A04A9C);
}

uint64_t (*static OS_os_log.sceneManagement.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD820 != -1)
    swift_once(&qword_1013DD820, sub_100A04A9C);
  swift_beginAccess(&static OS_os_log.sceneManagement, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04BFC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9108, v3, 33, 0);
  swift_beginAccess(&qword_10147E408, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9108, &qword_10147E408);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.composition = (uint64_t)v1;
}

uint64_t *OS_os_log.composition.unsafeMutableAddressor()
{
  if (qword_1013DD828 != -1)
    swift_once(&qword_1013DD828, sub_100A04BFC);
  return &static OS_os_log.composition;
}

id static OS_os_log.composition.getter()
{
  return sub_100A06D7C(&qword_1013DD828, (id *)&static OS_os_log.composition, (uint64_t)sub_100A04BFC);
}

void static OS_os_log.composition.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD828, (void **)&static OS_os_log.composition, (uint64_t)sub_100A04BFC);
}

uint64_t (*static OS_os_log.composition.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD828 != -1)
    swift_once(&qword_1013DD828, sub_100A04BFC);
  swift_beginAccess(&static OS_os_log.composition, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04D98()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90B0, v3, 33, 0);
  swift_beginAccess(&qword_10147E3B0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90B0, &qword_10147E3B0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.CRLViewController = (uint64_t)v1;
}

uint64_t *OS_os_log.CRLViewController.unsafeMutableAddressor()
{
  if (qword_1013DD830 != -1)
    swift_once(&qword_1013DD830, sub_100A04D98);
  return &static OS_os_log.CRLViewController;
}

id static OS_os_log.CRLViewController.getter()
{
  return sub_100A06D7C(&qword_1013DD830, (id *)&static OS_os_log.CRLViewController, (uint64_t)sub_100A04D98);
}

void static OS_os_log.CRLViewController.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD830, (void **)&static OS_os_log.CRLViewController, (uint64_t)sub_100A04D98);
}

uint64_t (*static OS_os_log.CRLViewController.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD830 != -1)
    swift_once(&qword_1013DD830, sub_100A04D98);
  swift_beginAccess(&static OS_os_log.CRLViewController, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A04F30()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90B8, v3, 33, 0);
  swift_beginAccess(&qword_10147E3B8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90B8, &qword_10147E3B8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.appIntents = (uint64_t)v1;
}

id static OS_os_log.appIntents.getter()
{
  return sub_100A06D7C(&qword_1013DD838, (id *)&static OS_os_log.appIntents, (uint64_t)sub_100A04F30);
}

void static OS_os_log.appIntents.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD838, (void **)&static OS_os_log.appIntents, (uint64_t)sub_100A04F30);
}

uint64_t (*static OS_os_log.appIntents.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, a1, 33, 0);
  return j__swift_endAccess_0;
}

void sub_100A05088()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90C0, v3, 33, 0);
  swift_beginAccess(&qword_10147E3C0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90C0, &qword_10147E3C0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.appState = (uint64_t)v1;
}

uint64_t *OS_os_log.appState.unsafeMutableAddressor()
{
  if (qword_1013DD840 != -1)
    swift_once(&qword_1013DD840, sub_100A05088);
  return &static OS_os_log.appState;
}

id static OS_os_log.appState.getter()
{
  return sub_100A06D7C(&qword_1013DD840, (id *)&static OS_os_log.appState, (uint64_t)sub_100A05088);
}

void static OS_os_log.appState.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD840, (void **)&static OS_os_log.appState, (uint64_t)sub_100A05088);
}

uint64_t (*static OS_os_log.appState.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD840 != -1)
    swift_once(&qword_1013DD840, sub_100A05088);
  swift_beginAccess(&static OS_os_log.appState, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A0521C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9118, v3, 33, 0);
  swift_beginAccess(&qword_10147E418, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9118, &qword_10147E418);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.interaction = (uint64_t)v1;
}

uint64_t *OS_os_log.interaction.unsafeMutableAddressor()
{
  if (qword_1013DD848 != -1)
    swift_once(&qword_1013DD848, sub_100A0521C);
  return &static OS_os_log.interaction;
}

id static OS_os_log.interaction.getter()
{
  return sub_100A06D7C(&qword_1013DD848, (id *)&static OS_os_log.interaction, (uint64_t)sub_100A0521C);
}

void static OS_os_log.interaction.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD848, (void **)&static OS_os_log.interaction, (uint64_t)sub_100A0521C);
}

uint64_t (*static OS_os_log.interaction.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD848 != -1)
    swift_once(&qword_1013DD848, sub_100A0521C);
  swift_beginAccess(&static OS_os_log.interaction, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A053B8()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9110, v3, 33, 0);
  swift_beginAccess(&qword_10147E410, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9110, &qword_10147E410);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.contentState = (uint64_t)v1;
}

uint64_t *OS_os_log.contentState.unsafeMutableAddressor()
{
  if (qword_1013DD850 != -1)
    swift_once(&qword_1013DD850, sub_100A053B8);
  return &static OS_os_log.contentState;
}

id static OS_os_log.contentState.getter()
{
  return sub_100A06D7C(&qword_1013DD850, (id *)&static OS_os_log.contentState, (uint64_t)sub_100A053B8);
}

void static OS_os_log.contentState.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD850, (void **)&static OS_os_log.contentState, (uint64_t)sub_100A053B8);
}

uint64_t (*static OS_os_log.contentState.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD850 != -1)
    swift_once(&qword_1013DD850, sub_100A053B8);
  swift_beginAccess(&static OS_os_log.contentState, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A05554()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90E8, v3, 33, 0);
  swift_beginAccess(&qword_10147E3E8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90E8, &qword_10147E3E8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.boardStore = (uint64_t)v1;
}

id static OS_os_log.boardStore.getter()
{
  return sub_100A06D7C(&qword_1013DD858, (id *)&static OS_os_log.boardStore, (uint64_t)sub_100A05554);
}

void static OS_os_log.boardStore.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD858, (void **)&static OS_os_log.boardStore, (uint64_t)sub_100A05554);
}

uint64_t (*static OS_os_log.boardStore.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD858 != -1)
    swift_once(&qword_1013DD858, sub_100A05554);
  swift_beginAccess(&static OS_os_log.boardStore, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A056AC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90F0, v3, 33, 0);
  swift_beginAccess(&qword_10147E3F0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90F0, &qword_10147E3F0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.fileProviderStore = (uint64_t)v1;
}

uint64_t *OS_os_log.fileProviderStore.unsafeMutableAddressor()
{
  if (qword_1013DD860 != -1)
    swift_once(&qword_1013DD860, sub_100A056AC);
  return &static OS_os_log.fileProviderStore;
}

id static OS_os_log.fileProviderStore.getter()
{
  return sub_100A06D7C(&qword_1013DD860, (id *)&static OS_os_log.fileProviderStore, (uint64_t)sub_100A056AC);
}

void static OS_os_log.fileProviderStore.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD860, (void **)&static OS_os_log.fileProviderStore, (uint64_t)sub_100A056AC);
}

uint64_t (*static OS_os_log.fileProviderStore.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD860 != -1)
    swift_once(&qword_1013DD860, sub_100A056AC);
  swift_beginAccess(&static OS_os_log.fileProviderStore, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A05844()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9150, v3, 33, 0);
  swift_beginAccess(&qword_10147E450, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9150, &qword_10147E450);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.persistence = (uint64_t)v1;
}

uint64_t *OS_os_log.persistence.unsafeMutableAddressor()
{
  if (qword_1013DD868 != -1)
    swift_once(&qword_1013DD868, sub_100A05844);
  return &static OS_os_log.persistence;
}

id static OS_os_log.persistence.getter()
{
  return sub_100A06D7C(&qword_1013DD868, (id *)&static OS_os_log.persistence, (uint64_t)sub_100A05844);
}

void static OS_os_log.persistence.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD868, (void **)&static OS_os_log.persistence, (uint64_t)sub_100A05844);
}

uint64_t (*static OS_os_log.persistence.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD868 != -1)
    swift_once(&qword_1013DD868, sub_100A05844);
  swift_beginAccess(&static OS_os_log.persistence, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A059E0()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90F8, v3, 33, 0);
  swift_beginAccess(&qword_10147E3F8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90F8, &qword_10147E3F8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.dataSync = (uint64_t)v1;
}

id static OS_os_log.dataSync.getter()
{
  return sub_100A06D7C(&qword_1013DD870, (id *)&static OS_os_log.dataSync, (uint64_t)sub_100A059E0);
}

void static OS_os_log.dataSync.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD870, (void **)&static OS_os_log.dataSync, (uint64_t)sub_100A059E0);
}

uint64_t (*static OS_os_log.dataSync.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD870 != -1)
    swift_once(&qword_1013DD870, sub_100A059E0);
  swift_beginAccess(&static OS_os_log.dataSync, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A05B34()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9100, v3, 33, 0);
  swift_beginAccess(&qword_10147E400, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9100, &qword_10147E400);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.commandController = (uint64_t)v1;
}

id static OS_os_log.commandController.getter()
{
  return sub_100A06D7C(&qword_1013DD878, (id *)&static OS_os_log.commandController, (uint64_t)sub_100A05B34);
}

void static OS_os_log.commandController.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD878, (void **)&static OS_os_log.commandController, (uint64_t)sub_100A05B34);
}

uint64_t (*static OS_os_log.commandController.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD878 != -1)
    swift_once(&qword_1013DD878, sub_100A05B34);
  swift_beginAccess(&static OS_os_log.commandController, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A05C8C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90C8, v3, 33, 0);
  swift_beginAccess(&qword_10147E3C8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90C8, &qword_10147E3C8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.suspendResumeCollaboration = (uint64_t)v1;
}

id static OS_os_log.suspendResumeCollaboration.getter()
{
  return sub_100A06D7C(&qword_1013DD880, (id *)&static OS_os_log.suspendResumeCollaboration, (uint64_t)sub_100A05C8C);
}

void static OS_os_log.suspendResumeCollaboration.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD880, (void **)&static OS_os_log.suspendResumeCollaboration, (uint64_t)sub_100A05C8C);
}

uint64_t (*static OS_os_log.suspendResumeCollaboration.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD880 != -1)
    swift_once(&qword_1013DD880, sub_100A05C8C);
  swift_beginAccess(&static OS_os_log.suspendResumeCollaboration, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A05DE4()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D90D0, v3, 33, 0);
  swift_beginAccess(&qword_10147E3D0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D90D0, &qword_10147E3D0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.realTimeSync = (uint64_t)v1;
}

id static OS_os_log.realTimeSync.getter()
{
  return sub_100A06D7C(&qword_1013DD888, (id *)&static OS_os_log.realTimeSync, (uint64_t)sub_100A05DE4);
}

void static OS_os_log.realTimeSync.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD888, (void **)&static OS_os_log.realTimeSync, (uint64_t)sub_100A05DE4);
}

uint64_t (*static OS_os_log.realTimeSync.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  swift_beginAccess(&static OS_os_log.realTimeSync, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A05F3C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9120, v3, 33, 0);
  swift_beginAccess(&qword_10147E420, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9120, &qword_10147E420);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.keyboardInput = (uint64_t)v1;
}

uint64_t *OS_os_log.keyboardInput.unsafeMutableAddressor()
{
  if (qword_1013DD890 != -1)
    swift_once(&qword_1013DD890, sub_100A05F3C);
  return &static OS_os_log.keyboardInput;
}

id static OS_os_log.keyboardInput.getter()
{
  return sub_100A06D7C(&qword_1013DD890, (id *)&static OS_os_log.keyboardInput, (uint64_t)sub_100A05F3C);
}

void static OS_os_log.keyboardInput.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD890, (void **)&static OS_os_log.keyboardInput, (uint64_t)sub_100A05F3C);
}

uint64_t (*static OS_os_log.keyboardInput.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD890 != -1)
    swift_once(&qword_1013DD890, sub_100A05F3C);
  swift_beginAccess(&static OS_os_log.keyboardInput, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A060DC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9138, v3, 33, 0);
  swift_beginAccess(&qword_10147E438, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9138, &qword_10147E438);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.target_gesture = (uint64_t)v1;
}

uint64_t *OS_os_log.target_gesture.unsafeMutableAddressor()
{
  if (qword_1013DD898 != -1)
    swift_once(&qword_1013DD898, sub_100A060DC);
  return &static OS_os_log.target_gesture;
}

id static OS_os_log.target_gesture.getter()
{
  return sub_100A06D7C(&qword_1013DD898, (id *)&static OS_os_log.target_gesture, (uint64_t)sub_100A060DC);
}

void static OS_os_log.target_gesture.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD898, (void **)&static OS_os_log.target_gesture, (uint64_t)sub_100A060DC);
}

uint64_t (*static OS_os_log.target_gesture.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD898 != -1)
    swift_once(&qword_1013DD898, sub_100A060DC);
  swift_beginAccess(&static OS_os_log.target_gesture, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A0627C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9140, v3, 33, 0);
  swift_beginAccess(&qword_10147E440, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9140, &qword_10147E440);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.upgrade = (uint64_t)v1;
}

uint64_t *OS_os_log.upgrade.unsafeMutableAddressor()
{
  if (qword_1013DD8A0 != -1)
    swift_once(&qword_1013DD8A0, sub_100A0627C);
  return &static OS_os_log.upgrade;
}

id static OS_os_log.upgrade.getter()
{
  return sub_100A06D7C(&qword_1013DD8A0, (id *)&static OS_os_log.upgrade, (uint64_t)sub_100A0627C);
}

void static OS_os_log.upgrade.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8A0, (void **)&static OS_os_log.upgrade, (uint64_t)sub_100A0627C);
}

uint64_t (*static OS_os_log.upgrade.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8A0 != -1)
    swift_once(&qword_1013DD8A0, sub_100A0627C);
  swift_beginAccess(&static OS_os_log.upgrade, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A06414()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9148, v3, 33, 0);
  swift_beginAccess(&qword_10147E448, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9148, &qword_10147E448);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.pasteboard = (uint64_t)v1;
}

id static OS_os_log.pasteboard.getter()
{
  return sub_100A06D7C(&qword_1013DD8A8, (id *)&static OS_os_log.pasteboard, (uint64_t)sub_100A06414);
}

void static OS_os_log.pasteboard.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8A8, (void **)&static OS_os_log.pasteboard, (uint64_t)sub_100A06414);
}

uint64_t (*static OS_os_log.pasteboard.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8A8 != -1)
    swift_once(&qword_1013DD8A8, sub_100A06414);
  swift_beginAccess(&static OS_os_log.pasteboard, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A0656C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9158, v3, 33, 0);
  swift_beginAccess(&qword_10147E458, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9158, &qword_10147E458);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.boardItemDataSize = (uint64_t)v1;
}

uint64_t *OS_os_log.boardItemDataSize.unsafeMutableAddressor()
{
  if (qword_1013DD8B0 != -1)
    swift_once(&qword_1013DD8B0, sub_100A0656C);
  return &static OS_os_log.boardItemDataSize;
}

id static OS_os_log.boardItemDataSize.getter()
{
  return sub_100A06D7C(&qword_1013DD8B0, (id *)&static OS_os_log.boardItemDataSize, (uint64_t)sub_100A0656C);
}

void static OS_os_log.boardItemDataSize.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8B0, (void **)&static OS_os_log.boardItemDataSize, (uint64_t)sub_100A0656C);
}

uint64_t (*static OS_os_log.boardItemDataSize.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8B0 != -1)
    swift_once(&qword_1013DD8B0, sub_100A0656C);
  swift_beginAccess(&static OS_os_log.boardItemDataSize, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A06704()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9160, v3, 33, 0);
  swift_beginAccess(&qword_10147E460, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9160, &qword_10147E460);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.boardItemLifecycle = (uint64_t)v1;
}

id static OS_os_log.boardItemLifecycle.getter()
{
  return sub_100A06D7C(&qword_1013DD8B8, (id *)&static OS_os_log.boardItemLifecycle, (uint64_t)sub_100A06704);
}

void static OS_os_log.boardItemLifecycle.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8B8, (void **)&static OS_os_log.boardItemLifecycle, (uint64_t)sub_100A06704);
}

uint64_t (*static OS_os_log.boardItemLifecycle.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8B8 != -1)
    swift_once(&qword_1013DD8B8, sub_100A06704);
  swift_beginAccess(&static OS_os_log.boardItemLifecycle, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A0685C()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91A8, v3, 33, 0);
  swift_beginAccess(&qword_10147E4A8, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91A8, &qword_10147E4A8);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.assetManagement = (uint64_t)v1;
}

id static OS_os_log.assetManagement.getter()
{
  return sub_100A06D7C(&qword_1013DD8C0, (id *)&static OS_os_log.assetManagement, (uint64_t)sub_100A0685C);
}

void static OS_os_log.assetManagement.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8C0, (void **)&static OS_os_log.assetManagement, (uint64_t)sub_100A0685C);
}

uint64_t (*static OS_os_log.assetManagement.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8C0 != -1)
    swift_once(&qword_1013DD8C0, sub_100A0685C);
  swift_beginAccess(&static OS_os_log.assetManagement, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A069BC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D91F0, v3, 33, 0);
  swift_beginAccess(&qword_10147E4F0, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D91F0, &qword_10147E4F0);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.shareState = (uint64_t)v1;
}

id static OS_os_log.shareState.getter()
{
  return sub_100A06D7C(&qword_1013DD8C8, (id *)&static OS_os_log.shareState, (uint64_t)sub_100A069BC);
}

void static OS_os_log.shareState.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8C8, (void **)&static OS_os_log.shareState, (uint64_t)sub_100A069BC);
}

uint64_t (*static OS_os_log.shareState.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8C8 != -1)
    swift_once(&qword_1013DD8C8, sub_100A069BC);
  swift_beginAccess(&static OS_os_log.shareState, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A06B14()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9260, v3, 33, 0);
  swift_beginAccess(&qword_10147E560, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9260, &qword_10147E560);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.DrawingDataDetectors = (uint64_t)v1;
}

uint64_t *OS_os_log.DrawingDataDetectors.unsafeMutableAddressor()
{
  if (qword_1013DD8D0 != -1)
    swift_once(&qword_1013DD8D0, sub_100A06B14);
  return &static OS_os_log.DrawingDataDetectors;
}

id static OS_os_log.DrawingDataDetectors.getter()
{
  return sub_100A06D7C(&qword_1013DD8D0, (id *)&static OS_os_log.DrawingDataDetectors, (uint64_t)sub_100A06B14);
}

void static OS_os_log.DrawingDataDetectors.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8D0, (void **)&static OS_os_log.DrawingDataDetectors, (uint64_t)sub_100A06B14);
}

uint64_t (*static OS_os_log.DrawingDataDetectors.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8D0 != -1)
    swift_once(&qword_1013DD8D0, sub_100A06B14);
  swift_beginAccess(&static OS_os_log.DrawingDataDetectors, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

void sub_100A06CAC()
{
  NSString v0;
  id v1;
  _BYTE v2[24];
  _BYTE v3[24];

  swift_beginAccess(&off_1013D9268, v3, 33, 0);
  swift_beginAccess(&qword_10147E568, v2, 33, 0);
  v0 = String._bridgeToObjectiveC()();
  v1 = sub_1003C1598(v0, (id *)&off_1013D9268, &qword_10147E568);
  swift_endAccess(v2);
  swift_endAccess(v3);

  static OS_os_log.sideStore = (uint64_t)v1;
}

id static OS_os_log.sideStore.getter()
{
  return sub_100A06D7C(&qword_1013DD8D8, (id *)&static OS_os_log.sideStore, (uint64_t)sub_100A06CAC);
}

id sub_100A06D7C(_QWORD *a1, id *a2, uint64_t a3)
{
  _BYTE v5[24];

  if (*a1 != -1)
    swift_once(a1, a3);
  swift_beginAccess(a2, v5, 0, 0);
  return *a2;
}

void static OS_os_log.sideStore.setter(void *a1)
{
  sub_100A06DEC(a1, &qword_1013DD8D8, (void **)&static OS_os_log.sideStore, (uint64_t)sub_100A06CAC);
}

void sub_100A06DEC(void *a1, _QWORD *a2, void **a3, uint64_t a4)
{
  void *v6;
  _BYTE v7[24];

  if (*a2 != -1)
    swift_once(a2, a4);
  swift_beginAccess(a3, v7, 1, 0);
  v6 = *a3;
  *a3 = a1;

}

uint64_t (*static OS_os_log.sideStore.modify(uint64_t a1))(_QWORD)
{
  if (qword_1013DD8D8 != -1)
    swift_once(&qword_1013DD8D8, sub_100A06CAC);
  swift_beginAccess(&static OS_os_log.sideStore, a1, 33, 0);
  return j_j__swift_endAccess_0;
}

double sub_100A06EBC(uint64_t a1, const mach_header_64 *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const mach_header_64 *v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  switch(*(_QWORD *)(a7 + 16))
  {
    case 0:
      v14 = a4;
      v15 = a5;
      v16 = a6;
      v17 = a2;
      goto LABEL_4;
    case 1:
      v19 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v19, 72, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EF5E40;
      v21 = v20 + 32;
      v22 = a7 + 32;
      goto LABEL_25;
    case 2:
      v23 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v23, 112, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EF5A10;
      sub_1004E90B0(a7 + 32, v20 + 32);
      v21 = v20 + 72;
      v22 = a7 + 72;
      goto LABEL_25;
    case 3:
      v24 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v24, 152, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EF5550;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      v21 = v20 + 112;
      v22 = a7 + 112;
      goto LABEL_25;
    case 4:
      v25 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v25, 192, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EF5E30;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      v21 = v20 + 152;
      v22 = a7 + 152;
      goto LABEL_25;
    case 5:
      v26 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v26, 232, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F05060;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      v21 = v20 + 192;
      v22 = a7 + 192;
      goto LABEL_25;
    case 6:
      v27 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v27, 272, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EFD140;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      v21 = v20 + 232;
      v22 = a7 + 232;
      goto LABEL_25;
    case 7:
      v28 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v28, 312, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100EF7D10;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      v21 = v20 + 272;
      v22 = a7 + 272;
      goto LABEL_25;
    case 8:
      v29 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v29, 352, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F21D60;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      v21 = v20 + 312;
      v22 = a7 + 312;
      goto LABEL_25;
    case 9:
      v30 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v30, 392, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F1E480;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      v21 = v20 + 352;
      v22 = a7 + 352;
      goto LABEL_25;
    case 0xALL:
      v31 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v31, 432, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F07C80;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      v21 = v20 + 392;
      v22 = a7 + 392;
      goto LABEL_25;
    case 0xBLL:
      v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v32, 472, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F21D50;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      v21 = v20 + 432;
      v22 = a7 + 432;
      goto LABEL_25;
    case 0xCLL:
      v33 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v33, 512, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F1ADF0;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      v21 = v20 + 472;
      v22 = a7 + 472;
      goto LABEL_25;
    case 0xDLL:
      v34 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v34, 552, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F0C660;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      v21 = v20 + 512;
      v22 = a7 + 512;
      goto LABEL_25;
    case 0xELL:
      v35 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v35, 592, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F0E490;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      sub_1004E90B0(a7 + 512, v20 + 512);
      v21 = v20 + 552;
      v22 = a7 + 552;
      goto LABEL_25;
    case 0xFLL:
      v36 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v36, 632, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F21D40;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      sub_1004E90B0(a7 + 512, v20 + 512);
      sub_1004E90B0(a7 + 552, v20 + 552);
      v21 = v20 + 592;
      v22 = a7 + 592;
      goto LABEL_25;
    case 0x10:
      v37 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v37, 672, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F21D30;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      sub_1004E90B0(a7 + 512, v20 + 512);
      sub_1004E90B0(a7 + 552, v20 + 552);
      sub_1004E90B0(a7 + 592, v20 + 592);
      v21 = v20 + 632;
      v22 = a7 + 632;
      goto LABEL_25;
    case 0x11:
      v38 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v38, 712, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F21D20;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      sub_1004E90B0(a7 + 512, v20 + 512);
      sub_1004E90B0(a7 + 552, v20 + 552);
      sub_1004E90B0(a7 + 592, v20 + 592);
      sub_1004E90B0(a7 + 632, v20 + 632);
      v21 = v20 + 672;
      v22 = a7 + 672;
      goto LABEL_25;
    case 0x12:
      v39 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v39, 752, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F03000;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      sub_1004E90B0(a7 + 512, v20 + 512);
      sub_1004E90B0(a7 + 552, v20 + 552);
      sub_1004E90B0(a7 + 592, v20 + 592);
      sub_1004E90B0(a7 + 632, v20 + 632);
      sub_1004E90B0(a7 + 672, v20 + 672);
      v21 = v20 + 712;
      v22 = a7 + 712;
      goto LABEL_25;
    case 0x13:
      v40 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v40, 792, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F21D10;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      sub_1004E90B0(a7 + 512, v20 + 512);
      sub_1004E90B0(a7 + 552, v20 + 552);
      sub_1004E90B0(a7 + 592, v20 + 592);
      sub_1004E90B0(a7 + 632, v20 + 632);
      sub_1004E90B0(a7 + 672, v20 + 672);
      sub_1004E90B0(a7 + 712, v20 + 712);
      v21 = v20 + 752;
      v22 = a7 + 752;
      goto LABEL_25;
    case 0x14:
      v41 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      v20 = swift_allocObject(v41, 832, 7);
      *(_OWORD *)(v20 + 16) = xmmword_100F21D00;
      sub_1004E90B0(a7 + 32, v20 + 32);
      sub_1004E90B0(a7 + 72, v20 + 72);
      sub_1004E90B0(a7 + 112, v20 + 112);
      sub_1004E90B0(a7 + 152, v20 + 152);
      sub_1004E90B0(a7 + 192, v20 + 192);
      sub_1004E90B0(a7 + 232, v20 + 232);
      sub_1004E90B0(a7 + 272, v20 + 272);
      sub_1004E90B0(a7 + 312, v20 + 312);
      sub_1004E90B0(a7 + 352, v20 + 352);
      sub_1004E90B0(a7 + 392, v20 + 392);
      sub_1004E90B0(a7 + 432, v20 + 432);
      sub_1004E90B0(a7 + 472, v20 + 472);
      sub_1004E90B0(a7 + 512, v20 + 512);
      sub_1004E90B0(a7 + 552, v20 + 552);
      sub_1004E90B0(a7 + 592, v20 + 592);
      sub_1004E90B0(a7 + 632, v20 + 632);
      sub_1004E90B0(a7 + 672, v20 + 672);
      sub_1004E90B0(a7 + 712, v20 + 712);
      sub_1004E90B0(a7 + 752, v20 + 752);
      v21 = v20 + 792;
      v22 = a7 + 792;
LABEL_25:
      sub_1004E90B0(v22, v21);
      os_log(_:dso:log:type:_:)(a4, a5, a6, a2, a1, a3, v20);
      *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
      break;
    default:
      v14 = ">>ERROR: TOO MANY os_log() ARGUMENTS. MAXIMUM IS 20. See CRLLogHelper.swift<<";
      v17 = &_mh_execute_header;
      v15 = 77;
      v16 = 2;
LABEL_4:
      os_log(_:dso:log:type:_:)(v14, v15, v16, v17, a1, a3, _swiftEmptyArrayStorage);
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandHistory()
{
  return &type metadata for CRLCommandHistory;
}

uint64_t sub_100A07E64@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
  {
    __break(1u);
LABEL_6:
    result = sub_100D14EDC(v3);
    v3 = result;
    v5 = *(_QWORD *)(result + 16);
    if (v5)
      goto LABEL_4;
    goto LABEL_7;
  }
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((result & 1) == 0)
    goto LABEL_6;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
LABEL_4:
    v6 = v5 - 1;
    v7 = type metadata accessor for CRLCommandHistoryItem(0);
    result = sub_1006B06A8(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6, a1);
    *(_QWORD *)(v3 + 16) = v6;
    *v1 = v3;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100A07EFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 8);
  if (!*(_QWORD *)(v3 + 16))
  {
    __break(1u);
LABEL_6:
    result = sub_100D14EDC(v3);
    v3 = result;
    v5 = *(_QWORD *)(result + 16);
    if (v5)
      goto LABEL_4;
    goto LABEL_7;
  }
  result = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + 8));
  if ((result & 1) == 0)
    goto LABEL_6;
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
LABEL_4:
    v6 = v5 - 1;
    v7 = type metadata accessor for CRLCommandHistoryItem(0);
    result = sub_1006B06A8(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v6, a1);
    *(_QWORD *)(v3 + 16) = v6;
    *(_QWORD *)(v1 + 8) = v3;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100A07F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void (**v5)(char *, char *, uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  void (**v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void (**v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[72];
  char v55[32];

  v4 = type metadata accessor for UUID(0);
  v5 = *(void (***)(char *, char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLCommandHistoryItem(0);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  __chkstk_darwin(v12);
  v17 = (uint64_t *)((char *)&v43 - v14);
  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v45 = v13;
    v49 = v5;
    v50 = v4;
    v51 = v16;
    v52 = v15;
    sub_100A07E64((uint64_t)&v43 - v14);
    v18 = sub_1006A7B34(v17, 0);
    v19 = (void *)v17[1];
    v1 = v17[2];
    v2 = v17[3];
    v20 = qword_1013DD878;
    v46 = v18;
    v47 = v19;
    v5 = v19;
    swift_bridgeObjectRetain(v2);
    v48 = a1;
    if (v20 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD878, sub_100A05B34);
LABEL_3:
  swift_beginAccess(&static OS_os_log.commandController, v55, 0, 0);
  v21 = (void *)static OS_os_log.commandController;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v22, v54);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v2;
  swift_bridgeObjectRetain(v2);
  v24 = v21;
  v26 = static os_log_type_t.default.getter(v25);
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "Undoing \"%@\"", 12, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v27);

  v44 = v5;
  v28 = v46;
  swift_retain(v46);
  UUID.init()(v29);
  *((_QWORD *)v11 + 1) = 0;
  v30 = v45;
  v31 = *(int *)(v45 + 32);
  *(_QWORD *)&v11[v31] = 0;
  v33 = v49;
  v32 = v50;
  v49[2](&v11[*(int *)(v30 + 28)], v7, v50);
  v34 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v35 = swift_allocObject(v34, 40, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v35 + 32) = v28;
  v53 = v35;
  specialized Array._endMutation()(v35);
  v36 = v53;
  ((void (*)(char *, uint64_t))v33[1])(v7, v32);
  *(_QWORD *)v11 = v36;

  *((_QWORD *)v11 + 1) = v47;
  *((_QWORD *)v11 + 2) = v1;
  *((_QWORD *)v11 + 3) = v2;

  *(_QWORD *)&v11[v31] = 0;
  v37 = v51;
  sub_100A086F4((uint64_t)v11, v51);
  v38 = v48;
  v39 = *(_QWORD *)(v48 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
    v39 = sub_100D0F760(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
  v41 = *(_QWORD *)(v39 + 16);
  v40 = *(_QWORD *)(v39 + 24);
  if (v41 >= v40 >> 1)
    v39 = sub_100D0F760(v40 > 1, v41 + 1, 1, v39);
  *(_QWORD *)(v39 + 16) = v41 + 1;
  sub_1006B06A8(v37, v39+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v41);
  swift_release(v28);

  *(_QWORD *)(v38 + 8) = v39;
  sub_100A08738((uint64_t)v11);
  return sub_100A08738((uint64_t)v17);
}

uint64_t sub_100A08344(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void (**v5)(char *, char *, uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  id v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (**v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  void (**v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  unint64_t *v48;
  void (**v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[72];
  char v55[32];

  v4 = type metadata accessor for UUID(0);
  v5 = *(void (***)(char *, char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLCommandHistoryItem(0);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  __chkstk_darwin(v12);
  v17 = (uint64_t *)((char *)&v43 - v14);
  if (*(_QWORD *)(a1[1] + 16))
  {
    v45 = v13;
    v49 = v5;
    v50 = v4;
    v51 = v16;
    v52 = v15;
    sub_100A07EFC((uint64_t)&v43 - v14);
    v18 = sub_1006A7B34(v17, 1);
    v19 = (void *)v17[1];
    v1 = v17[2];
    v2 = v17[3];
    v20 = qword_1013DD878;
    v46 = v18;
    v47 = v19;
    v5 = v19;
    swift_bridgeObjectRetain(v2);
    v48 = a1;
    if (v20 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1013DD878, sub_100A05B34);
LABEL_3:
  swift_beginAccess(&static OS_os_log.commandController, v55, 0, 0);
  v21 = (void *)static OS_os_log.commandController;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v22, v54);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v2;
  swift_bridgeObjectRetain(v2);
  v24 = v21;
  v26 = static os_log_type_t.default.getter(v25);
  sub_100A06EBC((uint64_t)v24, &_mh_execute_header, v26, "Redoing \"%@\"", 12, 2, inited);
  swift_setDeallocating(inited);
  v27 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 1, v27);

  v44 = v5;
  v28 = v46;
  swift_retain(v46);
  UUID.init()(v29);
  *((_QWORD *)v11 + 1) = 0;
  v30 = v45;
  v31 = *(int *)(v45 + 32);
  *(_QWORD *)&v11[v31] = 0;
  v33 = v49;
  v32 = v50;
  v49[2](&v11[*(int *)(v30 + 28)], v7, v50);
  v34 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v35 = swift_allocObject(v34, 40, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v35 + 32) = v28;
  v53 = v35;
  specialized Array._endMutation()(v35);
  v36 = v53;
  ((void (*)(char *, uint64_t))v33[1])(v7, v32);
  *(_QWORD *)v11 = v36;

  *((_QWORD *)v11 + 1) = v47;
  *((_QWORD *)v11 + 2) = v1;
  *((_QWORD *)v11 + 3) = v2;

  *(_QWORD *)&v11[v31] = 0;
  v37 = v51;
  sub_100A086F4((uint64_t)v11, v51);
  v38 = v48;
  v39 = *v48;
  if ((swift_isUniquelyReferenced_nonNull_native(*v48) & 1) == 0)
    v39 = sub_100D0F760(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
  v41 = *(_QWORD *)(v39 + 16);
  v40 = *(_QWORD *)(v39 + 24);
  if (v41 >= v40 >> 1)
    v39 = sub_100D0F760(v40 > 1, v41 + 1, 1, v39);
  *(_QWORD *)(v39 + 16) = v41 + 1;
  sub_1006B06A8(v37, v39+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v41);
  swift_release(v28);

  *v38 = v39;
  sub_100A08738((uint64_t)v11);
  return sub_100A08738((uint64_t)v17);
}

uint64_t sub_100A086F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLCommandHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A08738(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLCommandHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A08778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = v1 - 1;
  v4 = type metadata accessor for CRLCommandHistoryItem(0);
  v5 = a1
     + ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(v4 - 8) + 72) * v3;
  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v5 + 24));
  return v6;
}

Class sub_100A087E4(void *a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  id v10;
  UIButton v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class isa;
  objc_class *v22;
  NSString v23;
  objc_class *v24;
  NSString v25;
  id v26;
  UIAction_optional v28;

  sub_1004B8930(0, (unint64_t *)&unk_1013DFBC0, UIButton_ptr);
  v10 = a2;
  v28.value.super.super.isa = (Class)a2;
  v11.super.super.super.super.isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v28).super.super.super.super.isa;
  -[objc_class setContentHorizontalAlignment:](v11.super.super.super.super.isa, "setContentHorizontalAlignment:", 3);
  -[objc_class setContentVerticalAlignment:](v11.super.super.super.super.isa, "setContentVerticalAlignment:", 3);
  -[objc_class setImage:forState:](v11.super.super.super.super.isa, "setImage:forState:", a1, 0);
  if (a1)
    v12 = objc_msgSend(a1, "crl_imageWithAlpha:renderingMode:", 0, 0.6);
  else
    v12 = 0;
  -[objc_class setImage:forState:](v11.super.super.super.super.isa, "setImage:forState:", v12, 1, a3);
  -[objc_class setTranslatesAutoresizingMaskIntoConstraints:](v11.super.super.super.super.isa, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = (void *)objc_opt_self(NSLayoutConstraint);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100EF5560;
  v16 = -[objc_class heightAnchor](v11.super.super.super.super.isa, "heightAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", a5);

  *(_QWORD *)(v15 + 32) = v17;
  v18 = -[objc_class widthAnchor](v11.super.super.super.super.isa, "widthAnchor");
  v19 = objc_msgSend(v18, "constraintEqualToConstant:", a5);

  *(_QWORD *)(v15 + 40) = v19;
  specialized Array._endMutation()(v20);
  sub_1004B8930(0, (unint64_t *)&qword_1013E1760, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v22 = v11.super.super.super.super.isa;
  if (a4)
    v23 = String._bridgeToObjectiveC()();
  else
    v23 = 0;
  -[objc_class setAccessibilityLabel:](v11.super.super.super.super.isa, "setAccessibilityLabel:", v23);

  -[objc_class setShowsLargeContentViewer:](v11.super.super.super.super.isa, "setShowsLargeContentViewer:", 1);
  v24 = v11.super.super.super.super.isa;
  if (a4)
    v25 = String._bridgeToObjectiveC()();
  else
    v25 = 0;
  -[objc_class setLargeContentTitle:](v11.super.super.super.super.isa, "setLargeContentTitle:", v25);

  -[objc_class setLargeContentImage:](v11.super.super.super.super.isa, "setLargeContentImage:", a1);
  v26 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  -[objc_class addInteraction:](v11.super.super.super.super.isa, "addInteraction:", v26);

  return v11.super.super.super.super.isa;
}

void sub_100A08B8C(void *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  unsigned __int8 v5;

  if (*a2)
  {
    if (objc_msgSend(a1, "supportsPencilHoverPreview"))
    {
      sub_10066E4B4(a2);
      v5 = objc_msgSend(a1, "isObjectEraser");
      *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) = v5;
    }
    else
    {
      *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) = 0;
      sub_10066EF14();
    }
  }
  else
  {
    sub_10066E4B4(a2);
    *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) = 0;
  }
}

id sub_100A08C44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilToolShapeDecorator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSPencilToolShapeDecorator()
{
  return objc_opt_self(_TtC8Freeform30CRLiOSPencilToolShapeDecorator);
}

uint64_t sub_100A08DEC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_100A08ED0()
{
  uint64_t v0;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v0 = swift_allocObject(&unk_101290938, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100A09690, v0);
}

double sub_100A08F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  uint64_t v12;
  void *v13;
  char v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (char *)objc_retain(*(id *)(Strong
                                   + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider));

    v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    v8 = sub_1004B8930(0, &qword_1013E5AD8, off_101229930);
    if (v8)
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v8, v9);
    else
      ObjCClassFromMetadata = 0;
    v11 = objc_msgSend(v7, "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
    v12 = objc_opt_self(CRLMediaEditor);
    v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
    if (v13)
      objc_msgSend(v13, "resetSelectionToNaturalDataSize:", v6);

    *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_100A09068()
{
  uint64_t v0;

  sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
  v0 = swift_allocObject(&unk_101290938, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100A09688, v0);
}

void sub_100A0910C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _QWORD *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider);

    (*(void (**)(void))((swift_isaMask & *v5) + 0xD8))();
  }
}

void sub_100A09190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider);

    sub_1005CBFDC();
  }
}

double *sub_100A091FC()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double v15;
  id v16;
  Class isa;
  id v18;
  double v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;

  if ((sub_1005CBF0C() & 1) != 0)
  {
    v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v1 = String._bridgeToObjectiveC()();
    v2 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v6 = v5;

    sub_1004B8930(0, (unint64_t *)&qword_1013DFC20, UIAction_ptr);
    v7 = swift_allocObject(&unk_101290938, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100A09680, v7);
    v9 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v10 = sub_1004C85B0(v4, v6, 0, (uint64_t)v9, 0, 1, v8, 0, 6.0);
    swift_bridgeObjectRelease();

    objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = sub_1004B804C((uint64_t *)&unk_1013E4180);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100EEF400;
    *(_QWORD *)(v12 + 32) = v10;
    v27 = v12;
    specialized Array._endMutation()(v12);
    v13 = qword_1013DC8A0;
    v14 = v10;
    if (v13 != -1)
      swift_once(&qword_1013DC8A0, sub_1004C5424);
    v15 = *(double *)&qword_10147E6C0;
    v16 = objc_allocWithZone((Class)UIStackView);
    sub_1004B8930(0, (unint64_t *)&qword_1013DFC10, UIView_ptr);
    swift_bridgeObjectRetain(v27);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(v16, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v18, "setAxis:", 0);
    objc_msgSend(v18, "setAlignment:", 0);
    objc_msgSend(v18, "setDistribution:", 0);
    objc_msgSend(v18, "setSpacing:", v15);
    if (qword_1013DC8B0 != -1)
      swift_once(&qword_1013DC8B0, sub_1004C5444);
    v19 = *(double *)&qword_10147E6D0;
    v20 = objc_msgSend(v18, "heightAnchor");
    v21 = objc_msgSend(v20, "constraintGreaterThanOrEqualToConstant:", v19);

    objc_msgSend(v21, "setActive:", 1);
    swift_bridgeObjectRelease();

    v22 = v18;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
    v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v24 >= v23 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
    v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
    specialized Array._endMutation()(v25);

  }
  return _swiftEmptyArrayStorage;
}

id sub_100A0960C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterImageAndMovieBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterImageAndMovieBuilder()
{
  return objc_opt_self(_TtC8Freeform39CRLiOSMiniFormatterImageAndMovieBuilder);
}

uint64_t sub_100A0965C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100A09680(uint64_t a1)
{
  uint64_t v1;

  sub_100A09190(a1, v1);
}

void sub_100A09688(uint64_t a1)
{
  uint64_t v1;

  sub_100A0910C(a1, v1);
}

double sub_100A09690(uint64_t a1)
{
  uint64_t v1;

  return sub_100A08F74(a1, v1);
}

void sub_100A0972C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t Strong;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  Class v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  int64_t v65;
  _QWORD *v66;
  id v67;
  char v68[24];
  char v69[24];
  char v70[32];

  v1 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v1);
  v3 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap, v70, 0, 0);
  v9 = *v8;
  v10 = (_QWORD *)(*v8 + 64);
  v11 = 1 << *(_BYTE *)(*v8 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *v10;
  v64 = v0;
  v14 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  v61 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors;
  v54 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_selectionPathValidator;
  v57 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers;
  swift_bridgeObjectRetain(v9);
  v66 = v14;
  swift_beginAccess(v14, v69, 0, 0);
  v15 = 0;
  v16 = (unint64_t)(v11 + 63) >> 6;
  v56 = v3;
  v55 = v4;
  v59 = v7;
  v60 = v10;
  v58 = v9;
  v65 = v16;
  while (v13)
  {
    v17 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v18 = v17 | (v15 << 6);
LABEL_21:
    v22 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18);
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, v22+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * (v23 - 1), v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_1004C1F2C((uint64_t)v3);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
        v24 = *v66;
        if (!*(_QWORD *)(*v66 + 16))
          goto LABEL_48;
        swift_bridgeObjectRetain(*v66);
        v25 = sub_100842EFC((uint64_t)v7);
        if ((v26 & 1) == 0)
        {
          swift_bridgeObjectRelease(v24);
          goto LABEL_48;
        }
        v27 = *(_QWORD *)(v24 + 56) + 24 * v25;
        v28 = *(void **)(v27 + 8);
        v29 = *(void **)(v27 + 16);
        v67 = *(id *)v27;
        v63 = v28;
        v30 = v29;
        swift_bridgeObjectRelease(v24);
        v31 = *(_BYTE *)(v64 + v61);
        v62 = v30;
        if ((v31 & 1) == 0)
        {
          v44 = v30;
          v43 = 0;
          goto LABEL_33;
        }
        v32 = *(_QWORD *)(v64 + v54);
        Strong = swift_unknownObjectWeakLoadStrong(v32 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board);
        if (Strong)
        {
          v34 = (void *)Strong;
          v35 = (uint64_t)v63;
          v36 = &v63[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs];
          swift_beginAccess(&v63[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs], v68, 0, 0);
          v37 = *(_QWORD *)v36;
          swift_bridgeObjectRetain(v37);
          isa = Array._bridgeToObjectiveC()().super.isa;
          v39 = objc_msgSend(v34, "resolveToSiblingsWithUuids:", isa, swift_bridgeObjectRelease(v37).n128_f64[0]);

          v40 = type metadata accessor for CRLBoardItem(0);
          v41 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
          v42 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v39, v40, v41);

          v43 = sub_100585688(v42, v35);
          swift_bridgeObjectRelease(v42);
        }
        else
        {
          sub_100757E04(&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, "Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2u, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u);
          v45 = *(id *)(v32 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
          v46 = Set._bridgeToObjectiveC()().super.isa;
          v43 = objc_msgSend(v45, "selectionPathForInfos:", v46);

        }
        v10 = v60;
        if ((*(_BYTE *)(v64 + v61) & 1) != 0)
        {
          v44 = 0;
LABEL_33:
          v47 = objc_msgSend(*(id *)(v64 + v57), "allObjects");
          v48 = sub_1004B804C((uint64_t *)&unk_101401AC0);
          v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v47, v48);

          if ((unint64_t)v49 >> 62)
          {
            if (v49 < 0)
              v53 = v49;
            else
              v53 = v49 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v49);
            v50 = _CocoaArrayWrapper.endIndex.getter(v53);
            swift_bridgeObjectRelease(v49);
            if (v50)
            {
LABEL_35:
              if (v50 < 1)
                goto LABEL_52;
              for (i = 0; i != v50; ++i)
              {
                if ((v49 & 0xC000000000000001) != 0)
                {
                  v52 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v49);
                }
                else
                {
                  v52 = *(void **)(v49 + 8 * i + 32);
                  swift_unknownObjectRetain(v52);
                }
                objc_msgSend(v52, "collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:", v44, v43, v67);
                swift_unknownObjectRelease(v52);
              }
            }
          }
          else
          {
            v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v50)
              goto LABEL_35;
          }

          swift_bridgeObjectRelease(v49);
          v3 = v56;
          v4 = v55;
          v9 = v58;
          v7 = v59;
          v10 = v60;
          goto LABEL_47;
        }
        sub_100757E04(&_mh_execute_header, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 109, "Setting a non-nil collaborator cursor selection path on a renderer when shouldShowCollaboratorCursors is false.", 111, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2u, 109, (uint64_t)"Setting a non-nil collaborator cursor selection path on a renderer when shouldShowCollaboratorCursors is false.", 111, 2u);
        v44 = v43;
        v9 = v58;
        v7 = v59;
LABEL_47:

LABEL_48:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v16 = v65;
      }
    }
  }
  v19 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v19 >= v16)
    goto LABEL_49;
  v20 = v10[v19];
  ++v15;
  if (v20)
    goto LABEL_20;
  v15 = v19 + 1;
  if (v19 + 1 >= v16)
    goto LABEL_49;
  v20 = v10[v15];
  if (v20)
    goto LABEL_20;
  v15 = v19 + 2;
  if (v19 + 2 >= v16)
    goto LABEL_49;
  v20 = v10[v15];
  if (v20)
  {
LABEL_20:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
    goto LABEL_21;
  }
  v21 = v19 + 3;
  if (v21 >= v16)
  {
LABEL_49:
    swift_release(v9);
    return;
  }
  v20 = v10[v21];
  if (v20)
  {
    v15 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v16)
      goto LABEL_49;
    v20 = v10[v15];
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
}

void sub_100A09E88(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __n128 v18;
  int64_t v19;
  int64_t v20;
  __n128 v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  _QWORD *v43;
  char v44[24];
  char v45[24];

  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers), "addObject:", a1, v8);
  v42 = a1;
  objc_msgSend(a1, "setCollaboratorCursorDelegate:", v1);
  v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap, v45, 0, 0);
  v12 = *v11;
  v13 = v12 + 64;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v12 + 64);
  v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_bridgeObjectRetain(v12);
  v43 = v17;
  v18 = swift_beginAccess(v17, v44, 0, 0);
  v19 = 0;
  v20 = (unint64_t)(v14 + 63) >> 6;
  v40 = v12 + 64;
  v41 = v10;
  v39 = v20;
  while (v16)
  {
    v22 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v23 = v22 | (v19 << 6);
LABEL_22:
    v27 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v23);
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v5, v27+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * (v28 - 1), v6, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_1004C1F2C((uint64_t)v5);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
        v29 = *v43;
        if (*(_QWORD *)(*v43 + 16))
        {
          swift_bridgeObjectRetain(*v43);
          v30 = sub_100842EFC((uint64_t)v10);
          if ((v31 & 1) != 0)
          {
            v32 = *(_QWORD *)(v29 + 56) + 24 * v30;
            v33 = *(void **)(v32 + 8);
            v34 = *(void **)(v32 + 16);
            v35 = *(id *)v32;
            v36 = v33;
            v37 = v34;
            objc_msgSend(v42, "collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:", 0, v37, v35, swift_bridgeObjectRelease().n128_f64[0]);

            v13 = v40;
            v10 = v41;

            v20 = v39;
          }
          else
          {
            v21 = swift_bridgeObjectRelease();
          }
        }
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v21);
      }
    }
  }
  v24 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v24 >= v20)
    goto LABEL_28;
  v25 = *(_QWORD *)(v13 + 8 * v24);
  ++v19;
  if (v25)
    goto LABEL_21;
  v19 = v24 + 1;
  if (v24 + 1 >= v20)
    goto LABEL_28;
  v25 = *(_QWORD *)(v13 + 8 * v19);
  if (v25)
    goto LABEL_21;
  v19 = v24 + 2;
  if (v24 + 2 >= v20)
    goto LABEL_28;
  v25 = *(_QWORD *)(v13 + 8 * v19);
  if (v25)
  {
LABEL_21:
    v16 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v19 << 6);
    goto LABEL_22;
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    swift_release(v12);
    return;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v19 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    v19 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v19 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v19);
    ++v26;
    if (v25)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
}

void sub_100A0A278(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  _BYTE v28[24];
  char v29[24];

  v5 = (uint64_t)a2 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap, v29, 0, 0);
  v7 = *v6;
  swift_bridgeObjectRetain(*v6);
  v8 = sub_100618724(v5, v7);
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease(v7);
  v13 = 0;
  if ((unint64_t)v8 >= 2)
  {

    v13 = v12;
  }
  if (a1)
  {
    v14 = a1;
    v15 = sub_1005853C8((uint64_t)v14);
    swift_beginAccess(v6, v28, 33, 0);
    v16 = v14;
    v17 = a2;
    v18 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
    v27 = *v6;
    *v6 = 0x8000000000000000;
    sub_1008266E4((uint64_t)v17, (uint64_t)v16, (uint64_t)v18, v5, isUniquelyReferenced_nonNull_native);
    v20 = *v6;
    *v6 = v27;
    swift_bridgeObjectRelease(v20);
    swift_endAccess(v28);
    v21 = v18;
    sub_100A0B3C4(v13, v18, (uint64_t)v17);

  }
  else
  {
    swift_beginAccess(v6, v28, 33, 0);
    v22 = (void *)sub_1008472A0(v5);
    v24 = v23;
    v26 = v25;
    swift_endAccess(v28);
    sub_100510E00(v22, v24, v26);
    sub_100A0B3C4(v13, 0, (uint64_t)a2);
  }

}

void sub_100A0A4C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  __n128 v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t i;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66[24];
  char v67[24];

  v2 = v1;
  v4 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap, v67, 0, 0);
  v12 = *v11;
  swift_bridgeObjectRetain(*v11);
  v65 = a1;
  v13 = sub_100618724(a1, v12);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if (!v13)
    v17 = 0;
  if ((unint64_t)v13 < 2)
    return;

  if (!v17)
  {

    return;
  }
  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap, v66, 0, 0);
  v19 = *v18;
  v20 = *(_QWORD *)(v19 + 16);
  v64 = (uint64_t)v17;
  v21 = v17;
  v22 = v21;
  if (!v20)
  {
    v31 = v13;
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v6, 1, 1, v7, v32);
LABEL_13:

    sub_1004C1F2C((uint64_t)v6);
    return;
  }
  v63 = v10;
  v23 = v21;
  v24 = v13;
  swift_bridgeObjectRetain(v19);
  v25 = sub_100843270((uint64_t)v23);
  if ((v26 & 1) == 0)
  {

    v32 = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v60 = v24;
  v27 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v25);
  swift_bridgeObjectRetain(v27);
  v61 = v23;

  v28 = swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v27 + 16);
  if (v29)
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, v27+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * (v29 - 1), v7, v28);
    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  v33 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v30, 1, v7);
  v34 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v34) == 1)
    goto LABEL_13;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v33, v6, v7);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v35 = v65;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v33, v65) & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v33, v7);
    v36 = v61;

LABEL_37:
    v57 = v60;

    return;
  }
  v37 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1
    || (v38 = *v11,
        swift_bridgeObjectRetain(*v11),
        v39 = sub_100618724(v33, v38),
        v41 = v40,
        v43 = v42,
        swift_bridgeObjectRelease(),
        (v62 = v39) == 0))
  {
LABEL_34:
    v54 = v61;
    sub_100A0AE50(v61, v35, 1);
    if (*(_BYTE *)(v2 + v37) == 1)
    {
      v55 = v54;
      v56 = v60;
      sub_100A0AC50(0, v64, (uint64_t)v60);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v63, v7);
      return;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v63, v7);

    goto LABEL_37;
  }
  v58 = v41;
  v59 = v37;
  v44 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers);
  v45 = v61;
  v46 = objc_msgSend(v44, "allObjects");
  v47 = sub_1004B804C((uint64_t *)&unk_101401AC0);
  v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);

  v49 = v43;
  if ((unint64_t)v48 >> 62)
  {
    if (v48 < 0)
      v53 = v48;
    else
      v53 = v48 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v48);
    v50 = _CocoaArrayWrapper.endIndex.getter(v53);
    swift_bridgeObjectRelease();
    if (v50)
      goto LABEL_23;
LABEL_33:

    swift_bridgeObjectRelease();
    v35 = v65;
    v37 = v59;
    goto LABEL_34;
  }
  v50 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v50)
    goto LABEL_33;
LABEL_23:
  if (v50 >= 1)
  {
    for (i = 0; i != v50; ++i)
    {
      if ((v48 & 0xC000000000000001) != 0)
      {
        v52 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v48);
      }
      else
      {
        v52 = *(void **)(v48 + 8 * i + 32);
        swift_unknownObjectRetain(v52);
      }
      objc_msgSend(v52, "collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:", v45, 0, v62);
      swift_unknownObjectRelease(v52);
    }
    goto LABEL_33;
  }
  __break(1u);
}

void sub_100A0AA4C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  _BYTE v22[24];
  _BYTE v23[24];

  v2 = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap, v23, 0, 0);
  v5 = *v4;
  if (*(_QWORD *)(*v4 + 16))
  {
    v6 = (uint64_t)a1 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
    swift_bridgeObjectRetain(*v4);
    v7 = sub_100842EFC(v6);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(v5 + 56) + 24 * v7;
      v10 = *(void **)(v9 + 16);
      v11 = *(id *)(v9 + 8);
      v12 = v10;
      swift_bridgeObjectRelease(v5);
      v13 = sub_1005853C8((uint64_t)v11);
      swift_beginAccess(v4, v22, 33, 0);
      v14 = v11;
      v15 = a1;
      v16 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
      v21 = *v4;
      *v4 = 0x8000000000000000;
      sub_1008266E4((uint64_t)v15, (uint64_t)v14, (uint64_t)v16, v6, isUniquelyReferenced_nonNull_native);
      v18 = *v4;
      *v4 = v21;
      swift_bridgeObjectRelease(v18);
      swift_endAccess(v22);
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) == 1)
      {
        v19 = v12;
        v20 = v16;
        sub_100A0B3C4(v12, v16, (uint64_t)v15);

      }
      else
      {

      }
    }
    else
    {
      swift_bridgeObjectRelease(v5);
    }
  }
}

void sub_100A0AC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  uint64_t v13;

  if (a2
    && (*(_BYTE *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 109, "Setting a non-nil collaborator cursor selection path on a renderer when shouldShowCollaboratorCursors is false.", 111, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2u, 109, (uint64_t)"Setting a non-nil collaborator cursor selection path on a renderer when shouldShowCollaboratorCursors is false.", 111, 2u);
    return;
  }
  v7 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers), "allObjects");
  v8 = sub_1004B804C((uint64_t *)&unk_101401AC0);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if (v9 < 0)
    v13 = v9;
  else
    v13 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v13);
  swift_bridgeObjectRelease(v9);
  if (!v10)
    goto LABEL_16;
LABEL_5:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v12 = *(void **)(v9 + 8 * i + 32);
        swift_unknownObjectRetain(v12);
      }
      objc_msgSend(v12, "collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:", a1, a2, a3);
      swift_unknownObjectRelease(v12);
    }
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_100A0AE50(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, uint64_t, __n128);
  uint64_t v29;
  char v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void *v44;
  int v45;
  uint64_t v46;
  _BYTE v47[24];
  char v48[24];
  uint64_t v49;

  v7 = sub_1004B804C(&qword_101401AD0);
  __chkstk_darwin(v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - v15;
  v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap, v48, 0, 0);
  v18 = *v17;
  if (!*(_QWORD *)(*v17 + 16))
    goto LABEL_12;
  v45 = a3;
  v19 = a1;
  swift_bridgeObjectRetain(v18);
  v20 = sub_100843270((uint64_t)v19);
  if ((v21 & 1) == 0)
  {

    swift_bridgeObjectRelease(v18);
LABEL_12:
    v34 = sub_1004B804C(&qword_1013E77A8);
    v35 = *(unsigned __int8 *)(v11 + 80);
    v36 = (v35 + 32) & ~v35;
    v37 = swift_allocObject(v34, v36 + *(_QWORD *)(v11 + 72), v35 | 7);
    *(_OWORD *)(v37 + 16) = xmmword_100EF5E40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v37 + v36, a2, v10);
    swift_beginAccess(v17, v47, 33, 0);
    v38 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
    v49 = *v17;
    *v17 = 0x8000000000000000;
    sub_100826574(v37, v38, isUniquelyReferenced_nonNull_native);
    v40 = v49;
    goto LABEL_15;
  }
  v22 = v19;
  v23 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v20);
  swift_bridgeObjectRetain(v23);
  v44 = v22;

  swift_bridgeObjectRelease(v18);
  v49 = v23;
  swift_bridgeObjectRetain(v23);
  v24 = sub_100C1A350(a2, v23);
  v26 = v25;
  v27 = swift_bridgeObjectRelease(v23);
  if ((v26 & 1) == 0)
  {
    sub_100C5C73C(v24, (uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16);
  if ((v45 & 1) != 0)
  {
    v28(v13, a2, v10, v27);
    v29 = v49;
    v30 = swift_isUniquelyReferenced_nonNull_native(v49);
    v31 = v44;
    if ((v30 & 1) == 0)
      v29 = sub_100D0EC28(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
    v33 = *(_QWORD *)(v29 + 16);
    v32 = *(_QWORD *)(v29 + 24);
    if (v33 >= v32 >> 1)
      v29 = sub_100D0EC28(v32 > 1, v33 + 1, 1, v29);
    *(_QWORD *)(v29 + 16) = v33 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v29+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v33, v13, v10);
    v49 = v29;
  }
  else
  {
    v28(v9, a2, v10, v27);
    sub_100CFC24C(0, 0, (uint64_t)v9);
    v29 = v49;
    v31 = v44;
  }
  swift_beginAccess(v17, v47, 33, 0);
  v38 = v31;
  v41 = swift_isUniquelyReferenced_nonNull_native(*v17);
  v46 = *v17;
  *v17 = 0x8000000000000000;
  sub_100826574(v29, v38, v41);
  v40 = v46;
LABEL_15:
  v42 = *v17;
  *v17 = v40;

  swift_bridgeObjectRelease(v42);
  return swift_endAccess(v47);
}

double sub_100A0B1D4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  double result;
  uint64_t v11;
  id v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  char v27[24];
  uint64_t v28;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap, v27, 0, 0);
  v11 = *v9;
  if (*(_QWORD *)(*v9 + 16))
  {
    v12 = a1;
    swift_bridgeObjectRetain(v11);
    v13 = sub_100843270((uint64_t)v12);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v13);
      swift_bridgeObjectRetain(v15);

      swift_bridgeObjectRelease(v11);
      v28 = v15;
      swift_bridgeObjectRetain(v15);
      v16 = sub_100C1A350(a2, v15);
      v18 = v17;
      swift_bridgeObjectRelease(v15);
      if ((v18 & 1) != 0)
      {
        v23 = v15;
      }
      else
      {
        sub_100C5C73C(v16, (uint64_t)v8);
        (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
        v19 = v28;
        if (*(_QWORD *)(v28 + 16))
        {
          swift_beginAccess(v9, v26, 33, 0);
          v20 = v12;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
          v25 = *v9;
          *v9 = 0x8000000000000000;
          sub_100826574(v19, v20, isUniquelyReferenced_nonNull_native);
          v22 = *v9;
          *v9 = v25;

          swift_bridgeObjectRelease(v22);
          swift_endAccess(v26);
          return result;
        }
        swift_bridgeObjectRelease(v28);
        swift_beginAccess(v9, v26, 33, 0);
        v24 = sub_1008471DC((uint64_t)v12);
        swift_endAccess(v26);
        v23 = v24;
      }
    }
    else
    {

      v23 = v11;
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(v23).n128_u64[0];
  }
  return result;
}

void sub_100A0B3C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(__n128);
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  id v25;
  id v26;
  char v27;
  id v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t j;
  void *v64;
  __n128 v65;
  int v66;
  id v67;
  uint64_t *v68;
  uint64_t v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  void *v73;
  void *v74;
  __n128 v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t i;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  id v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  id v90;
  id v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  _QWORD *v94;
  id v95;
  void (*v96)(__n128);
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char v101[24];
  char v102[24];
  char v103[24];
  char v104[32];

  v4 = v3;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v98 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v94 - v11;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v97 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v94 - v17;
  v20 = __chkstk_darwin(v19);
  v21 = *(void (**)(__n128))(v14 + 16);
  v100 = (uint64_t)&v94 - v22;
  v96 = v21;
  v21(v20);
  v99 = v13;
  if (!a1)
  {
LABEL_16:
    if (!a2)
      goto LABEL_44;
    goto LABEL_17;
  }
  v24 = v14;
  if (a2)
  {
    sub_100A0CB30();
    v25 = a1;
    v26 = a2;
    v27 = static NSObject.== infix(_:_:)(v25, v26);

    if ((v27 & 1) != 0)
    {

      v13 = v99;
      goto LABEL_18;
    }
  }
  else
  {
    v28 = a1;
  }
  sub_100A0B1D4(a1, v100);
  v14 = v24;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1)
  {

    v13 = v99;
    if (!a2)
      goto LABEL_44;
    goto LABEL_17;
  }
  v29 = v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap;
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap, v102, 0, 0);
  v31 = *(_QWORD *)v29;
  v32 = *(_QWORD *)(*(_QWORD *)v29 + 16);
  v13 = v99;
  if (!v32)
    goto LABEL_14;
  v33 = a1;
  swift_bridgeObjectRetain(v31);
  v34 = sub_100843270((uint64_t)v33);
  if ((v35 & 1) == 0)
  {

    v30 = swift_bridgeObjectRelease(v31);
LABEL_14:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(v12, 1, 1, v13, v30);
LABEL_15:

    sub_1004C1F2C((uint64_t)v12);
    goto LABEL_16;
  }
  v94 = *(_QWORD **)(*(_QWORD *)(v31 + 56) + 8 * v34);
  swift_bridgeObjectRetain(v94);
  v95 = v33;

  v36 = v31;
  v37 = v94;
  v38 = swift_bridgeObjectRelease(v36);
  v39 = v37[2];
  if (v39)
  {
    ((void (*)(char *, char *, uint64_t, __n128))v96)(v12, (char *)v37+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * (v39 - 1), v13, v38);
    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v40, 1, v13);
  v65 = swift_bridgeObjectRelease(v37);
  v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v65);
  v67 = v95;
  if (v66 == 1)
    goto LABEL_15;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v12, v13);
  v68 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap, v101, 0, 0);
  v69 = *v68;
  swift_bridgeObjectRetain(v69);
  v70 = sub_100618724((uint64_t)v18, v69);
  v94 = v71;
  v72 = v14;
  v74 = v73;
  v75 = swift_bridgeObjectRelease(v69);
  if (v70)
  {
    v76 = v67;
    sub_100A0AC50(0, (uint64_t)a1, (uint64_t)v70);

    v13 = v99;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v18, v99);
  }
  else
  {
    v13 = v99;
    (*(void (**)(char *, uint64_t, __n128))(v72 + 8))(v18, v99, v75);

  }
  v14 = v72;
  if (!a2)
  {
LABEL_44:
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1)
    {
LABEL_58:
      (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v100, v13, v23);
      return;
    }
    v77 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers), "allObjects");
    v78 = sub_1004B804C((uint64_t *)&unk_101401AC0);
    v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v77, v78);

    v61 = v14;
    if ((unint64_t)v60 >> 62)
    {
      if (v60 < 0)
        v81 = v60;
      else
        v81 = v60 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v60);
      v4 = _CocoaArrayWrapper.endIndex.getter(v81);
      swift_bridgeObjectRelease(v60);
      if (v4)
        goto LABEL_47;
    }
    else
    {
      v4 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
LABEL_47:
        if (v4 < 1)
        {
          __break(1u);
          goto LABEL_60;
        }
        for (i = 0; i != v4; ++i)
        {
          if ((v60 & 0xC000000000000001) != 0)
          {
            v80 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v60);
          }
          else
          {
            v80 = *(void **)(v60 + 8 * i + 32);
            swift_unknownObjectRetain(v80);
          }
          objc_msgSend(v80, "collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:", a1, 0, a3);
          swift_unknownObjectRelease(v80);
        }
      }
    }
    v23 = swift_bridgeObjectRelease(v60);
    v13 = v99;
    goto LABEL_58;
  }
LABEL_17:
  v24 = v14;
  v26 = a2;
LABEL_18:
  v41 = v26;
  v42 = v100;
  sub_100A0AE50(v41, v100, 1);
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v42, v13);

    return;
  }
  v43 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap, v104, 0, 0);
  v45 = *v43;
  v46 = v99;
  v47 = v24;
  if (!*(_QWORD *)(v45 + 16))
    goto LABEL_25;
  v48 = v41;
  swift_bridgeObjectRetain(v45);
  v49 = sub_100843270((uint64_t)v48);
  if ((v50 & 1) == 0)
  {

    v44 = swift_bridgeObjectRelease(v45);
LABEL_25:
    v54 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v47 + 56))(v98, 1, 1, v46, v44);
LABEL_26:

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v42, v46);
    sub_1004C1F2C(v54);
    return;
  }
  v51 = *(_QWORD *)(*(_QWORD *)(v45 + 56) + 8 * v49);
  swift_bridgeObjectRetain(v51);
  v95 = v48;

  v52 = swift_bridgeObjectRelease(v45);
  v53 = *(_QWORD *)(v51 + 16);
  if (v53)
  {
    v54 = (uint64_t)v98;
    ((void (*)(char *, unint64_t, uint64_t, __n128))v96)(v98, v51+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * (v53 - 1), v46, v52);
    v55 = 0;
  }
  else
  {
    v55 = 1;
    v54 = (uint64_t)v98;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v54, v55, 1, v46);
  v56 = swift_bridgeObjectRelease(v51);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v47 + 48))(v54, 1, v46, v56) == 1)
    goto LABEL_26;
  v57 = v97;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v97, v54, v46);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v57, v42) & 1) == 0)
  {
    v58 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers), "allObjects");
    v59 = sub_1004B804C((uint64_t *)&unk_101401AC0);
    v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, v59);

    v61 = v47;
    if (!((unint64_t)v60 >> 62))
    {
      v62 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v62)
      {
LABEL_32:
        if (v62 < 1)
        {
          __break(1u);
          return;
        }
        for (j = 0; j != v62; ++j)
        {
          if ((v60 & 0xC000000000000001) != 0)
          {
            v64 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v60);
          }
          else
          {
            v64 = *(void **)(v60 + 8 * j + 32);
            swift_unknownObjectRetain(v64);
          }
          objc_msgSend(v64, "collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:", a1, 0, a3);
          swift_unknownObjectRelease(v64);
        }
      }
LABEL_64:
      swift_bridgeObjectRelease(v60);
      v47 = v61;
      goto LABEL_65;
    }
LABEL_60:
    if (v60 < 0)
      v82 = v60;
    else
      v82 = v60 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v60);
    v62 = _CocoaArrayWrapper.endIndex.getter(v82);
    swift_bridgeObjectRelease(v60);
    if (v62)
      goto LABEL_32;
    goto LABEL_64;
  }
LABEL_65:
  v83 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap, v103, 0, 0);
  v84 = *v83;
  swift_bridgeObjectRetain(v84);
  v85 = sub_100618724(v97, v84);
  v87 = v86;
  v89 = v88;
  swift_bridgeObjectRelease(v84);
  v90 = v95;
  if (v85)
  {
    v91 = v95;
    sub_100A0AC50((uint64_t)a1, (uint64_t)v90, (uint64_t)v85);

  }
  v92 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v93 = v99;
  v92(v97, v99);
  v92(v100, v93);
}

id sub_100A0BC64()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorCursorCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLCollaboratorCursorCoordinator()
{
  return objc_opt_self(_TtC8Freeform32CRLCollaboratorCursorCoordinator);
}

id sub_100A0BD70(void *a1)
{
  uint64_t v1;

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"willTeardownRenderer(_:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 177, "This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willTeardownRenderer(_:)", 24, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2u, 177, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u);
    objc_msgSend((id)objc_opt_self(CRLAssertionHandler), "logFullBacktrace");
  }
  objc_msgSend(a1, "setCollaboratorCursorDelegate:", 0);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers), "removeObject:", a1);
}

void sub_100A0BEA0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain(a3);
  v7 = a1;
  a4(a3);
  swift_unknownObjectRelease(a3);

}

id sub_100A0C054(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap;
  v4 = v1;
  *(_QWORD *)&v1[v3] = sub_1008D5544((uint64_t)_swiftEmptyArrayStorage);
  v5 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap;
  *(_QWORD *)&v4[v5] = sub_1008D56EC((uint64_t)_swiftEmptyArrayStorage);
  v4[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__kShouldDisplayLatestSelection] = 1;
  v6 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers;
  *(_QWORD *)&v4[v6] = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 512);
  v4[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_selectionPathValidator] = a1;
  v7 = a1;

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for CRLCollaboratorCursorCoordinator();
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t sub_100A0C138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];

  v2 = a1 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess(v3, v11, 0, 0);
  v4 = *v3;
  swift_bridgeObjectRetain(*v3);
  v5 = sub_100618724(v2, v4);
  v7 = v6;
  v9 = v8;
  swift_bridgeObjectRelease();
  result = 0;
  if ((unint64_t)v5 >= 2)
  {

    return v9;
  }
  return result;
}

void sub_100A0C1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t Strong;
  void *v43;
  char *v44;
  uint64_t v45;
  Class isa;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  Class v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  char isUniquelyReferenced_nonNull_native;
  __n128 v64;
  void (*v65)(uint64_t, uint64_t, __n128);
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t i;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int64_t v94;
  char *v95;
  uint64_t v96;
  id v97;
  id v98;
  char v99[24];
  uint64_t v100;
  _BYTE v101[24];
  char v102[32];

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v86 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v78 - v5;
  v7 = sub_1004B804C(&qword_101401AA8);
  __chkstk_darwin(v7);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v78 - v11;
  v13 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap, v102, 0, 0);
  v85 = v13;
  v14 = *v13;
  v15 = *(_QWORD *)(*v13 + 64);
  v80 = *v13 + 64;
  v16 = 1 << *(_BYTE *)(v14 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v91 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_selectionPathValidator;
  v84 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors;
  v82 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers;
  v83 = (unint64_t)(v16 + 63) >> 6;
  v79 = v83 - 1;
  v87 = v14;
  v19 = swift_bridgeObjectRetain(v14);
  v93 = v1;
  v94 = 0;
  v96 = v0;
  v92 = v2;
  v81 = v6;
  v95 = v9;
  v90 = v12;
  while (v18)
  {
    v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v21 = v20 | (v94 << 6);
LABEL_7:
    v22 = v87;
    v23 = v1;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v2 + 16))(v9, *(_QWORD *)(v87 + 48) + *(_QWORD *)(v2 + 72) * v21, v1, v19);
    v24 = *(_QWORD *)(v22 + 56) + 24 * v21;
    v25 = sub_1004B804C((uint64_t *)&unk_101401AB0);
    v26 = &v9[*(int *)(v25 + 48)];
    v27 = *(void **)v24;
    v28 = *(void **)(v24 + 8);
    v29 = *(void **)(v24 + 16);
    *(_QWORD *)v26 = v27;
    *((_QWORD *)v26 + 1) = v28;
    *((_QWORD *)v26 + 2) = v29;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 0, 1, v25);
    v30 = v27;
    v31 = v28;
    v32 = v29;
LABEL_26:
    sub_100A0CAE8((uint64_t)v9, (uint64_t)v12);
    v37 = sub_1004B804C((uint64_t *)&unk_101401AB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v12, 1, v37) == 1)
    {
      swift_release(v87);
      return;
    }
    v38 = &v12[*(int *)(v37 + 48)];
    v39 = (char *)*((_QWORD *)v38 + 1);
    v97 = *(id *)v38;
    v40 = (void *)*((_QWORD *)v38 + 2);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v6, v12, v23);
    v41 = *(_QWORD *)(v96 + v91);
    Strong = swift_unknownObjectWeakLoadStrong(v41 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_board);
    v98 = v39;
    if (Strong)
    {
      v43 = (void *)Strong;
      v44 = &v39[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs];
      swift_beginAccess(&v39[OBJC_IVAR____TtC8Freeform27CRLPersistableSelectionPath_mostSpecificItemSelectionUUIDs], v99, 0, 0);
      swift_bridgeObjectRetain(*(_QWORD *)v44);
      v45 = (uint64_t)v39;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v47 = objc_msgSend(v43, "resolveToSiblingsWithUuids:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      v48 = type metadata accessor for CRLBoardItem(0);
      v49 = sub_1004B7878((unint64_t *)&qword_1013E4190, type metadata accessor for CRLBoardItem, (uint64_t)&protocol conformance descriptor for NSObject);
      v50 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v47, v48, v49);

      v2 = v92;
      v51 = sub_100585688(v50, v45);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, "Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2u, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u);
      v52 = *(id *)(v41 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
      v53 = Set._bridgeToObjectiveC()().super.isa;
      v51 = objc_msgSend(v52, "selectionPathForInfos:", v53);

    }
    sub_100A0CB30();
    v54 = static NSObject.== infix(_:_:)(v51, v40);
    v9 = v95;
    if ((v54 & 1) != 0)
    {
      v1 = v93;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v93);

      v12 = v90;
    }
    else
    {
      v88 = v18;
      v89 = v40;
      v55 = v6;
      v56 = (uint64_t)v86;
      v57 = v93;
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v86, v6, v93);
      v58 = v85;
      swift_beginAccess(v85, v101, 33, 0);
      v59 = v97;
      v60 = v98;
      v61 = v2;
      v62 = v51;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v58);
      v100 = *v58;
      *v58 = 0x8000000000000000;
      sub_1008266E4((uint64_t)v59, (uint64_t)v60, (uint64_t)v62, v56, isUniquelyReferenced_nonNull_native);
      *v58 = v100;
      v64 = swift_bridgeObjectRelease();
      v65 = *(void (**)(uint64_t, uint64_t, __n128))(v61 + 8);
      v66 = v96;
      v65(v56, v57, v64);
      swift_endAccess(v101);
      if (*(_BYTE *)(v66 + v84) == 1)
      {
        v98 = v60;
        v67 = *(void **)(v96 + v82);
        v68 = v62;
        v69 = v89;
        v70 = objc_msgSend(v67, "allObjects");
        v71 = sub_1004B804C((uint64_t *)&unk_101401AC0);
        v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

        if ((unint64_t)v72 >> 62)
        {
          if (v72 < 0)
            v76 = v72;
          else
            v76 = v72 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v72);
          v73 = _CocoaArrayWrapper.endIndex.getter(v76);
          swift_bridgeObjectRelease();
          if (!v73)
            goto LABEL_45;
        }
        else
        {
          v73 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (!v73)
            goto LABEL_45;
        }
        if (v73 < 1)
          goto LABEL_48;
        for (i = 0; i != v73; ++i)
        {
          if ((v72 & 0xC000000000000001) != 0)
          {
            v75 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v72);
          }
          else
          {
            v75 = *(void **)(v72 + 8 * i + 32);
            swift_unknownObjectRetain(v75);
          }
          objc_msgSend(v75, "collaboratorCursorSelectionPathChangedFromSelectionPath:toSelectionPath:collaboratorPresence:", v69, v68, v59);
          swift_unknownObjectRelease(v75);
        }
LABEL_45:

        swift_bridgeObjectRelease();
        v6 = v81;
        v77 = v93;
        ((void (*)(char *, uint64_t))v65)(v81, v93);
        v1 = v77;
        v2 = v92;
        v9 = v95;
        v12 = v90;
        v18 = v88;
      }
      else
      {
        ((void (*)(char *, uint64_t))v65)(v55, v57);

        v2 = v92;
        v6 = v55;
        v9 = v95;
        v12 = v90;
        v18 = v88;
        v1 = v57;
      }
    }
  }
  v33 = v94 + 1;
  if (__OFADD__(v94, 1))
  {
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v33 >= v83)
  {
LABEL_25:
    v23 = v1;
    v36 = sub_1004B804C((uint64_t *)&unk_101401AB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v9, 1, 1, v36);
    v18 = 0;
    goto LABEL_26;
  }
  v34 = *(_QWORD *)(v80 + 8 * v33);
  if (v34)
  {
LABEL_11:
    v18 = (v34 - 1) & v34;
    v21 = __clz(__rbit64(v34)) + (v33 << 6);
    v94 = v33;
    goto LABEL_7;
  }
  v35 = v94 + 2;
  ++v94;
  if (v33 + 1 >= v83)
    goto LABEL_25;
  v34 = *(_QWORD *)(v80 + 8 * v35);
  if (v34)
    goto LABEL_14;
  v94 = v33 + 1;
  if (v33 + 2 >= v83)
    goto LABEL_25;
  v34 = *(_QWORD *)(v80 + 8 * (v33 + 2));
  if (v34)
  {
    v33 += 2;
    goto LABEL_11;
  }
  v35 = v33 + 3;
  v94 = v33 + 2;
  if (v33 + 3 >= v83)
    goto LABEL_25;
  v34 = *(_QWORD *)(v80 + 8 * v35);
  if (v34)
  {
LABEL_14:
    v33 = v35;
    goto LABEL_11;
  }
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v83)
    {
      v94 = v79;
      goto LABEL_25;
    }
    v34 = *(_QWORD *)(v80 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_11;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_100A0CAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101401AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100A0CB30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013E6268;
  if (!qword_1013E6268)
  {
    v1 = objc_opt_self(CRLSelectionPath);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013E6268);
  }
  return result;
}

uint64_t sub_100A0CB6C()
{
  return sub_1004B7878(&qword_101401AD8, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21F1C);
}

uint64_t type metadata accessor for CRLChangeSelectionFontStyleIntent(uint64_t a1)
{
  uint64_t result;

  result = qword_101401B50;
  if (!qword_101401B50)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLChangeSelectionFontStyleIntent);
  return result;
}

uint64_t sub_100A0CBD4()
{
  return sub_1004B7878((unint64_t *)&unk_101401AE0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21F44);
}

uint64_t sub_100A0CC00(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10113011C, 1);
}

uint64_t sub_100A0CC10(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1011300F4, 1);
}

uint64_t sub_100A0CC20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[8] = a1;
  v2[9] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[10] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[11] = v4;
  v2[12] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLBoardIdentifier(0);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLBoardEntity(0);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[16] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[17] = v8;
  v2[18] = v9;
  return swift_task_switch(sub_100A0CCF8, v8, v9);
}

uint64_t sub_100A0CCF8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v2 = v0[14];
  v1 = (_QWORD *)v0[15];
  v3 = v0[13];
  IntentParameter.wrappedValue.getter(v1);
  sub_1004E1B3C((uint64_t)v1 + *(int *)(v2 + 40), v3);
  v4 = sub_1004B84A4((uint64_t)v1, type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter(v4);
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10129B490;
  v7 = (char *)&dword_1014118D8 + dword_1014118D8;
  v5 = (_QWORD *)swift_task_alloc(unk_1014118DC);
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_100A0CDD0;
  return ((uint64_t (*)(_QWORD, _QWORD *))v7)(v0[13], v0 + 2);
}

uint64_t sub_100A0CDD0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 152);
  v5[20] = a2;
  v5[21] = v2;
  swift_task_dealloc(v6);
  sub_1004B84A4(v5[13], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    v7 = v5[17];
    v8 = v5[18];
    v9 = sub_100A0D528;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v5 + 2);

    v7 = v5[17];
    v8 = v5[18];
    v9 = sub_100A0CE70;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_100A0CE70()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  void *v22;
  uint8_t *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  swift_release(*(_QWORD *)(v0 + 128));
  v1 = sub_100501D54();
  if (v1)
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v1, v2);
  else
    ObjCClassFromMetadata = 0;
  v4 = objc_msgSend(*(id *)(v0 + 160), "mostSpecificCurrentEditorOfClass:", ObjCClassFromMetadata);
  v5 = objc_opt_self(CRLWPShapeEditor);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (v6)
  {
    v7 = objc_msgSend(v6, "wpEditors");
    swift_unknownObjectRelease(v4);
    v8 = type metadata accessor for CRLWPEditor(0);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v37 = v9;
      else
        v37 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_7:
        if (v10 >= 1)
        {
          v11 = (_QWORD *)(v0 + 176);
          if ((v9 & 0xC000000000000001) != 0)
            specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
          else
            v12 = *(id *)(v9 + 32);
          IntentParameter.wrappedValue.getter(v11);
          __asm { BR              X9 }
        }
        __break(1u);
        JUMPOUT(0x100A0D518);
      }
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
        goto LABEL_7;
    }
    v38 = *(void **)(v0 + 160);
    v39 = *(_QWORD *)(v0 + 120);
    v41 = *(_QWORD *)(v0 + 96);
    v40 = *(_QWORD *)(v0 + 104);
    swift_bridgeObjectRelease();
    static IntentResult.result<>()(v42);

    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    v36 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v13 = *(void **)(v0 + 160);
    v15 = *(_QWORD *)(v0 + 88);
    v14 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    swift_unknownObjectRelease(v4);
    v18 = type metadata accessor for CRLChangeSelectionFontStyleIntent(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v17 + *(int *)(v18 + 28), v16);
    v19 = Logger.logObject.getter(v13);
    v20 = static os_log_type_t.error.getter(v19);
    v21 = os_log_type_enabled(v19, v20);
    v22 = *(void **)(v0 + 160);
    if (v21)
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v23 = 138412290;
      *(_QWORD *)(v0 + 56) = v22;
      v25 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v23 + 4, v23 + 12);
      *v24 = v22;

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Missing text editors for selection: %@", v23, 0xCu);
      v26 = sub_1004B804C(&qword_1013E53A8);
      swift_arrayDestroy(v24, 1, v26);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
      v27 = *(NSObject **)(v0 + 160);
    }
    else
    {

      v27 = *(NSObject **)(v0 + 160);
      v19 = v27;
    }
    v29 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 96);
    v30 = *(_QWORD *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    v31 = type metadata accessor for _PrebuiltAppIntentError(0);
    v32 = sub_1004B7878((unint64_t *)&qword_1013E53A0, (uint64_t (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError, (uint64_t)&protocol conformance descriptor for _PrebuiltAppIntentError);
    swift_allocError(v31, v32, 0, 0);
    v33.n128_f64[0] = static _UnrecoverableError.actionNotAllowed.getter();
    swift_willThrow(v33);

    v35 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    v36 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v36();
}

uint64_t sub_100A0D528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 128));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A0D58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_100501DE0(v10, qword_101480550);
  sub_1004F2A1C(v10, (uint64_t)qword_101480550);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x8000000100FEBCB0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0x6E497070414C5243, 0xED000073746E6574, v6, v3, "App intent title", 16, 2);
}

uint64_t sub_100A0D718()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v0 = sub_1004B804C(&qword_101401BB0);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C(&qword_101401BB8);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CRLChangeSelectionFontStyleIntent(0);
  v7 = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 2, v6, v7);
  v8._object = (void *)0x8000000100FEBC90;
  v8._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(aX_8);
  v10 = sub_1004B804C(&qword_101401BC0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 544175136;
  v11._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v12 = swift_getKeyPath(aX_9);
  v13 = sub_1004B804C(&qword_101401BC8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v12, v3, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v5, v6, v7);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E497070414C5243, 0xED000073746E6574, v6, v7);
}

uint64_t sub_100A0D8FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unsigned int v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  unsigned int v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD v80[7];

  v72 = a1;
  v77 = type metadata accessor for InputConnectionBehavior(0);
  v71 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v76 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1004B804C(&qword_1013E1110);
  __chkstk_darwin(v2);
  v75 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v74 = (char *)&v58 - v5;
  v6 = sub_1004B804C(&qword_1013FE140);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v8;
  v9 = sub_1004B804C(&qword_1013E1118);
  __chkstk_darwin(v9);
  v73 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  __chkstk_darwin(v11);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for LocalizedStringResource(0);
  v23 = *(_QWORD *)(v22 - 8);
  v69 = v22;
  __chkstk_darwin(v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1004B804C(&qword_1013E1120);
  v26 = String.LocalizationValue.init(stringLiteral:)(0x6472616F42, 0xE500000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v63 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v62 = v13;
  v28(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  v61 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for a board", 34, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000023, 0x8000000100FAFCC0);
  static Locale.current.getter(v29);
  v28(v15, v27, v13);
  v30 = v73;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter description for a board", 40, 2);
  v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
  v68(v30, 0, 1, v22);
  v31 = type metadata accessor for CRLBoardEntity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v64 = v33;
  v34 = v74;
  v33(v74, 1, 1, v32);
  v35 = v75;
  v33(v75, 1, 1, v32);
  v66 = sub_1004B804C(&qword_1013E1128);
  v67 = 0x8000000100FAFD20;
  v78 = 0xD00000000000001FLL;
  v79 = 0x8000000100FAFD20;
  AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
  v65 = type metadata accessor for AppDependencyManager(0);
  v36 = static AppDependencyManager.shared.getter(v65);
  v80[0] = AppDependency.__allocating_init(key:manager:)(v80, v36);
  v60 = enum case for InputConnectionBehavior.default(_:);
  v71 = *(_QWORD *)(v71 + 104);
  v37 = v76;
  ((void (*)(char *))v71)(v76);
  v38 = sub_100501D10();
  v57 = sub_1004B7878((unint64_t *)&qword_1013E1138, type metadata accessor for CRLBoardEntity, (uint64_t)&unk_100F062EC);
  v39 = v25;
  v40 = v25;
  v41 = v73;
  v42 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)(v40, v73, v59, v34, v35, v37, v80, &type metadata for CRLOpenBoardsOptionsProvider, v38, v57);
  v43 = v72;
  *v72 = v42;
  v70 = sub_1004B804C(&qword_101401BA0);
  v44 = String.LocalizationValue.init(stringLiteral:)(0x656C797453, 0xE500000000000000);
  static Locale.current.getter(v44);
  v45 = v63;
  v46 = v62;
  v47 = v61;
  v61(v15, v63, v62);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter title for a font style", 39, 2);
  v48 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x8000000100FEBC30);
  static Locale.current.getter(v48);
  v47(v15, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v21, 0x6E497070414C5243, 0xED000073746E6574, v18, v15, "Intent parameter description for a font style", 45, 2);
  v68(v41, 0, 1, v69);
  LOBYTE(v80[0]) = 4;
  v49 = v74;
  v50 = v64;
  v64(v74, 1, 1, v32);
  v51 = v75;
  v50(v75, 1, 1, v32);
  v52 = v76;
  ((void (*)(char *, _QWORD, uint64_t))v71)(v76, v60, v77);
  v53 = sub_1008C7AF8();
  v43[1] = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v39, v41, v80, v49, v51, v52, &off_101265748, v53);
  v78 = 0xD00000000000001FLL;
  v79 = v67;
  v54 = AnyHashable.init<A>(_:)(&v78, &type metadata for String, &protocol witness table for String);
  v55 = static AppDependencyManager.shared.getter(v54);
  v43[2] = AppDependency.__allocating_init(key:manager:)(v80, v55);
  type metadata accessor for CRLChangeSelectionFontStyleIntent(0);
  if (qword_1013DD838 != -1)
    swift_once(&qword_1013DD838, sub_100A04F30);
  swift_beginAccess(&static OS_os_log.appIntents, v80, 0, 0);
  return Logger.init(_:)((id)static OS_os_log.appIntents);
}

uint64_t sub_100A0E070@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1013DD8E0 != -1)
    swift_once(&qword_1013DD8E0, sub_100A0D58C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_1004F2A1C(v2, (uint64_t)qword_101480550);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100A0E0E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_101401BAC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CF80C;
  return sub_100A0CC20(a1);
}

uint64_t sub_100A0E138(uint64_t a1)
{
  uint64_t result;

  result = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100A0E174(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101401AF0, type metadata accessor for CRLChangeSelectionFontStyleIntent, (uint64_t)&unk_100F21E70);
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t *sub_100A0E1B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    v7 = a2[2];
    a1[1] = v6;
    a1[2] = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Logger(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v4);
    swift_retain(v6);
    v13 = swift_retain(v7);
    v12(v9, v10, v11, v13);
  }
  return v5;
}

uint64_t sub_100A0E26C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  v4 = (char *)a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_100A0E2C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;

  v4 = *a2;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[2];
  a1[2] = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Logger(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v4);
  swift_retain(v5);
  v12 = swift_retain(v6);
  v11(v8, v9, v10, v12);
  return a1;
}

uint64_t *sub_100A0E354(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[1];
  v9 = a1[1];
  a1[1] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[2];
  v11 = a1[2];
  a1[2] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(int *)(a3 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t sub_100A0E3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100A0E45C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a1[1];
  a1[1] = a2[1];
  swift_release(v7);
  v8 = a1[2];
  a1[2] = a2[2];
  swift_release(v8);
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_100A0E4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A0E4F4);
}

uint64_t sub_100A0E4F4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_100A0E570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A0E57C);
}

char *sub_100A0E57C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Logger(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A0E5F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100A0E66C()
{
  return sub_1004CBA30(&qword_101401B90, &qword_101401B98, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100A0E698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100A0E6C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100A0E6E8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_10085667C();
  if (!v1)
    return 0;
  return result;
}

uint64_t sub_100A0E720()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t sub_100A0E7F4()
{
  uint64_t v0;

  sub_1007BF910();
  v0 = swift_allocObject(&unk_101290A68, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100A0EA50, v0);
}

void sub_100A0E888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform29CRLiOSMiniFormatterURLBuilder_urlDataProvider);

    sub_100856828();
  }
}

uint64_t sub_100A0E8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  void *v9;
  _BYTE v10[32];

  sub_1004CB6E8(a2, (uint64_t)v10);
  v4 = type metadata accessor for CRLURLItem(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    goto LABEL_5;
  v5 = v9;
  v6 = sub_100704150();
  if (!v6)
  {

LABEL_5:
    v7 = sub_100781048(a1, a2);
    return v7 & 1;
  }
  v7 = sub_100622190(v5, v6);

  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_100A0E9BC()
{
  uint64_t v0;

}

id sub_100A0E9CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterURLBuilder();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLiOSMiniFormatterURLBuilder()
{
  return objc_opt_self(_TtC8Freeform29CRLiOSMiniFormatterURLBuilder);
}

uint64_t sub_100A0EA2C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100A0EA50(uint64_t a1)
{
  uint64_t v1;

  sub_100A0E888(a1, v1);
}

id sub_100A0EA58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  void *v6;
  char *v12;
  objc_class *v13;
  char *v14;
  id v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v21;
  objc_super v22;

  v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterURLDataProvider());
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v13 = (objc_class *)type metadata accessor for CRLMiniFormatterDataProvider();
  v22.receiver = v12;
  v22.super_class = v13;
  v14 = v6;
  v15 = a5;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform29CRLiOSMiniFormatterURLBuilder_urlDataProvider] = objc_msgSendSuper2(&v22, "init");

  v16 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterMediaDataProvider());
  *(_QWORD *)&v16[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v15;
  v21.receiver = v16;
  v21.super_class = v13;
  v17 = v14;
  v18 = v15;
  *(_QWORD *)&v17[OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider] = objc_msgSendSuper2(&v21, "init");

  return sub_1004CA6E8(a1, a2, a3, a4, v18, a6);
}

ValueMetadata *type metadata accessor for CRLTipSendCopy()
{
  return &type metadata for CRLTipSendCopy;
}

uint64_t sub_100A0EB8C(uint64_t a1)
{
  return sub_100A0EC00(a1, qword_101480568, 0x657261685373692BLL, 0xEE006472616F4264);
}

uint64_t sub_100A0EBB8(uint64_t a1)
{
  return sub_100A0EC00(a1, qword_101480580, 0xD000000000000010, 0x8000000100FC2470);
}

uint64_t sub_100A0EBDC(uint64_t a1)
{
  return sub_100A0EC00(a1, qword_101480598, 0xD000000000000018, 0x8000000100FEBD20);
}

uint64_t sub_100A0EC00(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v9;

  v7 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v9 = 0;
  return Tips.Parameter.init<A>(_:_:_:_:)(&type metadata for CRLTipSendCopy, a3, a4, &v9, _swiftEmptyArrayStorage, &type metadata for Bool, &type metadata for CRLTipSendCopy, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_100A0ECA0()
{
  return sub_100A0ED4C();
}

uint64_t sub_100A0ECC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10054F9E0();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_100A0ED08()
{
  unint64_t result;

  result = qword_101401C00;
  if (!qword_101401C00)
  {
    result = swift_getWitnessTable(&unk_100F22090, &type metadata for CRLTipSendCopy);
    atomic_store(result, (unint64_t *)&qword_101401C00);
  }
  return result;
}

uint64_t sub_100A0ED4C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_100A0EE38()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_1004D292C();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_100A0EF24()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];

  v0 = sub_1004B804C((uint64_t *)&unk_1013E1B00);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for Tips.Rule(0, v2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1013DD8E8 != -1)
    swift_once(&qword_1013DD8E8, sub_100A0EB8C);
  v9 = sub_1004F2A1C(v0, (uint64_t)qword_101480568);
  v10 = swift_beginAccess(v9, v29, 0, 0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v1 + 16);
  v11(v4, v9, v0, v10);
  Tips.Rule.init<A>(_:_:)(v4, sub_1005E990C, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v12 = static Tips.RuleBuilder.buildExpression(_:)(v8);
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  if (qword_1013DD8F0 != -1)
    swift_once(&qword_1013DD8F0, sub_100A0EBB8);
  v14 = sub_1004F2A1C(v0, (uint64_t)qword_101480580);
  v15 = swift_beginAccess(v14, v28, 0, 0);
  v11(v4, v14, v0, v15);
  Tips.Rule.init<A>(_:_:)(v4, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v16 = static Tips.RuleBuilder.buildExpression(_:)(v8);
  v13(v8, v5);
  if (qword_1013DD8F8 != -1)
    swift_once(&qword_1013DD8F8, sub_100A0EBDC);
  v17 = sub_1004F2A1C(v0, (uint64_t)qword_101480598);
  v18 = swift_beginAccess(v17, v27, 0, 0);
  v11(v4, v17, v0, v18);
  Tips.Rule.init<A>(_:_:)(v4, sub_1005E9AAC, 0, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
  v19 = static Tips.RuleBuilder.buildExpression(_:)(v8);
  v13(v8, v5);
  v20 = static Tips.RuleBuilder.buildPartialBlock(first:)(v12);
  v21 = swift_bridgeObjectRelease();
  v22 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v20, v16, v21);
  swift_bridgeObjectRelease();
  v23 = swift_bridgeObjectRelease();
  v24 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)(v22, v19, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

id sub_100A0F284()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileLayout();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLFileLayout()
{
  return objc_opt_self(_TtC8Freeform13CRLFileLayout);
}

uint64_t sub_100A0F2D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_100A0F550(v0 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A0F30C()
{
  return _s8ItemDataCMa(0);
}

uint64_t _s8ItemDataCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_101401C58;
  if (!qword_101401C58)
    return swift_getSingletonMetadata(a1, &_s8ItemDataCMn);
  return result;
}

uint64_t sub_100A0F350(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = _s13ItemViewModelVMa(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

Swift::Int sub_100A0F3CC()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  sub_1008DF544(v3, *(_QWORD *)(v1 + 16));
  sub_100A1C5DC(v3);
  return Hasher._finalize()();
}

uint64_t sub_100A0F424(__int128 *a1)
{
  uint64_t v1;

  sub_1008DF544(a1, *(_QWORD *)(*(_QWORD *)v1 + 16));
  return sub_100A1C5DC(a1);
}

Swift::Int sub_100A0F460(uint64_t a1)
{
  uint64_t v1;
  __int128 v3[4];

  Hasher.init(_seed:)(v3, a1);
  sub_1008DF544(v3, *(_QWORD *)(*(_QWORD *)v1 + 16));
  sub_100A1C5DC(v3);
  return Hasher._finalize()();
}

uint64_t sub_100A0F4B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  sub_1008D8A00(*(_QWORD *)(*a1 + 16), *(_QWORD *)(*a2 + 16));
  if ((v4 & 1) != 0)
    return sub_100A1C8AC(v2 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata, v3 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata);
  else
    return 0;
}

unint64_t sub_100A0F508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101401D00;
  if (!qword_101401D00)
  {
    v1 = _s8ItemDataCMa(255);
    result = swift_getWitnessTable(&unk_100F2214C, v1);
    atomic_store(result, (unint64_t *)&qword_101401D00);
  }
  return result;
}

uint64_t sub_100A0F550(uint64_t a1)
{
  uint64_t v2;

  v2 = _s13ItemViewModelVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A0F58C()
{
  uint64_t result;

  qword_1014805B8 = 97;
  unk_1014805C0 = 0xE100000000000000;
  result = swift_getKeyPath(&unk_100F22450);
  qword_1014805C8 = result;
  return result;
}

uint64_t sub_100A0F5C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_1014805D0;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100A116C8(v3, a1);
}

uint64_t (*sub_100A0F618(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_1014805D0, a1, 33, 0);
  return j__swift_endAccess_0;
}

uint64_t sub_100A0F65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return static CROrderedSet.== infix(_:_:)(a1, a2, v4, &protocol witness table for UUID, v5);
}

uint64_t sub_100A0F6C4()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1013DD900 != -1)
    swift_once(&qword_1013DD900, sub_100A0F58C);
  v0 = qword_1014805B8;
  v1 = qword_1014805C8;
  swift_bridgeObjectRetain(unk_1014805C0);
  swift_retain(v1);
  return v0;
}

uint64_t sub_100A0F738(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100A0F778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a2 + *(int *)(a1 + 20)) = _swiftEmptyDictionarySingleton;
  v2 = type metadata accessor for UUID(0);
  v3 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return CROrderedSet.init()(v2, &protocol witness table for UUID, v3);
}

uint64_t sub_100A0F7E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F0348, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F2227C);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_100A0F820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_100A0F878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.apply(_:)(a1, a2, v4);
}

uint64_t sub_100A0F8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100A0F918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100A0F980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100A0F9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100A0FA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A0FA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100A0FAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100A0FB30()
{
  sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100A0FB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100A0FBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.merge(_:)(a1, a2, v4);
}

uint64_t sub_100A0FC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_101406B30, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F222DC);
  return CRDT.serializedData(_:version:)(a1, a2, a3, v6);
}

uint64_t sub_100A0FC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B7878(&qword_101406B30, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F222DC);
  return CRDT.init(serializedData:)(a1, a2, a3, v6);
}

uint64_t sub_100A0FCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.init(from:)(a1, a2, v4);
}

uint64_t sub_100A0FD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.encode(to:)(a1, a2, v4);
}

uint64_t sub_100A0FDA8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

double sub_100A0FDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t (*v9)(_BYTE *, __n128);
  __n128 v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  _BYTE v13[32];

  v3 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for CRLContainerItemData(0);
  v7 = swift_dynamicCastClass(a1, v6);
  if (v7)
  {
    (*(void (**)(void))(*(_QWORD *)v7 + 680))();
    v9 = *(uint64_t (**)(_BYTE *, __n128))(*(_QWORD *)v1 + 696);
    v10 = swift_retain(a1);
    v11 = (void (*)(_BYTE *, _QWORD))v9(v13, v10);
    v12 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    CRStruct_1.merge(_:)(v5, v3, v12);
    sub_100A11624((uint64_t)v5);
    v11(v13, 0);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100A0FF00(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v30[24];

  v2 = v1;
  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v30[-v8 - 8];
  v10 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v15 = &v30[-v14 - 8];
  v16 = (uint64_t)v2 + *(_QWORD *)(*v2 + 632);
  swift_beginAccess(v16, v30, 0, 0);
  if ((a1 & 1) != 0)
  {
    sub_1004CB7BC(v16, (uint64_t)v12, (uint64_t *)&unk_1013F02C0);
    v17 = sub_1004CBA30((unint64_t *)&qword_1013E0DE8, (uint64_t *)&unk_1013F02C0, (uint64_t)&unk_100EFD5F4);
    CRStruct_6.copy(renamingReferences:)(0, v10, v17);
    v18 = sub_1004CB800((uint64_t)v12, (uint64_t *)&unk_1013F02C0);
    (*(void (**)(uint64_t))(*v2 + 680))(v18);
    v19 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    CRStruct_1.copy(renamingReferences:)(0, v4, v19);
    sub_100A11624((uint64_t)v6);
  }
  else
  {
    v20 = sub_1004CB7BC(v16, (uint64_t)v15, (uint64_t *)&unk_1013F02C0);
    (*(void (**)(uint64_t))(*v2 + 680))(v20);
  }
  v21 = v2[4];
  v22 = v2[5];
  v25 = v2 + 2;
  v23 = v2[2];
  v24 = v25[1];
  v26 = type metadata accessor for CRLContainerItemData(0);
  v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  sub_100A11684((uint64_t)v9, v27 + qword_1014805D0);
  sub_1009DACA0((uint64_t)v15, v27 + *(_QWORD *)(*(_QWORD *)v27 + 632));
  return sub_1005E1000(v24, v21, v22, v23);
}

uint64_t sub_100A1014C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _BYTE v26[24];
  _BYTE v27[24];

  v3 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v26[-v7];
  v9 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v9);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v14 = &v26[-v13];
  v15 = type metadata accessor for CRLContainerItemData(0);
  v16 = swift_dynamicCastClass(a1, v15);
  if (!v16)
    goto LABEL_5;
  v17 = v16;
  v18 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 632);
  swift_beginAccess(v18, v27, 0, 0);
  sub_1004CB7BC(v18, (uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  v19 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 632);
  swift_beginAccess(v19, v26, 0, 0);
  sub_1004CB7BC(v19, (uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  swift_retain(a1);
  LOBYTE(v19) = sub_100D5ED30((uint64_t)v14, (uint64_t)v11);
  sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_1013F02C0);
  v20 = sub_1004CB800((uint64_t)v14, (uint64_t *)&unk_1013F02C0);
  if ((v19 & 1) == 0)
  {
    swift_release(a1);
LABEL_5:
    v24 = 0;
    return v24 & 1;
  }
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 680))(v20);
  (*(void (**)(uint64_t))(*(_QWORD *)v17 + 680))(v21);
  v22 = type metadata accessor for UUID(0);
  v23 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v24 = static CROrderedSet.== infix(_:_:)(v8, v5, v22, &protocol witness table for UUID, v23);
  swift_release(a1);
  sub_100A11624((uint64_t)v5);
  sub_100A11624((uint64_t)v8);
  return v24 & 1;
}

uint64_t sub_100A10384(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v5 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v18 - v10;
  (*(void (**)(__n128))(*(_QWORD *)v2 + 680))(v9);
  if ((a2 & 1) != 0)
  {
    v12 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    CRStruct_1.copy(renamingReferences:)(0, v5, v12);
    sub_100A11624((uint64_t)v7);
  }
  if (qword_1013DCB10 != -1)
    swift_once(&qword_1013DCB10, sub_1005DE88C);
  v13 = type metadata accessor for CRCodableVersion(0);
  v14 = sub_1004F2A1C(v13, (uint64_t)qword_10147EB08);
  v15 = sub_1004B7878(&qword_101406B30, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F222DC);
  v16 = CRDT.serializedData(_:version:)(a1, v14, v5, v15);
  sub_100A11624((uint64_t)v11);
  return v16;
}

uint64_t sub_100A1050C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;

  v3 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  v9 = type metadata accessor for CRLContainerItemData(0);
  v10 = swift_dynamicCastClass(a1, v9);
  if (v10)
  {
    v11 = v10;
    v12 = (*(uint64_t (**)(void))(*(_QWORD *)v1 + 680))();
    (*(void (**)(uint64_t))(*(_QWORD *)v11 + 680))(v12);
    v13 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    v14 = CRStruct_1.hasDelta(from:)(v5, v3, v13);
    sub_100A11624((uint64_t)v5);
    sub_100A11624((uint64_t)v8);
    return v14 & 1;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002FLL, 0x8000000100FAF2A0, "Freeform/CRLContainerItemData.swift", 35, 2, 90, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A1066C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v4 = *v2;
  v5 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - v9;
  v11 = sub_1004B804C(&qword_1014020E0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32 - v15;
  v17 = a1;
  v18 = swift_dynamicCastClass(a1, v4);
  if (v18)
  {
    v19 = v18;
    v20 = (*(uint64_t (**)(void))(v4 + 680))();
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 680))(v20);
    v21 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    v22 = v17;
    swift_retain(v17);
    v23 = v33;
    CRStruct_1.delta(_:from:)(v33, v7, v5, v21);
    sub_100A11624((uint64_t)v7);
    sub_100A11624((uint64_t)v10);
    sub_1004CB7BC((uint64_t)v16, (uint64_t)v13, &qword_1014020E0);
    v24 = sub_1004B804C(&qword_1014020C8);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v22;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v24) == 1)
    {
      sub_1004CB800((uint64_t)v16, &qword_1014020E0);
      swift_release(v22);
      sub_1004CB800((uint64_t)v13, &qword_1014020E0);
      return 0;
    }
    else
    {
      if (qword_1013DCB10 != -1)
        swift_once(&qword_1013DCB10, sub_1005DE88C);
      v28 = type metadata accessor for CRCodableVersion(0);
      v29 = sub_1004F2A1C(v28, (uint64_t)qword_10147EB08);
      v30 = sub_1004CBA30(&qword_1014020C0, &qword_1014020C8, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
      v27 = PartialCRDT.deltaSerializedData(_:version:)(v23, v29, v24, v30);
      swift_release(v26);
      sub_1004CB800((uint64_t)v16, &qword_1014020E0);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v24);
    }
    return v27;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000031, 0x8000000100FAF260, "Freeform/CRLContainerItemData.swift", 35, 2, 103, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_100A109A8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, _QWORD);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  char v52[112];
  _BYTE v53[40];
  uint64_t v54;

  v3 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v3);
  v48 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_1014020C8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004BE310(a1, a2);
  v13 = sub_1004CBA30(&qword_1014020C0, &qword_1014020C8, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
  v14 = a2;
  LOBYTE(a2) = v9;
  v16 = v50;
  PartialCRDT.init(serializedData:)(a1, v14, v9, v13);
  if (!v16)
  {
    v44 = v8;
    v47 = 0;
    v45 = v6;
    v46 = v5;
    v50 = v10;
    v17 = v49;
    v18 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v49 + 696))(v53);
    v19 = type metadata accessor for CRLContainerItemCRDTData(0);
    v20 = sub_1004B7878(&qword_1013F0378, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22424);
    LODWORD(a2) = CRStruct_1.merge(delta:)(v12, v19, v20);
    v18(v53, 0);
    if ((a2 & 1) == 0)
    {
      v42 = v9;
      v43 = a2;
      if (qword_1013DD888 != -1)
        swift_once(&qword_1013DD888, sub_100A05DE4);
      swift_beginAccess(&static OS_os_log.realTimeSync, v53, 0, 0);
      v21 = (void *)static OS_os_log.realTimeSync;
      v22 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v22, v52);
      *(_OWORD *)(inited + 16) = xmmword_100EF5A10;
      v24 = v17 + *(_QWORD *)(*(_QWORD *)v17 + 632);
      swift_beginAccess(v24, v51, 0, 0);
      v25 = v24;
      v26 = v48;
      sub_1004CB7BC(v25, v48, (uint64_t *)&unk_1013F02C0);
      v27 = v21;
      v28 = sub_1004B804C(&qword_1013E1A80);
      v29 = v44;
      CRRegister.wrappedValue.getter(v28);
      v30 = sub_1004CB800(v26, (uint64_t *)&unk_1013F02C0);
      v31 = UUID.uuidString.getter(v30);
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v46);
      *(_QWORD *)(inited + 56) = &type metadata for String;
      v34 = sub_1004CFC2C();
      *(_QWORD *)(inited + 64) = v34;
      *(_QWORD *)(inited + 32) = v31;
      *(_QWORD *)(inited + 40) = v33;
      v54 = v17;
      v35 = type metadata accessor for CRLContainerItemData(0);
      swift_retain(v17);
      v36 = String.init<A>(describing:)(&v54, v35);
      *(_QWORD *)(inited + 96) = &type metadata for String;
      *(_QWORD *)(inited + 104) = v34;
      *(_QWORD *)(inited + 72) = v36;
      *(_QWORD *)(inited + 80) = v37;
      v38 = static os_log_type_t.error.getter(v36);
      sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v38, "Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating(inited);
      a2 = *(_QWORD *)(inited + 16);
      v39 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, a2, v39);

      LOBYTE(a2) = v43;
      v9 = v42;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v9);
  }
  return a2 & 1;
}

uint64_t sub_100A10D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  _QWORD v24[6];

  v3 = v1;
  v5 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v24 - v14;
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    (*(void (**)(__n128))(*(_QWORD *)v1 + 680))(v13);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v7, v8);
    v16 = type metadata accessor for UUID(0);
    v17 = CROrderedSet.map<A>(_:)(sub_100A11660, a1, v8, v16);
    v24[5] = v2;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_100A11624((uint64_t)v7);
    v24[0] = v17;
    v18 = sub_1004B804C(&qword_1013F0310);
    v19 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v20 = sub_1004CBA30(&qword_1013F0318, &qword_1013F0310, (uint64_t)&protocol conformance descriptor for [A]);
    CROrderedSet.init<A>(_:)(v24, v16, v18, &protocol witness table for UUID, v19, v20);
    v21 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *))(*(_QWORD *)v3 + 696))(v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v22, v15, v8);
    v21(v24, 0);
  }
  swift_beginAccess(v3 + *(_QWORD *)(*(_QWORD *)v3 + 632), v24, 33, 0);
  sub_100D3D410(a1);
  return swift_endAccess(v24);
}

uint64_t sub_100A10FDC()
{
  uint64_t v0;

  return sub_100A11624(v0 + qword_1014805D0);
}

uint64_t sub_100A10FEC()
{
  uint64_t v0;

  sub_1004CB800(v0 + *(_QWORD *)(*(_QWORD *)v0 + 632), (uint64_t *)&unk_1013F02C0);
  sub_100A11624(v0 + qword_1014805D0);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLContainerItemData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101401D30, (uint64_t)&nominal type descriptor for CRLContainerItemData);
}

uint64_t sub_100A11048(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for CRLContainerItemCRDTData(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 672);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLContainerItemCRDTData(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101402078, (uint64_t)&nominal type descriptor for CRLContainerItemCRDTData);
}

uint64_t *sub_100A110C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
    swift_bridgeObjectRetain(v9);
  }
  return a1;
}

double sub_100A11158(uint64_t a1)
{
  uint64_t v2;
  double result;

  v2 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100A111A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t sub_100A11204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A11274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100A112D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A1133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A11348);
}

uint64_t sub_100A11348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100A113C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A113D4);
}

uint64_t sub_100A113D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1004B804C((uint64_t *)&unk_1013F02F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_100A11450(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1005C6C00(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_100A114C4()
{
  return sub_1004B7878(&qword_1014020B0, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F221FC);
}

uint64_t sub_100A114F0()
{
  return sub_1004B7878(&qword_1014020B8, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F22244);
}

uint64_t sub_100A1151C()
{
  return sub_1004B7878(&qword_1013F0348, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F2227C);
}

uint64_t sub_100A11548()
{
  return sub_1004CBA30(&qword_1014020C0, &qword_1014020C8, (uint64_t)&protocol conformance descriptor for CRStructMergeableDelta_1<A>);
}

uint64_t sub_100A11574()
{
  return sub_1004B7878(&qword_101406B30, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F222DC);
}

uint64_t sub_100A115A0()
{
  return sub_1004B7878(&qword_1014020D0, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F2235C);
}

uint64_t sub_100A115CC()
{
  return sub_1004CBA30(&qword_1013E58B0, (uint64_t *)&unk_1013F02F0, (uint64_t)&protocol conformance descriptor for CROrderedSet<A>);
}

uint64_t sub_100A115F8()
{
  return sub_1004B7878(&qword_1014020D8, type metadata accessor for CRLContainerItemCRDTData, (uint64_t)&unk_100F223BC);
}

uint64_t sub_100A11624(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A11660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008FD76C(a1, a2);
}

uint64_t sub_100A11684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A116C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A1170C()
{
  uint64_t v0;

  sub_100A11864(v0 + OBJC_IVAR____TtC8Freeform12CRLSELibrary_libraryNode);
  sub_100A11864(v0 + OBJC_IVAR____TtC8Freeform12CRLSELibrary_allBoards);
  sub_100A11864(v0 + OBJC_IVAR____TtC8Freeform12CRLSELibrary_recents);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A1175C()
{
  return type metadata accessor for CRLSELibrary(0);
}

uint64_t type metadata accessor for CRLSELibrary(uint64_t a1)
{
  uint64_t result;

  result = qword_101402118;
  if (!qword_101402118)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLSELibrary);
  return result;
}

void sub_100A117A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100A11810(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = v4[0];
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_100A11810(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_101402128)
  {
    v2 = type metadata accessor for CRLSELibraryViewModeItemNode(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_101402128);
  }
}

uint64_t sub_100A11864(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013F9618);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingShapeType()
{
  return &type metadata for CRLFreehandDrawingShapeType;
}

uint64_t sub_100A118B4(uint64_t a1)
{
  uint64_t v1;
  id v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v7;

  v1 = a1;
  switch(a1)
  {
    case 0:
      return v1;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v3 = String._bridgeToObjectiveC()();
      v4 = String._bridgeToObjectiveC()();
      v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

      v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      break;
    default:
      v7 = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLFreehandDrawingShapeType, &v7, &type metadata for CRLFreehandDrawingShapeType, &type metadata for Int);
      __break(1u);
      JUMPOUT(0x100A11D78);
  }
  return v1;
}

uint64_t sub_100A11DAC(uint64_t a1, uint64_t a2)
{
  objc_class *v3;
  unint64_t v4;
  unint64_t v5;
  const char *v6;
  unsigned int v7;
  unint64_t v8;
  NSBundle v9;
  uint64_t v10;
  unint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;

  switch(a2)
  {
    case 0:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v4 = 0xD000000000000013;
      v5 = 0xD000000000000045;
      v17 = 0x8000000100FEC210;
      v6 = "%lu freehand shapes";
      goto LABEL_17;
    case 1:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v17 = 0x8000000100FEC1C0;
      v4 = 0x6C61766F20756C25;
      v8 = 0xE900000000000073;
      v9.super.isa = v3;
      v10 = 0;
      v11 = 0xE000000000000000;
      v5 = 0xD00000000000002ALL;
      goto LABEL_19;
    case 2:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD00000000000002FLL;
      v17 = 0x8000000100FEC190;
      v4 = 0x7463657220756C25;
      v8 = 0xEE0073656C676E61;
      break;
    case 3:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD00000000000002ELL;
      v17 = 0x8000000100FEC160;
      v4 = 0x6169727420756C25;
      v7 = 1701603182;
      goto LABEL_10;
    case 4:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD00000000000002ELL;
      v17 = 0x8000000100FEC130;
      v4 = 0x746E657020756C25;
      v7 = 1852794721;
LABEL_10:
      v8 = v7 | 0xED00007300000000;
      break;
    case 5:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD000000000000031;
      v8 = 0xEA00000000007377;
      v17 = 0x8000000100FEC0F0;
      v4 = 0x6F72726120756C25;
      break;
    case 6:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD000000000000037;
      v17 = 0x8000000100FEC0B0;
      v4 = 0x656E696C20756C25;
      goto LABEL_15;
    case 7:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD00000000000004BLL;
      v17 = 0x8000000100FEC060;
      v8 = 0x8000000100FEC030;
      v4 = 0xD00000000000002ALL;
      break;
    case 8:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD000000000000030;
      v17 = 0x8000000100FEBFF0;
      v4 = 0x7261747320756C25;
LABEL_15:
      v8 = 0xE900000000000073;
      break;
    case 9:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD000000000000031;
      v8 = 0xEA00000000007374;
      v17 = 0x8000000100FEBFB0;
      v4 = 0x7261656820756C25;
      break;
    case 10:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v4 = 0xD000000000000010;
      v5 = 0xD000000000000037;
      v17 = 0x8000000100FEBF70;
      v6 = "%lu chat bubbles";
      goto LABEL_17;
    case 11:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v4 = 0xD000000000000012;
      v5 = 0xD000000000000039;
      v17 = 0x8000000100FEBF10;
      v6 = "%lu outline arrows";
LABEL_17:
      v8 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 12:
      v3 = (objc_class *)objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD000000000000050;
      v17 = 0x8000000100FEBE90;
      v4 = 0x756F6C6320756C25;
      v8 = 0xEA00000000007364;
      break;
    default:
      v18 = a2;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLFreehandDrawingShapeType, &v18, &type metadata for CRLFreehandDrawingShapeType, &type metadata for Int);
      __break(1u);
      JUMPOUT(0x100A12398);
  }
  v9.super.isa = v3;
  v10 = 0;
  v11 = 0xE000000000000000;
LABEL_19:
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v9, *(Swift::String *)&v10, *(Swift::String *)&v5);

  v13 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  v14 = swift_allocObject(v13, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
  *(_QWORD *)(v14 + 56) = &type metadata for UInt;
  *(_QWORD *)(v14 + 64) = &protocol witness table for UInt;
  *(_QWORD *)(v14 + 32) = a1;
  v15 = static String.localizedStringWithFormat(_:_:)(v12._countAndFlagsBits, v12._object, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_100A123CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_100A126B8(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_100A12400()
{
  unint64_t result;

  result = qword_101402238;
  if (!qword_101402238)
  {
    result = swift_getWitnessTable(&unk_100F22524, &type metadata for CRLFreehandDrawingShapeType);
    atomic_store(result, (unint64_t *)&qword_101402238);
  }
  return result;
}

unint64_t sub_100A12444@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100A128FC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A1246C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100A1290C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_100A124C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100A1290C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_100A12514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;

  v6 = sub_100A12950();
  v7 = sub_100A128B8();
  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100A12570(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100A12950();
  v5 = sub_100A1290C();
  return CRValue<>.init(from:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100A125D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = sub_100A12950();
  v5 = sub_100A1290C();
  return CRValue<>.encode(to:)(a1, a2, v4, v5, &protocol witness table for Int);
}

uint64_t sub_100A12630(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = sub_100A12950();
  v3 = sub_100A1290C();
  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_100A1267C(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  if (result >= 0xD)
  {
    v3[1] = v1;
    v3[2] = v2;
    v3[0] = result;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLFreehandDrawingShapeType, v3, &type metadata for CRLFreehandDrawingShapeType, &type metadata for Int);
    __break(1u);
  }
  return result;
}

unint64_t sub_100A126B8(unint64_t result)
{
  if (result > 0xC)
    return 0;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingShapeTypeData(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingShapeTypeData(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_100A127A4 + 4 * byte_100F22485[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100A127D8 + 4 * asc_100F22480[v4]))();
}

uint64_t sub_100A127D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A127E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A127E8);
  return result;
}

uint64_t sub_100A127F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A127FCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100A12800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A12808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingShapeTypeData()
{
  return &type metadata for CRLFreehandDrawingShapeTypeData;
}

unint64_t sub_100A12828()
{
  unint64_t result;

  result = qword_101402240;
  if (!qword_101402240)
  {
    result = swift_getWitnessTable(&unk_100F22570, &type metadata for CRLFreehandDrawingShapeTypeData);
    atomic_store(result, (unint64_t *)&qword_101402240);
  }
  return result;
}

unint64_t sub_100A12870()
{
  unint64_t result;

  result = qword_101402248;
  if (!qword_101402248)
  {
    result = swift_getWitnessTable(&unk_100F225B8, &type metadata for CRLFreehandDrawingShapeTypeData);
    atomic_store(result, (unint64_t *)&qword_101402248);
  }
  return result;
}

unint64_t sub_100A128B8()
{
  unint64_t result;

  result = qword_101402250;
  if (!qword_101402250)
  {
    result = swift_getWitnessTable(&unk_100F226E0, &type metadata for CRLFreehandDrawingShapeTypeData);
    atomic_store(result, (unint64_t *)&qword_101402250);
  }
  return result;
}

unint64_t sub_100A128FC(unint64_t result)
{
  if (result >= 0xD)
    return 13;
  return result;
}

unint64_t sub_100A1290C()
{
  unint64_t result;

  result = qword_101402258;
  if (!qword_101402258)
  {
    result = swift_getWitnessTable(&unk_100F22708, &type metadata for CRLFreehandDrawingShapeTypeData);
    atomic_store(result, (unint64_t *)&qword_101402258);
  }
  return result;
}

unint64_t sub_100A12950()
{
  unint64_t result;

  result = qword_101402260;
  if (!qword_101402260)
  {
    result = swift_getWitnessTable(&unk_100F22668, &type metadata for CRLFreehandDrawingShapeTypeData);
    atomic_store(result, (unint64_t *)&qword_101402260);
  }
  return result;
}

void sub_100A12994(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  NSString v19;
  NSString v20;
  void *v21;
  id v22;
  NSString v23;
  NSString v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  NSString v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  NSString v35;
  NSString v36;
  id v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  NSString v42;
  void *v43;
  double v44;
  id v45;
  const void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  NSString v50;
  NSString v51;
  id v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  void (*v80)(uint64_t, char *, uint64_t);
  id v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  void **aBlock;
  uint64_t v96;
  void (*v97)(uint64_t, void *);
  void *v98;
  uint64_t (*v99)(uint64_t);
  uint64_t v100;

  v86 = a4;
  v87 = a5;
  v7 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v7);
  v85 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C(&qword_101402268);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100BCD0F8();
  v14 = v13;
  v15 = sub_100BCD310();
  v90 = v11;
  v91 = v15;
  v93 = v16;
  v89 = a1;
  if (a3
    && (aBlock = a3,
        swift_errorRetain(a3),
        v17 = sub_1004B804C(&qword_1013E0210),
        (swift_dynamicCast(&v94, &aBlock, v17, &type metadata for CRLBoardLibraryBoardOpenError, 6) & 1) != 0)
    && (v94 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v92 = sub_100BCD528();
    v14 = v72;
    v91 = sub_100BCD750();
    v93 = v73;
    v18 = 1;
  }
  else
  {
    v18 = 0;
  }
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v93);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v81 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v19, v20, 1);

  v21 = (void *)objc_opt_self(NSBundle);
  v22 = objc_msgSend(v21, "mainBundle");
  v83 = v9;
  v84 = v14;
  v82 = v12;
  if (v18)
  {
    v23 = String._bridgeToObjectiveC()();
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend(v22, "localizedStringForKey:value:table:", v23, v24, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v78(v12, v89, v9);
    v26 = v12;
    v27 = *(unsigned __int8 *)(v10 + 80);
    v79 = ~v27;
    v77 = ((v27 + 16) & ~v27) + v90;
    v80 = (void (*)(uint64_t, char *, uint64_t))((v27 + 16) & ~v27);
    v88 = v27 | 7;
    v28 = swift_allocObject(&unk_101290FD8, v77, v27 | 7);
    v29 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v29(v28 + ((v27 + 16) & ~v27), v26, v9);
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v99 = sub_100A136A8;
    v100 = v28;
    aBlock = _NSConcreteStackBlock;
    v96 = *(_QWORD *)"";
    v97 = sub_1004C6194;
    v98 = &unk_101290FF0;
    v31 = _Block_copy(&aBlock);
    swift_release(v100);
    v75 = (id)objc_opt_self(UIAlertAction);
    v32 = objc_msgSend(v75, "actionWithTitle:style:handler:", v30, 0, v31);
    v76 = v32;
    _Block_release(v31);

    v33 = v81;
    objc_msgSend(v81, "addAction:", v32);
    v34 = objc_msgSend(v21, "mainBundle");
    v35 = String._bridgeToObjectiveC()();
    v36 = String._bridgeToObjectiveC()();
    v37 = objc_msgSend(v34, "localizedStringForKey:value:table:", v35, v36, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v38 = v89;
    v39 = v78;
    v78(v26, v89, v9);
    v40 = swift_allocObject(&unk_101291028, v77, v88);
    v41 = (char *)v80 + v40;
    v80 = v29;
    v29((uint64_t)v41, v26, v9);
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v99 = sub_100A131C4;
    v100 = v40;
    aBlock = _NSConcreteStackBlock;
    v96 = *(_QWORD *)"";
    v97 = sub_1004C6194;
    v98 = &unk_101291040;
    v43 = _Block_copy(&aBlock);
    *(_QWORD *)&v44 = swift_release(v100).n128_u64[0];
    v45 = objc_msgSend(v75, "actionWithTitle:style:handler:", v42, 1, v43, v44);
    v46 = v43;
    v47 = v79;
    v48 = v33;
    v49 = v38;
    _Block_release(v46);

    objc_msgSend(v33, "addAction:", v45);
  }
  else
  {
    v50 = String._bridgeToObjectiveC()();
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v22, "localizedStringForKey:value:table:", v50, v51, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v53 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v49 = v89;
    v53(v12, v89, v9);
    v54 = v12;
    v27 = *(unsigned __int8 *)(v10 + 80);
    v79 = ~v27;
    v55 = (v27 + 16) & ~v27;
    v88 = v27 | 7;
    v56 = swift_allocObject(&unk_101290F60, v55 + v90, v27 | 7);
    v80 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v80(v56 + v55, v54, v9);
    v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v99 = sub_100A131C4;
    v100 = v56;
    aBlock = _NSConcreteStackBlock;
    v96 = *(_QWORD *)"";
    v97 = sub_1004C6194;
    v98 = &unk_101290F78;
    v58 = _Block_copy(&aBlock);
    swift_release(v100);
    v45 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v57, 0, v58);
    v59 = v58;
    v47 = v79;
    _Block_release(v59);

    v39 = v53;
    v48 = v81;
    objc_msgSend(v81, "addAction:", v45);
  }

  v60 = type metadata accessor for TaskPriority(0);
  v61 = (uint64_t)v85;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v85, 1, 1, v60);
  v63 = v82;
  v62 = v83;
  v39(v82, v49, v83);
  type metadata accessor for MainActor(0);
  v64 = v87;
  swift_retain(v87);
  v65 = v48;
  v66 = static MainActor.shared.getter(v65);
  v67 = (v27 + 88) & v47;
  v68 = (_QWORD *)swift_allocObject(&unk_101290FB0, v67 + v90, v88);
  v68[2] = v66;
  v68[3] = &protocol witness table for MainActor;
  v68[4] = v86;
  v68[5] = v64;
  v69 = v92;
  v68[6] = v65;
  v68[7] = v69;
  v70 = v91;
  v68[8] = v84;
  v68[9] = v70;
  v68[10] = v93;
  v80((uint64_t)v68 + v67, v63, v62);
  v71 = sub_100618920(v61, (uint64_t)&unk_101402278, (uint64_t)v68);
  swift_release(v71);

}

uint64_t sub_100A131C4(uint64_t a1)
{
  return sub_100A13718(a1, 0);
}

double sub_100A131CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100A131DC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100A131E4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)(v8 + 264) = v16;
  *(_OWORD *)(v8 + 248) = v15;
  *(_QWORD *)(v8 + 232) = a7;
  *(_QWORD *)(v8 + 240) = a8;
  *(_QWORD *)(v8 + 224) = a6;
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 272) = v11;
  *(_QWORD *)(v8 + 280) = static MainActor.shared.getter(v11);
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v8 + 288) = v12;
  *v12 = v8;
  v12[1] = sub_100A13284;
  return v14(a6);
}

uint64_t sub_100A13284()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 272), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100A13348;
  else
    v6 = sub_100A13308;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100A13308()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 280));
  sub_100CE39D8(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A13348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  id v20;

  swift_release(*(_QWORD *)(v0 + 280));
  if (qword_1013DD6C8 != -1)
    swift_once(&qword_1013DD6C8, sub_100A00D28);
  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v19 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 232);
  v20 = *(id *)(v0 + 224);
  swift_beginAccess(&static OS_os_log.crlError, v0 + 168, 0, 0);
  v5 = (void *)static OS_os_log.crlError;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 16);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v8 = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v19;
  *(_QWORD *)(inited + 80) = v2;
  swift_getErrorValue(v1, v0 + 216, v0 + 192);
  v9 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 208);
  v11 = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  v12 = Error.localizedDescription.getter(v9, v10);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v8;
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 120) = v13;
  v14 = static os_log_type_t.error.getter(v12);
  sub_100A06EBC((uint64_t)v11, &_mh_execute_header, v14, "Failed to present alert for board error %@ - %@: %@", 51, 2, inited);
  swift_setDeallocating(inited);
  v15 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, 3, v15);

  objc_msgSend(v20, "dismissViewControllerAnimated:completion:", 0, 0);
  *(_BYTE *)(v0 + 304) = 0;
  v16 = sub_1004B804C(&qword_101402268);
  CheckedContinuation.resume(returning:)(v0 + 304, v16);
  swift_willThrow(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A13540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_1004B804C(&qword_101402268);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 88) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A135D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  sub_1004B804C(&qword_101402268);
  v3 = v1[3];
  v11 = v1[2];
  v4 = (int *)v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = (_QWORD *)swift_task_alloc(dword_101402274);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1004CF80C;
  return sub_100A131E4(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_100A136A8(uint64_t a1)
{
  return sub_100A13718(a1, 1);
}

uint64_t sub_100A136B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1004B804C(&qword_101402268);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A13718(uint64_t a1, char a2)
{
  uint64_t v3;
  char v5;

  sub_1004B804C(&qword_101402268);
  v5 = a2;
  v3 = sub_1004B804C(&qword_101402268);
  return CheckedContinuation.resume(returning:)(&v5, v3);
}

uint64_t sub_100A13790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  unint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v2 = v1;
  v4 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, v12, 0, 0);
  sub_100A139C8(v7, (uint64_t)v6);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, v11, 33, 0);
  v8 = sub_100A13A0C();
  CRStruct_5.merge(_:)(v6, v4, v8);
  sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLUserBoardMetadataCRDTData);
  result = swift_endAccess(v11);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) > v10)
    v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) = v10;
  return result;
}

uint64_t sub_100A138A0()
{
  uint64_t v0;

  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  sub_1004B84A4(v0 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, type metadata accessor for CRLUserBoardMetadataCRDTData);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A138F0()
{
  return type metadata accessor for CRLUserBoardMetadataData(0);
}

uint64_t type metadata accessor for CRLUserBoardMetadataData(uint64_t a1)
{
  uint64_t result;

  result = qword_1014022A8;
  if (!qword_1014022A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUserBoardMetadataData);
  return result;
}

uint64_t sub_100A13934(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for CRLUserBoardMetadataCRDTData(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.Int64 + 64;
      result = swift_updateClassMetadata2(a1, 256, 3, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_100A139C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100A13A0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101402388;
  if (!qword_101402388)
  {
    v1 = type metadata accessor for CRLUserBoardMetadataCRDTData(255);
    result = swift_getWitnessTable(&unk_100F39A58, v1);
    atomic_store(result, (unint64_t *)&qword_101402388);
  }
  return result;
}

uint64_t sub_100A13A54(char a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v26[3];
  ValueMetadata *v27;
  _UNKNOWN **v28;

  v6 = sub_1004B804C(&qword_1013E5380);
  __chkstk_darwin(v6);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for AttributedString(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v26[-1] - v14;
  v27 = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  v28 = &off_10129B470;
  v26[0] = a3;
  sub_100A14160(a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v16 = a3;
    sub_1005B858C((uint64_t)v8);
    v17 = (char *)objc_msgSend(objc_allocWithZone((Class)NSAttributedString), "init");
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_100A141A8();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v18 = a3;
    v17 = (char *)NSAttributedString.init(_:)(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  if (a1 == 7)
  {
    v19 = objc_retain(*(id *)(*(_QWORD *)(*sub_1004BB5A4(v26, (uint64_t)v27)
                                        + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory));
    v20 = sub_100CF2354(v17);
  }
  else if (a1 == 6)
  {
    v19 = objc_retain(*(id *)(*(_QWORD *)(*sub_1004BB5A4(v26, (uint64_t)v27)
                                        + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory));
    v20 = (uint64_t)sub_100CF24F0(v17);
  }
  else
  {
    v21 = sub_1004BB5A4(v26, (uint64_t)v27);
    v22 = qword_100F22798[a1];
    v19 = objc_retain(*(id *)(*(_QWORD *)(*v21
                                        + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory));
    v20 = (uint64_t)sub_100CF16DC(v22, 0, 0, 0, 0, 0, 1, 0, 1u, (_QWORD *)1, (void *)1, (void *)1, (void *)1, a2);
  }
  v23 = v20;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v26);
  return v23;
}

uint64_t sub_100A13D24(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a3;
  *(_QWORD *)(v4 + 72) = a4;
  *(_QWORD *)(v4 + 56) = a2;
  *(_BYTE *)(v4 + 152) = a1;
  return swift_task_switch(sub_100A13D44, 0, 0);
}

uint64_t sub_100A13D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 56);
  sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v2 = v1 + *(int *)(type metadata accessor for CRLBoardEntity(0) + 40);
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 80) = v3;
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter(v3);
  v4 = (_QWORD *)swift_task_alloc(dword_10140E224);
  *(_QWORD *)(v0 + 96) = v4;
  *v4 = v0;
  v4[1] = sub_100A13DD8;
  return sub_100CA2984(v2);
}

uint64_t sub_100A13DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 80);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_100A140E0;
  }
  else
  {
    *(_QWORD *)(v4 + 112) = a1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_100A13E7C;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_100A13E7C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[14];
  swift_release(v0[11]);
  v0[5] = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  v0[6] = &off_10129B470;
  v0[2] = v1;
  return swift_task_switch(sub_100A13ED4, 0, 0);
}

uint64_t sub_100A13ED4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void **v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 152);
  v3 = (void **)sub_1004BB5A4((_QWORD *)(v0 + 16), (uint64_t)&type metadata for CRLBoardLibraryHeadlessControllerDependency);
  v4 = (void *)sub_100A13A54(v2, v1, *v3);
  *(_QWORD *)(v0 + 120) = v4;
  sub_1004BB5A4((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v5 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v6 + 32) = v4;
  v11 = v6;
  specialized Array._endMutation()(v6);
  *(_QWORD *)(v0 + 128) = v11;
  v7 = dword_101409BB4;
  v8 = v4;
  v9 = (_QWORD *)swift_task_alloc(v7);
  *(_QWORD *)(v0 + 136) = v9;
  *v9 = v0;
  v9[1] = sub_100A13FB8;
  return sub_100C00668(v11);
}

uint64_t sub_100A13FB8()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_100A14014, 0, 0);
}

uint64_t sub_100A14014()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *sub_1004BB5A4(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  v2 = (_QWORD *)swift_task_alloc(dword_10140AD0C);
  *(_QWORD *)(v0 + 144) = v2;
  *v2 = v0;
  v2[1] = sub_100A14074;
  return sub_100C151E4(v0 + 16, v1);
}

uint64_t sub_100A14074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 144));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_100A14128;
  }
  else
  {
    v2 = sub_100A141F4;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100A140E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 88));
  return swift_task_switch(sub_100A1411C, 0, 0);
}

uint64_t sub_100A1411C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A14128()
{
  uint64_t v0;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_100A14160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_1013E5380);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100A141A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013F95A0;
  if (!qword_1013F95A0)
  {
    v1 = objc_opt_self(NSAttributedString);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1013F95A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemInsertionPerformer()
{
  return &type metadata for CRLBoardItemInsertionPerformer;
}

BOOL sub_100A141F8(unsigned __int8 a1)
{
  _QWORD *v1;
  int v2;
  int v3;

  v2 = a1;
  v3 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v1) + 0x440))();
  return v3 != 6 && v3 == v2;
}

uint64_t sub_100A14240()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12[29];
  _OWORD v13[14];
  uint64_t v14;
  _OWORD v15[14];
  uint64_t v16;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
  v4 = v3;
  if (v3)
    goto LABEL_6;
  v5 = *(_QWORD **)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v6 = *v5;
  result = swift_conformsToProtocol2(*v5, &protocol descriptor for CRLStyleableData);
  if (result)
  {
    *(_QWORD *)&v15[0] = v5;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(result + 8))(v12, v6, result);
    sub_100A14834((uint64_t)v12, (uint64_t)v13);
    if (sub_1004F276C((uint64_t)v13) == 1)
    {
      v4 = 0;
    }
    else
    {
      v15[12] = v13[12];
      v15[13] = v13[13];
      v16 = v14;
      v15[8] = v13[8];
      v15[9] = v13[9];
      v15[10] = v13[10];
      v15[11] = v13[11];
      v15[4] = v13[4];
      v15[5] = v13[5];
      v15[6] = v13[6];
      v15[7] = v13[7];
      v15[0] = v13[0];
      v15[1] = v13[1];
      v15[2] = v13[2];
      v15[3] = v13[3];
      v8 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x400))();
      v4 = sub_1008BEA4C((uint64_t)v15, v8 & 1);
      sub_1004F28E8(v12);
      v9 = *(void **)((char *)v1 + v2);
      *(_QWORD *)((char *)v1 + v2) = v4;
      v10 = v4;

    }
LABEL_6:
    v11 = v3;
    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

void sub_100A14388(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v14;
  void *v15;
  CKRecordID v16;
  Swift::String v17;
  _QWORD *v18;
  _BYTE v19[232];
  _BYTE v20[232];

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
  {
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    if (Strong)
    {
      v5 = Strong;
      v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))();

      if ((v6 & 1) != 0)
        goto LABEL_10;
    }
  }
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  v8 = swift_conformsToProtocol2(*v7, &protocol descriptor for CRLStyleableData);
  if (!v8)
  {
    __break(1u);
LABEL_10:
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v9 = v8;
  if (a1)
  {
    v10 = a1;
    swift_retain(v7);
    sub_1008BF750(v10, (uint64_t)v19);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v19, v11);
    sub_100A14834((uint64_t)v19, (uint64_t)v20);
    v18 = v7;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 16))(v20, *v7, v9);

  }
  else
  {
    sub_1004C39E8((uint64_t)v19);
    sub_100A14834((uint64_t)v19, (uint64_t)v20);
    v12 = *v7;
    v18 = v7;
    v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v9 + 16);
    v14 = swift_retain(v7);
    v13(v20, v12, v9, v14);
  }
  v15 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke) = a1;
  swift_release(v18);

}

uint64_t sub_100A145D0()
{
  return 6;
}

void sub_100A146B0()
{
  uint64_t v0;

}

id sub_100A146C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLStyledItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100A14704()
{
  return type metadata accessor for CRLStyledItem(0);
}

uint64_t type metadata accessor for CRLStyledItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1014023C8;
  if (!qword_1014023C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLStyledItem);
  return result;
}

uint64_t sub_100A14748(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 1000);
}

uint64_t sub_100A14788()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x440))();
}

uint64_t sub_100A147C0()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x450))();
}

uint64_t sub_100A147F8()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x458))() & 1;
}

uint64_t sub_100A14834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013F1530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100A1487C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  const mach_header_64 *v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;

  v2 = v1;
  *a1 = &_swiftEmptySetSingleton;
  sub_1004B804C((uint64_t *)&unk_1013EFC60);
  v3 = sub_100559A64();
  CRAttributedString.Attributes.init()(&type metadata for CRLTextAttributeScope, v3);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8) & 1) == 0)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline);
    swift_getKeyPath(&unk_100F22950);
    sub_100AD8690(&v55, 0x6E696C7265646E75, 0xE900000000000065);
    swift_bridgeObjectRelease(v56);
    __chkstk_darwin(v5);
    sub_100739464();
    KeyPath = swift_getKeyPath(&unk_100F22878);
    v55 = v4;
    LOBYTE(v56) = 0;
    v7 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v8 = sub_10073DCA0();
    CRAttributedString.Attributes.subscript.setter(&v55, KeyPath, v7, v8);
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8) & 1) == 0)
  {
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough);
    swift_getKeyPath(&unk_100F22930);
    sub_100AD8690(&v55, 0x6874656B69727473, 0xED00006867756F72);
    swift_bridgeObjectRelease(v56);
    __chkstk_darwin(v10);
    sub_100739420();
    v11 = swift_getKeyPath(&unk_100F22878);
    v55 = v9;
    LOBYTE(v56) = 0;
    v12 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v13 = sub_10073DC5C();
    CRAttributedString.Attributes.subscript.setter(&v55, v11, v12, v13);
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4) & 1) == 0)
  {
    v14 = *(_DWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize);
    swift_getKeyPath(&unk_100F22910);
    sub_100AD8690(&v55, 0x657A6953746E6F66, 0xE800000000000000);
    swift_bridgeObjectRelease(v56);
    __chkstk_darwin(v15);
    sub_100739530();
    v16 = swift_getKeyPath(&unk_100F22878);
    LODWORD(v55) = v14;
    BYTE4(v55) = 0;
    v17 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v18 = sub_1007395C4();
    CRAttributedString.Attributes.subscript.setter(&v55, v16, v17, v18);
  }
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8);
  if (v19)
  {
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
    v21 = swift_getKeyPath(&unk_100F228F0);
    swift_bridgeObjectRetain(v19);
    sub_100AD8690(&v55, 0x656D614E746E6F66, 0xE800000000000000);
    swift_bridgeObjectRelease(v56);
    __chkstk_darwin(v22);
    sub_100739574();
    v23 = swift_getKeyPath(&unk_100F22878);
    swift_bridgeObjectRetain(v19);
    swift_retain(v21);
    v55 = sub_10098B7E4(v20, v19);
    v56 = v24;
    LOBYTE(v57) = 0;
    v25 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v26 = sub_1007E6618();
    CRAttributedString.Attributes.subscript.setter(&v55, v23, v25, v26);
    swift_bridgeObjectRelease(v19);
    swift_release(v21);
  }
  v27 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
  if (v27)
  {
    v28 = swift_getKeyPath(&unk_100F228D0);
    v29 = v27;
    sub_100AD8690(&v55, 0x6574636172616863, 0xED00006C6C694672);
    swift_bridgeObjectRelease(v56);
    __chkstk_darwin(v30);
    sub_1007393D0();
    v31 = swift_getKeyPath(&unk_100F22878);
    v32 = v29;
    swift_retain(v28);
    sub_100D3743C(v32, (uint64_t)&v55);
    v33 = &_mh_execute_header;
    if (!v58)
      v33 = 0;
    v46 = v55;
    v47 = v56;
    v48 = (unint64_t)v33 | v57;
    v49 = v59;
    v50 = v60;
    v51 = v61;
    v52 = v62;
    v53 = v63;
    v54 = v64;
    v34 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v35 = sub_1007E678C();
    CRAttributedString.Attributes.subscript.setter(&v46, v31, v34, v35);

    swift_release(v28);
  }
  v36 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
  if (v36 != 2)
  {
    swift_getKeyPath(&unk_100F228B0);
    sub_100AD8690(&v46, 1684828002, 0xE400000000000000);
    swift_bridgeObjectRelease(v47);
    __chkstk_darwin(v37);
    sub_1007394EC();
    v38 = swift_getKeyPath(&unk_100F22878);
    LOBYTE(v46) = v36;
    v39 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v40 = sub_10073DD28();
    CRAttributedString.Attributes.subscript.setter(&v46, v38, v39, v40);
  }
  v41 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic);
  if (v41 != 2)
  {
    swift_getKeyPath(&unk_100F22858);
    sub_100AD8690(&v46, 0x63696C617469, 0xE600000000000000);
    swift_bridgeObjectRelease(v47);
    __chkstk_darwin(v42);
    sub_1007394A8();
    v43 = swift_getKeyPath(&unk_100F22878);
    LOBYTE(v46) = v41;
    v44 = sub_1004B804C((uint64_t *)&unk_1013EFBE0);
    v45 = sub_10073DCE4();
    CRAttributedString.Attributes.subscript.setter(&v46, v43, v44, v45);
  }
}

id sub_100A14F90(uint64_t a1)
{
  uint64_t v1;
  NSString v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  int *v13;
  int v14;
  id v15;
  double v16;
  uint64_t v17;

  v2 = 0;
  switch(a1)
  {
    case 0:
      v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift;
      goto LABEL_43;
    case 1:
      v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold;
      goto LABEL_18;
    case 2:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization;
      goto LABEL_34;
    case 3:
      v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics;
      goto LABEL_18;
    case 4:
      v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
      if (!v2)
        return v2;
      goto LABEL_41;
    case 5:
      v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer;
      goto LABEL_18;
    case 6:
      v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke);
      if (!v2)
        return v2;
      goto LABEL_41;
    case 7:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName;
      goto LABEL_25;
    case 8:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks;
      goto LABEL_25;
    case 9:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName;
      goto LABEL_25;
    case 10:
      return v2;
    case 11:
      v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize;
      goto LABEL_43;
    case 12:
      v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize;
      goto LABEL_18;
    case 13:
      v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic;
LABEL_18:
      v7 = *(unsigned __int8 *)(v1 + v4);
      if (v7 == 2)
        return 0;
      return objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v7 & 1);
    case 14:
      v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning;
      goto LABEL_43;
    case 15:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language;
      goto LABEL_25;
    case 16:
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4) & 1) != 0)
        return 0;
      return objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInt:", *(unsigned int *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures));
    case 17:
      v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont;
LABEL_25:
      v9 = v1 + v6;
      if (!*(_QWORD *)(v9 + 8))
        return 0;
      swift_bridgeObjectRetain(*(_QWORD *)(v9 + 8));
      v2 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      return v2;
    case 18:
      v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow);
      if (!v2)
        return v2;
      goto LABEL_41;
    case 19:
      v10 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
      goto LABEL_46;
    case 20:
      v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruColor);
      if (!v2)
        return v2;
      goto LABEL_41;
    case 21:
      v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruWidth;
      goto LABEL_43;
    case 22:
      v5 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript;
LABEL_34:
      v11 = v1 + v5;
      if ((*(_BYTE *)(v11 + 8) & 1) != 0)
        return 0;
      return objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedInteger:", *(_QWORD *)v11);
    case 23:
      v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground);
      if (!v2)
        return v2;
      goto LABEL_41;
    case 24:
      v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking;
      goto LABEL_43;
    case 25:
      v10 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
      goto LABEL_46;
    case 26:
      v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor);
      if (v2)
LABEL_41:
        v12 = v2;
      return v2;
    case 27:
      v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth;
LABEL_43:
      v13 = (int *)(v1 + v3);
      if ((v13[1] & 1) != 0)
        return 0;
      v14 = *v13;
      v15 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v16) = v14;
      return objc_msgSend(v15, "initWithFloat:", v16);
    case 28:
      v10 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection;
LABEL_46:
      v17 = v1 + v10;
      if ((*(_BYTE *)(v17 + 8) & 1) != 0)
        return 0;
      return objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", *(_QWORD *)v17);
    default:
      sub_100757E04(&_mh_execute_header, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47, "Requesting value for invalid property", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boxedValue(for:)", 16, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2u, 47, (uint64_t)"Requesting value for invalid property", 37, 2u);
      v2 = 0;
      swift_unknownObjectRetain(0);
      return v2;
  }
}

id sub_100A15428()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  objc_super v19;

  v1 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift];
  *(_DWORD *)v1 = 0;
  v1[4] = 1;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold] = 2;
  v2 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke] = 0;
  v3 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures] = 0;
  v6 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize];
  *(_DWORD *)v6 = 0;
  v6[4] = 1;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize] = 2;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic] = 2;
  v7 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning];
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language];
  *v8 = 0;
  v8[1] = 0;
  v9 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures];
  *(_DWORD *)v9 = 0;
  v9[4] = 1;
  v10 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont];
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow] = 0;
  v11 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruColor] = 0;
  v12 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruWidth];
  *(_DWORD *)v12 = 0;
  v12[4] = 1;
  v13 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground] = 0;
  v14 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking];
  *(_DWORD *)v14 = 0;
  v14[4] = 1;
  v15 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor] = 0;
  v16 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth];
  *(_DWORD *)v16 = 0;
  v16[4] = 1;
  v17 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for CRLWPCharacterStyle();
  return objc_msgSendSuper2(&v19, "init");
}

void sub_100A15650()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont + 8));

}

id sub_100A15730()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPCharacterStyle();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPCharacterStyle()
{
  return objc_opt_self(_TtC8Freeform19CRLWPCharacterStyle);
}

uint64_t sub_100A1586C(uint64_t a1, uint64_t a2)
{
  char v4;
  int v5;
  int v6;
  uint64_t result;
  _BOOL4 v8;
  char v9;
  int v10;
  int v11;
  _BOOL4 v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  int v18;
  int v19;
  _BOOL4 v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  char v45;
  int v46;
  int v47;
  _BOOL4 v48;
  int v49;
  int v50;
  _BOOL4 v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  void *v64;
  void *v65;
  id v66;
  id v67;
  char v68;
  char v69;
  char v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  char v75;
  char v76;
  char v77;
  void *v78;
  void *v79;
  id v80;
  id v81;
  char v82;
  char v83;

  v4 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift + 4);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift + 4))
      return 0;
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift) != *(float *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
  v6 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
  if (v5 == 2)
  {
    if (v6 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v8 = (v5 & 1) == 0;
    if (v6 == 2 || ((v8 ^ v6) & 1) == 0)
      return result;
  }
  v9 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization + 8);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization) != *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization))
      v9 = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  v10 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics);
  v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics);
  if (v10 == 2)
  {
    if (v11 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v12 = (v10 & 1) == 0;
    if (v11 == 2 || ((v12 ^ v11) & 1) == 0)
      return result;
  }
  v13 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
  v14 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
  if (v13)
  {
    if (!v14)
      return 0;
    sub_1004B8930(0, (unint64_t *)&qword_1013F3910, off_101229898);
    v15 = v14;
    v16 = v13;
    v17 = static NSObject.== infix(_:_:)(v16, v15);

    if ((v17 & 1) == 0)
      return 0;
  }
  else if (v14)
  {
    return 0;
  }
  v18 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer);
  v19 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer);
  if (v18 == 2)
  {
    if (v19 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v20 = (v18 & 1) == 0;
    if (v19 == 2 || ((v20 ^ v19) & 1) == 0)
      return result;
  }
  v21 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke);
  v22 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke);
  if (v21)
  {
    if (!v22)
      return 0;
    sub_1004B8930(0, (unint64_t *)&qword_1013F2E90, off_1012299E0);
    v23 = v22;
    v24 = v21;
    v25 = static NSObject.== infix(_:_:)(v24, v23);

    if ((v25 & 1) == 0)
      return 0;
  }
  else if (v22)
  {
    return 0;
  }
  v26 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName);
  v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName + 8);
  v28 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName);
  v29 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName + 8);
  if (v27)
  {
    if (!v29)
      return 0;
    if (*v26 != *v28 || v27 != v29)
    {
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(*v26, v27, *v28, v29, 0);
      result = 0;
      if ((v30 & 1) == 0)
        return result;
    }
  }
  else if (v29)
  {
    return 0;
  }
  v31 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks);
  v32 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks + 8);
  v33 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks);
  v34 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks + 8);
  if (v32)
  {
    if (!v34)
      return 0;
    if (*v31 != *v33 || v32 != v34)
    {
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(*v31, v32, *v33, v34, 0);
      result = 0;
      if ((v35 & 1) == 0)
        return result;
    }
  }
  else if (v34)
  {
    return 0;
  }
  v36 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
  v37 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8);
  v38 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
  v39 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8);
  if (v37)
  {
    if (!v39)
      return 0;
    if (*v36 != *v38 || v37 != v39)
    {
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(*v36, v37, *v38, v39, 0);
      result = 0;
      if ((v40 & 1) == 0)
        return result;
    }
  }
  else if (v39)
  {
    return 0;
  }
  v41 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures);
  v42 = *(_QWORD **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures);
  if (v41)
  {
    if (!v42)
      return 0;
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures));
    swift_bridgeObjectRetain(v41);
    v44 = sub_100548AE8(v43, v42);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v42);
    if ((v44 & 1) == 0)
      return 0;
  }
  else if (v42)
  {
    return 0;
  }
  v45 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4))
      return 0;
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize) != *(float *)(a2
                                                                                              + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize))
      v45 = 1;
    if ((v45 & 1) != 0)
      return 0;
  }
  v46 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize);
  v47 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize);
  if (v46 == 2)
  {
    if (v47 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v48 = (v46 & 1) == 0;
    if (v47 == 2 || ((v48 ^ v47) & 1) == 0)
      return result;
  }
  v49 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic);
  v50 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic);
  if (v49 == 2)
  {
    if (v50 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v51 = (v49 & 1) == 0;
    if (v50 == 2 || ((v51 ^ v50) & 1) == 0)
      return result;
  }
  v52 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning + 4);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning + 4))
      return 0;
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning) != *(float *)(a2
                                                                                             + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning))
      v52 = 1;
    if ((v52 & 1) != 0)
      return 0;
  }
  v53 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language);
  v54 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language + 8);
  v55 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language);
  v56 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language + 8);
  if (v54)
  {
    if (!v56)
      return 0;
    if (*v53 != *v55 || v54 != v56)
    {
      v57 = _stringCompareWithSmolCheck(_:_:expecting:)(*v53, v54, *v55, v56, 0);
      result = 0;
      if ((v57 & 1) == 0)
        return result;
    }
  }
  else if (v56)
  {
    return 0;
  }
  v58 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4))
      return 0;
  }
  else
  {
    if (*(_DWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures) != *(_DWORD *)(a2
                                                                                                 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures))
      v58 = 1;
    if ((v58 & 1) != 0)
      return 0;
  }
  v59 = (_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont);
  v60 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont + 8);
  v61 = (_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont);
  v62 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont + 8);
  if (v60)
  {
    if (!v62)
      return 0;
    if (*v59 != *v61 || v60 != v62)
    {
      v63 = _stringCompareWithSmolCheck(_:_:expecting:)(*v59, v60, *v61, v62, 0);
      result = 0;
      if ((v63 & 1) == 0)
        return result;
    }
  }
  else if (v62)
  {
    return 0;
  }
  v64 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow);
  v65 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow);
  if (v64)
  {
    if (!v65)
      return 0;
    sub_1004B8930(0, (unint64_t *)&qword_1013F1390, off_1012299A8);
    v66 = v65;
    v67 = v64;
    v68 = static NSObject.== infix(_:_:)(v67, v66);

    if ((v68 & 1) == 0)
      return 0;
  }
  else if (v65)
  {
    return 0;
  }
  v69 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough) != *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough))
      v69 = 1;
    if ((v69 & 1) != 0)
      return 0;
  }
  v70 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript + 8);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript) != *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript))
      v70 = 1;
    if ((v70 & 1) != 0)
      return 0;
  }
  v71 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground);
  v72 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground);
  if (v71)
  {
    if (!v72)
      return 0;
    sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
    v73 = v72;
    v74 = v71;
    v75 = static NSObject.== infix(_:_:)(v74, v73);

    if ((v75 & 1) == 0)
      return 0;
  }
  else if (v72)
  {
    return 0;
  }
  v76 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking + 4);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking + 4))
      return 0;
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking) != *(float *)(a2
                                                                                              + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking))
      v76 = 1;
    if ((v76 & 1) != 0)
      return 0;
  }
  v77 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline) != *(_QWORD *)(a2
                                                                                                 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline))
      v77 = 1;
    if ((v77 & 1) != 0)
      return 0;
  }
  v78 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor);
  v79 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor);
  if (v78)
  {
    if (!v79)
      return 0;
    sub_1004B8930(0, (unint64_t *)&qword_1013FBC20, off_101229840);
    v80 = v79;
    v81 = v78;
    v82 = static NSObject.== infix(_:_:)(v81, v80);

    if ((v82 & 1) == 0)
      return 0;
    goto LABEL_145;
  }
  if (v79)
    return 0;
LABEL_145:
  v83 = *(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth + 4);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth + 4))
      return 0;
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth) != *(float *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth))
      v83 = 1;
    if ((v83 & 1) != 0)
      return 0;
  }
  result = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection + 8);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection + 8) & 1) == 0)
    return (*(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection) == *(_QWORD *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection)) & ~(_DWORD)result;
  return result;
}

uint64_t sub_100A16030()
{
  return 32;
}

double sub_100A1603C(_QWORD *a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  return result;
}

double sub_100A16044(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  double result;

  v2 = *a1;
  *(_QWORD *)a2 = *a1;
  v3 = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(a2 + 24) = a1[3];
  *(_OWORD *)(a2 + 8) = v3;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

__n128 sub_100A1606C(__n128 *a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = a1[1].n128_u64[1];
  result = *a1;
  *(_QWORD *)(a2 + 24) = a1[1].n128_u64[0];
  *(__n128 *)(a2 + 8) = result;
  return result;
}

NSString sub_100A16088()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_101480600 = (uint64_t)result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLAssetError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CRLAssetError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetError()
{
  return &type metadata for CRLAssetError;
}

uint64_t sub_100A16174@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  __int128 v9[19];
  _BYTE v10[40];
  _BYTE __dst[276];
  __int128 v12;

  sub_1004E90B0(v2 + 24, (uint64_t)v10);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(v9, v10, v5, &type metadata for CRLBasicLayerAnimation.Def, 6))
  {
    v12 = v9[0];
    memcpy(__dst, (char *)&v9[1] + 8, sizeof(__dst));
    sub_1009F6AAC(v2, a1);
    *((_QWORD *)&v9[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)&v9[2] = sub_1004EB138();
    v6 = swift_allocObject(&unk_1012912A0, 316, 7);
    *(_QWORD *)&v9[0] = v6;
    *(_OWORD *)(v6 + 16) = v12;
    *(double *)(v6 + 32) = a2;
    memcpy((void *)(v6 + 40), __dst, 0x114uLL);
    v7 = (_QWORD *)(a1 + 24);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    return sub_1004DB728(v9, (uint64_t)v7);
  }
  else
  {
    memset(v9, 0, 300);
    sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_101406CB0);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 88, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A162E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11[19];
  _BYTE v12[40];
  id v13[38];

  v3 = v2;
  v6 = type metadata accessor for CRLRepAnimation(0);
  __chkstk_darwin(v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004E90B0(v3 + 24, (uint64_t)v12);
  v9 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(v11, v12, v9, &type metadata for CRLBasicLayerAnimation.Def, 6))
  {
    memcpy(v13, v11, 0x12CuLL);
    objc_storeStrong(v13, a1);
    sub_1009F6AAC(v3, (uint64_t)v8);
    *((_QWORD *)&v11[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
    *(_QWORD *)&v11[2] = sub_1004EB138();
    *(_QWORD *)&v11[0] = swift_allocObject(&unk_1012912A0, 316, 7);
    sub_1004E91D4((uint64_t)v13, *(_QWORD *)&v11[0] + 16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)v8 + 3);
    sub_1004DB728(v11, (uint64_t)(v8 + 24));
    sub_100A16D04((uint64_t)v8, a2);
    return sub_1004E9210((uint64_t)v13);
  }
  else
  {
    memset(v11, 0, 300);
    sub_1004CB800((uint64_t)v11, (uint64_t *)&unk_101406CB0);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 97, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A164A8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  __int128 v9[20];
  _BYTE v10[40];
  _BYTE __dst[308];

  sub_1004E90B0(v2 + 24, (uint64_t)v10);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(v9, v10, v5, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    memcpy(__dst, (char *)v9 + 8, sizeof(__dst));
    sub_1009F6AAC(v2, a1);
    *((_QWORD *)&v9[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v9[2] = sub_100553914();
    v6 = swift_allocObject(&unk_101291278, 332, 7);
    *(_QWORD *)&v9[0] = v6;
    *(double *)(v6 + 16) = a2;
    memcpy((void *)(v6 + 24), __dst, 0x134uLL);
    v7 = (_QWORD *)(a1 + 24);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    return sub_1004DB728(v9, (uint64_t)v7);
  }
  else
  {
    memset(v9, 0, 304);
    *(_QWORD *)&v9[19] = 1;
    DWORD2(v9[19]) = 0;
    sub_1004CB800((uint64_t)v9, &qword_1013E1FD0);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 112, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A16610@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  __int128 v10;
  _OWORD v11[19];
  _BYTE v12[40];
  _BYTE __dst[300];

  sub_1004E90B0(v2 + 24, (uint64_t)v12);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(&v10, v12, v5, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    v6 = v10;
    memcpy(__dst, v11, sizeof(__dst));
    sub_1009F6AAC(v2, a1);
    *((_QWORD *)&v11[0] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v11[1] = sub_100553914();
    v7 = swift_allocObject(&unk_101291278, 332, 7);
    *(_QWORD *)&v10 = v7;
    *(_QWORD *)(v7 + 16) = v6;
    *(double *)(v7 + 24) = a2;
    memcpy((void *)(v7 + 32), __dst, 0x12CuLL);
    v8 = (_QWORD *)(a1 + 24);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8);
    return sub_1004DB728(&v10, (uint64_t)v8);
  }
  else
  {
    memset(v11, 0, 288);
    v10 = 0u;
    *(_QWORD *)&v11[18] = 1;
    DWORD2(v11[18]) = 0;
    sub_1004CB800((uint64_t)&v10, &qword_1013E1FD0);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 124, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A1677C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  __int128 v9[20];
  _BYTE v10[40];
  _BYTE __dst[292];
  __int128 v12;

  sub_1004E90B0(v2 + 24, (uint64_t)v10);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(v9, v10, v5, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    v12 = v9[0];
    memcpy(__dst, (char *)&v9[1] + 8, sizeof(__dst));
    sub_1009F6AAC(v2, a1);
    *((_QWORD *)&v9[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v9[2] = sub_100553914();
    v6 = swift_allocObject(&unk_101291278, 332, 7);
    *(_QWORD *)&v9[0] = v6;
    *(_OWORD *)(v6 + 16) = v12;
    *(double *)(v6 + 32) = a2;
    memcpy((void *)(v6 + 40), __dst, 0x124uLL);
    v7 = (_QWORD *)(a1 + 24);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    return sub_1004DB728(v9, (uint64_t)v7);
  }
  else
  {
    memset(v9, 0, 304);
    *(_QWORD *)&v9[19] = 1;
    DWORD2(v9[19]) = 0;
    sub_1004CB800((uint64_t)v9, &qword_1013E1FD0);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 136, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A168F4@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;
  _OWORD v11[18];
  _BYTE v12[40];
  _BYTE __dst[284];
  __int128 v14;
  uint64_t v15;

  sub_1004E90B0(v2 + 24, (uint64_t)v12);
  v5 = sub_1004B804C((uint64_t *)&unk_1013F0480);
  if (swift_dynamicCast(&v9, v12, v5, &type metadata for CRLSpringLayerAnimation.Def, 6))
  {
    v14 = v9;
    v15 = v10;
    memcpy(__dst, v11, sizeof(__dst));
    sub_1009F6AAC(v2, a1);
    *((_QWORD *)&v10 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(_QWORD *)&v11[0] = sub_100553914();
    v6 = swift_allocObject(&unk_101291278, 332, 7);
    *(_QWORD *)&v9 = v6;
    *(_OWORD *)(v6 + 16) = v14;
    *(_QWORD *)(v6 + 32) = v15;
    *(double *)(v6 + 40) = a2;
    memcpy((void *)(v6 + 48), __dst, 0x11CuLL);
    v7 = (_QWORD *)(a1 + 24);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    return sub_1004DB728(&v9, (uint64_t)v7);
  }
  else
  {
    v10 = 0u;
    memset(v11, 0, 272);
    v9 = 0u;
    *(_QWORD *)&v11[17] = 1;
    DWORD2(v11[17]) = 0;
    sub_1004CB800((uint64_t)&v9, &qword_1013E1FD0);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLRepAnimationModifiable.swift", 40, 2, 148, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A16A7C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, _QWORD);
  double *v9;
  _BYTE v11[32];

  sub_1009F6AAC(v2, a1);
  v5 = a1 + 24;
  v7 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  sub_1004CB9AC(v5, v7);
  v8 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v6 + 32) + 24))(v11, v7);
  *v9 = *v9 + a2;
  return v8(v11, 0);
}

uint64_t sub_100A16B04()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100A16C00()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

uint64_t sub_100A16D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLRepAnimation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100A16D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[5];
  unint64_t v34;

  v1 = a1;
  v34 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for CRLBoardItem(0);
    v5 = sub_10058528C();
    v6 = Set.Iterator.init(_cocoa:)(v33, v3, v4, v5);
    v1 = v33[0];
    v30 = v33[1];
    v7 = v33[2];
    v8 = v33[3];
    v9 = v33[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v30 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_40;
    v18 = v17;
    v31 = v17;
    v19 = type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v32;
    swift_unknownObjectRelease(v18);
    v16 = v8;
    v14 = v9;
    if (!v20)
      goto LABEL_40;
LABEL_36:
    v24 = type metadata accessor for CRLConnectionLineItem(0);
    v25 = swift_dynamicCastClass(v20, v24);
    if (v25)
    {
      v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v28 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      v6 = (_QWORD *)specialized Array._endMutation()(v29);
    }
    else
    {

    }
    v8 = v16;
    v9 = v14;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_35:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_40;
    goto LABEL_36;
  }
  v21 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v21 >= v13)
      goto LABEL_40;
    v22 = *(_QWORD *)(v30 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_40;
      v22 = *(_QWORD *)(v30 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_40;
        v22 = *(_QWORD *)(v30 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_40;
          v22 = *(_QWORD *)(v30 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_40;
            v22 = *(_QWORD *)(v30 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v30 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_34;
                }
              }
LABEL_40:
              sub_1004D284C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

void sub_100A1703C(unsigned __int8 a1, double a2, double a3)
{
  void *v3;
  void *v4;
  int v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char *v41;
  char *v42;
  char *v43;
  id v44;
  char *v45;
  _QWORD aBlock[7];

  v4 = v3;
  v8 = a1;
  v9 = objc_msgSend(v4, "interactiveCanvasController");
  if (v8 == 8)
  {
    if (v9)
    {
      v44 = v9;
      v10 = objc_msgSend(v9, "layerHost");
      if (!v10)
      {
LABEL_34:

        goto LABEL_35;
      }
      v11 = v10;
      if ((objc_msgSend(v10, "respondsToSelector:", "asiOSCVC") & 1) != 0)
      {
        v12 = objc_msgSend(v11, "asiOSCVC");
        v13 = objc_msgSend(v12, "presentedViewController", swift_unknownObjectRelease(v11).n128_f64[0]);
        if (v13)
        {
          v14 = v13;
          v15 = type metadata accessor for CRLiOSMiniShapePickerHostingController();
          v16 = (void *)swift_dynamicCastClass(v14, v15);
          if (v16)
          {
            if ((objc_msgSend(v16, "isBeingDismissed") & 1) == 0)
              objc_msgSend(v12, "dismissViewControllerAnimated:completion:", 1, 0);

            goto LABEL_35;
          }

        }
        goto LABEL_34;
      }

      swift_unknownObjectRelease(v11);
    }
LABEL_35:
    sub_1008EFC18(v4, a2, a3);
    return;
  }
  if (!v9)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 46, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2u, 46, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    return;
  }
  v45 = (char *)v9;
  v17 = (char *)objc_msgSend(v9, "editingCoordinator");
  if (!v17)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 47, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2u, 47, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
    v37 = v45;
LABEL_42:

    return;
  }
  v18 = v17;
  v43 = (char *)*(id *)&v17[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

  v19 = objc_msgSend(v4, "boardItems");
  v20 = type metadata accessor for CRLBoardItem(0);
  v21 = sub_10058528C();
  v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v19, v20, v21);

  sub_100A16D48(v22);
  v24 = v23;
  swift_bridgeObjectRelease();
  if (!((unint64_t)v24 >> 62))
  {
    if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_14;
LABEL_41:
    swift_bridgeObjectRelease();
    sub_100757E04(&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 48, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2u, 48, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    v37 = v43;
    goto LABEL_42;
  }
  if (v24 < 0)
    v38 = v24;
  else
    v38 = v24 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v24);
  v39 = _CocoaArrayWrapper.endIndex.getter(v38);
  swift_bridgeObjectRelease();
  if (!v39)
    goto LABEL_41;
LABEL_14:
  if ((v24 & 0xC000000000000001) != 0)
  {
    v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v24);
  }
  else
  {
    if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v25 = (char *)*(id *)(v24 + 32);
  }
  v42 = v25;
  v26 = objc_msgSend(v45, "board", swift_bridgeObjectRelease().n128_f64[0]);
  if (!v26)
  {

    v37 = v42;
    goto LABEL_42;
  }
  v27 = v26;
  v41 = sub_1006BD608(v27, (uint64_t)v42);

  if (!v41)
  {
    v40 = v27;
    v41 = sub_1006BD8B0(v40, (uint64_t)v42);

    if (!v41)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 50, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2u, 50, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

      v37 = (char *)v40;
      goto LABEL_42;
    }
  }
  sub_1009F80B4(a1);
  if (!v28)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 51, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2u, 51, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);

    v37 = v41;
    goto LABEL_42;
  }
  v29 = v28;
  v30 = sub_1009F8534(a1);
  if ((v31 & 1) != 0)
    v32 = 21;
  else
    v32 = v30;
  v33 = sub_100CF2F10(v41, v29, v32);
  if (objc_msgSend(v4, "canHandleInsertAndConnectBoardItem:", v33))
  {
    aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(_QWORD *)"";
    aBlock[2] = sub_1005D2FC0;
    aBlock[3] = &unk_1012912F0;
    v34 = _Block_copy(aBlock);
    objc_msgSend(v4, "insertAndConnectBoardItem:postProcessBlock:", v33, v34);
    _Block_release(v34);
    v35 = v33;
    v36 = objc_msgSend(v4, "anyConnectionLine");
    sub_100A177E0((uint64_t)v35, v36, v45);

  }
  sub_1009F9E14(v4);

}

void sub_100A177C0(unsigned __int8 a1, double a2, double a3)
{
  sub_100A1703C(a1, a2, a3);
}

void sub_100A177E0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  void *v12;
  _QWORD *v13;
  id v14;
  id v15;
  _QWORD v16[5];
  _QWORD *v17;

  v6 = type metadata accessor for CRLInsertionAnimationHelper();
  v7 = sub_1004B804C((uint64_t *)&unk_1013E4180);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EEF400;
  *(_QWORD *)(v8 + 32) = a1;
  v16[0] = v8;
  specialized Array._endMutation()(v8);
  v9 = v16[0];
  v10 = objc_msgSend(a3, "canvas", swift_unknownObjectRetain(a1).n128_f64[0]);
  v11 = (_QWORD *)swift_allocObject(&unk_101291328, 48, 7);
  v11[2] = v16[0];
  v11[3] = a3;
  v11[4] = a2;
  v11[5] = v6;
  v16[4] = sub_10054CE68;
  v17 = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = *(_QWORD *)"";
  v16[2] = sub_1005D2FC0;
  v16[3] = &unk_101291340;
  v12 = _Block_copy(v16);
  v13 = v17;
  swift_bridgeObjectRetain(v9);
  v14 = a3;
  v15 = a2;
  objc_msgSend(v10, "afterLayoutIncludingLayers:performBlock:", 1, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  swift_bridgeObjectRelease();

}

double sub_100A1792C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100A1793C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100A17944()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

__n128 sub_100A17980()
{
  __n128 result;

  __asm { FMOV            V0.2D, #2.0 }
  xmmword_101480610 = (__int128)result;
  return result;
}

id sub_100A179A0(uint64_t a1, void *a2)
{
  _BYTE *v2;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v23;
  id v24;
  void *v25;
  _QWORD aBlock[5];
  uint64_t v27;
  objc_super v28;

  v2[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer] = 0;
  v5 = sub_100A1B1EC(a1);
  v7 = v6;
  v28.receiver = v2;
  v28.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  v8 = objc_msgSendSuper2(&v28, "initWithImage:highlightedImage:radius:tag:onRep:", v5, v7, a1, a2, 15.0);
  v9 = qword_1013DD928;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_1013DD928, sub_100A1ADCC);
  v11 = qword_101480628;
  v12 = *(_QWORD *)(qword_101480628 + 16);
  if (v12)
  {
    v23 = v7;
    v24 = v5;
    v25 = a2;
    v13 = (void *)objc_opt_self(NSOperationQueue);
    swift_bridgeObjectRetain_n(v11, 2);
    v14 = 0;
    do
    {
      v15 = qword_1013DD920;
      v16 = *(id *)(v11 + 8 * v14 + 32);
      if (v15 != -1)
        swift_once(&qword_1013DD920, sub_100A1AD94);
      ++v14;
      v17 = (id)qword_101480620;
      v18 = objc_msgSend(v13, "mainQueue");
      v19 = swift_allocObject(&unk_101291460, 24, 7);
      swift_unknownObjectWeakInit(v19 + 16);
      aBlock[4] = sub_100A1B640;
      v27 = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(_QWORD *)"";
      aBlock[2] = sub_100568280;
      aBlock[3] = &unk_101291478;
      v20 = _Block_copy(aBlock);
      v21 = objc_msgSend(v17, "addObserverForName:object:queue:usingBlock:", v16, 0, v18, v20, swift_release(v27).n128_f64[0]);
      _Block_release(v20);

      swift_unknownObjectRelease(v21);
    }
    while (v12 != v14);

    swift_bridgeObjectRelease();
    v5 = v24;
    a2 = v25;
  }
  else
  {
    swift_bridgeObjectRetain(qword_101480628);

  }
  swift_bridgeObjectRelease();

  return v10;
}

void sub_100A17C20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = sub_100A1B1EC((uint64_t)objc_msgSend(Strong, "tag"));
    v7 = v6;
    objc_msgSend(v4, "setImage:", v5);
    objc_msgSend(v4, "setHighlightedImage:", v7);

  }
}

id sub_100A17CEC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  id v5;
  objc_super v7;

  if (qword_1013DD928 != -1)
    swift_once(&qword_1013DD928, sub_100A1ADCC);
  v1 = qword_101480628;
  v2 = *(_QWORD *)(qword_101480628 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(qword_101480628);
    for (i = 0; i != v2; ++i)
    {
      v4 = qword_1013DD920;
      v5 = *(id *)(v1 + 8 * i + 32);
      if (v4 != -1)
        swift_once(&qword_1013DD920, sub_100A1AD94);
      objc_msgSend((id)qword_101480620, "removeObserver:name:object:", v0, v5, 0);

    }
    swift_bridgeObjectRelease();
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100A17E34(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100A17E7C()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))((char *)sub_100A17E9C
                            + 4 * byte_100F22AD4[*(unsigned __int8 *)(v0 + *(_QWORD *)(v1 + 1560))]))();
}

void sub_100A17E9C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer);
  if (v3)
  {
    v4 = v3;
    sub_100A19284(0, (uint64_t)v7);

    v5 = v8;
    if (v8)
    {
      v6 = v9;
      sub_1004BB5A4(v7, v8);
      sub_100D0C8CC(0, 1, 0, 0, 0, 0, 0, v5, v6);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    }
    else
    {
      sub_10060CF30((uint64_t)v7);
    }
  }
  *(_BYTE *)(v0 + *(_QWORD *)(v2 + 1560)) = v1;
}

void sub_100A17F5C()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "knobImage");
    v4 = *(void **)&v2[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage];
    *(_QWORD *)&v2[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = v3;
    v5 = v3;

    sub_100A189F0();
  }
}

void sub_100A180E4()
{
  void *v0;
  id v1;
  id v2;
  char *v3;
  char *v4;
  void *v5;
  char *v6;

  v1 = objc_msgSend(v0, "imageRenderable");
  objc_msgSend(v1, "removeFromSuperlayer");

  v2 = objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer());
  v3 = v0;
  v4 = sub_100A18DF4(v3);
  v5 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer] = v4;
  v6 = v4;
  sub_100A184DC(v5);

  sub_100A17E34(1);
}

uint64_t sub_100A181D0(uint64_t a1, double a2, double a3)
{
  char *v3;
  char *v4;
  uint64_t result;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  v4 = v3;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  result = (uint64_t)objc_msgSendSuper2(&v16, "cursorEnteredKnobAtPoint:withPlatformObject:", a1, a2, a3);
  v9 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  if (v9)
  {
    v10 = v9;
    sub_100A19284(1, (uint64_t)v13);

    v11 = v14;
    if (v14)
    {
      v12 = v15;
      sub_1004BB5A4(v13, v14);
      sub_100D0C8CC(0, 1, 1, 0, 0, 0, 0, v11, v12);
      result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v13);
    }
    else
    {
      result = sub_10060CF30((uint64_t)v13);
    }
  }
  v4[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState] = 2;
  return result;
}

void sub_100A18338(uint64_t a1, double a2, double a3)
{
  void *v3;
  void *v4;
  objc_super v8;

  v4 = v3;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  objc_msgSendSuper2(&v8, "cursorExitedKnobAtPoint:withPlatformObject:", a1, a2, a3);
  __asm { BR              X9 }
}

void sub_100A183B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer);
  if (v2)
  {
    v3 = v2;
    sub_100A19284(0, (uint64_t)v6);

    v4 = v7;
    if (v7)
    {
      v5 = v8;
      sub_1004BB5A4(v6, v7);
      sub_100D0C8CC(0, 1, 0, 0, 0, 0, 0, v4, v5);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
    }
    else
    {
      sub_10060CF30((uint64_t)v6);
    }
  }
  *(_BYTE *)(v0 + v1) = 1;
}

void sub_100A184DC(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer;
  v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  if (!v5)
  {
    if (!a1)
      return;
LABEL_6:
    objc_msgSend(v3, "removeFromSuperlayer");
    v5 = *(void **)&v2[v4];
    if (!v5)
      return;
    goto LABEL_7;
  }
  if (a1)
  {
    type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
    v3 = v3;
    v6 = v5;
    v7 = static NSObject.== infix(_:_:)(v6, v3);

    if ((v7 & 1) != 0)
      return;
    goto LABEL_6;
  }
LABEL_7:
  v16 = v5;
  objc_msgSend(v16, "setAnchorPoint:", 0.0, 0.0);
  v8 = objc_msgSend(v2, "renderable");
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "layer");

    objc_msgSend(v10, "addSublayer:", v16);
  }
  sub_100A18BD0();
  v12 = v11;
  sub_100A18BD0();
  if (v12 > v13)
    v14 = v12;
  else
    v14 = v13;
  v15 = v14 * 0.5;
  if (v15 < 15.0)
    v15 = 15.0;
  objc_msgSend(v2, "setRadius:", v15);

}

double sub_100A1865C()
{
  void *v0;
  id v1;
  double v2;
  void *v3;
  unsigned __int8 v4;

  v1 = objc_msgSend(v0, "rep");
  v2 = 19.0;
  if (v1)
  {
    v3 = v1;
    if (objc_msgSend(v0, "tag") == (id)6 && (objc_msgSend(v3, "enabledKnobMask") & 0x40) != 0
      || objc_msgSend(v0, "tag") == (id)8 && (objc_msgSend(v3, "enabledKnobMask") & 0x100) != 0
      || objc_msgSend(v0, "tag") == (id)4 && (objc_msgSend(v3, "enabledKnobMask") & 0x10) != 0)
    {

    }
    else
    {
      if (objc_msgSend(v0, "tag") != (id)2)
      {

        return v2;
      }
      v4 = objc_msgSend(v3, "enabledKnobMask");

      if ((v4 & 4) == 0)
        return v2;
    }
    return 25.0;
  }
  return v2;
}

double sub_100A1876C()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id v5;
  double result;
  uint64_t v7[32];
  char v8;

  v7[0] = 1065353216;
  v8 = 6;
  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 0;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.5;
  LODWORD(v4) = 1.0;
  v5 = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  sub_1004E9198(v7, &unk_101402500);
  unk_1014024F0 = xmmword_100F01EC0;
  qword_1014024E8 = (uint64_t)v5;
  qword_101402608 = 0;
  *(_QWORD *)&result = 131586;
  dword_101402610 = 131586;
  return result;
}

id sub_100A18808()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *Strong;
  double v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  double v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  id v24;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer);
  v2 = v0
     + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  v4 = 0.0;
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "defaultKnobImage");

    v7 = 0.0;
    if (v6)
    {
      objc_msgSend(v6, "size");
      v7 = v8;
      v4 = v9;

    }
  }
  else
  {
    v7 = 0.0;
  }
  objc_msgSend(v1, "setBounds:", 0.0, 0.0, v7, v4);
  v10 = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (v10
    && (v11 = v10,
        v12 = objc_msgSend(v10, "defaultKnobImage"),
        v11,
        v12))
  {
    v13 = (void *)swift_unknownObjectWeakLoadStrong(v2);
    v14 = 1.0;
    if (v13)
    {
      v15 = v13;
      v16 = objc_msgSend(v13, "rep");

      if (v16)
      {
        v17 = objc_msgSend(v16, "canvas");

        if (v17)
        {
          objc_msgSend(v17, "contentsScale");
          v14 = v18;

        }
      }
    }
    v19 = objc_msgSend(v12, "CGImageForContentsScale:", v14);

    v24 = v19;
    type metadata accessor for CGImage(0);
    v21 = _bridgeAnythingToObjectiveC<A>(_:)(&v24, v20);

  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v1, "setContents:", v21);
  v22 = swift_unknownObjectRelease(v21);
  v22.n128_u32[0] = 0;
  return objc_msgSend(v1, "setOpacity:", v22.n128_f64[0]);
}

void sub_100A189F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  void *Strong;
  double v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  id v12;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage);
  if (v1)
  {
    v2 = *(void **)(v0
                  + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer);
    v3 = v1;
    objc_msgSend(v3, "size");
    objc_msgSend(v2, "setBounds:", 0.0, 0.0, v4, v5);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob);
    v7 = 1.0;
    if (Strong)
    {
      v8 = Strong;
      v9 = objc_msgSend(Strong, "rep");

      if (v9)
      {
        v10 = objc_msgSend(v9, "canvas");

        if (v10)
        {
          objc_msgSend(v10, "contentsScale");
          v7 = v11;

        }
      }
    }
    v12 = objc_msgSend(v3, "CGImageForContentsScale:", v7);
    objc_msgSend(v2, "setContents:", v12);

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"updateConnectionKnobLayer()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 358, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateConnectionKnobLayer()", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2u, 358, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
}

void sub_100A18BD0()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v1 = v0
     + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0+ OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "defaultKnobImage");

    if (v4)
    {
      objc_msgSend(v4, "size");

    }
  }
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "image");

    if (v7)
    {
      objc_msgSend(v7, "size");

    }
  }
  v8 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, "image");

    if (v10)
    {
      objc_msgSend(v10, "size");

    }
  }
  v11 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "defaultKnobImage");

    if (v13)
    {
      objc_msgSend(v13, "size");

    }
  }
  v14 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "image");

    if (v16)
    {
      objc_msgSend(v16, "size");

    }
  }
  v17 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "image");

    if (v19)
    {
      objc_msgSend(v19, "size");

    }
  }
}

char *sub_100A18DF4(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char *v12;
  double v13;
  double v14;
  uint64_t v15;
  id v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  uint64_t v35;
  id v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  objc_super v50;

  v3 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  v4 = objc_allocWithZone((Class)CALayer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v7 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage;
  *(_QWORD *)&v5[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = 0;
  v8 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v9 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob]);
  v10 = objc_msgSend(a1, "knobImage", swift_unknownObjectWeakAssign(v9, a1).n128_f64[0]);
  v11 = *(void **)&v5[v7];
  *(_QWORD *)&v5[v7] = v10;

  v50.receiver = v5;
  v50.super_class = (Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
  v12 = (char *)objc_msgSendSuper2(&v50, "init");
  sub_100A18BD0();
  objc_msgSend(v12, "setBounds:", 0.0, 0.0, v13, v14);
  sub_100A18808();
  sub_100A189F0();
  v15 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  v16 = *(id *)&v12[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer];
  sub_100A18BD0();
  objc_msgSend(v16, "setBounds:", 0.0, 0.0, v17, v18);

  objc_msgSend(*(id *)&v12[v15], "setAnchorPoint:", 0.0, 0.0);
  v19 = objc_msgSend(*(id *)&v12[v15], "superlayer");

  if (!v19)
    objc_msgSend(v12, "addSublayer:", *(_QWORD *)&v12[v15]);
  v20 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v20, "begin");
  objc_msgSend(v20, "setDisableActions:", 1);
  v21 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  v22 = *(id *)&v12[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer];
  objc_msgSend(v22, "bounds");
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  objc_msgSend(v12, "bounds");
  objc_msgSend(v22, "setFrame:", sub_1000616BC(v24, v26, v28, v30, v31, v32, v33, v34));

  objc_msgSend(*(id *)&v12[v15], "addSublayer:", *(_QWORD *)&v12[v21]);
  v35 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  v36 = *(id *)&v12[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer];
  objc_msgSend(v36, "bounds");
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  objc_msgSend(v12, "bounds");
  objc_msgSend(v36, "setFrame:", sub_1000616BC(v38, v40, v42, v44, v45, v46, v47, v48));

  objc_msgSend(*(id *)&v12[v15], "addSublayer:", *(_QWORD *)&v12[v35]);
  objc_msgSend(v20, "commit");

  return v12;
}

id sub_100A19118(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  v4 = objc_allocWithZone((Class)CALayer);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = 0;
  v7 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob]);

  v8 = a1[3];
  v9 = sub_1004BB5A4(a1, v8);
  v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v8);
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
  v11 = objc_msgSendSuper2(&v13, "initWithLayer:", v10);
  swift_unknownObjectRelease(v10);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  return v11;
}

void sub_100A19284(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *Strong;
  void *v7;
  id v8;
  double v9;
  double v10;
  CATransform3D v11[2];

  v5 = type metadata accessor for CRLBasicLayerAnimation(0);
  __chkstk_darwin(v5);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2+ OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob);
  if (Strong)
  {
    v7 = Strong;
    v8 = objc_msgSend(Strong, "rep");
    if (v8)
    {
      objc_msgSend(v8, "additionalRotationForKnobOrientation");
      v10 = sub_1004DDADC(v9);
      CATransform3DMakeRotation(v11, v10, 0.0, 0.0, 1.0);
      __asm { BR              X10 }
    }

  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"animationProvider(for:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 419, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"animationProvider(for:)", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2u, 419, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  *(_QWORD *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

id sub_100A1ACF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100A1AD94()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  qword_101480620 = (uint64_t)result;
  return result;
}

NSNotificationName sub_100A1ADCC()
{
  uint64_t v0;
  uint64_t v1;
  NSString *v2;
  NSString *v3;

  v0 = sub_1004B804C(&qword_1014026A8);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100EF5550;
  *(_QWORD *)(v1 + 32) = UIAccessibilityBoldTextStatusDidChangeNotification;
  *(_QWORD *)(v1 + 40) = UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;
  *(_QWORD *)(v1 + 48) = UIContentSizeCategoryDidChangeNotification;
  qword_101480628 = v1;
  v2 = UIAccessibilityBoldTextStatusDidChangeNotification;
  v3 = UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;
  return UIContentSizeCategoryDidChangeNotification;
}

uint64_t type metadata accessor for CRLConnectionLineKnob()
{
  return objc_opt_self(_TtC8Freeform21CRLConnectionLineKnob);
}

uint64_t type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer()
{
  return objc_opt_self(_TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer);
}

uint64_t storeEnumTagSinglePayload for CRLConnectionLineKnob.KnobState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100A1AF24 + 4 * byte_100F22AE1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100A1AF58 + 4 * byte_100F22ADC[v4]))();
}

uint64_t sub_100A1AF58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A1AF60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A1AF68);
  return result;
}

uint64_t sub_100A1AF74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A1AF7CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100A1AF80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A1AF88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLineKnob.KnobState()
{
  return &type metadata for CRLConnectionLineKnob.KnobState;
}

unint64_t sub_100A1AFA8()
{
  unint64_t result;

  result = qword_1014026A0;
  if (!qword_1014026A0)
  {
    result = swift_getWitnessTable(&unk_100F22C00, &type metadata for CRLConnectionLineKnob.KnobState);
    atomic_store(result, (unint64_t *)&qword_1014026A0);
  }
  return result;
}

uint64_t sub_100A1AFEC()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 56);
  switch(*(_BYTE *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 112))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 88));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 80))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 64);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 96);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 144);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 112);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100A1B0E8()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + 40);
  switch(*(_BYTE *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      if (*(_QWORD *)(v0 + 96))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((_QWORD *)(v0 + 72));
      break;
    case 1:
    case 0x23:
      if (*(_QWORD *)(v0 + 64))
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      v2 = *(void **)(v0 + 48);
      goto LABEL_4;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:
      v2 = *v1;
      goto LABEL_4;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 0x21:
    case 0x25:
      swift_bridgeObjectRelease();
      break;
    case 0x3A:
      v2 = *(void **)(v0 + 80);
      goto LABEL_4;
    case 0x3F:

      v2 = *(void **)(v0 + 128);
      goto LABEL_4;
    case 0x40:

      v2 = *(void **)(v0 + 96);
LABEL_4:

      break;
    default:
      break;
  }

  return swift_deallocObject(v0, 316, 7);
}

id sub_100A1B1EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  NSString v20;
  void *v21;
  id v22;
  Swift::String v23;
  NSString v24;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[72];
  _QWORD v29[2];

  strcpy((char *)v29, "canvas-diagram");
  HIBYTE(v29[1]) = -18;
  switch(a1)
  {
    case 2:
      v2 = 1919905325;
      goto LABEL_8;
    case 4:
      v10 = 1936029485;
      goto LABEL_6;
    case 6:
      v10 = 1935762733;
LABEL_6:
      v11 = v10 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
      v12 = 0xE500000000000000;
      goto LABEL_9;
    case 8:
      v2 = 1970238253;
LABEL_8:
      v11 = v2 & 0xFFFF0000FFFFFFFFLL | 0x687400000000;
      v12 = 0xE600000000000000;
LABEL_9:
      String.append(_:)(*(Swift::String *)&v11);
      break;
    default:
      v3 = sub_1004B804C((uint64_t *)&unk_1013E0180);
      inited = swift_initStackObject(v3, v28);
      *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
      v26 = a1;
      type metadata accessor for CRLCanvasKnobTag(0);
      v6 = String.init<A>(describing:)(&v26, v5);
      v8 = v7;
      *(_QWORD *)(inited + 56) = &type metadata for String;
      *(_QWORD *)(inited + 64) = sub_1004CFC2C();
      *(_QWORD *)(inited + 32) = v6;
      *(_QWORD *)(inited + 40) = v8;
      sub_100757E04(&_mh_execute_header, (uint64_t)"getKnobImages(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 505, "Could not find an asset for connection knob with tag %@", 55, 2u, inited);
      sub_1004F5394(inited, (uint64_t)"getKnobImages(for:)", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2u, 505, (uint64_t)"Could not find an asset for connection knob with tag %@", 55, 2u);
      swift_setDeallocating(inited);
      v9 = sub_1004B804C(&qword_1013E0190);
      swift_arrayDestroy(inited + 32, 1, v9);
      break;
  }
  v13 = (void *)objc_opt_self(CRLAccessibility);
  if (objc_msgSend(v13, "isBoldTextEnabled"))
  {
    v14._countAndFlagsBits = 0x646C6F622DLL;
    v14._object = (void *)0xE500000000000000;
    String.append(_:)(v14);
  }
  if (objc_msgSend(v13, "isIncreaseContrastEnabled"))
  {
    v15._countAndFlagsBits = 6512941;
    v15._object = (void *)0xE300000000000000;
    String.append(_:)(v15);
  }
  if (objc_msgSend(v13, "isUsingAccessibilityTextSize"))
  {
    v16._countAndFlagsBits = 7627821;
    v16._object = (void *)0xE300000000000000;
    String.append(_:)(v16);
  }
  v18 = v29[0];
  v17 = v29[1];
  v26 = v29[0];
  v27 = v29[1];
  swift_bridgeObjectRetain(v29[1]);
  v19._countAndFlagsBits = 20013;
  v19._object = (void *)0xE200000000000000;
  String.append(_:)(v19);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v21 = (void *)objc_opt_self(CRLImage);
  v22 = objc_msgSend(v21, "imageNamed:", v20);

  v26 = v18;
  v27 = v17;
  swift_bridgeObjectRetain(v17);
  v23._countAndFlagsBits = 20525;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "imageNamed:", v24, swift_bridgeObjectRelease().n128_f64[0]);

  return v22;
}

void sub_100A1B53C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v2 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = 0;
  v3 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_owningKnob], 0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100FAD6F0, "Freeform/CRLConnectionLineKnob.swift", 36, 2, 472, 0);
  __break(1u);
}

uint64_t sub_100A1B61C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100A1B640(uint64_t a1)
{
  uint64_t v1;

  sub_100A17C20(a1, v1);
}

double sub_100A1B648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100A1B658(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t _s13ItemViewModelV9SortStyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100A1B6AC + 4 * byte_100F22C65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100A1B6E0 + 4 * byte_100F22C60[v4]))();
}

uint64_t sub_100A1B6E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A1B6E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A1B6F0);
  return result;
}

uint64_t sub_100A1B6FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A1B704);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100A1B708(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A1B710(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13ItemViewModelV9SortStyleOMa()
{
  return &_s13ItemViewModelV9SortStyleON;
}

char *sub_100A1B72C(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v29);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = a3[8];
    v15 = *(void **)&a2[v13];
    *(_QWORD *)&a1[v13] = v15;
    v16 = &a1[v14];
    v17 = &a2[v14];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = a3[9];
    v20 = a3[10];
    v21 = &a1[v19];
    v22 = &a2[v19];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v24 = *(_QWORD *)&a2[v20];
    *(_QWORD *)&a1[v20] = v24;
    v25 = a3[11];
    v26 = a3[12];
    v27 = *(_QWORD *)&a2[v25];
    *(_QWORD *)&a1[v25] = v27;
    a1[v26] = a2[v26];
    a1[a3[13]] = a2[a3[13]];
    v28 = v15;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v27);
  }
  return a1;
}

uint64_t sub_100A1B878(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Date(0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[6], v6);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11]));
}

uint64_t sub_100A1B93C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[7];
  v13 = a3[8];
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[9];
  v19 = a3[10];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)(a1 + v19) = v23;
  v24 = a3[11];
  v25 = a3[12];
  v26 = *(_QWORD *)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v26;
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v27 = v14;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  return a1;
}

uint64_t sub_100A1BA5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[7];
  v13 = *(void **)(a2 + v12);
  v14 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v15 = v13;

  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[10];
  v27 = *(_QWORD *)(a2 + v26);
  v28 = *(_QWORD *)(a1 + v26);
  *(_QWORD *)(a1 + v26) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  v29 = a3[11];
  v30 = *(_QWORD *)(a2 + v29);
  v31 = *(_QWORD *)(a1 + v29);
  *(_QWORD *)(a1 + v29) = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_100A1BBC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_100A1BCAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  v12 = a3[7];
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  v19 = v15[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease(v19);
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  v25 = v21[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease(v25);
  v26 = a3[10];
  v27 = *(_QWORD *)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  swift_bridgeObjectRelease(v27);
  v28 = a3[11];
  v29 = *(_QWORD *)(a1 + v28);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  swift_bridgeObjectRelease(v29);
  v30 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  return a1;
}

uint64_t sub_100A1BDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A1BDE4);
}

uint64_t sub_100A1BDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100A1BE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A1BE98);
}

uint64_t sub_100A1BE98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t _s13ItemViewModelVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_101402708;
  if (!qword_101402708)
    return swift_getSingletonMetadata(a1, &_s13ItemViewModelVMn);
  return result;
}

uint64_t sub_100A1BF78(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      v8 = (char *)&value witness table for Builtin.UnknownObject + 64;
      v9 = &unk_100F22CA0;
      v10 = &unk_100F22CB8;
      v11 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v12 = (char *)&value witness table for Builtin.BridgeObject + 64;
      v13 = &unk_100F22CD0;
      v14 = &unk_100F22CD0;
      swift_initStructMetadata(a1, 256, 10, &v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100A1C03C(uint64_t a1, uint64_t a2, char a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[160];

  v6 = (int *)_s13ItemViewModelVMa(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v46 - v13;
  v15 = sub_1004B804C(&qword_1013E1748);
  __chkstk_darwin(v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v8;
  v46 = v11;
  if (a3)
  {
    if (a3 == 1)
      v18 = v6[5];
    else
      v18 = v6[6];
    v27 = a1 + v18;
    v28 = a2 + v18;
    v29 = type metadata accessor for Date(0);
    sub_1004B7878((unint64_t *)&qword_1013EDD80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v27, v28) & 1) == 0)
      goto LABEL_13;
  }
  else
  {
    v19 = v6[8];
    v20 = *(_QWORD *)(a1 + v19 + 8);
    v50 = *(_QWORD *)(a1 + v19);
    v51 = v20;
    v21 = (uint64_t *)(a2 + v19);
    v22 = v21[1];
    v48 = *v21;
    v49 = v22;
    v23 = type metadata accessor for Locale(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v17, 1, 1, v23);
    v24 = sub_1004D292C();
    swift_bridgeObjectRetain(v20);
    v25 = swift_bridgeObjectRetain(v22);
    v26 = StringProtocol.compare<A>(_:options:range:locale:)(&v48, 0, 0, 0, 1, v17, &type metadata for String, &type metadata for String, v25, v24, v24);
    sub_10075882C((uint64_t)v17);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v51);
    if (v26)
      goto LABEL_17;
  }
  v30 = v6[6];
  v27 = a1 + v30;
  v28 = a2 + v30;
  v29 = type metadata accessor for Date(0);
  sub_1004B7878((unint64_t *)&qword_1013EDD80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v27, v28) & 1) == 0)
    goto LABEL_13;
  v27 = type metadata accessor for UUID(0);
  sub_1004B7878((unint64_t *)&qword_1013E4880, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v26 = 0;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(a1, a2) & 1) == 0)
  {
    v28 = sub_1004B7878(&qword_1013F0328, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    if ((dispatch thunk of static Comparable.< infix(_:_:)(a1, a2, v27, v28) & 1) != 0)
    {
LABEL_14:
      v26 = -1;
      goto LABEL_17;
    }
    v29 = v27;
    if ((dispatch thunk of static Comparable.> infix(_:_:)(a1, a2, v27, v28) & 1) == 0)
    {
      do
      {
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLStencilLibrary-ItemViewModel.swift", 46, 2, 122, 0);
        __break(1u);
LABEL_13:
        v31 = sub_1004B7878(&qword_101400D58, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        if ((dispatch thunk of static Comparable.< infix(_:_:)(v27, v28, v29, v31) & 1) != 0)
          goto LABEL_14;
      }
      while ((dispatch thunk of static Comparable.> infix(_:_:)(v27, v28, v29, v31) & 1) == 0);
    }
    v26 = 1;
  }
LABEL_17:
  v32 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v32, v52);
  *(_OWORD *)(inited + 16) = xmmword_100EF5550;
  v50 = v26;
  type metadata accessor for ComparisonResult(0);
  v35 = String.init<A>(describing:)(&v50, v34);
  v37 = v36;
  *(_QWORD *)(inited + 56) = &type metadata for String;
  v38 = sub_1004CFC2C();
  *(_QWORD *)(inited + 64) = v38;
  *(_QWORD *)(inited + 32) = v35;
  *(_QWORD *)(inited + 40) = v37;
  sub_100A1CFBC(a1, (uint64_t)v14);
  v39 = String.init<A>(describing:)(v14, v6);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 104) = v38;
  *(_QWORD *)(inited + 72) = v39;
  *(_QWORD *)(inited + 80) = v40;
  sub_100A1CFBC(a2, (uint64_t)v14);
  v41 = String.init<A>(describing:)(v14, v6);
  *(_QWORD *)(inited + 136) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v38;
  *(_QWORD *)(inited + 112) = v41;
  *(_QWORD *)(inited + 120) = v42;
  if ((sub_100A1C8AC(a1, a2) & 1) == 0)
  {
    v43 = (uint64_t)v46;
    sub_100A1CFBC(a1, (uint64_t)v46);
    v44 = (uint64_t)v47;
    sub_100A1CFBC(a2, (uint64_t)v47);
LABEL_21:
    if ((sub_100A1C8AC(v43, v44) & 1) != 0)
    {
      sub_100A0F550(v43);
      sub_100A0F550(v44);
    }
    else
    {
      sub_100A0F550(v43);
      sub_100A0F550(v44);
      if (v26)
        goto LABEL_25;
    }
    sub_100757E04(&_mh_execute_header, (uint64_t)"compare(lhs:rhs:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-ItemViewModel.swift", 123, 2, 107, "Comparison result should come up as .orderedSame if and only if lhs and rhs are equivalent. comparisonResult: %@ | lhs: %@ | rhs: %@", 132, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"compare(lhs:rhs:)", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-ItemViewModel.swift", 123, 2u, 107, (uint64_t)"Comparison result should come up as .orderedSame if and only if lhs and rhs are equivalent. comparisonResult: %@ | lhs: %@ | rhs: %@", 132, 2u);
    goto LABEL_25;
  }
  v43 = (uint64_t)v46;
  sub_100A1CFBC(a1, (uint64_t)v46);
  v44 = (uint64_t)v47;
  sub_100A1CFBC(a2, (uint64_t)v47);
  if (v26)
    goto LABEL_21;
  sub_100A0F550(v43);
  sub_100A0F550(v44);
LABEL_25:
  swift_bridgeObjectRelease(inited);
  return v26;
}

uint64_t sub_100A1C5DC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
  v6 = (int *)_s13ItemViewModelVMa(0);
  v7 = (uint64_t *)(v1 + v6[8]);
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v2 + v6[9]);
  v11 = v10[1];
  if (v11)
  {
    v12 = *v10;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v11);
    String.hash(into:)(a1, v12, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v13 = *(_QWORD *)(v2 + v6[11]);
  swift_bridgeObjectRetain(v13);
  sub_1008DFA7C(a1, v13);
  swift_bridgeObjectRelease();
  v14 = *(void **)(v2 + v6[7]);
  type metadata accessor for CGImage(0);
  v16 = v15;
  v17 = sub_1004B7878(&qword_101402770, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_100EF19C0);
  v18 = v14;
  _CFObject.hash(into:)(a1, v16, v17);

  Hasher._combine(_:)(*(_BYTE *)(v2 + v6[12]));
  Hasher._combine(_:)(*(_BYTE *)(v2 + v6[13]));
  v19 = type metadata accessor for Date(0);
  v20 = sub_1004B7878(&qword_101402778, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v19, v20);
  return dispatch thunk of Hashable.hash(into:)(a1, v19, v20);
}

Swift::Int sub_100A1C7BC()
{
  __int128 v1[4];

  Hasher.init(_seed:)(v1, 0);
  sub_100A1C5DC(v1);
  return Hasher._finalize()();
}

Swift::Int sub_100A1C7FC(uint64_t a1)
{
  __int128 v2[4];

  Hasher.init(_seed:)(v2, a1);
  sub_100A1C5DC(v2);
  return Hasher._finalize()();
}

uint64_t sub_100A1C838()
{
  return sub_1004B7878(&qword_101402760, _s13ItemViewModelVMa, (uint64_t)&unk_100F22CE8);
}

unint64_t sub_100A1C868()
{
  unint64_t result;

  result = qword_101402768;
  if (!qword_101402768)
  {
    result = swift_getWitnessTable(&unk_100F22DA0, &_s13ItemViewModelV9SortStyleON);
    atomic_store(result, (unint64_t *)&qword_101402768);
  }
  return result;
}

uint64_t sub_100A1C8AC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v49;
  int *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  int v80;
  int v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;

  v4 = (int *)_s13ItemViewModelVMa(0);
  __chkstk_darwin(v4);
  v92 = (uint64_t)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v91 = (char *)&v83 - v7;
  __chkstk_darwin(v8);
  v90 = (char *)&v83 - v9;
  __chkstk_darwin(v10);
  v89 = (char *)&v83 - v11;
  __chkstk_darwin(v12);
  v88 = (char *)&v83 - v13;
  __chkstk_darwin(v14);
  v87 = (char *)&v83 - v15;
  __chkstk_darwin(v16);
  v86 = (uint64_t)&v83 - v17;
  __chkstk_darwin(v18);
  v85 = (uint64_t)&v83 - v19;
  __chkstk_darwin(v20);
  v84 = (uint64_t)&v83 - v21;
  __chkstk_darwin(v22);
  v83 = (uint64_t)&v83 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v83 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v83 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v83 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v83 - v34;
  __chkstk_darwin(v36);
  v38 = (char *)&v83 - v37;
  __chkstk_darwin(v39);
  v41 = (char *)&v83 - v40;
  v42 = static UUID.== infix(_:_:)(a1);
  sub_100A1CFBC(a1, (uint64_t)v41);
  sub_100A1CFBC(a2, (uint64_t)v38);
  if ((v42 & 1) == 0)
  {
    sub_100A0F550((uint64_t)v41);
    sub_100A0F550((uint64_t)v38);
    sub_100A1CFBC(a1, (uint64_t)v35);
    sub_100A1CFBC(a2, (uint64_t)v32);
    goto LABEL_9;
  }
  v43 = v4[8];
  v44 = *(_QWORD *)&v41[v43];
  v45 = *(_QWORD *)&v41[v43 + 8];
  v46 = &v38[v43];
  v47 = *((_QWORD *)v46 + 1);
  if (v44 == *(_QWORD *)v46 && v45 == v47)
  {
    sub_100A0F550((uint64_t)v41);
    sub_100A0F550((uint64_t)v38);
    sub_100A1CFBC(a1, (uint64_t)v35);
    sub_100A1CFBC(a2, (uint64_t)v32);
    goto LABEL_11;
  }
  v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v45, *(_QWORD *)v46, v47, 0);
  sub_100A0F550((uint64_t)v41);
  sub_100A0F550((uint64_t)v38);
  sub_100A1CFBC(a1, (uint64_t)v35);
  sub_100A1CFBC(a2, (uint64_t)v32);
  if ((v49 & 1) == 0)
  {
LABEL_9:
    sub_100A0F550((uint64_t)v32);
    sub_100A0F550((uint64_t)v35);
LABEL_21:
    v58 = (uint64_t)v87;
    v57 = (uint64_t)v88;
    sub_100A1CFBC(a1, (uint64_t)v29);
    sub_100A1CFBC(a2, (uint64_t)v26);
    goto LABEL_22;
  }
LABEL_11:
  v50 = v4;
  v51 = v4[9];
  v52 = &v35[v51];
  v53 = *(_QWORD *)&v35[v51 + 8];
  v54 = &v32[v51];
  v55 = *((_QWORD *)v54 + 1);
  if (!v53)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v54 + 1));
    sub_100A0F550((uint64_t)v32);
    sub_100A0F550((uint64_t)v35);
    if (!v55)
      goto LABEL_18;
    v56 = v55;
    goto LABEL_20;
  }
  if (!v55)
  {
    swift_bridgeObjectRetain(v53);
    sub_100A0F550((uint64_t)v32);
    sub_100A0F550((uint64_t)v35);
    v56 = v53;
LABEL_20:
    swift_bridgeObjectRelease(v56);
    goto LABEL_21;
  }
  if (*(_QWORD *)v52 == *(_QWORD *)v54 && v53 == v55)
  {
    swift_bridgeObjectRetain(v53);
    sub_100A0F550((uint64_t)v32);
    sub_100A0F550((uint64_t)v35);
    swift_bridgeObjectRelease(v53);
LABEL_18:
    sub_100A1CFBC(a1, (uint64_t)v29);
    sub_100A1CFBC(a2, (uint64_t)v26);
    v58 = (uint64_t)v87;
    v57 = (uint64_t)v88;
    goto LABEL_30;
  }
  v69 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v52, v53, *(_QWORD *)v54, *((_QWORD *)v54 + 1), 0);
  swift_bridgeObjectRetain(v53);
  sub_100A0F550((uint64_t)v32);
  sub_100A0F550((uint64_t)v35);
  swift_bridgeObjectRelease(v53);
  sub_100A1CFBC(a1, (uint64_t)v29);
  sub_100A1CFBC(a2, (uint64_t)v26);
  v58 = (uint64_t)v87;
  v57 = (uint64_t)v88;
  if ((v69 & 1) == 0)
  {
LABEL_22:
    sub_100A0F550((uint64_t)v29);
    sub_100A0F550((uint64_t)v26);
    v59 = v83;
    sub_100A1CFBC(a1, v83);
    v60 = v84;
    sub_100A1CFBC(a2, v84);
LABEL_23:
    sub_100A0F550(v59);
    sub_100A0F550(v60);
    v61 = v85;
    sub_100A1CFBC(a1, v85);
    v62 = v86;
    sub_100A1CFBC(a2, v86);
    v63 = (uint64_t)v89;
LABEL_24:
    sub_100A0F550(v62);
    sub_100A0F550(v61);
    sub_100A1CFBC(a1, v58);
    sub_100A1CFBC(a2, v57);
    v65 = (uint64_t)v90;
    v64 = (uint64_t)v91;
LABEL_25:
    sub_100A0F550(v57);
    sub_100A0F550(v58);
    sub_100A1CFBC(a1, v63);
    sub_100A1CFBC(a2, v65);
LABEL_26:
    sub_100A0F550(v65);
    sub_100A0F550(v63);
    sub_100A1CFBC(a1, v64);
    v66 = v92;
    sub_100A1CFBC(a2, v92);
    goto LABEL_27;
  }
LABEL_30:
  sub_1008D8CD8(*(_QWORD *)&v29[v4[11]], *(_QWORD *)&v26[v4[11]]);
  v71 = v70;
  sub_100A0F550((uint64_t)v29);
  sub_100A0F550((uint64_t)v26);
  v59 = v83;
  sub_100A1CFBC(a1, v83);
  v60 = v84;
  sub_100A1CFBC(a2, v84);
  if ((v71 & 1) == 0)
    goto LABEL_23;
  type metadata accessor for CGImage(0);
  v73 = v72;
  v74 = v50[7];
  v75 = *(_QWORD *)(v59 + v74);
  v76 = *(_QWORD *)(v60 + v74);
  v77 = sub_1004B7878(&qword_101402770, (uint64_t (*)(uint64_t))type metadata accessor for CGImage, (uint64_t)&unk_100EF19C0);
  LOBYTE(v75) = static _CFObject.== infix(_:_:)(v75, v76, v73, v77);
  sub_100A0F550(v59);
  sub_100A0F550(v60);
  v61 = v85;
  sub_100A1CFBC(a1, v85);
  v62 = v86;
  sub_100A1CFBC(a2, v86);
  v63 = (uint64_t)v89;
  if ((v75 & 1) == 0)
    goto LABEL_24;
  v78 = *(unsigned __int8 *)(v61 + v50[12]);
  sub_100A0F550(v61);
  v79 = *(unsigned __int8 *)(v62 + v50[12]);
  sub_100A0F550(v62);
  sub_100A1CFBC(a1, v58);
  sub_100A1CFBC(a2, v57);
  v65 = (uint64_t)v90;
  v64 = (uint64_t)v91;
  if (v78 != v79)
    goto LABEL_25;
  v80 = *(unsigned __int8 *)(v58 + v50[13]);
  sub_100A0F550(v58);
  v81 = *(unsigned __int8 *)(v57 + v50[13]);
  sub_100A0F550(v57);
  sub_100A1CFBC(a1, v63);
  sub_100A1CFBC(a2, v65);
  if (v80 != v81)
    goto LABEL_26;
  v82 = static Date.== infix(_:_:)(v63 + v50[5], v65 + v50[5]);
  sub_100A0F550(v65);
  sub_100A0F550(v63);
  sub_100A1CFBC(a1, v64);
  v66 = v92;
  sub_100A1CFBC(a2, v92);
  if ((v82 & 1) != 0)
  {
    v67 = static Date.== infix(_:_:)(v64 + v50[6], v66 + v50[6]);
    goto LABEL_28;
  }
LABEL_27:
  v67 = 0;
LABEL_28:
  sub_100A0F550(v66);
  sub_100A0F550(v64);
  return v67 & 1;
}

uint64_t sub_100A1CFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13ItemViewModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_100A1D000()
{
  return &off_101271D70;
}

void sub_100A1D00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *Strong;
  id v4;
  uint64_t v5;
  uint64_t KeyPath;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  _BYTE *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_icc);
  v4 = objc_msgSend(Strong, "commandController");

  if (v4)
  {
    sub_1006A9664(0);

  }
  sub_100721234(-1);
  sub_100721108();
  if (v5 <= 0)
  {
    KeyPath = swift_getKeyPath(aH_2);
    v7 = sub_10073138C();
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
      v12 = objc_msgSend(objc_allocWithZone((Class)CRLCommandSelectionBehavior), "initWithCommitSelectionPath:forwardSelectionPath:reverseSelectionPath:", v11, v11, v11);
      v13 = (char *)*(id *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
      swift_retain(KeyPath);
      v14 = (_BYTE *)sub_100738CDC(v13, v9, v10, KeyPath, 0);

      swift_release(KeyPath);
      v15 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      v16 = objc_msgSend(v15, "commandController");

      if (v16)
      {
        v17 = v12;
        sub_1006A5F54(v14, 0, v12, 4, 0);

      }
      sub_100732578(KeyPath);
      swift_release(KeyPath);

    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2939, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2u, 2939, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      swift_release(KeyPath);
    }
  }
  v18 = (void *)swift_unknownObjectWeakLoadStrong(v2);
  v19 = objc_msgSend(v18, "commandController");

  if (v19)
  {
    sub_1006A984C(0);

  }
}

uint64_t sub_100A1D390(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  id v7;
  NSString v8;
  _OWORD v10[2];

  if (a3)
  {
    v5 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v10, v6);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    v7 = a1;
  }
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "insertText:", v8);

  return sub_1004D28EC((uint64_t)v10);
}

void sub_100A1D42C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  objc_super v17;

  v1 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v1)
    goto LABEL_13;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    return;
  sub_100736D9C();
  if (!v2)
    return;
  v3 = objc_msgSend(v2, "selectedTextRange");
  if (!v3)
    return;
  v4 = v3;
  v5 = *(id *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper];
  v6 = (char *)objc_msgSend(v4, "start");
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  v8 = objc_msgSend(v5, "charIndexForBeginningOfLineFromCharIndex:", v7);
  v9 = (char *)objc_msgSend(v4, "end");
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v10 < (uint64_t)v8)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v11 = (objc_class *)type metadata accessor for CRLTextRange();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(_QWORD *)v14 = v8;
  *((_QWORD *)v14 + 1) = v10;
  *(_QWORD *)&v12[v13] = 0;
  v17.receiver = v12;
  v17.super_class = v11;
  v15 = objc_msgSendSuper2(&v17, "init");
  if ((objc_msgSend(v15, "isEmpty") & 1) == 0)
  {
    sub_100736D9C();
    if (v16)
      objc_msgSend(v16, "setSelectedTextRange:", v15);
    objc_msgSend(v0, "deleteCurrentSelection");
  }

}

void sub_100A1D5FC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;

  sub_100736D9C();
  if (v1)
  {
    v2 = objc_msgSend(v1, "selectedTextRange");
    if (v2)
    {
      v14 = v2;
      if (!objc_msgSend(v2, "isEmpty"))
      {
LABEL_7:
        sub_10072A67C();

        return;
      }
      v3 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v3)
      {
        v4 = v3;
        v5 = (char *)objc_msgSend(v14, "start");
        v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        v7 = objc_msgSend(v4, "wordAtCharIndex:includePreviousWord:", v6, 0);
        v9 = v8;

        sub_100736D9C();
        if (v10)
        {
          v11 = v10;
          v12 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
          swift_unknownObjectRetain(v11);
          v13 = (void *)sub_10060EDE4((uint64_t)v7, v9);
          objc_msgSend(v11, "setSelectedTextRange:", v13);
          swift_unknownObjectRelease(v11);

        }
        goto LABEL_7;
      }
      __break(1u);
    }
  }
}

void sub_100A1D7D4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;

  v1 = v0;
  sub_100736D9C();
  if (v2)
  {
    v3 = objc_msgSend(v2, "selectedTextRange");
    if (v3)
    {
      v15 = v3;
      if (!objc_msgSend(v3, "isEmpty"))
      {
LABEL_7:
        objc_msgSend(v1, "deleteCurrentSelection");

        return;
      }
      v4 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (v4)
      {
        v5 = v4;
        v6 = (char *)objc_msgSend(v15, "start");
        v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        v8 = objc_msgSend(v5, "findRangeOfWordBackwardFromCharIndex:expandingRangeToEndOfWord:", v7, 0);
        v10 = v9;

        sub_100736D9C();
        if (v11)
        {
          v12 = v11;
          v13 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
          swift_unknownObjectRetain(v12);
          v14 = (void *)sub_10060EDE4((uint64_t)v8, v10);
          objc_msgSend(v12, "setSelectedTextRange:", v14);
          swift_unknownObjectRelease(v12);

        }
        goto LABEL_7;
      }
      __break(1u);
    }
  }
}

uint64_t sub_100A1D960(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_OWORD *, uint64_t, __n128))
{
  id v9;
  uint64_t v10;
  __n128 v11;
  id v12;
  _OWORD v14[2];

  if (a3)
  {
    v9 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v14, v10);
    v11 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
    v12 = a1;
  }
  a5(v14, a4, v11);

  return sub_1004D28EC((uint64_t)v14);
}

void sub_100A1DA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  objc_super v15;

  v1 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    return;
  sub_100736D9C();
  if (v3)
  {
    v4 = *(void **)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v4)
    {
      v5 = v3;
      swift_unknownObjectRetain(v3);
      v6 = v4;
      v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(v6, "length"), 0);
      NSNotFound.getter(v7);
      v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
      v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
      v10 = (objc_class *)type metadata accessor for CRLTextRange();
      v11 = (char *)objc_allocWithZone(v10);
      v12 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
      *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
      *(_QWORD *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
      v13 = &v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      *(_QWORD *)v13 = v8;
      *((_QWORD *)v13 + 1) = v8;
      *(_QWORD *)&v11[v12] = v9;
      v15.receiver = v11;
      v15.super_class = v10;
      v14 = objc_msgSendSuper2(&v15, "init");

      objc_msgSend(v5, "setSelectedTextRange:", v14);
      swift_unknownObjectRelease(v5);

      goto LABEL_6;
    }
LABEL_9:
    __break(1u);
    return;
  }
LABEL_6:
  sub_100727440(0, 1);
}

void sub_100A1DC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  void *v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  objc_class *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  objc_super v33;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E8570);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  v12 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v12)
    goto LABEL_13;
  if (!*(_QWORD *)(v12 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
  {
    sub_100736D9C();
    if (v13)
    {
      v32 = (char *)objc_msgSend(v13, "selectedTextRange");
      if (v32)
      {
        sub_100736D9C();
        if (!v14)
        {
LABEL_11:
          sub_100727440(0, 1);

          return;
        }
        v15 = *(char **)(*(_QWORD *)(v0 + v11) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v15)
          goto LABEL_14;
        v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
        if (!v16)
        {
LABEL_15:
          __break(1u);
          return;
        }
        v17 = v14;
        (*(void (**)(void))(*(_QWORD *)v16 + 760))();
        sub_1004D29BC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10);
        v31 = v17;
        swift_unknownObjectRetain(v17);
        v18 = v15;
        sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
        sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLWPStorageCRDTData);
        v19 = (void *)CRAttributedString.attributedString.getter(v1);
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        v20 = objc_msgSend(v19, "length");

        v21 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", v20, 0);
        v22 = *(_QWORD *)&v32[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        v23 = *(_QWORD *)&v21[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
        if (v23 >= v22)
        {
          v24 = v21;
          v25 = (objc_class *)type metadata accessor for CRLTextRange();
          v26 = (char *)objc_allocWithZone(v25);
          v27 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          v28 = &v26[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(_QWORD *)v28 = v22;
          *((_QWORD *)v28 + 1) = v23;
          *(_QWORD *)&v26[v27] = 0;
          v33.receiver = v26;
          v33.super_class = v25;
          v29 = objc_msgSendSuper2(&v33, "init");

          v30 = v31;
          objc_msgSend(v31, "setSelectedTextRange:", v29);
          swift_unknownObjectRelease(v30);

          goto LABEL_11;
        }
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
  }
}

id sub_100A1DFA8()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v1)
  {
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper), "moveToEndOfParagraph:", 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100A1E168()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;

  sub_10072284C();
  sub_100736D9C();
  if (!v1)
    goto LABEL_4;
  v2 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v2)
  {
    v3 = v1;
    swift_unknownObjectRetain(v1);
    v4 = v2;
    v5 = (void *)sub_100A1EDA0(v4);

    objc_msgSend(v3, "setSelectedTextRange:", v5);
    swift_unknownObjectRelease(v3);

LABEL_4:
    sub_100727440(0, 0);
    sub_10072297C();
    return;
  }
  __break(1u);
}

uint64_t sub_100A1E210(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, __n128))
{
  id v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  _OWORD v12[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v12, v8);
    v10 = swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    v9 = a1;
  }
  a4(v9, v10);

  return sub_1004D28EC((uint64_t)v12);
}

void sub_100A1E2D4(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD v15[3];
  uint64_t v16;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v3)
  {
    if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper);
      sub_1004F370C(a1, (uint64_t)v15);
      v6 = v16;
      if (v16)
      {
        v7 = sub_1004BB5A4(v15, v16);
        v8 = *(_QWORD *)(v6 - 8);
        v9 = __chkstk_darwin(v7);
        v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
        v12 = v5;
        v13 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v6);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
      }
      else
      {
        v14 = v5;
        v13 = 0;
      }
      objc_msgSend(v5, *a2, v13);

      swift_unknownObjectRelease(v13);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_100A1E43C(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  double result;
  _QWORD v15[3];
  uint64_t v16;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper);
  sub_1004F370C(a1, (uint64_t)v15);
  v5 = v16;
  if (v16)
  {
    v6 = sub_1004BB5A4(v15, v16);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = __chkstk_darwin(v6);
    v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    v11 = v4;
    v12 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
  }
  else
  {
    v13 = v4;
    v12 = 0;
  }
  objc_msgSend(v4, *a2, v12);

  *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
  return result;
}

void sub_100A1E5C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  id v6;
  char v7;
  id v8;
  char v9;
  uint64_t v10;
  char *v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  id v26;
  char v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;

  v3 = v2;
  type metadata accessor for CRLTextInputModifierKeyMask();
  if (qword_1013DD468 != -1)
    swift_once(&qword_1013DD468, sub_1008ED684);
  v6 = (id)qword_10147FE40;
  v7 = static NSObject.== infix(_:_:)(a2, v6);

  if ((v7 & 1) != 0)
  {
    switch(a1)
    {
      case 1:
        objc_msgSend(v2, "moveLeft:", v2);
        return;
      case 2:
        objc_msgSend(v2, "moveRight:", v2);
        return;
      case 3:
        objc_msgSend(v2, "moveUp:", v2);
        return;
      case 4:
        objc_msgSend(v2, "moveDown:", v2);
        return;
      default:
        goto LABEL_74;
    }
  }
  if (qword_1013DD470 != -1)
    swift_once(&qword_1013DD470, sub_1008ED6F4);
  v8 = (id)qword_10147FE48;
  v9 = static NSObject.== infix(_:_:)(a2, v8);

  if ((v9 & 1) != 0)
  {
    v10 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v10)
    {
      if (!*(_QWORD *)(v10 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      {
        switch(a1)
        {
          case 1:
            v33 = type metadata accessor for CRLWPEditor(0);
            v32[0] = v2;
            v11 = v2;
            sub_100727428((uint64_t)v32);
            goto LABEL_44;
          case 2:
            v33 = type metadata accessor for CRLWPEditor(0);
            v32[0] = v2;
            v24 = v2;
            sub_100727410((uint64_t)v32);
            goto LABEL_44;
          case 3:
            v33 = type metadata accessor for CRLWPEditor(0);
            v32[0] = v2;
            v23 = v2;
            sub_1007272B8((uint64_t)v32);
            goto LABEL_44;
          case 4:
            v33 = type metadata accessor for CRLWPEditor(0);
            v32[0] = v2;
            v25 = v2;
            sub_1007272A0((uint64_t)v32);
LABEL_44:
            sub_1004D28EC((uint64_t)v32);
            return;
          default:
            goto LABEL_74;
        }
      }
      return;
    }
    __break(1u);
    goto LABEL_70;
  }
  if (qword_1013DD478 != -1)
    swift_once(&qword_1013DD478, sub_1008ED768);
  v12 = (id)qword_10147FE50;
  v13 = static NSObject.== infix(_:_:)(a2, v12);

  if ((v13 & 1) != 0)
  {
    v14 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (!v14)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (!*(_QWORD *)(v14 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      switch(a1)
      {
        case 1:
          objc_msgSend(v2, "moveWordLeft:", v2);
          return;
        case 2:
          objc_msgSend(v2, "moveWordRight:", v2);
          return;
        case 3:
          objc_msgSend(v2, "moveToLeftEndOfLine:", v2);
          return;
        case 4:
          objc_msgSend(v2, "moveToRightEndOfLine:", v2);
          return;
        default:
          goto LABEL_74;
      }
    }
  }
  else
  {
    if (qword_1013DD480 != -1)
      swift_once(&qword_1013DD480, sub_1008ED7DC);
    v15 = (id)qword_10147FE58;
    v16 = static NSObject.== infix(_:_:)(a2, v15);

    if ((v16 & 1) != 0)
      goto LABEL_27;
    if (qword_1013DD488 != -1)
      swift_once(&qword_1013DD488, sub_1008ED850);
    v17 = (id)qword_10147FE60;
    v18 = static NSObject.== infix(_:_:)(a2, v17);

    if ((v18 & 1) != 0)
    {
LABEL_27:
      v19 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (!v19)
      {
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (!*(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      {
        switch(a1)
        {
          case 1:
            objc_msgSend(v2, "moveToBeginningOfLine:", v2);
            return;
          case 2:
            objc_msgSend(v2, "moveToEndOfLine:", v2);
            return;
          case 3:
            objc_msgSend(v2, "moveToBeginningOfDocument:", v2);
            return;
          case 4:
            objc_msgSend(v2, "moveToEndOfDocument:", v2);
            return;
          default:
            goto LABEL_74;
        }
      }
    }
    else
    {
      if (qword_1013DD490 != -1)
        swift_once(&qword_1013DD490, sub_1008ED8C4);
      v20 = (id)qword_10147FE68;
      v21 = static NSObject.== infix(_:_:)(a2, v20);

      if ((v21 & 1) != 0)
      {
        v22 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                        + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v22)
        {
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
        if (!*(_QWORD *)(v22 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
        {
          switch(a1)
          {
            case 1:
              objc_msgSend(v2, "moveWordLeftAndModifySelection:", v2);
              return;
            case 2:
              objc_msgSend(v2, "moveWordRightAndModifySelection:", v2);
              return;
            case 3:
              objc_msgSend(v2, "moveParagraphBackwardAndModifySelection:", v2);
              return;
            case 4:
              objc_msgSend(v2, "moveParagraphForwardAndModifySelection:", v2);
              return;
            default:
              goto LABEL_74;
          }
        }
      }
      else
      {
        if (qword_1013DD498 != -1)
          swift_once(&qword_1013DD498, sub_1008ED904);
        v26 = (id)qword_10147FE70;
        v27 = static NSObject.== infix(_:_:)(a2, v26);

        if ((v27 & 1) == 0)
        {
          if (qword_1013DD4A0 != -1)
            swift_once(&qword_1013DD4A0, sub_1008EDA14);
          v28 = (id)qword_10147FE78;
          v29 = static NSObject.== infix(_:_:)(a2, v28);

          if ((v29 & 1) == 0)
          {
            sub_100757E04(&_mh_execute_header, (uint64_t)"arrowKeyReceived(in:with:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor+CRLKeyInputReceiving.swift", 105, 2, 618, "Unhandled arrow key modifier.", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"arrowKeyReceived(in:with:)", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor+CRLKeyInputReceiving.swift", 105, 2u, 618, (uint64_t)"Unhandled arrow key modifier.", 29, 2u);
            return;
          }
        }
        v30 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                        + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v30)
        {
LABEL_73:
          __break(1u);
LABEL_74:
          type metadata accessor for CRLTextInputArrowKeyDirection(0);
          v32[0] = a1;
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v31, v32, v31, &type metadata for UInt);
          __break(1u);
          JUMPOUT(0x100A1ECE4);
        }
        if (!*(_QWORD *)(v30 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
        {
          switch(a1)
          {
            case 1:
              objc_msgSend(v3, "moveToBeginningOfLineAndModifySelection:", v3);
              return;
            case 2:
              objc_msgSend(v3, "moveToEndOfLineAndModifySelection:", v3);
              return;
            case 3:
              objc_msgSend(v3, "moveToBeginningOfDocumentAndModifySelection:", v3);
              return;
            case 4:
              objc_msgSend(v3, "moveToEndOfDocumentAndModifySelection:", v3);
              return;
            default:
              goto LABEL_74;
          }
        }
      }
    }
  }
}

uint64_t sub_100A1EDA0(void *a1)
{
  char *v2;
  char *v3;
  uint64_t result;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  objc_super v14;

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", 0, 0);
  v3 = (char *)objc_msgSend(a1, "length");
  result = NSNotFound.getter(v3);
  if ((uint64_t)v3 >= result)
    v5 = 0;
  else
    v5 = v3;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  v7 = &v5[v6];
  if (__OFADD__(v6, v5))
  {
    __break(1u);
  }
  else if ((uint64_t)v7 >= v6)
  {
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    v9 = (objc_class *)type metadata accessor for CRLTextRange();
    v10 = (char *)objc_allocWithZone(v9);
    v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(_QWORD *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(_QWORD *)v12 = v6;
    *((_QWORD *)v12 + 1) = v7;
    *(_QWORD *)&v10[v11] = v8;
    v14.receiver = v10;
    v14.super_class = v9;
    v13 = objc_msgSendSuper2(&v14, "init");

    return (uint64_t)v13;
  }
  __break(1u);
  return result;
}

void sub_100A1EEB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  char *v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[5];
  uint64_t v49;

  v2 = sub_1004B804C(&qword_101402B80);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s13ItemViewModelVMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v41 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v39 = (uint64_t)&v38 - v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = _s8ItemDataCMa(0);
    v13 = sub_100A24294();
    v14 = Set.Iterator.init(_cocoa:)(v48, v11, v12, v13);
    a1 = v48[0];
    v45 = v48[1];
    v15 = v48[2];
    v16 = v48[3];
    v17 = v48[4];
  }
  else
  {
    v18 = -1 << *(_BYTE *)(a1 + 32);
    v19 = *(_QWORD *)(a1 + 56);
    v45 = a1 + 56;
    v15 = ~v18;
    v20 = -v18;
    if (v20 < 64)
      v21 = ~(-1 << v20);
    else
      v21 = -1;
    v17 = v21 & v19;
    swift_bridgeObjectRetain(a1);
    v16 = 0;
  }
  v40 = v15;
  v42 = _swiftEmptyArrayStorage;
  v44 = (unint64_t)(v15 + 64) >> 6;
  v43 = (char *)&type metadata for Swift.AnyObject + 8;
  v46 = a1;
LABEL_11:
  v22 = v16;
  v23 = v17;
  if (a1 < 0)
  {
    do
    {
      v25 = __CocoaSet.Iterator.next()(v14);
      if (!v25)
        goto LABEL_42;
      v26 = v25;
      v47 = v25;
      v27 = _s8ItemDataCMa(0);
      swift_unknownObjectRetain(v26);
      swift_dynamicCast(&v49, &v47, v43, v27, 7);
      v28 = v49;
      swift_unknownObjectRelease(v26);
      v16 = v22;
      v17 = v23;
      if (!v28)
        goto LABEL_42;
LABEL_34:
      sub_1004B8460(v28 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata, (uint64_t)v4, _s13ItemViewModelVMa);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      v32 = swift_release(v28);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v32) != 1)
      {
        v33 = v39;
        sub_1004B84E0((uint64_t)v4, v39, _s13ItemViewModelVMa);
        sub_1004B84E0(v33, v41, _s13ItemViewModelVMa);
        if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
          v42 = (double *)sub_100D10F7C(0, *((_QWORD *)v42 + 2) + 1, 1, (unint64_t)v42);
        a1 = v46;
        v35 = *((_QWORD *)v42 + 2);
        v34 = *((_QWORD *)v42 + 3);
        if (v35 >= v34 >> 1)
          v42 = (double *)sub_100D10F7C(v34 > 1, v35 + 1, 1, (unint64_t)v42);
        v36 = v41;
        v37 = v42;
        *((_QWORD *)v42 + 2) = v35 + 1;
        v14 = (_QWORD *)sub_1004B84E0(v36, (uint64_t)v37+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v35, _s13ItemViewModelVMa);
        goto LABEL_11;
      }
      v14 = (_QWORD *)sub_1004CB800((uint64_t)v4, &qword_101402B80);
      v22 = v16;
      v23 = v17;
      a1 = v46;
    }
    while (v46 < 0);
  }
  if (v23)
  {
    v17 = (v23 - 1) & v23;
    v24 = __clz(__rbit64(v23)) | (v22 << 6);
    v16 = v22;
    goto LABEL_33;
  }
  v29 = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    if (v29 < v44)
    {
      v30 = *(_QWORD *)(v45 + 8 * v29);
      v16 = v22 + 1;
      if (v30)
        goto LABEL_32;
      v16 = v22 + 2;
      if (v22 + 2 >= v44)
        goto LABEL_42;
      v30 = *(_QWORD *)(v45 + 8 * v16);
      if (v30)
        goto LABEL_32;
      v16 = v22 + 3;
      if (v22 + 3 >= v44)
        goto LABEL_42;
      v30 = *(_QWORD *)(v45 + 8 * v16);
      if (v30)
        goto LABEL_32;
      v16 = v22 + 4;
      if (v22 + 4 >= v44)
        goto LABEL_42;
      v30 = *(_QWORD *)(v45 + 8 * v16);
      if (v30)
      {
LABEL_32:
        v17 = (v30 - 1) & v30;
        v24 = __clz(__rbit64(v30)) + (v16 << 6);
LABEL_33:
        v28 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v24);
        swift_retain(v28);
        if (v28)
          goto LABEL_34;
        goto LABEL_42;
      }
      v16 = v22 + 5;
      if (v22 + 5 < v44)
      {
        v30 = *(_QWORD *)(v45 + 8 * v16);
        if (!v30)
        {
          v31 = v22 + 6;
          while (v44 != v31)
          {
            v30 = *(_QWORD *)(v45 + 8 * v31++);
            if (v30)
            {
              v16 = v31 - 1;
              a1 = v46;
              goto LABEL_32;
            }
          }
          goto LABEL_42;
        }
        goto LABEL_32;
      }
    }
LABEL_42:
    sub_1004D284C(v46);
    return;
  }
  __break(1u);
}

void sub_100A1F330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;

  v44 = sub_1004B804C(&qword_101405DF0);
  __chkstk_darwin(v44);
  v43 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v41 = (char *)&v38 - v4;
  __chkstk_darwin(v5);
  v42 = (char *)&v38 - v6;
  v47 = (unint64_t)_swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v45 = a1;
  swift_bridgeObjectRetain(a1);
  v11 = 0;
  v12 = (uint64_t)v41;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v46 = v11;
  for (i = v13 | (v11 << 6); ; i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    v19 = v45;
    v20 = *(_QWORD *)(v45 + 48);
    v21 = type metadata accessor for UUID(0);
    v22 = *(_QWORD **)(v21 - 8);
    v23 = v20 + v22[9] * i;
    v24 = (void (*)(char *, uint64_t, uint64_t))v22[2];
    v25 = (uint64_t)v42;
    v24(v42, v23, v21);
    v26 = *(void **)(*(_QWORD *)(v19 + 56) + 8 * i);
    v27 = v44;
    *(_QWORD *)(v25 + *(int *)(v44 + 48)) = v26;
    sub_1004C4938(v25, v12, &qword_101405DF0);
    v28 = *(int *)(v27 + 48);
    v29 = v43;
    v24(v43, v12, v21);
    v30 = *(void **)(v12 + v28);
    *(_QWORD *)&v29[v28] = v30;
    v31 = (void (*)(char *, uint64_t))v22[1];
    v32 = v26;
    v33 = v30;
    v31(v29, v21);
    v34 = sub_1004CB800(v12, &qword_101405DF0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
    v36 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v35 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v36 >= v35 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
    v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v33);
    specialized Array._endMutation()(v37);
    v11 = v46;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v15 >= v40)
      goto LABEL_25;
    v16 = *(_QWORD *)(v39 + 8 * v15);
    v17 = v11 + 1;
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v40)
        goto LABEL_25;
      v16 = *(_QWORD *)(v39 + 8 * v17);
      if (!v16)
      {
        v17 = v11 + 3;
        if (v11 + 3 >= v40)
          goto LABEL_25;
        v16 = *(_QWORD *)(v39 + 8 * v17);
        if (!v16)
        {
          v17 = v11 + 4;
          if (v11 + 4 >= v40)
            goto LABEL_25;
          v16 = *(_QWORD *)(v39 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_20:
    v10 = (v16 - 1) & v16;
    v46 = v17;
  }
  v18 = v11 + 5;
  if (v11 + 5 >= v40)
  {
LABEL_25:
    swift_release(v45);
    return;
  }
  v16 = *(_QWORD *)(v39 + 8 * v18);
  if (v16)
  {
    v17 = v11 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v40)
      goto LABEL_25;
    v16 = *(_QWORD *)(v39 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_100A1F658()
{
  return sub_10063D0E4((uint64_t)&unk_100F22F70, (uint64_t)&unk_100F22F98);
}

uint64_t sub_100A1F66C()
{
  return sub_10063D0E4((uint64_t)&unk_100F22FB8, (uint64_t)&unk_100F22FE0);
}

uint64_t sub_100A1F680()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_100F23000);
  v2 = swift_getKeyPath(&unk_100F23028);
  static Published.subscript.getter(&v8, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v8;
  v4 = swift_getKeyPath(&unk_100F23048);
  v5 = swift_getKeyPath(&unk_100F23070);
  static Published.subscript.getter(&v8, v0, v4, v5);
  swift_release(v4);
  swift_release(v5);
  v6 = v8;
  v8 = v3;
  sub_100620D7C(v6);
  return v8;
}

uint64_t sub_100A1F748()
{
  return sub_10063D0E4((uint64_t)&unk_100F23000, (uint64_t)&unk_100F23028);
}

uint64_t sub_100A1F75C()
{
  return sub_10063D0E4((uint64_t)&unk_100F23048, (uint64_t)&unk_100F23070);
}

uint64_t sub_100A1F770(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  char *v34;
  double *v35;

  v33 = a1;
  v2 = sub_1004B804C(&qword_1013E01F0);
  __chkstk_darwin(v2);
  v34 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004B804C((uint64_t *)&unk_101402BA8);
  v32 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101402BA0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_101402B98);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__itemViewModels;
  v35 = _swiftEmptyArrayStorage;
  v16 = sub_1004B804C(&qword_1013F0F30);
  Published.init(initialValue:)(&v35, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v15, v14, v11);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortStyle) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortAscending) = 1;
  v17 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categories;
  v35 = _swiftEmptyArrayStorage;
  v18 = sub_1004B804C(&qword_1014028E8);
  Published.init(initialValue:)(&v35, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17, v10, v7);
  v19 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__topLevelFilterViewModels;
  v35 = _swiftEmptyArrayStorage;
  v20 = sub_1004B804C(&qword_1013F0FB8);
  Published.init(initialValue:)(&v35, v20);
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 32);
  v21(v19, v6, v4);
  v22 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categoryFilterViewModels;
  v35 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(&v35, v20);
  v21(v22, v6, v4);
  v23 = v33;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_realDataStore) = v33;
  v24 = type metadata accessor for CRLStencilLibrary.FakeDataStore();
  v25 = swift_allocObject(v24, 32, 7);
  *(_QWORD *)(v25 + 16) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v25 + 24) = v23;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_fakeDataStore) = v25;
  v26 = v23;
  sub_100A20498();
  v27 = type metadata accessor for TaskPriority(0);
  v28 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v34, 1, 1, v27);
  v29 = (_QWORD *)swift_allocObject(&unk_101291630, 40, 7);
  v29[2] = 0;
  v29[3] = 0;
  v29[4] = v1;
  swift_retain(v1);
  v30 = sub_100618920(v28, (uint64_t)&unk_101402BC0, (uint64_t)v29);
  swift_release(v30);

  return v1;
}

uint64_t sub_100A1FA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_100A1FAA4, 0, 0);
}

uint64_t sub_100A1FAA4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_101402BCC);
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_100A1FB00;
  return sub_100A1FB48(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100A1FB00()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100A1FB48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[5] = a1;
  v2[6] = v1;
  v3 = type metadata accessor for URL.DirectoryHint(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v2[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[11] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v7);
  v2[13] = swift_task_alloc(v7);
  return swift_task_switch(sub_100A1FC0C, 0, 0);
}

uint64_t sub_100A1FC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  __n128 v9;
  void (*v10)(uint64_t, uint64_t, __n128);
  id v11;
  NSURL *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  __n128 v30;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8 = objc_msgSend(v7, "bundleURL");

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v8);
  *(_QWORD *)(v0 + 16) = 0x736C69636E657453;
  *(_QWORD *)(v0 + 24) = 0xE800000000000000;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
  sub_1004D292C();
  URL.appending<A>(path:directoryHint:)(v0 + 16, v4, &type metadata for String);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v9 = swift_bridgeObjectRelease();
  v10 = *(void (**)(uint64_t, uint64_t, __n128))(v3 + 8);
  *(_QWORD *)(v0 + 112) = v10;
  v10(v1, v2, v9);
  v11 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v12);
  v14 = v13;
  *(_QWORD *)(v0 + 32) = 0;
  v15 = objc_msgSend(v11, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v13, 0, 0, v0 + 32);

  v16 = *(void **)(v0 + 32);
  if (v15)
  {
    v18 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 48);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, *(_QWORD *)(v0 + 80));
    *(_QWORD *)(v0 + 120) = v19;
    v20 = v16;

    v21 = swift_allocObject(&unk_101291658, 24, 7);
    *(_QWORD *)(v0 + 128) = v21;
    swift_weakInit(v21 + 16, v17);
    v22 = (_QWORD *)swift_task_alloc(48);
    *(_QWORD *)(v0 + 136) = v22;
    v22[2] = v21;
    v22[3] = v19;
    v22[4] = v18;
    v23 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
    *(_QWORD *)(v0 + 144) = v23;
    *v23 = v0;
    v23[1] = sub_100A1FF10;
    return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v23, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_101402BE0, v22, (char *)&type metadata for () + 8);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 96);
    v25 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 80);
    v29 = v16;
    _convertNSErrorToError(_:)(v16);

    swift_willThrow(v30);
    ((void (*)(uint64_t, uint64_t))v10)(v25, v27);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A1FF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_bridgeObjectRelease();
  swift_release(v2);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100A1FFB4, 0, 0);
}

uint64_t sub_100A1FFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD))(v0 + 112))(v1, *(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A20040(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  v4 = type metadata accessor for Date(0);
  v3[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[15] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[16] = swift_task_alloc(v6);
  v3[17] = swift_task_alloc(v6);
  v7 = type metadata accessor for UUID(0);
  v3[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[19] = v8;
  v3[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s13ItemViewModelVMa(0);
  v3[21] = v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v10);
  v3[23] = swift_task_alloc(v10);
  v3[24] = swift_task_alloc(v10);
  return swift_task_switch(sub_100A2011C, 0, 0);
}

id sub_100A2011C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  id v7;
  __n128 v8;
  uint64_t v9;
  id result;
  id v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = *(_QWORD *)(v1 + 184);
  v3 = *(int **)(v1 + 168);
  v29 = *(_QWORD *)(v1 + 160);
  v30 = *(_QWORD *)(v1 + 152);
  v32 = *(_QWORD *)(v1 + 144);
  v4 = *(uint64_t **)(v1 + 96);
  UUID.init()(a1);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(v4 + 1);
  sub_1004C4938((uint64_t)(v4 + 3), v1 + 56, (uint64_t *)&unk_1013E1C80);
  *(_QWORD *)(v1 + 72) = v4[5];
  *(_QWORD *)(v1 + 80) = v4[6];
  v5 = *v4;
  v6 = objc_allocWithZone((Class)UIImage);
  sub_1006E1190(v1 + 40);
  sub_1006CD6A4((_QWORD *)(v1 + 72));
  sub_1006CD6A4((_QWORD *)(v1 + 80));
  sub_1006E1190(v1 + 56);
  v7 = objc_msgSend(v6, "initWithCGImage:", v5);
  v27 = *((_BYTE *)v4 + 56);
  v28 = *((_BYTE *)v4 + 57);
  v9 = static Date.now.getter(v8);
  static Date.distantPast.getter(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v2, v29, v32);
  *(_OWORD *)(v2 + v3[8]) = *(_OWORD *)(v1 + 40);
  sub_1004C4938(v1 + 56, v2 + v3[9], (uint64_t *)&unk_1013E1C80);
  *(_QWORD *)(v2 + v3[10]) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v2 + v3[11]) = *(_QWORD *)(v1 + 80);
  v31 = v7;
  result = objc_msgSend(v7, "CGImage");
  if (result)
  {
    v11 = result;
    v12 = *(_QWORD *)(v1 + 184);
    v13 = *(int **)(v1 + 168);
    v23 = *(_QWORD *)(v1 + 192);
    v24 = *(_QWORD *)(v1 + 176);
    v14 = *(_QWORD *)(v1 + 152);
    v15 = *(_QWORD *)(v1 + 160);
    v17 = *(_QWORD *)(v1 + 136);
    v16 = *(_QWORD *)(v1 + 144);
    v18 = *(_QWORD *)(v1 + 120);
    v33 = *(_QWORD *)(v1 + 128);
    v19 = *(_QWORD *)(v1 + 112);
    v25 = *(_QWORD *)(v1 + 88);
    v26 = *(_QWORD *)(v1 + 104);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    *(_QWORD *)(v12 + v13[7]) = v11;
    *(_BYTE *)(v12 + v13[12]) = v27;
    *(_BYTE *)(v12 + v13[13]) = v28;
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v20(v12 + v13[5], v17, v19);
    v20(v12 + v13[6], v33, v19);
    sub_1004B84E0(v12, v23, _s13ItemViewModelVMa);
    sub_1004B8460(v23, v24, _s13ItemViewModelVMa);
    v21 = _s8ItemDataCMa(0);
    v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
    *(_QWORD *)(v22 + 16) = v25;
    sub_1004B84E0(v24, v22 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata, _s13ItemViewModelVMa);
    swift_beginAccess(*(_QWORD *)(v26 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_fakeDataStore) + 16, v1 + 16, 33, 0);
    swift_bridgeObjectRetain(v25);
    swift_retain(v22);
    sub_100ADACA8(&v34, v22);
    swift_endAccess(v1 + 16);
    swift_release(v34);
    sub_100A20498();
    swift_release(v22);
    sub_1004B84A4(v23, _s13ItemViewModelVMa);
    swift_task_dealloc(v23);
    swift_task_dealloc(v12);
    swift_task_dealloc(v24);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    swift_task_dealloc(v33);
    return (id)(*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A2045C(_QWORD *a1, uint64_t a2)
{
  return sub_100A1C8AC(*a1 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata, a2) & 1;
}

void sub_100A20498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double *v39;
  double *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double *v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  BOOL (**v71)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  double *v96;
  unint64_t v97[2];
  char v98[32];

  v1 = sub_1004B804C(&qword_1013F0F78);
  __chkstk_darwin(v1);
  v94 = (uint64_t)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = _s15FilterViewModelVMa(0);
  v95 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v92 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v91 = (char *)&v79 - v5;
  __chkstk_darwin(v6);
  v82 = (uint64_t)&v79 - v7;
  v90 = _s17CategoryViewModelVMa(0);
  v86 = *(_QWORD *)(v90 - 8);
  v8 = *(_QWORD *)(v86 + 64);
  __chkstk_darwin(v90);
  v89 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v88 = (uint64_t)&v79 - v10;
  __chkstk_darwin(v11);
  v87 = (uint64_t)&v79 - v12;
  v13 = _s13ItemViewModelVMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_fakeDataStore);
  swift_beginAccess(v17 + 16, v98, 0, 0);
  v18 = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRetain(v18);
  sub_100A1EEB8(v19);
  v21 = v20;
  swift_bridgeObjectRelease(v18);
  v22 = *(_BYTE *)(v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortAscending);
  v81 = v0;
  LODWORD(v18) = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortStyle);
  v97[0] = v21;
  swift_bridgeObjectRetain(v21);
  sub_100A21E74(v97, v18);
  v23 = v97[0];
  v96 = 0;
  if ((v22 & 1) == 0)
  {
    sub_100C00270(v97[0]);
    v23 = v24;
  }
  swift_bridgeObjectRelease(v21);
  KeyPath = swift_getKeyPath(&unk_100F22F70);
  v26 = swift_getKeyPath(&unk_100F22F98);
  v97[0] = v23;
  v27 = v81;
  swift_retain(v81);
  static Published.subscript.setter(v97, v27, KeyPath, v26);
  v28 = swift_getKeyPath(&unk_100F22F70);
  v29 = swift_getKeyPath(&unk_100F22F98);
  static Published.subscript.getter(v97, v27, v28, v29);
  swift_release(v28);
  swift_release(v29);
  v30 = *(_QWORD *)(v97[0] + 16);
  if (v30)
  {
    v31 = v97[0] + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v32 = *(_QWORD *)(v14 + 72);
    v33 = v97[0];
    swift_bridgeObjectRetain(v97[0]);
    v34 = &_swiftEmptySetSingleton;
    do
    {
      v35 = (uint64_t)v34;
      sub_1004B8460(v31, (uint64_t)v16, _s13ItemViewModelVMa);
      v36 = *(_QWORD *)&v16[*(int *)(v13 + 44)];
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
      v34 = (void *)sub_100CA0AA4(v37, v35);
      sub_1004B84A4((uint64_t)v16, _s13ItemViewModelVMa);
      swift_bridgeObjectRelease(v35);
      v31 += v32;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease_n(v33, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v97[0]);
    v34 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRetain(v34);
  v39 = sub_1005FF840(v38);
  swift_bridgeObjectRelease(v34);
  v97[0] = (unint64_t)v39;
  v40 = v96;
  sub_100A21DF4(v97);
  v41 = v81;
  if (v40)
  {
    swift_release(v97[0]);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v34);
    v42 = v97[0];
    v43 = swift_getKeyPath(&unk_100F22FB8);
    v44 = swift_getKeyPath(&unk_100F22FE0);
    v97[0] = v42;
    swift_retain(v41);
    static Published.subscript.setter(v97, v41, v43, v44);
    if (qword_1013DD388 != -1)
      swift_once(&qword_1013DD388, sub_10089A688);
    v45 = qword_10147FBC8;
    v46 = swift_getKeyPath(&unk_100F23000);
    v47 = swift_getKeyPath(&unk_100F23028);
    v97[0] = v45;
    swift_retain(v41);
    swift_bridgeObjectRetain(v45);
    static Published.subscript.setter(v97, v41, v46, v47);
    v48 = swift_getKeyPath(&unk_100F22FB8);
    v49 = swift_getKeyPath(&unk_100F22FE0);
    static Published.subscript.getter(v97, v41, v48, v49);
    swift_release(v48);
    swift_release(v49);
    v50 = *(_QWORD *)(v97[0] + 16);
    if (v50)
    {
      v51 = *(unsigned __int8 *)(v86 + 80);
      v52 = v97[0] + ((v51 + 32) & ~v51);
      v53 = *(_QWORD *)(v86 + 72);
      v85 = (v51 + 16) & ~v51;
      v86 = v53;
      v83 = v51 | 7;
      v84 = v85 + v8;
      v80 = v97[0];
      swift_bridgeObjectRetain(v97[0]);
      v54 = _swiftEmptyArrayStorage;
      v55 = (int *)v93;
      do
      {
        v96 = v54;
        v56 = v87;
        sub_1004B8460(v52, v87, _s17CategoryViewModelVMa);
        v57 = v88;
        sub_1004B8460(v56, v88, _s17CategoryViewModelVMa);
        v58 = type metadata accessor for UUID(0);
        v59 = (uint64_t)v91;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v91, v57, v58);
        v61 = (uint64_t)v89;
        v60 = v90;
        v62 = (uint64_t *)(v57 + *(int *)(v90 + 20));
        v63 = *v62;
        v64 = v62[1];
        v65 = (_QWORD *)(v59 + v55[5]);
        *v65 = v63;
        v65[1] = v64;
        v66 = (uint64_t *)(v57 + *(int *)(v60 + 28));
        v67 = *v66;
        v68 = v66[1];
        v69 = (_QWORD *)(v59 + v55[6]);
        *v69 = v67;
        v69[1] = v68;
        sub_1004B84E0(v57, v61, _s17CategoryViewModelVMa);
        v70 = swift_allocObject(&unk_101291608, v84, v83);
        sub_1004B84E0(v61, v70 + v85, _s17CategoryViewModelVMa);
        v71 = (BOOL (**)(uint64_t))(v59 + v55[7]);
        *v71 = sub_100A21FC8;
        v71[1] = (BOOL (*)(uint64_t))v70;
        v72 = v94;
        sub_1004B84E0(v59, v94, _s15FilterViewModelVMa);
        v73 = v95;
        (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v95 + 56))(v72, 0, 1, v55);
        swift_bridgeObjectRetain(v64);
        swift_bridgeObjectRetain(v68);
        sub_1004B84A4(v56, _s17CategoryViewModelVMa);
        if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v73 + 48))(v72, 1, v55) == 1)
        {
          sub_1004CB800(v72, &qword_1013F0F78);
          v54 = v96;
        }
        else
        {
          v74 = v82;
          sub_1004B84E0(v72, v82, _s15FilterViewModelVMa);
          sub_1004B84E0(v74, v92, _s15FilterViewModelVMa);
          v54 = v96;
          if ((swift_isUniquelyReferenced_nonNull_native(v96) & 1) == 0)
            v54 = (double *)sub_100D10F90(0, *((_QWORD *)v54 + 2) + 1, 1, (unint64_t)v54);
          v76 = *((_QWORD *)v54 + 2);
          v75 = *((_QWORD *)v54 + 3);
          if (v76 >= v75 >> 1)
            v54 = (double *)sub_100D10F90(v75 > 1, v76 + 1, 1, (unint64_t)v54);
          *((_QWORD *)v54 + 2) = v76 + 1;
          sub_1004B84E0(v92, (uint64_t)v54+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(_QWORD *)(v95 + 72) * v76, _s15FilterViewModelVMa);
        }
        v52 += v86;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease_n(v80, 2);
      v41 = v81;
    }
    else
    {
      swift_bridgeObjectRelease(v97[0]);
      v54 = _swiftEmptyArrayStorage;
    }
    v77 = swift_getKeyPath(&unk_100F23048);
    v78 = swift_getKeyPath(&unk_100F23070);
    v97[0] = (unint64_t)v54;
    swift_retain(v41);
    static Published.subscript.setter(v97, v41, v77, v78);
  }
}

uint64_t sub_100A20C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__itemViewModels;
  v2 = sub_1004B804C(&qword_101402B98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categories;
  v4 = sub_1004B804C(&qword_101402BA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__topLevelFilterViewModels;
  v6 = sub_1004B804C((uint64_t *)&unk_101402BA8);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categoryFilterViewModels, v6);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_fakeDataStore));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A20D34()
{
  return type metadata accessor for CRLStencilLibrary(0);
}

uint64_t type metadata accessor for CRLStencilLibrary(uint64_t a1)
{
  uint64_t result;

  result = qword_1014028B8;
  if (!qword_1014028B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLStencilLibrary);
  return result;
}

void sub_100A20D78(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  sub_100643190(319, (unint64_t *)&unk_1014028D0, &qword_1013F0F30);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100F22EE8;
    v8[2] = &unk_100F22F00;
    sub_100643190(319, &qword_1014028E0, &qword_1014028E8);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_100643190(319, qword_1014028F0, &qword_1013F0FB8);
      if (v7 <= 0x3F)
      {
        v9 = *(_QWORD *)(v6 - 8) + 64;
        v10 = v9;
        v11 = (char *)&value witness table for Builtin.NativeObject + 64;
        v12 = (char *)&value witness table for Builtin.UnknownObject + 64;
        swift_updateClassMetadata2(a1, 256, 8, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_100A20E78@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLStencilLibrary(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A20EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5[14] = a4;
  v5[15] = a5;
  v5[12] = a2;
  v5[13] = a3;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E01F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v6);
  v5[17] = swift_task_alloc(v6);
  v7 = type metadata accessor for URL(0);
  v5[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[19] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[20] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[21] = swift_task_alloc(v10);
  v5[22] = swift_task_alloc(v10);
  v11 = sub_1004B804C(&qword_1013E04D0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100A20F84, 0, 0);
}

uint64_t sub_100A20F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD, uint64_t, uint64_t, _QWORD, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t Strong;
  uint64_t v53;
  void (*v54)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 48, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 152);
      v5 = *(unsigned __int8 *)(v4 + 80);
      v6 = v2 + ((v5 + 32) & ~v5);
      v53 = *(_QWORD *)(v4 + 72);
      v7 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))(v4 + 16);
      v49 = v5 | 7;
      v50 = (v5 + 40) & ~v5;
      v48 = (*(_QWORD *)(v0 + 160) + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
      v8 = swift_bridgeObjectRetain(v2);
      v47 = v4;
      v51 = v7;
      while (1)
      {
        v11 = *(_QWORD *)(v0 + 184);
        v12 = *(_QWORD *)(v0 + 144);
        v7(v11, v6, v12, v8);
        v54 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
        v54(v11, 0, 1, v12);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v11, 1, v12) == 1)
          goto LABEL_25;
        v13 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 32);
        v14 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v13)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 144));
        v15 = URL.pathExtension.getter(v14);
        if (v15 == 0x6D726F6665657266 && v16 == 0xE800000000000000)
          break;
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0x6D726F6665657266, 0xE800000000000000, 0);
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_14;
LABEL_5:
        (*(void (**)(_QWORD, _QWORD))(v4 + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 144));
        v6 += v53;
        if (!--v3)
        {
          ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v54)(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 144), v8);
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
LABEL_14:
      v55 = v6;
      v56 = v3;
      v20 = *(_QWORD *)(v0 + 168);
      v19 = *(_QWORD *)(v0 + 176);
      v22 = *(_QWORD *)(v0 + 136);
      v21 = *(_QWORD *)(v0 + 144);
      v23 = *(_QWORD *)(v0 + 128);
      v58 = *(_QWORD *)(v0 + 120);
      v24 = type metadata accessor for TaskPriority(0);
      v57 = (void (*)(char *, uint64_t, uint64_t))v13;
      v25 = *(_QWORD *)(v24 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v22, 1, 1, v24);
      ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v20, v19, v21);
      v26 = (_QWORD *)swift_allocObject(&unk_101291680, v48 + 8, v49);
      v26[2] = 0;
      v27 = v26 + 2;
      v26[3] = 0;
      v26[4] = Strong;
      v57((char *)v26 + v50, v20, v21);
      *(_QWORD *)((char *)v26 + v48) = v58;
      sub_1004DAEB4(v22, v23);
      LODWORD(v23) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
      swift_retain(Strong);
      v28 = swift_retain(v58);
      v29 = *(_QWORD *)(v0 + 128);
      if ((_DWORD)v23 == 1)
      {
        sub_1004CB800(*(_QWORD *)(v0 + 128), &qword_1013E01F0);
        v30 = 0;
      }
      else
      {
        v31 = TaskPriority.rawValue.getter(v28);
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v24);
        v30 = v31;
      }
      v4 = v47;
      v6 = v55;
      v32 = *v27;
      if (*v27)
      {
        v33 = v26[3];
        ObjectType = swift_getObjectType(*v27);
        swift_unknownObjectRetain(v32);
        v35 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v33);
        v37 = v36;
        swift_unknownObjectRelease(v32);
      }
      else
      {
        v35 = 0;
        v37 = 0;
      }
      v3 = v56;
      v38 = **(_QWORD **)(v0 + 96);
      v39 = v37 | v35;
      if (v37 | v35)
      {
        v39 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v35;
        *(_QWORD *)(v0 + 40) = v37;
      }
      v9 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 72) = 1;
      *(_QWORD *)(v0 + 80) = v39;
      *(_QWORD *)(v0 + 88) = v38;
      v10 = swift_task_create(v30 | 0x3100, v0 + 72, (char *)&type metadata for () + 8, &unk_101402BF8);
      swift_release(v10);
      sub_1004CB800(v9, &qword_1013E01F0);
      v7 = v51;
      goto LABEL_5;
    }
    v40 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 152) + 56);
    v41 = swift_bridgeObjectRetain(*(_QWORD *)(v0 + 112));
    v40(*(_QWORD *)(v0 + 184), 1, 1, *(_QWORD *)(v0 + 144), v41);
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release(Strong);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"loadPrefabStencilsFromDisk(into:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLStencilLibrary.swift", 89, 2, 115, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadPrefabStencilsFromDisk(into:)", 33, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLStencilLibrary.swift", 89, 2u, 115, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
  }
  v42 = *(_QWORD *)(v0 + 176);
  v43 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 128);
  v44 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A21434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  v7 = type metadata accessor for URL(0);
  v6[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[17] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[18] = swift_task_alloc(v9);
  v6[19] = swift_task_alloc(v9);
  return swift_task_switch(sub_100A214A8, 0, 0);
}

uint64_t sub_100A214A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  _BOOL8 v16;
  objc_class *Assistant;
  char *v18;
  void (*v19)(uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(char **)(*(_QWORD *)(v0 + 104) + 24);
  v6 = *(void **)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
  *(_QWORD *)(v0 + 160) = v6;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v1, v4, v2);
  v8 = qword_1013DDD80;
  v9 = v6;
  v10 = v5;
  if (v8 != -1)
    swift_once(&qword_1013DDD80, sub_100BC9504);
  v11 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 128);
  v13 = qword_101480E68;
  KeyPath = swift_getKeyPath(asc_100F23090, *(_QWORD *)(v0 + 136));
  v15 = swift_getKeyPath(byte_100F230B8);
  static Published.subscript.getter((_QWORD *)(v0 + 74), v13, KeyPath, v15);
  swift_release(v15);
  swift_release(KeyPath);
  v16 = (*(_BYTE *)(v0 + 74) & 1) == 0;
  Assistant = (objc_class *)type metadata accessor for CRLBoardFileReadAssistant(0);
  v18 = (char *)objc_allocWithZone(Assistant);
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant] = 0;
  v7((uint64_t)&v18[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_url], v11, v12);
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_store] = v10;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_context] = v9;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_options] = v16;
  *(_QWORD *)(v0 + 80) = v18;
  *(_QWORD *)(v0 + 88) = Assistant;
  *(_QWORD *)(v0 + 168) = objc_msgSendSuper2((objc_super *)(v0 + 80), "init");
  v19 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  *(_QWORD *)(v0 + 176) = v19;
  v19(v11, v12);
  v20 = (_QWORD *)swift_task_alloc(dword_1013E518C);
  *(_QWORD *)(v0 + 184) = v20;
  *v20 = v0;
  v20[1] = sub_100A21670;
  return sub_1005B3600();
}

uint64_t sub_100A21670(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 184);
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100A21C08;
  else
    v5 = sub_100A216DC;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100A216DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  __n128 v7;
  Class isa;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0[24] + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                                     + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items));
  sub_100A1F330(v1);
  v3 = v2;
  v0[26] = v2;
  swift_bridgeObjectRelease();
  if (qword_1013DCAD0 != -1)
    swift_once(&qword_1013DCAD0, sub_10058E1DC);
  v4 = qword_10147EA40;
  v5 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasImager), "initWithBoard:", v0[24]);
  v0[27] = v5;
  if (v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v3);
    v6 = (uint64_t)sub_1005FF404(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
  v7 = swift_bridgeObjectRetain(v6);
  if (v6 < 0 || (v6 & 0x4000000000000000) != 0)
  {
    v14 = sub_1004B804C(&qword_1013E0670);
    _bridgeCocoaArray<A>(_:)(v6, v14);
    swift_release(v6);
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v7);
  }
  swift_release(v6);
  sub_1004B804C(&qword_1013E0670);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "setInfos:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v5, "setBackgroundColor:", v4);
  if (qword_1013DD350 != -1)
    swift_once(&qword_1013DD350, sub_10087ED94);
  objc_msgSend(v5, "setScaledImageSize:", xmmword_10147FA80);
  v9 = swift_task_alloc(32);
  v0[28] = v9;
  *(_QWORD *)(v9 + 16) = v5;
  *(_QWORD *)(v9 + 24) = 0;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[29] = v10;
  v11 = sub_1004B804C(&qword_1013E4648);
  *v10 = v0;
  v10[1] = sub_100A21934;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 12, 0, 0, 0xD000000000000019, 0x8000000100FB54D0, sub_10059E44C, v9, v11);
}

uint64_t sub_100A21934()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 224);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 232));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100A21990, 0, 0);
}

uint64_t sub_100A21990()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 96);
  *(_QWORD *)(v0 + 240) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 208);
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 128);
    v6.n128_f64[0] = URL.deletingPathExtension()();
    v7 = URL.lastPathComponent.getter(v6);
    v9 = v8;
    *(_QWORD *)(v0 + 248) = v8;
    v3(v4, v5);
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = v7;
    *(_QWORD *)(v0 + 32) = v9;
    *(_QWORD *)(v0 + 40) = 0;
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = &_swiftEmptySetSingleton;
    *(_QWORD *)(v0 + 64) = &_swiftEmptySetSingleton;
    *(_WORD *)(v0 + 72) = 0;
    v10 = v1;
    sub_100AF7B64(v2);
    v12 = v11;
    *(_QWORD *)(v0 + 256) = v11;
    swift_bridgeObjectRelease();
    v13 = (_QWORD *)swift_task_alloc(dword_1014028CC);
    *(_QWORD *)(v0 + 264) = v13;
    *v13 = v0;
    v13[1] = sub_100A21B00;
    return sub_100A20040(v12, v0 + 16);
  }
  else
  {
    v15 = *(void **)(v0 + 216);
    v16 = *(void **)(v0 + 192);
    v18 = *(void **)(v0 + 160);
    v17 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();
    v19 = sub_100A24554();
    swift_allocError(&type metadata for CRLStencilLibrary.FakeDataStore.FakeDataStoreError, v19, 0, 0);
    swift_willThrow(v20);

    v21 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A21B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  if (v0)
    v3 = sub_100A21C50;
  else
    v3 = sub_100A21B6C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A21B6C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 192);
  v5 = *(void **)(v0 + 160);
  v4 = *(void **)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease_n(&_swiftEmptySetSingleton, 2);

  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A21C08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 160);

  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A21C50()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 240);
  v2 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 192);
  v5 = *(void **)(v0 + 160);
  v4 = *(void **)(v0 + 168);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease_n(&_swiftEmptySetSingleton, 2);

  v6 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CRLStencilLibrary.FakeDataStore()
{
  return objc_opt_self(_TtCC8Freeform17CRLStencilLibraryP33_D1AC5F38BD54EA86A379C429A2775ABF13FakeDataStore);
}

void sub_100A21D00(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100F22FB8);
  v5 = swift_getKeyPath(&unk_100F22FE0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100A21D7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100F22FB8);
  v5 = swift_getKeyPath(&unk_100F22FE0);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_100A21DF4(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(_s17CategoryViewModelVMa(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_100D16758(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100A2200C(v5);
  *a1 = v3;
}

void sub_100A21E74(_QWORD *a1, int a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7[2];

  v4 = *(_QWORD *)(_s13ItemViewModelVMa(0) - 8);
  v5 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v5 = (_QWORD *)sub_100D1678C(v5);
  v6 = v5[2];
  v7[0] = (uint64_t)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7[1] = v6;
  sub_100A22A28(v7, a2);
  *a1 = v5;
}

uint64_t sub_100A21F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(_s17CategoryViewModelVMa(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

BOOL sub_100A21FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(_s17CategoryViewModelVMa(0) - 8) + 80);
  return sub_10089A654(a1, v1 + ((v3 + 16) & ~v3));
}

void sub_100A2200C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  double *v126;
  uint64_t v127;
  double *v128;
  Swift::Int v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;

  v2 = v1;
  v142 = _s17CategoryViewModelVMa(0);
  v4 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v133 = (uint64_t)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v143 = (uint64_t)&v127 - v7;
  __chkstk_darwin(v8);
  v139 = (uint64_t)&v127 - v9;
  __chkstk_darwin(v10);
  v138 = (uint64_t)&v127 - v11;
  v12 = a1[1];
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0)
      goto LABEL_138;
    if (v12)
      sub_100A23468(0, v12, 1, a1);
    return;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_146;
  v129 = v13;
  if (v12 < 2)
  {
    v19 = (char *)_swiftEmptyArrayStorage;
    v135 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v128 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      v21 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
LABEL_104:
      v114 = v19;
      if (v21 >= 2)
      {
        v120 = *a1;
        do
        {
          v121 = v21 - 2;
          if (v21 < 2)
            goto LABEL_133;
          if (!v120)
            goto LABEL_145;
          v122 = *(_QWORD *)&v114[16 * v121 + 32];
          v123 = *(_QWORD *)&v114[16 * v21 + 24];
          sub_100A238F0(v120 + *(_QWORD *)(v4 + 72) * v122, v120 + *(_QWORD *)(v4 + 72) * *(_QWORD *)&v114[16 * v21 + 16], v120 + *(_QWORD *)(v4 + 72) * v123, v135);
          if (v2)
            break;
          if (v123 < v122)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native(v114) & 1) == 0)
            v114 = sub_100D1664C((uint64_t)v114);
          if (v121 >= *((_QWORD *)v114 + 2))
            goto LABEL_135;
          v124 = &v114[16 * v121 + 32];
          *(_QWORD *)v124 = v122;
          *((_QWORD *)v124 + 1) = v123;
          v125 = *((_QWORD *)v114 + 2);
          if (v21 > v125)
            goto LABEL_136;
          memmove(&v114[16 * v21 + 16], &v114[16 * v21 + 32], 16 * (v125 - v21));
          *((_QWORD *)v114 + 2) = v125 - 1;
          v21 = v125 - 1;
        }
        while (v125 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease(v114);
      v126 = v128;
      v128[2] = 0.0;
      swift_bridgeObjectRelease(v126);
      return;
    }
  }
  else
  {
    v15 = v12;
    v16 = v14 >> 1;
    v17 = static Array._allocateBufferUninitialized(minimumCapacity:)(v14 >> 1, v142);
    *(_QWORD *)(v17 + 16) = v16;
    v12 = v15;
    v18 = *(unsigned __int8 *)(v4 + 80);
    v128 = (double *)v17;
    v135 = v17 + ((v18 + 32) & ~v18);
  }
  v20 = 0;
  v19 = (char *)_swiftEmptyArrayStorage;
  v141 = a1;
  v136 = v4;
  while (1)
  {
    v22 = v4;
    v23 = v20;
    v24 = v20 + 1;
    v134 = v20;
    v145 = v12;
    if ((uint64_t)(v20 + 1) >= v12)
    {
      v31 = v20 + 1;
      v40 = v20;
    }
    else
    {
      v25 = *(_QWORD *)(v4 + 72);
      v26 = *a1;
      v27 = v138;
      sub_1004B8460(*a1 + v25 * v24, v138, _s17CategoryViewModelVMa);
      v28 = v139;
      sub_1004B8460(v26 + v25 * v23, v139, _s17CategoryViewModelVMa);
      v29 = *(int *)(v142 + 32);
      v140 = *(_QWORD *)(v27 + v29);
      v137 = *(_QWORD *)(v28 + v29);
      sub_1004B84A4(v28, _s17CategoryViewModelVMa);
      sub_1004B84A4(v27, _s17CategoryViewModelVMa);
      v30 = v26;
      v31 = v23 + 2;
      v132 = v30;
      v144 = v25;
      if ((uint64_t)(v23 + 2) >= v145)
      {
        v22 = v136;
      }
      else
      {
        v130 = v19;
        v131 = v2;
        v32 = v25 * v24;
        v33 = v30;
        v34 = v25 * v31;
        while (1)
        {
          v35 = v31;
          v36 = v138;
          v37 = v140 < v137;
          sub_1004B8460(v33 + v34, v138, _s17CategoryViewModelVMa);
          v38 = v139;
          sub_1004B8460(v33 + v32, v139, _s17CategoryViewModelVMa);
          v39 = *(_QWORD *)(v36 + *(int *)(v142 + 32)) >= *(_QWORD *)(v38 + *(int *)(v142 + 32));
          sub_1004B84A4(v38, _s17CategoryViewModelVMa);
          sub_1004B84A4(v36, _s17CategoryViewModelVMa);
          if (v37 == v39)
            break;
          v31 = v35 + 1;
          v33 += v144;
          if (v145 == v35 + 1)
          {
            v31 = v145;
            v22 = v136;
            a1 = v141;
            v19 = v130;
            goto LABEL_24;
          }
        }
        v22 = v136;
        a1 = v141;
        v19 = v130;
        v31 = v35;
LABEL_24:
        v2 = v131;
      }
      v40 = v134;
      if (v140 < v137)
      {
        if (v31 < v134)
          goto LABEL_139;
        if (v134 < v31)
        {
          v130 = v19;
          v131 = v2;
          v41 = 0;
          v42 = v144;
          v43 = v144 * (v31 - 1);
          v44 = v31 * v144;
          v45 = v134;
          v46 = v134 * v144;
          do
          {
            if (v45 != v31 + v41 - 1)
            {
              v47 = v132;
              if (!v132)
                goto LABEL_144;
              v48 = v132 + v46;
              v49 = v132 + v43;
              sub_1004B84E0(v132 + v46, v133, _s17CategoryViewModelVMa);
              if (v46 < v43 || v48 >= v47 + v44)
              {
                swift_arrayInitWithTakeFrontToBack(v47 + v46, v47 + v43, 1, v142);
                v42 = v144;
              }
              else
              {
                v42 = v144;
                if (v46 != v43)
                  swift_arrayInitWithTakeBackToFront(v48);
              }
              sub_1004B84E0(v133, v49, _s17CategoryViewModelVMa);
            }
            ++v45;
            --v41;
            v43 -= v42;
            v44 -= v42;
            v46 += v42;
          }
          while (v45 < v31 + v41);
          v19 = v130;
          v2 = v131;
          a1 = v141;
          v22 = v136;
          v40 = v134;
        }
      }
    }
    if (v31 < v145)
    {
      if (__OFSUB__(v31, v40))
        goto LABEL_137;
      if (v31 - v40 < v129)
        break;
    }
LABEL_56:
    if (v31 < v40)
      goto LABEL_132;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
    v140 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v19 = sub_100D15FCC(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
    v69 = *((_QWORD *)v19 + 2);
    v68 = *((_QWORD *)v19 + 3);
    v21 = v69 + 1;
    if (v69 >= v68 >> 1)
      v19 = sub_100D15FCC((char *)(v68 > 1), v69 + 1, 1, v19);
    *((_QWORD *)v19 + 2) = v21;
    v70 = v19 + 32;
    v71 = &v19[16 * v69 + 32];
    v72 = v140;
    *(_QWORD *)v71 = v40;
    *((_QWORD *)v71 + 1) = v72;
    if (v69)
    {
      while (1)
      {
        v73 = v21 - 1;
        if (v21 >= 4)
        {
          v78 = &v70[16 * v21];
          v79 = *((_QWORD *)v78 - 8);
          v80 = *((_QWORD *)v78 - 7);
          v84 = __OFSUB__(v80, v79);
          v81 = v80 - v79;
          if (v84)
            goto LABEL_121;
          v83 = *((_QWORD *)v78 - 6);
          v82 = *((_QWORD *)v78 - 5);
          v84 = __OFSUB__(v82, v83);
          v76 = v82 - v83;
          v77 = v84;
          if (v84)
            goto LABEL_122;
          v85 = v21 - 2;
          v86 = &v70[16 * v21 - 32];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v84 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          if (v84)
            goto LABEL_124;
          v84 = __OFADD__(v76, v89);
          v90 = v76 + v89;
          if (v84)
            goto LABEL_127;
          if (v90 >= v81)
          {
            v108 = &v70[16 * v73];
            v110 = *(_QWORD *)v108;
            v109 = *((_QWORD *)v108 + 1);
            v84 = __OFSUB__(v109, v110);
            v111 = v109 - v110;
            if (v84)
              goto LABEL_131;
            v101 = v76 < v111;
            goto LABEL_93;
          }
        }
        else
        {
          if (v21 != 3)
          {
            v102 = *((_QWORD *)v19 + 4);
            v103 = *((_QWORD *)v19 + 5);
            v84 = __OFSUB__(v103, v102);
            v95 = v103 - v102;
            v96 = v84;
            goto LABEL_87;
          }
          v75 = *((_QWORD *)v19 + 4);
          v74 = *((_QWORD *)v19 + 5);
          v84 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          v77 = v84;
        }
        if ((v77 & 1) != 0)
          goto LABEL_123;
        v85 = v21 - 2;
        v91 = &v70[16 * v21 - 32];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v94 = __OFSUB__(v92, v93);
        v95 = v92 - v93;
        v96 = v94;
        if (v94)
          goto LABEL_126;
        v97 = &v70[16 * v73];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v84 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v84)
          goto LABEL_129;
        if (__OFADD__(v95, v100))
          goto LABEL_130;
        if (v95 + v100 >= v76)
        {
          v101 = v76 < v100;
LABEL_93:
          if (v101)
            v73 = v85;
          goto LABEL_95;
        }
LABEL_87:
        if ((v96 & 1) != 0)
          goto LABEL_125;
        v104 = &v70[16 * v73];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v84 = __OFSUB__(v105, v106);
        v107 = v105 - v106;
        if (v84)
          goto LABEL_128;
        if (v107 < v95)
          goto LABEL_14;
LABEL_95:
        v112 = v73 - 1;
        if (v73 - 1 >= v21)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v113 = *a1;
        if (!*a1)
          goto LABEL_143;
        v114 = v19;
        v115 = &v70[16 * v112];
        v116 = *(_QWORD *)v115;
        v117 = &v70[16 * v73];
        v118 = *((_QWORD *)v117 + 1);
        sub_100A238F0(v113 + *(_QWORD *)(v136 + 72) * *(_QWORD *)v115, v113 + *(_QWORD *)(v136 + 72) * *(_QWORD *)v117, v113 + *(_QWORD *)(v136 + 72) * v118, v135);
        if (v2)
          goto LABEL_115;
        if (v118 < v116)
          goto LABEL_118;
        if (v73 > *((_QWORD *)v114 + 2))
          goto LABEL_119;
        *(_QWORD *)v115 = v116;
        *(_QWORD *)&v70[16 * v112 + 8] = v118;
        v119 = *((_QWORD *)v114 + 2);
        if (v73 >= v119)
          goto LABEL_120;
        v19 = v114;
        v21 = v119 - 1;
        memmove(&v70[16 * v73], v117 + 16, 16 * (v119 - 1 - v73));
        *((_QWORD *)v114 + 2) = v119 - 1;
        a1 = v141;
        if (v119 <= 2)
          goto LABEL_14;
      }
    }
    v21 = 1;
LABEL_14:
    v12 = a1[1];
    v20 = v140;
    v4 = v136;
    if ((uint64_t)v140 >= v12)
      goto LABEL_104;
  }
  if (__OFADD__(v40, v129))
    goto LABEL_140;
  v50 = v145;
  if (v40 + v129 < v145)
    v50 = v40 + v129;
  if (v50 >= v40)
  {
    if (v31 != v50)
    {
      v130 = v19;
      v131 = v2;
      v51 = *(_QWORD *)(v22 + 72);
      v145 = v51 * (v31 - 1);
      v137 = v51;
      v52 = v31 * v51;
      v132 = v50;
      do
      {
        v54 = 0;
        v55 = v40;
        v140 = v31;
        while (1)
        {
          v56 = v141;
          v57 = *v141;
          v58 = v52;
          v59 = v52 + v54 + *v141;
          v60 = v138;
          sub_1004B8460(v59, v138, _s17CategoryViewModelVMa);
          v61 = v139;
          sub_1004B8460(v145 + v54 + v57, v139, _s17CategoryViewModelVMa);
          v62 = *(int *)(v142 + 32);
          v144 = *(_QWORD *)(v60 + v62);
          v63 = *(_QWORD *)(v61 + v62);
          sub_1004B84A4(v61, _s17CategoryViewModelVMa);
          sub_1004B84A4(v60, _s17CategoryViewModelVMa);
          if (v144 >= v63)
            break;
          v64 = *v56;
          if (!*v56)
            goto LABEL_142;
          v52 = v58;
          v65 = v64 + v58 + v54;
          v66 = v64 + v145 + v54;
          sub_1004B84E0(v65, v143, _s17CategoryViewModelVMa);
          swift_arrayInitWithTakeFrontToBack(v65, v66, 1, v142);
          sub_1004B84E0(v143, v66, _s17CategoryViewModelVMa);
          v54 -= v137;
          ++v55;
          v53 = v140;
          if (v140 == v55)
            goto LABEL_49;
        }
        v53 = v140;
        v52 = v58;
LABEL_49:
        v31 = v53 + 1;
        v145 += v137;
        v52 += v137;
        v40 = v134;
      }
      while (v31 != v132);
      v31 = v132;
      v19 = v130;
      v2 = v131;
      a1 = v141;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100A22A28(uint64_t *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  Swift::Int v46;
  unint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  Swift::Int v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  Swift::Int v122;
  char *v123;
  double *v124;
  uint64_t v125;
  Swift::Int v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  int v136;
  uint64_t v137;
  Swift::Int v138;
  uint64_t v139;

  v3 = v2;
  v136 = a2;
  v131 = _s13ItemViewModelVMa(0);
  v129 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v125 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v137 = (uint64_t)&v121 - v7;
  __chkstk_darwin(v8);
  v134 = (uint64_t)&v121 - v9;
  __chkstk_darwin(v10);
  v133 = (uint64_t)&v121 - v11;
  v12 = a1[1];
  v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12)
        sub_100A236B0(0, v12, 1, a1, v136);
      return;
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_150;
  v135 = a1;
  v122 = v13;
  if (v12 < 2)
  {
    v16 = _swiftEmptyArrayStorage;
    v128 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    if (v12 != 1)
    {
      v19 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
      v18 = (char *)_swiftEmptyArrayStorage;
LABEL_107:
      if (v19 < 2)
      {
LABEL_118:
        v113 = v18;
        goto LABEL_119;
      }
      v114 = *v135;
      while (1)
      {
        v115 = v19 - 2;
        if (v19 < 2)
          goto LABEL_137;
        if (!v114)
          goto LABEL_149;
        v106 = v18;
        v116 = v18 + 32;
        v117 = *(_QWORD *)&v18[16 * v115 + 32];
        v118 = *(_QWORD *)&v18[16 * v19 + 24];
        sub_100A23DE8(v114 + *(_QWORD *)(v129 + 72) * v117, v114 + *(_QWORD *)(v129 + 72) * *(_QWORD *)&v116[16 * v19 - 16], v114 + *(_QWORD *)(v129 + 72) * v118, v128, v136);
        if (v3)
          goto LABEL_105;
        if (v118 < v117)
          goto LABEL_138;
        if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
          v106 = sub_100D1664C((uint64_t)v106);
        if (v115 >= *((_QWORD *)v106 + 2))
          goto LABEL_139;
        v119 = &v106[16 * v115 + 32];
        *(_QWORD *)v119 = v117;
        *((_QWORD *)v119 + 1) = v118;
        v120 = *((_QWORD *)v106 + 2);
        if (v19 > v120)
          goto LABEL_140;
        v18 = v106;
        memmove(&v106[16 * v19 + 16], &v106[16 * v19 + 32], 16 * (v120 - v19));
        *((_QWORD *)v106 + 2) = v120 - 1;
        v19 = v120 - 1;
        if (v120 <= 2)
          goto LABEL_118;
      }
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = (double *)static Array._allocateBufferUninitialized(minimumCapacity:)(v14 >> 1, v131);
    *((_QWORD *)v16 + 2) = v15;
    v128 = (unint64_t)v16
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
  }
  v124 = v16;
  v17 = 0;
  v18 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v20 = v17;
    v21 = v17 + 1;
    v127 = v17;
    if (v17 + 1 >= v12)
    {
      v28 = v17 + 1;
      v37 = v135;
    }
    else
    {
      v22 = v3;
      v23 = *v135;
      v24 = *(_QWORD *)(v129 + 72);
      v25 = *v135 + v24 * v21;
      v26 = v133;
      v138 = v12;
      sub_1004B8460(v25, v133, _s13ItemViewModelVMa);
      v27 = v134;
      sub_1004B8460(v23 + v24 * v20, v134, _s13ItemViewModelVMa);
      v132 = sub_100A1C03C(v26, v27, v136);
      sub_1004B84A4(v27, _s13ItemViewModelVMa);
      v12 = v138;
      sub_1004B84A4(v26, _s13ItemViewModelVMa);
      v28 = v20 + 2;
      v126 = v23;
      v139 = v24;
      if (v20 + 2 >= v12)
      {
        v3 = v22;
      }
      else
      {
        v130 = v22;
        v123 = v18;
        v29 = v24 * v21;
        v30 = v23;
        v31 = v20 + 2;
        v32 = v24 * (v20 + 2);
        while (1)
        {
          v33 = v133;
          v34 = v132 == -1;
          sub_1004B8460(v30 + v32, v133, _s13ItemViewModelVMa);
          v35 = v134;
          sub_1004B8460(v30 + v29, v134, _s13ItemViewModelVMa);
          v36 = sub_100A1C03C(v33, v35, v136) != -1;
          sub_1004B84A4(v35, _s13ItemViewModelVMa);
          sub_1004B84A4(v33, _s13ItemViewModelVMa);
          if (v34 == v36)
            break;
          v30 += v139;
          ++v31;
          v12 = v138;
          if (v138 == v31)
          {
            v28 = v138;
            v18 = v123;
            v3 = v130;
            v20 = v127;
            goto LABEL_24;
          }
        }
        v18 = v123;
        v28 = v31;
        v3 = v130;
        v20 = v127;
        v12 = v138;
      }
LABEL_24:
      if (v132 == -1)
      {
        if (v28 < v20)
          goto LABEL_145;
        v37 = v135;
        if (v20 < v28)
        {
          v130 = v3;
          v123 = v18;
          v38 = v28;
          v39 = 0;
          v40 = v139;
          v41 = v139 * (v38 - 1);
          v42 = v38 * v139;
          v43 = v20;
          v44 = v20 * v139;
          do
          {
            v45 = v38;
            if (v43 != v38 + v39 - 1)
            {
              v46 = v126;
              if (!v126)
                goto LABEL_148;
              v47 = v126 + v44;
              v48 = v126 + v41;
              sub_1004B84E0(v126 + v44, v125, _s13ItemViewModelVMa);
              if (v44 < v41 || v47 >= v46 + v42)
              {
                swift_arrayInitWithTakeFrontToBack(v46 + v44, v46 + v41, 1, v131);
                v40 = v139;
              }
              else
              {
                v40 = v139;
                if (v44 != v41)
                  swift_arrayInitWithTakeBackToFront(v47);
              }
              sub_1004B84E0(v125, v48, _s13ItemViewModelVMa);
              v37 = v135;
            }
            ++v43;
            --v39;
            v38 = v45;
            v41 -= v40;
            v42 -= v40;
            v44 += v40;
          }
          while (v43 < v45 + v39);
          v18 = v123;
          v3 = v130;
          v28 = v45;
          v20 = v127;
          v12 = v138;
        }
      }
      else
      {
        v37 = v135;
      }
    }
    if (v28 < v12)
    {
      if (__OFSUB__(v28, v20))
        goto LABEL_141;
      if (v28 - v20 < v122)
      {
        if (__OFADD__(v20, v122))
          goto LABEL_143;
        if (v20 + v122 >= v12)
          v49 = v12;
        else
          v49 = v20 + v122;
        if (v49 < v20)
          goto LABEL_144;
        if (v28 != v49)
        {
          v123 = v18;
          v130 = v3;
          v50 = *(_QWORD *)(v129 + 72);
          v139 = v50 * (v28 - 1);
          v132 = v50;
          v138 = v28 * v50;
          v126 = v49;
          do
          {
            v51 = 0;
            v52 = v20;
            while (1)
            {
              v53 = v28;
              v54 = *v37;
              v55 = v133;
              sub_1004B8460(v138 + v51 + *v37, v133, _s13ItemViewModelVMa);
              v56 = v134;
              sub_1004B8460(v139 + v51 + v54, v134, _s13ItemViewModelVMa);
              v57 = sub_100A1C03C(v55, v56, v136);
              sub_1004B84A4(v56, _s13ItemViewModelVMa);
              sub_1004B84A4(v55, _s13ItemViewModelVMa);
              if (v57 != -1)
                break;
              v58 = *v37;
              if (!*v37)
                goto LABEL_146;
              v59 = v58 + v138 + v51;
              v60 = v58 + v139 + v51;
              sub_1004B84E0(v59, v137, _s13ItemViewModelVMa);
              v28 = v53;
              swift_arrayInitWithTakeFrontToBack(v59, v60, 1, v131);
              sub_1004B84E0(v137, v60, _s13ItemViewModelVMa);
              v51 -= v132;
              ++v52;
              v37 = v135;
              if (v53 == v52)
                goto LABEL_50;
            }
            v28 = v53;
LABEL_50:
            ++v28;
            v139 += v132;
            v138 += v132;
            v20 = v127;
          }
          while (v28 != v126);
          v28 = v126;
          v3 = v130;
          v18 = v123;
        }
      }
    }
    if (v28 < v20)
    {
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
      v18 = sub_100D15FCC(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v62 = *((_QWORD *)v18 + 2);
    v61 = *((_QWORD *)v18 + 3);
    v19 = v62 + 1;
    v139 = v28;
    if (v62 >= v61 >> 1)
      v18 = sub_100D15FCC((char *)(v61 > 1), v62 + 1, 1, v18);
    v130 = v3;
    *((_QWORD *)v18 + 2) = v19;
    v63 = v18 + 32;
    v64 = &v18[16 * v62 + 32];
    v65 = v139;
    *(_QWORD *)v64 = v20;
    *((_QWORD *)v64 + 1) = v65;
    if (v62)
      break;
    v19 = 1;
LABEL_14:
    v12 = v135[1];
    v17 = v139;
    v16 = v124;
    v3 = v130;
    if (v139 >= v12)
      goto LABEL_107;
  }
  while (1)
  {
    v66 = v19 - 1;
    if (v19 >= 4)
    {
      v71 = &v63[16 * v19];
      v72 = *((_QWORD *)v71 - 8);
      v73 = *((_QWORD *)v71 - 7);
      v77 = __OFSUB__(v73, v72);
      v74 = v73 - v72;
      if (v77)
        goto LABEL_125;
      v76 = *((_QWORD *)v71 - 6);
      v75 = *((_QWORD *)v71 - 5);
      v77 = __OFSUB__(v75, v76);
      v69 = v75 - v76;
      v70 = v77;
      if (v77)
        goto LABEL_126;
      v78 = v19 - 2;
      v79 = &v63[16 * v19 - 32];
      v81 = *(_QWORD *)v79;
      v80 = *((_QWORD *)v79 + 1);
      v77 = __OFSUB__(v80, v81);
      v82 = v80 - v81;
      if (v77)
        goto LABEL_128;
      v77 = __OFADD__(v69, v82);
      v83 = v69 + v82;
      if (v77)
        goto LABEL_131;
      if (v83 >= v74)
      {
        v101 = &v63[16 * v66];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v77 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v77)
          goto LABEL_135;
        v94 = v69 < v104;
        goto LABEL_94;
      }
    }
    else
    {
      if (v19 != 3)
      {
        v95 = *((_QWORD *)v18 + 4);
        v96 = *((_QWORD *)v18 + 5);
        v77 = __OFSUB__(v96, v95);
        v88 = v96 - v95;
        v89 = v77;
        goto LABEL_88;
      }
      v68 = *((_QWORD *)v18 + 4);
      v67 = *((_QWORD *)v18 + 5);
      v77 = __OFSUB__(v67, v68);
      v69 = v67 - v68;
      v70 = v77;
    }
    if ((v70 & 1) != 0)
      goto LABEL_127;
    v78 = v19 - 2;
    v84 = &v63[16 * v19 - 32];
    v86 = *(_QWORD *)v84;
    v85 = *((_QWORD *)v84 + 1);
    v87 = __OFSUB__(v85, v86);
    v88 = v85 - v86;
    v89 = v87;
    if (v87)
      goto LABEL_130;
    v90 = &v63[16 * v66];
    v92 = *(_QWORD *)v90;
    v91 = *((_QWORD *)v90 + 1);
    v77 = __OFSUB__(v91, v92);
    v93 = v91 - v92;
    if (v77)
      goto LABEL_133;
    if (__OFADD__(v88, v93))
      goto LABEL_134;
    if (v88 + v93 >= v69)
    {
      v94 = v69 < v93;
LABEL_94:
      if (v94)
        v66 = v78;
      goto LABEL_96;
    }
LABEL_88:
    if ((v89 & 1) != 0)
      goto LABEL_129;
    v97 = &v63[16 * v66];
    v99 = *(_QWORD *)v97;
    v98 = *((_QWORD *)v97 + 1);
    v77 = __OFSUB__(v98, v99);
    v100 = v98 - v99;
    if (v77)
      goto LABEL_132;
    if (v100 < v88)
      goto LABEL_14;
LABEL_96:
    v105 = v66 - 1;
    if (v66 - 1 >= v19)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v135)
      goto LABEL_147;
    v106 = v18;
    v107 = &v63[16 * v105];
    v108 = *(_QWORD *)v107;
    v109 = &v63[16 * v66];
    v110 = *((_QWORD *)v109 + 1);
    v111 = v130;
    sub_100A23DE8(*v135 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v107, *v135 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v109, *v135 + *(_QWORD *)(v129 + 72) * v110, v128, v136);
    v130 = v111;
    if (v111)
      break;
    if (v110 < v108)
      goto LABEL_122;
    if (v66 > *((_QWORD *)v106 + 2))
      goto LABEL_123;
    *(_QWORD *)v107 = v108;
    *(_QWORD *)&v63[16 * v105 + 8] = v110;
    v112 = *((_QWORD *)v106 + 2);
    if (v66 >= v112)
      goto LABEL_124;
    v18 = v106;
    v19 = v112 - 1;
    memmove(&v63[16 * v66], v109 + 16, 16 * (v112 - 1 - v66));
    *((_QWORD *)v106 + 2) = v112 - 1;
    if (v112 <= 2)
      goto LABEL_14;
  }
  v16 = v124;
LABEL_105:
  v113 = v106;
LABEL_119:
  swift_bridgeObjectRelease(v113);
  v16[2] = 0.0;
  swift_bridgeObjectRelease(v16);
}

void sub_100A23468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;

  v37 = a1;
  v43 = _s17CategoryViewModelVMa(0);
  __chkstk_darwin(v43);
  v44 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v39 = (uint64_t)&v35 - v9;
  __chkstk_darwin(v10);
  v38 = (uint64_t)&v35 - v12;
  v42 = a3;
  v36 = a2;
  if (a3 != a2)
  {
    v13 = *(_QWORD *)(v11 + 72);
    v14 = v13 * (v42 - 1);
    v40 = v13;
    v15 = v13 * v42;
    v16 = _s17CategoryViewModelVMa;
    v46 = a4;
LABEL_5:
    v17 = 0;
    v18 = v37;
    v41 = v15;
    while (1)
    {
      v20 = *v46;
      v21 = v15 + v17 + *v46;
      v22 = v38;
      sub_1004B8460(v21, v38, v16);
      v23 = v14 + v17 + v20;
      v24 = v14;
      v25 = v39;
      sub_1004B8460(v23, v39, v16);
      v26 = *(int *)(v43 + 32);
      v45 = *(_QWORD *)(v22 + v26);
      v27 = v16;
      v28 = *(_QWORD *)(v25 + v26);
      v29 = v25;
      v14 = v24;
      sub_1004B84A4(v29, v27);
      v30 = v22;
      v15 = v41;
      sub_1004B84A4(v30, v27);
      v31 = v45 >= v28;
      v16 = v27;
      if (v31)
      {
LABEL_4:
        v14 += v40;
        v15 += v40;
        if (++v42 == v36)
          return;
        goto LABEL_5;
      }
      v32 = *v46;
      if (!*v46)
        break;
      v33 = v32 + v15 + v17;
      v34 = v32 + v14 + v17;
      sub_1004B84E0(v33, v44, v27);
      swift_arrayInitWithTakeFrontToBack(v33, v34, 1, v43);
      v19 = v34;
      v16 = v27;
      sub_1004B84E0(v44, v19, v27);
      v17 -= v40;
      if (v42 == ++v18)
        goto LABEL_4;
    }
    __break(1u);
  }
}

void sub_100A236B0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = a5;
  v27 = a1;
  v28 = _s13ItemViewModelVMa(0);
  __chkstk_darwin(v28);
  v33 = (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v29 = (uint64_t)&v25 - v10;
  __chkstk_darwin(v11);
  v14 = (char *)&v25 - v13;
  v32 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v35 = v15 * (v32 - 1);
    v31 = v15;
    v34 = v15 * v32;
LABEL_5:
    v16 = 0;
    v17 = v27;
    while (1)
    {
      v18 = *a4;
      sub_1004B8460(v34 + v16 + *a4, (uint64_t)v14, _s13ItemViewModelVMa);
      v19 = v29;
      sub_1004B8460(v35 + v16 + v18, v29, _s13ItemViewModelVMa);
      v20 = sub_100A1C03C((uint64_t)v14, v19, v30);
      sub_1004B84A4(v19, _s13ItemViewModelVMa);
      sub_1004B84A4((uint64_t)v14, _s13ItemViewModelVMa);
      if (v20 != -1)
      {
LABEL_4:
        v35 += v31;
        v34 += v31;
        if (++v32 == v26)
          return;
        goto LABEL_5;
      }
      v21 = *a4;
      if (!*a4)
        break;
      v22 = a4;
      v23 = v21 + v34 + v16;
      v24 = v21 + v35 + v16;
      sub_1004B84E0(v23, v33, _s13ItemViewModelVMa);
      swift_arrayInitWithTakeFrontToBack(v23, v24, 1, v28);
      sub_1004B84E0(v33, v24, _s13ItemViewModelVMa);
      v16 -= v31;
      ++v17;
      a4 = v22;
      if (v32 == v17)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_100A238F0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v28;
  unint64_t v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = _s17CategoryViewModelVMa(0);
  __chkstk_darwin(v8);
  v51 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - v11;
  v52 = *(_QWORD *)(v13 + 72);
  if (!v52)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_70;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_71;
  v15 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v16 = v14 / v52;
  if (v15 >= v14 / v52)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v52;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v16, v8);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v30 = a4 + v18;
      v53 = a4 + v18;
      v55 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v32 = -v52;
        v49 = a4;
        v50 = a1;
        v48 = v8;
        do
        {
          v52 = a3 + v32;
          sub_1004B8460(v30 + v32, (uint64_t)v12, _s17CategoryViewModelVMa);
          v33 = a2 + v32;
          v34 = (uint64_t)v12;
          v35 = v51;
          sub_1004B8460(a2 + v32, v51, _s17CategoryViewModelVMa);
          v36 = *(int *)(v8 + 32);
          v37 = v32;
          v38 = *(_QWORD *)(v34 + v36);
          v39 = *(_QWORD *)(v35 + v36);
          v40 = v35;
          v12 = (char *)v34;
          sub_1004B84A4(v40, _s17CategoryViewModelVMa);
          sub_1004B84A4(v34, _s17CategoryViewModelVMa);
          if (v38 >= v39)
          {
            v43 = v53;
            v44 = v53 + v37;
            v53 += v37;
            v45 = a3 < v43 || v52 >= v43;
            v32 = v37;
            if (v45)
            {
              v41 = v52;
              v8 = v48;
              swift_arrayInitWithTakeFrontToBack(v52, v44, 1, v48);
              v33 = a2;
              v42 = v49;
            }
            else
            {
              v41 = v52;
              v8 = v48;
              v42 = v49;
              if (a3 != v43)
                swift_arrayInitWithTakeBackToFront(v52);
              v33 = a2;
            }
          }
          else
          {
            v32 = v37;
            v41 = v52;
            if (a3 < a2 || v52 >= a2)
            {
              v8 = v48;
              swift_arrayInitWithTakeFrontToBack(v52, v33, 1, v48);
              v42 = v49;
            }
            else
            {
              v8 = v48;
              v42 = v49;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v52);
            }
            v55 += v32;
          }
          v30 = v53;
          if (v53 <= v42)
            break;
          a2 = v33;
          a3 = v41;
        }
        while (v33 > v50);
      }
      goto LABEL_68;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v52;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v15, v8);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v50 = a4 + v17;
    v53 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        v20 = a3;
        sub_1004B8460(a2, (uint64_t)v12, _s17CategoryViewModelVMa);
        v21 = v51;
        sub_1004B8460(a4, v51, _s17CategoryViewModelVMa);
        v22 = *(int *)(v8 + 32);
        v23 = *(_QWORD *)&v12[v22];
        v24 = *(_QWORD *)(v21 + v22);
        sub_1004B84A4(v21, _s17CategoryViewModelVMa);
        sub_1004B84A4((uint64_t)v12, _s17CategoryViewModelVMa);
        v25 = v55;
        if (v23 >= v24)
        {
          v28 = v54 + v52;
          if (v55 < v54 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v55, v54, 1, v8);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 != v54)
              swift_arrayInitWithTakeBackToFront(v55);
          }
          v54 = v28;
          v26 = a2;
        }
        else
        {
          v26 = a2 + v52;
          if (v55 < a2 || v55 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack(v55, a2, 1, v8);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 == a2)
              v25 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v55);
          }
        }
        v55 = v25 + v52;
        a4 = v54;
        if (v54 >= v50)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_68:
    sub_100D162F4(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_72:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100A23DE8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t result;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;

  v48 = a5;
  v46 = _s13ItemViewModelVMa(0);
  __chkstk_darwin(v46);
  v47 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - v11;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_61;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_62;
  v16 = (uint64_t)(a2 - a1) / v14;
  v51 = a1;
  v50 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v17, v46);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }
      v27 = a4 + v19;
      v49 = a4 + v19;
      v51 = a2;
      if (v19 >= 1 && a1 < a2)
      {
        v29 = -v14;
        v44 = a4;
        v45 = a1;
        do
        {
          v30 = a3 + v29;
          sub_1004B8460(v27 + v29, (uint64_t)v12, _s13ItemViewModelVMa);
          v31 = a2 + v29;
          v32 = a3;
          v33 = (uint64_t)v12;
          v34 = v47;
          sub_1004B8460(a2 + v29, v47, _s13ItemViewModelVMa);
          v35 = sub_100A1C03C(v33, v34, v48);
          v36 = v34;
          v12 = (char *)v33;
          sub_1004B84A4(v36, _s13ItemViewModelVMa);
          sub_1004B84A4(v33, _s13ItemViewModelVMa);
          if (v35 == -1)
          {
            if (v32 < a2 || v30 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v30, a2 + v29, 1, v46);
              v41 = v44;
              v40 = v45;
            }
            else
            {
              v39 = v32 == a2;
              v41 = v44;
              v40 = v45;
              if (!v39)
                swift_arrayInitWithTakeBackToFront(v30);
            }
            v51 += v29;
          }
          else
          {
            v37 = v49;
            v38 = v49 + v29;
            v49 += v29;
            if (v32 < v37 || v30 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack(v30, v38, 1, v46);
              v31 = a2;
              v41 = v44;
              v40 = v45;
            }
            else
            {
              v39 = v32 == v37;
              v41 = v44;
              v40 = v45;
              if (!v39)
                swift_arrayInitWithTakeBackToFront(v30);
              v31 = a2;
            }
          }
          v27 = v49;
          if (v49 <= v41)
            break;
          a2 = v31;
          a3 = v30;
        }
        while (v31 > v40);
      }
      goto LABEL_59;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v16, v46);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }
    v20 = a4 + v18;
    v49 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1004B8460(a2, (uint64_t)v12, _s13ItemViewModelVMa);
        v22 = v47;
        sub_1004B8460(a4, v47, _s13ItemViewModelVMa);
        v23 = sub_100A1C03C((uint64_t)v12, v22, v48);
        sub_1004B84A4(v22, _s13ItemViewModelVMa);
        sub_1004B84A4((uint64_t)v12, _s13ItemViewModelVMa);
        v24 = v51;
        if (v23 == -1)
        {
          v26 = a2 + v14;
          if (v51 < a2 || v51 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack(v51, a2, 1, v46);
          }
          else if (v51 == a2)
          {
            v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v51);
          }
        }
        else
        {
          v25 = v50 + v14;
          if (v51 < v50 || v51 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack(v51, v50, 1, v46);
          }
          else if (v51 != v50)
          {
            swift_arrayInitWithTakeBackToFront(v51);
          }
          v50 = v25;
          v26 = a2;
        }
        v51 = v24 + v14;
        a4 = v50;
        if (v50 >= v20)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_59:
    sub_100D16300(&v51, &v50, (uint64_t *)&v49);
    return 1;
  }
LABEL_63:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

unint64_t sub_100A24294()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101402B88;
  if (!qword_101402B88)
  {
    v1 = _s8ItemDataCMa(255);
    result = swift_getWitnessTable(&unk_100F22174, v1);
    atomic_store(result, (unint64_t *)&qword_101402B88);
  }
  return result;
}

uint64_t sub_100A242DC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100A24308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_101402BBC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1004CFD00;
  v3[2] = v2;
  return swift_task_switch(sub_100A1FAA4, 0, 0);
}

uint64_t sub_100A24368()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A2438C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_101402BDC);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1004CF80C;
  return sub_100A20EB4(a1, a2, v6, v7, v8);
}

uint64_t sub_100A24408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100A244A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_101402BF4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1004CFD00;
  return sub_100A21434(a1, v6, v7, v8, v9, v10);
}

unint64_t sub_100A24554()
{
  unint64_t result;

  result = qword_101402C00;
  if (!qword_101402C00)
  {
    result = swift_getWitnessTable(&unk_100F2315C, &type metadata for CRLStencilLibrary.FakeDataStore.FakeDataStoreError);
    atomic_store(result, (unint64_t *)&qword_101402C00);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLStencilLibrary.FakeDataStore.FakeDataStoreError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100A245D8 + 4 * asc_100F22EC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100A245F8 + 4 * byte_100F22EC5[v4]))();
}

_BYTE *sub_100A245D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100A245F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A24600(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A24608(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100A24610(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100A24618(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CRLStencilLibrary.FakeDataStore.FakeDataStoreError()
{
  return &type metadata for CRLStencilLibrary.FakeDataStore.FakeDataStoreError;
}

unint64_t sub_100A24638()
{
  unint64_t result;

  result = qword_101402C10;
  if (!qword_101402C10)
  {
    result = swift_getWitnessTable(&unk_100F23134, &type metadata for CRLStencilLibrary.FakeDataStore.FakeDataStoreError);
    atomic_store(result, (unint64_t *)&qword_101402C10);
  }
  return result;
}

unint64_t sub_100A2467C()
{
  unint64_t result;

  result = sub_1008D5C30((uint64_t)_swiftEmptyArrayStorage);
  qword_101402C20 = result;
  return result;
}

uint64_t type metadata accessor for CRLAnalyticsUserSettings()
{
  return objc_opt_self(_TtC8Freeform24CRLAnalyticsUserSettings);
}

uint64_t sub_100A246C0(char a1, char a2, char a3, char a4, char a5)
{
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  if (qword_1013DD930 != -1)
    swift_once(&qword_1013DD930, sub_100A2467C);
  v10 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a1 & 1);
  swift_beginAccess(&qword_101402C20, v31, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(qword_101402C20);
  v26 = qword_101402C20;
  qword_101402C20 = 0x8000000000000000;
  sub_100826868((uint64_t)v10, 0xD000000000000011, 0x8000000100FECDE0, isUniquelyReferenced_nonNull_native);
  v12 = qword_101402C20;
  qword_101402C20 = v26;
  swift_bridgeObjectRelease(v12);
  swift_endAccess(v31);
  v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a2 & 1);
  swift_beginAccess(&qword_101402C20, v31, 33, 0);
  v14 = swift_isUniquelyReferenced_nonNull_native(qword_101402C20);
  v27 = qword_101402C20;
  qword_101402C20 = 0x8000000000000000;
  sub_100826868((uint64_t)v13, 0xD000000000000013, 0x8000000100FECE00, v14);
  v15 = qword_101402C20;
  qword_101402C20 = v27;
  swift_bridgeObjectRelease(v15);
  swift_endAccess(v31);
  v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a3 & 1);
  swift_beginAccess(&qword_101402C20, v31, 33, 0);
  v17 = swift_isUniquelyReferenced_nonNull_native(qword_101402C20);
  v28 = qword_101402C20;
  qword_101402C20 = 0x8000000000000000;
  sub_100826868((uint64_t)v16, 0xD000000000000014, 0x8000000100FECE20, v17);
  v18 = qword_101402C20;
  qword_101402C20 = v28;
  swift_bridgeObjectRelease(v18);
  swift_endAccess(v31);
  v19 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a4 & 1);
  swift_beginAccess(&qword_101402C20, v31, 33, 0);
  v20 = swift_isUniquelyReferenced_nonNull_native(qword_101402C20);
  v29 = qword_101402C20;
  qword_101402C20 = 0x8000000000000000;
  sub_100826868((uint64_t)v19, 0xD000000000000013, 0x8000000100FECE40, v20);
  v21 = qword_101402C20;
  qword_101402C20 = v29;
  swift_bridgeObjectRelease(v21);
  swift_endAccess(v31);
  v22 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a5 & 1);
  swift_beginAccess(&qword_101402C20, v31, 33, 0);
  v23 = swift_isUniquelyReferenced_nonNull_native(qword_101402C20);
  v30 = qword_101402C20;
  qword_101402C20 = 0x8000000000000000;
  sub_100826868((uint64_t)v22, 0xD00000000000001DLL, 0x8000000100FECE60, v23);
  v24 = qword_101402C20;
  qword_101402C20 = v30;
  swift_bridgeObjectRelease(v24);
  return swift_endAccess(v31);
}

void sub_100A249D4(char a1, char a2, char a3, char a4, char a5, char a6)
{
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  void *v15;
  NSString v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;
  _BYTE v20[24];

  if (qword_1013DD930 != -1)
    swift_once(&qword_1013DD930, sub_100A2467C);
  v12 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", a6 & 1);
  swift_beginAccess(&qword_101402C20, v20, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(qword_101402C20);
  v19 = qword_101402C20;
  qword_101402C20 = 0x8000000000000000;
  sub_100826868((uint64_t)v12, 0xD00000000000001ELL, 0x8000000100FECDA0, isUniquelyReferenced_nonNull_native);
  v14 = qword_101402C20;
  qword_101402C20 = v19;
  swift_bridgeObjectRelease(v14);
  swift_endAccess(v20);
  sub_100A246C0(a1 & 1, a2 & 1, a3 & 1, a4 & 1, a5 & 1);
  v15 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v16 = String._bridgeToObjectiveC()();
  v17 = qword_101402C20;
  sub_100511A70();
  swift_bridgeObjectRetain(v17);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v15, "sendEventInDomain:lazily:eventPayload:", v16, 1, isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

}

void static CRLAnalyticsFeatureUsed.logFeatureUsed(named:)(uint64_t a1)
{
  void *v2;
  NSString v3;
  Class isa;

  v2 = (void *)objc_opt_self(CRLAnalyticsLogger);
  v3 = String._bridgeToObjectiveC()();
  _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(a1);
  sub_100511A70();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "sendEventInDomain:lazily:eventPayload:", v3, 1, isa, swift_bridgeObjectRelease().n128_f64[0]);

}

id CRLAnalyticsFeatureUsed.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsFeatureUsed();
  return objc_msgSendSuper2(&v2, "init");
}

id CRLAnalyticsFeatureUsed.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsFeatureUsed();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  id v6;
  NSString v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[56];
  _BYTE v15[72];

  sub_100C01F7C(a1);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1004B804C(&qword_1013E65C0);
    inited = swift_initStackObject(v4, v14);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    *(_QWORD *)(inited + 32) = 0x4E65727574616566;
    *(_QWORD *)(inited + 40) = 0xEB00000000656D61;
    v6 = objc_allocWithZone((Class)NSString);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "initWithString:", v7, swift_bridgeObjectRelease(v3).n128_f64[0]);

    *(_QWORD *)(inited + 48) = v8;
    v9 = (_QWORD *)inited;
  }
  else
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    v11 = swift_initStackObject(v10, v15);
    *(_OWORD *)(v11 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v11 + 56) = &type metadata for Int;
    *(_QWORD *)(v11 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v11 + 32) = a1;
    sub_100757E04(&_mh_execute_header, (uint64_t)"featurePayload(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLAnalyticsFeatureUsed.swift", 98, 2, 19, "Feature Name: (%lu) for analytics is unrecognized", 49, 2u, v11);
    sub_1004F5394(v11, (uint64_t)"featurePayload(for:)", 20, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLAnalyticsFeatureUsed.swift", 98, 2u, 19, (uint64_t)"Feature Name: (%lu) for analytics is unrecognized", 49, 2u);
    swift_setDeallocating(v11);
    v12 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(v11 + 32, 1, v12);
    v9 = _swiftEmptyArrayStorage;
  }
  return sub_1008D5C30((uint64_t)v9);
}

uint64_t type metadata accessor for CRLAnalyticsFeatureUsed()
{
  return objc_opt_self(_TtC8Freeform23CRLAnalyticsFeatureUsed);
}

void sub_100A24FF8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  char *v3;
  __n128 v4;
  char v5;
  _QWORD *v7;
  int v8;
  unint64_t v9;
  unsigned __int16 v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];
  uint64_t v15;

  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted) != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_encrypted))
  {
    v2 = sub_10070DD18();
    swift_allocError(&type metadata for CRLChunkedRealTimeMessageBufferError, v2, 0, 0);
    v5 = 2;
LABEL_9:
    *v3 = v5;
    swift_willThrow(v4);
    return;
  }
  v7 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer, v14, 0, 0);
  v8 = *(unsigned __int16 *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_lastIndex) + 1;
  if ((v8 & 0x10000) == 0)
  {
    if (*(_QWORD *)(*v7 + 16) == (unsigned __int16)v8)
    {
      v9 = sub_10070DD18();
      swift_allocError(&type metadata for CRLChunkedRealTimeMessageBufferError, v9, 0, 0);
      v5 = 1;
    }
    else
    {
      if ((static UUID.== infix(_:_:)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chainID) & 1) != 0)
      {
        v10 = *(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
        swift_beginAccess(v7, v13, 33, 0);
        swift_retain(a1);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
        v15 = *v7;
        *v7 = 0x8000000000000000;
        sub_100826E20(a1, v10, isUniquelyReferenced_nonNull_native);
        *v7 = v15;
        swift_bridgeObjectRelease();
        swift_endAccess(v13);
        return;
      }
      v12 = sub_10070DD18();
      swift_allocError(&type metadata for CRLChunkedRealTimeMessageBufferError, v12, 0, 0);
      v5 = 0;
    }
    goto LABEL_9;
  }
  __break(1u);
}

void sub_100A251BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  _BYTE v11[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer, v11, 0, 0);
  swift_bridgeObjectRetain(*v1);
  *(_QWORD *)&v10 = sub_1005FF310(v2);
  sub_100A2554C((uint64_t *)&v10);
  swift_bridgeObjectRelease();
  v3 = v10;
  v10 = xmmword_100EF78C0;
  if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
      goto LABEL_4;
LABEL_12:
    swift_release(v3);
    return;
  }
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_release(v3);
  if (!v4)
    goto LABEL_12;
LABEL_4:
  if (v4 < 1)
  {
    __break(1u);
    swift_release(v10);
    __break(1u);
  }
  else
  {
    v5 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      }
      else
      {
        v6 = *(_QWORD *)(v3 + 8 * v5 + 32);
        swift_retain(v6);
      }
      ++v5;
      v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
      v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data + 8);
      sub_1004BE310(v7, v8);
      Data.append(_:)(v7, v8);
      sub_1004BBBC8(v7, v8);
      swift_release(v6);
    }
    while (v4 != v5);
    swift_release(v3);
  }
}

uint64_t sub_100A25340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chainID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A253A0()
{
  return type metadata accessor for CRLUnorderedChunkedRealTimeMessageBuffer(0);
}

uint64_t type metadata accessor for CRLUnorderedChunkedRealTimeMessageBuffer(uint64_t a1)
{
  uint64_t result;

  result = qword_101402D30;
  if (!qword_101402D30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLUnorderedChunkedRealTimeMessageBuffer);
  return result;
}

uint64_t sub_100A253E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100F23260;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.Int16 + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100A25474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chainID;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100A254B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int v3;
  _BYTE v4[24];

  v1 = v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer;
  result = swift_beginAccess(v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer, v4, 0, 0);
  v3 = *(unsigned __int16 *)(v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_lastIndex) + 1;
  if ((v3 & 0x10000) == 0)
    return *(_QWORD *)(*(_QWORD *)v1 + 16) == (unsigned __int16)v3;
  __break(1u);
  return result;
}

uint64_t sub_100A25524()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_encrypted);
}

void sub_100A25534(uint64_t a1)
{
  sub_100A24FF8(a1);
}

uint64_t sub_100A2554C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_100D19694(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100A255C4(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_100A255C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  __n128 v6;
  __n128 v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t *v22;
  Swift::Int v23;
  Swift::Int v24;
  uint64_t *v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t *v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  Swift::Int v95;
  Swift::Int v96;
  uint64_t v97;
  char *__dst;
  uint64_t v99;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_129;
    if (v4)
      sub_100A25C4C(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v8 = v4;
  else
    v8 = v4 + 1;
  if (v4 < -1)
    goto LABEL_137;
  v9 = v5;
  v93 = a1;
  if (v4 < 2)
  {
    v13 = (char *)_swiftEmptyArrayStorage;
    v99 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v16 = *(_QWORD *)&_swiftEmptyArrayStorage[2];
LABEL_95:
      v85 = v13;
      if (v16 >= 2)
      {
        v86 = *v93;
        do
        {
          v87 = v16 - 2;
          if (v16 < 2)
            goto LABEL_124;
          if (!v86)
            goto LABEL_136;
          v88 = v85;
          v89 = *(_QWORD *)&v85[16 * v87 + 32];
          v90 = *(_QWORD *)&v85[16 * v16 + 24];
          sub_100A25CC0((char *)(v86 + 8 * v89), (char *)(v86 + 8 * *(_QWORD *)&v85[16 * v16 + 16]), v86 + 8 * v90, __dst, v6, v7);
          if (v2)
            break;
          if (v90 < v89)
            goto LABEL_125;
          if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0)
            v88 = sub_100D1664C((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_126;
          v91 = &v88[16 * v87 + 32];
          *(_QWORD *)v91 = v89;
          *((_QWORD *)v91 + 1) = v90;
          v92 = *((_QWORD *)v88 + 2);
          if (v16 > v92)
            goto LABEL_127;
          memmove(&v88[16 * v16 + 16], &v88[16 * v16 + 32], 16 * (v92 - v16));
          v85 = v88;
          *((_QWORD *)v88 + 2) = v92 - 1;
          v16 = v92 - 1;
        }
        while (v92 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v84);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v10 = v8 >> 1;
    v11 = type metadata accessor for CRLChunkedRealTimeMessage(0);
    v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    __dst = (char *)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    v99 = v12;
  }
  v14 = 0;
  v15 = *a1;
  v94 = *a1 - 8;
  v13 = (char *)_swiftEmptyArrayStorage;
  v95 = v9;
  v96 = v4;
  v97 = *a1;
  while (1)
  {
    v17 = v14++;
    if (v14 < v4)
    {
      v18 = *(unsigned __int16 *)(*(_QWORD *)(v15 + 8 * v14) + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
      v19 = *(unsigned __int16 *)(*(_QWORD *)(v15 + 8 * v17) + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
      v14 = v17 + 2;
      if (v17 + 2 < v4)
      {
        v20 = v18;
        while (1)
        {
          v21 = *(unsigned __int16 *)(*(_QWORD *)(v15 + 8 * v14)
                                    + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
          if (v18 < v19 == v21 >= v20)
            break;
          ++v14;
          v20 = v21;
          if (v4 == v14)
          {
            v14 = v4;
            break;
          }
        }
      }
      if (v18 < v19)
      {
        if (v14 < v17)
          goto LABEL_130;
        if (v17 < v14)
        {
          v22 = (uint64_t *)(v94 + 8 * v14);
          v23 = v14;
          v24 = v17;
          v25 = (uint64_t *)(v15 + 8 * v17);
          do
          {
            if (v24 != --v23)
            {
              if (!v15)
                goto LABEL_135;
              v26 = *v25;
              *v25 = *v22;
              *v22 = v26;
            }
            ++v24;
            --v22;
            ++v25;
          }
          while (v24 < v23);
        }
      }
    }
    if (v14 >= v4)
      goto LABEL_45;
    if (__OFSUB__(v14, v17))
      goto LABEL_128;
    if (v14 - v17 >= v9)
      goto LABEL_45;
    v27 = v17 + v9;
    if (__OFADD__(v17, v9))
      goto LABEL_131;
    if (v27 >= v4)
      v27 = v4;
    if (v27 < v17)
      break;
    if (v14 != v27)
    {
      v28 = (uint64_t *)(v94 + 8 * v14);
      do
      {
        v29 = *(_QWORD *)(v15 + 8 * v14);
        v30 = v17;
        v31 = v28;
        do
        {
          v32 = *v31;
          if (*(unsigned __int16 *)(v29 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(*v31 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
            break;
          if (!v15)
            goto LABEL_133;
          *v31 = v29;
          v31[1] = v32;
          --v31;
          ++v30;
        }
        while (v14 != v30);
        ++v14;
        ++v28;
      }
      while (v14 != v27);
      v14 = v27;
    }
LABEL_45:
    if (v14 < v17)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100D15FCC(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v34 = *((_QWORD *)v13 + 2);
    v33 = *((_QWORD *)v13 + 3);
    v16 = v34 + 1;
    v15 = v97;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_100D15FCC((char *)(v33 > 1), v34 + 1, 1, v13);
      v15 = v97;
      v13 = v83;
    }
    *((_QWORD *)v13 + 2) = v16;
    v35 = v13 + 32;
    v36 = &v13[16 * v34 + 32];
    *(_QWORD *)v36 = v17;
    *((_QWORD *)v36 + 1) = v14;
    if (v34)
    {
      while (1)
      {
        v37 = v16 - 1;
        if (v16 >= 4)
        {
          v42 = &v35[16 * v16];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_112;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_113;
          v49 = v16 - 2;
          v50 = &v35[16 * v16 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_115;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_118;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_122;
            v65 = v40 < v75;
            goto LABEL_82;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v66 = *((_QWORD *)v13 + 4);
            v67 = *((_QWORD *)v13 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_76;
          }
          v39 = *((_QWORD *)v13 + 4);
          v38 = *((_QWORD *)v13 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_114;
        v49 = v16 - 2;
        v55 = &v35[16 * v16 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_117;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_120;
        if (__OFADD__(v59, v64))
          goto LABEL_121;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_82:
          if (v65)
            v37 = v49;
          goto LABEL_84;
        }
LABEL_76:
        if ((v60 & 1) != 0)
          goto LABEL_116;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_119;
        if (v71 < v59)
          goto LABEL_14;
LABEL_84:
        v76 = v37 - 1;
        if (v37 - 1 >= v16)
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (!v15)
          goto LABEL_134;
        v77 = v13;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_100A25CC0((char *)(v15 + 8 * *(_QWORD *)v78), (char *)(v15 + 8 * *(_QWORD *)v80), v15 + 8 * v81, __dst, v6, v7);
        if (v1)
          goto LABEL_92;
        if (v81 < v79)
          goto LABEL_109;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_110;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_111;
        v13 = v77;
        v16 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v15 = v97;
        if (v82 <= 2)
          goto LABEL_14;
      }
    }
    v16 = 1;
LABEL_14:
    v9 = v95;
    v4 = v96;
    if (v14 >= v96)
    {
      v2 = v1;
      goto LABEL_95;
    }
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_100A25C4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (uint64_t *)v5;
    while (1)
    {
      v9 = *v8;
      if (*(unsigned __int16 *)(v6 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(*v8 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100A25CC0(char *__src, char *a2, unint64_t a3, char *__dst, __n128 a5, __n128 a6)
{
  char *v6;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  char *v25;
  char *v26;

  v6 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v11 = a2 - __src;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v14 = a3 - (_QWORD)a2;
  v15 = v14 >> 3;
  v26 = __src;
  v25 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst)
        memmove(__dst, a2, 8 * v15);
      v18 = &v6[8 * v15];
      v24 = v18;
      v26 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        v19 = (char *)(a3 - 8);
        while (1)
        {
          v20 = v19 + 8;
          v21 = v8 - 8;
          v22 = *((_QWORD *)v8 - 1);
          if (*(unsigned __int16 *)(*((_QWORD *)v18 - 1) + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(v22 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
          {
            v24 = v18 - 8;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_QWORD *)v19 = *((_QWORD *)v18 - 1);
            v18 -= 8;
            if (v8 <= v9)
              goto LABEL_42;
          }
          else
          {
            if (v20 != v8 || v19 >= v8)
              *(_QWORD *)v19 = v22;
            v26 = v8 - 8;
            v8 -= 8;
            if (v21 <= v9)
              goto LABEL_42;
          }
          v19 -= 8;
          if (v18 <= v6)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst)
      memmove(__dst, __src, 8 * v12);
    v16 = &v6[8 * v12];
    v24 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      do
      {
        if (*(unsigned __int16 *)(*(_QWORD *)v8 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(*(_QWORD *)v6 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
        {
          if (v9 != v6)
            *(_QWORD *)v9 = *(_QWORD *)v6;
          v6 += 8;
          v25 = v6;
          v17 = v8;
        }
        else
        {
          v17 = v8 + 8;
          if (v9 < v8 || v9 >= v17 || v9 != v8)
            *(_QWORD *)v9 = *(_QWORD *)v8;
        }
        v9 += 8;
        if (v6 >= v16)
          break;
        v8 = v17;
      }
      while ((unint64_t)v17 < a3);
      v26 = v9;
    }
LABEL_42:
    sub_100D162E4(&v26, &v25, &v24, a5, a6);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100A25F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int16 v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[24];

  v2 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer) = _swiftEmptyDictionarySingleton;
  v4 = a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_chainID;
  v5 = v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chainID;
  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v4, v6);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_encrypted) = *(_BYTE *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted);
  *(_WORD *)(v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_lastIndex) = *(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex);
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer);
  v8 = *(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
  swift_beginAccess(v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer, v13, 33, 0);
  swift_retain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
  v12 = *v7;
  *v7 = 0x8000000000000000;
  sub_100826E20(a1, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v7;
  *v7 = v12;
  swift_bridgeObjectRelease(v10);
  swift_endAccess(v13);
  return v2;
}

id sub_100A26198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  objc_super v15;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectionLineID];
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  sub_1006950CC(a2, (uint64_t)&v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectedItemID]);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_chirality] = a3;
  *(_QWORD *)&v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_pathSource] = a4;
  v15.receiver = v9;
  v15.super_class = v4;
  v13 = objc_msgSendSuper2(&v15, "init");
  sub_1004C1F2C(a2);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v13;
}

id sub_100A26410(char *a1, _QWORD *a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(__n128);
  __n128 v16;
  NSUUID v17;
  void (*v18)(char *, uint64_t);
  void (*v19)(void);
  Class isa;
  id v21;
  id v23;
  uint64_t v24;

  v24 = a3;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v15 = *(void (**)(__n128))(*(_QWORD *)v14 + 256);
  v16 = swift_retain(v14);
  v15(v16);
  swift_release(v14);
  v17.super.isa = UUID._bridgeToObjectiveC()().super.isa;
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  if (a2)
  {
    v19 = *(void (**)(void))((swift_isaMask & *a2) + 0x88);
    a2 = a2;
    v19();

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      isa = 0;
    }
    else
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v18(v9, v10);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    isa = 0;
  }
  v21 = objc_msgSend(v23, "initWithConnectionLineID:connectedItemID:chirality:pathSource:", v17.super.isa, isa, v24, a4);

  return v21;
}

id sub_100A2665C(char *a1, _QWORD *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(__n128);
  __n128 v16;
  NSUUID v17;
  void (*v18)(char *, uint64_t);
  void (*v19)(void);
  Class isa;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v24 = a3;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v15 = *(void (**)(__n128))(*(_QWORD *)v14 + 256);
  v16 = swift_retain(v14);
  v15(v16);
  swift_release(v14);
  v17.super.isa = UUID._bridgeToObjectiveC()().super.isa;
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  if (a2)
  {
    v19 = *(void (**)(void))((swift_isaMask & *a2) + 0x88);
    a2 = a2;
    v19();

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      isa = 0;
    }
    else
    {
      isa = UUID._bridgeToObjectiveC()().super.isa;
      v18(v9, v10);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    isa = 0;
  }
  v21 = objc_msgSend(v4, "initWithConnectionLineID:connectedItemID:chirality:pathSource:", v17.super.isa, isa, v24, 0);

  return v21;
}

void sub_100A26894(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  Class v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  CKRecordID v28;
  uint64_t v29;
  _BYTE v31[12];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a2;
  v4 = v3;
  v32 = a3;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v6);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v14)
    goto LABEL_19;
  v15 = type metadata accessor for CRLConnectionLineItem(0);
  v16 = swift_dynamicCastClass(v14, v15);
  if (!v16)
  {

LABEL_19:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetConnectionLineConnection.swift", 109, 2, 41, "Unable to retrieve connection line item.", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve connection line item.");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetConnectionLineConnection.swift", 109, 2u, 41, (uint64_t)"Unable to retrieve connection line item.", 40, 2u);
    goto LABEL_20;
  }
  v17 = v16;
  sub_1006950CC(v4 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectedItemID, (uint64_t)v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1004C1F2C((uint64_t)v8);
    v18 = 0;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
    v19 = UUID._bridgeToObjectiveC()().super.isa;
    v18 = objc_msgSend(a1, "getBoardItemForUUID:", v19);

    if (!v18)
    {
      while (1)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetConnectionLineConnection.swift", 109, 2, 47, "Unable to retrieve item to connect to connection line.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve item to connect to connection line.");
        sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetConnectionLineConnection.swift", 109, 2u, 47, (uint64_t)"Unable to retrieve item to connect to connection line.", 54, 2u);
LABEL_20:
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v28, *(Swift::String *)&v29);
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
        __break(1u);
      }
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  }
  v20 = v14;
  v21 = v33;
  sub_100DBEE64(v17, (uint64_t)&off_10127C5E0);

  if (v21)
  {

LABEL_16:
    return;
  }
  v22 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_chirality);
  if (v22 == 1)
  {
    sub_100870D00(v18);
LABEL_12:
    v23 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_pathSource);
    if (v23)
    {
      v24 = v23;
      v25 = v20;
      v26 = v24;
      sub_10092345C((uint64_t)v26);

    }
    v27 = v20;
    sub_100DB0D78(v17, (uint64_t)&off_10127C5E0, v32);

    goto LABEL_16;
  }
  if (!v22)
  {
    sub_100870894(v18);
    goto LABEL_12;
  }

  v35 = v22;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for CRLCommandSetConnectionLineConnectionChirality, &v35, &type metadata for CRLCommandSetConnectionLineConnectionChirality, &type metadata for Int);
  __break(1u);
}

void sub_100A26D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectionLineID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1004C1F2C(v0 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectedItemID);

}

id sub_100A26D60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetConnectionLineConnection(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100A26DF4()
{
  return type metadata accessor for CRLCommandSetConnectionLineConnection(0);
}

uint64_t type metadata accessor for CRLCommandSetConnectionLineConnection(uint64_t a1)
{
  uint64_t result;

  result = qword_101402E30;
  if (!qword_101402E30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandSetConnectionLineConnection);
  return result;
}

void sub_100A26E38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v2 = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1005E26CC(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[3] = "\b";
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 200);
    }
  }
}

ValueMetadata *type metadata accessor for CRLCommandSetConnectionLineConnectionChirality()
{
  return &type metadata for CRLCommandSetConnectionLineConnectionChirality;
}

unint64_t sub_100A26EEC()
{
  unint64_t result;

  result = qword_101402E40;
  if (!qword_101402E40)
  {
    result = swift_getWitnessTable(&unk_100F23378, &type metadata for CRLCommandSetConnectionLineConnectionChirality);
    atomic_store(result, (unint64_t *)&qword_101402E40);
  }
  return result;
}

uint64_t sub_100A26F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6[38] = a5;
  v6[39] = v5;
  v6[36] = a3;
  v6[37] = a4;
  v6[34] = a1;
  v6[35] = a2;
  v6[40] = *v5;
  v7 = type metadata accessor for DispatchData(0);
  v6[41] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[42] = v8;
  v6[43] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v6[44] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[45] = v10;
  v6[46] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_101401330) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[47] = swift_task_alloc(v11);
  v6[48] = swift_task_alloc(v11);
  v12 = type metadata accessor for URL(0);
  v6[49] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[50] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v6[51] = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[52] = swift_task_alloc(v15);
  v6[53] = swift_task_alloc(v15);
  v6[54] = swift_task_alloc(v15);
  v6[55] = swift_task_alloc(v15);
  return swift_task_switch(sub_100A2707C, 0, 0);
}

uint64_t sub_100A2707C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 200) = &off_101291878;
  *(_QWORD *)(v0 + 168) = v1;
  v4 = type metadata accessor for CRLSerializableObjectWriteCoordinator();
  v11 = *(_OWORD *)(v0 + 272);
  inited = swift_initStackObject(v4, v0 + 16);
  *(_QWORD *)(v0 + 448) = inited;
  *(_QWORD *)(inited + 96) = 0;
  *(_OWORD *)(inited + 16) = v11;
  sub_1004DB728((__int128 *)(v0 + 168), inited + 32);
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = v3;
  *(_QWORD *)(inited + 88) = 5;
  v6 = dword_1013F5FA4;
  swift_unknownObjectRetain(v11);
  swift_retain(v1);
  v7 = v2;
  v8 = v3;
  v9 = (_QWORD *)swift_task_alloc(v6);
  *(_QWORD *)(v0 + 456) = v9;
  *v9 = v0;
  v9[1] = sub_100A27180;
  return sub_100862AE4();
}

uint64_t sub_100A27180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100A27C5C;
  else
    v3 = sub_100A27228;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A27228()
{
  _QWORD *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  NSString v43;
  NSString v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  NSURL *v53;
  void *v54;
  void *v55;
  NSURL *v56;
  void *v57;
  void *v58;
  unsigned int v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void *v77;
  void (*v78)(uint64_t, uint64_t);
  id v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  void *v94;
  uint64_t v95;
  id v96;
  uint64_t (*v97)(void);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  __n128 v106;
  void (*v107)(uint64_t, uint64_t);
  __n128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v117;
  unint64_t v118;
  NSString v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  _QWORD *v128;
  uint64_t v129;
  int64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int64_t v138;
  uint64_t v139;

  v1 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v0[32] = 0;
  v2 = objc_msgSend(v1, "initWithError:", v0 + 32);
  v3 = (void *)v0[32];
  v4 = v0[56];
  if (!v2)
  {
    v10 = v3;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow(v11);
    swift_release(v4);
    goto LABEL_37;
  }
  v5 = v2;
  v6 = v3;
  v127 = v5;
  v7 = objc_msgSend(v5, "URL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v7);

  v8 = *(_QWORD *)(v4 + 96);
  if (v8)
  {
    v9 = *(_QWORD **)(v4 + 96);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"assetFileURLMap", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2, 38, "Reading asset file URL map before writing the object.", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"assetFileURLMap", 15, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2u, 38, (uint64_t)"Reading asset file URL map before writing the object.", 53, 2u);
    v8 = 0;
    v9 = _swiftEmptyDictionarySingleton;
  }
  v12 = v0[50];
  v13 = v0[45];
  v132 = v9;
  v15 = v9 + 8;
  v14 = v9[8];
  v128 = v15;
  v16 = -1;
  v17 = -1 << *((_BYTE *)v15 - 32);
  if (-v17 < 64)
    v16 = ~(-1 << -(char)v17);
  v18 = v16 & v14;
  v130 = (unint64_t)(63 - v17) >> 6;
  v19 = swift_bridgeObjectRetain(v8);
  v137 = v12;
  v138 = 0;
  v134 = v13;
  if (!v18)
    goto LABEL_11;
LABEL_9:
  v20 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v21 = v20 | (v138 << 6);
LABEL_10:
  v22 = v0[49];
  v23 = v0[47];
  (*(void (**)(uint64_t, unint64_t, _QWORD, __n128))(v13 + 16))(v23, v132[6] + *(_QWORD *)(v13 + 72) * v21, v0[44], v19);
  v24 = v132[7] + *(_QWORD *)(v12 + 72) * v21;
  v25 = sub_1004B804C(&qword_101401338);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v23 + *(int *)(v25 + 48), v24, v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 0, 1, v25);
  while (1)
  {
    v31 = v0[48];
    sub_100A28064(v0[47], v31);
    v32 = sub_1004B804C(&qword_101401338);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32) == 1)
    {
      v123 = v0[56];
      v139 = v0[55];
      v124 = v0[54];
      v125 = v0[53];
      v136 = v0[52];
      v120 = v0[50];
      v121 = v0[51];
      v135 = v0[49];
      v126 = v0[48];
      v129 = v0[47];
      v131 = v0[46];
      v69 = v0[42];
      v68 = v0[43];
      v70 = v0[41];
      v71 = v0[39];
      v122 = (id)v0[36];
      swift_release(v132);
      v72 = *(_QWORD *)(v71 + 32);
      v73 = (void *)objc_opt_self(NSData);
      v74 = v72 + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
      swift_beginAccess(v74, v0 + 26, 0, 0);
      v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
      v76 = v75(v68, v74, v70);
      v77 = (void *)DispatchData._bridgeToObjectiveC()(v76);
      v78 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v78(v68, v70);
      v79 = objc_msgSend(v73, "crl_dataFromDispatchData:", v77);

      v133 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v79);
      v118 = v80;

      v81 = *(_QWORD *)(v71 + 40) + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
      swift_beginAccess(v81, v0 + 29, 0, 0);
      v82 = v75(v68, v81, v70);
      v83 = (void *)DispatchData._bridgeToObjectiveC()(v82);
      v78(v68, v70);
      v84 = objc_msgSend(v73, "crl_dataFromDispatchData:", v83);

      v117 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v84);
      v86 = v85;

      v119 = String._bridgeToObjectiveC()();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 16))(v136, v139, v135);
      v87 = *(unsigned __int8 *)(v120 + 80);
      v88 = (v87 + 24) & ~v87;
      v89 = (v121 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
      v90 = (v89 + 23) & 0xFFFFFFFFFFFFFFF8;
      v91 = swift_allocObject(&unk_1012918A8, v90 + 16, v87 | 7);
      *(_QWORD *)(v91 + 16) = v127;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 32))(v91 + v88, v136, v135);
      v92 = (uint64_t *)(v91 + v89);
      *v92 = v117;
      v92[1] = v86;
      v93 = (uint64_t *)(v91 + v90);
      *v93 = v133;
      v93[1] = v118;
      v0[19] = sub_100A28154;
      v0[20] = v91;
      v0[15] = _NSConcreteStackBlock;
      v0[16] = *(_QWORD *)"";
      v0[17] = sub_1008CAB08;
      v0[18] = &unk_1012918C0;
      v94 = _Block_copy(v0 + 15);
      v95 = v0[20];
      v96 = v127;
      sub_1004BE310(v117, v86);
      sub_1004BE310(v133, v118);
      objc_msgSend(v122, "registerFileRepresentationForTypeIdentifier:fileOptions:visibility:loadHandler:", v119, 0, 1, v94, swift_release(v95).n128_f64[0]);
      _Block_release(v94);

      swift_release(v123);
      sub_1004BBBC8(v133, v118);
      sub_1004BBBC8(v117, v86);

      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v139, v135);
      swift_task_dealloc(v139);
      swift_task_dealloc(v124);
      swift_task_dealloc(v125);
      swift_task_dealloc(v136);
      swift_task_dealloc(v126);
      swift_task_dealloc(v129);
      swift_task_dealloc(v131);
      swift_task_dealloc(v68);
      v97 = (uint64_t (*)(void))v0[1];
      return v97();
    }
    v33 = v0[54];
    v34 = v0[49];
    v35 = v0[48] + *(int *)(v32 + 48);
    (*(void (**)(_QWORD))(v13 + 32))(v0[46]);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v33, v35, v34);
    UUID.uuidString.getter(v36);
    v38 = v37;
    URL.lastPathComponent.getter(v39);
    v41 = v40;
    v42 = String._bridgeToObjectiveC()();
    v43 = String._bridgeToObjectiveC()();
    v44 = objc_msgSend(v43, "pathExtension");

    if (!v44)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v47 = v46;
      v44 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v45 = swift_bridgeObjectRelease(v47).n128_u64[0];
    }
    v48 = objc_msgSend(v42, "stringByAppendingPathComponent:", v44, v45);

    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    URL.appendingPathComponent(_:)(v49, v51);
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v41);
    swift_bridgeObjectRelease(v38);
    v52 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
    URL._bridgeToObjectiveC()(v53);
    v55 = v54;
    URL._bridgeToObjectiveC()(v56);
    v58 = v57;
    v0[33] = 0;
    v59 = objc_msgSend(v52, "copyItemAtURL:toURL:error:", v55, v57, v0 + 33);

    v60 = (void *)v0[33];
    if (!v59)
      break;
    v62 = v0[53];
    v61 = v0[54];
    v63 = v0[49];
    v64 = v0[46];
    v65 = v0[44];
    v66 = v60;
    v12 = v137;
    v67 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
    v67(v62, v63);
    v67(v61, v63);
    v13 = v134;
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v64, v65);
    if (v18)
      goto LABEL_9;
LABEL_11:
    v26 = v138 + 1;
    if (__OFADD__(v138, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    if (v26 < v130)
    {
      v27 = v128[v26];
      if (v27)
        goto LABEL_14;
      v28 = v138 + 2;
      ++v138;
      if (v26 + 1 < v130)
      {
        v27 = v128[v28];
        if (v27)
          goto LABEL_17;
        v138 = v26 + 1;
        if (v26 + 2 < v130)
        {
          v27 = v128[v26 + 2];
          if (v27)
          {
            v26 += 2;
            goto LABEL_14;
          }
          v28 = v26 + 3;
          v138 = v26 + 2;
          if (v26 + 3 < v130)
          {
            v27 = v128[v28];
            if (v27)
            {
LABEL_17:
              v26 = v28;
LABEL_14:
              v18 = (v27 - 1) & v27;
              v21 = __clz(__rbit64(v27)) + (v26 << 6);
              v138 = v26;
              goto LABEL_10;
            }
            while (1)
            {
              v26 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_40;
              if (v26 >= v130)
                break;
              v27 = v128[v26];
              ++v28;
              if (v27)
                goto LABEL_14;
            }
            v138 = v130 - 1;
          }
        }
      }
    }
    v29 = v0[47];
    v30 = sub_1004B804C(&qword_101401338);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    v18 = 0;
  }
  v99 = v0[55];
  v98 = v0[56];
  v101 = v0[53];
  v100 = v0[54];
  v102 = v0[49];
  v103 = v0[46];
  v104 = v0[44];
  v105 = v60;
  _convertNSErrorToError(_:)(v60);

  swift_willThrow(v106);
  swift_release(v98);

  v107 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
  v107(v101, v102);
  v107(v100, v102);
  (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v103, v104);
  v108 = swift_release(v132);
  ((void (*)(uint64_t, uint64_t, __n128))v107)(v99, v102, v108);
LABEL_37:
  v109 = v0[54];
  v111 = v0[52];
  v110 = v0[53];
  v113 = v0[47];
  v112 = v0[48];
  v114 = v0[46];
  v115 = v0[43];
  swift_task_dealloc(v0[55]);
  swift_task_dealloc(v109);
  swift_task_dealloc(v110);
  swift_task_dealloc(v111);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  v97 = (uint64_t (*)(void))v0[1];
  return v97();
}

uint64_t sub_100A27C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 448));
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v5 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v6 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 344);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100A27D2C(void (*a1)(char *, _QWORD, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v24)(char *, uint64_t);
  _QWORD v25[2];
  void (*v26)(char *, _QWORD, _QWORD);

  v25[1] = a2;
  v26 = a1;
  v13 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v13);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)v25 - v21;
  URL.appendingPathComponent(_:)(0x737463656A626FLL, 0xE700000000000000);
  Data.write(to:options:)(v22, 0, a5, a6);
  URL.appendingPathComponent(_:)(0x617461646174656DLL, 0xE800000000000000);
  Data.write(to:options:)(v19, 0, a7, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a4, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v26(v15, 0, 0);
  sub_1005534BC((uint64_t)v15);
  v24 = *(void (**)(char *, uint64_t))(v17 + 8);
  v24(v19, v16);
  v24(v22, v16);
  return 0;
}

uint64_t sub_100A27F58()
{
  id *v0;

  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for CRLItemProviderWriteAssistant()
{
  return objc_opt_self(_TtC8Freeform29CRLItemProviderWriteAssistant);
}

id sub_100A27FB4()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 32);
}

id sub_100A27FE0()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 40);
}

void sub_100A2800C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000033, 0x8000000100FEA6D0, "Freeform/CRLItemProviderWriteAssistant.swift", 44, 2, 79, 0);
  __break(1u);
}

uint64_t sub_100A28064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C(&qword_101401330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A280AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_1004BBBC8(*(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8));
  sub_1004BBBC8(*(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_100A28154(void (*a1)(char *, _QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100A27D2C(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(_QWORD *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

double sub_100A281CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

double sub_100A281DC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_100A281F4(char *a1, uint64_t a2, char a3, uint64_t a4)
{
  objc_class *v4;
  objc_class *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  void (*v15)(char *, char *, uint64_t);
  objc_class *v16;
  id v17;
  void (*v18)(char *, uint64_t);
  objc_super v20;

  v5 = v4;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone(v5);
  v14[OBJC_IVAR____TtC8Freeform38CRLCommandReplaceImageWithImageSubject_isBackgroundRemoved] = a3;
  v15 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v15(v13, a1, v10);
  v15(&v14[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_id], v13, v10);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_imageData] = a2;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_thumbnailData] = a4;
  v16 = (objc_class *)type metadata accessor for CRLCommandReplaceImage(0);
  v20.receiver = v14;
  v20.super_class = v16;
  v17 = objc_msgSendSuper2(&v20, "init");
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  v18(a1, v10);
  return v17;
}

void sub_100A286CC(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v10;
  uint64_t v11;
  CKRecordID v12;
  Swift::String v13;

  v5 = v3;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v10)
    goto LABEL_7;
  v11 = type metadata accessor for CRLImageItem(0);
  if (!swift_dynamicCastClass(v10, v11))
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImageWithImageSubject.swift", 110, 2, 30, "Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImageWithImageSubject.swift", 110, 2u, 30, (uint64_t)"Unable to retrieve image item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  sub_100C73878(a1, a2, a3);
  if (!v4)
    sub_1008CCE48(*(_BYTE *)(v5 + OBJC_IVAR____TtC8Freeform38CRLCommandReplaceImageWithImageSubject_isBackgroundRemoved));

}

void sub_100A28888()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLCommandReplaceImageWithImageSubject", 47, "init(id:imageData:thumbnailData:)", 33, 0);
  __break(1u);
}

id sub_100A28938()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandReplaceImageWithImageSubject(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100A2896C()
{
  return type metadata accessor for CRLCommandReplaceImageWithImageSubject(0);
}

uint64_t type metadata accessor for CRLCommandReplaceImageWithImageSubject(uint64_t a1)
{
  uint64_t result;

  result = qword_101402F30;
  if (!qword_101402F30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLCommandReplaceImageWithImageSubject);
  return result;
}

uint64_t sub_100A289B0(uint64_t a1)
{
  void *v2;

  v2 = &unk_100F23418;
  return swift_updateClassMetadata2(a1, 256, 1, &v2, a1 + 232);
}

void sub_100A289F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  __n128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  __n128 v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  _QWORD *v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  char *v94;
  uint64_t v95;
  __n128 v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  _BOOL8 v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  void (*v154)(char *, uint64_t);
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char v159[8];
  _QWORD *v160;
  char v161[8];
  uint64_t v162;
  char v163[8];
  char v164[8];
  char v165[8];
  char v166[8];

  v128 = a3;
  v5 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v5);
  v132 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_101403058);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v157 = (char *)&v127 - v11;
  v12 = sub_1004B804C(&qword_1013F5530);
  __chkstk_darwin(v12);
  v146 = (uint64_t)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD **)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v138 = (uint64_t)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v131 = (char *)&v127 - v19;
  v20 = __chkstk_darwin(v18);
  v150 = (char *)&v127 - v21;
  v22 = __chkstk_darwin(v20);
  v145 = (char *)&v127 - v23;
  __chkstk_darwin(v22);
  v155 = (char *)&v127 - v24;
  v156 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  v149 = *(_QWORD *)(v156 - 8);
  v25 = __chkstk_darwin(v156);
  v137 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v130 = (uint64_t)&v127 - v28;
  v29 = __chkstk_darwin(v27);
  v144 = (uint64_t)&v127 - v30;
  __chkstk_darwin(v29);
  v148 = (uint64_t)&v127 - v31;
  if ((unint64_t)a1 >> 62)
  {
LABEL_62:
    if (a1 < 0)
      v126 = a1;
    else
      v126 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v32 = _CocoaArrayWrapper.endIndex.getter(v126);
  }
  else
  {
    v32 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
  }
  v158 = v14;
  v153 = v15;
  v147 = a2;
  if (v32)
  {
    if (v32 < 1)
    {
      __break(1u);
      goto LABEL_67;
    }
    v33 = 0;
    v34 = 0;
    v133 = a1 & 0xC000000000000001;
    v129 = (char *)&type metadata for () + 8;
    v136 = a1;
    v135 = v10;
    v134 = v32;
    do
    {
      v143 = v33;
      v151 = v34;
      if (v133)
      {
        v41 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, a1);
      }
      else
      {
        v41 = *(_QWORD **)(a1 + 8 * v33 + 32);
        swift_retain(v41);
      }
      v42 = v156;
      v43 = v144;
      *(_QWORD *)(v144 + *(int *)(v156 + 28)) = _swiftEmptyDictionarySingleton;
      v44 = (uint64_t)v41 + *(_QWORD *)(*v41 + 632);
      swift_beginAccess(v44, v166, 0, 0);
      v45 = v146;
      sub_1004CB7BC(v44, v146, &qword_1013F5530);
      v46 = sub_1004B804C(&qword_1013E1A80);
      v47 = v155;
      CRRegister.wrappedValue.getter(v46);
      sub_1004CB800(v45, &qword_1013F5530);
      v48 = v153;
      v49 = v145;
      v141 = (void (*)(char *, char *, uint64_t))v153[2];
      v141(v145, v47, v14);
      CRRegister.init(wrappedValue:)(v49, v14, &protocol witness table for UUID);
      v154 = (void (*)(char *, uint64_t))v48[1];
      v154(v47, v14);
      sub_1004CB7BC(v44, v43 + *(int *)(v42 + 20), &qword_1013F5530);
      v50 = (uint64_t)v41 + *(_QWORD *)(*v41 + 752);
      swift_beginAccess(v50, v165, 0, 0);
      sub_1004B8460(v50, v43 + *(int *)(v42 + 24), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
      v51 = v148;
      sub_100A2B258(v43, v148);
      v140 = v41[3];
      v142 = v41;
      v139 = v41[4];
      v38 = *(_QWORD **)(v152 + 16);
      v52 = (void (*)(_QWORD, _QWORD, _QWORD, __n128))v157;
      sub_1004B8460(v51, (uint64_t)v157, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
      (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD, __n128), _QWORD, uint64_t, uint64_t))(v149 + 56))(v52, 0, 1, v42);
      swift_retain(v38);
      v53 = (uint64_t)v150;
      CRRegister.wrappedValue.getter(v46);
      v54 = v38 + 3;
      swift_beginAccess(v38 + 3, v164, 33, 0);
      v55 = v38[3];
      if (*(_QWORD *)(v55 + 16) && (v56 = sub_100842EFC(v53), (v57 & 1) != 0))
      {
        v58 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + 8 * v56);
        v59 = (uint64_t)v135;
        v34 = v151;
      }
      else
      {
        sub_100A2AF18();
        v58 = v60;
        v61 = (uint64_t)v155;
        v62 = v158;
        v141(v155, (char *)v53, v158);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v54);
        v162 = *v54;
        *v54 = 0x8000000000000000;
        sub_100825D18(v58, v61, isUniquelyReferenced_nonNull_native);
        v64 = *v54;
        *v54 = v162;
        v65 = swift_bridgeObjectRelease(v64);
        v34 = v151;
        ((void (*)(uint64_t, uint64_t, __n128))v154)(v61, v62, v65);
        v59 = (uint64_t)v135;
      }
      swift_endAccess(v164);
      v66 = v38 + 2;
      swift_beginAccess(v38 + 2, v163, 0, 0);
      v67 = v38[2];
      a1 = v136;
      if (*(_QWORD *)(v67 + 16) && (v68 = sub_100842E60(v58), (v69 & 1) != 0))
      {
        v70 = *(_QWORD **)(*(_QWORD *)(v67 + 56) + 8 * v68);
        swift_retain(v70);
      }
      else
      {
        sub_1004B804C((uint64_t *)&unk_101406AD0);
        v70 = sub_100A2A4F8(v58);
        swift_beginAccess(v38 + 2, v164, 33, 0);
        swift_retain(v70);
        v71 = swift_isUniquelyReferenced_nonNull_native(*v66);
        v162 = *v66;
        *v66 = 0x8000000000000000;
        sub_100825D0C((uint64_t)v70, v58, v71);
        v72 = *v66;
        *v66 = v162;
        swift_bridgeObjectRelease(v72);
        swift_endAccess(v164);
      }
      a2 = v147;
      sub_1004CB7BC((uint64_t)v157, v59, &qword_101403058);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v149 + 48))(v59, 1, v156) == 1)
      {
        v35 = sub_1004CB800(v59, &qword_101403058);
        __chkstk_darwin(v35);
        v36 = v150;
        *(&v127 - 2) = (uint64_t)v150;
        swift_beginAccess((char *)v70 + *(_QWORD *)(*v70 + 120), v164, 33, 0);
        v37 = sub_1004B804C(&qword_101405EC0);
        Capsule.mutate<A>(_:)(sub_100A2B304, &v127 - 4, v37, v129);
        swift_endAccess(v164);
        *((_BYTE *)v70 + *(_QWORD *)(*v70 + 136)) = 1;
        swift_release(v38);
        v38 = v70;
      }
      else
      {
        v73 = v130;
        v74 = sub_100A2B258(v59, v130);
        __chkstk_darwin(v74);
        v36 = v150;
        *(&v127 - 2) = (uint64_t)v150;
        *(&v127 - 1) = v73;
        swift_beginAccess((char *)v70 + *(_QWORD *)(*v70 + 120), v164, 33, 0);
        v75 = sub_1004B804C(&qword_101405EC0);
        Capsule.mutate<A>(_:)(sub_100A2B2F0, &v127 - 4, v75, (char *)&type metadata for () + 8);
        swift_endAccess(v164);
        v76 = (char *)v70 + *(_QWORD *)(*v70 + 128);
        *((_QWORD *)v76 + 1) = v140;
        *((_QWORD *)v76 + 3) = v139;
        sub_100AD5324();
        *((_BYTE *)v70 + *(_QWORD *)(*v70 + 136)) = 1;
        swift_release(v70);
        sub_100A2B29C(v73);
      }
      v39 = v134;
      v33 = v143 + 1;
      v40 = swift_release(v38);
      v14 = v158;
      ((void (*)(char *, uint64_t, __n128))v154)(v36, v158, v40);
      sub_1004CB800((uint64_t)v157, &qword_101403058);
      swift_release(v142);
      sub_100A2B29C(v148);
    }
    while (v39 != v33);
    swift_bridgeObjectRelease(a1);
    if (!((unint64_t)a2 >> 62))
      goto LABEL_22;
  }
  else
  {
    swift_bridgeObjectRelease(a1);
    v34 = 0;
    if (!((unint64_t)a2 >> 62))
    {
LABEL_22:
      v77 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a2);
      goto LABEL_23;
    }
  }
  if (a2 < 0)
    v125 = a2;
  else
    v125 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v77 = _CocoaArrayWrapper.endIndex.getter(v125);
LABEL_23:
  v151 = v34;
  if (v77)
  {
    if (v77 >= 1)
    {
      v78 = 0;
      v154 = (void (*)(char *, uint64_t))(a2 & 0xC000000000000001);
      v157 = (char *)v77;
      v79 = (uint64_t)v137;
      v80 = v153;
      v81 = v145;
      do
      {
        if (v154)
        {
          v82 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v78, a2);
        }
        else
        {
          v82 = *(uint64_t **)(a2 + 8 * (_QWORD)v78 + 32);
          swift_retain(v82);
        }
        ++v78;
        v83 = v156;
        *(_QWORD *)(v79 + *(int *)(v156 + 28)) = _swiftEmptyDictionarySingleton;
        v84 = (uint64_t)v82 + *(_QWORD *)(*v82 + 632);
        swift_beginAccess(v84, v164, 0, 0);
        v85 = v146;
        sub_1004CB7BC(v84, v146, &qword_1013F5530);
        v86 = sub_1004B804C(&qword_1013E1A80);
        v87 = v155;
        CRRegister.wrappedValue.getter(v86);
        sub_1004CB800(v85, &qword_1013F5530);
        v88 = v158;
        ((void (*)(char *, char *, uint64_t))v80[2])(v81, v87, v158);
        CRRegister.init(wrappedValue:)(v81, v88, &protocol witness table for UUID);
        ((void (*)(char *, uint64_t))v80[1])(v87, v88);
        sub_1004CB7BC(v84, v79 + *(int *)(v83 + 20), &qword_1013F5530);
        v89 = (uint64_t)v82 + *(_QWORD *)(*v82 + 752);
        swift_beginAccess(v89, &v162, 0, 0);
        sub_1004B8460(v89, v79 + *(int *)(v83 + 24), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
        v90 = v144;
        sub_100A2B258(v79, v144);
        sub_100A299D8(v90, v82[3], v82[4], 0);
        swift_release(v82);
        sub_100A2B29C(v90);
        a2 = v147;
      }
      while (v157 != v78);
      goto LABEL_30;
    }
LABEL_67:
    __break(1u);
LABEL_68:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v158);
    __break(1u);
    return;
  }
LABEL_30:
  swift_bridgeObjectRelease(a2);
  v91 = *(_QWORD *)(v128 + 16);
  if (v91)
  {
    a1 = (uint64_t)v153;
    v92 = v128 + ((*(unsigned __int8 *)(a1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a1 + 80));
    v156 = v153[9];
    v157 = (char *)v153[2];
    v93 = swift_bridgeObjectRetain(v128);
    v155 = (char *)&type metadata for () + 8;
    v94 = v132;
    v14 = v158;
    v95 = (uint64_t)v131;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t, __n128))v157)(v94, v92, v14, v93);
      v10 = *(char **)(a1 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v10)(v94, 0, 1, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(a1 + 48))(v94, 1, v14) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(a1 + 32))(v95, v94, v14);
      a2 = *(_QWORD *)(v152 + 16);
      v97 = (_QWORD *)(a2 + 24);
      swift_beginAccess(a2 + 24, v161, 33, 0);
      v98 = *(_QWORD *)(a2 + 24);
      v99 = *(_QWORD *)(v98 + 16);
      swift_retain(a2);
      if (v99 && (v100 = sub_100842EFC(v95), (v101 & 1) != 0))
      {
        v102 = *(_QWORD *)(*(_QWORD *)(v98 + 56) + 8 * v100);
      }
      else
      {
        sub_100A2AF18();
        v103 = v95;
        v102 = v104;
        v105 = v138;
        ((void (*)(uint64_t, uint64_t, uint64_t))v157)(v138, v103, v14);
        a1 = swift_isUniquelyReferenced_nonNull_native(*v97);
        v160 = (_QWORD *)*v97;
        v15 = v160;
        *v97 = 0x8000000000000000;
        v107 = sub_100842EFC(v105);
        v108 = v15[2];
        v109 = (v106 & 1) == 0;
        v110 = v108 + v109;
        if (__OFADD__(v108, v109))
        {
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        v111 = v106;
        if (v15[3] >= v110)
        {
          if ((a1 & 1) == 0)
            sub_10082CCB8();
        }
        else
        {
          sub_100815644(v110, a1);
          v112 = sub_100842EFC(v138);
          if ((v111 & 1) != (v113 & 1))
            goto LABEL_68;
          v107 = v112;
        }
        a1 = (uint64_t)v153;
        v15 = v160;
        if ((v111 & 1) != 0)
        {
          *(_QWORD *)(v160[7] + 8 * v107) = v102;
          v14 = v158;
        }
        else
        {
          v160[(v107 >> 6) + 8] |= 1 << v107;
          v14 = v158;
          ((void (*)(unint64_t, uint64_t, uint64_t))v157)(v15[6] + v107 * v156, v138, v158);
          *(_QWORD *)(v15[7] + 8 * v107) = v102;
          v114 = v15[2];
          v115 = __OFADD__(v114, 1);
          v116 = v114 + 1;
          if (v115)
            goto LABEL_61;
          v15[2] = v116;
        }
        v117 = *v97;
        *v97 = v15;
        v118 = swift_bridgeObjectRelease(v117);
        (*(void (**)(uint64_t, uint64_t, __n128))(a1 + 8))(v138, v14, v118);
      }
      swift_endAccess(v161);
      swift_beginAccess(a2 + 16, v159, 0, 0);
      v119 = *(_QWORD *)(a2 + 16);
      if (*(_QWORD *)(v119 + 16) && (v120 = sub_100842E60(v102), (v121 & 1) != 0))
      {
        v122 = *(_QWORD *)(*(_QWORD *)(v119 + 56) + 8 * v120);
        __chkstk_darwin(v120);
        v95 = (uint64_t)v131;
        *(&v127 - 2) = (uint64_t)v131;
        swift_beginAccess(v122 + *(_QWORD *)(*(_QWORD *)v122 + 120), v161, 33, 0);
        swift_retain(v122);
        v123 = sub_1004B804C(&qword_101405EC0);
        v124 = v151;
        Capsule.mutate<A>(_:)(sub_100A2B304, &v127 - 4, v123, v155);
        v151 = v124;
        swift_endAccess(v161);
        v14 = v158;
        *(_BYTE *)(v122 + *(_QWORD *)(*(_QWORD *)v122 + 136)) = 1;
        swift_release(a2);
        a2 = v122;
        a1 = (uint64_t)v153;
        v94 = v132;
      }
      else
      {
        v94 = v132;
        v95 = (uint64_t)v131;
      }
      v96 = swift_release(a2);
      (*(void (**)(uint64_t, uint64_t, __n128))(a1 + 8))(v95, v14, v96);
      v92 += v156;
      if (!--v91)
        goto LABEL_58;
    }
  }
  else
  {
    v10 = (char *)v153[7];
    v93 = swift_bridgeObjectRetain(v128);
    v94 = v132;
    v14 = v158;
LABEL_58:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v10)(v94, 1, 1, v14, v93);
  }
  swift_bridgeObjectRelease(v128);
}

void sub_100A299D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  void (*v26)(char *, uint64_t, __n128);
  id v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];

  v36 = a4;
  v40 = a2;
  v41 = a3;
  v42 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v42 - 8);
  v7 = __chkstk_darwin(v42);
  v39 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - v9;
  v11 = sub_1004B804C(&qword_101403058);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v17 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v4;
  v21 = *(_QWORD *)(v4 + 16);
  swift_retain(v21);
  v35 = sub_1004B804C(&qword_1013E1A80);
  v38 = a1;
  CRRegister.wrappedValue.getter(v35);
  sub_100A2A748((uint64_t)v10);
  if (v22)
  {
    v23 = v22;
    sub_100B26638((uint64_t)v10, (uint64_t)v16);
    swift_release(v21);
    v24 = v23;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    v24 = v21;
  }
  v25 = swift_release(v24);
  v26 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  v26(v10, v42, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1004CB800((uint64_t)v16, &qword_101403058);
    if (qword_1013DD6B8 != -1)
      swift_once(&qword_1013DD6B8, sub_100A00A6C);
    swift_beginAccess(&static OS_os_log.crlDefault, v43, 0, 0);
    v27 = (id)static OS_os_log.crlDefault;
    v28 = static os_log_type_t.error.getter(v27);
    sub_100A06EBC((uint64_t)v27, &_mh_execute_header, v28, "Could not modify item in bucket, it did not exist yet", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

  }
  else
  {
    v29 = v36 & 1;
    sub_100A2B258((uint64_t)v16, (uint64_t)v20);
    v30 = sub_1004B7878(&qword_101403060, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36500);
    CRStruct_3.merge(_:)(v38, v17, v30);
    v31 = *(_QWORD *)(v37 + 16);
    sub_1004B8460((uint64_t)v20, (uint64_t)v14, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    swift_retain(v31);
    v32 = (uint64_t)v39;
    CRRegister.wrappedValue.getter(v35);
    sub_100A2A7E4((uint64_t)v14, v40, v41, v29, v32);
    v33 = swift_release(v31);
    v26((char *)v32, v42, v33);
    sub_1004CB800((uint64_t)v14, &qword_101403058);
    sub_100A2B29C((uint64_t)v20);
  }
}

void sub_100A29D28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __n128 v15;
  int64_t v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t, __n128);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int64_t v68;
  uint64_t v69;
  char v70[24];
  _QWORD *v71;
  _BYTE v72[32];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v69 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v57 - v6;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 56);
  v62 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v63 = (unint64_t)(v12 + 63) >> 6;
  v66 = a1;
  v15 = swift_bridgeObjectRetain(a1);
  v16 = 0;
  v59 = 0;
  v58 = (char *)&type metadata for () + 8;
  v60 = v7;
  v61 = v3;
  v64 = v10;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v19 = (v14 - 1) & v14;
      v20 = v18 | (v16 << 6);
      goto LABEL_18;
    }
    v21 = __OFADD__(v16++, 1);
    if (v21)
      goto LABEL_44;
    if (v16 >= v63)
    {
LABEL_41:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56))(v10, 1, 1, v2, v15);
LABEL_42:
      swift_release(v66);
      return;
    }
    v22 = *(_QWORD *)(v62 + 8 * v16);
    if (!v22)
      break;
LABEL_17:
    v19 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_18:
    v24 = *(_QWORD *)(v3 + 72);
    v25 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v3 + 16);
    v25(v10, *(_QWORD *)(v66 + 48) + v24 * v20, v2, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
      goto LABEL_42;
    v67 = v19;
    v68 = v16;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v10, v2);
    v26 = *(_QWORD *)(v65 + 16);
    v27 = (_QWORD *)(v26 + 24);
    swift_beginAccess(v26 + 24, v72, 33, 0);
    v28 = *(_QWORD *)(v26 + 24);
    v29 = *(_QWORD *)(v28 + 16);
    swift_retain(v26);
    if (v29)
    {
      v30 = sub_100842EFC((uint64_t)v7);
      if ((v31 & 1) != 0)
      {
        v32 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v30);
        goto LABEL_32;
      }
    }
    sub_100A2AF18();
    v32 = v33;
    v34 = v69;
    v35 = v7;
    v7 = (char *)v2;
    ((void (*)(uint64_t, char *, uint64_t))v25)(v69, v35, v2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v27);
    v71 = (_QWORD *)*v27;
    v37 = v71;
    *v27 = 0x8000000000000000;
    v39 = sub_100842EFC(v34);
    v40 = v37[2];
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v43 = v38;
    if (v37[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v46 = v71;
        if ((v38 & 1) == 0)
          goto LABEL_26;
      }
      else
      {
        sub_10082CCB8();
        v46 = v71;
        if ((v43 & 1) == 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_100815644(v42, isUniquelyReferenced_nonNull_native);
      v44 = sub_100842EFC(v69);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_47;
      v39 = v44;
      v46 = v71;
      if ((v43 & 1) == 0)
      {
LABEL_26:
        v46[(v39 >> 6) + 8] |= 1 << v39;
        v2 = (uint64_t)v7;
        ((void (*)(unint64_t, uint64_t, char *))v25)(v46[6] + v39 * v24, v69, v7);
        *(_QWORD *)(v46[7] + 8 * v39) = v32;
        v47 = v46[2];
        v21 = __OFADD__(v47, 1);
        v48 = v47 + 1;
        if (v21)
          goto LABEL_45;
        v46[2] = v48;
        goto LABEL_31;
      }
    }
    *(_QWORD *)(v46[7] + 8 * v39) = v32;
    v2 = (uint64_t)v7;
LABEL_31:
    v49 = *v27;
    *v27 = v46;
    v50 = swift_bridgeObjectRelease(v49);
    v3 = v61;
    (*(void (**)(uint64_t, uint64_t, __n128))(v61 + 8))(v69, v2, v50);
    v7 = v60;
LABEL_32:
    swift_endAccess(v72);
    swift_beginAccess(v26 + 16, v70, 0, 0);
    v51 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v51 + 16))
    {
      v52 = sub_100842E60(v32);
      if ((v53 & 1) != 0)
      {
        v54 = *(_QWORD *)(*(_QWORD *)(v51 + 56) + 8 * v52);
        __chkstk_darwin(v52);
        *(&v57 - 2) = (uint64_t)v7;
        swift_beginAccess(v54 + *(_QWORD *)(*(_QWORD *)v54 + 120), v72, 33, 0);
        swift_retain(v54);
        v55 = sub_1004B804C(&qword_101405EC0);
        v56 = v59;
        Capsule.mutate<A>(_:)(sub_100A2B240, &v57 - 4, v55, v58);
        v59 = v56;
        swift_endAccess(v72);
        *(_BYTE *)(v54 + *(_QWORD *)(*(_QWORD *)v54 + 136)) = 1;
        swift_release(v26);
        v26 = v54;
      }
    }
    v17 = swift_release(v26);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v7, v2, v17);
    v10 = v64;
    v14 = v67;
    v16 = v68;
  }
  v23 = v16 + 1;
  if (v16 + 1 >= v63)
    goto LABEL_41;
  v22 = *(_QWORD *)(v62 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v16 + 2;
  if (v16 + 2 >= v63)
    goto LABEL_41;
  v22 = *(_QWORD *)(v62 + 8 * v23);
  if (v22)
    goto LABEL_16;
  v23 = v16 + 3;
  if (v16 + 3 >= v63)
    goto LABEL_41;
  v22 = *(_QWORD *)(v62 + 8 * v23);
  if (v22)
  {
LABEL_16:
    v16 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    v16 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v16 >= v63)
      goto LABEL_41;
    v22 = *(_QWORD *)(v62 + 8 * v16);
    ++v23;
    if (v22)
      goto LABEL_17;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v7);
  __break(1u);
}

_QWORD *sub_100A2A270@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = sub_1005F840C(0);
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeItemBucketManager()
{
  return objc_opt_self(_TtC8Freeform40CRLFreehandDrawingShapeItemBucketManager);
}

_QWORD *sub_100A2A2CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];

  swift_beginAccess(v1 + 24, v14, 33, 0);
  v3 = sub_100A2A3EC(a1);
  swift_endAccess(v14);
  v4 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v1 + 16, v14, 0, 0);
  v5 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_100842E60(v3), (v7 & 1) != 0))
  {
    v8 = *(_QWORD **)(*(_QWORD *)(v5 + 56) + 8 * v6);
    swift_retain(v8);
  }
  else
  {
    sub_1004B804C((uint64_t *)&unk_101406AD0);
    v8 = sub_100A2A4F8(v3);
    swift_beginAccess(v4, v13, 33, 0);
    swift_retain(v8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    *v4 = 0x8000000000000000;
    sub_100825D0C((uint64_t)v8, v3, isUniquelyReferenced_nonNull_native);
    v10 = *v4;
    *v4 = v12;
    swift_bridgeObjectRelease(v10);
    swift_endAccess(v13);
  }
  return v8;
}

uint64_t sub_100A2A3EC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = sub_100842EFC(a1);
    if ((v10 & 1) != 0)
      return *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  }
  sub_100A2AF18();
  v11 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v18 = *v2;
  *v2 = 0x8000000000000000;
  sub_100825D18(v11, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  v14 = *v2;
  *v2 = v18;
  v15 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v15);
  return v11;
}

_QWORD *sub_100A2A4F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v23 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101405EC0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v27[0] = a1;
  v8 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v10 = v9;
  v11 = type metadata accessor for UUID(0);
  v12 = sub_1004B804C(&qword_101405F00);
  v13 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v14 = sub_1004CBA30(&qword_101403070, &qword_101405F00, (uint64_t)&protocol conformance descriptor for Ref<A>);
  v15 = sub_1004CBA30((unint64_t *)&unk_1014064F0, &qword_101405F00, (uint64_t)&protocol conformance descriptor for Ref<A>);
  CRDictionary.init()(v11, v12, &protocol witness table for UUID, v13, v14, v15);
  v16 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  Capsule<>.init(_:id:)(v4, v8, v10, v2, v16);
  sub_100553300(v24, (uint64_t)&off_10129E188, (uint64_t *)v27);
  v17 = sub_1004B804C((uint64_t *)&unk_101406AD0);
  v18 = (_QWORD *)swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  *((_BYTE *)v18 + *(_QWORD *)(*v18 + 136)) = 0;
  v18[2] = v23;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v18 + *(_QWORD *)(*v18 + 120), v7, v26);
  *((_BYTE *)v18 + *(_QWORD *)(*v18 + 136)) = 1;
  v19 = (char *)v18 + *(_QWORD *)(*v18 + 128);
  v20 = v27[1];
  *(_OWORD *)v19 = v27[0];
  *((_OWORD *)v19 + 1) = v20;
  *((_QWORD *)v19 + 4) = v28;
  return v18;
}

void sub_100A2A748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  _BYTE v7[24];

  swift_beginAccess(v1 + 24, v7, 33, 0);
  v3 = sub_100A2A3EC(a1);
  swift_endAccess(v7);
  swift_beginAccess(v1 + 16, v7, 0, 0);
  v4 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_100842E60(v3);
    if ((v6 & 1) != 0)
      swift_retain(*(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5));
  }
}

void sub_100A2A7E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v18 = a2;
  v19 = a3;
  v8 = sub_1004B804C(&qword_101403058);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100A2A2CC(a5);
  sub_1004CB7BC(a1, (uint64_t)v10, &qword_101403058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v16 = sub_1004CB800((uint64_t)v10, &qword_101403058);
    __chkstk_darwin(v16);
    *(&v18 - 2) = a5;
    swift_beginAccess((char *)v15 + *(_QWORD *)(*v15 + 120), v20, 33, 0);
    v17 = sub_1004B804C(&qword_101405EC0);
    Capsule.mutate<A>(_:)(sub_100A2B304, &v18 - 4, v17, (char *)&type metadata for () + 8);
    swift_endAccess(v20);
    *((_BYTE *)v15 + *(_QWORD *)(*v15 + 136)) = 1;
    swift_release(v15);
  }
  else
  {
    sub_100A2B258((uint64_t)v10, (uint64_t)v14);
    sub_100A2A9C8((uint64_t)v14, v18, v19, a4 & 1, a5);
    swift_release(v15);
    sub_100A2B29C((uint64_t)v14);
  }
}

unint64_t sub_100A2A9C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  _QWORD v13[5];
  _BYTE v14[24];

  v13[2] = a5;
  v13[3] = a1;
  swift_beginAccess(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120), v14, 33, 0);
  v9 = sub_1004B804C(&qword_101405EC0);
  Capsule.mutate<A>(_:)(sub_100A2B2D8, v13, v9, (char *)&type metadata for () + 8);
  swift_endAccess(v14);
  v10 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 128);
  v11 = *(_QWORD *)(v10 + 24);
  if ((a4 & 1) == 0)
    v11 = a3;
  *(_QWORD *)(v10 + 8) = a2;
  *(_QWORD *)(v10 + 24) = v11;
  result = sub_100AD5324();
  *(_BYTE *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 136)) = 1;
  return result;
}

uint64_t sub_100A2AA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[32];

  v30 = a3;
  v31 = a1;
  v4 = sub_1004B804C(&qword_101403068);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C((uint64_t *)&unk_101405EA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v30 - v17;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v20((char *)&v30 - v17, a2, v13);
  sub_1004B8460(v30, (uint64_t)v9, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  v20(v16, a2, v13);
  v21 = v31;
  v22 = swift_retain(v31);
  CRKeyPath.init(_:)(v16, v22);
  v23 = type metadata accessor for CRKeyPath(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 0, 1, v23);
  v24 = sub_1004B7878((unint64_t *)&unk_101405F10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT, (uint64_t)&unk_100F36398);
  Ref.init<A>(_:_:identity:)(v21, v9, v6, v7, v24);
  v25 = sub_1004B804C(&qword_101405F00);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
  v26 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  v27 = (uint64_t (*)(_BYTE *, _QWORD))Capsule.Ref<>.root.modify(v32, v26);
  v28 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  CRDictionary.subscript.setter(v12, v18, v28);
  return v27(v32, 0);
}

uint64_t sub_100A2AD14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  _BYTE v15[32];

  v3 = sub_1004B804C((uint64_t *)&unk_101405EA0);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for UUID(0);
  __chkstk_darwin(v6);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t))(v9 + 16))(v8, a2);
  v10 = sub_1004B804C(&qword_101405F00);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = sub_1004CBA30(&qword_101405EF0, (uint64_t *)&unk_1014148B0, (uint64_t)&protocol conformance descriptor for CRDictionary<A, B>);
  v12 = (uint64_t (*)(_BYTE *, _QWORD))Capsule.Ref<>.root.modify(v15, v11);
  v13 = sub_1004B804C((uint64_t *)&unk_1014148B0);
  CRDictionary.subscript.setter(v5, v8, v13);
  return v12(v15, 0);
}

uint64_t sub_100A2AE54(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = __DataStorage._bytes.getter(a3);
  v6 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v6 += a1 - result;
  }
  v7 = __OFSUB__(a2, a1);
  v8 = a2 - a1;
  if (v7)
  {
    __break(1u);
    goto LABEL_13;
  }
  v9 = __DataStorage._length.getter();
  if (v9 >= v8)
    v10 = v8;
  else
    v10 = v9;
  v11 = v6 + v10;
  if (v6)
    v12 = v11;
  else
    v12 = 0;
  v13 = type metadata accessor for SHA256(0);
  v14 = sub_1004B7878((unint64_t *)&qword_1013F7428, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  return dispatch thunk of HashFunction.update(bufferPointer:)(v6, v12, v13, v14);
}

void sub_100A2AF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for SHA256(0);
  __chkstk_darwin(v0);
  v1 = type metadata accessor for SHA256Digest(0);
  __chkstk_darwin(v1);
  UUID.crl_data()();
  v3 = v2;
  v4 = sub_1004B7878((unint64_t *)&qword_1013F7428, (uint64_t (*)(uint64_t))&type metadata accessor for SHA256, (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v0, v4);
  __asm { BR              X10 }
}

uint64_t sub_100A2B024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 - 112) = v4;
  *(_WORD *)(v8 - 104) = v5;
  *(_BYTE *)(v8 - 102) = BYTE2(v5);
  *(_BYTE *)(v8 - 101) = BYTE3(v5);
  *(_BYTE *)(v8 - 100) = BYTE4(v5);
  *(_BYTE *)(v8 - 99) = BYTE5(v5);
  dispatch thunk of HashFunction.update(bufferPointer:)(v8 - 112, v8 - 112 + BYTE6(v5), v1, v6);
  sub_1004BBBC8(v4, v5);
  dispatch thunk of HashFunction.finalize()(v1, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 120) + 8))(v3, v1);
  sub_1004BBBC8(v4, v5);
  SHA256Digest.withUnsafeBytes<A>(_:)(sub_100C81254, 0, &type metadata for UInt8);
  v9 = *(unsigned __int8 *)(v8 - 112);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v0);
  return v9;
}

uint64_t sub_100A2B240(uint64_t a1)
{
  uint64_t v1;

  return sub_100A2AD14(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100A2B258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A2B29C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A2B2D8(uint64_t a1)
{
  uint64_t v1;

  return sub_100A2AA9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100A2B2F0(uint64_t a1)
{
  return sub_100A2B2D8(a1);
}

uint64_t sub_100A2B304(uint64_t a1)
{
  return sub_100A2B240(a1);
}

uint64_t sub_100A2B318()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;
  id v4;
  unsigned int v5;
  uint64_t v6;
  id v7;

  v1 = objc_msgSend(v0, "currentTool");
  v2 = objc_msgSend(v1, "type");

  result = 4;
  switch((unint64_t)v2)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
      result = 8;
      break;
    case 7uLL:
      return result;
    case 8uLL:
      v4 = objc_msgSend(v0, "toolkitUIState");
      v5 = objc_msgSend(v4, "eraserToolErasesWholeObjects");

      if (v5)
        result = 5;
      else
        result = 8;
      break;
    case 9uLL:
      result = 7;
      break;
    default:
      type metadata accessor for CRLFreehandDrawingToolType(0);
      v7 = v2;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v6, &v7, v6, &type metadata for UInt);
      __break(1u);
      JUMPOUT(0x100A2B408);
  }
  return result;
}

#error "100A2B530: switch analysis failed: failed to propagate the switch expression (funcsize=155)"

void sub_100A2B6AC()
{
  JUMPOUT(0x100A2B5F4);
}

void sub_100A2B81C(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t ObjectType;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  double v39;
  id v40;
  void *v41;
  uint64_t v42;
  objc_super v43;
  uint64_t v44;
  unint64_t v45;

  v3 = v2;
  v6 = (uint64_t)_swiftEmptyArrayStorage;
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  if (objc_msgSend(a1, "type") == (id)7)
  {
    v7 = objc_msgSend(a1, "visualRangesArray");
    if (!v7)
    {
      __break(1u);
      return;
    }
    v8 = v7;
    v9 = sub_100588A68();
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    if ((unint64_t)v10 >> 62)
      goto LABEL_24;
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
      while (v11 >= 1)
      {
        v41 = a2;
        v42 = v3;
        v6 = 0;
        while (1)
        {
          v12 = (v10 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v10)
              : *(id *)(v10 + 8 * v6 + 32);
          a2 = v12;
          v13 = objc_msgSend(v12, "rangeValue");
          v15 = v14;
          v16 = (objc_class *)type metadata accessor for CRLTextRange();
          v17 = objc_allocWithZone(v16);
          v18 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", v13, 0);
          v19 = v15 >= NSNotFound.getter(v18) ? 0 : v15;
          v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          v3 = v20 + v19;
          if (__OFADD__(v20, v19))
            break;
          if (v3 < v20)
            goto LABEL_23;
          v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
          v22 = (char *)objc_allocWithZone(v16);
          v23 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(_QWORD *)&v22[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          v24 = &v22[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(_QWORD *)v24 = v20;
          *((_QWORD *)v24 + 1) = v3;
          *(_QWORD *)&v22[v23] = v21;
          v43.receiver = v22;
          v43.super_class = v16;
          v25 = objc_msgSendSuper2(&v43, "init");

          ObjectType = swift_getObjectType(v17);
          v27 = swift_deallocPartialClassInstance(v17, ObjectType, 40, 7);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
          v29 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v28 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v29 >= v28 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
          ++v6;
          v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v25);
          specialized Array._endMutation()(v30);

          if (v11 == v6)
          {
            *(_QWORD *)&v39 = swift_bridgeObjectRelease().n128_u64[0];
            a2 = v41;
            v3 = v42;
            v6 = (uint64_t)_swiftEmptyArrayStorage;
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        if (v10 < 0)
          v8 = (void *)v10;
        else
          v8 = (void *)(v10 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(v10);
        v11 = _CocoaArrayWrapper.endIndex.getter(v8);
        swift_bridgeObjectRelease();
        if (!v11)
          goto LABEL_28;
      }
      __break(1u);
      goto LABEL_39;
    }
LABEL_28:
    *(_QWORD *)&v39 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v31 = objc_msgSend(a1, "range");
    v33 = v32;
    v34 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
    v35 = (id)sub_10060EDE4((uint64_t)v31, v33);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);

  }
LABEL_29:
  if (objc_msgSend(a2, "tag", v39) == (id)11)
  {
    v8 = (void *)v45;
    if (qword_1013DCB58 != -1)
      swift_once(&qword_1013DCB58, sub_1006185A4);
    v40 = (id)qword_10147ECB0;
    swift_bridgeObjectRetain(v8);
    sub_100A2BD60(v3, v8, (CGFloat *)&v44);
    goto LABEL_36;
  }
  if (objc_msgSend(a2, "tag") == (id)10)
  {
    v8 = (void *)v45;
    if (qword_1013DCB58 == -1)
    {
LABEL_35:
      v40 = (id)qword_10147ECB0;
      swift_bridgeObjectRetain(v8);
      sub_100A2C038(v3, v8, (CGFloat *)&v44);
LABEL_36:

      swift_bridgeObjectRelease_n(v8, 2);
      return;
    }
LABEL_39:
    swift_once(&qword_1013DCB58, sub_1006185A4);
    goto LABEL_35;
  }
  sub_100757E04(&_mh_execute_header, (uint64_t)"knobCenter(for:knob:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPKnobPositioning_i.swift", 88, 2, 43, "Unknown knob tag.", 17, 2u, v6);
  sub_1004F5394(v6, (uint64_t)"knobCenter(for:knob:)", 21, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPKnobPositioning_i.swift", 88, 2u, 43, (uint64_t)"Unknown knob tag.", 17, 2u);
  swift_bridgeObjectRelease();
}

double sub_100A2BD60@<D0>(uint64_t a1@<X0>, void *a2@<X1>, CGFloat *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  double MaxY;
  CGFloat MaxX;
  double v14;
  double v15;
  double result;
  id v17;
  uint64_t v18;
  uint64_t v22;
  unint64_t v23;
  CGRect v24;
  CGRect v25;

  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_layout);
  if (qword_1013DCB58 != -1)
LABEL_18:
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v7 = (id)qword_10147ECB0;
  swift_bridgeObjectRetain(a2);
  sub_100625FAC(v6, (uint64_t)a2, (uint64_t *)&v23);

  swift_bridgeObjectRelease();
  v6 = v23;
  if (!(v23 >> 62))
  {
    v8 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v23);
    if (v8)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease_n(v6, 2);
    MaxY = 0.0;
    MaxX = 0.0;
    goto LABEL_12;
  }
  if ((v23 & 0x8000000000000000) != 0)
    v22 = v23;
  else
    v22 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v23);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!v8)
    goto LABEL_11;
LABEL_4:
  v9 = 4;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6);
    else
      v10 = *(id *)(v6 + 8 * v9);
    a2 = v10;
    v11 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    if ((objc_msgSend(v10, "containsStart") & 1) != 0)
      break;

    ++v9;
    if (v11 == v8)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease_n(v6, 2);
  v17 = objc_msgSend(a2, "writingDirection");
  objc_msgSend(a2, "rect");
  if (v17 == (id)1)
  {
    MaxX = CGRectGetMaxX(*(CGRect *)&v18);
    objc_msgSend(a2, "rect");
    MaxY = CGRectGetMaxY(v24);

    v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
    v15 = -0.5;
    goto LABEL_13;
  }
  MaxX = CGRectGetMinX(*(CGRect *)&v18);
  objc_msgSend(a2, "rect");
  MaxY = CGRectGetMinY(v25);

LABEL_12:
  v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
  v15 = 0.5;
LABEL_13:
  result = MaxY + v14 * v15;
  *a3 = MaxX;
  a3[1] = result;
  return result;
}

double sub_100A2C038@<D0>(uint64_t a1@<X0>, void *a2@<X1>, CGFloat *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  double MinY;
  CGFloat MinX;
  double v14;
  double v15;
  double result;
  id v17;
  uint64_t v18;
  uint64_t v22;
  unint64_t v23;
  CGRect v24;
  CGRect v25;

  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_layout);
  if (qword_1013DCB58 != -1)
LABEL_18:
    swift_once(&qword_1013DCB58, sub_1006185A4);
  v7 = (id)qword_10147ECB0;
  swift_bridgeObjectRetain(a2);
  sub_100625FAC(v6, (uint64_t)a2, (uint64_t *)&v23);

  swift_bridgeObjectRelease();
  v6 = v23;
  if (!(v23 >> 62))
  {
    v8 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v23);
    if (v8)
      goto LABEL_4;
LABEL_11:
    swift_bridgeObjectRelease_n(v6, 2);
    MinY = 0.0;
    MinX = 0.0;
    goto LABEL_12;
  }
  if ((v23 & 0x8000000000000000) != 0)
    v22 = v23;
  else
    v22 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v23);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!v8)
    goto LABEL_11;
LABEL_4:
  v9 = 4;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6);
    else
      v10 = *(id *)(v6 + 8 * v9);
    a2 = v10;
    v11 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    if ((objc_msgSend(v10, "containsEnd") & 1) != 0)
      break;

    ++v9;
    if (v11 == v8)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease_n(v6, 2);
  v17 = objc_msgSend(a2, "writingDirection");
  objc_msgSend(a2, "rect");
  if (v17 == (id)1)
  {
    MinX = CGRectGetMinX(*(CGRect *)&v18);
    objc_msgSend(a2, "rect");
    MinY = CGRectGetMinY(v24);

    v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
    v15 = 0.5;
    goto LABEL_13;
  }
  MinX = CGRectGetMaxX(*(CGRect *)&v18);
  objc_msgSend(a2, "rect");
  MinY = CGRectGetMaxY(v25);

LABEL_12:
  v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
  v15 = -0.5;
LABEL_13:
  result = MinY + v14 * v15;
  *a3 = MinX;
  a3[1] = result;
  return result;
}

id sub_100A2C33C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPKnobPositioning_i();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CRLWPKnobPositioning_i()
{
  return objc_opt_self(_TtC8Freeform22CRLWPKnobPositioning_i);
}

unint64_t sub_100A2C39C(void *a1)
{
  unint64_t result;

  result = (unint64_t)objc_msgSend(a1, "isRange");
  if ((_DWORD)result)
    return !objc_msgSend(a1, "type") || objc_msgSend(a1, "type") == (id)4 || objc_msgSend(a1, "type") == (id)7;
  return result;
}

uint64_t sub_100A2C40C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _UNKNOWN ****v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  void *v30;
  os_unfair_lock_s *v31;
  id v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _BYTE v39[24];

  v38 = a1;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  v17 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v17 == &off_10140F528)
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v18 = 0;
  swift_beginAccess(v18 + qword_101481450, v39, 32, 0);
  swift_retain(v17);
  v19 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v39);
  swift_release(v17);
  sub_1004B8460((uint64_t)v10, (uint64_t)v13, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_1004B84E0((uint64_t)v13, (uint64_t)v16, type metadata accessor for CRLAssetData);
  v20 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v22 = *(os_unfair_lock_s **)(v21 + 16);
  v23 = v20;
  os_unfair_lock_lock(v22);
  v24 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v25 = *(void **)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v25)
  {
    v26 = *(id *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v27 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v28 = v23;
    v29 = sub_100C7EE84((uint64_t)v28);

    v30 = *(void **)&v23[v24];
    *(_QWORD *)&v23[v24] = v29;
    v26 = v29;

    v25 = 0;
  }
  v31 = *(os_unfair_lock_s **)(v21 + 16);
  v32 = v25;
  os_unfair_lock_unlock(v31);
  sub_100C7857C((uint64_t)v16, 0, 3, 0, v4);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v4, &qword_1013E04D0);
    v33 = type metadata accessor for UTType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v38, 1, 1, v33);
  }
  else
  {
    v35 = v37;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v37, v4, v5);
    sub_10062E628(0, v38);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);
    return sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
  }
}

uint64_t sub_100A2C75C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _UNKNOWN ****v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  void *v30;
  os_unfair_lock_s *v31;
  id v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _BYTE v39[24];

  v38 = a1;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  v17 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v17 == &off_101407908)
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v18 = 0;
  swift_beginAccess(v18 + qword_101480E60, v39, 32, 0);
  swift_retain(v17);
  v19 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v39);
  swift_release(v17);
  sub_1004B8460((uint64_t)v10, (uint64_t)v13, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_1004B84E0((uint64_t)v13, (uint64_t)v16, type metadata accessor for CRLAssetData);
  v20 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v22 = *(os_unfair_lock_s **)(v21 + 16);
  v23 = v20;
  os_unfair_lock_lock(v22);
  v24 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v25 = *(void **)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v25)
  {
    v26 = *(id *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v27 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v28 = v23;
    v29 = sub_100C7EE84((uint64_t)v28);

    v30 = *(void **)&v23[v24];
    *(_QWORD *)&v23[v24] = v29;
    v26 = v29;

    v25 = 0;
  }
  v31 = *(os_unfair_lock_s **)(v21 + 16);
  v32 = v25;
  os_unfair_lock_unlock(v31);
  sub_100C7857C((uint64_t)v16, 0, 3, 0, v4);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v4, &qword_1013E04D0);
    v33 = type metadata accessor for UTType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v38, 1, 1, v33);
  }
  else
  {
    v35 = v37;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v37, v4, v5);
    sub_10062E628(0, v38);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);
    return sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
  }
}

uint64_t sub_100A2CAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _UNKNOWN ****v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  id v29;
  void *v30;
  os_unfair_lock_s *v31;
  id v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _BYTE v39[24];

  v38 = a1;
  v2 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  v17 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v17 == &off_1013E07D8)
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v18 = 0;
  swift_beginAccess(v18 + qword_10147E7D8, v39, 32, 0);
  swift_retain(v17);
  v19 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v19);
  swift_endAccess(v39);
  swift_release(v17);
  sub_1004B8460((uint64_t)v10, (uint64_t)v13, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B84E0((uint64_t)v13, (uint64_t)v16, type metadata accessor for CRLAssetData);
  v20 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v22 = *(os_unfair_lock_s **)(v21 + 16);
  v23 = v20;
  os_unfair_lock_lock(v22);
  v24 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v25 = *(void **)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v25)
  {
    v26 = *(id *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v27 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v28 = v23;
    v29 = sub_100C7EE84((uint64_t)v28);

    v30 = *(void **)&v23[v24];
    *(_QWORD *)&v23[v24] = v29;
    v26 = v29;

    v25 = 0;
  }
  v31 = *(os_unfair_lock_s **)(v21 + 16);
  v32 = v25;
  os_unfair_lock_unlock(v31);
  sub_100C7857C((uint64_t)v16, 0, 3, 0, v4);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v4, &qword_1013E04D0);
    v33 = type metadata accessor for UTType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v38, 1, 1, v33);
  }
  else
  {
    v35 = v37;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v37, v4, v5);
    sub_10062E628(0, v38);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v5);
    return sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLAssetData);
  }
}

uint64_t sub_100A2CDFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _UNKNOWN ****v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  void *v34;
  os_unfair_lock_s *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[32];

  v45 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for UTType(0);
  v49 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  v51 = v10;
  __chkstk_darwin(v9);
  v48 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  v21 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v21 == &off_10140F528)
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v22 = 0;
  swift_beginAccess(v22 + qword_101481450, v52, 32, 0);
  swift_retain(v21);
  v23 = sub_1004B804C((uint64_t *)&unk_1013E9BD0);
  CRRegister.wrappedValue.getter(v23);
  swift_endAccess(v52);
  swift_release(v21);
  sub_1004B8460((uint64_t)v14, (uint64_t)v17, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_1004B84E0((uint64_t)v17, (uint64_t)v20, type metadata accessor for CRLAssetData);
  v24 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v26 = *(os_unfair_lock_s **)(v25 + 16);
  v27 = v24;
  os_unfair_lock_lock(v26);
  v28 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v29 = *(void **)&v27[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v29)
  {
    v30 = *(id *)&v27[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v31 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v32 = v27;
    v33 = sub_100C7EE84((uint64_t)v32);

    v34 = *(void **)&v27[v28];
    *(_QWORD *)&v27[v28] = v33;
    v30 = v33;

    v29 = 0;
  }
  v35 = *(os_unfair_lock_s **)(v25 + 16);
  v36 = v29;
  os_unfair_lock_unlock(v35);
  sub_100C7857C((uint64_t)v20, 0, 3, 0, v8);

  v38 = v50;
  v37 = v51;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v8, 1, v50) == 1)
  {
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
    return 0;
  }
  v39 = v48;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v48, v8, v38);
  sub_10062E628(0, (uint64_t)v4);
  v40 = v49;
  v41 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v4, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E3620);
    return 0;
  }
  v42 = v46;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v46, v4, v41);
  if ((static UTType.== infix(_:_:)(v42, v45) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    return 0;
  }
  v44 = Data.init(contentsOf:options:)(v39, 0);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v46, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
  sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
  return v44;
}

uint64_t sub_100A2D3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _UNKNOWN ****v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  void *v34;
  os_unfair_lock_s *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[32];

  v45 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for UTType(0);
  v49 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  v51 = v10;
  __chkstk_darwin(v9);
  v48 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  v21 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v21 == &off_101407908)
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v22 = 0;
  swift_beginAccess(v22 + qword_101480E60, v52, 32, 0);
  swift_retain(v21);
  v23 = sub_1004B804C(&qword_1013F1870);
  CRRegister.wrappedValue.getter(v23);
  swift_endAccess(v52);
  swift_release(v21);
  sub_1004B8460((uint64_t)v14, (uint64_t)v17, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_1004B84E0((uint64_t)v17, (uint64_t)v20, type metadata accessor for CRLAssetData);
  v24 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v26 = *(os_unfair_lock_s **)(v25 + 16);
  v27 = v24;
  os_unfair_lock_lock(v26);
  v28 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v29 = *(void **)&v27[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v29)
  {
    v30 = *(id *)&v27[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v31 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v32 = v27;
    v33 = sub_100C7EE84((uint64_t)v32);

    v34 = *(void **)&v27[v28];
    *(_QWORD *)&v27[v28] = v33;
    v30 = v33;

    v29 = 0;
  }
  v35 = *(os_unfair_lock_s **)(v25 + 16);
  v36 = v29;
  os_unfair_lock_unlock(v35);
  sub_100C7857C((uint64_t)v20, 0, 3, 0, v8);

  v38 = v50;
  v37 = v51;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v8, 1, v50) == 1)
  {
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
    return 0;
  }
  v39 = v48;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v48, v8, v38);
  sub_10062E628(0, (uint64_t)v4);
  v40 = v49;
  v41 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v4, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E3620);
    return 0;
  }
  v42 = v46;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v46, v4, v41);
  if ((static UTType.== infix(_:_:)(v42, v45) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    return 0;
  }
  v44 = Data.init(contentsOf:options:)(v39, 0);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v46, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
  sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
  return v44;
}

uint64_t sub_100A2D9BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _UNKNOWN ****v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  void *v34;
  os_unfair_lock_s *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[32];

  v45 = a1;
  v2 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for UTType(0);
  v49 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C(&qword_1013E04D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v50 = v9;
  v51 = v10;
  __chkstk_darwin(v9);
  v48 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v45 - v19;
  v21 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v21 == &off_1013E07D8)
    v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v22 = 0;
  swift_beginAccess(v22 + qword_10147E7D8, v52, 32, 0);
  swift_retain(v21);
  v23 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v23);
  swift_endAccess(v52);
  swift_release(v21);
  sub_1004B8460((uint64_t)v14, (uint64_t)v17, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
  sub_1004B84E0((uint64_t)v17, (uint64_t)v20, type metadata accessor for CRLAssetData);
  v24 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  v26 = *(os_unfair_lock_s **)(v25 + 16);
  v27 = v24;
  os_unfair_lock_lock(v26);
  v28 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v29 = *(void **)&v27[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v29)
  {
    v30 = *(id *)&v27[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v31 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v32 = v27;
    v33 = sub_100C7EE84((uint64_t)v32);

    v34 = *(void **)&v27[v28];
    *(_QWORD *)&v27[v28] = v33;
    v30 = v33;

    v29 = 0;
  }
  v35 = *(os_unfair_lock_s **)(v25 + 16);
  v36 = v29;
  os_unfair_lock_unlock(v35);
  sub_100C7857C((uint64_t)v20, 0, 3, 0, v8);

  v38 = v50;
  v37 = v51;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v8, 1, v50) == 1)
  {
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v8, &qword_1013E04D0);
    return 0;
  }
  v39 = v48;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v48, v8, v38);
  sub_10062E628(0, (uint64_t)v4);
  v40 = v49;
  v41 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v4, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    sub_1004CB800((uint64_t)v4, (uint64_t *)&unk_1013E3620);
    return 0;
  }
  v42 = v46;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v46, v4, v41);
  if ((static UTType.== infix(_:_:)(v42, v45) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
    return 0;
  }
  v44 = Data.init(contentsOf:options:)(v39, 0);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v46, v41);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
  sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLAssetData);
  return v44;
}

int64x2_t sub_100A2DF9C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4062C00000000000uLL);
  xmmword_1014030B0 = (__int128)result;
  return result;
}

int64x2_t sub_100A2DFB8()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4072C00000000000uLL);
  xmmword_1014030C0 = (__int128)result;
  return result;
}

uint64_t sub_100A2DFD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *Strong;
  void *v22;
  char v23;
  void *v24;
  void *v25;
  uint64_t result;
  CKRecordID v27;
  Swift::String v28;
  _BYTE v30[24];

  v2 = v1;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v30[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v30[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (v13 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = v13, v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x2F0))(), v14, (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v27, v28);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_1013E07D8)
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v17 = 0;
    v18 = v17 + qword_10147E7D8;
    swift_beginAccess(v17 + qword_10147E7D8, v30, 32, 0);
    swift_retain(v16);
    v19 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v19);
    swift_endAccess(v30);
    sub_100A39458(a1, (uint64_t)v12);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v18, v30, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v6, v19, v20);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v30);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v16);
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    if (!Strong
      || (v22 = Strong,
          v23 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v22,
          (v23 & 1) == 0))
    {
      v24 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData) = 0;

      v25 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData) = 0;

      *(_BYTE *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial) = 2;
    }
    return sub_1004B84A4(a1, type metadata accessor for CRLAssetData);
  }
  return result;
}

uint64_t sub_100A2E338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *v13;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *Strong;
  void *v22;
  char v23;
  void *v24;
  uint64_t result;
  CKRecordID v26;
  Swift::String v27;
  _BYTE v29[24];

  v2 = v1;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v29[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v29[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (v13 = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = v13, v15 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x2F0))(), v14, (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_1013E07D8)
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v17 = 0;
    v18 = v17 + qword_10147E7D8;
    swift_beginAccess(v17 + qword_10147E7D8, v29, 32, 0);
    swift_retain(v16);
    v19 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v19);
    swift_endAccess(v29);
    sub_100A39410(a1, (uint64_t)&v12[*(int *)(v4 + 20)]);
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v18, v29, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v6, v19, v20);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v29);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v16);
    Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem);
    if (!Strong
      || (v22 = Strong,
          v23 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v22,
          (v23 & 1) == 0))
    {
      v24 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData) = 0;

    }
    return sub_1004CB800(a1, (uint64_t *)&unk_1013E9BE0);
  }
  return result;
}

void sub_100A2E7E4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *Strong;
  void *v14;
  char v15;
  uint64_t v16;
  _UNKNOWN ****v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  _UNKNOWN ****v21;
  _UNKNOWN ****v22;
  char *v23;
  __n128 v24;
  CKRecordID v25;
  Swift::String v26;
  _BYTE v28[24];

  v2 = v1;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v28[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v28[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = Strong,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v14,
        (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v17 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v17 == &off_1013E07D8)
      v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v18 = 0;
    swift_beginAccess(v18 + qword_10147E7D8, v28, 32, 0);
    swift_retain(v17);
    v19 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v19);
    v20 = *(double *)&v12[*(int *)(v4 + 32)];
    swift_endAccess(v28);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v17);
    if (v20 >= a1)
    {
      v21 = *(_UNKNOWN *****)(v2 + v16);
      if (*v21 == &off_1013E07D8)
        v22 = v21;
      else
        v22 = 0;
      v23 = (char *)v22 + qword_10147E7D8;
      swift_beginAccess((char *)v22 + qword_10147E7D8, v28, 32, 0);
      swift_retain(v21);
      CRRegister.wrappedValue.getter(v19);
      swift_endAccess(v28);
      *(double *)&v12[*(int *)(v4 + 28)] = a1;
      sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
      swift_beginAccess(v23, v28, 33, 0);
      sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
      CRRegister.wrappedValue.setter(v6, v19, v24);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
      swift_endAccess(v28);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
      swift_release(v21);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"startTime", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 55, "Attempting to set startTime after endTime will only lead to misery.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startTime", 9, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 55, (uint64_t)"Attempting to set startTime after endTime will only lead to misery.", 67, 2u);
    }
  }
}

void sub_100A2ED44(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *Strong;
  void *v14;
  char v15;
  uint64_t v16;
  _UNKNOWN ****v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  _UNKNOWN ****v21;
  _UNKNOWN ****v22;
  char *v23;
  __n128 v24;
  CKRecordID v25;
  Swift::String v26;
  _BYTE v28[24];

  v2 = v1;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v28[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v28[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = Strong,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v14,
        (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v17 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v17 == &off_1013E07D8)
      v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v18 = 0;
    swift_beginAccess(v18 + qword_10147E7D8, v28, 32, 0);
    swift_retain(v17);
    v19 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v19);
    v20 = *(double *)&v12[*(int *)(v4 + 28)];
    swift_endAccess(v28);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v17);
    if (v20 <= a1)
    {
      v21 = *(_UNKNOWN *****)(v2 + v16);
      if (*v21 == &off_1013E07D8)
        v22 = v21;
      else
        v22 = 0;
      v23 = (char *)v22 + qword_10147E7D8;
      swift_beginAccess((char *)v22 + qword_10147E7D8, v28, 32, 0);
      swift_retain(v21);
      CRRegister.wrappedValue.getter(v19);
      swift_endAccess(v28);
      *(double *)&v12[*(int *)(v4 + 32)] = a1;
      sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
      swift_beginAccess(v23, v28, 33, 0);
      sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
      CRRegister.wrappedValue.setter(v6, v19, v24);
      sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
      swift_endAccess(v28);
      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
      swift_release(v21);
    }
    else
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"endTime", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 67, "Attempting to set startTime after endTime will only lead to misery.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endTime", 7, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 67, (uint64_t)"Attempting to set startTime after endTime will only lead to misery.", 67, 2u);
    }
  }
}

void sub_100A2F298(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *Strong;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  _UNKNOWN ****v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  CKRecordID v21;
  Swift::String v22;
  _BYTE v24[24];

  v2 = v1;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v24[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v24[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = Strong,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v14,
        (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v21, v22);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_1013E07D8)
      v17 = v16;
    else
      v17 = 0;
    v18 = (char *)v17 + qword_10147E7D8;
    swift_beginAccess((char *)v17 + qword_10147E7D8, v24, 32, 0);
    swift_retain(v16);
    v19 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v19);
    swift_endAccess(v24);
    v12[*(int *)(v4 + 36)] = a1 & 1;
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v18, v24, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v6, v19, v20);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v24);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v16);
  }
}

uint64_t sub_100A2F5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v10[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1013E07D8)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_10147E7D8, v10, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v6);
  v7 = v3[*(int *)(v1 + 48)];
  swift_endAccess(v10);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v4);
  return v7 & 1;
}

void sub_100A2F6E0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *Strong;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  _UNKNOWN ****v17;
  char v18;
  char *v19;
  uint64_t v20;
  __n128 v21;
  CKRecordID v22;
  Swift::String v23;
  _BYTE v25[24];

  v2 = v1;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v25[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v25[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = Strong,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v14,
        (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v22, v23);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_1013E07D8)
      v17 = v16;
    else
      v17 = 0;
    v18 = a1 & 1;
    v19 = (char *)v17 + qword_10147E7D8;
    swift_beginAccess((char *)v17 + qword_10147E7D8, v25, 32, 0);
    swift_retain(v16);
    v20 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v20);
    swift_endAccess(v25);
    v12[*(int *)(v4 + 48)] = v18;
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v19, v25, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v6, v20, v21);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v25);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v16);
  }
}

uint64_t sub_100A2F9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Class v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  Class v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  v1 = OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial;
  LODWORD(v2) = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial);
  if ((_DWORD)v2 == 2)
  {
    v3 = v0;
    v4 = sub_100A3104C();
    v5 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
    v6 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
    sub_1004BB5A4((Class)((char *)v4 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v5);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);

    if ((v7 & 1) != 0)
    {
      LOBYTE(v2) = *(_BYTE *)(v3 + v1);
    }
    else
    {
      v8 = sub_100A3104C();
      v9 = *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
      v10 = *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
      sub_1004BB5A4((Class)((char *)v8 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v9);
      v11 = (void *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 56))(_swiftEmptyDictionarySingleton, v9, v10);

      v2 = objc_msgSend((id)objc_opt_self(PFVideoMetadata), "videoAssetIsSpatial:", v11);
      *(_BYTE *)(v3 + v1) = v2;
    }
  }
  return v2 & 1;
}

void sub_100A2FCF8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *Strong;
  void *v14;
  char v15;
  _UNKNOWN ****v16;
  _UNKNOWN ****v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  CKRecordID v21;
  Swift::String v22;
  _BYTE v24[24];

  v2 = v1;
  v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v9 = &v24[-v8 - 8];
  __chkstk_darwin(v10);
  v12 = &v24[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = Strong,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v14,
        (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v21, v22);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v16 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 == &off_1013E07D8)
      v17 = v16;
    else
      v17 = 0;
    v18 = (char *)v17 + qword_10147E7D8;
    swift_beginAccess((char *)v17 + qword_10147E7D8, v24, 32, 0);
    swift_retain(v16);
    v19 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v19);
    swift_endAccess(v24);
    *(double *)&v12[*(int *)(v4 + 24)] = a1;
    sub_1004B8460((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v18, v24, 33, 0);
    sub_1004B8460((uint64_t)v9, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v6, v19, v20);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v24);
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v16);
  }
}

void sub_100A300F4(float a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  _UNKNOWN ****v7;
  _UNKNOWN ****v8;
  uint64_t v9;
  __n128 v10;
  CKRecordID v11;
  Swift::String v12;
  float v13;
  char v14;
  _BYTE v15[24];

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v7 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v7 == &off_1013E07D8)
      v8 = v7;
    else
      v8 = 0;
    swift_beginAccess((char *)v8 + qword_10147E7D8, v15, 33, 0);
    v13 = a1;
    v14 = 0;
    type metadata accessor for CRLMovieItemCRDTData(0);
    swift_retain(v7);
    v9 = sub_1004B804C(&qword_1013E0A90);
    CRRegister.wrappedValue.setter(&v13, v9, v10);
    swift_endAccess(v15);
    swift_release(v7);
  }
}

void sub_100A30408(float a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *Strong;
  void *v5;
  char v6;
  uint64_t v7;
  _UNKNOWN ****v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  _UNKNOWN ****v12;
  _UNKNOWN ****v13;
  void (*v14)(_BYTE *, _QWORD);
  float *v15;
  CKRecordID v16;
  Swift::String v17;
  _BYTE v18[32];
  float v19;

  v2 = v1;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v8 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v8 == &off_1013E07D8)
      v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v9 = 0;
    swift_beginAccess(v9 + qword_10147E7D8, v18, 32, 0);
    type metadata accessor for CRLMovieItemCRDTData(0);
    swift_retain(v8);
    v10 = sub_1004B804C(&qword_1013DFA58);
    CRRegister.wrappedValue.getter(v10);
    v11 = v19;
    swift_endAccess(v18);
    swift_release(v8);
    swift_bridgeObjectRelease();
    if (v11 != a1)
    {
      v12 = *(_UNKNOWN *****)(v2 + v7);
      if (a1 >= 0.0)
      {
        if (*v12 == &off_1013E07D8)
          v13 = v12;
        else
          v13 = 0;
        swift_beginAccess((char *)v13 + qword_10147E7D8, &v19, 33, 0);
        swift_retain(v12);
        v14 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v18, v10);
        *v15 = a1;
        v14(v18, 0);
        swift_endAccess(&v19);
      }
      else
      {
        swift_retain(v12);
        sub_100757E04(&_mh_execute_header, (uint64_t)"cornerRadius", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItemData.swift", 87, 2, 285, "Only positive corner radius values are allowed.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cornerRadius", 12, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItemData.swift", 87, 2u, 285, (uint64_t)"Only positive corner radius values are allowed.", 47, 2u);
      }
      swift_release(v12);
    }
  }
}

void sub_100A30878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *Strong;
  void *v16;
  char v17;
  _UNKNOWN ****v18;
  _UNKNOWN ****v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  CKRecordID v24;
  Swift::String v25;
  _BYTE v27[24];

  v3 = v2;
  v6 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v27[-v10 - 8];
  __chkstk_darwin(v12);
  v14 = &v27[-v13 - 8];
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v16 = Strong,
        v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, v25);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v18 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 == &off_1013E07D8)
      v19 = v18;
    else
      v19 = 0;
    v20 = (char *)v19 + qword_10147E7D8;
    swift_beginAccess((char *)v19 + qword_10147E7D8, v27, 32, 0);
    swift_retain(v18);
    v21 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v21);
    swift_endAccess(v27);
    v22 = &v14[*(int *)(v6 + 40)];
    swift_bridgeObjectRelease();
    *v22 = a1;
    v22[1] = a2;
    sub_1004B8460((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v20, v27, 33, 0);
    sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v8, v21, v23);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v27);
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v18);
  }
}

void sub_100A30CBC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (a3)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = a1;
  a4(v6, v8);

}

void sub_100A30D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *Strong;
  void *v16;
  char v17;
  _UNKNOWN ****v18;
  _UNKNOWN ****v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  CKRecordID v24;
  Swift::String v25;
  _BYTE v27[24];

  v3 = v2;
  v6 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v6);
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v27[-v10 - 8];
  __chkstk_darwin(v12);
  v14 = &v27[-v13 - 8];
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v16 = Strong,
        v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, v25);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v18 = *(_UNKNOWN *****)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 == &off_1013E07D8)
      v19 = v18;
    else
      v19 = 0;
    v20 = (char *)v19 + qword_10147E7D8;
    swift_beginAccess((char *)v19 + qword_10147E7D8, v27, 32, 0);
    swift_retain(v18);
    v21 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v21);
    swift_endAccess(v27);
    v22 = &v14[*(int *)(v6 + 44)];
    swift_bridgeObjectRelease();
    *v22 = a1;
    v22[1] = a2;
    sub_1004B8460((uint64_t)v14, (uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v20, v27, 33, 0);
    sub_1004B8460((uint64_t)v11, (uint64_t)v8, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter(v8, v21, v23);
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v27);
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v18);
  }
}

Class sub_100A3104C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _UNKNOWN ****v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  void (*v30)(char *, char *);
  _UNKNOWN ****v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  _DWORD *v46;
  uint64_t v47;
  char *v48;
  id v49;
  void *v50;
  os_unfair_lock_s *v51;
  id v52;
  void *v53;
  char *v54;
  void *v55;
  id v56;
  char *v57;
  char *v58;
  char *v59;
  objc_super v60;
  _BYTE v61[24];

  v1 = v0;
  v2 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - v9;
  v11 = type metadata accessor for UUID(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v57 - v17;
  v19 = OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData;
  v20 = *(char **)&v0[OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData];
  if (v20)
  {
    v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    v57 = v16;
    v58 = v15;
    sub_1004BB5A4(&v20[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v21);
    v23 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
    v59 = v20;
    v23(v21, v22);
    v24 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v24 == &off_1013E07D8)
      v25 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v25 = 0;
    swift_beginAccess(v25 + qword_10147E7D8, v61, 32, 0);
    swift_retain(v24);
    v26 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v26);
    swift_endAccess(v61);
    swift_release(v24);
    sub_1004B8460((uint64_t)v4, (uint64_t)v10, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);
    v27 = v57;
    v28 = v58;
    (*((void (**)(char *, char *, char *))v57 + 2))(v13, v10, v58);
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLAssetData);
    v29 = static UUID.== infix(_:_:)(v18);
    v30 = (void (*)(char *, char *))*((_QWORD *)v27 + 1);
    v30(v13, v28);
    v30(v18, v28);
    if ((v29 & 1) == 0)
    {
      sub_100757E04(&_mh_execute_header, (uint64_t)"movieAssetPayload", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 179, "Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"movieAssetPayload", 17, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 179, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u);
    }
    return (Class)v59;
  }
  else
  {
    v32 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    if (*v32 == &off_1013E07D8)
      v33 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    else
      v33 = 0;
    swift_beginAccess(v33 + qword_10147E7D8, v61, 32, 0);
    swift_retain(v32);
    v34 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v34);
    swift_endAccess(v61);
    swift_release(v32);
    sub_1004B8460((uint64_t)v4, (uint64_t)v7, type metadata accessor for CRLAssetData);
    sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);
    v35 = (char *)objc_msgSend(v0, "store");
    v36 = *(_QWORD *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v36 + 16));
    v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    v38 = *(void **)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v38)
    {
      v39 = *(id *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      v59 = (char *)type metadata accessor for CRLAssetManager();
      v40 = (char *)objc_allocWithZone((Class)v59);
      v58 = &v40[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
      swift_unknownObjectWeakInit(&v40[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
      v41 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      v42 = type metadata accessor for CRLUnfairLock();
      v43 = v1;
      v44 = swift_allocObject(v42, 24, 7);
      v57 = v35;
      v45 = v40;
      v46 = (_DWORD *)swift_slowAlloc(4, -1);
      *v46 = 0;
      *(_QWORD *)(v44 + 16) = v46;
      atomic_thread_fence(memory_order_acq_rel);
      *(_QWORD *)&v40[v41] = v44;
      v1 = v43;
      *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      v47 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(_QWORD *)&v45[v47] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
      *(_QWORD *)&v45[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      v48 = v57;
      swift_unknownObjectWeakAssign(v58, v57);

      v60.receiver = v45;
      v60.super_class = (Class)v59;
      v49 = objc_msgSendSuper2(&v60, "init");

      v50 = *(void **)&v35[v37];
      *(_QWORD *)&v35[v37] = v49;
      v39 = v49;

      v38 = 0;
    }
    v51 = *(os_unfair_lock_s **)(v36 + 16);
    v52 = v38;
    os_unfair_lock_unlock(v51);

    v53 = (void *)sub_100CF7F90(v7, v1, v39);
    sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLAssetData);
    v54 = v1;
    v55 = *(void **)&v1[v19];
    *(_QWORD *)&v54[v19] = v53;
    v56 = v53;

    return (Class)v56;
  }
}

char *sub_100A315D4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _UNKNOWN ****v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (**v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _DWORD *v39;
  uint64_t v40;
  id v41;
  void *v42;
  os_unfair_lock_s *v43;
  id v44;
  void *v45;
  char *v46;
  Class v48;
  uint64_t v49;
  char *v50;
  objc_super v51;
  _BYTE v52[24];

  v1 = type metadata accessor for UUID(0);
  v2 = *(char **)(v1 - 8);
  v49 = v1;
  v50 = v2;
  __chkstk_darwin(v1);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetData(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_UNKNOWN *****)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  if (*v15 == &off_1013E07D8)
    v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  else
    v16 = 0;
  swift_beginAccess(v16 + qword_10147E7D8, v52, 32, 0);
  swift_retain(v15);
  v17 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v17);
  swift_endAccess(v52);
  swift_release(v15);
  sub_1004CB7BC((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLMovieItemAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E9BE0);
    return 0;
  }
  else
  {
    v19 = (void (**)(char *, uint64_t))v50;
    sub_1004B84E0((uint64_t)v10, (uint64_t)v14, type metadata accessor for CRLAssetData);
    v20 = OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData;
    v18 = *(char **)&v0[OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData];
    if (v18)
    {
      v21 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      v22 = *(_QWORD *)&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_1004BB5A4(&v18[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v21);
      v23 = *(void (**)(uint64_t, uint64_t))(v22 + 24);
      v24 = v18;
      v23(v21, v22);
      LOBYTE(v21) = static UUID.== infix(_:_:)(v4);
      v19[1](v4, v49);
      if ((v21 & 1) == 0)
      {
        sub_100757E04(&_mh_execute_header, (uint64_t)"posterImageAssetPayload", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 196, "Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"posterImageAssetPayload", 23, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 196, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u);
      }
    }
    else
    {
      v25 = v0;
      v26 = (char *)objc_msgSend(v0, "store");
      v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v27 + 16));
      v28 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      v29 = *(void **)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v29)
      {
        v30 = *(id *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        v48 = (Class)type metadata accessor for CRLAssetManager();
        v31 = (char *)objc_allocWithZone(v48);
        v50 = v14;
        v32 = v31;
        v33 = &v31[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit(&v31[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
        v49 = (uint64_t)v25;
        v34 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        v35 = type metadata accessor for CRLUnfairLock();
        v36 = swift_allocObject(v35, 24, 7);
        v37 = v26;
        v38 = v32;
        v39 = (_DWORD *)swift_slowAlloc(4, -1);
        *v39 = 0;
        *(_QWORD *)(v36 + 16) = v39;
        atomic_thread_fence(memory_order_acq_rel);
        *(_QWORD *)&v32[v34] = v36;
        v14 = v50;
        *(_QWORD *)&v38[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        v40 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(_QWORD *)&v38[v40] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
        *(_QWORD *)&v38[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        swift_unknownObjectWeakAssign(v33, v37);

        v51.receiver = v38;
        v51.super_class = v48;
        v41 = objc_msgSendSuper2(&v51, "init");

        v42 = *(void **)&v26[v28];
        *(_QWORD *)&v26[v28] = v41;
        v30 = v41;

        v25 = (char *)v49;
        v29 = 0;
      }
      v43 = *(os_unfair_lock_s **)(v27 + 16);
      v44 = v29;
      os_unfair_lock_unlock(v43);

      v18 = (char *)sub_100CF7F90(v14, v25, v30);
      v45 = *(void **)&v25[v20];
      *(_QWORD *)&v25[v20] = v18;
      v46 = v18;

    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLAssetData);
  }
  return v18;
}

double sub_100A31B68()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  double v4;
  double v5;

  v0 = sub_100A315D4();
  if (!v0)
    return 0.0;
  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(CRLImageProviderPool), "sharedPool");
  v3 = objc_msgSend(v2, "providerForAsset:shouldValidate:", v1, 1);

  objc_msgSend(v3, "naturalSize");
  v5 = v4;

  return v5;
}

uint64_t sub_100A31C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  _BYTE v14[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1013E07D8)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_10147E7D8, v14, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v6);
  swift_endAccess(v14);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v4);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  return v11;
}

uint64_t sub_100A31E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  _BYTE v14[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1013E07D8)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_10147E7D8, v14, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v6);
  swift_endAccess(v14);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v4);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  return v11;
}

id sub_100A31FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _QWORD);
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[32];
  _BYTE v51[24];
  char v52[24];
  char *v53;

  v49 = a4;
  v44 = a2;
  v5 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v11);
  v45 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v47 = (uint64_t)&v42 - v14;
  __chkstk_darwin(v15);
  v42 = (uint64_t)&v42 - v16;
  __chkstk_darwin(v17);
  v43 = (uint64_t)&v42 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v42 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v42 - v23;
  v48 = v4;
  v25 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  swift_retain(v25);
  v26 = sub_1004ED990(1);
  swift_release(v25);
  v27 = (uint64_t)v26 + *(_QWORD *)(*v26 + 632);
  swift_beginAccess(v27, v52, 0, 0);
  v28 = &unk_1013F02C0;
  sub_1004CB7BC(v27, (uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  v46 = v8;
  swift_retain(v26);
  v29 = sub_1004B804C((uint64_t *)&unk_1013F02E0);
  CRRegister.wrappedValue.getter(v29);
  sub_1004CB7BC((uint64_t)v7, (uint64_t)v24, (uint64_t *)&unk_1013E1A50);
  sub_1004B84A4((uint64_t)v7, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013F02C0);
  swift_release(v26);
  v30 = (uint64_t)v53;
  sub_1004EEC58(v49);
  if (v30)
  {
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
  }
  else
  {
    v49 = v29;
    v53 = v21;
    v31 = v43;
    sub_1004CB7BC(v44, v43, (uint64_t *)&unk_1013E1A50);
    v32 = v42;
    sub_1004CB7BC((uint64_t)v24, v42, (uint64_t *)&unk_1013E1A50);
    v33 = type metadata accessor for UUID(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = v27;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33) == 1)
    {
      v36 = (uint64_t)v53;
      sub_1004C4938(v32, (uint64_t)v53, (uint64_t *)&unk_1013E1A50);
      swift_retain(v26);
      sub_1004CB800(v31, (uint64_t *)&unk_1013E1A50);
    }
    else
    {
      swift_retain(v26);
      sub_1004CB800(v32, (uint64_t *)&unk_1013E1A50);
      v36 = (uint64_t)v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v53, v31, v33);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v33);
    }
    v53 = v24;
    v37 = v47;
    sub_1004CB7BC(v36, v47, (uint64_t *)&unk_1013E1A50);
    swift_beginAccess(v35, v51, 33, 0);
    v38 = v45;
    sub_1004CB7BC(v37, v45, (uint64_t *)&unk_1013E1A50);
    v39 = (void (*)(_BYTE *, _QWORD))CRRegister.wrappedValue.modify(v50, v49);
    sub_100582338(v38, v40, (uint64_t *)&unk_1013E1A50);
    v39(v50, 0);
    sub_1004CB800(v37, (uint64_t *)&unk_1013E1A50);
    swift_endAccess(v51);
    sub_1004CB800(v36, (uint64_t *)&unk_1013E1A50);
    swift_release(v26);
    v28 = sub_100A38BC0((uint64_t)*(id *)(v48 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store), (uint64_t)v26);
    sub_1004CB800((uint64_t)v53, (uint64_t *)&unk_1013E1A50);
  }
  return v28;
}

void sub_100A3244C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD *Strong;
  void *v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CKRecordID v20;
  Swift::String v21;
  uint64_t v22;
  _BYTE v23[40];

  v3 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v3);
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for CRLAssetData(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v23[-v11 - 8];
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v14 = Strong,
        v15 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v14,
        (v15 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else if (a1)
  {
    sub_1004E90B0((uint64_t)a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v23);
    v16 = a1;
    v17 = sub_1004B804C(&qword_101400020);
    v18 = type metadata accessor for CRLAssetBackedAssetStorage(0);
    if (swift_dynamicCast(&v22, v23, v17, v18, 6))
    {
      v19 = v22;
      sub_1004B8460(v22 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v9, type metadata accessor for CRLAssetData);
      swift_release(v19);
      sub_1004B84E0((uint64_t)v9, (uint64_t)v12, type metadata accessor for CRLAssetData);
      sub_1004B8460((uint64_t)v12, (uint64_t)v5, type metadata accessor for CRLAssetData);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      sub_100A2E338((uint64_t)v5);

      sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLAssetData);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
      sub_100A2E338((uint64_t)v5);

    }
  }
}

uint64_t sub_100A327BC(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11)
{
  uint64_t v11;
  int *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *Strong;
  void *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _UNKNOWN ****v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __n128 v93;
  void *v94;
  void *v95;
  uint64_t result;
  CKRecordID v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE v120[48];

  v107 = a8;
  v108 = a3;
  v109 = a4;
  v110 = a6;
  v114 = a5;
  v106 = a2;
  v17 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v111 = (uint64_t)&v99 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v99 - v23;
  v25 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v25);
  v103 = (uint64_t)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v104 = (uint64_t)&v99 - v28;
  __chkstk_darwin(v29);
  v105 = (uint64_t)&v99 - v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v99 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v99 - v35;
  v37 = type metadata accessor for CRLAssetData(0);
  v115 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v102 = (uint64_t)&v99 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v118 = (uint64_t)&v99 - v40;
  __chkstk_darwin(v41);
  v100 = (uint64_t)&v99 - v42;
  __chkstk_darwin(v43);
  v101 = (uint64_t)&v99 - v44;
  __chkstk_darwin(v45);
  v117 = (uint64_t)&v99 - v46;
  v116 = v11;
  if (!*(_QWORD *)(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v116 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem)) != 0
    && (v48 = Strong,
        v49 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v48,
        (v49 & 1) != 0))
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, "Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2u, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v97, v98);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  else
  {
    v112 = v19;
    v113 = a7;
    if (qword_1013DDE28 != -1)
      swift_once(&qword_1013DDE28, sub_100C88730);
    v50 = type metadata accessor for UUID(0);
    v51 = sub_1004F2A1C(v50, (uint64_t)qword_101481278);
    v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
    v53 = v117;
    v52(v117, v51, v50);
    v54 = (_QWORD *)(v53 + *(int *)(v37 + 20));
    *v54 = 0;
    v54[1] = 0xE000000000000000;
    *(_QWORD *)(v53 + *(int *)(v37 + 24)) = _swiftEmptyDictionarySingleton;
    if (a1)
    {
      sub_1004E90B0((uint64_t)a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v120);
      v55 = a1;
      v56 = sub_1004B804C(&qword_101400020);
      v57 = type metadata accessor for CRLAssetBackedAssetStorage(0);
      if (swift_dynamicCast(&v119, v120, v56, v57, 6))
      {
        v58 = v119;
        sub_1004B8460(v119 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v33, type metadata accessor for CRLAssetData);
        v59 = swift_release(v58);
        v60 = v115;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t, __n128))(v115 + 56))(v33, 0, 1, v37, v59);
      }
      else
      {
        v60 = v115;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v33, 1, 1, v37);
        sub_100757E04(&_mh_execute_header, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 259, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 259, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      sub_1004C4938((uint64_t)v33, (uint64_t)v36, (uint64_t *)&unk_1013E9BE0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v36, 1, v37) == 1)
      {

        sub_1004CB800((uint64_t)v36, (uint64_t *)&unk_1013E9BE0);
      }
      else
      {
        v61 = v117;
        sub_1004B84A4(v117, type metadata accessor for CRLAssetData);
        v62 = (uint64_t)v36;
        v63 = v101;
        sub_1004B84E0(v62, v101, type metadata accessor for CRLAssetData);
        sub_1004B8460(v63, v61, type metadata accessor for CRLAssetData);
        v64 = v100;
        sub_1004B8460(v63, v100, type metadata accessor for CRLAssetData);
        sub_100A2DFD4(v64);

        sub_1004B84A4(v63, type metadata accessor for CRLAssetData);
      }
    }
    v65 = v118;
    v52(v118, v51, v50);
    v66 = (_QWORD *)(v65 + *(int *)(v37 + 20));
    *v66 = 0;
    v66[1] = 0xE000000000000000;
    *(_QWORD *)(v65 + *(int *)(v37 + 24)) = _swiftEmptyDictionarySingleton;
    v67 = v115;
    v68 = v106;
    if (v106)
    {
      sub_1004E90B0((uint64_t)v106 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v120);
      v69 = v68;
      v70 = sub_1004B804C(&qword_101400020);
      v71 = type metadata accessor for CRLAssetBackedAssetStorage(0);
      if (swift_dynamicCast(&v119, v120, v70, v71, 6))
      {
        v72 = v119;
        v73 = v104;
        sub_1004B8460(v119 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v104, type metadata accessor for CRLAssetData);
        v74 = swift_release(v72);
        v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))v75)(v73, 0, 1, v37, v74);
      }
      else
      {
        v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
        v73 = v104;
        v75(v104, 1, 1, v37);
        sub_100757E04(&_mh_execute_header, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 265, "invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        v67 = v115;
        v65 = v118;
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 265, (uint64_t)"invalid nil found when unwrapping value", 39, 2u);
      }
      v76 = v105;
      sub_1004C4938(v73, v105, (uint64_t *)&unk_1013E9BE0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v76, 1, v37) == 1)
      {

        sub_1004CB800(v76, (uint64_t *)&unk_1013E9BE0);
      }
      else
      {
        sub_1004B84A4(v65, type metadata accessor for CRLAssetData);
        v77 = v102;
        sub_1004B84E0(v76, v102, type metadata accessor for CRLAssetData);
        sub_1004B8460(v77, v65, type metadata accessor for CRLAssetData);
        v78 = v103;
        sub_1004B8460(v77, v103, type metadata accessor for CRLAssetData);
        v75(v78, 0, 1, v37);
        sub_100A2E338(v78);

        sub_1004B84A4(v77, type metadata accessor for CRLAssetData);
      }
    }
    v79 = v117;
    sub_1004B8460(v117, (uint64_t)v24, type metadata accessor for CRLAssetData);
    v80 = (uint64_t)&v24[v17[5]];
    sub_1004B8460(v65, v80, type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56))(v80, 0, 1, v37);
    v81 = v108;
    v82 = v107 & 1;
    *(double *)&v24[v17[6]] = a9;
    *(double *)&v24[v17[7]] = a10;
    *(double *)&v24[v17[8]] = a11;
    v24[v17[9]] = v81 & 1;
    v83 = &v24[v17[10]];
    v85 = v113;
    v84 = v114;
    *(_QWORD *)v83 = v109;
    *((_QWORD *)v83 + 1) = v84;
    v86 = &v24[v17[11]];
    *(_QWORD *)v86 = v110;
    *((_QWORD *)v86 + 1) = v85;
    v24[v17[12]] = v82;
    *(_QWORD *)&v24[v17[13]] = _swiftEmptyDictionarySingleton;
    v87 = v116;
    v88 = *(_UNKNOWN *****)(v116 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v88 == &off_1013E07D8)
      v89 = *(_QWORD *)(v116 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v89 = 0;
    v90 = v111;
    sub_1004B8460((uint64_t)v24, v111, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess(v89 + qword_10147E7D8, v120, 33, 0);
    v91 = (uint64_t)v112;
    sub_1004B8460(v90, (uint64_t)v112, type metadata accessor for CRLMovieItemAssetData);
    swift_bridgeObjectRetain(v85);
    swift_retain(v88);
    swift_bridgeObjectRetain(v84);
    v92 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.setter(v91, v92, v93);
    sub_1004B84A4(v90, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess(v120);
    swift_release(v88);
    v94 = *(void **)(v87 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData);
    *(_QWORD *)(v87 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData) = 0;

    v95 = *(void **)(v87 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData);
    *(_QWORD *)(v87 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData) = 0;

    *(_BYTE *)(v87 + OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial) = 2;
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLMovieItemAssetData);
    sub_1004B84A4(v118, type metadata accessor for CRLAssetData);
    return sub_1004B84A4(v79, type metadata accessor for CRLAssetData);
  }
  return result;
}

float sub_100A33484()
{
  uint64_t v0;
  _UNKNOWN ****v1;
  uint64_t v2;
  uint64_t v3;
  float v5;
  _BYTE v6[24];

  v1 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v1 == &off_1013E07D8)
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v2 = 0;
  swift_beginAccess(v2 + qword_10147E7D8, v6, 32, 0);
  type metadata accessor for CRLMovieItemCRDTData(0);
  swift_retain(v1);
  v3 = sub_1004B804C(&qword_1013DFA58);
  CRRegister.wrappedValue.getter(v3);
  swift_endAccess(v6);
  swift_release(v1);
  swift_bridgeObjectRelease();
  return v5;
}

id sub_100A33544(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  float v7;
  id v8;
  uint64_t v9;
  void (*v10)(__n128);
  char *v11;
  __n128 v12;
  Class isa;
  double v14;
  id v15;
  uint64_t v17;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v7 = 10.0;
  else
    v7 = 0.0;
  v8 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieCornerRadius(0));
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v10 = *(void (**)(__n128))(*(_QWORD *)v9 + 256);
  v11 = v1;
  v12 = swift_retain(v9);
  v10(v12);
  swift_release(v9);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(float *)&v14 = v7;
  v15 = objc_msgSend(v8, "initWithId:cornerRadius:", isa, v14);

  return v15;
}

id sub_100A33694(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void (*v9)(__n128);
  char *v10;
  __n128 v11;
  Class isa;
  id v13;
  uint64_t v15;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieLooping(0));
  v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v9 = *(void (**)(__n128))(*(_QWORD *)v8 + 256);
  v10 = v1;
  v11 = swift_retain(v8);
  v9(v11);
  swift_release(v8);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = objc_msgSend(v7, "initWithId:isLooping:", isa, a1 & 1);

  return v13;
}

void sub_100A337DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(__n128);
  _QWORD *v10;
  __n128 v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)(__n128);
  _QWORD *v15;
  __n128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN ****v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  float v26;
  _UNKNOWN ****v27;
  _UNKNOWN ****v28;
  uint64_t v29;
  float v30;
  char v31;
  _BYTE v32[24];

  sub_10077400C(a1);
  v2 = type metadata accessor for CRLMediaItem(0);
  v3 = swift_dynamicCastClass(a1, v2);
  if (v3)
  {
    v4 = (_QWORD *)v3;
    v5 = a1;
    v6 = (void *)sub_100A14240();
    sub_100A14388(v6);
    v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v8 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v9 = *(uint64_t (**)(__n128))(*(_QWORD *)v8 + 384);
    v10 = v5;
    v11 = swift_retain(v8);
    v12 = (void *)v9(v11);

    swift_release(v8);
    sub_100776C40(v12);

    v13 = *(_QWORD *)((char *)v4 + v7);
    v14 = *(uint64_t (**)(__n128))(*(_QWORD *)v13 + 336);
    v15 = v10;
    v16 = swift_retain(v13);
    LOBYTE(v14) = v14(v16);

    swift_release(v13);
    sub_100776A8C(v14 & 1);
    v17 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x4B0))();
    sub_100A2F6E0(v17 & 1);

  }
  v18 = type metadata accessor for CRLMovieItem(0);
  v19 = swift_dynamicCastClass(a1, v18);
  if (v19)
  {
    v20 = v19;
    v21 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v22 = *(_UNKNOWN *****)(v19 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v22 == &off_1013E07D8)
      v23 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v23 = 0;
    swift_beginAccess(v23 + qword_10147E7D8, v32, 32, 0);
    type metadata accessor for CRLMovieItemCRDTData(0);
    v24 = a1;
    swift_retain(v22);
    v25 = sub_1004B804C(&qword_1013E0A90);
    CRRegister.wrappedValue.getter(v25);
    swift_endAccess(v32);
    swift_release(v22);
    v26 = 1.0;
    if (!v31)
      v26 = v30;
    sub_100A300F4(v26);
    v27 = *(_UNKNOWN *****)(v20 + v21);
    if (*v27 == &off_1013E07D8)
      v28 = v27;
    else
      v28 = 0;
    swift_beginAccess((char *)v28 + qword_10147E7D8, v32, 32, 0);
    swift_retain(v27);
    v29 = sub_1004B804C(&qword_1013DFA58);
    CRRegister.wrappedValue.getter(v29);
    swift_endAccess(v32);
    swift_release(v27);
    swift_bridgeObjectRelease();
    sub_100A30408(v30);

  }
}

BOOL sub_100A33AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _UNKNOWN ****v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v15[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = sub_100A315D4();
  if (v4)
  {
    v5 = v4;
    v6 = &v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
    v7 = *((_QWORD *)v6 + 3);
    v8 = *((_QWORD *)v6 + 4);
    sub_1004BB5A4(v6, v7);
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64))(v7, v8);

    return v7 & 1;
  }
  else
  {
    v10 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v10 == &off_1013E07D8)
      v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    else
      v11 = 0;
    swift_beginAccess(v11 + qword_10147E7D8, v15, 32, 0);
    swift_retain(v10);
    v12 = sub_1004B804C(&qword_10140FCF0);
    CRRegister.wrappedValue.getter(v12);
    v13 = v3[*(int *)(v1 + 36)];
    swift_endAccess(v15);
    sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v10);
    return (v13 & 1) == 0;
  }
}

uint64_t sub_100A33C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  NSString v9;
  id v10;
  uint64_t v11;
  _BYTE v14[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1013E07D8)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_10147E7D8, v14, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v6);
  swift_endAccess(v14);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v4);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "localizedStringForKey:value:table:", v8, v9, 0);

  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  return v11;
}

uint64_t sub_100A33EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t *v8;
  __objc2_class **v9;
  _BYTE v12[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1013E07D8)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_10147E7D8, v12, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v6);
  v7 = v3[*(int *)(v1 + 36)];
  swift_endAccess(v12);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v4);
  if (v7 == 1)
  {
    v8 = (unint64_t *)&unk_101403170;
    v9 = off_1012297A0;
  }
  else
  {
    v8 = (unint64_t *)&unk_101403168;
    v9 = off_101229940;
  }
  return sub_1004B8930(0, v8, v9);
}

uint64_t sub_100A3401C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _UNKNOWN ****v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t *v8;
  __objc2_class **v9;
  _BYTE v12[24];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v4 == &off_1013E07D8)
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v5 = 0;
  swift_beginAccess(v5 + qword_10147E7D8, v12, 32, 0);
  swift_retain(v4);
  v6 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v6);
  v7 = v3[*(int *)(v1 + 36)];
  swift_endAccess(v12);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v4);
  if (v7 == 1)
  {
    v8 = (unint64_t *)&unk_101403160;
    v9 = off_1012297A8;
  }
  else
  {
    v8 = (unint64_t *)&unk_101403158;
    v9 = off_101229948;
  }
  return sub_1004B8930(0, v8, v9);
}

id sub_100A34170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = v0;
  v2 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v5);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (**(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_1013E07D8)
    v8 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v8 = 0;
  v9 = (uint64_t)v8 + *(_QWORD *)(*v8 + 632);
  swift_beginAccess(v9, v21, 0, 0);
  sub_1004CB7BC(v9, (uint64_t)v7, (uint64_t *)&unk_1013F02C0);
  v10 = (uint64_t)v8 + qword_10147E7D8;
  swift_beginAccess((char *)v8 + qword_10147E7D8, v20, 0, 0);
  sub_1004B8460(v10, (uint64_t)v4, type metadata accessor for CRLMovieItemCRDTData);
  v11 = v8[4];
  v12 = v8[5];
  v15 = v8 + 2;
  v14 = v8[2];
  v13 = v15[1];
  v16 = type metadata accessor for CRLMovieItemData(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  sub_1004B84E0((uint64_t)v4, v17 + qword_10147E7D8, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004C4938((uint64_t)v7, v17 + *(_QWORD *)(*(_QWORD *)v17 + 632), (uint64_t *)&unk_1013F02C0);
  v18 = sub_1005E1000(v13, v11, v12, v14);
  return sub_100A38BC0((uint64_t)*(id *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store), (uint64_t)v18);
}

uint64_t sub_100A34344(uint64_t a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN ****v16;
  uint64_t v17;
  _UNKNOWN ****v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  CKRecordID v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[24];
  _BYTE v45[24];
  _BYTE v46[24];
  _QWORD v47[3];
  uint64_t v48;

  v3 = (int *)sub_1004B804C(&qword_101403128);
  v41 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v39 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v40);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - v8;
  v10 = sub_1004B804C(&qword_101403120);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLMovieItem(0);
  v14 = swift_dynamicCastClass(a1, v13);
  if (v14)
  {
    v15 = v14;
    v43 = a1;
    swift_unknownObjectRetain(a1);
    v42 = sub_100B0C360(v15, v1);
    v16 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v16 != &off_1013E07D8)
      v16 = 0;
    v17 = (uint64_t)v16 + qword_10147E7D8;
    swift_beginAccess((char *)v16 + qword_10147E7D8, v46, 0, 0);
    sub_1004B8460(v17, (uint64_t)v9, type metadata accessor for CRLMovieItemCRDTData);
    v18 = *(_UNKNOWN *****)(v15 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v18 != &off_1013E07D8)
      v18 = 0;
    v19 = (uint64_t)v18 + qword_10147E7D8;
    swift_beginAccess((char *)v18 + qword_10147E7D8, v45, 0, 0);
    sub_1004B8460(v19, (uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    v20 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    CRStruct_4.actionUndoingDifference(from:)(v6, v40, v20);
    sub_1004B84A4((uint64_t)v6, type metadata accessor for CRLMovieItemCRDTData);
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLMovieItemCRDTData);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))(v12, 1, v3) == 1)
    {
      sub_1004CB800((uint64_t)v12, &qword_101403120);
      memset(v47, 0, sizeof(v47));
      v48 = 1;
    }
    else
    {
      v21 = v3[12];
      v22 = (uint64_t)&v12[v21];
      v23 = v3[16];
      v24 = (uint64_t)&v12[v23];
      v25 = v3[20];
      v26 = (uint64_t)&v12[v25];
      v27 = v39;
      v28 = v39 + v21;
      v29 = v39 + v23;
      v30 = v39 + v25;
      sub_1004C4938((uint64_t)v12, v39, &qword_101403130);
      sub_1004C4938(v22, v28, &qword_1013F8AF0);
      sub_1004C4938(v24, v29, &qword_101403138);
      sub_1004C4938(v26, v30, &qword_101403140);
      v48 = (uint64_t)v3;
      v31 = sub_10050D1B0(v47);
      v32 = (uint64_t)v31 + v3[12];
      v33 = (uint64_t)v31 + v3[16];
      v34 = (uint64_t)v31 + v3[20];
      sub_1004C4938(v27, (uint64_t)v31, &qword_101403130);
      sub_1004C4938(v28, v32, &qword_1013F8AF0);
      sub_1004C4938(v29, v33, &qword_101403138);
      sub_1004C4938(v30, v34, &qword_101403140);
    }
    v35 = v42;
    swift_beginAccess(v42 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, v44, 33, 0);
    sub_10083DA20((uint64_t)v47, 4);
    swift_endAccess(v44);
    swift_unknownObjectRelease(v43);
    return v35;
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 381, "Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 381, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v37, v38);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100A347DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN ****v31;
  uint64_t v32;
  _UNKNOWN ****v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  double *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  double *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  double *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  double *v88;
  uint64_t result;
  CKRecordID v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  unsigned int (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  int *v105;
  _QWORD *v106;
  _BYTE v107[24];
  _BYTE v108[32];

  v2 = v1;
  v105 = (int *)sub_1004B804C(&qword_101403148);
  v4 = *((_QWORD *)v105 - 1);
  __chkstk_darwin(v105);
  v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v92 - v8;
  __chkstk_darwin(v10);
  v97 = (char *)&v92 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v92 - v13;
  __chkstk_darwin(v15);
  v103 = (uint64_t)&v92 - v16;
  v101 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v101);
  v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v92 - v20;
  v22 = sub_1004B804C(&qword_101403150);
  __chkstk_darwin(v22);
  v24 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v104 = (char *)&v92 - v26;
  v27 = type metadata accessor for CRLMovieItem(0);
  v28 = swift_dynamicCastClass(a1, v27);
  if (v28)
  {
    v29 = v28;
    v102 = v4;
    v95 = v14;
    v98 = v9;
    v99 = v6;
    v30 = type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass(v29, v30))
    {
      v31 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v31 != &off_1013E07D8)
        v31 = 0;
      v32 = (uint64_t)v31 + qword_10147E7D8;
      swift_beginAccess((char *)v31 + qword_10147E7D8, v108, 0, 0);
      sub_1004B8460(v32, (uint64_t)v21, type metadata accessor for CRLMovieItemCRDTData);
      v33 = *(_UNKNOWN *****)(v29 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v33 != &off_1013E07D8)
        v33 = 0;
      v34 = (uint64_t)v33 + qword_10147E7D8;
      swift_beginAccess((char *)v33 + qword_10147E7D8, v107, 0, 0);
      sub_1004B8460(v34, (uint64_t)v18, type metadata accessor for CRLMovieItemCRDTData);
      v35 = sub_1004B7878(&qword_1013E0D10, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6DC0);
      v36 = a1;
      swift_unknownObjectRetain(a1);
      v37 = (uint64_t)v104;
      CRType.observableDifference(from:)(v18, v101, v35);
      sub_1004B84A4((uint64_t)v18, type metadata accessor for CRLMovieItemCRDTData);
      sub_1004B84A4((uint64_t)v21, type metadata accessor for CRLMovieItemCRDTData);
      sub_1004CB7BC(v37, (uint64_t)v24, &qword_101403150);
      v38 = v105;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v102 + 48))(v24, 1, v105) == 1)
      {
        sub_1004CB800((uint64_t)v24, &qword_101403150);
        v39 = _swiftEmptyArrayStorage;
        if (!*(_QWORD *)&_swiftEmptyArrayStorage[2])
          goto LABEL_37;
      }
      else
      {
        v93 = a1;
        v40 = v38[12];
        v41 = v103;
        v42 = v103 + v40;
        v43 = v38[16];
        v44 = v103 + v43;
        v45 = v38[20];
        v46 = v103 + v45;
        v47 = (uint64_t)&v24[v40];
        v48 = (uint64_t)&v24[v43];
        v49 = (uint64_t)&v24[v45];
        sub_1004C4938((uint64_t)v24, v103, &qword_1013E9C40);
        sub_1004C4938(v47, v42, &qword_1013E9C40);
        sub_1004C4938(v48, v44, &qword_1013E9C40);
        sub_1004C4938(v49, v46, &qword_1013E9C40);
        v50 = (uint64_t)v95;
        v51 = (uint64_t)&v95[v38[12]];
        v52 = (uint64_t)&v95[v38[16]];
        v53 = (uint64_t)&v95[v38[20]];
        sub_1004CB7BC(v41, (uint64_t)v95, &qword_1013E9C40);
        v101 = v42;
        sub_1004CB7BC(v42, v51, &qword_1013E9C40);
        v102 = v44;
        sub_1004CB7BC(v44, v52, &qword_1013E9C40);
        v94 = v46;
        sub_1004CB7BC(v46, v53, &qword_1013E9C40);
        v54 = type metadata accessor for CRValueObservableDifference(0);
        v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48);
        if (v100(v50, 1, v54) == 1)
        {
          sub_1004CB800(v53, &qword_1013E9C40);
          sub_1004CB800(v52, &qword_1013E9C40);
          sub_1004CB800(v51, &qword_1013E9C40);
          sub_1004CB800(v50, &qword_1013E9C40);
          v39 = _swiftEmptyArrayStorage;
          v55 = v103;
          v56 = v105;
          v57 = (uint64_t)v97;
        }
        else
        {
          sub_1004CB800(v50, &qword_1013E9C40);
          sub_1004CB800(v53, &qword_1013E9C40);
          sub_1004CB800(v52, &qword_1013E9C40);
          sub_1004CB800(v51, &qword_1013E9C40);
          v39 = (double *)sub_100D0EF94(0, 1, 1, _swiftEmptyArrayStorage);
          v59 = *((_QWORD *)v39 + 2);
          v58 = *((_QWORD *)v39 + 3);
          v57 = (uint64_t)v97;
          if (v59 >= v58 >> 1)
            v39 = (double *)sub_100D0EF94((_QWORD *)(v58 > 1), v59 + 1, 1, v39);
          v55 = v103;
          v56 = v105;
          *((_QWORD *)v39 + 2) = v59 + 1;
          v60 = &v39[2 * v59];
          *((_QWORD *)v60 + 4) = 0x737465737361;
          v60[5] = -2.12455197e183;
        }
        v61 = v57 + v56[12];
        v62 = v57 + v56[16];
        v63 = v57 + v56[20];
        v64 = v55;
        sub_1004CB7BC(v55, v57, &qword_1013E9C40);
        sub_1004CB7BC(v101, v61, &qword_1013E9C40);
        sub_1004CB7BC(v102, v62, &qword_1013E9C40);
        v65 = v94;
        sub_1004CB7BC(v94, v63, &qword_1013E9C40);
        v66 = v100(v61, 1, v54);
        v96 = v54;
        if (v66 == 1)
        {
          v67 = v65;
          sub_1004CB800(v63, &qword_1013E9C40);
          sub_1004CB800(v62, &qword_1013E9C40);
          sub_1004CB800(v61, &qword_1013E9C40);
          sub_1004CB800(v57, &qword_1013E9C40);
          v37 = (uint64_t)v104;
        }
        else
        {
          sub_1004CB800(v61, &qword_1013E9C40);
          sub_1004CB800(v63, &qword_1013E9C40);
          sub_1004CB800(v62, &qword_1013E9C40);
          sub_1004CB800(v57, &qword_1013E9C40);
          if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
            v39 = (double *)sub_100D0EF94(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
          v37 = (uint64_t)v104;
          v69 = *((_QWORD *)v39 + 2);
          v68 = *((_QWORD *)v39 + 3);
          if (v69 >= v68 >> 1)
            v39 = (double *)sub_100D0EF94((_QWORD *)(v68 > 1), v69 + 1, 1, v39);
          v67 = v94;
          *((_QWORD *)v39 + 2) = v69 + 1;
          v70 = &v39[2 * v69];
          *((_QWORD *)v70 + 4) = 0x656B6F727473;
          v70[5] = -2.12455197e183;
        }
        v71 = (uint64_t)v98;
        v72 = (uint64_t)&v98[v56[12]];
        v73 = (uint64_t)&v98[v56[16]];
        v74 = (uint64_t)&v98[v56[20]];
        sub_1004CB7BC(v64, (uint64_t)v98, &qword_1013E9C40);
        sub_1004CB7BC(v101, v72, &qword_1013E9C40);
        sub_1004CB7BC(v102, v73, &qword_1013E9C40);
        sub_1004CB7BC(v67, v74, &qword_1013E9C40);
        if (v100(v73, 1, v96) == 1)
        {
          v75 = v93;
          sub_1004CB800(v74, &qword_1013E9C40);
          sub_1004CB800(v73, &qword_1013E9C40);
          sub_1004CB800(v72, &qword_1013E9C40);
          sub_1004CB800(v71, &qword_1013E9C40);
          v76 = v64;
        }
        else
        {
          sub_1004CB800(v73, &qword_1013E9C40);
          sub_1004CB800(v74, &qword_1013E9C40);
          sub_1004CB800(v72, &qword_1013E9C40);
          sub_1004CB800(v71, &qword_1013E9C40);
          if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
            v39 = (double *)sub_100D0EF94(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
          v76 = v64;
          v78 = *((_QWORD *)v39 + 2);
          v77 = *((_QWORD *)v39 + 3);
          if (v78 >= v77 >> 1)
            v39 = (double *)sub_100D0EF94((_QWORD *)(v77 > 1), v78 + 1, 1, v39);
          v75 = v93;
          *((_QWORD *)v39 + 2) = v78 + 1;
          v79 = &v39[2 * v78];
          *((_QWORD *)v79 + 4) = 0x656D756C6F76;
          v79[5] = -2.12455197e183;
        }
        v80 = (uint64_t)v99;
        v81 = (uint64_t)&v99[v105[12]];
        v82 = (uint64_t)&v99[v105[16]];
        v83 = (uint64_t)&v99[v105[20]];
        sub_1004CB7BC(v76, (uint64_t)v99, &qword_1013E9C40);
        sub_1004CB7BC(v101, v81, &qword_1013E9C40);
        sub_1004CB7BC(v102, v82, &qword_1013E9C40);
        sub_1004CB7BC(v67, v83, &qword_1013E9C40);
        if (v100(v83, 1, v96) == 1)
        {
          sub_1004CB800(v76, &qword_101403148);
          sub_1004CB800(v83, &qword_1013E9C40);
          sub_1004CB800(v82, &qword_1013E9C40);
          sub_1004CB800(v81, &qword_1013E9C40);
          sub_1004CB800(v80, &qword_1013E9C40);
          v36 = v75;
          if (!*((_QWORD *)v39 + 2))
          {
LABEL_37:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease(v36);
            v85 = _swiftEmptyDictionarySingleton;
            goto LABEL_38;
          }
        }
        else
        {
          sub_1004CB800(v83, &qword_1013E9C40);
          sub_1004CB800(v82, &qword_1013E9C40);
          sub_1004CB800(v81, &qword_1013E9C40);
          sub_1004CB800(v80, &qword_1013E9C40);
          if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
            v39 = (double *)sub_100D0EF94(0, *((_QWORD *)v39 + 2) + 1, 1, v39);
          v36 = v75;
          v87 = *((_QWORD *)v39 + 2);
          v86 = *((_QWORD *)v39 + 3);
          if (v87 >= v86 >> 1)
            v39 = (double *)sub_100D0EF94((_QWORD *)(v86 > 1), v87 + 1, 1, v39);
          *((_QWORD *)v39 + 2) = v87 + 1;
          v88 = &v39[2 * v87];
          v88[4] = 2.86523873e161;
          v88[5] = -9.12488124e192;
          sub_1004CB800(v76, &qword_101403148);
          if (!*((_QWORD *)v39 + 2))
            goto LABEL_37;
        }
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v106 = _swiftEmptyDictionarySingleton;
      sub_100825A20((uint64_t)v39, 4, isUniquelyReferenced_nonNull_native);
      v85 = v106;
      swift_unknownObjectRelease(v36);
      swift_bridgeObjectRelease();
LABEL_38:
      sub_1004CB800(v37, &qword_101403150);
      return (uint64_t)v85;
    }
    swift_unknownObjectRetain(a1);
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2u, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  else
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 393, "Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 393, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u);
  }
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v90, v91);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
  __break(1u);
  return result;
}

void sub_100A35380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  int v29;
  void (*v30)(char *, _QWORD, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _UNKNOWN ****v40;
  _UNKNOWN ****v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN ****v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _UNKNOWN ****v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char v55;
  _UNKNOWN ****v56;
  uint64_t v57;
  void *v58;
  id v59;
  char *v60;
  char *v61;
  _UNKNOWN ****v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(uint64_t, _QWORD, uint64_t, int *);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD v72[14];
  uint64_t v73;
  _BYTE v74[24];
  _OWORD v75[14];
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[29];
  _QWORD v95[29];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD v101[14];
  uint64_t v102;
  _OWORD v103[14];
  uint64_t v104;
  _OWORD v105[14];
  uint64_t v106;
  uint64_t v107;

  v71 = a2;
  v69 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v69);
  v70 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1004B804C(&qword_101403120);
  __chkstk_darwin(v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v60 - v9;
  v11 = sub_1004B804C(&qword_101403128);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  v16 = v107;
  sub_1007770E0(a1);
  if (!v16)
  {
    v71 = v12;
    v107 = 0;
    v67 = v7;
    v68 = v14;
    v17 = v2;
    v18 = (uint64_t *)(v15 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess(v15 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values, &v100, 0, 0);
    v19 = *v18;
    if (!*(_QWORD *)(v19 + 16))
    {
      v97 = 0;
      v96 = 0;
      v98 = 0;
      v99 = 1;
      v22 = (int *)v11;
      v23 = (uint64_t)v10;
      v24 = v71;
LABEL_8:
      v25 = (uint64_t *)&unk_1013DFC00;
      v26 = &v96;
LABEL_9:
      sub_1004CB800((uint64_t)v26, v25);
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v24 + 56))(v23, 1, 1, v22);
LABEL_10:
      v27 = &qword_101403120;
      v28 = v23;
LABEL_11:
      sub_1004CB800(v28, v27);
      return;
    }
    swift_bridgeObjectRetain(v19);
    v20 = sub_1008431EC(4);
    if ((v21 & 1) != 0)
    {
      sub_1004CB7BC(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v96, &qword_1013E0230);
    }
    else
    {
      v97 = 0;
      v96 = 0;
      v98 = 0;
      v99 = 1;
    }
    swift_bridgeObjectRelease();
    v22 = (int *)v11;
    v23 = (uint64_t)v10;
    v24 = v71;
    if (v99 == 1)
      goto LABEL_8;
    sub_1004C4938((uint64_t)&v96, (uint64_t)&v77, &qword_1013E0230);
    if (!*((_QWORD *)&v78 + 1))
    {
      v25 = &qword_1013E0230;
      v26 = (uint64_t *)&v77;
      goto LABEL_9;
    }
    v29 = swift_dynamicCast(v10, &v77, (char *)&type metadata for Any + 8, v22, 6);
    v30 = *(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56);
    v30(v10, v29 ^ 1u, 1, v22);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v10, 1, v22) == 1)
      goto LABEL_10;
    v31 = v22[12];
    v32 = (uint64_t)v68;
    v33 = (uint64_t)&v68[v31];
    v34 = v22[16];
    v35 = (uint64_t)&v68[v34];
    v63 = &v68[v34];
    v64 = &v68[v31];
    v36 = v22[20];
    v61 = &v68[v36];
    v66 = (void (*)(uint64_t, _QWORD, uint64_t, int *))v30;
    v37 = v23 + v31;
    v38 = v23 + v34;
    v71 = v23 + v36;
    sub_1004C4938(v23, (uint64_t)v68, &qword_101403130);
    sub_1004C4938(v37, v33, &qword_1013F8AF0);
    sub_1004C4938(v38, v35, &qword_101403138);
    v39 = (uint64_t)v61;
    sub_1004C4938(v71, (uint64_t)v61, &qword_101403140);
    v71 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    v65 = v17;
    v40 = *(_UNKNOWN *****)(v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v40 == &off_1013E07D8)
      v41 = v40;
    else
      v41 = 0;
    v42 = (uint64_t)v41 + qword_10147E7D8;
    swift_beginAccess((char *)v41 + qword_10147E7D8, &v93, 0, 0);
    v43 = v70;
    sub_1004B8460(v42, v70, type metadata accessor for CRLMovieItemCRDTData);
    if (*v40 == &off_1013E07D8)
      v44 = v40;
    else
      v44 = 0;
    v62 = v44;
    v45 = (uint64_t)v67;
    v46 = (uint64_t)&v67[v22[12]];
    v47 = (uint64_t)&v67[v22[16]];
    v60 = &v67[v22[20]];
    sub_1004CB7BC(v32, (uint64_t)v67, &qword_101403130);
    sub_1004CB7BC((uint64_t)v64, v46, &qword_1013F8AF0);
    sub_1004CB7BC((uint64_t)v63, v47, &qword_101403138);
    sub_1004CB7BC(v39, (uint64_t)v60, &qword_101403140);
    v48 = v65;
    v66(v45, 0, 1, v22);
    swift_beginAccess((char *)v62 + qword_10147E7D8, &v77, 33, 0);
    v49 = sub_1004B7878(&qword_1013E0D70, type metadata accessor for CRLMovieItemCRDTData, (uint64_t)&unk_100EF6F98);
    swift_retain(v40);
    CRStruct_4.apply(_:)(v45, v69, v49);
    swift_endAccess(&v77);
    swift_release(v40);
    sub_1004CB800(v45, &qword_101403120);
    v50 = sub_1004B804C(&qword_1013E0A88);
    CRRegister.wrappedValue.getter(v50);
    sub_1004C4938((uint64_t)&v77, (uint64_t)v94, (uint64_t *)&unk_1013F1530);
    v51 = *(_UNKNOWN *****)(v48 + v71);
    if (*v51 == &off_1013E07D8)
      v52 = *(_QWORD *)(v48 + v71);
    else
      v52 = 0;
    swift_beginAccess(v52 + qword_10147E7D8, &v96, 32, 0);
    swift_retain(v51);
    CRRegister.wrappedValue.getter(v50);
    sub_1004C4938((uint64_t)&v77, (uint64_t)v95, (uint64_t *)&unk_1013F1530);
    swift_endAccess(&v96);
    swift_release(v51);
    sub_1004C4938((uint64_t)v94, (uint64_t)&v96, (uint64_t *)&unk_1013F1530);
    if (sub_1004F276C((uint64_t)&v96) == 1)
    {
      sub_1004C4938((uint64_t)v95, (uint64_t)&v77, (uint64_t *)&unk_1013F1530);
      v53 = sub_1004F276C((uint64_t)&v77);
      v54 = (uint64_t)v68;
      if (v53 == 1)
        goto LABEL_39;
    }
    else
    {
      sub_1004C4938((uint64_t)v95, (uint64_t)&v77, (uint64_t *)&unk_1013F1530);
      if (sub_1004F276C((uint64_t)&v77) != 1)
      {
        sub_1004C4938((uint64_t)v95, (uint64_t)v72, (uint64_t *)&unk_1013F1530);
        v105[12] = v72[12];
        v105[13] = v72[13];
        v106 = v73;
        v105[8] = v72[8];
        v105[9] = v72[9];
        v105[11] = v72[11];
        v105[10] = v72[10];
        v105[4] = v72[4];
        v105[5] = v72[5];
        v105[7] = v72[7];
        v105[6] = v72[6];
        v105[0] = v72[0];
        v105[1] = v72[1];
        v105[3] = v72[3];
        v105[2] = v72[2];
        sub_1004C4938((uint64_t)v94, (uint64_t)v75, (uint64_t *)&unk_1013F1530);
        v103[12] = v75[12];
        v103[13] = v75[13];
        v104 = v76;
        v103[8] = v75[8];
        v103[9] = v75[9];
        v103[11] = v75[11];
        v103[10] = v75[10];
        v103[4] = v75[4];
        v103[5] = v75[5];
        v103[7] = v75[7];
        v103[6] = v75[6];
        v103[0] = v75[0];
        v103[1] = v75[1];
        v103[3] = v75[3];
        v103[2] = v75[2];
        sub_1008D3994(v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C3830);
        v55 = sub_1008BE12C((uint64_t)v103, (uint64_t)v105);
        sub_1008D3994(v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        sub_1008D3994(v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        sub_1008D3994(v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
        v54 = (uint64_t)v68;
        if ((v55 & 1) != 0)
        {
LABEL_39:
          sub_1004B84A4(v43, type metadata accessor for CRLMovieItemCRDTData);
          v27 = &qword_101403128;
          v28 = v54;
          goto LABEL_11;
        }
LABEL_32:
        v56 = *(_UNKNOWN *****)(v48 + v71);
        if (*v56 == &off_1013E07D8)
          v57 = *(_QWORD *)(v48 + v71);
        else
          v57 = 0;
        swift_beginAccess(v57 + qword_10147E7D8, v74, 32, 0);
        swift_retain(v56);
        CRRegister.wrappedValue.getter(v50);
        sub_1004C4938((uint64_t)v72, (uint64_t)v75, (uint64_t *)&unk_1013F1530);
        swift_endAccess(v74);
        swift_release(v56);
        sub_1004C4938((uint64_t)v75, (uint64_t)&v77, (uint64_t *)&unk_1013F1530);
        if (sub_1004F276C((uint64_t)&v77) == 1)
        {
          v58 = 0;
        }
        else
        {
          v101[12] = v89;
          v101[13] = v90;
          v102 = v91;
          v101[8] = v85;
          v101[9] = v86;
          v101[11] = v88;
          v101[10] = v87;
          v101[4] = v81;
          v101[5] = v82;
          v101[7] = v84;
          v101[6] = v83;
          v101[0] = v77;
          v101[1] = v78;
          v101[3] = v80;
          v101[2] = v79;
          v59 = sub_1008BEA4C((uint64_t)v101, 0);
          sub_1008D3994(v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
          v58 = v59;
        }
        sub_100A14388(v58);
        goto LABEL_39;
      }
      v54 = (uint64_t)v68;
    }
    sub_1004C4938((uint64_t)v94, (uint64_t)&v77, (uint64_t *)&unk_1013F1530);
    sub_1004C4938((uint64_t)v95, (uint64_t)&v92, (uint64_t *)&unk_1013F1530);
    sub_1004F2784((uint64_t)&v77);
    goto LABEL_32;
  }
}

void sub_100A35C30(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[15];
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v23 = sub_1004B804C(&qword_1013E9C00);
  __chkstk_darwin(v23);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v6);
  v22[6] = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v27 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v27);
  v22[5] = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v22[14] = (char *)v22 - v12;
  __chkstk_darwin(v13);
  v22[13] = (char *)v22 - v14;
  __chkstk_darwin(v15);
  v25 = (char *)v22 - v16;
  v24 = type metadata accessor for CRLAssetData(0);
  v22[12] = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v22[4] = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22[11] = (char *)v22 - v19;
  __chkstk_darwin(v20);
  v22[10] = (char *)v22 - v21;
  v26 = v5;
  __asm { BR              X10 }
}

void sub_100A35E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _UNKNOWN ****v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _UNKNOWN ****v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  _BOOL8 v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  _QWORD *v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  _UNKNOWN ****v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _UNKNOWN ****v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  int v91;
  int v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char v105;
  _UNKNOWN ****v106;
  _UNKNOWN ****v107;
  uint64_t v108;
  float v109;
  int v110;
  float v111;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v113;
  char v114;
  uint64_t v115;
  _BOOL8 v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  char v120;
  _UNKNOWN ****v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  _UNKNOWN ****v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  _UNKNOWN ****v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  _UNKNOWN ****v136;
  _UNKNOWN ****v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  _BOOL8 v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  CKRecordID v154;
  Swift::String v155;

  v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6961746E6F63, 0xED00006174614472, 0x7461446569766F6DLL, 0xE900000000000061, 0);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_getObjectType(v3);
    sub_10077C7C0(v1, v4, v5, v3, *(_QWORD *)(v0 + 232));
    return;
  }
  *(_QWORD *)(v0 + 152) = v3;
  v8 = v4;
  v9 = *(_QWORD *)(v4 + 16);
  if (v9)
  {
    v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    v11 = OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData;
    *(_QWORD *)(v0 + 64) = OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData;
    *(_QWORD *)(v0 + 72) = v11;
    *(_QWORD *)(v0 + 56) = OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial;
    swift_bridgeObjectRetain(v8);
    *(_QWORD *)(v0 + 24) = v12;
    v13 = (_QWORD *)(v12 + 40);
    *(_OWORD *)v0 = xmmword_100EF5E40;
    *(_QWORD *)(v0 + 128) = v6;
    *(_QWORD *)(v0 + 136) = v2;
    *(_QWORD *)(v0 + 208) = v10;
    while (1)
    {
      v15 = *(v13 - 1);
      v14 = *v13;
      v16 = v15 == 0x656B6F727473 && v14 == 0xE600000000000000;
      if (v16
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x656B6F727473, 0xE600000000000000, *(v13 - 1), *v13, 0) & 1) != 0)
      {
        break;
      }
      v24 = v15 == 0x737465737361 && v14 == 0xE600000000000000;
      v25 = *(_QWORD *)(v0 + 232);
      if (v24
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x737465737361, 0xE600000000000000, v15, v14, 0) & 1) != 0)
      {
        *(_QWORD *)(v0 + 144) = v9;
        v26 = type metadata accessor for CRLMovieItem(0);
        v27 = *(_QWORD *)(v0 + 152);
        v28 = swift_dynamicCastClass(v27, v26);
        if (!v28)
          goto LABEL_136;
        v29 = v28;
        v30 = *(_QWORD *)(v0 + 72);
        v31 = *(void **)(v25 + v30);
        *(_QWORD *)(v25 + v30) = 0;
        swift_unknownObjectRetain(v27);

        v32 = *(_QWORD *)(v0 + 64);
        v33 = *(void **)(v25 + v32);
        *(_QWORD *)(v25 + v32) = 0;

        *(_BYTE *)(v25 + *(_QWORD *)(v0 + 56)) = 2;
        v34 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        *(_QWORD *)(v0 + 192) = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        *(_QWORD *)(v0 + 200) = v29;
        v35 = *(_UNKNOWN *****)(v29 + v34);
        if (*v35 == &off_1013E07D8)
          v36 = *(_QWORD *)(v29 + v34);
        else
          v36 = 0;
        swift_beginAccess(v36 + qword_10147E7D8, v0 + 304, 32, 0);
        swift_retain(v35);
        v37 = sub_1004B804C(&qword_10140FCF0);
        v38 = *(_QWORD *)(v0 + 168);
        CRRegister.wrappedValue.getter(v37);
        swift_endAccess(v0 + 304);
        swift_release(v35);
        v39 = *(_QWORD *)(v0 + 80);
        sub_1004B8460(v38, v39, type metadata accessor for CRLAssetData);
        sub_1004B84A4(v38, type metadata accessor for CRLMovieItemAssetData);
        v40 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        v41 = *(_QWORD *)(v0 + 232);
        *(_QWORD *)(v0 + 216) = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        v42 = *(_UNKNOWN *****)(v41 + v40);
        if (*v42 == &off_1013E07D8)
          v43 = *(_QWORD *)(v41 + v40);
        else
          v43 = 0;
        swift_beginAccess(v43 + qword_10147E7D8, v0 + 304, 32, 0);
        swift_retain(v42);
        *(_QWORD *)(v0 + 224) = v37;
        CRRegister.wrappedValue.getter(v37);
        swift_endAccess(v0 + 304);
        swift_release(v42);
        v44 = *(_QWORD *)(v0 + 88);
        sub_1004B8460(v38, v44, type metadata accessor for CRLAssetData);
        sub_1004B84A4(v38, type metadata accessor for CRLMovieItemAssetData);
        v45 = static UUID.== infix(_:_:)(v39);
        v46 = *(_QWORD *)(v0 + 160);
        if ((v45 & 1) != 0
          && ((v47 = *(int *)(v46 + 20),
               v48 = *(_QWORD *)(v39 + v47),
               v49 = *(_QWORD *)(v39 + v47 + 8),
               v50 = (_QWORD *)(v44 + v47),
               v51 = v50[1],
               v48 == *v50)
           && v49 == v51
           || (_stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, *v50, v51, 0) & 1) != 0))
        {
          v52 = sub_100C9E04C(*(_QWORD *)(v39 + *(int *)(v46 + 24)), *(_QWORD *)(v44 + *(int *)(v46 + 24)));
          sub_1004B84A4(v44, type metadata accessor for CRLAssetData);
          sub_1004B84A4(v39, type metadata accessor for CRLAssetData);
          v53 = *(_QWORD *)(v0 + 208);
          if ((v52 & 1) != 0)
          {
LABEL_48:
            v78 = *(_UNKNOWN *****)(*(_QWORD *)(v0 + 200) + *(_QWORD *)(v0 + 192));
            if (*v78 == &off_1013E07D8)
              v79 = *(_QWORD *)(*(_QWORD *)(v0 + 200) + *(_QWORD *)(v0 + 192));
            else
              v79 = 0;
            swift_beginAccess(v79 + qword_10147E7D8, v0 + 304, 32, 0);
            swift_retain(v78);
            v80 = *(_QWORD *)(v0 + 168);
            v81 = *(_QWORD *)(v0 + 224);
            CRRegister.wrappedValue.getter(v81);
            swift_endAccess(v0 + 304);
            swift_release(v78);
            v82 = *(_QWORD *)(v0 + 184);
            v83 = *(_QWORD *)(v0 + 128);
            sub_1004CB7BC(v80 + *(int *)(v82 + 20), v83, (uint64_t *)&unk_1013E9BE0);
            sub_1004B84A4(v80, type metadata accessor for CRLMovieItemAssetData);
            v84 = *(_UNKNOWN *****)(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 216));
            if (*v84 == &off_1013E07D8)
              v85 = *(_QWORD *)(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 216));
            else
              v85 = 0;
            swift_beginAccess(v85 + qword_10147E7D8, v0 + 304, 32, 0);
            swift_retain(v84);
            CRRegister.wrappedValue.getter(v81);
            swift_endAccess(v0 + 304);
            swift_release(v84);
            v86 = *(_QWORD *)(v0 + 136);
            sub_1004CB7BC(v80 + *(int *)(v82 + 20), v86, (uint64_t *)&unk_1013E9BE0);
            sub_1004B84A4(v80, type metadata accessor for CRLMovieItemAssetData);
            v87 = *(_QWORD *)(v0 + 176);
            v88 = v87 + *(int *)(*(_QWORD *)(v0 + 120) + 48);
            sub_1004CB7BC(v83, v87, (uint64_t *)&unk_1013E9BE0);
            sub_1004CB7BC(v86, v88, (uint64_t *)&unk_1013E9BE0);
            v89 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 96) + 48);
            v90 = *(_QWORD *)(v0 + 160);
            v91 = v89(v87, 1, v90);
            v9 = *(_QWORD *)(v0 + 144);
            if (v91 != 1)
            {
              v96 = v87;
              v97 = *(_QWORD *)(v0 + 48);
              sub_1004CB7BC(v96, v97, (uint64_t *)&unk_1013E9BE0);
              v98 = v89(v88, 1, v90);
              v93 = &qword_1013E9C00;
              v94 = *(_QWORD *)(v0 + 208);
              if (v98 != 1)
              {
                v99 = *(_QWORD *)(v0 + 32);
                sub_1004B84E0(v88, v99, type metadata accessor for CRLAssetData);
                if ((static UUID.== infix(_:_:)(v97) & 1) != 0)
                {
                  if ((v100 = *(int *)(v90 + 20),
                        v101 = *(_QWORD *)(v97 + v100),
                        v102 = *(_QWORD *)(v97 + v100 + 8),
                        v103 = (_QWORD *)(v99 + v100),
                        v104 = v103[1],
                        v101 == *v103)
                    && v102 == v104
                    || (_stringCompareWithSmolCheck(_:_:expecting:)(v101, v102, *v103, v104, 0) & 1) != 0)
                  {
                    v105 = sub_100C9E04C(*(_QWORD *)(v97 + *(int *)(v90 + 24)), *(_QWORD *)(v99 + *(int *)(v90 + 24)));
                    sub_1004B84A4(v99, type metadata accessor for CRLAssetData);
                    sub_1004CB800(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_1013E9BE0);
                    sub_1004CB800(*(_QWORD *)(v0 + 128), (uint64_t *)&unk_1013E9BE0);
                    v9 = *(_QWORD *)(v0 + 144);
                    sub_1004B84A4(v97, type metadata accessor for CRLAssetData);
                    sub_1004CB800(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1013E9BE0);
                    v95 = *(_QWORD *)(v0 + 200);
                    if ((v105 & 1) == 0)
                      goto LABEL_81;
                    goto LABEL_82;
                  }
                }
                sub_1004B84A4(v99, type metadata accessor for CRLAssetData);
                v93 = (uint64_t *)&unk_1013E9BE0;
              }
              sub_1004CB800(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_1013E9BE0);
              sub_1004CB800(*(_QWORD *)(v0 + 128), (uint64_t *)&unk_1013E9BE0);
              sub_1004B84A4(v97, type metadata accessor for CRLAssetData);
              goto LABEL_80;
            }
            sub_1004CB800(v86, (uint64_t *)&unk_1013E9BE0);
            sub_1004CB800(v83, (uint64_t *)&unk_1013E9BE0);
            v92 = v89(v88, 1, v90);
            v93 = &qword_1013E9C00;
            v94 = *(_QWORD *)(v0 + 208);
            if (v92 == 1)
            {
              sub_1004CB800(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1013E9BE0);
              v95 = *(_QWORD *)(v0 + 200);
              goto LABEL_82;
            }
LABEL_80:
            sub_1004CB800(*(_QWORD *)(v0 + 176), v93);
            v95 = *(_QWORD *)(v0 + 200);
LABEL_81:
            *(_QWORD *)(v0 + 328) = &type metadata for Bool;
            *(_BYTE *)(v0 + 304) = 1;
            sub_1004CB7BC(v0 + 304, v0 + 248, &qword_1013E0230);
            swift_beginAccess(v94, v0 + 280, 33, 0);
            sub_10083DAD8(v0 + 248, 0x28uLL);
            swift_endAccess(v0 + 280);
            sub_1004CB800(v0 + 304, &qword_1013E0230);
LABEL_82:
            v121 = *(_UNKNOWN *****)(v95 + *(_QWORD *)(v0 + 192));
            if (*v121 == &off_1013E07D8)
              v122 = *(_QWORD *)(v95 + *(_QWORD *)(v0 + 192));
            else
              v122 = 0;
            swift_beginAccess(v122 + qword_10147E7D8, v0 + 304, 32, 0);
            swift_retain(v121);
            v123 = *(_QWORD *)(v0 + 104);
            v124 = *(_QWORD *)(v0 + 224);
            CRRegister.wrappedValue.getter(v124);
            v125 = *(_QWORD *)(v0 + 184);
            v126 = *(unsigned __int8 *)(v123 + *(int *)(v125 + 48));
            swift_endAccess(v0 + 304);
            sub_1004B84A4(v123, type metadata accessor for CRLMovieItemAssetData);
            swift_release(v121);
            v127 = *(_UNKNOWN *****)(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 216));
            if (*v127 == &off_1013E07D8)
              v128 = *(_QWORD *)(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 216));
            else
              v128 = 0;
            swift_beginAccess(v128 + qword_10147E7D8, v0 + 304, 32, 0);
            swift_retain(v127);
            v129 = *(_QWORD *)(v0 + 112);
            CRRegister.wrappedValue.getter(v124);
            v130 = *(unsigned __int8 *)(v129 + *(int *)(v125 + 48));
            swift_endAccess(v0 + 304);
            sub_1004B84A4(v129, type metadata accessor for CRLMovieItemAssetData);
            swift_release(v127);
            if (v130 == 2)
            {
              v10 = *(_QWORD **)(v0 + 208);
              if ((v126 & 1) == 0)
                goto LABEL_96;
            }
            else
            {
              v10 = *(_QWORD **)(v0 + 208);
              if (((v126 ^ ((v130 & 1) == 0)) & 1) != 0)
              {
LABEL_96:
                swift_unknownObjectRelease(*(_QWORD *)(v0 + 152));
                goto LABEL_6;
              }
            }
            v131 = *(_UNKNOWN *****)(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 216));
            if (*v131 == &off_1013E07D8)
              v132 = *(_QWORD *)(*(_QWORD *)(v0 + 232) + *(_QWORD *)(v0 + 216));
            else
              v132 = 0;
            swift_beginAccess(v132 + qword_10147E7D8, v0 + 304, 32, 0);
            swift_retain(v131);
            v133 = *(_QWORD *)(v0 + 40);
            CRRegister.wrappedValue.getter(*(_QWORD *)(v0 + 224));
            v134 = *(_BYTE *)(v133 + *(int *)(*(_QWORD *)(v0 + 184) + 48));
            swift_endAccess(v0 + 304);
            sub_1004B84A4(v133, type metadata accessor for CRLMovieItemAssetData);
            swift_release(v131);
            *(_QWORD *)(v0 + 328) = &type metadata for Bool;
            *(_BYTE *)(v0 + 304) = v134 & 1;
            sub_1004CB7BC(v0 + 304, v0 + 248, &qword_1013E0230);
            swift_beginAccess(v10, v0 + 280, 33, 0);
            sub_10083DAD8(v0 + 248, 0x34uLL);
            swift_endAccess(v0 + 280);
            sub_1004CB800(v0 + 304, &qword_1013E0230);
            goto LABEL_96;
          }
        }
        else
        {
          sub_1004B84A4(v44, type metadata accessor for CRLAssetData);
          sub_1004B84A4(v39, type metadata accessor for CRLAssetData);
          v53 = *(_QWORD *)(v0 + 208);
        }
        *(_QWORD *)(v0 + 328) = &type metadata for Bool;
        *(_BYTE *)(v0 + 304) = 1;
        sub_1004CB7BC(v0 + 304, v0 + 248, &qword_1013E0230);
        swift_beginAccess(v53, v0 + 280, 33, 0);
        sub_10083DAD8(v0 + 248, 0x12uLL);
        swift_endAccess(v0 + 280);
        sub_1004CB800(v0 + 304, &qword_1013E0230);
        goto LABEL_48;
      }
      if (v15 == 0x656D756C6F76 && v14 == 0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)(0x656D756C6F76, 0xE600000000000000, v15, v14, 0) & 1) != 0)
      {
        v106 = *(_UNKNOWN *****)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        if (*v106 == &off_1013E07D8)
          v107 = v106;
        else
          v107 = 0;
        swift_beginAccess((char *)v107 + qword_10147E7D8, v0 + 304, 32, 0);
        type metadata accessor for CRLMovieItemCRDTData(0);
        swift_retain(v106);
        v108 = sub_1004B804C(&qword_1013E0A90);
        CRRegister.wrappedValue.getter(v108);
        v109 = *(float *)(v0 + 248);
        v110 = *(unsigned __int8 *)(v0 + 252);
        swift_endAccess(v0 + 304);
        swift_release(v106);
        if (v110)
          v111 = 1.0;
        else
          v111 = v109;
        *(_QWORD *)(v0 + 328) = &type metadata for Float;
        *(float *)(v0 + 304) = v111;
        swift_beginAccess(v10, v0 + 280, 33, 0);
        sub_1004CB7BC(v0 + 304, v0 + 248, &qword_1013E0230);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
        v113 = *v10;
        *(_QWORD *)(v0 + 240) = *v10;
        *v10 = 0x8000000000000000;
        v67 = sub_100843260(44);
        v115 = *(_QWORD *)(v113 + 16);
        v116 = (v114 & 1) == 0;
        v117 = v115 + v116;
        if (__OFADD__(v115, v116))
          goto LABEL_130;
        v118 = v114;
        if (*(_QWORD *)(v113 + 24) >= v117)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v74 = *(_QWORD **)(v0 + 240);
            if ((v114 & 1) == 0)
              goto LABEL_99;
          }
          else
          {
            sub_10082C8D0();
            v74 = *(_QWORD **)(v0 + 240);
            if ((v118 & 1) == 0)
              goto LABEL_99;
          }
        }
        else
        {
          sub_100814B68(v117, isUniquelyReferenced_nonNull_native);
          v119 = sub_100843260(44);
          if ((v118 & 1) != (v120 & 1))
            goto LABEL_135;
          v67 = v119;
          v74 = *(_QWORD **)(v0 + 240);
          if ((v118 & 1) == 0)
          {
LABEL_99:
            v74[(v67 >> 6) + 8] |= 1 << v67;
            *(_QWORD *)(v74[6] + 8 * v67) = 44;
            sub_1004C4938(v0 + 248, v74[7] + 32 * v67, &qword_1013E0230);
            v135 = v74[2];
            v76 = __OFADD__(v135, 1);
            v77 = v135 + 1;
            if (v76)
              goto LABEL_131;
            goto LABEL_45;
          }
        }
      }
      else
      {
        if ((v15 != 0x617461446B73616DLL || v14 != 0xE800000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(0x617461446B73616DLL, 0xE800000000000000, v15, v14, 0) & 1) == 0)
        {
          v150 = sub_1004B804C((uint64_t *)&unk_1013E0180);
          v151 = swift_allocObject(v150, 72, 7);
          *(_OWORD *)(v151 + 16) = *(_OWORD *)v0;
          *(_QWORD *)(v151 + 56) = &type metadata for String;
          *(_QWORD *)(v151 + 64) = sub_1004CFC2C();
          *(_QWORD *)(v151 + 32) = v15;
          *(_QWORD *)(v151 + 40) = v14;
          swift_bridgeObjectRetain(v14);
          swift_setDeallocating(v151);
          v152 = sub_1004B804C(&qword_1013E0190);
          swift_arrayDestroy(v151 + 32, 1, v152);
          swift_deallocClassInstance(v151, 32, 7);
          goto LABEL_6;
        }
        v136 = *(_UNKNOWN *****)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        if (*v136 == &off_1013E07D8)
          v137 = v136;
        else
          v137 = 0;
        swift_beginAccess((char *)v137 + qword_10147E7D8, v0 + 304, 32, 0);
        type metadata accessor for CRLMovieItemCRDTData(0);
        swift_retain(v136);
        v138 = sub_1004B804C(&qword_1013DFA58);
        CRRegister.wrappedValue.getter(v138);
        v139 = *(_DWORD *)(v0 + 248);
        swift_endAccess(v0 + 304);
        swift_release(v136);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v0 + 328) = &type metadata for Float;
        *(_DWORD *)(v0 + 304) = v139;
        swift_beginAccess(v10, v0 + 280, 33, 0);
        sub_1004CB7BC(v0 + 304, v0 + 248, &qword_1013E0230);
        v140 = swift_isUniquelyReferenced_nonNull_native(*v10);
        v141 = *v10;
        *(_QWORD *)(v0 + 240) = *v10;
        *v10 = 0x8000000000000000;
        v67 = sub_100843260(45);
        v143 = *(_QWORD *)(v141 + 16);
        v144 = (v142 & 1) == 0;
        v145 = v143 + v144;
        if (__OFADD__(v143, v144))
          goto LABEL_132;
        v146 = v142;
        if (*(_QWORD *)(v141 + 24) >= v145)
        {
          if ((v140 & 1) != 0)
          {
            v74 = *(_QWORD **)(v0 + 240);
            if ((v142 & 1) == 0)
              goto LABEL_115;
          }
          else
          {
            sub_10082C8D0();
            v74 = *(_QWORD **)(v0 + 240);
            if ((v146 & 1) == 0)
              goto LABEL_115;
          }
        }
        else
        {
          sub_100814B68(v145, v140);
          v147 = sub_100843260(45);
          if ((v146 & 1) != (v148 & 1))
            goto LABEL_135;
          v67 = v147;
          v74 = *(_QWORD **)(v0 + 240);
          if ((v146 & 1) == 0)
          {
LABEL_115:
            v74[(v67 >> 6) + 8] |= 1 << v67;
            *(_QWORD *)(v74[6] + 8 * v67) = 45;
            sub_1004C4938(v0 + 248, v74[7] + 32 * v67, &qword_1013E0230);
            v149 = v74[2];
            v76 = __OFADD__(v149, 1);
            v77 = v149 + 1;
            if (v76)
              goto LABEL_133;
            goto LABEL_45;
          }
        }
      }
LABEL_4:
      sub_100582338(v0 + 248, v74[7] + 32 * v67, &qword_1013E0230);
LABEL_5:
      *v10 = v74;
      swift_bridgeObjectRelease();
      swift_endAccess(v0 + 280);
      sub_1004CB800(v0 + 304, &qword_1013E0230);
LABEL_6:
      v13 += 2;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    v17 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
    v18 = *(_QWORD *)(v0 + 232);
    v19 = *(void **)(v18 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
    if (v19)
    {
      v20 = *(id *)(v18 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
    }
    else
    {
      v21 = *(_QWORD **)(v18 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      v22 = *v21;
      v23 = swift_conformsToProtocol2(*v21, &protocol descriptor for CRLStyleableData);
      if (!v23)
        goto LABEL_134;
      *(_QWORD *)(v0 + 304) = v21;
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      sub_1004C4938(v0 + 336, v0 + 568, (uint64_t *)&unk_1013F1530);
      if (sub_1004F276C(v0 + 568) == 1)
      {
        *(_OWORD *)(v0 + 304) = 0u;
        *(_OWORD *)(v0 + 320) = 0u;
        goto LABEL_37;
      }
      v54 = *(_OWORD *)(v0 + 776);
      *(_OWORD *)(v0 + 992) = *(_OWORD *)(v0 + 760);
      *(_OWORD *)(v0 + 1008) = v54;
      *(_QWORD *)(v0 + 1024) = *(_QWORD *)(v0 + 792);
      v55 = *(_OWORD *)(v0 + 712);
      *(_OWORD *)(v0 + 928) = *(_OWORD *)(v0 + 696);
      *(_OWORD *)(v0 + 944) = v55;
      v56 = *(_OWORD *)(v0 + 744);
      *(_OWORD *)(v0 + 960) = *(_OWORD *)(v0 + 728);
      *(_OWORD *)(v0 + 976) = v56;
      v57 = *(_OWORD *)(v0 + 648);
      *(_OWORD *)(v0 + 864) = *(_OWORD *)(v0 + 632);
      *(_OWORD *)(v0 + 880) = v57;
      v58 = *(_OWORD *)(v0 + 680);
      *(_OWORD *)(v0 + 896) = *(_OWORD *)(v0 + 664);
      *(_OWORD *)(v0 + 912) = v58;
      v59 = *(_OWORD *)(v0 + 584);
      *(_OWORD *)(v0 + 800) = *(_OWORD *)(v0 + 568);
      *(_OWORD *)(v0 + 816) = v59;
      v60 = *(_OWORD *)(v0 + 616);
      *(_OWORD *)(v0 + 832) = *(_OWORD *)(v0 + 600);
      *(_OWORD *)(v0 + 848) = v60;
      v61 = sub_1008BEA4C(v0 + 800, 0);
      sub_1008D3994((_QWORD *)(v0 + 336), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004C35DC);
      v62 = *(void **)(v18 + v17);
      *(_QWORD *)(v18 + v17) = v61;
      v20 = v61;

      v19 = 0;
    }
    *(_QWORD *)(v0 + 328) = sub_1004B8930(0, (unint64_t *)&qword_1013F2E90, off_1012299E0);
    *(_QWORD *)(v0 + 304) = v20;
    v63 = v19;
LABEL_37:
    swift_beginAccess(v10, v0 + 280, 33, 0);
    sub_1004CB7BC(v0 + 304, v0 + 248, &qword_1013E0230);
    v64 = swift_isUniquelyReferenced_nonNull_native(*v10);
    v65 = *v10;
    *(_QWORD *)(v0 + 240) = *v10;
    *v10 = 0x8000000000000000;
    v67 = sub_100843260(15);
    v68 = *(_QWORD *)(v65 + 16);
    v69 = (v66 & 1) == 0;
    v70 = v68 + v69;
    if (__OFADD__(v68, v69))
    {
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      type metadata accessor for CRLChangeProperty(0);
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v153);
      __break(1u);
LABEL_136:
      sub_100757E04(&_mh_execute_header, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 446, "Snapshot should be a movie item.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Snapshot should be a movie item.");
      sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 446, (uint64_t)"Snapshot should be a movie item.", 32, 2u);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v154, v155);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
      __break(1u);
      JUMPOUT(0x100A371ECLL);
    }
    v71 = v66;
    if (*(_QWORD *)(v65 + 24) >= v70)
    {
      if ((v64 & 1) != 0)
      {
        v74 = *(_QWORD **)(v0 + 240);
        if ((v66 & 1) == 0)
          goto LABEL_44;
      }
      else
      {
        sub_10082C8D0();
        v74 = *(_QWORD **)(v0 + 240);
        if ((v71 & 1) == 0)
          goto LABEL_44;
      }
    }
    else
    {
      sub_100814B68(v70, v64);
      v72 = sub_100843260(15);
      if ((v71 & 1) != (v73 & 1))
        goto LABEL_135;
      v67 = v72;
      v74 = *(_QWORD **)(v0 + 240);
      if ((v71 & 1) == 0)
      {
LABEL_44:
        v74[(v67 >> 6) + 8] |= 1 << v67;
        *(_QWORD *)(v74[6] + 8 * v67) = 15;
        sub_1004C4938(v0 + 248, v74[7] + 32 * v67, &qword_1013E0230);
        v75 = v74[2];
        v76 = __OFADD__(v75, 1);
        v77 = v75 + 1;
        if (v76)
          goto LABEL_129;
LABEL_45:
        v74[2] = v77;
        goto LABEL_5;
      }
    }
    goto LABEL_4;
  }
}

id sub_100A373F0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v3)(__n128);
  __n128 v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGContext *v10;
  CGContext *v11;
  id v12;
  CGColor *v13;
  CGImage *Image;
  CGImage *v15;
  __CFData *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  id v22;
  CGRect v23;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v3 = *(uint64_t (**)(__n128))(*(_QWORD *)v2 + 288);
  v4 = swift_retain(v2);
  v5 = (void *)v3(v4);
  objc_msgSend(v5, "size", swift_release(v2).n128_f64[0]);
  v7 = v6;
  v9 = v8;

  if (v7 <= 0.0 || v9 <= 0.0)
  {
    sub_100757E04(&_mh_execute_header, (uint64_t)"generateEmptyPosterImage()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 512, "Movie's original size should be nonzero.", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateEmptyPosterImage()", 26, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 512, (uint64_t)"Movie's original size should be nonzero.", 40, 2u);
    return 0;
  }
  v10 = sub_10040FA64(3, v7, v9);
  if (!v10)
    return 0;
  v11 = v10;
  v12 = objc_msgSend((id)objc_opt_self(CRLColor), "blackColor");
  v13 = (CGColor *)objc_msgSend(v12, "CGColor");

  CGContextSetFillColorWithColor(v11, v13);
  v23.origin.x = sub_10005FDDC();
  CGContextFillRect(v11, v23);
  Image = CGBitmapContextCreateImage(v11);
  if (!Image)
  {

    return 0;
  }
  v15 = Image;
  v16 = sub_100435130(Image);
  v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper(0));
  sub_1004BE310(v17, v19);
  v22 = sub_1009BAF98(v17, v19, 0x6D49726574736F70, 0xEF676E702E656761, (uint64_t)v1);
  sub_1004BBBC8(v17, v19);

  return v22;
}

id sub_100A376C8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Class v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  id v16;
  void *v17;
  NSString v18;
  uint64_t v20;

  v0 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UTType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100A3104C();
  v8 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  v9 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_1004BB5A4((Class)((char *)v7 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v10, "crl_pathUTI", swift_bridgeObjectRelease().n128_f64[0]);

  if (v11)
  {
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v14 = v13;

    UTType.init(_:)(v12, v14, v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1004CB800((uint64_t)v2, (uint64_t *)&unk_1013E3620);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v17 = (void *)objc_opt_self(CRLAnimatedGIFController);
    UTType.identifier.getter(v17);
    v18 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v17, "canInitWithDataType:", v18, swift_bridgeObjectRelease().n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v16;
}

id sub_100A378C0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  Class v5;
  id v6;
  _UNKNOWN ****v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  CGImage *v11;
  CGImage *v12;
  __CFData *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  _BYTE v21[24];

  v1 = v0;
  v2 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100A3104C();
  v6 = objc_msgSend(objc_allocWithZone((Class)CRLAnimatedGIFController), "initWithData:delegate:", v5, 0);

  v7 = *(_UNKNOWN *****)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  if (*v7 == &off_1013E07D8)
    v8 = *(_QWORD *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  else
    v8 = 0;
  swift_beginAccess(v8 + qword_10147E7D8, v21, 32, 0);
  swift_retain(v7);
  v9 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v9);
  v10 = *(double *)&v4[*(int *)(v2 + 24)];
  swift_endAccess(v21);
  sub_1004B84A4((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v7);
  v11 = (CGImage *)objc_msgSend(v6, "imageForTime:", v10);
  if (v11)
  {
    v12 = v11;
    v13 = sub_100435130(v11);
    v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper(0));
    sub_1004BE310(v14, v16);
    v18 = sub_1009BAF98(v14, v16, 0x6D49726574736F70, 0xEF676E702E656761, (uint64_t)v1);

    sub_1004BBBC8(v14, v16);
  }
  else
  {

    return 0;
  }
  return v18;
}

id sub_100A37B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  Class v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _UNKNOWN ****v9;
  uint64_t v10;
  uint64_t v11;
  Float64 v12;
  id v13;
  _BYTE v14[32];

  v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((sub_100A376C8() & 1) != 0)
    return sub_100A378C0();
  v5 = sub_100A3104C();
  v6 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  v7 = *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_1004BB5A4((Class)((char *)v5 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v6);
  v8 = (void *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 56))(_swiftEmptyDictionarySingleton, v6, v7);

  sub_100A2F298((char)objc_msgSend(v8, "crl_containsTracksWithVisualCharacteristics"));
  v9 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v9 == &off_1013E07D8)
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v10 = 0;
  swift_beginAccess(v10 + qword_10147E7D8, v14, 32, 0);
  swift_retain(v9);
  v11 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v11);
  v12 = *(double *)&v3[*(int *)(v1 + 24)];
  swift_endAccess(v14);
  sub_1004B84A4((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release(v9);
  v13 = sub_100A37D04(v8, v12);

  return v13;
}

id sub_100A37D04(void *a1, Float64 a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  _UNKNOWN ****v10;
  uint64_t v11;
  char v12;
  double v13;
  CGImage *v14;
  void *value;
  CGImage *v16;
  void *v17;
  CMTimeValue v18;
  CMTimeEpoch epoch;
  uint64_t v20;
  CMTimeEpoch v21;
  CGImage *v22;
  id v23;
  __CFData *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _UNKNOWN ****v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v47;
  uint64_t v48;
  char v49[8];
  uint64_t v50;
  uint64_t v51;
  char v52[16];
  CMTime duration;
  CMTime start;
  char v55[72];
  CMTimeRange v56;

  v3 = v2;
  v6 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone((Class)CRLMoviePosterImageGenerator), "initWithAsset:", a1);
  v48 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v10 = *(_UNKNOWN *****)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  if (*v10 == &off_1013E07D8)
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  else
    v11 = 0;
  swift_beginAccess(v11 + qword_10147E7D8, &v56, 32, 0);
  swift_retain(v10);
  v47 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v47);
  v12 = v8[*(int *)(v6 + 36)];
  swift_endAccess(&v56);
  sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLMovieItemAssetData);
  *(_QWORD *)&v13 = swift_release(v10).n128_u64[0];
  if ((v12 & 1) != 0)
  {
    v56.start.value = 0;
    v14 = (CGImage *)objc_msgSend(v9, "copyAssetCoverArtMetadataWithError:", &v56, v13);
    value = (void *)v56.start.value;
    if (v14)
    {
      v16 = v14;
      v17 = v9;
LABEL_9:
      v23 = value;
      v24 = sub_100435130(v16);
      v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      v28 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper(0));
      sub_1004BE310(v25, v27);
      v45 = sub_1009BAF98(v25, v27, 0x6D49726574736F70, 0xEF676E702E656761, (uint64_t)v3);

      sub_1004BBBC8(v25, v27);
      return v45;
    }
  }
  else
  {
    CMTimeMakeWithSeconds(&v56.start, a2, 90000);
    v18 = v56.start.value;
    epoch = v56.start.epoch;
    v20 = *(_QWORD *)&v56.start.timescale;
    v17 = v9;
    v21 = kCMTimeZero.epoch;
    objc_msgSend(a1, "duration");
    start.value = kCMTimeZero.value;
    *(_QWORD *)&start.timescale = *(_QWORD *)&kCMTimeZero.timescale;
    start.epoch = v21;
    v9 = v17;
    duration = v56.start;
    CMTimeRangeMake(&v56, &start, &duration);
    start.value = v18;
    *(_QWORD *)&start.timescale = v20;
    start.epoch = epoch;
    CMTimeClampToRange(&duration, &start, &v56);
    start.value = 0;
    v56.start = duration;
    v22 = (CGImage *)objc_msgSend(v17, "copyCGImageAtTime:error:", &v56, &start);
    value = (void *)start.value;
    if (v22)
    {
      v16 = v22;
      goto LABEL_9;
    }
  }
  v29 = value;
  v30 = _convertNSErrorToError(_:)(value);

  swift_willThrow(v31);
  type metadata accessor for Code(0);
  v33 = v32;
  v56.start.value = -11832;
  swift_errorRetain(v30);
  v34 = sub_1004B7878(&qword_1013DED78, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100EF4634);
  v35 = static _ErrorCodeProtocol.~= infix(_:_:)(&v56, v30, v33, v34);
  swift_errorRelease(v30);
  if ((v35 & 1) != 0)
  {
    swift_errorRelease(v30);
    v36 = *(_UNKNOWN *****)&v3[v48];
    if (*v36 == &off_1013E07D8)
      v37 = *(_QWORD *)&v3[v48];
    else
      v37 = 0;
    swift_beginAccess(v37 + qword_10147E7D8, &v56, 32, 0);
    swift_retain(v36);
    CRRegister.wrappedValue.getter(v47);
    v38 = v8[*(int *)(v6 + 36)];
    swift_endAccess(&v56);
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLMovieItemAssetData);
    swift_release(v36);
    if ((v38 & 1) != 0)
    {

      return 0;
    }
    else
    {
      v45 = sub_100A373F0();

    }
  }
  else
  {
    v39 = sub_1004B804C((uint64_t *)&unk_1013E0180);
    inited = swift_initStackObject(v39, v55);
    *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
    swift_getErrorValue(v30, v52, v49);
    v41 = Error.localizedDescription.getter(v50, v51);
    v43 = v42;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1004CFC2C();
    *(_QWORD *)(inited + 32) = v41;
    *(_QWORD *)(inited + 40) = v43;
    sub_100757E04(&_mh_execute_header, (uint64_t)"makePosterImageData(avAsset:posterTime:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 578, "unexpected error occurred trying to generate poster image: %@", 61, 2u, inited);
    sub_1004F5394(inited, (uint64_t)"makePosterImageData(avAsset:posterTime:)", 40, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2u, 578, (uint64_t)"unexpected error occurred trying to generate poster image: %@", 61, 2u);

    swift_setDeallocating(inited);
    v44 = sub_1004B804C(&qword_1013E0190);
    swift_arrayDestroy(inited + 32, 1, v44);
    swift_errorRelease(v30);
    return 0;
  }
  return v45;
}

double *sub_100A38340()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_1004B804C((uint64_t *)&unk_1013E3620);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UTType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0;
  sub_100A2CAAC((uint64_t)v3);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1004CB800((uint64_t)v3, (uint64_t *)&unk_1013E3620);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v10 = sub_1004B804C((uint64_t *)&unk_1013DFC30);
    v9 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100EF5E40;
    *(_QWORD *)(v9 + 32) = UTType.identifier.getter(v9);
    *(_QWORD *)(v9 + 40) = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (double *)v9;
}

void *sub_100A386B0@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  char *v3;
  void *v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(__n128);
  char *v9;
  __n128 v10;
  void *v11;
  Swift::String v12;
  _UNKNOWN ****v13;
  _UNKNOWN ****v14;
  uint64_t v15;
  uint64_t v16;
  void *result;
  int v18;
  _BYTE __src[376];
  _BYTE v20[128];
  _BYTE v21[232];

  v3 = v1;
  v4 = (void *)sub_100A14240();
  if (v4)
  {
    sub_1008BF750(v4, (uint64_t)__src);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__src, v5);
  }
  else
  {
    sub_1004C39E8((uint64_t)__src);
  }
  sub_1004C4938((uint64_t)__src, (uint64_t)v21, (uint64_t *)&unk_1013F1530);
  v6 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v8 = *(uint64_t (**)(__n128))(*(_QWORD *)v7 + 384);
  v9 = v3;
  v10 = swift_retain(v7);
  v11 = (void *)v8(v10);

  swift_release(v7);
  if (v11)
  {
    sub_10080C2C4(v11, (uint64_t)__src);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__src, v12);
  }
  else
  {
    sub_1004C3A10(__src);
  }
  sub_1004C4938((uint64_t)__src, (uint64_t)v20, (uint64_t *)&unk_1013F02D0);
  v13 = *(_UNKNOWN *****)&v3[v6];
  if (*v13 == &off_1013E07D8)
    v14 = v13;
  else
    v14 = 0;
  swift_beginAccess((char *)v14 + qword_10147E7D8, __src, 32, 0);
  type metadata accessor for CRLMovieItemCRDTData(0);
  swift_retain(v13);
  v15 = sub_1004B804C(&qword_1013DFA58);
  CRRegister.wrappedValue.getter(v15);
  swift_endAccess(__src);

  swift_release(v13);
  swift_bridgeObjectRelease();
  sub_1004C4938((uint64_t)v21, (uint64_t)__src, (uint64_t *)&unk_1013F1530);
  sub_1004C4938((uint64_t)v20, (uint64_t)&__src[232], (uint64_t *)&unk_1013F02D0);
  *(_DWORD *)&__src[360] = v18;
  *(_QWORD *)&__src[368] = _swiftEmptyDictionarySingleton;
  a1[3] = (uint64_t)&type metadata for CRLMoviePresetData;
  a1[4] = sub_10089D0E4();
  v16 = swift_allocObject(&unk_101291948, 400, 7);
  *a1 = v16;
  result = memcpy((void *)(v16 + 16), __src, 0x178uLL);
  *(_QWORD *)(v16 + 392) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100A388BC()
{
  return 3;
}

void sub_100A38964()
{
  uint64_t v0;

}

id sub_100A38990()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMovieItem(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100A389FC()
{
  return type metadata accessor for CRLMovieItem(0);
}

uint64_t type metadata accessor for CRLMovieItem(uint64_t a1)
{
  uint64_t result;

  result = qword_101403110;
  if (!qword_101403110)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLMovieItem);
  return result;
}

uint64_t sub_100A38A40(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_100F234A0;
  v2[1] = &unk_100F234B8;
  v2[2] = &unk_100F234B8;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 1248);
}

uint64_t sub_100A38A94@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _UNKNOWN ****v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v3 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_UNKNOWN *****)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 == &off_1013E07D8)
    v7 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  else
    v7 = 0;
  swift_beginAccess(v7 + qword_10147E7D8, v12, 32, 0);
  swift_retain(v6);
  v8 = sub_1004B804C(&qword_10140FCF0);
  CRRegister.wrappedValue.getter(v8);
  swift_endAccess(v12);
  swift_release(v6);
  sub_1004B8460((uint64_t)v5, a1, type metadata accessor for CRLAssetData);
  sub_1004B84A4((uint64_t)v5, type metadata accessor for CRLMovieItemAssetData);
  v9 = type metadata accessor for CRLAssetData(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
}

id sub_100A38BC0(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  objc_super v6;

  v4 = objc_allocWithZone((Class)type metadata accessor for CRLMovieItem(0));
  v4[OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial] = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData] = 0;
  v4[OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return objc_msgSendSuper2(&v6, "init");
}

id sub_100A38C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  id v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  id v36;
  double v37;
  float v38;
  double v39;
  float v40;
  double v41;
  float v42;
  double v43;
  float v44;
  double v45;
  float v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  __n128 v65;
  id v66;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  _BYTE v89[24];
  _OWORD v90[8];
  _BYTE v91[232];
  _BYTE v92[232];
  _BYTE v93[136];

  v86 = a4;
  v87 = a3;
  v83 = a1;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  __chkstk_darwin(v9);
  v79 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLAssetData(0);
  __chkstk_darwin(v11);
  v78 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v13);
  v80 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v82 = (uint64_t)&v68 - v16;
  v17 = type metadata accessor for UUID(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v74 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1004B804C((uint64_t *)&unk_1013F02C0);
  __chkstk_darwin(v81);
  v77 = (uint64_t)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v85 = (uint64_t)&v68 - v22;
  v23 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v23);
  v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v68 - v27;
  v71 = type metadata accessor for CRLBoardItemParentAffinity(0);
  __chkstk_darwin(v71);
  v30 = (char *)&v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v31);
  v84 = (uint64_t)&v68 - v33;
  if (a5)
    v34 = a5;
  else
    v34 = objc_msgSend(objc_allocWithZone((Class)CRLCanvasInfoGeometry), "init");
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v28, a2, v17, v32);
  v76 = v18;
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v35(v28, 0, 1, v17);
  v75 = a5;
  v36 = v34;
  objc_msgSend(v36, "position");
  v38 = v37;
  v40 = v39;
  objc_msgSend(v36, "size");
  v42 = v41;
  v44 = v43;
  objc_msgSend(v36, "angle");
  v46 = v45;
  v70 = objc_msgSend(v36, "widthValid");
  v69 = objc_msgSend(v36, "heightValid");
  v47 = objc_msgSend(v36, "horizontalFlip");
  v48 = objc_msgSend(v36, "verticalFlip");
  v73 = a2;
  v49 = v48;

  v72 = v17;
  sub_1004CB7BC((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1013E1A50);
  v35(v30, 1, 1, v17);
  v50 = v71;
  *(_QWORD *)&v30[*(int *)(v71 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100582338((uint64_t)v25, (uint64_t)v30, (uint64_t *)&unk_1013E1A50);
  v51 = &v30[*(int *)(v50 + 20)];
  *(float *)v51 = v38;
  *((float *)v51 + 1) = v40;
  *((float *)v51 + 2) = v42;
  *((float *)v51 + 3) = v44;
  *((float *)v51 + 4) = v46;
  v51[20] = v70;
  v51[21] = v69;
  v51[22] = v47;
  v51[23] = v49;
  *((_QWORD *)v51 + 3) = _swiftEmptyDictionarySingleton;
  v52 = v84;
  sub_1004B84E0((uint64_t)v30, v84, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E1A50);
  sub_1004B8460(v52, (uint64_t)v30, type metadata accessor for CRLBoardItemParentAffinity);
  sub_1004C3A10(v90);
  v53 = sub_1004C4938((uint64_t)v90, (uint64_t)v93, (uint64_t *)&unk_1013F02D0);
  v54 = (uint64_t)v74;
  UUID.init()(v53);
  v55 = v85;
  sub_100D5EF54(v54, (uint64_t)v30, 0, 0, 0, 0xE000000000000000, (uint64_t)v93, v85);
  v56 = v78;
  sub_1004B8460(v87, v78, type metadata accessor for CRLAssetData);
  v57 = v79;
  sub_1004CB7BC(v86, v79, (uint64_t *)&unk_1013E9BE0);
  sub_1004C39E8((uint64_t)v91);
  sub_1004C4938((uint64_t)v91, (uint64_t)v92, (uint64_t *)&unk_1013F1530);
  v89[0] = 0;
  v58 = v82;
  sub_1004EC564(v56, v57, 1065353216, (uint64_t)v92, 0, 0, 0, 0, v82, a6, 0.0, 0.0, 15.0, 0, 0);
  v59 = v77;
  sub_1004CB7BC(v55, v77, (uint64_t *)&unk_1013F02C0);
  v60 = v80;
  sub_1004B8460(v58, v80, type metadata accessor for CRLMovieItemCRDTData);
  v61 = type metadata accessor for CRLMovieItemData(0);
  v62 = swift_allocObject(v61, *(unsigned int *)(v61 + 48), *(unsigned __int16 *)(v61 + 52));
  sub_1004B84E0(v60, v62 + qword_10147E7D8, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004C4938(v59, v62 + *(_QWORD *)(*(_QWORD *)v62 + 632), (uint64_t *)&unk_1013F02C0);
  v63 = sub_1005E1000(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  swift_beginAccess((char *)v63 + *(_QWORD *)(*v63 + 632), v89, 33, 0);
  v88 = 1;
  v64 = sub_1004B804C((uint64_t *)&unk_1013F5590);
  CRRegister.wrappedValue.setter(&v88, v64, v65);
  swift_endAccess(v89);
  swift_retain(v63);
  v66 = sub_100A38BC0(v83, (uint64_t)v63);

  swift_release(v63);
  sub_1004CB800(v86, (uint64_t *)&unk_1013E9BE0);
  sub_1004B84A4(v87, type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v73, v72);
  sub_1004B84A4(v58, type metadata accessor for CRLMovieItemCRDTData);
  sub_1004CB800(v85, (uint64_t *)&unk_1013F02C0);
  sub_1004B84A4(v84, type metadata accessor for CRLBoardItemParentAffinity);
  return v66;
}

uint64_t sub_100A3934C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[14])
  {
    swift_bridgeObjectRelease(v0[8]);
    swift_bridgeObjectRelease(v0[11]);
    swift_bridgeObjectRelease(v0[13]);
    swift_bridgeObjectRelease(v0[14]);
    v1 = v0[20];
    if (v1)
    {
      swift_bridgeObjectRelease(v1);
      swift_bridgeObjectRelease(v0[22]);
    }
    swift_bridgeObjectRelease(v0[25]);
    v2 = v0[27];
    if (v2)
    {
      swift_bridgeObjectRelease(v2);
      swift_bridgeObjectRelease(v0[29]);
    }
    swift_bridgeObjectRelease(v0[30]);
  }
  if (v0[41])
  {
    swift_bridgeObjectRelease(v0[35]);
    swift_bridgeObjectRelease(v0[38]);
    swift_bridgeObjectRelease(v0[40]);
    swift_bridgeObjectRelease(v0[41]);
    swift_bridgeObjectRelease(v0[45]);
    swift_bridgeObjectRelease(v0[46]);
  }
  swift_bridgeObjectRelease(v0[48]);
  swift_bridgeObjectRelease(v0[49]);
  return swift_deallocObject(v0, 400, 7);
}

uint64_t sub_100A39410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B804C((uint64_t *)&unk_1013E9BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A39458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRLAssetData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CRLItemProviderUtils()
{
  return objc_opt_self(_TtC8Freeform20CRLItemProviderUtils);
}

unint64_t sub_100A394BC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000003ELL;
  else
    return 0xD00000000000001CLL;
}

uint64_t sub_100A39504()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for CRLBoardItemInsertingCancellable()
{
  return objc_opt_self(_TtC8Freeform32CRLBoardItemInsertingCancellable);
}

id sub_100A39558(void *a1)
{
  return objc_msgSend(a1, "cancel");
}

uint64_t sub_100A39564(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  void *v10;
  Class isa;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __objc2_prot *v16;

  v16 = &OBJC_PROTOCOL___CRLBoardItemInsertionEditor;
  result = swift_dynamicCastObjCProtocolConditional(a1, 1, &v16);
  if (result)
  {
    v10 = (void *)result;
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain(a1);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v12 = objc_msgSend(v10, "canHandleInsertionOfBoardItems:insertionContext:", isa, a4);

    if (v12)
    {
      v13 = (uint64_t *)(a5 + 16);
      swift_beginAccess(v13, &v15, 1, 0);
      v14 = *v13;
      *v13 = (uint64_t)v10;
      swift_unknownObjectRetain(a1);
      swift_unknownObjectRelease(v14);
      *a2 = 1;
    }
    return swift_unknownObjectRelease(a1);
  }
  return result;
}

uint64_t sub_100A39658()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for CRLBoardItemInsertingHelper()
{
  return objc_opt_self(_TtC8Freeform27CRLBoardItemInsertingHelper);
}

uint64_t storeEnumTagSinglePayload for CRLBoardItemInsertingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100A396E8 + 4 * byte_100F23585[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100A3971C + 4 * asc_100F23580[v4]))();
}

uint64_t sub_100A3971C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A39724(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100A3972CLL);
  return result;
}

uint64_t sub_100A39738(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100A39740);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100A39744(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100A3974C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemInsertingError()
{
  return &type metadata for CRLBoardItemInsertingError;
}

unint64_t sub_100A39770()
{
  unint64_t result;

  result = qword_1014033D0[0];
  if (!qword_1014033D0[0])
  {
    result = swift_getWitnessTable(&unk_100F236F4, &type metadata for CRLBoardItemInsertingError);
    atomic_store(result, qword_1014033D0);
  }
  return result;
}

uint64_t sub_100A397B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 208));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[3] = &unk_100F23778;
      result = swift_initClassMetadata2(a1, 0, 4, v5, a1 + 216);
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_100A39858(void *a1, uint64_t a2, int a3)
{
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  CKRecordID v19;
  Swift::String v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  v5 = v3;
  v22 = a3;
  v7 = swift_isaMask & *(_QWORD *)v3;
  v21 = *(_QWORD *)(v7 + 0xD0);
  v8 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(a1);
  v10 = (char *)&v21 - v9;
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(a1, "getBoardItemForUUID:", isa);

  if (!v12)
    goto LABEL_7;
  v13 = swift_dynamicCastClass(v12, *(_QWORD *)(v7 + 200));
  if (!v13)
  {

LABEL_7:
    sub_100757E04(&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetValue.swift", 90, 2, 30, "Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100518FC0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_100519194((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetValue.swift", 90, 2u, 30, (uint64_t)"Unable to retrieve board item", 29, 2u);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Freeform/CRLAssert.swift", 24, 2, 348, 0);
    __break(1u);
    return;
  }
  v14 = v13;
  v15 = v12;
  sub_100DBEE64(v14, (uint64_t)&off_10127C5E0);

  if (v4)
  {

  }
  else
  {
    v16 = *(_QWORD *)&v5[*(_QWORD *)((swift_isaMask & *(_QWORD *)v5) + 0xE8)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v5[*(_QWORD *)((swift_isaMask & *(_QWORD *)v5) + 0xE0)], v21);
    v23 = v14;
    v17 = v15;
    swift_setAtReferenceWritableKeyPath(&v23, v16, v10);

    v18 = v17;
    sub_100DB0D78(v14, (uint64_t)&off_10127C5E0, v22);

  }
}

void sub_100A39AE4()
{
  sub_100A39D10();
}

uint64_t sub_100A39B00()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  v1 = swift_isaMask & *(_QWORD *)v0;
  v2 = &v0[*(_QWORD *)(v1 + 0xD8)];
  v3 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 208) - 8) + 8))(&v0[*(_QWORD *)((swift_isaMask & *(_QWORD *)v0)
                                                                                                  + 0xE0)]);
  swift_release(*(_QWORD *)&v0[*(_QWORD *)((swift_isaMask & *(_QWORD *)v0) + 0xE8)]);
  return swift_bridgeObjectRelease(*(_QWORD *)&v0[*(_QWORD *)((swift_isaMask & *(_QWORD *)v0) + 0xF0) + 8]);
}

id sub_100A39BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for CRLCommandSetValue(0, *(_QWORD *)((swift_isaMask & *v4) + 0xC8), *(_QWORD *)((swift_isaMask & *v4) + 0xD0), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t sub_100A39BF8(char *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v2 = swift_isaMask & *(_QWORD *)a1;
  v3 = &a1[*(_QWORD *)(v2 + 0xD8)];
  v4 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v2 + 208) - 8) + 8))(&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1)
                                                                                                  + 0xE0)]);
  swift_release(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xE8)]);
  return swift_bridgeObjectRelease(*(_QWORD *)&a1[*(_QWORD *)((swift_isaMask & *(_QWORD *)a1) + 0xF0) + 8]);
}

uint64_t type metadata accessor for CRLCommandSetValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLCommandSetValue);
}

uint64_t sub_100A39CB4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100A39CEC();
  swift_bridgeObjectRetain(v1);
  return v0;
}

uint64_t sub_100A39CEC()
{
  _QWORD *v0;

  return *(_QWORD *)((char *)v0 + *(_QWORD *)((swift_isaMask & *v0) + 0xF0));
}

void sub_100A39D10()
{
  _swift_stdlib_reportUnimplementedInitializer("Freeform.CRLCommandSetValue", 27, "init()", 6, 0);
  __break(1u);
}

uint64_t *sub_100A39D3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[1];
    a1[1] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for UnknownStorage(0);
    v13 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v14 = swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12, v14);
    v15 = *(int *)(a3 + 28);
    v16 = (uint64_t *)((char *)v7 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = type metadata accessor for CRLProto_Data(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = *v17;
      v22 = v17[1];
      sub_1004BE310(*v17, v22);
      *v16 = v21;
      v16[1] = v22;
      ((void (*)(char *, char *, uint64_t))v13)((char *)v16 + *(int *)(v18 + 20), (char *)v17 + *(int *)(v18 + 20), v12);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  return v7;
}

uint64_t type metadata accessor for CRLProto_Data(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403558, (uint64_t)&nominal type descriptor for CRLProto_Data);
}

uint64_t sub_100A39EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UnknownStorage(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 20), v5);
  }
  return result;
}

uint64_t *sub_100A39F70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v6 = *a2;
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v13 = swift_bridgeObjectRetain(v7);
  v12(v9, v10, v11, v13);
  v14 = *(int *)(a3 + 28);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = type metadata accessor for CRLProto_Data(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = *v16;
    v21 = v16[1];
    sub_1004BE310(*v16, v21);
    *v15 = v20;
    v15[1] = v21;
    ((void (*)(char *, char *, uint64_t))v12)((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v11);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t *sub_100A3A098(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v6 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a2[1];
  a1[1] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  v14 = *(int *)(a3 + 28);
  v15 = (uint64_t *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = type metadata accessor for CRLProto_Data(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v10) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v10)
  {
    if (!v20)
    {
      v25 = *v16;
      v26 = v16[1];
      sub_1004BE310(*v16, v26);
      v27 = *v15;
      v28 = v15[1];
      *v15 = v25;
      v15[1] = v26;
      sub_1004BBBC8(v27, v28);
      v13((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v11);
      return a1;
    }
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v23 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  v21 = *v16;
  v22 = v16[1];
  sub_1004BE310(*v16, v22);
  *v15 = v21;
  v15[1] = v22;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v11);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

_OWORD *sub_100A3A23C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_100A3A340(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for CRLProto_Data(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v21 = *v13;
      v22 = v13[1];
      *(_OWORD *)v13 = *(_OWORD *)v14;
      sub_1004BBBC8(v21, v22);
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100A3A4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A3A4C8);
}

uint64_t sub_100A3A4C8(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_100A582A4(a1, a2, a3, (uint64_t *)&unk_1013E16F0);
}

uint64_t sub_100A3A4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A3A4E0);
}

char *sub_100A3A4E0(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100A58360(a1, a2, a3, a4, (uint64_t *)&unk_1013E16F0);
}

uint64_t type metadata accessor for CRLProto_ObjectMetadata(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_1014034B8, (uint64_t)&nominal type descriptor for CRLProto_ObjectMetadata);
}

void sub_100A3A500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100A61E6C(a1, a2, a3, (uint64_t)&value witness table for Builtin.BridgeObject + 64, (uint64_t)&value witness table for Builtin.BridgeObject + 64, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
}

uint64_t *sub_100A3A524(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1004BE310(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100A3A5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1004BBBC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_100A3A614(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = a2[1];
  sub_1004BE310(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *sub_100A3A68C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_1004BE310(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1004BBBC8(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_100A3A70C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100A3A768(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1004BBBC8(v6, v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100A3A7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A3A7E4);
}

uint64_t sub_100A3A7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100A3A86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A3A878);
}

char *sub_100A3A878(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A3A8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A53240(a1, a2, a3, (uint64_t)&unk_100F23868);
}

void sub_100A3A900(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void sub_100A3A910(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_100A620BC();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

void sub_100A3A940(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_100A620BC();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

uint64_t sub_100A3A978(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100A52570();
  return Enum.hash(into:)(a1, a2, v4);
}

void sub_100A3A9B4()
{
  qword_101480678 = (uint64_t)&off_101263AA8;
}

uint64_t sub_100A3A9C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A3ABC4(&qword_1013DD948, &qword_101480678, (uint64_t)sub_100A3A9B4, a1);
}

unint64_t sub_100A3A9E4@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_100A3A9FC()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

_QWORD *sub_100A3AA18@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 2uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_100A3AA34(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8))
    v2 = *v1 != 0;
  *a1 = v2;
}

Swift::Int sub_100A3AA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  _QWORD v7[10];
  char v8;

  v5 = *(_BYTE *)(v2 + 8);
  v7[9] = *(_QWORD *)v2;
  v8 = v5;
  Hasher.init(_seed:)(v7, 0);
  dispatch thunk of Hashable.hash(into:)(v7, a1, a2);
  return Hasher._finalize()();
}

uint64_t sub_100A3AABC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = sub_100A525B4();
  return Enum.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100A3AAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  _QWORD v8[10];
  char v9;

  v6 = *(_BYTE *)(v3 + 8);
  v8[9] = *(_QWORD *)v3;
  v9 = v6;
  Hasher.init(_seed:)(v8, a1);
  dispatch thunk of Hashable.hash(into:)(v8, a2, a3);
  return Hasher._finalize()();
}

BOOL sub_100A3AB58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8))
    v2 = *a1 != 0;
  v3 = *a2 != 0;
  if (!*((_BYTE *)a2 + 8))
    v3 = *a2;
  return v2 == v3;
}

void sub_100A3AB94()
{
  qword_101480680 = (uint64_t)&off_101264088;
}

uint64_t sub_100A3ABA8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A3ABC4(&qword_1013DD950, &qword_101480680, (uint64_t)sub_100A3AB94, a1);
}

uint64_t sub_100A3ABC4@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = *a2;
  *a4 = *a2;
  return swift_bridgeObjectRetain(v6);
}

uint64_t sub_100A3AC08(uint64_t a1)
{
  return sub_100A4538C(a1, qword_101480688, (uint64_t)"bytes", 5);
}

uint64_t sub_100A3AC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  uint64_t result;
  char v10;

  v7 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 1)
      dispatch thunk of Decoder.decodeSingularBytesField(value:)(v3, a2, a3);
    v7 = a2;
  }
  return result;
}

void sub_100A3AC8C()
{
  __asm { BR              X10 }
}

uint64_t sub_100A3ACD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0
    || (result = ((uint64_t (*)(void))dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:))(), !v2))
  {
    type metadata accessor for CRLProto_Data(0);
    return UnknownStorage.traverse<A>(visitor:)(v5, v4, v3);
  }
  return result;
}

uint64_t sub_100A3AD60@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_100EF78C0;
  return UnknownStorage.init()();
}

uint64_t sub_100A3AD88()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100A3ADB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3AC20(a1, a2, a3);
}

void sub_100A3ADCC()
{
  sub_100A3AC8C();
}

uint64_t sub_100A3ADE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403930, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F26688);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3AE38@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD958, (uint64_t)qword_101480688, (uint64_t)sub_100A3AC08, a1);
}

uint64_t sub_100A3AE54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3AE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3AEF0(uint64_t a1)
{
  return sub_100A4538C(a1, qword_1014806A0, (uint64_t)"seconds", 7);
}

uint64_t sub_100A3AF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t i;
  uint64_t result;
  char v10;

  v7 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 1)
      dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3, a2, a3);
    v7 = a2;
  }
  return result;
}

uint64_t sub_100A3AF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v4;
  uint64_t result;

  if (*v3 == 0.0
    || (result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(1, a2, a3, *v3), !v4))
  {
    type metadata accessor for CRLProto_Date(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A3B008@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100A3B028()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100A3B04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3AF08(a1, a2, a3);
}

uint64_t sub_100A3B060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3AF74(a1, a2, a3);
}

uint64_t sub_100A3B074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403948, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F26520);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3B0C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD960, (uint64_t)qword_1014806A0, (uint64_t)sub_100A3AEF0, a1);
}

uint64_t sub_100A3B0E0@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for _NameMap(0);
  v7 = sub_1004F2A1C(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

uint64_t sub_100A3B14C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1014038D8, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F26558);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3B18C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014038D8, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F26558);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3B1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014806B8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014806B8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "x";
  *(_QWORD *)(v9 + 8) = 1;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "y";
  *((_QWORD *)v13 + 1) = 1;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3B330()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100A3B35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3B5F8(a1, a2, a3);
}

uint64_t sub_100A3B370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3B688(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLProto_Point);
}

uint64_t sub_100A3B38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403950, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263B8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3B3DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD968, (uint64_t)qword_1014806B8, (uint64_t)sub_100A3B1E0, a1);
}

uint64_t sub_100A3B3F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3B438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3B488(float *a1, float *a2)
{
  return sub_100A51D74(a1, a2, type metadata accessor for CRLProto_Point) & 1;
}

uint64_t sub_100A3B4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014806D0);
  sub_1004F2A1C(v0, (uint64_t)qword_1014806D0);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "width";
  *(_QWORD *)(v9 + 8) = 5;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "height";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3B5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0)
        return result;
      if (result == 2)
        break;
      if (result == 1)
      {
        v9 = v3;
        goto LABEL_5;
      }
LABEL_6:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v9 = v3 + 4;
LABEL_5:
    dispatch thunk of Decoder.decodeSingularFloatField(value:)(v9, a2, a3);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100A3B688(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  float *v4;
  uint64_t v5;
  float v10;
  uint64_t result;

  if (*v4 == 0.0
    || (result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(1, a2, a3, *v4), !v5))
  {
    v10 = v4[1];
    if (v10 == 0.0
      || (result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(2, a2, a3, v10), !v5))
    {
      a4(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3B758@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100A3B778()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100A3B79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3B688(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for CRLProto_Size);
}

uint64_t sub_100A3B7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403958, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F26250);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3B808@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD970, (uint64_t)qword_1014806D0, (uint64_t)sub_100A3B4A8, a1);
}

uint64_t sub_100A3B824(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F6030, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F26288);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3B864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F6030, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F26288);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3B8B4(float *a1, float *a2)
{
  return sub_100A51D74(a1, a2, type metadata accessor for CRLProto_Size) & 1;
}

uint64_t sub_100A3B8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014806E8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014806E8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E30;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "x";
  *(_QWORD *)(v9 + 8) = 1;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "y";
  *(_QWORD *)(v13 + 8) = 1;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "width";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "height";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3BA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = v3;
          goto LABEL_5;
        case 2:
          v9 = v3 + 4;
          goto LABEL_5;
        case 3:
          v9 = v3 + 8;
          goto LABEL_5;
        case 4:
          v9 = v3 + 12;
LABEL_5:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)(v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3BB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float *v3;
  uint64_t v4;
  float v8;
  float v9;
  float v10;
  uint64_t result;

  if (*v3 == 0.0
    || (result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(1, a2, a3, *v3), !v4))
  {
    v8 = v3[1];
    if (v8 == 0.0
      || (result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(2, a2, a3, v8), !v4))
    {
      v9 = v3[2];
      if (v9 == 0.0
        || (result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(3, a2, a3, v9), !v4))
      {
        v10 = v3[3];
        if (v10 == 0.0
          || (result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(4, a2, a3, v10), !v4))
        {
          type metadata accessor for CRLProto_Rect(0);
          return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100A3BC7C@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100A3BC9C()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100A3BCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3BA94(a1, a2, a3);
}

uint64_t sub_100A3BCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3BB58(a1, a2, a3);
}

uint64_t sub_100A3BCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403960, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F260E8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3BD40@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD978, (uint64_t)qword_1014806E8, (uint64_t)sub_100A3B8D4, a1);
}

uint64_t sub_100A3BD5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F6028, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26120);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3BD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F6028, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26120);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3BDF0(uint64_t a1)
{
  return sub_100A4538C(a1, qword_101480700, (uint64_t)"elements", 8);
}

uint64_t sub_100A3BE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 1)
      {
        v9 = type metadata accessor for CRLProto_Path.Element(0);
        v10 = sub_1004B7878(&qword_101403858, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25E28);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v9, v10, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3BEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *v3;
  if (!*(_QWORD *)(*v3 + 16)
    || (v9 = type metadata accessor for CRLProto_Path.Element(0),
        v10 = sub_1004B7878(&qword_101403858, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25E28),
        result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v8, 1, v9, v10, a2, a3),
        !v4))
  {
    type metadata accessor for CRLProto_Path(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A3BFBC@<X0>(_QWORD *a1@<X8>)
{
  *a1 = _swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

uint64_t sub_100A3BFE4()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100A3C008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3BE08(a1, a2, a3);
}

uint64_t sub_100A3C01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3BEEC(a1, a2, a3);
}

uint64_t sub_100A3C030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403968, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25F80);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3C080@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD980, (uint64_t)qword_101480700, (uint64_t)sub_100A3BDF0, a1);
}

uint64_t sub_100A3C09C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013FB6E0, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25FB8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3C0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013FB6E0, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25FB8);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3C130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480718);
  sub_1004F2A1C(v0, (uint64_t)qword_101480718);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E30;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 0;
  *(_QWORD *)v9 = "moveTo";
  *(_QWORD *)(v9 + 8) = 6;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 1;
  *(_QWORD *)v13 = "lineTo";
  *(_QWORD *)(v13 + 8) = 6;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 2;
  *(_QWORD *)v15 = "curveTo";
  *((_QWORD *)v15 + 1) = 7;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 3;
  *(_QWORD *)v17 = "close";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3C2F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD988, (uint64_t)qword_101480718, (uint64_t)sub_100A3C130, a1);
}

void sub_100A3C30C()
{
  Swift::String v0;
  _QWORD v1[2];

  strcpy((char *)v1, "CRLProto.Path");
  HIWORD(v1[1]) = -4864;
  v0._countAndFlagsBits = 0x746E656D656C452ELL;
  v0._object = (void *)0xE800000000000000;
  String.append(_:)(v0);
  qword_101480730 = v1[0];
  *(_QWORD *)algn_101480738 = v1[1];
}

uint64_t sub_100A3C37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480740);
  sub_1004F2A1C(v0, (uint64_t)qword_101480740);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E30;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "type";
  *(_QWORD *)(v9 + 8) = 4;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "endPoint";
  *(_QWORD *)(v13 + 8) = 8;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "controlPoint1";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "controlPoint2";
  *((_QWORD *)v17 + 1) = 13;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3C540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  unint64_t v10;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = sub_100A52570();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v3, &type metadata for CRLProto_Path.ElementType, v10, a2, a3);
          break;
        case 2:
          v9 = v3 + 16;
          goto LABEL_5;
        case 3:
          v9 = v3 + 32;
          goto LABEL_5;
        case 4:
          v9 = v3 + 48;
LABEL_5:
          dispatch thunk of Decoder.decodeSingularBytesField(value:)(v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3C650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  char v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;

  if (!*v3
    || (v7 = *((_BYTE *)v3 + 8),
        v10 = *v3,
        v11 = v7,
        v8 = sub_100A52570(),
        result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v10, 1, &type metadata for CRLProto_Path.ElementType, v8, a2, a3), !v4))
  {
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_100A3C84C@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_OWORD *)(a1 + 16) = xmmword_100EF78C0;
  *(_OWORD *)(a1 + 32) = xmmword_100EF78C0;
  *(_OWORD *)(a1 + 48) = xmmword_100EF78C0;
  return UnknownStorage.init()();
}

uint64_t sub_100A3C884(uint64_t a1, uint64_t a2)
{
  return sub_100A3E41C(a1, a2, &qword_1013DD990, &qword_101480730, algn_101480738, (uint64_t)sub_100A3C30C);
}

uint64_t sub_100A3C8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3C540(a1, a2, a3);
}

uint64_t sub_100A3C8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3C650(a1, a2, a3);
}

uint64_t sub_100A3C8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403970, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25DF0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3C91C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD998, (uint64_t)qword_101480740, (uint64_t)sub_100A3C37C, a1);
}

uint64_t sub_100A3C938(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403858, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25E28);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3C978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403858, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25E28);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3C9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480758);
  sub_1004F2A1C(v0, (uint64_t)qword_101480758);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v27 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_100F1E480;
  v7 = v27 + v6;
  v8 = v27 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v27 + v6) = 1;
  *(_QWORD *)v8 = "strokePoints";
  *(_QWORD *)(v8 + 8) = 12;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "maskPath";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "randomSeed";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "creationDate";
  *((_QWORD *)v16 + 1) = 12;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "renderScaleX";
  *((_QWORD *)v18 + 1) = 12;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "renderScaleY";
  *((_QWORD *)v20 + 1) = 12;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "anchorPointForTexture";
  *((_QWORD *)v22 + 1) = 21;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "renderGroupID";
  *((_QWORD *)v24 + 1) = 13;
  v24[16] = 2;
  v11();
  v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + 8 * v4) = 9;
  *(_QWORD *)v25 = "shouldSolveMath";
  *(_QWORD *)(v25 + 8) = 15;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v27);
}

uint64_t sub_100A3CCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v11 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
          v12 = sub_1004B7878(&qword_101403820, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25B58);
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v5, v11, v12, a2, a3);
          break;
        case 2:
          sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_PKStrokePathData, type metadata accessor for CRLProto_Path, (unint64_t *)&qword_1013FB6E0, (uint64_t)&unk_100F25FB8);
          break;
        case 3:
          v13 = type metadata accessor for CRLProto_PKStrokePathData(0);
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v5 + *(int *)(v13 + 28), a2, a3);
          break;
        case 4:
          sub_100A46BA0(a1, v5, a2, a3, type metadata accessor for CRLProto_PKStrokePathData, type metadata accessor for CRLProto_Date, &qword_1014038D8, (uint64_t)&unk_100F26558);
          break;
        case 5:
          v14 = *(int *)(type metadata accessor for CRLProto_PKStrokePathData(0) + 36);
          goto LABEL_11;
        case 6:
          v14 = *(int *)(type metadata accessor for CRLProto_PKStrokePathData(0) + 40);
LABEL_11:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)(v5 + v14, a2, a3);
          break;
        case 7:
          sub_100A3CEFC(a1, v5, a2, a3);
          break;
        case 8:
          sub_100A3CF90(a1, v5, a2, a3);
          break;
        case 9:
          v15 = type metadata accessor for CRLProto_PKStrokePathData(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v5 + *(int *)(v15 + 52), a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3CEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a2 + *(int *)(type metadata accessor for CRLProto_PKStrokePathData(0) + 44);
  v7 = type metadata accessor for CRLProto_Point(0);
  v8 = sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v6, v7, v8, a3, a4);
}

uint64_t sub_100A3CF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a2 + *(int *)(type metadata accessor for CRLProto_PKStrokePathData(0) + 48);
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v6, v7, v8, a3, a4);
}

uint64_t sub_100A3D024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)v3;
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16)
    || (v9 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0),
        v10 = sub_1004B7878(&qword_101403820, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25B58), result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v8, 1, v9, v10, a2, a3), !v4))
  {
    result = sub_100A3D1F4(v3, a1, a2, a3);
    if (!v4)
    {
      sub_100A3D368(v3, a1, a2, a3);
      sub_100A3D3DC(v3, a1, a2, a3);
      sub_100A3D550(v3, a1, a2, a3);
      sub_100A3D5C4(v3, a1, a2, a3);
      sub_100A3D638(v3, a1, a2, a3);
      sub_100A3D7AC(v3, a1, a2, a3);
      sub_100A3D920(v3, a1, a2, a3);
      type metadata accessor for CRLProto_PKStrokePathData(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3D1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013FF2E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Path(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1013FF2E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013FF2E8);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Path);
  v15 = sub_1004B7878((unint64_t *)&qword_1013FB6E0, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25FB8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Path);
}

uint64_t sub_100A3D368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unsigned int *v8;

  result = type metadata accessor for CRLProto_PKStrokePathData(0);
  v8 = (unsigned int *)(a1 + *(int *)(result + 28));
  if ((v8[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 3, a3, a4);
  return result;
}

uint64_t sub_100A3D3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013FF2D8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_1013FF2D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013FF2D8);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Date);
  v15 = sub_1004B7878(&qword_1014038D8, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F26558);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Date);
}

uint64_t sub_100A3D550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for CRLProto_PKStrokePathData(0);
  v8 = a1 + *(int *)(result + 36);
  if ((*(_BYTE *)(v8 + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(5, a3, a4, *(float *)v8);
  return result;
}

uint64_t sub_100A3D5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for CRLProto_PKStrokePathData(0);
  v8 = a1 + *(int *)(result + 40);
  if ((*(_BYTE *)(v8 + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(6, a3, a4, *(float *)v8);
  return result;
}

uint64_t sub_100A3D638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Point(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 44), (uint64_t)v8, &qword_1013FA7B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013FA7B0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Point);
  v15 = sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 7, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Point);
}

uint64_t sub_100A3D7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 48), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 8, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A3D920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;

  result = type metadata accessor for CRLProto_PKStrokePathData(0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 52));
  if (v8 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 9, a3, a4);
  return result;
}

uint64_t sub_100A3D994@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;

  *a2 = _swiftEmptyArrayStorage;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + a1[6];
  v5 = type metadata accessor for CRLProto_Path(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1[8];
  v7 = (char *)a2 + a1[7];
  *(_DWORD *)v7 = 0;
  v7[4] = 1;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for CRLProto_Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1[10];
  v11 = (char *)a2 + a1[9];
  *(_DWORD *)v11 = 0;
  v11[4] = 1;
  v12 = (char *)a2 + v10;
  *(_DWORD *)v12 = 0;
  v12[4] = 1;
  v13 = (char *)a2 + a1[11];
  v14 = type metadata accessor for CRLProto_Point(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (char *)a2 + a1[12];
  v16 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *((_BYTE *)a2 + a1[13]) = 2;
  return result;
}

unint64_t sub_100A3DABC()
{
  return 0xD000000000000019;
}

uint64_t sub_100A3DAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3CCA4(a1, a2, a3);
}

uint64_t sub_100A3DAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3D024(a1, a2, a3);
}

uint64_t sub_100A3DB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403980, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25C88);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3DB50@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9A0, (uint64_t)qword_101480758, (uint64_t)sub_100A3C9CC, a1);
}

uint64_t sub_100A3DB6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013FF2E0, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25CC0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3DBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013FF2E0, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25CC0);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_100A3DC00()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x50656B6F7274532ELL;
  v0._object = (void *)0xEC000000746E696FLL;
  String.append(_:)(v0);
  qword_101480770 = 0xD000000000000019;
  *(_QWORD *)algn_101480778 = 0x8000000100FEDC00;
}

uint64_t sub_100A3DC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v26;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480780);
  sub_1004F2A1C(v0, (uint64_t)qword_101480780);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v26 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v26 + 16) = xmmword_100F21D60;
  v7 = v26 + v6;
  v8 = v26 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v26 + v6) = 1;
  *(_QWORD *)v8 = "altitude";
  *(_QWORD *)(v8 + 8) = 8;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v4) = 2;
  *(_QWORD *)v12 = "azimuth";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "force";
  *((_QWORD *)v14 + 1) = 5;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "opacity";
  *((_QWORD *)v16 + 1) = 7;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "size";
  *((_QWORD *)v18 + 1) = 4;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "timeOffset";
  *((_QWORD *)v20 + 1) = 10;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "radius2";
  *((_QWORD *)v22 + 1) = 7;
  v22[16] = 2;
  v11();
  v23 = (_QWORD *)(v7 + 7 * v4);
  v24 = (char *)v23 + *(int *)(v2 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "edgeWidth";
  *((_QWORD *)v24 + 1) = 9;
  v24[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v26);
}

uint64_t sub_100A3DF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v9 = v3;
          goto LABEL_13;
        case 2:
          v9 = v3 + 16;
          goto LABEL_13;
        case 3:
          v9 = v3 + 32;
          goto LABEL_13;
        case 4:
          v9 = v3 + 48;
          goto LABEL_13;
        case 5:
          v9 = v3 + 64;
          goto LABEL_13;
        case 6:
          v9 = v3 + 80;
          goto LABEL_13;
        case 7:
          v9 = v3 + 96;
          goto LABEL_13;
        case 8:
          v9 = v3 + 112;
LABEL_13:
          dispatch thunk of Decoder.decodeSingularBytesField(value:)(v9, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

void sub_100A3E01C()
{
  __asm { BR              X10 }
}

uint64_t sub_100A3E064(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0
    || (result = ((uint64_t (*)(void))dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:))(), !v3))
  {
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_100A3E3C8@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_100EF78C0;
  a1[1] = xmmword_100EF78C0;
  a1[2] = xmmword_100EF78C0;
  a1[3] = xmmword_100EF78C0;
  a1[4] = xmmword_100EF78C0;
  a1[5] = xmmword_100EF78C0;
  a1[6] = xmmword_100EF78C0;
  a1[7] = xmmword_100EF78C0;
  return UnknownStorage.init()();
}

uint64_t sub_100A3E3FC(uint64_t a1, uint64_t a2)
{
  return sub_100A3E41C(a1, a2, &qword_1013DD9A8, &qword_101480770, algn_101480778, (uint64_t)sub_100A3DC00);
}

uint64_t sub_100A3E41C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v8;

  if (*a3 != -1)
    swift_once(a3, a6);
  v8 = *a4;
  swift_bridgeObjectRetain(*a5);
  return v8;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100A3E478())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100A3E48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3DF10(a1, a2, a3);
}

void sub_100A3E4A0()
{
  sub_100A3E01C();
}

uint64_t sub_100A3E4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039A0, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25B20);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3E504@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9B0, (uint64_t)qword_101480780, (uint64_t)sub_100A3DC70, a1);
}

uint64_t sub_100A3E520(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403820, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25B58);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3E560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403820, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25B58);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3E5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480798);
  sub_1004F2A1C(v0, (uint64_t)qword_101480798);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF7D10;
  v8 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "type";
  *(_QWORD *)(v8 + 8) = 4;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = enum case for _NameMap.NameDescription.same(_:);
  v10 = type metadata accessor for _NameMap.NameDescription(0);
  v11 = *(void (**)(void))(*(_QWORD *)(v10 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6 + v4) = 2;
  *(_QWORD *)v12 = "insertionPointCursor";
  *(_QWORD *)(v12 + 8) = 20;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  v13 = (_QWORD *)(v7 + v6 + 2 * v4);
  v14 = (char *)v13 + *(int *)(v2 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "rangeSelectionHeadCursor";
  *((_QWORD *)v14 + 1) = 24;
  v14[16] = 2;
  v11();
  v15 = (_QWORD *)(v7 + v6 + 3 * v4);
  v16 = (char *)v15 + *(int *)(v2 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "rangeSelectionTailCursor";
  *((_QWORD *)v16 + 1) = 24;
  v16[16] = 2;
  v11();
  v17 = (_QWORD *)(v7 + v6 + 4 * v4);
  v18 = (char *)v17 + *(int *)(v2 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "eolAffinity";
  *((_QWORD *)v18 + 1) = 11;
  v18[16] = 2;
  v11();
  v19 = (_QWORD *)(v7 + v6 + 5 * v4);
  v20 = (char *)v19 + *(int *)(v2 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "isVisual";
  *((_QWORD *)v20 + 1) = 8;
  v20[16] = 2;
  v11();
  v21 = (_QWORD *)(v7 + v6 + 6 * v4);
  v22 = (char *)v21 + *(int *)(v2 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "insertionEdge";
  *((_QWORD *)v22 + 1) = 13;
  v22[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3E820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = sub_100A525B4();
          v13 = v11;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v5, &type metadata for CRLProto_TextSelection.TypeEnum, v12, a2, a3);
          goto LABEL_13;
        case 2:
          v13 = v11;
          sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_TextSelection, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          goto LABEL_13;
        case 3:
          v13 = v11;
          sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_TextSelection, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          goto LABEL_13;
        case 4:
          v13 = v11;
          sub_100A46BA0(a1, v5, a2, a3, type metadata accessor for CRLProto_TextSelection, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          goto LABEL_13;
        case 5:
          v14 = *(int *)(type metadata accessor for CRLProto_TextSelection(0) + 36);
          goto LABEL_12;
        case 6:
          v15 = type metadata accessor for CRLProto_TextSelection(0);
          v13 = v11;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v5 + *(int *)(v15 + 40), a2, a3);
          goto LABEL_13;
        case 7:
          v14 = *(int *)(type metadata accessor for CRLProto_TextSelection(0) + 44);
LABEL_12:
          v13 = v11;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v5 + v14, a2, a3);
LABEL_13:
          v11 = v13;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3E9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;

  if (!*(_QWORD *)v3
    || (v8 = *(_BYTE *)(v3 + 8),
        v11 = *(_QWORD *)v3,
        v12 = v8,
        v9 = sub_100A525B4(),
        result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(&v11, 1, &type metadata for CRLProto_TextSelection.TypeEnum, v9, a2, a3), !v4))
  {
    result = sub_100A3EB74(v3, a1, a2, a3);
    if (!v4)
    {
      sub_100A47E18(v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_TextSelection, 3);
      sub_100A3ECE8(v3, a1, a2, a3);
      sub_100A3EE5C(v3, a1, a2, a3);
      sub_100A3EED0(v3, a1, a2, a3);
      sub_100A3EF44(v3, a1, a2, a3);
      type metadata accessor for CRLProto_TextSelection(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3EB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_TextSelection(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A3ECE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_TextSelection(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 32), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A3EE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unsigned int *v8;

  result = type metadata accessor for CRLProto_TextSelection(0);
  v8 = (unsigned int *)(a1 + *(int *)(result + 36));
  if ((v8[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 5, a3, a4);
  return result;
}

uint64_t sub_100A3EED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;

  result = type metadata accessor for CRLProto_TextSelection(0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 40));
  if (v8 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 6, a3, a4);
  return result;
}

uint64_t sub_100A3EF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unsigned int *v8;

  result = type metadata accessor for CRLProto_TextSelection(0);
  v8 = (unsigned int *)(a1 + *(int *)(result + 44));
  if ((v8[1] & 1) == 0)
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 7, a3, a4);
  return result;
}

uint64_t sub_100A3EFB8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  UnknownStorage.init()(a1);
  v4 = a2 + a1[6];
  v5 = type metadata accessor for CRLProto_Data(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a2 + a1[7], 1, 1, v5);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(a2 + a1[8], 1, 1, v5);
  v8 = a1[10];
  v9 = a2 + a1[9];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  *(_BYTE *)(a2 + v8) = 2;
  v10 = a2 + a1[11];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

unint64_t sub_100A3F088()
{
  return 0xD000000000000016;
}

uint64_t sub_100A3F0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3E820(a1, a2, a3);
}

uint64_t sub_100A3F0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3E9F0(a1, a2, a3);
}

uint64_t sub_100A3F0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039A8, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F259B8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3F11C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9B8, (uint64_t)qword_101480798, (uint64_t)sub_100A3E5B4, a1);
}

uint64_t sub_100A3F138(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403800, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F259F0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3F178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403800, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F259F0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3F1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014807B0);
  sub_1004F2A1C(v0, (uint64_t)qword_1014807B0);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 0;
  *(_QWORD *)v9 = "insertionPoint";
  *(_QWORD *)(v9 + 8) = 14;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 1;
  *(_QWORD *)v13 = "range";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3F31C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9C0, (uint64_t)qword_1014807B0, (uint64_t)sub_100A3F1CC, a1);
}

uint64_t sub_100A3F338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014807C8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014807C8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5550;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "mostSpecificItemSelectionUUIDs";
  *(_QWORD *)(v9 + 8) = 30;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "isGroup";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "textSelection";
  *(_QWORD *)(v14 + 8) = 13;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3F4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v12 = v11;
        dispatch thunk of Decoder.decodeSingularBoolField(value:)(v5 + 8, a2, a3);
        goto LABEL_5;
      }
      if (result == 1)
      {
        v13 = type metadata accessor for CRLProto_Data(0);
        v14 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
        v12 = v11;
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v5, v13, v14, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v12 = v11;
    sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_PersistableSelectionPath, type metadata accessor for CRLProto_TextSelection, &qword_101403800, (uint64_t)&unk_100F259F0);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100A3F610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = *(_QWORD *)v3;
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16)
    || (v9 = type metadata accessor for CRLProto_Data(0),
        v10 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0),
        result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v8, 1, v9, v10, a2, a3),
        !v4))
  {
    if (v3[8] != 1
      || (result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(1, 2, a2, a3), !v4))
    {
      result = sub_100A3F730((uint64_t)v3, a1, a2, a3);
      if (!v4)
      {
        type metadata accessor for CRLProto_PersistableSelectionPath(0);
        return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
      }
    }
  }
  return result;
}

uint64_t sub_100A3F730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013E4F40);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_TextSelection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_1013E4F40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013E4F40);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_TextSelection);
  v15 = sub_1004B7878(&qword_101403800, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F259F0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_TextSelection);
}

uint64_t sub_100A3F8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a2 = _swiftEmptyArrayStorage;
  *(_BYTE *)(a2 + 8) = 0;
  UnknownStorage.init()(a1);
  v4 = a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for CRLProto_TextSelection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_100A3F908()
{
  return 0xD000000000000021;
}

uint64_t sub_100A3F924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3F4CC(a1, a2, a3);
}

uint64_t sub_100A3F938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3F610(a1, a2, a3);
}

uint64_t sub_100A3F94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039B8, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25828);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A3F99C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9C8, (uint64_t)qword_1014807C8, (uint64_t)sub_100A3F338, a1);
}

uint64_t sub_100A3F9B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E4F48, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25860);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3F9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E4F48, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25860);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A3FA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014807E0);
  sub_1004F2A1C(v0, (uint64_t)qword_1014807E0);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5550;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "presenceUuidData";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "timeStamp";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "persistableSelectionPathData";
  *(_QWORD *)(v14 + 8) = 28;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A3FBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_CollaboratorCursor, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
        case 2:
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v5, a2, a3);
          break;
        case 1:
          sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_CollaboratorCursor, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A3FCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_100A3FDC8((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3 != 0.0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2, a2, a3, *v3);
    sub_100A47E18((uint64_t)v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_CollaboratorCursor, 3);
    type metadata accessor for CRLProto_CollaboratorCursor(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A3FDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A3FF3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);

  *a2 = 0;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for CRLProto_Data(0);
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v7)((char *)a2 + *(int *)(a1 + 28), 1, 1, v5);
}

unint64_t sub_100A3FFCC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100A3FFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3FBE0(a1, a2, a3);
}

uint64_t sub_100A3FFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A3FCEC(a1, a2, a3);
}

uint64_t sub_100A40010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039C8, type metadata accessor for CRLProto_CollaboratorCursor, (uint64_t)&unk_100F256C0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A40060@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9D0, (uint64_t)qword_1014807E0, (uint64_t)sub_100A3FA4C, a1);
}

uint64_t sub_100A4007C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013F6CB8, type metadata accessor for CRLProto_CollaboratorCursor, (uint64_t)&unk_100F256F8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A400BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013F6CB8, type metadata accessor for CRLProto_CollaboratorCursor, (uint64_t)&unk_100F256F8);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A40110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014807F8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014807F8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "presenceUuidData";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "colorIndex";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A40260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v5, a2, a3);
      }
      else if (result == 1)
      {
        sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_CollaboratorCursorColor, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A40338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  result = sub_100A403E0((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    v9 = *v3;
    if ((_DWORD)v9)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(v9, 2, a2, a3);
    type metadata accessor for CRLProto_CollaboratorCursorColor(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A403E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100A40558()
{
  return 0xD000000000000020;
}

uint64_t sub_100A40574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A40260(a1, a2, a3);
}

uint64_t sub_100A40588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A40338(a1, a2, a3);
}

uint64_t sub_100A4059C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039D0, type metadata accessor for CRLProto_CollaboratorCursorColor, (uint64_t)&unk_100F25558);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A405EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9D8, (uint64_t)qword_1014807F8, (uint64_t)sub_100A40110, a1);
}

uint64_t sub_100A40608(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013FDEE0, type metadata accessor for CRLProto_CollaboratorCursorColor, (uint64_t)&unk_100F25590);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A40648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013FDEE0, type metadata accessor for CRLProto_CollaboratorCursorColor, (uint64_t)&unk_100F25590);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A4069C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480810);
  sub_1004F2A1C(v0, (uint64_t)qword_101480810);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5E30;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "ckUserIdentityData";
  *(_QWORD *)(v9 + 8) = 18;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "presenceUuidData";
  *(_QWORD *)(v13 + 8) = 16;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "timeStamp";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "isFollowable";
  *((_QWORD *)v17 + 1) = 12;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A4085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_RealTimeEnter, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_RealTimeEnter, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          goto LABEL_5;
        case 3:
          v12 = v11;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v5, a2, a3);
          goto LABEL_5;
        case 4:
          v13 = type metadata accessor for CRLProto_RealTimeEnter(0);
          v12 = v11;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v5 + *(int *)(v13 + 32), a2, a3);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A409B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_100A40AB4((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    sub_100A47E18((uint64_t)v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_RealTimeEnter, 2);
    if (*v3 != 0.0)
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3, a2, a3, *v3);
    sub_100A40C28((uint64_t)v3, a1, a2, a3);
    type metadata accessor for CRLProto_RealTimeEnter(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A40AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_RealTimeEnter(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A40C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v8;

  result = type metadata accessor for CRLProto_RealTimeEnter(0);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 32));
  if (v8 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 4, a3, a4);
  return result;
}

uint64_t sub_100A40C9C@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  *a2 = 0;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + a1[6];
  v5 = type metadata accessor for CRLProto_Data(0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v6)((char *)a2 + a1[7], 1, 1, v5);
  *((_BYTE *)a2 + a1[8]) = 2;
  return result;
}

unint64_t sub_100A40D30()
{
  return 0xD000000000000016;
}

uint64_t sub_100A40D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A4085C(a1, a2, a3);
}

uint64_t sub_100A40D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A409B8(a1, a2, a3);
}

uint64_t sub_100A40D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039D8, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F253F0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A40DC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9E0, (uint64_t)qword_101480810, (uint64_t)sub_100A4069C, a1);
}

uint64_t sub_100A40DE0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F1980, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F25428);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A40E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F1980, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F25428);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A40E74(uint64_t a1)
{
  return sub_100A4538C(a1, qword_101480828, (uint64_t)"presenceUuidData", 16);
}

unint64_t sub_100A40E90()
{
  return 0xD000000000000016;
}

uint64_t sub_100A40EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A41954(a1, a2, a3, type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t sub_100A40ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A419D4(a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t sub_100A40EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039E0, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F25288);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A40F3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9E8, (uint64_t)qword_101480828, (uint64_t)sub_100A40E74, a1);
}

uint64_t sub_100A40F58(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E1540, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F252C0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A40F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E1540, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F252C0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A40FE8(uint64_t a1, uint64_t a2)
{
  return sub_100A5190C(a1, a2, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_RealTimeLeave) & 1;
}

uint64_t sub_100A41008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480840);
  sub_1004F2A1C(v0, (uint64_t)qword_101480840);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100F21D60;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "persistenceType";
  *(_QWORD *)(v9 + 8) = 15;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "minRequiredVersion";
  *(_QWORD *)(v13 + 8) = 18;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "childObjectReferences";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "assetReferences";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "dataDirectoryEntries";
  *((_QWORD *)v19 + 1) = 20;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "objectOptions";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v12();
  v22 = (_QWORD *)(v8 + 6 * v4);
  v23 = (char *)v22 + *(int *)(v2 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "minRequiredVersionForGoodEnoughFidelity";
  *((_QWORD *)v23 + 1) = 39;
  v23[16] = 2;
  v12();
  v24 = (_QWORD *)(v8 + 7 * v4);
  v25 = (char *)v24 + *(int *)(v2 + 48);
  *v24 = 8;
  *(_QWORD *)v25 = "minRequiredVersionForFullFidelity";
  *((_QWORD *)v25 + 1) = 33;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A412B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v10 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3, a2, a3);
          goto LABEL_15;
        case 2:
          v11 = v3 + 8;
          goto LABEL_14;
        case 3:
          v12 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
          v13 = sub_1004B7878(&qword_101403750, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24FF0);
          v14 = v3 + 16;
          goto LABEL_10;
        case 4:
          v12 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
          v13 = sub_1004B7878(&qword_101403730, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24E88);
          v14 = v3 + 24;
          goto LABEL_10;
        case 5:
          v12 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
          v13 = sub_1004B7878(&qword_101403710, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24D20);
          v14 = v3 + 32;
LABEL_10:
          v10 = v9;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v14, v12, v13, a2, a3);
          goto LABEL_15;
        case 6:
          v10 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + 40, a2, a3);
          goto LABEL_15;
        case 7:
          v11 = v3 + 48;
          goto LABEL_14;
        case 8:
          v11 = v3 + 56;
LABEL_14:
          v10 = v9;
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(v11, a2, a3);
LABEL_15:
          v9 = v10;
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A41490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = v3;
  v9 = *(unsigned int *)v5;
  if (!(_DWORD)v9
    || (result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(v9, 1, a2, a3), !v4))
  {
    if (!*(_QWORD *)(v5[1] + 16)
      || (result = dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(), !v4))
    {
      v11 = v5[2];
      if (!*(_QWORD *)(v11 + 16)
        || (v12 = type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0),
            v13 = sub_1004B7878(&qword_101403750, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24FF0), result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v11, 3, v12, v13, a2, a3), !v4))
      {
        v14 = v5[3];
        if (!*(_QWORD *)(v14 + 16)
          || (v15 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0),
              v16 = sub_1004B7878(&qword_101403730, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24E88), result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v14, 4, v15, v16, a2, a3), !v4))
        {
          v17 = v5[4];
          if (!*(_QWORD *)(v17 + 16)
            || (v18 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0),
                v19 = sub_1004B7878(&qword_101403710, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24D20), result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v17, 5, v18, v19, a2, a3), !v4))
          {
            v20 = v5[5];
            if (!v20
              || (result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(v20, 6, a2, a3), !v4))
            {
              if (!*(_QWORD *)(v5[6] + 16)
                || (result = dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(), !v4))
              {
                if (!*(_QWORD *)(v5[7] + 16)
                  || (result = dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(), !v4))
                {
                  type metadata accessor for CRLProto_ObjectInfo(0);
                  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100A416D8@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 56) = _swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

unint64_t sub_100A41710()
{
  return 0xD000000000000013;
}

uint64_t sub_100A4172C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100A4176C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 48);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_100A417AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A412B0(a1, a2, a3);
}

uint64_t sub_100A417C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A41490(a1, a2, a3);
}

uint64_t sub_100A417D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039E8, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25120);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A41824@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DD9F0, (uint64_t)qword_101480840, (uint64_t)sub_100A41008, a1);
}

uint64_t sub_100A41840(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E1740, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25158);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A41880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E1740, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25158);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_100A418D4()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0xD000000000000015;
  v0._object = (void *)0x8000000100FEDF40;
  String.append(_:)(v0);
  qword_101480858 = 0xD000000000000013;
  unk_101480860 = 0x8000000100FEDEC0;
}

uint64_t sub_100A4193C(uint64_t a1)
{
  return sub_100A4538C(a1, qword_101480868, (uint64_t)"uuid", 4);
}

uint64_t sub_100A41954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v11;
  uint64_t i;
  uint64_t result;
  char v14;

  v7 = v4;
  v11 = a2;
  for (i = a3; ; i = a3)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()(v11, i);
    if (v5 || (v14 & 1) != 0)
      break;
    if (result == 1)
      sub_100A45490(a1, v7, a2, a3, a4);
    v11 = a2;
  }
  return result;
}

uint64_t sub_100A419D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, __n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = sub_100A45524(v4, a1, a2, a3, a4);
  if (!v5)
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  return result;
}

uint64_t sub_100A41A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  UnknownStorage.init()(a1);
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for CRLProto_Data(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t sub_100A41A78(uint64_t a1, uint64_t a2)
{
  return sub_100A3E41C(a1, a2, &qword_1013DD9F8, &qword_101480858, &qword_101480860, (uint64_t)sub_100A418D4);
}

uint64_t sub_100A41A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A41954(a1, a2, a3, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100A41AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A419D4(a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100A41AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039F0, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24FB8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A41B20@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA00, (uint64_t)qword_101480868, (uint64_t)sub_100A4193C, a1);
}

uint64_t sub_100A41B3C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403750, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24FF0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A41B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403750, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24FF0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A41BCC(uint64_t a1, uint64_t a2)
{
  return sub_100A5190C(a1, a2, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference) & 1;
}

void sub_100A41BEC()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x655274657373412ELL;
  v0._object = (void *)0xEF65636E65726566;
  String.append(_:)(v0);
  qword_101480880 = 0xD000000000000013;
  *(_QWORD *)algn_101480888 = 0x8000000100FEDEC0;
}

uint64_t sub_100A41C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480890);
  sub_1004F2A1C(v0, (uint64_t)qword_101480890);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "name";
  *(_QWORD *)(v9 + 8) = 4;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "assetUUID";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A41DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_ObjectInfo.AssetReference, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
      }
      else if (result == 1)
      {
        dispatch thunk of Decoder.decodeSingularStringField(value:)(v5, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A41E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = v3[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v4))
  {
    result = sub_100A41F48((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A41F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A420BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  a2[1] = 0xE000000000000000;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for CRLProto_Data(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t sub_100A42118(uint64_t a1, uint64_t a2)
{
  return sub_100A3E41C(a1, a2, &qword_1013DDA08, &qword_101480880, algn_101480888, (uint64_t)sub_100A41BEC);
}

uint64_t sub_100A42138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A41DB0(a1, a2, a3);
}

uint64_t sub_100A4214C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A41E88(a1, a2, a3);
}

uint64_t sub_100A42160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014039F8, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24E50);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A421B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA10, (uint64_t)qword_101480890, (uint64_t)sub_100A41C60, a1);
}

uint64_t sub_100A421CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403730, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24E88);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A4220C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403730, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24E88);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_100A42260()
{
  Swift::String v0;

  v0._object = (void *)0x8000000100FEDF70;
  v0._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v0);
  qword_1014808A8 = 0xD000000000000013;
  unk_1014808B0 = 0x8000000100FEDEC0;
}

uint64_t sub_100A422CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014808B8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014808B8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "name";
  *(_QWORD *)(v9 + 8) = 4;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "size";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A42420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + 16, a2, a3);
      }
      else if (result == 1)
      {
        dispatch thunk of Decoder.decodeSingularStringField(value:)(v3, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A424C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v8 = v3[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v4))
  {
    v11 = v3[2];
    if (!v11
      || (result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(v11, 2, a2, a3), !v4))
    {
      type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A42588@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100A425B0(uint64_t a1, uint64_t a2)
{
  return sub_100A3E41C(a1, a2, &qword_1013DDA18, &qword_1014808A8, &qword_1014808B0, (uint64_t)sub_100A42260);
}

uint64_t sub_100A425D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A42420(a1, a2, a3);
}

uint64_t sub_100A425E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A424C0(a1, a2, a3);
}

uint64_t sub_100A425F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A00, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24CE8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A42648@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA20, (uint64_t)qword_1014808B8, (uint64_t)sub_100A422CC, a1);
}

uint64_t sub_100A42664(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403710, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24D20);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A426A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403710, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24D20);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A426F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014808D0);
  sub_1004F2A1C(v0, (uint64_t)qword_1014808D0);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5550;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "rootObjectUUID";
  *(_QWORD *)(v9 + 8) = 14;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "minRequiredVersion";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "assetInfos";
  *(_QWORD *)(v14 + 8) = 10;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A4288C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v14 = v11;
        dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(v5, a2, a3);
        goto LABEL_5;
      }
      if (result == 1)
      {
        v14 = v11;
        sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_ObjectMetadata, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
        goto LABEL_5;
      }
LABEL_6:
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
    v12 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
    v13 = sub_1004B7878(&qword_1014036D8, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24A50);
    v14 = v11;
    dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v5 + 8, v12, v13, a2, a3);
LABEL_5:
    v11 = v14;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100A429D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_100A47E18((uint64_t)v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_ObjectMetadata, 1);
  if (!v4)
  {
    if (*(_QWORD *)(*v3 + 16))
      dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)();
    v9 = v3[1];
    if (*(_QWORD *)(v9 + 16))
    {
      v10 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
      v11 = sub_1004B7878(&qword_1014036D8, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24A50);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v9, 3, v10, v11, a2, a3);
    }
    type metadata accessor for CRLProto_ObjectMetadata(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A42AF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = _swiftEmptyArrayStorage;
  a2[1] = _swiftEmptyArrayStorage;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for CRLProto_Data(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_100A42B54()
{
  return 0xD000000000000017;
}

uint64_t sub_100A42B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A4288C(a1, a2, a3);
}

uint64_t sub_100A42B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A429D0(a1, a2, a3);
}

uint64_t sub_100A42B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A08, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24B80);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A42BE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA28, (uint64_t)qword_1014808D0, (uint64_t)sub_100A426F8, a1);
}

uint64_t sub_100A42C04(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013F5FB0, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24BB8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A42C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013F5FB0, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24BB8);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_100A42C98()
{
  Swift::String v0;

  v0._countAndFlagsBits = 0x6E4974657373412ELL;
  v0._object = (void *)0xEA00000000006F66;
  String.append(_:)(v0);
  qword_1014808E8 = 0xD000000000000017;
  unk_1014808F0 = 0x8000000100FEDF90;
}

uint64_t sub_100A42D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014808F8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014808F8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5550;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "assetUUID";
  *(_QWORD *)(v9 + 8) = 9;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "filename";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "size";
  *(_QWORD *)(v14 + 8) = 4;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A42E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v5 + 16, a2, a3);
          break;
        case 2:
          dispatch thunk of Decoder.decodeSingularStringField(value:)(v5, a2, a3);
          break;
        case 1:
          sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A42F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_100A47E18((uint64_t)v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, 1);
  if (!v4)
  {
    v9 = v3[1];
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v10)
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    v11 = v3[2];
    if (v11)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(v11, 3, a2, a3);
    type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A4308C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for CRLProto_Data(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t sub_100A430EC(uint64_t a1, uint64_t a2)
{
  return sub_100A3E41C(a1, a2, &qword_1013DDA30, &qword_1014808E8, &qword_1014808F0, (uint64_t)sub_100A42C98);
}

uint64_t sub_100A4310C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A42E98(a1, a2, a3);
}

uint64_t sub_100A43120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A42F9C(a1, a2, a3);
}

uint64_t sub_100A43134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A10, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24A18);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A43184@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA38, (uint64_t)qword_1014808F8, (uint64_t)sub_100A42D04, a1);
}

uint64_t sub_100A431A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1014036D8, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24A50);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A431E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1014036D8, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24A50);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A43234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480910);
  sub_1004F2A1C(v0, (uint64_t)qword_101480910);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "followerUuidData";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "hostUuidData";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A43384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_StartOrEndFollow, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
      }
      else if (result == 1)
      {
        sub_100A45490(a1, v5, a2, a3, type metadata accessor for CRLProto_StartOrEndFollow);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A43464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_100A45524(v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_StartOrEndFollow);
  if (!v4)
  {
    sub_100A434D8(v3, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A434D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A4364C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  UnknownStorage.init()(a1);
  v4 = a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for CRLProto_Data(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + *(int *)(a1 + 24), 1, 1, v5);
}

unint64_t sub_100A436D0()
{
  return 0xD000000000000019;
}

uint64_t sub_100A436EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A43384(a1, a2, a3);
}

uint64_t sub_100A43700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A43464(a1, a2, a3);
}

uint64_t sub_100A43714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A18, type metadata accessor for CRLProto_StartOrEndFollow, (uint64_t)&unk_100F248B0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A43764@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA40, (uint64_t)qword_101480910, (uint64_t)sub_100A43234, a1);
}

uint64_t sub_100A43780(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013F7C68, type metadata accessor for CRLProto_StartOrEndFollow, (uint64_t)&unk_100F248E8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A437C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013F7C68, type metadata accessor for CRLProto_StartOrEndFollow, (uint64_t)&unk_100F248E8);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A43814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480928);
  sub_1004F2A1C(v0, (uint64_t)qword_101480928);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100F05060;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "presenceUuidData";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "viewScale";
  *(_QWORD *)(v13 + 8) = 9;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "visibleRectOrigin";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "visibleRectSize";
  *((_QWORD *)v17 + 1) = 15;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "timestamp";
  *(_QWORD *)(v18 + 8) = 9;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A43A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_FollowViewportState, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
        case 2:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)(v5, a2, a3);
          break;
        case 3:
          sub_100A46BA0(a1, v5, a2, a3, type metadata accessor for CRLProto_FollowViewportState, type metadata accessor for CRLProto_Point, &qword_1013F6038, (uint64_t)&unk_100F263F0);
          break;
        case 4:
          sub_100A46C44(a1, v5, a2, a3, type metadata accessor for CRLProto_FollowViewportState, type metadata accessor for CRLProto_Size, &qword_1013F6030, (uint64_t)&unk_100F26288);
          break;
        case 5:
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v5 + 8, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A43B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  result = sub_100A47E18(v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_FollowViewportState, 1);
  if (!v4)
  {
    if (*(float *)v3 != 0.0)
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(2, a2, a3, *(float *)v3);
    sub_100A43CB8(v3, a1, a2, a3);
    sub_100A43E2C(v3, a1, a2, a3);
    v9 = *(_QWORD *)(v3 + 8);
    if (v9)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(v9, 5, a2, a3);
    type metadata accessor for CRLProto_FollowViewportState(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A43CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Point(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_FollowViewportState(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_1013FA7B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013FA7B0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Point);
  v15 = sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Point);
}

uint64_t sub_100A43E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013FA7B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Size(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_FollowViewportState(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 36), (uint64_t)v8, &qword_1013FA7B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013FA7B8);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Size);
  v15 = sub_1004B7878(&qword_1013F6030, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F26288);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Size);
}

uint64_t sub_100A43FA0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  UnknownStorage.init()(a1);
  v4 = a2 + a1[7];
  v5 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + a1[8];
  v7 = type metadata accessor for CRLProto_Point(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a2 + a1[9];
  v9 = type metadata accessor for CRLProto_Size(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
}

unint64_t sub_100A4405C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100A44078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A43A18(a1, a2, a3);
}

uint64_t sub_100A4408C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A43B94(a1, a2, a3);
}

uint64_t sub_100A440A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A20, type metadata accessor for CRLProto_FollowViewportState, (uint64_t)&unk_100F24748);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A440F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA48, (uint64_t)qword_101480928, (uint64_t)sub_100A43814, a1);
}

uint64_t sub_100A4410C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013FA7C0, type metadata accessor for CRLProto_FollowViewportState, (uint64_t)&unk_100F24780);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A4414C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013FA7C0, type metadata accessor for CRLProto_FollowViewportState, (uint64_t)&unk_100F24780);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A441A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480940);
  sub_1004F2A1C(v0, (uint64_t)qword_101480940);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "hostUuidData";
  *(_QWORD *)(v9 + 8) = 12;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "reason";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A442F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v5, a2, a3);
      }
      else if (result == 1)
      {
        sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_RefuseOrEndFollow, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A443C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_100A44470((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*v3, 2, a2, a3);
    type metadata accessor for CRLProto_RefuseOrEndFollow(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A44470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100A445E8()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_100A44604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A442F0(a1, a2, a3);
}

uint64_t sub_100A44618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A443C8(a1, a2, a3);
}

uint64_t sub_100A4462C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A30, type metadata accessor for CRLProto_RefuseOrEndFollow, (uint64_t)&unk_100F245E0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A4467C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA50, (uint64_t)qword_101480940, (uint64_t)sub_100A441A0, a1);
}

uint64_t sub_100A44698(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_101403688, type metadata accessor for CRLProto_RefuseOrEndFollow, (uint64_t)&unk_100F24618);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A446D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_101403688, type metadata accessor for CRLProto_RefuseOrEndFollow, (uint64_t)&unk_100F24618);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A4472C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480958);
  sub_1004F2A1C(v0, (uint64_t)qword_101480958);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EFD140;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "ownerUuidData";
  *(_QWORD *)(v9 + 8) = 13;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "manipulationState";
  *(_QWORD *)(v13 + 8) = 17;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "viewScale";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "unscaledContentOffset";
  *((_QWORD *)v17 + 1) = 21;
  v17[16] = 2;
  v12();
  v18 = (_QWORD *)(v8 + 4 * v4);
  v19 = (char *)v18 + *(int *)(v2 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "isAutoscrolling";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v12();
  v20 = (_QWORD *)(v8 + 5 * v4);
  v21 = (char *)v20 + *(int *)(v2 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "timestamp";
  *((_QWORD *)v21 + 1) = 9;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A44964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100A46C44(a1, v5, a2, a3, type metadata accessor for CRLProto_CopresenceViewportState, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
        case 2:
          v11 = v5;
          goto LABEL_5;
        case 3:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)(v5 + 8, a2, a3);
          break;
        case 4:
          sub_100A44AAC(a1, v5, a2, a3);
          break;
        case 5:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v5 + 12, a2, a3);
          break;
        case 6:
          v11 = v5 + 16;
LABEL_5:
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v11, a2, a3);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A44AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a2 + *(int *)(type metadata accessor for CRLProto_CopresenceViewportState(0) + 40);
  v7 = type metadata accessor for CRLProto_Point(0);
  v8 = sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v6, v7, v8, a3, a4);
}

uint64_t sub_100A44B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  float v9;
  uint64_t v10;

  result = sub_100A44CA0(v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_CopresenceViewportState, 1);
  if (!v4)
  {
    if (*(_QWORD *)v3)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(_QWORD *)v3, 2, a2, a3);
    v9 = *(float *)(v3 + 8);
    if (v9 != 0.0)
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(3, a2, a3, v9);
    sub_100A44E1C(v3, a1, a2, a3);
    if (*(_BYTE *)(v3 + 12) == 1)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(1, 5, a2, a3);
    v10 = *(_QWORD *)(v3 + 16);
    if (v10)
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(v10, 6, a2, a3);
    type metadata accessor for CRLProto_CopresenceViewportState(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A44CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, __n128), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a6;
  v20 = a3;
  v21 = a4;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLProto_Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a5(0, v13);
  sub_1004CB7BC(a1 + *(int *)(v16 + 36), (uint64_t)v10, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v10, (uint64_t)v15, type metadata accessor for CRLProto_Data);
  v18 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v15, v19, v11, v18, v20, v21);
  return sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A44E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Point(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_CopresenceViewportState(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 40), (uint64_t)v8, &qword_1013FA7B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013FA7B0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Point);
  v15 = sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Point);
}

uint64_t sub_100A44F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 12) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  UnknownStorage.init()(a1);
  v4 = a2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + *(int *)(a1 + 40);
  v7 = type metadata accessor for CRLProto_Point(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

unint64_t sub_100A45028()
{
  return 0xD000000000000020;
}

uint64_t sub_100A45044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100A45084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_100A450C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A44964(a1, a2, a3);
}

uint64_t sub_100A450D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A44B40(a1, a2, a3);
}

uint64_t sub_100A450EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A38, type metadata accessor for CRLProto_CopresenceViewportState, (uint64_t)&unk_100F24478);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A4513C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA58, (uint64_t)qword_101480958, (uint64_t)sub_100A4472C, a1);
}

uint64_t sub_100A45158(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403668, type metadata accessor for CRLProto_CopresenceViewportState, (uint64_t)&unk_100F244B0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A45198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403668, type metadata accessor for CRLProto_CopresenceViewportState, (uint64_t)&unk_100F244B0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A451EC(uint64_t a1)
{
  return sub_100A4538C(a1, qword_101480970, (uint64_t)"itemUuidData", 12);
}

unint64_t sub_100A45204()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100A45220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A41954(a1, a2, a3, type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100A4523C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A419D4(a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100A45258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A40, type metadata accessor for CRLProto_BoardItemIdentifier, (uint64_t)&unk_100F24310);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A452A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA60, (uint64_t)qword_101480970, (uint64_t)sub_100A451EC, a1);
}

uint64_t sub_100A452C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013E1538, type metadata accessor for CRLProto_BoardItemIdentifier, (uint64_t)&unk_100F24348);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A45304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013E1538, type metadata accessor for CRLProto_BoardItemIdentifier, (uint64_t)&unk_100F24348);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A45354(uint64_t a1, uint64_t a2)
{
  return sub_100A5190C(a1, a2, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_BoardItemIdentifier) & 1;
}

uint64_t sub_100A45374(uint64_t a1)
{
  return sub_100A4538C(a1, qword_101480988, (uint64_t)"boardIdentifierData", 19);
}

uint64_t sub_100A4538C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v7, a2);
  sub_1004F2A1C(v7, (uint64_t)a2);
  v8 = sub_1004B804C(&qword_101403938);
  v9 = sub_1004B804C(&qword_101403940);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v8, v13 + v11, v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EF5E40;
  v15 = v14 + v13 + *(int *)(v9 + 48);
  *(_QWORD *)(v14 + v13) = 1;
  *(_QWORD *)v15 = a3;
  *(_QWORD *)(v15 + 8) = a4;
  *(_BYTE *)(v15 + 16) = 2;
  v16 = enum case for _NameMap.NameDescription.same(_:);
  v17 = type metadata accessor for _NameMap.NameDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  return _NameMap.init(dictionaryLiteral:)(v14);
}

uint64_t sub_100A45490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a2 + *(int *)(a5(0) + 20);
  v8 = type metadata accessor for CRLProto_Data(0);
  v9 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v7, v8, v9, a3, a4);
}

uint64_t sub_100A45524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, __n128))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a4;
  v19 = a3;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CRLProto_Data(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a5(0, v12);
  sub_1004CB7BC(a1 + *(int *)(v15 + 20), (uint64_t)v9, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1004CB800((uint64_t)v9, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v9, (uint64_t)v14, type metadata accessor for CRLProto_Data);
  v17 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v14, 1, v10, v17, v19, v20);
  return sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100A456A0()
{
  return 0xD000000000000018;
}

uint64_t sub_100A456BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_100A456F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t sub_100A4572C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A41954(a1, a2, a3, type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100A45748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A419D4(a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100A45764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A48, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F241A8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A457B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA68, (uint64_t)qword_101480988, (uint64_t)sub_100A45374, a1);
}

uint64_t sub_100A457D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_101403630, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F241E0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A45810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403630, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F241E0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A45860(uint64_t a1, uint64_t a2)
{
  return sub_100A5190C(a1, a2, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_BoardIdentifier) & 1;
}

uint64_t sub_100A45880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014809A0);
  sub_1004F2A1C(v0, (uint64_t)qword_1014809A0);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "payloadTypeValue";
  *(_QWORD *)(v9 + 8) = 16;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "payload";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A459D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A45B44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for CRLProto_Data(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_100A45B9C()
{
  return 0xD000000000000023;
}

uint64_t sub_100A45BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A463B4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularInt64Field(value:), type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t sub_100A45BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A46494(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:), (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_100A459D0, (void (*)(_QWORD))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t sub_100A45C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A50, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F24040);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A45C58@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA70, (uint64_t)qword_1014809A0, (uint64_t)sub_100A45880, a1);
}

uint64_t sub_100A45C74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F8428, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F24078);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A45CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8428, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F24078);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A45D04(char *a1, _QWORD *a2)
{
  return sub_100A4ABDC(a1, a2, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord) & 1;
}

uint64_t sub_100A45D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014809B8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014809B8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "version";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "opaqueChangeRecordDatas";
  *((_QWORD *)v13 + 1) = 23;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A45E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;

  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        v9 = type metadata accessor for CRLProto_Data(0);
        v10 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3 + 8, v9, v10, a2, a3);
      }
      else if (result == 1)
      {
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A45F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (!*v3 || (result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*v3, 1, a2, a3), !v4))
  {
    v9 = v3[1];
    if (!*(_QWORD *)(v9 + 16)
      || (v10 = type metadata accessor for CRLProto_Data(0),
          v11 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0),
          result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v9, 2, v10, v11, a2, a3),
          !v4))
    {
      type metadata accessor for CRLProto_RealTimeMessage(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A46078@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = _swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

unint64_t sub_100A460A0()
{
  return 0xD000000000000018;
}

uint64_t sub_100A460BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100A460FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_100A4613C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A45E74(a1, a2, a3);
}

uint64_t sub_100A46150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A45F80(a1, a2, a3);
}

uint64_t sub_100A46164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A58, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23ED8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A461B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA78, (uint64_t)qword_1014809B8, (uint64_t)sub_100A45D24, a1);
}

uint64_t sub_100A461D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F8430, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23F10);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A46210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F8430, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23F10);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A46264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014809D0);
  sub_1004F2A1C(v0, (uint64_t)qword_1014809D0);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "version";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "encryptedCKRecordData";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A463B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t result;
  char v14;

  v9 = v5;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v6)
  {
    while ((v14 & 1) == 0)
    {
      if (result == 2)
      {
        sub_100A47A84(a1, v9, a2, a3, a5, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
      }
      else if (result == 1)
      {
        a4(v9, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A46494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, uint64_t), uint64_t (*a5)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a6)(_QWORD))
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;

  if (!*v6 || (result = a4(*v6, 1, a2, a3), !v7))
  {
    result = a5(v6, a1, a2, a3);
    if (!v7)
    {
      a6(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A46558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_EncryptedRealTimeMessage(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100A466CC()
{
  return 0xD000000000000021;
}

uint64_t sub_100A466E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A463B4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt64Field(value:), type metadata accessor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t sub_100A4670C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A46494(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:), (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_100A46558, (void (*)(_QWORD))type metadata accessor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t sub_100A46738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A60, type metadata accessor for CRLProto_EncryptedRealTimeMessage, (uint64_t)&unk_100F23D70);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A46788@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA80, (uint64_t)qword_1014809D0, (uint64_t)sub_100A46264, a1);
}

uint64_t sub_100A467A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1013E1F00, type metadata accessor for CRLProto_EncryptedRealTimeMessage, (uint64_t)&unk_100F23DA8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A467E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1013E1F00, type metadata accessor for CRLProto_EncryptedRealTimeMessage, (uint64_t)&unk_100F23DA8);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A46834(char *a1, _QWORD *a2)
{
  return sub_100A4ABDC(a1, a2, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_EncryptedRealTimeMessage) & 1;
}

uint64_t sub_100A46854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_1014809E8);
  sub_1004F2A1C(v0, (uint64_t)qword_1014809E8);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100F05060;
  v8 = v7 + v6;
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v9 = "chainID";
  *(_QWORD *)(v9 + 8) = 7;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + v4) = 2;
  *(_QWORD *)v13 = "index";
  *(_QWORD *)(v13 + 8) = 5;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  v14 = (_QWORD *)(v8 + 2 * v4);
  v15 = (char *)v14 + *(int *)(v2 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "lastIndex";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v12();
  v16 = (_QWORD *)(v8 + 3 * v4);
  v17 = (char *)v16 + *(int *)(v2 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "encrypted";
  *((_QWORD *)v17 + 1) = 9;
  v17[16] = 2;
  v12();
  v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)(v8 + 4 * v4) = 5;
  *(_QWORD *)v18 = "data";
  *(_QWORD *)(v18 + 8) = 4;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A46A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100A46BA0(a1, v5, a2, a3, type metadata accessor for CRLProto_ChunkedRealTimeMessage, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
        case 2:
          v11 = v5;
          goto LABEL_11;
        case 3:
          v11 = v5 + 4;
LABEL_11:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v11, a2, a3);
          break;
        case 4:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v5 + 8, a2, a3);
          break;
        case 5:
          sub_100A46C44(a1, v5, a2, a3, type metadata accessor for CRLProto_ChunkedRealTimeMessage, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
        default:
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A46BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2 + *(int *)(a5(0) + 32);
  v14 = a6(0);
  v15 = sub_1004B7878(a7, a6, a8);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v15, a3, a4);
}

uint64_t sub_100A46C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2 + *(int *)(a5(0) + 36);
  v14 = a6(0);
  v15 = sub_1004B7878(a7, a6, a8);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v15, a3, a4);
}

uint64_t sub_100A46CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_100A46E18((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    v9 = *v3;
    if ((_DWORD)v9)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(v9, 2, a2, a3);
    v10 = v3[1];
    if ((_DWORD)v10)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(v10, 3, a2, a3);
    if (*((_BYTE *)v3 + 8) == 1)
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(1, 4, a2, a3);
    sub_100A44CA0((uint64_t)v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_ChunkedRealTimeMessage, 5);
    type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A46E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 32), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A46F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)a2 = 0;
  UnknownStorage.init()(a1);
  v4 = a2 + *(int *)(a1 + 32);
  v5 = type metadata accessor for CRLProto_Data(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v7(v4, 1, 1, v5);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(a2 + *(int *)(a1 + 36), 1, 1, v5);
}

unint64_t sub_100A47020()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_100A4703C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100A4707C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_100A470BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A46A58(a1, a2, a3);
}

uint64_t sub_100A470D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A46CE8(a1, a2, a3);
}

uint64_t sub_100A470E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A68, type metadata accessor for CRLProto_ChunkedRealTimeMessage, (uint64_t)&unk_100F23C08);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A47134@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA88, (uint64_t)qword_1014809E8, (uint64_t)sub_100A46854, a1);
}

uint64_t sub_100A47150(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013F22D8, type metadata accessor for CRLProto_ChunkedRealTimeMessage, (uint64_t)&unk_100F23C40);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A47190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013F22D8, type metadata accessor for CRLProto_ChunkedRealTimeMessage, (uint64_t)&unk_100F23C40);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A471E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480A00);
  sub_1004F2A1C(v0, (uint64_t)qword_101480A00);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5A10;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "type";
  *(_QWORD *)(v9 + 8) = 4;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "data";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A47338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_RealTimeMessageContainer, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
      }
      else if (result == 1)
      {
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v5, a2, a3);
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A47410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  v8 = *v3;
  if (!(_DWORD)v8
    || (result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(v8, 1, a2, a3), !v4))
  {
    result = sub_100A474C0((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for CRLProto_RealTimeMessageContainer(0);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A474C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_Data(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  v15 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A47634@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = 0;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for CRLProto_Data(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_100A4768C()
{
  return 0xD000000000000021;
}

uint64_t sub_100A476A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A47338(a1, a2, a3);
}

uint64_t sub_100A476BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A47410(a1, a2, a3);
}

uint64_t sub_100A476D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A70, type metadata accessor for CRLProto_RealTimeMessageContainer, (uint64_t)&unk_100F23AA0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A47720@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA90, (uint64_t)qword_101480A00, (uint64_t)sub_100A471E4, a1);
}

uint64_t sub_100A4773C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878((unint64_t *)&qword_1014035B0, type metadata accessor for CRLProto_RealTimeMessageContainer, (uint64_t)&unk_100F23AD8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100A4777C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878((unint64_t *)&qword_1014035B0, type metadata accessor for CRLProto_RealTimeMessageContainer, (uint64_t)&unk_100F23AD8);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100A477D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  char *v13;
  uint64_t v14;

  v0 = type metadata accessor for _NameMap(0);
  sub_100501DE0(v0, qword_101480A18);
  sub_1004F2A1C(v0, (uint64_t)qword_101480A18);
  v1 = sub_1004B804C(&qword_101403938);
  v2 = sub_1004B804C(&qword_101403940);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(unsigned __int8 *)(v3 + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100EF5550;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v2 + 48);
  *v8 = 1;
  *(_QWORD *)v9 = "boardIdentifier";
  *(_QWORD *)(v9 + 8) = 15;
  *(_BYTE *)(v9 + 16) = 2;
  v10 = enum case for _NameMap.NameDescription.same(_:);
  v11 = type metadata accessor for _NameMap.NameDescription(0);
  v12 = *(void (**)(void))(*(_QWORD *)(v11 - 8) + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + v4) = 2;
  *(_QWORD *)v13 = "type";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v12();
  v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(_QWORD *)((char *)v8 + 2 * v4) = 3;
  *(_QWORD *)v14 = "data";
  *(_QWORD *)(v14 + 8) = 4;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100A47960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_100A47B28(a1, v5, a2, a3, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, type metadata accessor for CRLProto_Data, &qword_1014038F8, (uint64_t)&unk_100F266C0);
          break;
        case 2:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v5, a2, a3);
          break;
        case 1:
          sub_100A47A84(a1, v5, a2, a3, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, type metadata accessor for CRLProto_BoardIdentifier, &qword_101403630, (uint64_t)&unk_100F241E0);
          break;
      }
      result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100A47A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2 + *(int *)(a5(0) + 24);
  v14 = a6(0);
  v15 = sub_1004B7878(a7, a6, a8);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v15, a3, a4);
}

uint64_t sub_100A47B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2 + *(int *)(a5(0) + 28);
  v14 = a6(0);
  v15 = sub_1004B7878(a7, a6, a8);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v15, a3, a4);
}

uint64_t sub_100A47BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v9;

  result = sub_100A47CA4((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    v9 = *v3;
    if ((_DWORD)v9)
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(v9, 2, a2, a3);
    sub_100A47E18((uint64_t)v3, a1, a2, a3, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, 3);
    type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100A47CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = a4;
  v6 = sub_1004B804C(&qword_1013E4CB8);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  sub_1004CB7BC(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_1013E4CB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1004CB800((uint64_t)v8, &qword_1013E4CB8);
  sub_1004B84E0((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLProto_BoardIdentifier);
  v15 = sub_1004B7878(&qword_101403630, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F241E0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1, v9, v15, a3, v17);
  return sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100A47E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, __n128), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a6;
  v20 = a3;
  v21 = a4;
  v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CRLProto_Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a5(0, v13);
  sub_1004CB7BC(a1 + *(int *)(v16 + 28), (uint64_t)v10, (uint64_t *)&unk_1013E16F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E16F0);
  sub_1004B84E0((uint64_t)v10, (uint64_t)v15, type metadata accessor for CRLProto_Data);
  v18 = sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v15, v19, v11, v18, v20, v21);
  return sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100A47F94@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  *a2 = 0;
  UnknownStorage.init()(a1);
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for CRLProto_BoardIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + *(int *)(a1 + 28);
  v7 = type metadata accessor for CRLProto_Data(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

unint64_t sub_100A48020()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_100A4803C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100A4807C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_100A480BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A47960(a1, a2, a3);
}

uint64_t sub_100A480D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A47BCC(a1, a2, a3);
}

uint64_t sub_100A480E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_101403A78, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23938);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100A48134@<X0>(uint64_t a1@<X8>)
{
  return sub_100A3B0E0(&qword_1013DDA98, (uint64_t)qword_101480A18, (uint64_t)sub_100A477D0, a1);
}

uint64_t sub_100A48150(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B7878(&qword_1013E4CC0, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23970);
  return Message.debugDescription.getter(a1, v2);
}

Swift::Int sub_100A48190(uint64_t a1, uint64_t a2)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  dispatch thunk of Hashable.hash(into:)(v5, a1, a2);
  return Hasher._finalize()();
}

uint64_t sub_100A481E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1004B7878(&qword_1013E4CC0, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23970);
  return Message.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100A48234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  dispatch thunk of Hashable.hash(into:)(v6, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_100A48288()
{
  return sub_1004B7878(&qword_101403590, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23880);
}

uint64_t type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101404CA0, (uint64_t)&nominal type descriptor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
}

uint64_t sub_100A482C8()
{
  return sub_1004B7878(&qword_1013E4CC0, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F23970);
}

uint64_t sub_100A482F4()
{
  return sub_1004B7878(&qword_101403598, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F238A8);
}

uint64_t sub_100A48320()
{
  return sub_1004B7878(&qword_1014035A0, type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, (uint64_t)&unk_100F238E8);
}

uint64_t sub_100A4834C()
{
  return sub_1004B7878(&qword_1014035A8, type metadata accessor for CRLProto_RealTimeMessageContainer, (uint64_t)&unk_100F239E8);
}

uint64_t type metadata accessor for CRLProto_RealTimeMessageContainer(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404C08, (uint64_t)&nominal type descriptor for CRLProto_RealTimeMessageContainer);
}

uint64_t sub_100A4838C()
{
  return sub_1004B7878((unint64_t *)&qword_1014035B0, type metadata accessor for CRLProto_RealTimeMessageContainer, (uint64_t)&unk_100F23AD8);
}

uint64_t sub_100A483B8()
{
  return sub_1004B7878(&qword_1014035B8, type metadata accessor for CRLProto_RealTimeMessageContainer, (uint64_t)&unk_100F23A10);
}

uint64_t sub_100A483E4()
{
  return sub_1004B7878(&qword_1014035C0, type metadata accessor for CRLProto_RealTimeMessageContainer, (uint64_t)&unk_100F23A50);
}

uint64_t sub_100A48410()
{
  return sub_1004B7878(&qword_1014035C8, type metadata accessor for CRLProto_ChunkedRealTimeMessage, (uint64_t)&unk_100F23B50);
}

uint64_t type metadata accessor for CRLProto_ChunkedRealTimeMessage(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404B68, (uint64_t)&nominal type descriptor for CRLProto_ChunkedRealTimeMessage);
}

uint64_t sub_100A48450()
{
  return sub_1004B7878(&qword_1013F22D8, type metadata accessor for CRLProto_ChunkedRealTimeMessage, (uint64_t)&unk_100F23C40);
}

uint64_t sub_100A4847C()
{
  return sub_1004B7878(&qword_1014035D0, type metadata accessor for CRLProto_ChunkedRealTimeMessage, (uint64_t)&unk_100F23B78);
}

uint64_t sub_100A484A8()
{
  return sub_1004B7878(&qword_1014035D8, type metadata accessor for CRLProto_ChunkedRealTimeMessage, (uint64_t)&unk_100F23BB8);
}

uint64_t sub_100A484D4()
{
  return sub_1004B7878(&qword_1014035E0, type metadata accessor for CRLProto_EncryptedRealTimeMessage, (uint64_t)&unk_100F23CB8);
}

uint64_t type metadata accessor for CRLProto_EncryptedRealTimeMessage(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404AD0, (uint64_t)&nominal type descriptor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t sub_100A48514()
{
  return sub_1004B7878((unint64_t *)&qword_1013E1F00, type metadata accessor for CRLProto_EncryptedRealTimeMessage, (uint64_t)&unk_100F23DA8);
}

uint64_t sub_100A48540()
{
  return sub_1004B7878(&qword_1014035E8, type metadata accessor for CRLProto_EncryptedRealTimeMessage, (uint64_t)&unk_100F23CE0);
}

uint64_t sub_100A4856C()
{
  return sub_1004B7878(&qword_1014035F0, type metadata accessor for CRLProto_EncryptedRealTimeMessage, (uint64_t)&unk_100F23D20);
}

uint64_t sub_100A48598()
{
  return sub_1004B7878(&qword_1014035F8, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23E20);
}

uint64_t type metadata accessor for CRLProto_RealTimeMessage(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404A38, (uint64_t)&nominal type descriptor for CRLProto_RealTimeMessage);
}

uint64_t sub_100A485D8()
{
  return sub_1004B7878(&qword_1013F8430, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23F10);
}

uint64_t sub_100A48604()
{
  return sub_1004B7878(&qword_101403600, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23E48);
}

uint64_t sub_100A48630()
{
  return sub_1004B7878(&qword_101403608, type metadata accessor for CRLProto_RealTimeMessage, (uint64_t)&unk_100F23E88);
}

uint64_t sub_100A4865C()
{
  return sub_1004B7878(&qword_101403610, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F23F88);
}

uint64_t type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014049A0, (uint64_t)&nominal type descriptor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t sub_100A4869C()
{
  return sub_1004B7878(&qword_1013F8428, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F24078);
}

uint64_t sub_100A486C8()
{
  return sub_1004B7878(&qword_101403618, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F23FB0);
}

uint64_t sub_100A486F4()
{
  return sub_1004B7878(&qword_101403620, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord, (uint64_t)&unk_100F23FF0);
}

uint64_t sub_100A48720()
{
  return sub_1004B7878(&qword_101403628, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F240F0);
}

uint64_t type metadata accessor for CRLProto_BoardIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404910, (uint64_t)&nominal type descriptor for CRLProto_BoardIdentifier);
}

uint64_t sub_100A48760()
{
  return sub_1004B7878(&qword_101403630, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F241E0);
}

uint64_t sub_100A4878C()
{
  return sub_1004B7878(&qword_101403638, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F24118);
}

uint64_t sub_100A487B8()
{
  return sub_1004B7878(&qword_101403640, type metadata accessor for CRLProto_BoardIdentifier, (uint64_t)&unk_100F24158);
}

uint64_t sub_100A487E4()
{
  return sub_1004B7878(&qword_101403648, type metadata accessor for CRLProto_BoardItemIdentifier, (uint64_t)&unk_100F24258);
}

uint64_t type metadata accessor for CRLProto_BoardItemIdentifier(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404880, (uint64_t)&nominal type descriptor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100A48824()
{
  return sub_1004B7878((unint64_t *)&qword_1013E1538, type metadata accessor for CRLProto_BoardItemIdentifier, (uint64_t)&unk_100F24348);
}

uint64_t sub_100A48850()
{
  return sub_1004B7878(&qword_101403650, type metadata accessor for CRLProto_BoardItemIdentifier, (uint64_t)&unk_100F24280);
}

uint64_t sub_100A4887C()
{
  return sub_1004B7878(&qword_101403658, type metadata accessor for CRLProto_BoardItemIdentifier, (uint64_t)&unk_100F242C0);
}

uint64_t sub_100A488A8()
{
  return sub_1004B7878(&qword_101403660, type metadata accessor for CRLProto_CopresenceViewportState, (uint64_t)&unk_100F243C0);
}

uint64_t type metadata accessor for CRLProto_CopresenceViewportState(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014047D8, (uint64_t)&nominal type descriptor for CRLProto_CopresenceViewportState);
}

uint64_t sub_100A488E8()
{
  return sub_1004B7878(&qword_101403668, type metadata accessor for CRLProto_CopresenceViewportState, (uint64_t)&unk_100F244B0);
}

uint64_t sub_100A48914()
{
  return sub_1004B7878(&qword_101403670, type metadata accessor for CRLProto_CopresenceViewportState, (uint64_t)&unk_100F243E8);
}

uint64_t sub_100A48940()
{
  return sub_1004B7878(&qword_101403678, type metadata accessor for CRLProto_CopresenceViewportState, (uint64_t)&unk_100F24428);
}

uint64_t sub_100A4896C()
{
  return sub_1004B7878(&qword_101403680, type metadata accessor for CRLProto_RefuseOrEndFollow, (uint64_t)&unk_100F24528);
}

uint64_t type metadata accessor for CRLProto_RefuseOrEndFollow(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404740, (uint64_t)&nominal type descriptor for CRLProto_RefuseOrEndFollow);
}

uint64_t sub_100A489AC()
{
  return sub_1004B7878((unint64_t *)&qword_101403688, type metadata accessor for CRLProto_RefuseOrEndFollow, (uint64_t)&unk_100F24618);
}

uint64_t sub_100A489D8()
{
  return sub_1004B7878(&qword_101403690, type metadata accessor for CRLProto_RefuseOrEndFollow, (uint64_t)&unk_100F24550);
}

uint64_t sub_100A48A04()
{
  return sub_1004B7878(&qword_101403698, type metadata accessor for CRLProto_RefuseOrEndFollow, (uint64_t)&unk_100F24590);
}

uint64_t sub_100A48A30()
{
  return sub_1004B7878(&qword_1014036A0, type metadata accessor for CRLProto_FollowViewportState, (uint64_t)&unk_100F24690);
}

uint64_t type metadata accessor for CRLProto_FollowViewportState(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101404698, (uint64_t)&nominal type descriptor for CRLProto_FollowViewportState);
}

uint64_t sub_100A48A70()
{
  return sub_1004B7878((unint64_t *)&qword_1013FA7C0, type metadata accessor for CRLProto_FollowViewportState, (uint64_t)&unk_100F24780);
}

uint64_t sub_100A48A9C()
{
  return sub_1004B7878(&qword_1014036A8, type metadata accessor for CRLProto_FollowViewportState, (uint64_t)&unk_100F246B8);
}

uint64_t sub_100A48AC8()
{
  return sub_1004B7878(&qword_1014036B0, type metadata accessor for CRLProto_FollowViewportState, (uint64_t)&unk_100F246F8);
}

uint64_t sub_100A48AF4()
{
  return sub_1004B7878(&qword_1014036B8, type metadata accessor for CRLProto_StartOrEndFollow, (uint64_t)&unk_100F247F8);
}

uint64_t type metadata accessor for CRLProto_StartOrEndFollow(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404600, (uint64_t)&nominal type descriptor for CRLProto_StartOrEndFollow);
}

uint64_t sub_100A48B34()
{
  return sub_1004B7878((unint64_t *)&qword_1013F7C68, type metadata accessor for CRLProto_StartOrEndFollow, (uint64_t)&unk_100F248E8);
}

uint64_t sub_100A48B60()
{
  return sub_1004B7878(&qword_1014036C0, type metadata accessor for CRLProto_StartOrEndFollow, (uint64_t)&unk_100F24820);
}

uint64_t sub_100A48B8C()
{
  return sub_1004B7878(&qword_1014036C8, type metadata accessor for CRLProto_StartOrEndFollow, (uint64_t)&unk_100F24860);
}

uint64_t sub_100A48BB8()
{
  return sub_1004B7878(&qword_1014036D0, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24960);
}

uint64_t type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404D40, (uint64_t)&nominal type descriptor for CRLProto_ObjectMetadata.AssetInfo);
}

uint64_t sub_100A48BF8()
{
  return sub_1004B7878(&qword_1014036D8, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24A50);
}

uint64_t sub_100A48C24()
{
  return sub_1004B7878(&qword_1014036E0, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F24988);
}

uint64_t sub_100A48C50()
{
  return sub_1004B7878(&qword_1014036E8, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, (uint64_t)&unk_100F249C8);
}

uint64_t sub_100A48C7C()
{
  return sub_1004B7878(&qword_1014036F0, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24AC8);
}

uint64_t sub_100A48CA8()
{
  return sub_1004B7878((unint64_t *)&qword_1013F5FB0, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24BB8);
}

uint64_t sub_100A48CD4()
{
  return sub_1004B7878(&qword_1014036F8, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24AF0);
}

uint64_t sub_100A48D00()
{
  return sub_1004B7878(&qword_101403700, type metadata accessor for CRLProto_ObjectMetadata, (uint64_t)&unk_100F24B30);
}

uint64_t sub_100A48D2C()
{
  return sub_1004B7878(&qword_101403708, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24C30);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404568, (uint64_t)&nominal type descriptor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t sub_100A48D6C()
{
  return sub_1004B7878(&qword_101403710, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24D20);
}

uint64_t sub_100A48D98()
{
  return sub_1004B7878(&qword_101403718, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24C58);
}

uint64_t sub_100A48DC4()
{
  return sub_1004B7878(&qword_101403720, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry, (uint64_t)&unk_100F24C98);
}

uint64_t sub_100A48DF0()
{
  return sub_1004B7878(&qword_101403728, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24D98);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo.AssetReference(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014044D0, (uint64_t)&nominal type descriptor for CRLProto_ObjectInfo.AssetReference);
}

uint64_t sub_100A48E30()
{
  return sub_1004B7878(&qword_101403730, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24E88);
}

uint64_t sub_100A48E5C()
{
  return sub_1004B7878(&qword_101403738, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24DC0);
}

uint64_t sub_100A48E88()
{
  return sub_1004B7878(&qword_101403740, type metadata accessor for CRLProto_ObjectInfo.AssetReference, (uint64_t)&unk_100F24E00);
}

uint64_t sub_100A48EB4()
{
  return sub_1004B7878(&qword_101403748, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24F00);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404440, (uint64_t)&nominal type descriptor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100A48EF4()
{
  return sub_1004B7878(&qword_101403750, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24FF0);
}

uint64_t sub_100A48F20()
{
  return sub_1004B7878(&qword_101403758, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24F28);
}

uint64_t sub_100A48F4C()
{
  return sub_1004B7878(&qword_101403760, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference, (uint64_t)&unk_100F24F68);
}

uint64_t sub_100A48F78()
{
  return sub_1004B7878(&qword_101403768, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25068);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404390, (uint64_t)&nominal type descriptor for CRLProto_ObjectInfo);
}

uint64_t sub_100A48FB8()
{
  return sub_1004B7878(&qword_1013E1740, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25158);
}

uint64_t sub_100A48FE4()
{
  return sub_1004B7878(&qword_101403770, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F25090);
}

uint64_t sub_100A49010()
{
  return sub_1004B7878(&qword_101403778, type metadata accessor for CRLProto_ObjectInfo, (uint64_t)&unk_100F250D0);
}

uint64_t sub_100A4903C()
{
  return sub_1004B7878(&qword_101403780, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F251D0);
}

uint64_t type metadata accessor for CRLProto_RealTimeLeave(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404300, (uint64_t)&nominal type descriptor for CRLProto_RealTimeLeave);
}

uint64_t sub_100A4907C()
{
  return sub_1004B7878(&qword_1013E1540, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F252C0);
}

uint64_t sub_100A490A8()
{
  return sub_1004B7878(&qword_101403788, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F251F8);
}

uint64_t sub_100A490D4()
{
  return sub_1004B7878(&qword_101403790, type metadata accessor for CRLProto_RealTimeLeave, (uint64_t)&unk_100F25238);
}

uint64_t sub_100A49100()
{
  return sub_1004B7878(&qword_101403798, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F25338);
}

uint64_t type metadata accessor for CRLProto_RealTimeEnter(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404260, (uint64_t)&nominal type descriptor for CRLProto_RealTimeEnter);
}

uint64_t sub_100A49140()
{
  return sub_1004B7878(&qword_1013F1980, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F25428);
}

uint64_t sub_100A4916C()
{
  return sub_1004B7878(&qword_1014037A0, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F25360);
}

uint64_t sub_100A49198()
{
  return sub_1004B7878(&qword_1014037A8, type metadata accessor for CRLProto_RealTimeEnter, (uint64_t)&unk_100F253A0);
}

uint64_t sub_100A491C4()
{
  return sub_1004B7878(&qword_1014037B0, type metadata accessor for CRLProto_CollaboratorCursorColor, (uint64_t)&unk_100F254A0);
}

uint64_t type metadata accessor for CRLProto_CollaboratorCursorColor(uint64_t a1)
{
  return sub_1004BD408(a1, qword_1014041C8, (uint64_t)&nominal type descriptor for CRLProto_CollaboratorCursorColor);
}

uint64_t sub_100A49204()
{
  return sub_1004B7878((unint64_t *)&qword_1013FDEE0, type metadata accessor for CRLProto_CollaboratorCursorColor, (uint64_t)&unk_100F25590);
}

uint64_t sub_100A49230()
{
  return sub_1004B7878(&qword_1014037B8, type metadata accessor for CRLProto_CollaboratorCursorColor, (uint64_t)&unk_100F254C8);
}

uint64_t sub_100A4925C()
{
  return sub_1004B7878(&qword_1014037C0, type metadata accessor for CRLProto_CollaboratorCursorColor, (uint64_t)&unk_100F25508);
}

uint64_t sub_100A49288()
{
  return sub_1004B7878(&qword_1014037C8, type metadata accessor for CRLProto_CollaboratorCursor, (uint64_t)&unk_100F25608);
}

uint64_t type metadata accessor for CRLProto_CollaboratorCursor(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101404130, (uint64_t)&nominal type descriptor for CRLProto_CollaboratorCursor);
}

uint64_t sub_100A492C8()
{
  return sub_1004B7878((unint64_t *)&qword_1013F6CB8, type metadata accessor for CRLProto_CollaboratorCursor, (uint64_t)&unk_100F256F8);
}

uint64_t sub_100A492F4()
{
  return sub_1004B7878(&qword_1014037D0, type metadata accessor for CRLProto_CollaboratorCursor, (uint64_t)&unk_100F25630);
}

uint64_t sub_100A49320()
{
  return sub_1004B7878(&qword_1014037D8, type metadata accessor for CRLProto_CollaboratorCursor, (uint64_t)&unk_100F25670);
}

uint64_t sub_100A4934C()
{
  return sub_1004B7878(&qword_1014037E0, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25770);
}

uint64_t type metadata accessor for CRLProto_PersistableSelectionPath(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101404090, (uint64_t)&nominal type descriptor for CRLProto_PersistableSelectionPath);
}

uint64_t sub_100A4938C()
{
  return sub_1004B7878(&qword_1013E4F48, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25860);
}

uint64_t sub_100A493B8()
{
  return sub_1004B7878(&qword_1014037E8, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F25798);
}

uint64_t sub_100A493E4()
{
  return sub_1004B7878(&qword_1014037F0, type metadata accessor for CRLProto_PersistableSelectionPath, (uint64_t)&unk_100F257D8);
}

uint64_t sub_100A49410()
{
  return sub_1004B7878(&qword_1014037F8, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F25900);
}

uint64_t type metadata accessor for CRLProto_TextSelection(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403FE8, (uint64_t)&nominal type descriptor for CRLProto_TextSelection);
}

uint64_t sub_100A49450()
{
  return sub_1004B7878(&qword_101403800, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F259F0);
}

uint64_t sub_100A4947C()
{
  return sub_1004B7878(&qword_101403808, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F25928);
}

uint64_t sub_100A494A8()
{
  return sub_1004B7878(&qword_101403810, type metadata accessor for CRLProto_TextSelection, (uint64_t)&unk_100F25968);
}

uint64_t sub_100A494D4()
{
  return sub_1004B7878(&qword_101403818, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25A68);
}

uint64_t type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403F38, (uint64_t)&nominal type descriptor for CRLProto_PKStrokePathData.StrokePoint);
}

uint64_t sub_100A49514()
{
  return sub_1004B7878(&qword_101403820, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25B58);
}

uint64_t sub_100A49540()
{
  return sub_1004B7878(&qword_101403828, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25A90);
}

uint64_t sub_100A4956C()
{
  return sub_1004B7878(&qword_101403830, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, (uint64_t)&unk_100F25AD0);
}

uint64_t sub_100A49598()
{
  return sub_1004B7878(&qword_101403838, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25BD0);
}

uint64_t type metadata accessor for CRLProto_PKStrokePathData(uint64_t a1)
{
  return sub_1004BD408(a1, (uint64_t *)&unk_101403E70, (uint64_t)&nominal type descriptor for CRLProto_PKStrokePathData);
}

uint64_t sub_100A495D8()
{
  return sub_1004B7878(&qword_1013FF2E0, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25CC0);
}

uint64_t sub_100A49604()
{
  return sub_1004B7878(&qword_101403840, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25BF8);
}

uint64_t sub_100A49630()
{
  return sub_1004B7878(&qword_101403848, type metadata accessor for CRLProto_PKStrokePathData, (uint64_t)&unk_100F25C38);
}

uint64_t sub_100A4965C()
{
  return sub_1004B7878(&qword_101403850, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25D38);
}

uint64_t type metadata accessor for CRLProto_Path.Element(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403DD0, (uint64_t)&nominal type descriptor for CRLProto_Path.Element);
}

uint64_t sub_100A4969C()
{
  return sub_1004B7878(&qword_101403858, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25E28);
}

uint64_t sub_100A496C8()
{
  return sub_1004B7878(&qword_101403860, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25D60);
}

uint64_t sub_100A496F4()
{
  return sub_1004B7878(&qword_101403868, type metadata accessor for CRLProto_Path.Element, (uint64_t)&unk_100F25DA0);
}

uint64_t sub_100A49720()
{
  return sub_1004B7878(&qword_101403870, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25EC8);
}

uint64_t type metadata accessor for CRLProto_Path(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403D40, (uint64_t)&nominal type descriptor for CRLProto_Path);
}

uint64_t sub_100A49760()
{
  return sub_1004B7878((unint64_t *)&qword_1013FB6E0, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25FB8);
}

uint64_t sub_100A4978C()
{
  return sub_1004B7878(&qword_101403878, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25EF0);
}

uint64_t sub_100A497B8()
{
  return sub_1004B7878(&qword_101403880, type metadata accessor for CRLProto_Path, (uint64_t)&unk_100F25F30);
}

uint64_t sub_100A497E4()
{
  return sub_1004B7878(&qword_101403888, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26030);
}

uint64_t type metadata accessor for CRLProto_Rect(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403CA0, (uint64_t)&nominal type descriptor for CRLProto_Rect);
}

uint64_t sub_100A49824()
{
  return sub_1004B7878(&qword_1013F6028, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26120);
}

uint64_t sub_100A49850()
{
  return sub_1004B7878(&qword_101403890, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26058);
}

uint64_t sub_100A4987C()
{
  return sub_1004B7878(&qword_101403898, type metadata accessor for CRLProto_Rect, (uint64_t)&unk_100F26098);
}

uint64_t sub_100A498A8()
{
  return sub_1004B7878(&qword_1014038A0, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F26198);
}

uint64_t type metadata accessor for CRLProto_Size(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403C08, (uint64_t)&nominal type descriptor for CRLProto_Size);
}

uint64_t sub_100A498E8()
{
  return sub_1004B7878(&qword_1013F6030, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F26288);
}

uint64_t sub_100A49914()
{
  return sub_1004B7878(&qword_1014038A8, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F261C0);
}

uint64_t sub_100A49940()
{
  return sub_1004B7878(&qword_1014038B0, type metadata accessor for CRLProto_Size, (uint64_t)&unk_100F26200);
}

uint64_t sub_100A4996C()
{
  return sub_1004B7878(&qword_1014038B8, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F26300);
}

uint64_t type metadata accessor for CRLProto_Point(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403B70, (uint64_t)&nominal type descriptor for CRLProto_Point);
}

uint64_t sub_100A499AC()
{
  return sub_1004B7878(&qword_1013F6038, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F263F0);
}

uint64_t sub_100A499D8()
{
  return sub_1004B7878(&qword_1014038C0, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F26328);
}

uint64_t sub_100A49A04()
{
  return sub_1004B7878(&qword_1014038C8, type metadata accessor for CRLProto_Point, (uint64_t)&unk_100F26368);
}

uint64_t sub_100A49A30()
{
  return sub_1004B7878(&qword_1014038D0, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F26468);
}

uint64_t type metadata accessor for CRLProto_Date(uint64_t a1)
{
  return sub_1004BD408(a1, qword_101403AE0, (uint64_t)&nominal type descriptor for CRLProto_Date);
}

uint64_t sub_100A49A70()
{
  return sub_1004B7878(&qword_1014038D8, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F26558);
}

uint64_t sub_100A49A9C()
{
  return sub_1004B7878(&qword_1014038E0, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F26490);
}

uint64_t sub_100A49AC8()
{
  return sub_1004B7878(&qword_1014038E8, type metadata accessor for CRLProto_Date, (uint64_t)&unk_100F264D0);
}

uint64_t sub_100A49AF4()
{
  return sub_1004B7878(&qword_1014038F0, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F265D0);
}

uint64_t sub_100A49B20()
{
  return sub_1004B7878(&qword_1014038F8, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F266C0);
}

uint64_t sub_100A49B4C()
{
  return sub_1004B7878(&qword_101403900, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F265F8);
}

uint64_t sub_100A49B78()
{
  return sub_1004B7878(&qword_101403908, type metadata accessor for CRLProto_Data, (uint64_t)&unk_100F26638);
}

uint64_t sub_100A49BA4()
{
  return sub_1006047EC(&qword_101403910, &qword_101403918);
}

uint64_t sub_100A49BC8()
{
  return sub_1006047EC(&qword_101403920, &qword_101403928);
}

uint64_t sub_100A49BEC(_DWORD *a1, _DWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  char *v58;
  char v59;
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _DWORD *v76;
  _DWORD *v77;

  v76 = a1;
  v77 = a2;
  v2 = type metadata accessor for UnknownStorage(0);
  v66 = *(_QWORD *)(v2 - 8);
  v67 = v2;
  __chkstk_darwin(v2);
  v65 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v64 = (char *)&v62 - v5;
  v73 = type metadata accessor for CRLProto_Data(0);
  v70 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v63 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v69);
  v74 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v8);
  v68 = (uint64_t *)((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v71 = (uint64_t)&v62 - v11;
  __chkstk_darwin(v12);
  v72 = (uint64_t)&v62 - v13;
  v14 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_101403A80);
  __chkstk_darwin(v18);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1004B804C(&qword_1013E4CB8);
  __chkstk_darwin(v21);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v62 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v62 - v28;
  v30 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  sub_1004CB7BC((uint64_t)v76 + *(int *)(v30 + 24), (uint64_t)v29, &qword_1013E4CB8);
  v75 = v30;
  sub_1004CB7BC((uint64_t)v77 + *(int *)(v30 + 24), (uint64_t)v26, &qword_1013E4CB8);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_1004CB7BC((uint64_t)v29, (uint64_t)v20, &qword_1013E4CB8);
  sub_1004CB7BC((uint64_t)v26, v31, &qword_1013E4CB8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_1004CB800((uint64_t)v26, &qword_1013E4CB8);
    sub_1004CB800((uint64_t)v29, &qword_1013E4CB8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_1004CB800((uint64_t)v20, &qword_1013E4CB8);
      goto LABEL_9;
    }
LABEL_6:
    v33 = &qword_101403A80;
    v34 = (uint64_t)v20;
    goto LABEL_7;
  }
  sub_1004CB7BC((uint64_t)v20, (uint64_t)v23, &qword_1013E4CB8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_1004CB800((uint64_t)v26, &qword_1013E4CB8);
    sub_1004CB800((uint64_t)v29, &qword_1013E4CB8);
    sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLProto_BoardIdentifier);
    goto LABEL_6;
  }
  sub_1004B84E0(v31, (uint64_t)v17, type metadata accessor for CRLProto_BoardIdentifier);
  v35 = sub_100A5190C((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(_QWORD, __n128))type metadata accessor for CRLProto_BoardIdentifier);
  sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLProto_BoardIdentifier);
  sub_1004CB800((uint64_t)v26, &qword_1013E4CB8);
  sub_1004CB800((uint64_t)v29, &qword_1013E4CB8);
  sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLProto_BoardIdentifier);
  sub_1004CB800((uint64_t)v20, &qword_1013E4CB8);
  if ((v35 & 1) == 0)
    goto LABEL_19;
LABEL_9:
  v37 = v76;
  v36 = v77;
  if (*v76 != *v77)
    goto LABEL_19;
  v38 = v75;
  v39 = v72;
  sub_1004CB7BC((uint64_t)v76 + *(int *)(v75 + 28), v72, (uint64_t *)&unk_1013E16F0);
  v40 = v71;
  sub_1004CB7BC((uint64_t)v36 + *(int *)(v38 + 28), v71, (uint64_t *)&unk_1013E16F0);
  v41 = v74;
  v42 = v74 + *(int *)(v69 + 48);
  sub_1004CB7BC(v39, v74, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC(v40, v42, (uint64_t *)&unk_1013E16F0);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  v44 = v73;
  if (v43(v41, 1, v73) != 1)
  {
    v46 = v68;
    sub_1004CB7BC(v41, (uint64_t)v68, (uint64_t *)&unk_1013E16F0);
    if (v43(v42, 1, v44) == 1)
    {
      sub_1004CB800(v40, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v39, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLProto_Data);
      goto LABEL_15;
    }
    v47 = v63;
    sub_1004B84E0(v42, v63, type metadata accessor for CRLProto_Data);
    sub_1007B38CC(*v46, v46[1]);
    if ((v48 & 1) != 0)
    {
      v49 = *(int *)(v44 + 20);
      v50 = (char *)v46 + v49;
      v51 = v47 + v49;
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v45 = v67;
      LOBYTE(v50) = dispatch thunk of static Equatable.== infix(_:_:)(v50, v51);
      sub_1004B84A4(v47, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v40, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v39, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v41, (uint64_t *)&unk_1013E16F0);
      if ((v50 & 1) != 0)
        goto LABEL_18;
LABEL_19:
      v59 = 0;
      return v59 & 1;
    }
    sub_1004B84A4(v47, type metadata accessor for CRLProto_Data);
    sub_1004CB800(v40, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v39, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v46, type metadata accessor for CRLProto_Data);
    v34 = v41;
    v33 = (uint64_t *)&unk_1013E16F0;
LABEL_7:
    sub_1004CB800(v34, v33);
    goto LABEL_19;
  }
  sub_1004CB800(v40, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800(v39, (uint64_t *)&unk_1013E16F0);
  if (v43(v42, 1, v44) != 1)
  {
LABEL_15:
    v33 = (uint64_t *)&unk_1013E1AE8;
    v34 = v41;
    goto LABEL_7;
  }
  sub_1004CB800(v41, (uint64_t *)&unk_1013E16F0);
  v45 = v67;
LABEL_18:
  v52 = v75;
  v53 = (char *)v37 + *(int *)(v75 + 20);
  v54 = v66;
  v55 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v56 = v64;
  v55(v64, v53, v45);
  v57 = (char *)v36 + *(int *)(v52 + 20);
  v58 = v65;
  v55(v65, v57, v45);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v59 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v58);
  v60 = *(void (**)(char *, uint64_t))(v54 + 8);
  v60(v58, v45);
  v60(v56, v45);
  return v59 & 1;
}

uint64_t sub_100A4A310(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  char *v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  v4 = type metadata accessor for UnknownStorage(0);
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v54 - v8;
  v10 = type metadata accessor for CRLProto_Data(0);
  v62 = *(char **)(v10 - 8);
  v63 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v54 - v18;
  __chkstk_darwin(v20);
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    goto LABEL_13;
  v23 = a1;
  v56 = v12;
  v57 = v9;
  v58 = v6;
  v59 = (uint64_t *)v22;
  v24 = (char *)&v54 - v21;
  v25 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  v26 = v23;
  sub_1004CB7BC((uint64_t)&v23[*(int *)(v25 + 24)], (uint64_t)v24, (uint64_t *)&unk_1013E16F0);
  v27 = a2;
  sub_1004CB7BC((uint64_t)&a2[*(int *)(v25 + 24)], (uint64_t)v19, (uint64_t *)&unk_1013E16F0);
  v28 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_1004CB7BC((uint64_t)v24, (uint64_t)v15, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v19, v28, (uint64_t *)&unk_1013E16F0);
  v29 = v63;
  v30 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v62 + 6);
  if (v30((uint64_t)v15, 1, v63) != 1)
  {
    v62 = v24;
    v33 = v59;
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v59, (uint64_t *)&unk_1013E16F0);
    if (v30(v28, 1, v29) != 1)
    {
      v36 = v28;
      v37 = (uint64_t)v56;
      sub_1004B84E0(v36, (uint64_t)v56, type metadata accessor for CRLProto_Data);
      sub_1007B38CC(*v33, v33[1]);
      if ((v38 & 1) != 0)
      {
        v55 = v25;
        v31 = v27;
        v39 = *(int *)(v29 + 20);
        v40 = (char *)v33 + v39;
        v41 = (uint64_t)v33;
        v42 = v37 + v39;
        sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v43 = v40;
        v44 = (uint64_t)v15;
        v32 = v61;
        v45 = dispatch thunk of static Equatable.== infix(_:_:)(v43, v42);
        sub_1004B84A4(v37, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
        sub_1004CB800((uint64_t)v62, (uint64_t *)&unk_1013E16F0);
        sub_1004B84A4(v41, type metadata accessor for CRLProto_Data);
        sub_1004CB800(v44, (uint64_t *)&unk_1013E16F0);
        if ((v45 & 1) != 0)
          goto LABEL_10;
LABEL_13:
        v51 = 0;
        return v51 & 1;
      }
      sub_1004B84A4(v37, type metadata accessor for CRLProto_Data);
      sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v62, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLProto_Data);
      v35 = (uint64_t)v15;
      v34 = (uint64_t *)&unk_1013E16F0;
LABEL_12:
      sub_1004CB800(v35, v34);
      goto LABEL_13;
    }
    sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v62, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v33, type metadata accessor for CRLProto_Data);
LABEL_7:
    v34 = (uint64_t *)&unk_1013E1AE8;
    v35 = (uint64_t)v15;
    goto LABEL_12;
  }
  v55 = v25;
  sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E16F0);
  if (v30(v28, 1, v29) != 1)
    goto LABEL_7;
  v31 = a2;
  sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E16F0);
  v32 = v61;
LABEL_10:
  v46 = v55;
  v47 = v60;
  v48 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v49 = v57;
  v48(v57, &v26[*(int *)(v55 + 20)], v32);
  v50 = v58;
  v48(v58, &v31[*(int *)(v46 + 20)], v32);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v51 = dispatch thunk of static Equatable.== infix(_:_:)(v49, v50);
  v52 = *(void (**)(char *, uint64_t))(v47 + 8);
  v52(v50, v32);
  v52(v49, v32);
  return v51 & 1;
}

uint64_t sub_100A4A7C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t *v36;
  char v37;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t *v47;
  char *v48;
  uint64_t *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;

  v56 = a2;
  v3 = type metadata accessor for UnknownStorage(0);
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  __chkstk_darwin(v3);
  v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v52 = (char *)&v47 - v6;
  v7 = type metadata accessor for CRLProto_TextSelection(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C(&qword_1014039C0);
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C(&qword_1013E4F40);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v19 = (char *)&v47 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v47 - v21;
  v23 = a1;
  v24 = *a1;
  v25 = v56;
  if ((sub_100541D3C(v24, *v56) & 1) == 0)
    goto LABEL_9;
  v50 = v19;
  v51 = v22;
  v48 = v10;
  v49 = v16;
  if (*((unsigned __int8 *)v23 + 8) != *((unsigned __int8 *)v25 + 8))
    goto LABEL_9;
  v26 = v25;
  v27 = v23;
  v28 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  v29 = *(int *)(v28 + 28);
  v47 = v27;
  v30 = (uint64_t)v51;
  sub_1004CB7BC((uint64_t)v27 + v29, (uint64_t)v51, &qword_1013E4F40);
  v31 = (uint64_t)v50;
  sub_1004CB7BC((uint64_t)v26 + *(int *)(v28 + 28), (uint64_t)v50, &qword_1013E4F40);
  v32 = *(int *)(v11 + 48);
  v33 = (uint64_t)v13;
  v34 = (uint64_t)&v13[v32];
  sub_1004CB7BC(v30, (uint64_t)v13, &qword_1013E4F40);
  sub_1004CB7BC(v31, v34, &qword_1013E4F40);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v35(v33, 1, v7) == 1)
  {
    sub_1004CB800(v31, &qword_1013E4F40);
    sub_1004CB800(v30, &qword_1013E4F40);
    if (v35(v34, 1, v7) == 1)
    {
      sub_1004CB800(v33, &qword_1013E4F40);
LABEL_12:
      v42 = v54;
      v41 = v55;
      v43 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
      v44 = v52;
      v43(v52, (char *)v47 + *(int *)(v28 + 24), v55);
      v45 = v53;
      v43(v53, (char *)v56 + *(int *)(v28 + 24), v41);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v37 = dispatch thunk of static Equatable.== infix(_:_:)(v44, v45);
      v46 = *(void (**)(char *, uint64_t))(v42 + 8);
      v46(v45, v41);
      v46(v44, v41);
      return v37 & 1;
    }
    goto LABEL_8;
  }
  v36 = v49;
  sub_1004CB7BC(v33, (uint64_t)v49, &qword_1013E4F40);
  if (v35(v34, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v50, &qword_1013E4F40);
    sub_1004CB800((uint64_t)v51, &qword_1013E4F40);
    sub_1004B84A4((uint64_t)v36, type metadata accessor for CRLProto_TextSelection);
LABEL_8:
    sub_1004CB800(v33, &qword_1014039C0);
    goto LABEL_9;
  }
  v39 = v48;
  sub_1004B84E0(v34, (uint64_t)v48, type metadata accessor for CRLProto_TextSelection);
  v40 = sub_100A4FEA0(v36, v39);
  sub_1004B84A4((uint64_t)v39, type metadata accessor for CRLProto_TextSelection);
  sub_1004CB800((uint64_t)v50, &qword_1013E4F40);
  sub_1004CB800((uint64_t)v51, &qword_1013E4F40);
  sub_1004B84A4((uint64_t)v36, type metadata accessor for CRLProto_TextSelection);
  sub_1004CB800(v33, &qword_1013E4F40);
  if ((v40 & 1) != 0)
    goto LABEL_12;
LABEL_9:
  v37 = 0;
  return v37 & 1;
}

uint64_t sub_100A4ABDC(char *a1, _QWORD *a2, uint64_t (*a3)(_QWORD, __n128))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD, __n128);
  uint64_t v62;
  uint64_t v63;

  v61 = a3;
  v5 = type metadata accessor for UnknownStorage(0);
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v54 - v9;
  v11 = type metadata accessor for CRLProto_Data(0);
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v14);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  v20 = (char *)&v54 - v19;
  v24 = __chkstk_darwin(v21);
  if (*(_QWORD *)a1 != *a2)
    goto LABEL_13;
  v25 = a2;
  v55 = v13;
  v56 = v10;
  v57 = v7;
  v58 = (uint64_t *)v23;
  v26 = (char *)&v54 - v22;
  v27 = v61(0, v24);
  v28 = a1;
  sub_1004CB7BC((uint64_t)&a1[*(int *)(v27 + 24)], (uint64_t)v26, (uint64_t *)&unk_1013E16F0);
  v29 = v25;
  sub_1004CB7BC((uint64_t)v25 + *(int *)(v27 + 24), (uint64_t)v20, (uint64_t *)&unk_1013E16F0);
  v30 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1004CB7BC((uint64_t)v26, (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v20, v30, (uint64_t *)&unk_1013E16F0);
  v31 = v63;
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  v33 = v29;
  v34 = v28;
  if (v32((uint64_t)v16, 1, v63) != 1)
  {
    v37 = v58;
    sub_1004CB7BC((uint64_t)v16, (uint64_t)v58, (uint64_t *)&unk_1013E16F0);
    if (v32(v30, 1, v31) != 1)
    {
      v40 = (uint64_t)v55;
      sub_1004B84E0(v30, (uint64_t)v55, type metadata accessor for CRLProto_Data);
      sub_1007B38CC(*v37, v37[1]);
      if ((v41 & 1) != 0)
      {
        v35 = v27;
        v42 = *(int *)(v31 + 20);
        v43 = (char *)v37 + v42;
        v44 = v40 + v42;
        sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v45 = v43;
        v36 = v60;
        LOBYTE(v44) = dispatch thunk of static Equatable.== infix(_:_:)(v45, v44);
        sub_1004B84A4(v40, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
        sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_1013E16F0);
        sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
        if ((v44 & 1) != 0)
          goto LABEL_10;
LABEL_13:
        v51 = 0;
        return v51 & 1;
      }
      sub_1004B84A4(v40, type metadata accessor for CRLProto_Data);
      sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLProto_Data);
      v39 = (uint64_t)v16;
      v38 = (uint64_t *)&unk_1013E16F0;
LABEL_12:
      sub_1004CB800(v39, v38);
      goto LABEL_13;
    }
    sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLProto_Data);
LABEL_7:
    v38 = (uint64_t *)&unk_1013E1AE8;
    v39 = (uint64_t)v16;
    goto LABEL_12;
  }
  sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v26, (uint64_t *)&unk_1013E16F0);
  if (v32(v30, 1, v31) != 1)
    goto LABEL_7;
  v35 = v27;
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  v36 = v60;
LABEL_10:
  v46 = v59;
  v47 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v48 = v56;
  v47(v56, &v34[*(int *)(v35 + 20)], v36);
  v49 = (char *)v33 + *(int *)(v35 + 20);
  v50 = v57;
  v47(v57, v49, v36);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v51 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v50);
  v52 = *(void (**)(char *, uint64_t))(v46 + 8);
  v52(v50, v36);
  v52(v48, v36);
  return v51 & 1;
}

uint64_t sub_100A4B084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t *v57;
  float *v58;
  float *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  float *v68;
  float *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a1;
  v79 = a2;
  v77 = type metadata accessor for UnknownStorage(0);
  v67 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v66 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v65 = (char *)&v64 - v4;
  v74 = type metadata accessor for CRLProto_Point(0);
  v71 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v68 = (float *)((char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_1004B804C(&qword_101403988);
  __chkstk_darwin(v70);
  v75 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v7);
  v69 = (float *)((char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v72 = (uint64_t)&v64 - v10;
  __chkstk_darwin(v11);
  v73 = (uint64_t)&v64 - v12;
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  v25 = (char *)&v64 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v64 - v27;
  v29 = type metadata accessor for CRLProto_CopresenceViewportState(0);
  sub_1004CB7BC(v78 + *(int *)(v29 + 36), (uint64_t)v28, (uint64_t *)&unk_1013E16F0);
  v76 = v29;
  sub_1004CB7BC(v79 + *(int *)(v29 + 36), (uint64_t)v25, (uint64_t *)&unk_1013E16F0);
  v30 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_1004CB7BC((uint64_t)v28, (uint64_t)v19, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v25, v30, (uint64_t *)&unk_1013E16F0);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v31((uint64_t)v19, 1, v13) == 1)
  {
    sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
    if (v31(v30, 1, v13) == 1)
    {
      sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
      goto LABEL_9;
    }
LABEL_6:
    v32 = (uint64_t *)&unk_1013E1AE8;
    v33 = (uint64_t)v19;
LABEL_22:
    sub_1004CB800(v33, v32);
    goto LABEL_23;
  }
  sub_1004CB7BC((uint64_t)v19, (uint64_t)v22, (uint64_t *)&unk_1013E16F0);
  if (v31(v30, 1, v13) == 1)
  {
    sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  sub_1004B84E0(v30, (uint64_t)v16, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v22, v22[1]);
  if ((v34 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLProto_Data);
    v57 = (uint64_t *)&unk_1013E16F0;
    sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Data);
    v33 = (uint64_t)v19;
LABEL_18:
    v32 = v57;
    goto LABEL_22;
  }
  v35 = *(int *)(v13 + 20);
  v36 = (char *)v22 + v35;
  v37 = &v16[v35];
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v36) = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37);
  sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v25, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
  if ((v36 & 1) == 0)
    goto LABEL_23;
LABEL_9:
  v39 = v78;
  v38 = v79;
  if (*(_QWORD *)v78 != *(_QWORD *)v79 || *(float *)(v78 + 8) != *(float *)(v79 + 8))
    goto LABEL_23;
  v40 = v76;
  v41 = v73;
  sub_1004CB7BC(v78 + *(int *)(v76 + 40), v73, &qword_1013FA7B0);
  v42 = v72;
  sub_1004CB7BC(v38 + *(int *)(v40 + 40), v72, &qword_1013FA7B0);
  v43 = v75;
  v44 = v75 + *(int *)(v70 + 48);
  sub_1004CB7BC(v41, v75, &qword_1013FA7B0);
  sub_1004CB7BC(v42, v44, &qword_1013FA7B0);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  v46 = v74;
  if (v45(v43, 1, v74) != 1)
  {
    v58 = v69;
    sub_1004CB7BC(v43, (uint64_t)v69, &qword_1013FA7B0);
    if (v45(v44, 1, v46) == 1)
    {
      sub_1004CB800(v42, &qword_1013FA7B0);
      sub_1004CB800(v41, &qword_1013FA7B0);
      sub_1004B84A4((uint64_t)v58, type metadata accessor for CRLProto_Point);
      goto LABEL_21;
    }
    v60 = v68;
    sub_1004B84E0(v44, (uint64_t)v68, type metadata accessor for CRLProto_Point);
    if (*v58 == *v60 && v58[1] == v60[1])
    {
      v61 = *(int *)(v46 + 24);
      v62 = (char *)v58 + v61;
      v63 = (char *)v60 + v61;
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      LOBYTE(v62) = dispatch thunk of static Equatable.== infix(_:_:)(v62, v63);
      sub_1004B84A4((uint64_t)v60, type metadata accessor for CRLProto_Point);
      sub_1004CB800(v42, &qword_1013FA7B0);
      sub_1004CB800(v41, &qword_1013FA7B0);
      sub_1004B84A4((uint64_t)v58, type metadata accessor for CRLProto_Point);
      sub_1004CB800(v43, &qword_1013FA7B0);
      if ((v62 & 1) != 0)
        goto LABEL_14;
LABEL_23:
      v55 = 0;
      return v55 & 1;
    }
    sub_1004B84A4((uint64_t)v60, type metadata accessor for CRLProto_Point);
    v57 = &qword_1013FA7B0;
    sub_1004CB800(v42, &qword_1013FA7B0);
    sub_1004CB800(v41, &qword_1013FA7B0);
    sub_1004B84A4((uint64_t)v58, type metadata accessor for CRLProto_Point);
    v33 = v43;
    goto LABEL_18;
  }
  sub_1004CB800(v42, &qword_1013FA7B0);
  sub_1004CB800(v41, &qword_1013FA7B0);
  if (v45(v44, 1, v46) != 1)
  {
LABEL_21:
    v32 = &qword_101403988;
    v33 = v43;
    goto LABEL_22;
  }
  sub_1004CB800(v43, &qword_1013FA7B0);
LABEL_14:
  if (*(unsigned __int8 *)(v39 + 12) != *(unsigned __int8 *)(v38 + 12)
    || *(_QWORD *)(v39 + 16) != *(_QWORD *)(v38 + 16))
  {
    goto LABEL_23;
  }
  v47 = v76;
  v48 = v77;
  v49 = v39 + *(int *)(v76 + 32);
  v50 = v67;
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  v52 = v65;
  v51(v65, v49, v77);
  v53 = v38 + *(int *)(v47 + 32);
  v54 = v66;
  v51(v66, v53, v48);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v55 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v54);
  v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v54, v48);
  v56(v52, v48);
  return v55 & 1;
}

uint64_t sub_100A4B86C(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t *v52;

  v4 = type metadata accessor for UnknownStorage(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v45 = (char *)&v45 - v7;
  v8 = type metadata accessor for CRLProto_Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v51 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v14);
  v52 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - v20;
  v22 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  v23 = *(int *)(v22 + 24);
  v49 = a1;
  sub_1004CB7BC((uint64_t)&a1[v23], (uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  v24 = v22;
  v25 = *(int *)(v22 + 24);
  v50 = a2;
  sub_1004CB7BC((uint64_t)&a2[v25], (uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v13, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v18, v26, (uint64_t *)&unk_1013E16F0);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v27((uint64_t)v13, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    if (v27(v26, 1, v8) == 1)
    {
      sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v29 = (uint64_t)v51;
  v28 = v52;
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v52, (uint64_t *)&unk_1013E16F0);
  if (v27(v26, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
LABEL_6:
    v30 = (uint64_t *)&unk_1013E1AE8;
    v31 = (uint64_t)v13;
LABEL_12:
    sub_1004CB800(v31, v30);
    goto LABEL_13;
  }
  sub_1004B84E0(v26, v29, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v28, v28[1]);
  if ((v32 & 1) == 0)
  {
    sub_1004B84A4(v29, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
    v31 = (uint64_t)v13;
    v30 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_12;
  }
  v33 = *(int *)(v8 + 20);
  v34 = (char *)v28 + v33;
  v35 = v29 + v33;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v34) = dispatch thunk of static Equatable.== infix(_:_:)(v34, v35);
  sub_1004B84A4(v29, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
  if ((v34 & 1) == 0)
  {
LABEL_13:
    v42 = 0;
    return v42 & 1;
  }
LABEL_9:
  v36 = v50;
  if (*(_DWORD *)v49 != *(_DWORD *)v50)
    goto LABEL_13;
  v38 = v47;
  v37 = v48;
  v39 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v40 = v45;
  v39(v45, &v49[*(int *)(v24 + 20)], v48);
  v41 = v46;
  v39(v46, &v36[*(int *)(v24 + 20)], v37);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v42 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v41);
  v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v41, v37);
  v43(v40, v37);
  return v42 & 1;
}

uint64_t sub_100A4BCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char v42;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;

  v79 = type metadata accessor for UnknownStorage(0);
  v73 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v72 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v71 = (char *)&v70 - v6;
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v70 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v80 = (uint64_t)&v70 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v12);
  v76 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v70 - v15;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v17);
  v74 = (uint64_t *)((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v77 = (uint64_t)&v70 - v20;
  __chkstk_darwin(v21);
  v75 = (uint64_t)&v70 - v22;
  __chkstk_darwin(v23);
  v83 = (uint64_t *)((char *)&v70 - v24);
  __chkstk_darwin(v25);
  v27 = (char *)&v70 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v70 - v29;
  v31 = type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
  v32 = *(int *)(v31 + 32);
  v81 = a1;
  sub_1004CB7BC(a1 + v32, (uint64_t)v30, (uint64_t *)&unk_1013E16F0);
  v78 = v31;
  v33 = *(int *)(v31 + 32);
  v34 = v7;
  v82 = a2;
  sub_1004CB7BC(a2 + v33, (uint64_t)v27, (uint64_t *)&unk_1013E16F0);
  v35 = v12;
  v36 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_1004CB7BC((uint64_t)v30, (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v27, v36, (uint64_t *)&unk_1013E16F0);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v37((uint64_t)v16, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
    if (v37(v36, 1, v7) != 1)
    {
LABEL_7:
      v40 = (uint64_t *)&unk_1013E1AE8;
      v41 = (uint64_t)v16;
LABEL_8:
      sub_1004CB800(v41, v40);
      goto LABEL_9;
    }
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    v38 = v83;
    sub_1004CB7BC((uint64_t)v16, (uint64_t)v83, (uint64_t *)&unk_1013E16F0);
    if (v37(v36, 1, v7) == 1)
    {
      sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
      v39 = (uint64_t)v38;
LABEL_6:
      sub_1004B84A4(v39, type metadata accessor for CRLProto_Data);
      goto LABEL_7;
    }
    v44 = v80;
    sub_1004B84E0(v36, v80, type metadata accessor for CRLProto_Data);
    sub_1007B38CC(*v38, v38[1]);
    if ((v45 & 1) == 0)
    {
      sub_1004B84A4(v44, type metadata accessor for CRLProto_Data);
      sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
      v55 = (uint64_t)v38;
LABEL_20:
      sub_1004B84A4(v55, type metadata accessor for CRLProto_Data);
      v41 = (uint64_t)v16;
      v40 = (uint64_t *)&unk_1013E16F0;
      goto LABEL_8;
    }
    v46 = *(int *)(v34 + 20);
    v47 = (char *)v38 + v46;
    v48 = v44 + v46;
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    LOBYTE(v47) = dispatch thunk of static Equatable.== infix(_:_:)(v47, v48);
    sub_1004B84A4(v44, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v38, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
    if ((v47 & 1) == 0)
      goto LABEL_9;
  }
  v50 = v81;
  v49 = v82;
  if (*(_DWORD *)v81 != *(_DWORD *)v82
    || *(_DWORD *)(v81 + 4) != *(_DWORD *)(v82 + 4)
    || *(unsigned __int8 *)(v81 + 8) != *(unsigned __int8 *)(v82 + 8))
  {
    goto LABEL_9;
  }
  v51 = v78;
  v52 = v75;
  sub_1004CB7BC(v81 + *(int *)(v78 + 36), v75, (uint64_t *)&unk_1013E16F0);
  v53 = v77;
  sub_1004CB7BC(v49 + *(int *)(v51 + 36), v77, (uint64_t *)&unk_1013E16F0);
  v16 = v76;
  v54 = (uint64_t)&v76[*(int *)(v35 + 48)];
  sub_1004CB7BC(v52, (uint64_t)v76, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC(v53, v54, (uint64_t *)&unk_1013E16F0);
  if (v37((uint64_t)v16, 1, v34) == 1)
  {
    sub_1004CB800(v53, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v52, (uint64_t *)&unk_1013E16F0);
    if (v37(v54, 1, v34) == 1)
    {
      sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
LABEL_25:
      v62 = v78;
      v63 = v79;
      v64 = v73;
      v65 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
      v66 = v71;
      v65(v71, v50 + *(int *)(v78 + 28), v79);
      v67 = v49 + *(int *)(v62 + 28);
      v68 = v72;
      v65(v72, v67, v63);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v42 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v68);
      v69 = *(void (**)(char *, uint64_t))(v64 + 8);
      v69(v68, v63);
      v69(v66, v63);
      return v42 & 1;
    }
    goto LABEL_7;
  }
  v56 = v74;
  sub_1004CB7BC((uint64_t)v16, (uint64_t)v74, (uint64_t *)&unk_1013E16F0);
  if (v37(v54, 1, v34) == 1)
  {
    sub_1004CB800(v53, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v52, (uint64_t *)&unk_1013E16F0);
    v39 = (uint64_t)v56;
    goto LABEL_6;
  }
  v57 = v70;
  sub_1004B84E0(v54, v70, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v56, v56[1]);
  if ((v58 & 1) == 0)
  {
    sub_1004B84A4(v57, type metadata accessor for CRLProto_Data);
    sub_1004CB800(v77, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v52, (uint64_t *)&unk_1013E16F0);
    v55 = (uint64_t)v56;
    goto LABEL_20;
  }
  v59 = *(int *)(v34 + 20);
  v60 = (char *)v56 + v59;
  v61 = v57 + v59;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v60) = dispatch thunk of static Equatable.== infix(_:_:)(v60, v61);
  sub_1004B84A4(v57, type metadata accessor for CRLProto_Data);
  sub_1004CB800(v77, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800(v52, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v56, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  if ((v60 & 1) != 0)
    goto LABEL_25;
LABEL_9:
  v42 = 0;
  return v42 & 1;
}

uint64_t sub_100A4C44C(float *a1, float *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  float *v40;
  float *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  uint64_t *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t *v71;
  float *v72;
  int v73;
  uint64_t v74;
  float *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  float *v80;
  float *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  float *v91;
  float *v92;
  float *v93;
  uint64_t v94;
  uint64_t v95;
  float *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  float *v109;
  float *v110;

  v109 = a1;
  v110 = a2;
  v97 = type metadata accessor for UnknownStorage(0);
  v90 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v89 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v88 = (char *)&v88 - v4;
  v103 = type metadata accessor for CRLProto_Size(0);
  v95 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v91 = (float *)((char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = sub_1004B804C(&qword_101403A28);
  __chkstk_darwin(v94);
  v104 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1004B804C(&qword_1013FA7B8);
  __chkstk_darwin(v7);
  v92 = (float *)((char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v101 = (char *)&v88 - v10;
  __chkstk_darwin(v11);
  v102 = (char *)&v88 - v12;
  v105 = type metadata accessor for CRLProto_Point(0);
  v99 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v93 = (float *)((char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v98 = sub_1004B804C(&qword_101403988);
  __chkstk_darwin(v98);
  v108 = (uint64_t)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v15);
  v96 = (float *)((char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v106 = (uint64_t)&v88 - v18;
  __chkstk_darwin(v19);
  v107 = (uint64_t)&v88 - v20;
  v21 = type metadata accessor for CRLProto_Data(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v25);
  v27 = (char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v28);
  v30 = (uint64_t *)((char *)&v88 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31);
  v33 = (char *)&v88 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v88 - v35;
  v37 = type metadata accessor for CRLProto_FollowViewportState(0);
  sub_1004CB7BC((uint64_t)v109 + *(int *)(v37 + 28), (uint64_t)v36, (uint64_t *)&unk_1013E16F0);
  v100 = (int *)v37;
  sub_1004CB7BC((uint64_t)v110 + *(int *)(v37 + 28), (uint64_t)v33, (uint64_t *)&unk_1013E16F0);
  v38 = (uint64_t)&v27[*(int *)(v25 + 48)];
  sub_1004CB7BC((uint64_t)v36, (uint64_t)v27, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v33, v38, (uint64_t *)&unk_1013E16F0);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v39((uint64_t)v27, 1, v21) == 1)
  {
    sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v36, (uint64_t *)&unk_1013E16F0);
    if (v39(v38, 1, v21) == 1)
    {
      sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
      goto LABEL_4;
    }
LABEL_15:
    v65 = (uint64_t *)&unk_1013E1AE8;
    v66 = (uint64_t)v27;
LABEL_32:
    sub_1004CB800(v66, v65);
    goto LABEL_33;
  }
  sub_1004CB7BC((uint64_t)v27, (uint64_t)v30, (uint64_t *)&unk_1013E16F0);
  if (v39(v38, 1, v21) == 1)
  {
    sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v36, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
    goto LABEL_15;
  }
  sub_1004B84E0(v38, (uint64_t)v24, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v30, v30[1]);
  if ((v67 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLProto_Data);
    v71 = (uint64_t *)&unk_1013E16F0;
    sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v36, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
    v66 = (uint64_t)v27;
LABEL_20:
    v65 = v71;
    goto LABEL_32;
  }
  v68 = *(int *)(v21 + 20);
  v69 = (char *)v30 + v68;
  v70 = &v24[v68];
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v69) = dispatch thunk of static Equatable.== infix(_:_:)(v69, v70);
  sub_1004B84A4((uint64_t)v24, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v36, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
  if ((v69 & 1) == 0)
    goto LABEL_33;
LABEL_4:
  v40 = v109;
  v41 = v110;
  if (*v109 != *v110)
  {
LABEL_33:
    v63 = 0;
    return v63 & 1;
  }
  v42 = v100;
  v43 = v107;
  sub_1004CB7BC((uint64_t)v109 + v100[8], v107, &qword_1013FA7B0);
  v44 = v106;
  sub_1004CB7BC((uint64_t)v41 + v42[8], v106, &qword_1013FA7B0);
  v45 = v108;
  v46 = v108 + *(int *)(v98 + 48);
  sub_1004CB7BC(v43, v108, &qword_1013FA7B0);
  sub_1004CB7BC(v44, v46, &qword_1013FA7B0);
  v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
  v48 = v105;
  if (v47(v45, 1, v105) == 1)
  {
    sub_1004CB800(v44, &qword_1013FA7B0);
    sub_1004CB800(v43, &qword_1013FA7B0);
    v49 = v47(v46, 1, v48);
    v51 = v103;
    v50 = (uint64_t)v104;
    v53 = (uint64_t)v101;
    v52 = (uint64_t)v102;
    if (v49 == 1)
    {
      sub_1004CB800(v108, &qword_1013FA7B0);
      goto LABEL_8;
    }
LABEL_23:
    v65 = &qword_101403988;
    v66 = v108;
    goto LABEL_32;
  }
  v72 = v96;
  sub_1004CB7BC(v45, (uint64_t)v96, &qword_1013FA7B0);
  v73 = v47(v46, 1, v48);
  v51 = v103;
  v50 = (uint64_t)v104;
  v53 = (uint64_t)v101;
  v52 = (uint64_t)v102;
  if (v73 == 1)
  {
    sub_1004CB800(v106, &qword_1013FA7B0);
    sub_1004CB800(v107, &qword_1013FA7B0);
    sub_1004B84A4((uint64_t)v72, type metadata accessor for CRLProto_Point);
    goto LABEL_23;
  }
  v74 = v46;
  v75 = v93;
  sub_1004B84E0(v74, (uint64_t)v93, type metadata accessor for CRLProto_Point);
  if (*v72 != *v75 || v72[1] != v75[1])
  {
    sub_1004B84A4((uint64_t)v75, type metadata accessor for CRLProto_Point);
    v71 = &qword_1013FA7B0;
    sub_1004CB800(v106, &qword_1013FA7B0);
    sub_1004CB800(v107, &qword_1013FA7B0);
    sub_1004B84A4((uint64_t)v72, type metadata accessor for CRLProto_Point);
    v66 = v108;
    goto LABEL_20;
  }
  v76 = *(int *)(v105 + 24);
  v77 = (char *)v72 + v76;
  v78 = (uint64_t)v75;
  v79 = (char *)v75 + v76;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v77) = dispatch thunk of static Equatable.== infix(_:_:)(v77, v79);
  sub_1004B84A4(v78, type metadata accessor for CRLProto_Point);
  sub_1004CB800(v106, &qword_1013FA7B0);
  sub_1004CB800(v107, &qword_1013FA7B0);
  sub_1004B84A4((uint64_t)v96, type metadata accessor for CRLProto_Point);
  sub_1004CB800(v108, &qword_1013FA7B0);
  if ((v77 & 1) == 0)
    goto LABEL_33;
LABEL_8:
  sub_1004CB7BC((uint64_t)v40 + v42[9], v52, &qword_1013FA7B8);
  sub_1004CB7BC((uint64_t)v41 + v42[9], v53, &qword_1013FA7B8);
  v54 = v50 + *(int *)(v94 + 48);
  sub_1004CB7BC(v52, v50, &qword_1013FA7B8);
  sub_1004CB7BC(v53, v54, &qword_1013FA7B8);
  v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
  if (v55(v50, 1, v51) == 1)
  {
    sub_1004CB800(v53, &qword_1013FA7B8);
    sub_1004CB800(v52, &qword_1013FA7B8);
    if (v55(v54, 1, v51) == 1)
    {
      sub_1004CB800(v50, &qword_1013FA7B8);
      goto LABEL_11;
    }
    goto LABEL_31;
  }
  v80 = v92;
  sub_1004CB7BC(v50, (uint64_t)v92, &qword_1013FA7B8);
  if (v55(v54, 1, v51) == 1)
  {
    sub_1004CB800(v53, &qword_1013FA7B8);
    sub_1004CB800(v52, &qword_1013FA7B8);
    sub_1004B84A4((uint64_t)v80, type metadata accessor for CRLProto_Size);
LABEL_31:
    v65 = &qword_101403A28;
    v66 = v50;
    goto LABEL_32;
  }
  v82 = v91;
  sub_1004B84E0(v54, (uint64_t)v91, type metadata accessor for CRLProto_Size);
  if (*v80 != *v82 || v80[1] != v82[1])
  {
    sub_1004B84A4((uint64_t)v82, type metadata accessor for CRLProto_Size);
    v87 = (uint64_t)v80;
    v71 = &qword_1013FA7B8;
    sub_1004CB800(v53, &qword_1013FA7B8);
    sub_1004CB800(v52, &qword_1013FA7B8);
    sub_1004B84A4(v87, type metadata accessor for CRLProto_Size);
    v66 = v50;
    goto LABEL_20;
  }
  v83 = *(int *)(v51 + 24);
  v84 = (char *)v80 + v83;
  v85 = (uint64_t)v80;
  v86 = (char *)v82 + v83;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v84) = dispatch thunk of static Equatable.== infix(_:_:)(v84, v86);
  sub_1004B84A4((uint64_t)v82, type metadata accessor for CRLProto_Size);
  sub_1004CB800(v53, &qword_1013FA7B8);
  sub_1004CB800(v52, &qword_1013FA7B8);
  sub_1004B84A4(v85, type metadata accessor for CRLProto_Size);
  sub_1004CB800(v50, &qword_1013FA7B8);
  if ((v84 & 1) == 0)
    goto LABEL_33;
LABEL_11:
  if (*((_QWORD *)v40 + 1) != *((_QWORD *)v41 + 1))
    goto LABEL_33;
  v56 = (char *)v40 + v42[6];
  v57 = v90;
  v58 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v59 = v88;
  v60 = v97;
  v58(v88, v56, v97);
  v61 = (char *)v41 + v42[6];
  v62 = v89;
  v58(v89, v61, v60);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v63 = dispatch thunk of static Equatable.== infix(_:_:)(v59, v62);
  v64 = *(void (**)(char *, uint64_t))(v57 + 8);
  v64(v62, v60);
  v64(v59, v60);
  return v63 & 1;
}

uint64_t sub_100A4CF94(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  double *v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  char v55;
  int *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  int *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double *v83;
  double *v84;
  char *v85;

  v81 = type metadata accessor for UnknownStorage(0);
  v76 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v75 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v74 = (char *)&v72 - v6;
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v73 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v85 = (char *)&v72 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v12);
  v80 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - v15;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v17);
  v77 = (uint64_t *)((char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v82 = (uint64_t)&v72 - v20;
  __chkstk_darwin(v21);
  v79 = (uint64_t)&v72 - v22;
  __chkstk_darwin(v23);
  v25 = (uint64_t *)((char *)&v72 - v24);
  __chkstk_darwin(v26);
  v28 = (char *)&v72 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v72 - v30;
  v32 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  v33 = *(int *)(v32 + 24);
  v83 = a1;
  v34 = (uint64_t)a1 + v33;
  v35 = (int *)v32;
  sub_1004CB7BC(v34, (uint64_t)v31, (uint64_t *)&unk_1013E16F0);
  v36 = v35[6];
  v84 = a2;
  sub_1004CB7BC((uint64_t)a2 + v36, (uint64_t)v28, (uint64_t *)&unk_1013E16F0);
  v78 = v12;
  v37 = *(int *)(v12 + 48);
  v38 = v7;
  v39 = (uint64_t)&v16[v37];
  sub_1004CB7BC((uint64_t)v31, (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v28, v39, (uint64_t *)&unk_1013E16F0);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v40((uint64_t)v16, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v31, (uint64_t *)&unk_1013E16F0);
    if (v40(v39, 1, v7) == 1)
    {
      sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
      goto LABEL_4;
    }
LABEL_10:
    v48 = (uint64_t *)&unk_1013E1AE8;
    v49 = (uint64_t)v16;
LABEL_19:
    sub_1004CB800(v49, v48);
    goto LABEL_20;
  }
  v47 = (uint64_t)v85;
  sub_1004CB7BC((uint64_t)v16, (uint64_t)v25, (uint64_t *)&unk_1013E16F0);
  if (v40(v39, 1, v38) == 1)
  {
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v31, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLProto_Data);
    goto LABEL_10;
  }
  sub_1004B84E0(v39, v47, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v25, v25[1]);
  if ((v50 & 1) == 0)
  {
    sub_1004B84A4(v47, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v31, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLProto_Data);
    v49 = (uint64_t)v16;
LABEL_15:
    v48 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_19;
  }
  v51 = *(int *)(v38 + 20);
  v52 = (char *)v25 + v51;
  v53 = v47 + v51;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v52) = dispatch thunk of static Equatable.== infix(_:_:)(v52, v53);
  sub_1004B84A4(v47, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v28, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v31, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v25, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  if ((v52 & 1) == 0)
    goto LABEL_20;
LABEL_4:
  v42 = v83;
  v41 = v84;
  if (*v83 != *v84)
    goto LABEL_20;
  v43 = v79;
  sub_1004CB7BC((uint64_t)v83 + v35[7], v79, (uint64_t *)&unk_1013E16F0);
  v44 = v82;
  sub_1004CB7BC((uint64_t)v41 + v35[7], v82, (uint64_t *)&unk_1013E16F0);
  v45 = v80;
  v46 = v80 + *(int *)(v78 + 48);
  sub_1004CB7BC(v43, v80, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC(v44, v46, (uint64_t *)&unk_1013E16F0);
  if (v40(v45, 1, v38) == 1)
  {
    sub_1004CB800(v44, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v43, (uint64_t *)&unk_1013E16F0);
    if (v40(v46, 1, v38) == 1)
    {
      sub_1004CB800(v45, (uint64_t *)&unk_1013E16F0);
LABEL_24:
      v63 = (char *)v42 + v35[5];
      v64 = v35;
      v65 = v76;
      v66 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
      v67 = v74;
      v68 = v81;
      v66(v74, v63, v81);
      v69 = (char *)v41 + v64[5];
      v70 = v75;
      v66(v75, v69, v68);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v55 = dispatch thunk of static Equatable.== infix(_:_:)(v67, v70);
      v71 = *(void (**)(char *, uint64_t))(v65 + 8);
      v71(v70, v68);
      v71(v67, v68);
      return v55 & 1;
    }
    goto LABEL_18;
  }
  v54 = v77;
  sub_1004CB7BC(v45, (uint64_t)v77, (uint64_t *)&unk_1013E16F0);
  if (v40(v46, 1, v38) == 1)
  {
    sub_1004CB800(v82, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v43, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v54, type metadata accessor for CRLProto_Data);
LABEL_18:
    v48 = (uint64_t *)&unk_1013E1AE8;
    v49 = v45;
    goto LABEL_19;
  }
  v57 = v35;
  v58 = v73;
  sub_1004B84E0(v46, v73, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v54, v54[1]);
  if ((v59 & 1) == 0)
  {
    sub_1004B84A4(v58, type metadata accessor for CRLProto_Data);
    sub_1004CB800(v82, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v43, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v54, type metadata accessor for CRLProto_Data);
    v49 = v45;
    goto LABEL_15;
  }
  v60 = *(int *)(v38 + 20);
  v61 = (char *)v54 + v60;
  v62 = v58 + v60;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v61) = dispatch thunk of static Equatable.== infix(_:_:)(v61, v62);
  sub_1004B84A4(v58, type metadata accessor for CRLProto_Data);
  sub_1004CB800(v82, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800(v43, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v54, type metadata accessor for CRLProto_Data);
  sub_1004CB800(v45, (uint64_t *)&unk_1013E16F0);
  v35 = v57;
  if ((v61 & 1) != 0)
    goto LABEL_24;
LABEL_20:
  v55 = 0;
  return v55 & 1;
}

uint64_t sub_100A4D6F8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t *v52;

  v4 = type metadata accessor for UnknownStorage(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v45 = (char *)&v45 - v7;
  v8 = type metadata accessor for CRLProto_Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v51 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v14);
  v52 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v45 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v45 - v20;
  v22 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  v23 = *(int *)(v22 + 24);
  v49 = a1;
  sub_1004CB7BC((uint64_t)&a1[v23], (uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  v24 = v22;
  v25 = *(int *)(v22 + 24);
  v50 = a2;
  sub_1004CB7BC((uint64_t)&a2[v25], (uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v13, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v18, v26, (uint64_t *)&unk_1013E16F0);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v27((uint64_t)v13, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    if (v27(v26, 1, v8) == 1)
    {
      sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v29 = (uint64_t)v51;
  v28 = v52;
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v52, (uint64_t *)&unk_1013E16F0);
  if (v27(v26, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
LABEL_6:
    v30 = (uint64_t *)&unk_1013E1AE8;
    v31 = (uint64_t)v13;
LABEL_12:
    sub_1004CB800(v31, v30);
    goto LABEL_13;
  }
  sub_1004B84E0(v26, v29, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v28, v28[1]);
  if ((v32 & 1) == 0)
  {
    sub_1004B84A4(v29, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
    v31 = (uint64_t)v13;
    v30 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_12;
  }
  v33 = *(int *)(v8 + 20);
  v34 = (char *)v28 + v33;
  v35 = v29 + v33;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v34) = dispatch thunk of static Equatable.== infix(_:_:)(v34, v35);
  sub_1004B84A4(v29, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
  if ((v34 & 1) == 0)
  {
LABEL_13:
    v42 = 0;
    return v42 & 1;
  }
LABEL_9:
  v36 = v50;
  if (*(_QWORD *)v49 != *(_QWORD *)v50)
    goto LABEL_13;
  v38 = v47;
  v37 = v48;
  v39 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v40 = v45;
  v39(v45, &v49[*(int *)(v24 + 20)], v48);
  v41 = v46;
  v39(v46, &v36[*(int *)(v24 + 20)], v37);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v42 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v41);
  v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v41, v37);
  v43(v40, v37);
  return v42 & 1;
}

uint64_t sub_100A4DB74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  char *v64;
  char v65;
  void (*v66)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t *v81;

  v74 = type metadata accessor for UnknownStorage(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v71 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v70 = (char *)&v68 - v6;
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v69 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v80 = (char *)&v68 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v12);
  v77 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v68 - v15;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v17);
  v73 = (uint64_t *)((char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v75 = (uint64_t)&v68 - v20;
  __chkstk_darwin(v21);
  v76 = (uint64_t)&v68 - v22;
  __chkstk_darwin(v23);
  v81 = (uint64_t *)((char *)&v68 - v24);
  __chkstk_darwin(v25);
  v27 = (char *)&v68 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v68 - v29;
  v31 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  v32 = *(int *)(v31 + 20);
  v78 = a1;
  sub_1004CB7BC(a1 + v32, (uint64_t)v30, (uint64_t *)&unk_1013E16F0);
  v33 = *(int *)(v31 + 20);
  v79 = a2;
  sub_1004CB7BC(a2 + v33, (uint64_t)v27, (uint64_t *)&unk_1013E16F0);
  v34 = v12;
  v35 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_1004CB7BC((uint64_t)v30, (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v27, v35, (uint64_t *)&unk_1013E16F0);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v36((uint64_t)v16, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
    if (v36(v35, 1, v7) != 1)
    {
LABEL_15:
      v52 = (uint64_t *)&unk_1013E1AE8;
      v53 = (uint64_t)v16;
LABEL_22:
      sub_1004CB800(v53, v52);
      goto LABEL_23;
    }
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  }
  else
  {
    v45 = (uint64_t)v80;
    v44 = v81;
    sub_1004CB7BC((uint64_t)v16, (uint64_t)v81, (uint64_t *)&unk_1013E16F0);
    if (v36(v35, 1, v7) == 1)
    {
      sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
      v46 = (uint64_t)v44;
LABEL_14:
      sub_1004B84A4(v46, type metadata accessor for CRLProto_Data);
      goto LABEL_15;
    }
    sub_1004B84E0(v35, v45, type metadata accessor for CRLProto_Data);
    sub_1007B38CC(*v44, v44[1]);
    if ((v47 & 1) == 0)
    {
      sub_1004B84A4(v45, type metadata accessor for CRLProto_Data);
      sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
      v54 = (uint64_t)v44;
      goto LABEL_21;
    }
    v48 = *(int *)(v7 + 20);
    v49 = (char *)v44 + v48;
    v50 = v45 + v48;
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    LOBYTE(v49) = dispatch thunk of static Equatable.== infix(_:_:)(v49, v50);
    sub_1004B84A4(v45, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v81, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
    if ((v49 & 1) == 0)
      goto LABEL_23;
  }
  v37 = v78;
  v38 = v76;
  sub_1004CB7BC(v78 + *(int *)(v31 + 24), v76, (uint64_t *)&unk_1013E16F0);
  v39 = v79;
  v40 = v79 + *(int *)(v31 + 24);
  v41 = v75;
  sub_1004CB7BC(v40, v75, (uint64_t *)&unk_1013E16F0);
  v16 = v77;
  v42 = (uint64_t)&v77[*(int *)(v34 + 48)];
  sub_1004CB7BC(v38, (uint64_t)v77, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC(v41, v42, (uint64_t *)&unk_1013E16F0);
  if (v36((uint64_t)v16, 1, v7) != 1)
  {
    v43 = v37;
    v51 = v73;
    sub_1004CB7BC((uint64_t)v16, (uint64_t)v73, (uint64_t *)&unk_1013E16F0);
    if (v36(v42, 1, v7) == 1)
    {
      sub_1004CB800(v41, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v38, (uint64_t *)&unk_1013E16F0);
      v46 = (uint64_t)v51;
      goto LABEL_14;
    }
    v55 = v69;
    sub_1004B84E0(v42, v69, type metadata accessor for CRLProto_Data);
    sub_1007B38CC(*v51, v51[1]);
    if ((v56 & 1) != 0)
    {
      v57 = *(int *)(v7 + 20);
      v58 = (char *)v51 + v57;
      v59 = v55 + v57;
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      LOBYTE(v58) = dispatch thunk of static Equatable.== infix(_:_:)(v58, v59);
      sub_1004B84A4(v55, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v41, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v38, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v51, type metadata accessor for CRLProto_Data);
      sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
      if ((v58 & 1) != 0)
        goto LABEL_19;
LABEL_23:
      v65 = 0;
      return v65 & 1;
    }
    sub_1004B84A4(v55, type metadata accessor for CRLProto_Data);
    sub_1004CB800(v41, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v38, (uint64_t *)&unk_1013E16F0);
    v54 = (uint64_t)v51;
LABEL_21:
    sub_1004B84A4(v54, type metadata accessor for CRLProto_Data);
    v53 = (uint64_t)v16;
    v52 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_22;
  }
  sub_1004CB800(v41, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800(v38, (uint64_t *)&unk_1013E16F0);
  if (v36(v42, 1, v7) != 1)
    goto LABEL_15;
  v43 = v37;
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
LABEL_19:
  v60 = v72;
  v61 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v62 = v70;
  v63 = v74;
  v61(v70, v43, v74);
  v64 = v71;
  v61(v71, v39, v63);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v65 = dispatch thunk of static Equatable.== infix(_:_:)(v62, v64);
  v66 = *(void (**)(char *, uint64_t))(v60 + 8);
  v66(v64, v63);
  v66(v62, v63);
  return v65 & 1;
}

uint64_t sub_100A4E2A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  int *v53;
  uint64_t v54;
  uint64_t *v55;
  _DWORD *v56;
  char v57;
  uint64_t *v58;
  _DWORD *v59;
  int v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t *v74;
  double *v75;
  char v76;
  double *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  float *v87;
  char v88;
  float *v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  float *v94;
  char v95;
  float *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  int v110;
  int v111;
  float *v112;
  float *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  float *v135;
  int *v136;
  uint64_t *v137;
  uint64_t *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  float *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  double *v155;
  uint64_t v156;
  uint64_t v157;
  double *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;

  v159 = type metadata accessor for UnknownStorage(0);
  v141 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v140 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v139 = (char *)&v134 - v6;
  v148 = type metadata accessor for CRLProto_Data(0);
  v146 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v142 = (uint64_t)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v145);
  v150 = (uint64_t)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v9);
  v143 = (uint64_t *)((char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v149 = (uint64_t)&v134 - v12;
  __chkstk_darwin(v13);
  v147 = (uint64_t)&v134 - v14;
  v15 = type metadata accessor for CRLProto_Point(0);
  v152 = *(_QWORD *)(v15 - 8);
  v153 = v15;
  __chkstk_darwin(v15);
  v144 = (float *)((char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v151 = sub_1004B804C(&qword_101403988);
  __chkstk_darwin(v151);
  v154 = (uint64_t)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1004B804C(&qword_1013FA7B0);
  __chkstk_darwin(v18);
  v20 = (float *)((char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  v156 = (uint64_t)&v134 - v22;
  __chkstk_darwin(v23);
  v157 = (uint64_t)&v134 - v24;
  v166 = type metadata accessor for CRLProto_Date(0);
  v161 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v155 = (double *)((char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v160 = sub_1004B804C(&qword_101403990);
  __chkstk_darwin(v160);
  v165 = (uint64_t)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1004B804C(&qword_1013FF2D8);
  __chkstk_darwin(v27);
  v158 = (double *)((char *)&v134 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  v162 = (uint64_t)&v134 - v30;
  __chkstk_darwin(v31);
  v163 = (uint64_t)&v134 - v32;
  v33 = type metadata accessor for CRLProto_Path(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v164 = (uint64_t *)((char *)&v134 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = sub_1004B804C(&qword_101403998);
  __chkstk_darwin(v36);
  v38 = (char *)&v134 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1004B804C(&qword_1013FF2E8);
  __chkstk_darwin(v39);
  v41 = (uint64_t *)((char *)&v134 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v42);
  v44 = (char *)&v134 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v134 - v46;
  if ((sub_100542A00(*a1, *a2) & 1) == 0)
    goto LABEL_27;
  v135 = v20;
  v48 = type metadata accessor for CRLProto_PKStrokePathData(0);
  v49 = *(int *)(v48 + 24);
  v137 = a1;
  sub_1004CB7BC((uint64_t)a1 + v49, (uint64_t)v47, &qword_1013FF2E8);
  v136 = (int *)v48;
  v50 = *(int *)(v48 + 24);
  v138 = a2;
  sub_1004CB7BC((uint64_t)a2 + v50, (uint64_t)v44, &qword_1013FF2E8);
  v51 = (uint64_t)&v38[*(int *)(v36 + 48)];
  sub_1004CB7BC((uint64_t)v47, (uint64_t)v38, &qword_1013FF2E8);
  sub_1004CB7BC((uint64_t)v44, v51, &qword_1013FF2E8);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v52((uint64_t)v38, 1, v33) == 1)
  {
    sub_1004CB800((uint64_t)v44, &qword_1013FF2E8);
    sub_1004CB800((uint64_t)v47, &qword_1013FF2E8);
    if (v52(v51, 1, v33) == 1)
    {
      sub_1004CB800((uint64_t)v38, &qword_1013FF2E8);
      goto LABEL_5;
    }
LABEL_10:
    v62 = &qword_101403998;
    v63 = (uint64_t)v38;
LABEL_26:
    sub_1004CB800(v63, v62);
    goto LABEL_27;
  }
  sub_1004CB7BC((uint64_t)v38, (uint64_t)v41, &qword_1013FF2E8);
  if (v52(v51, 1, v33) == 1)
  {
    sub_1004CB800((uint64_t)v44, &qword_1013FF2E8);
    sub_1004CB800((uint64_t)v47, &qword_1013FF2E8);
    sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLProto_Path);
    goto LABEL_10;
  }
  v64 = v164;
  sub_1004B84E0(v51, (uint64_t)v164, type metadata accessor for CRLProto_Path);
  if ((sub_100547074(*v41, *v64) & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v64, type metadata accessor for CRLProto_Path);
    v74 = &qword_1013FF2E8;
    sub_1004CB800((uint64_t)v44, &qword_1013FF2E8);
    sub_1004CB800((uint64_t)v47, &qword_1013FF2E8);
    sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLProto_Path);
    v63 = (uint64_t)v38;
LABEL_21:
    v62 = v74;
    goto LABEL_26;
  }
  v65 = *(int *)(v33 + 20);
  v66 = (char *)v41 + v65;
  v67 = (char *)v64 + v65;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v66) = dispatch thunk of static Equatable.== infix(_:_:)(v66, v67);
  sub_1004B84A4((uint64_t)v64, type metadata accessor for CRLProto_Path);
  sub_1004CB800((uint64_t)v44, &qword_1013FF2E8);
  sub_1004CB800((uint64_t)v47, &qword_1013FF2E8);
  sub_1004B84A4((uint64_t)v41, type metadata accessor for CRLProto_Path);
  sub_1004CB800((uint64_t)v38, &qword_1013FF2E8);
  if ((v66 & 1) == 0)
    goto LABEL_27;
LABEL_5:
  v53 = v136;
  v54 = v136[7];
  v55 = v137;
  v56 = (_DWORD *)((char *)v137 + v54);
  v57 = *((_BYTE *)v137 + v54 + 4);
  v58 = v138;
  v59 = (_DWORD *)((char *)v138 + v54);
  v60 = *((unsigned __int8 *)v138 + v54 + 4);
  if ((v57 & 1) != 0)
  {
    v61 = v166;
    if (!v60)
      goto LABEL_27;
  }
  else
  {
    if (*v56 != *v59)
      LOBYTE(v60) = 1;
    v61 = v166;
    if ((v60 & 1) != 0)
      goto LABEL_27;
  }
  v68 = v163;
  sub_1004CB7BC((uint64_t)v137 + v136[8], v163, &qword_1013FF2D8);
  v69 = v162;
  sub_1004CB7BC((uint64_t)v58 + v53[8], v162, &qword_1013FF2D8);
  v70 = v165;
  v71 = v165 + *(int *)(v160 + 48);
  sub_1004CB7BC(v68, v165, &qword_1013FF2D8);
  v72 = v70;
  sub_1004CB7BC(v69, v71, &qword_1013FF2D8);
  v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48);
  if (v73(v72, 1, v61) == 1)
  {
    sub_1004CB800(v69, &qword_1013FF2D8);
    v72 = v165;
    sub_1004CB800(v68, &qword_1013FF2D8);
    if (v73(v71, 1, v61) == 1)
    {
      sub_1004CB800(v72, &qword_1013FF2D8);
      goto LABEL_31;
    }
LABEL_24:
    v62 = &qword_101403990;
LABEL_25:
    v63 = v72;
    goto LABEL_26;
  }
  v75 = v158;
  sub_1004CB7BC(v72, (uint64_t)v158, &qword_1013FF2D8);
  if (v73(v71, 1, v61) == 1)
  {
    sub_1004CB800(v162, &qword_1013FF2D8);
    sub_1004CB800(v163, &qword_1013FF2D8);
    sub_1004B84A4((uint64_t)v75, type metadata accessor for CRLProto_Date);
    goto LABEL_24;
  }
  v78 = v155;
  sub_1004B84E0(v71, (uint64_t)v155, type metadata accessor for CRLProto_Date);
  v79 = (uint64_t)v75;
  v81 = v162;
  v80 = v163;
  if (*v75 != *v78)
  {
    sub_1004B84A4((uint64_t)v78, type metadata accessor for CRLProto_Date);
    v74 = &qword_1013FF2D8;
    sub_1004CB800(v81, &qword_1013FF2D8);
    sub_1004CB800(v80, &qword_1013FF2D8);
    sub_1004B84A4((uint64_t)v75, type metadata accessor for CRLProto_Date);
    v63 = v165;
    goto LABEL_21;
  }
  v82 = *(int *)(v166 + 20);
  v83 = (char *)v75 + v82;
  v84 = (uint64_t)v78;
  v85 = (char *)v78 + v82;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v83) = dispatch thunk of static Equatable.== infix(_:_:)(v83, v85);
  sub_1004B84A4(v84, type metadata accessor for CRLProto_Date);
  sub_1004CB800(v81, &qword_1013FF2D8);
  sub_1004CB800(v80, &qword_1013FF2D8);
  sub_1004B84A4(v79, type metadata accessor for CRLProto_Date);
  sub_1004CB800(v165, &qword_1013FF2D8);
  if ((v83 & 1) == 0)
    goto LABEL_27;
LABEL_31:
  v86 = v53[9];
  v87 = (float *)((char *)v55 + v86);
  v88 = *((_BYTE *)v55 + v86 + 4);
  v89 = (float *)((char *)v58 + v86);
  v90 = *((unsigned __int8 *)v58 + v86 + 4);
  if ((v88 & 1) != 0)
  {
    v91 = v156;
    v92 = v157;
    if (!v90)
      goto LABEL_27;
  }
  else
  {
    if (*v87 != *v89)
      LOBYTE(v90) = 1;
    v91 = v156;
    v92 = v157;
    if ((v90 & 1) != 0)
      goto LABEL_27;
  }
  v93 = v53[10];
  v94 = (float *)((char *)v55 + v93);
  v95 = *((_BYTE *)v55 + v93 + 4);
  v96 = (float *)((char *)v58 + v93);
  v97 = *((unsigned __int8 *)v58 + v93 + 4);
  if ((v95 & 1) != 0)
  {
    if (!v97)
      goto LABEL_27;
  }
  else
  {
    if (*v94 != *v96)
      LOBYTE(v97) = 1;
    if ((v97 & 1) != 0)
      goto LABEL_27;
  }
  sub_1004CB7BC((uint64_t)v55 + v53[11], v92, &qword_1013FA7B0);
  sub_1004CB7BC((uint64_t)v58 + v53[11], v91, &qword_1013FA7B0);
  v98 = v91;
  v99 = v154;
  v100 = v154 + *(int *)(v151 + 48);
  sub_1004CB7BC(v92, v154, &qword_1013FA7B0);
  v72 = v99;
  sub_1004CB7BC(v98, v100, &qword_1013FA7B0);
  v101 = v153;
  v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48);
  if (v102(v72, 1, v153) == 1)
  {
    sub_1004CB800(v98, &qword_1013FA7B0);
    v72 = v154;
    sub_1004CB800(v92, &qword_1013FA7B0);
    if (v102(v100, 1, v101) == 1)
    {
      sub_1004CB800(v72, &qword_1013FA7B0);
      goto LABEL_47;
    }
    goto LABEL_55;
  }
  v112 = v135;
  sub_1004CB7BC(v72, (uint64_t)v135, &qword_1013FA7B0);
  if (v102(v100, 1, v101) == 1)
  {
    sub_1004CB800(v156, &qword_1013FA7B0);
    sub_1004CB800(v157, &qword_1013FA7B0);
    sub_1004B84A4((uint64_t)v112, type metadata accessor for CRLProto_Point);
LABEL_55:
    v62 = &qword_101403988;
    goto LABEL_25;
  }
  v113 = v144;
  sub_1004B84E0(v100, (uint64_t)v144, type metadata accessor for CRLProto_Point);
  if (*v112 != *v113 || v112[1] != v113[1])
  {
    sub_1004B84A4((uint64_t)v113, type metadata accessor for CRLProto_Point);
    v74 = &qword_1013FA7B0;
    sub_1004CB800(v156, &qword_1013FA7B0);
    sub_1004CB800(v157, &qword_1013FA7B0);
    sub_1004B84A4((uint64_t)v112, type metadata accessor for CRLProto_Point);
    v63 = v154;
    goto LABEL_21;
  }
  v114 = *(int *)(v153 + 24);
  v115 = (char *)v112 + v114;
  v116 = (uint64_t)v113;
  v117 = (char *)v113 + v114;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v115) = dispatch thunk of static Equatable.== infix(_:_:)(v115, v117);
  sub_1004B84A4(v116, type metadata accessor for CRLProto_Point);
  sub_1004CB800(v156, &qword_1013FA7B0);
  sub_1004CB800(v157, &qword_1013FA7B0);
  sub_1004B84A4((uint64_t)v112, type metadata accessor for CRLProto_Point);
  sub_1004CB800(v154, &qword_1013FA7B0);
  if ((v115 & 1) == 0)
    goto LABEL_27;
LABEL_47:
  v103 = v147;
  sub_1004CB7BC((uint64_t)v55 + v53[12], v147, (uint64_t *)&unk_1013E16F0);
  v104 = v149;
  sub_1004CB7BC((uint64_t)v58 + v53[12], v149, (uint64_t *)&unk_1013E16F0);
  v105 = v150;
  v106 = v150 + *(int *)(v145 + 48);
  sub_1004CB7BC(v103, v150, (uint64_t *)&unk_1013E16F0);
  v72 = v105;
  sub_1004CB7BC(v104, v106, (uint64_t *)&unk_1013E16F0);
  v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  v108 = v148;
  if (v107(v72, 1, v148) != 1)
  {
    v118 = v143;
    sub_1004CB7BC(v72, (uint64_t)v143, (uint64_t *)&unk_1013E16F0);
    if (v107(v106, 1, v108) == 1)
    {
      sub_1004CB800(v149, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v103, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v118, type metadata accessor for CRLProto_Data);
      goto LABEL_63;
    }
    v119 = v142;
    sub_1004B84E0(v106, v142, type metadata accessor for CRLProto_Data);
    sub_1007B38CC(*v118, v118[1]);
    v120 = (uint64_t)v118;
    if ((v121 & 1) != 0)
    {
      v122 = *(int *)(v148 + 20);
      v123 = (char *)v118 + v122;
      v124 = v119;
      v125 = v119 + v122;
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      LOBYTE(v123) = dispatch thunk of static Equatable.== infix(_:_:)(v123, v125);
      sub_1004B84A4(v124, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v149, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v103, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4(v120, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v150, (uint64_t *)&unk_1013E16F0);
      if ((v123 & 1) == 0)
        goto LABEL_27;
      goto LABEL_50;
    }
    sub_1004B84A4(v119, type metadata accessor for CRLProto_Data);
    v74 = (uint64_t *)&unk_1013E16F0;
    sub_1004CB800(v149, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v103, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v118, type metadata accessor for CRLProto_Data);
    v63 = v150;
    goto LABEL_21;
  }
  sub_1004CB800(v104, (uint64_t *)&unk_1013E16F0);
  v72 = v150;
  sub_1004CB800(v103, (uint64_t *)&unk_1013E16F0);
  if (v107(v106, 1, v108) != 1)
  {
LABEL_63:
    v62 = (uint64_t *)&unk_1013E1AE8;
    goto LABEL_25;
  }
  sub_1004CB800(v72, (uint64_t *)&unk_1013E16F0);
LABEL_50:
  v109 = v53[13];
  v110 = *((unsigned __int8 *)v55 + v109);
  v111 = *((unsigned __int8 *)v58 + v109);
  if (v110 != 2)
  {
    if (v111 == 2 || ((((v111 & 1) == 0) ^ v110) & 1) == 0)
      goto LABEL_27;
LABEL_69:
    v126 = (uint64_t)v55 + v53[5];
    v127 = v141;
    v128 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 16);
    v129 = v139;
    v130 = v159;
    v128(v139, v126, v159);
    v131 = (uint64_t)v58 + v53[5];
    v132 = v140;
    v128(v140, v131, v130);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v76 = dispatch thunk of static Equatable.== infix(_:_:)(v129, v132);
    v133 = *(void (**)(char *, uint64_t))(v127 + 8);
    v133(v132, v130);
    v133(v129, v130);
    return v76 & 1;
  }
  if (v111 == 2)
    goto LABEL_69;
LABEL_27:
  v76 = 0;
  return v76 & 1;
}

uint64_t sub_100A4F280(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - v9;
  sub_1007B38CC(*a1, a1[1]);
  if ((v11 & 1) != 0
    && (sub_1007B38CC(a1[2], a1[3]), (v12 & 1) != 0)
    && (sub_1007B38CC(a1[4], a1[5]), (v13 & 1) != 0)
    && (sub_1007B38CC(a1[6], a1[7]), (v14 & 1) != 0)
    && (sub_1007B38CC(a1[8], a1[9]), (v15 & 1) != 0)
    && (sub_1007B38CC(a1[10], a1[11]), (v16 & 1) != 0)
    && (sub_1007B38CC(a1[12], a1[13]), (v17 & 1) != 0)
    && (sub_1007B38CC(a1[14], a1[15]), (v18 & 1) != 0))
  {
    v19 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
    v20 = (char *)a1 + *(int *)(v19 + 48);
    v21 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v21(v10, v20, v4);
    v21(v7, (char *)(a2 + *(int *)(v19 + 48)), v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v7, v4);
    v23(v10, v4);
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

uint64_t sub_100A4F424(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_QWORD *)a2 && (sub_100541D3C(a1[1], *((_QWORD *)a2 + 1)) & 1) != 0)
  {
    v11 = type metadata accessor for CRLProto_RealTimeMessage(0);
    v12 = (char *)a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v7, &a2[*(int *)(v11 + 24)], v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v14 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100A4F568(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  char *v57;
  uint64_t *v58;

  v4 = type metadata accessor for UnknownStorage(0);
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  __chkstk_darwin(v4);
  v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v51 = (char *)&v49 - v7;
  v8 = type metadata accessor for CRLProto_Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v57 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v14);
  v58 = (uint64_t *)((char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v49 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v49 - v20;
  v22 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v23 = *(int *)(v22 + 28);
  v55 = a1;
  sub_1004CB7BC((uint64_t)a1 + v23, (uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  v50 = v22;
  v24 = *(int *)(v22 + 28);
  v56 = a2;
  sub_1004CB7BC((uint64_t)a2 + v24, (uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v13, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v18, v25, (uint64_t *)&unk_1013E16F0);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) != 1)
  {
    v39 = (uint64_t)v57;
    v40 = v58;
    sub_1004CB7BC((uint64_t)v13, (uint64_t)v58, (uint64_t *)&unk_1013E16F0);
    if (v26(v25, 1, v8) != 1)
    {
      v44 = v39;
      sub_1004B84E0(v25, v39, type metadata accessor for CRLProto_Data);
      sub_1007B38CC(*v40, v40[1]);
      if ((v45 & 1) != 0)
      {
        v46 = *(int *)(v8 + 20);
        v47 = (char *)v40 + v46;
        v48 = v39 + v46;
        sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        LOBYTE(v47) = dispatch thunk of static Equatable.== infix(_:_:)(v47, v48);
        sub_1004B84A4(v44, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
        sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
        sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
        if ((v47 & 1) != 0)
          goto LABEL_4;
LABEL_11:
        v37 = 0;
        return v37 & 1;
      }
      sub_1004B84A4(v39, type metadata accessor for CRLProto_Data);
      sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLProto_Data);
      v42 = (uint64_t)v13;
      v41 = (uint64_t *)&unk_1013E16F0;
LABEL_10:
      sub_1004CB800(v42, v41);
      goto LABEL_11;
    }
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v40, type metadata accessor for CRLProto_Data);
LABEL_9:
    v41 = (uint64_t *)&unk_1013E1AE8;
    v42 = (uint64_t)v13;
    goto LABEL_10;
  }
  sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  if (v26(v25, 1, v8) != 1)
    goto LABEL_9;
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
LABEL_4:
  v27 = v55;
  v28 = v56;
  if (!sub_10054431C(*v55, *v56) || (sub_100544388(v27[1], v28[1]) & 1) == 0)
    goto LABEL_11;
  v29 = v50;
  v30 = v51;
  v31 = (char *)v27 + *(int *)(v50 + 24);
  v33 = v53;
  v32 = v54;
  v34 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v34(v51, v31, v54);
  v35 = (char *)v28 + *(int *)(v29 + 24);
  v36 = v52;
  v34(v52, v35, v32);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v37 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v36);
  v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  v38(v36, v32);
  v38(v30, v32);
  return v37 & 1;
}

uint64_t sub_100A4F9F8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  char *v59;
  uint64_t *v60;

  v4 = type metadata accessor for UnknownStorage(0);
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  __chkstk_darwin(v4);
  v54 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v53 = (char *)&v51 - v7;
  v8 = type metadata accessor for CRLProto_Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v14);
  v60 = (uint64_t *)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v51 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v51 - v20;
  v22 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  v23 = *(int *)(v22 + 28);
  v57 = a1;
  sub_1004CB7BC((uint64_t)a1 + v23, (uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  v52 = v22;
  v24 = *(int *)(v22 + 28);
  v58 = a2;
  sub_1004CB7BC((uint64_t)a2 + v24, (uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v13, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v18, v25, (uint64_t *)&unk_1013E16F0);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    if (v26(v25, 1, v8) == 1)
    {
      sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v27 = (uint64_t)v59;
  v28 = v60;
  sub_1004CB7BC((uint64_t)v13, (uint64_t)v60, (uint64_t *)&unk_1013E16F0);
  if (v26(v25, 1, v8) == 1)
  {
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
LABEL_6:
    v29 = (uint64_t *)&unk_1013E1AE8;
    v30 = (uint64_t)v13;
LABEL_15:
    sub_1004CB800(v30, v29);
    goto LABEL_16;
  }
  v31 = v27;
  sub_1004B84E0(v25, v27, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v28, v28[1]);
  if ((v32 & 1) == 0)
  {
    sub_1004B84A4(v27, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
    v30 = (uint64_t)v13;
    v29 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_15;
  }
  v33 = *(int *)(v8 + 20);
  v34 = (char *)v28 + v33;
  v35 = v27 + v33;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v34) = dispatch thunk of static Equatable.== infix(_:_:)(v34, v35);
  sub_1004B84A4(v31, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v18, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
  if ((v34 & 1) == 0)
    goto LABEL_16;
LABEL_9:
  v37 = v57;
  v36 = v58;
  v38 = v57[1];
  v39 = v58[1];
  if (*v57 == *v58 && v38 == v39
    || (v40 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(*v57, v38, *v58, v39, 0) & 1) != 0))
  {
    if (v37[2] == v36[2])
    {
      v41 = v52;
      v42 = v53;
      v43 = (char *)v37 + *(int *)(v52 + 24);
      v45 = v55;
      v44 = v56;
      v46 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
      v46(v53, v43, v56);
      v47 = (char *)v36 + *(int *)(v41 + 24);
      v48 = v54;
      v46(v54, v47, v44);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v40 = dispatch thunk of static Equatable.== infix(_:_:)(v42, v48);
      v49 = *(void (**)(char *, uint64_t))(v45 + 8);
      v49(v48, v44);
      v49(v42, v44);
      return v40 & 1;
    }
LABEL_16:
    v40 = 0;
  }
  return v40 & 1;
}

uint64_t sub_100A4FEA0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int *v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  char v74;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD *v82;
  char v83;
  char *v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  _DWORD *v91;
  char v92;
  char *v93;
  int v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  char *v117;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v109 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v108 = (char *)&v99 - v8;
  v114 = type metadata accessor for CRLProto_Data(0);
  v9 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v110 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v111 = (uint64_t)&v99 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v99 - v14;
  v116 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v116);
  v112 = (uint64_t)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v113 = (uint64_t)&v99 - v18;
  __chkstk_darwin(v19);
  v21 = (char *)&v99 - v20;
  v22 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  __chkstk_darwin((char *)&v99 - v26);
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  v30 = (uint64_t *)((char *)&v99 - v29);
  __chkstk_darwin(v31);
  v33 = (char *)&v99 - v32;
  __chkstk_darwin(v34);
  v42 = (char *)&v99 - v41;
  v43 = *a1;
  v115 = a1;
  v44 = *((unsigned __int8 *)a1 + 8);
  v45 = *(_QWORD *)a2;
  v117 = a2;
  if (v44)
    v43 = v43 != 0;
  if (a2[8] == 1)
  {
    if (v45)
    {
      if (v43 != 1)
        goto LABEL_36;
    }
    else if (v43)
    {
      goto LABEL_36;
    }
  }
  else if (v43 != v45)
  {
    goto LABEL_36;
  }
  v106 = v37;
  v107 = v36;
  v103 = v39;
  v104 = (uint64_t *)v35;
  v101 = (uint64_t *)v38;
  v102 = v40;
  v100 = v5;
  v105 = v4;
  v46 = type metadata accessor for CRLProto_TextSelection(0);
  v47 = v115;
  sub_1004CB7BC((uint64_t)v115 + *(int *)(v46 + 24), (uint64_t)v42, (uint64_t *)&unk_1013E16F0);
  v48 = (int *)v46;
  sub_1004CB7BC((uint64_t)&v117[*(int *)(v46 + 24)], (uint64_t)v33, (uint64_t *)&unk_1013E16F0);
  v49 = (uint64_t)&v21[*(int *)(v116 + 48)];
  sub_1004CB7BC((uint64_t)v42, (uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v33, v49, (uint64_t *)&unk_1013E16F0);
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v51 = v114;
  if (v50((uint64_t)v21, 1, v114) == 1)
  {
    sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v42, (uint64_t *)&unk_1013E16F0);
    if (v50(v49, 1, v51) == 1)
    {
      sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
      goto LABEL_18;
    }
LABEL_15:
    v52 = (uint64_t *)&unk_1013E1AE8;
    v53 = (uint64_t)v21;
LABEL_35:
    sub_1004CB800(v53, v52);
    goto LABEL_36;
  }
  sub_1004CB7BC((uint64_t)v21, (uint64_t)v30, (uint64_t *)&unk_1013E16F0);
  if (v50(v49, 1, v51) == 1)
  {
    sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v42, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
    goto LABEL_15;
  }
  sub_1004B84E0(v49, (uint64_t)v15, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v30, v30[1]);
  if ((v54 & 1) == 0)
  {
    sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v42, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
    v53 = (uint64_t)v21;
LABEL_25:
    v52 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_35;
  }
  v55 = *(int *)(v51 + 20);
  v56 = (char *)v30 + v55;
  v99 = &v15[v55];
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v56) = dispatch thunk of static Equatable.== infix(_:_:)(v56, v99);
  sub_1004B84A4((uint64_t)v15, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v33, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v42, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v21, (uint64_t *)&unk_1013E16F0);
  if ((v56 & 1) == 0)
    goto LABEL_36;
LABEL_18:
  v57 = v48;
  v58 = v107;
  sub_1004CB7BC((uint64_t)v47 + v48[7], v107, (uint64_t *)&unk_1013E16F0);
  v59 = v106;
  sub_1004CB7BC((uint64_t)&v117[v48[7]], v106, (uint64_t *)&unk_1013E16F0);
  v60 = v113;
  v61 = v113 + *(int *)(v116 + 48);
  sub_1004CB7BC(v58, v113, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC(v59, v61, (uint64_t *)&unk_1013E16F0);
  if (v50(v60, 1, v51) == 1)
  {
    sub_1004CB800(v59, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v58, (uint64_t *)&unk_1013E16F0);
    if (v50(v61, 1, v51) == 1)
    {
      sub_1004CB800(v60, (uint64_t *)&unk_1013E16F0);
      goto LABEL_28;
    }
    goto LABEL_23;
  }
  v62 = v104;
  sub_1004CB7BC(v60, (uint64_t)v104, (uint64_t *)&unk_1013E16F0);
  if (v50(v61, 1, v51) == 1)
  {
    sub_1004CB800(v106, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v107, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLProto_Data);
LABEL_23:
    v52 = (uint64_t *)&unk_1013E1AE8;
    v53 = v60;
    goto LABEL_35;
  }
  v63 = v111;
  sub_1004B84E0(v61, v111, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v62, v62[1]);
  if ((v64 & 1) == 0)
  {
    sub_1004B84A4(v63, type metadata accessor for CRLProto_Data);
    sub_1004CB800(v106, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v107, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLProto_Data);
    v53 = v60;
    v52 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_35;
  }
  v65 = *(int *)(v51 + 20);
  v66 = (char *)v62 + v65;
  v67 = v63 + v65;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v66) = dispatch thunk of static Equatable.== infix(_:_:)(v66, v67);
  sub_1004B84A4(v63, type metadata accessor for CRLProto_Data);
  sub_1004CB800(v106, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800(v107, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v62, type metadata accessor for CRLProto_Data);
  sub_1004CB800(v60, (uint64_t *)&unk_1013E16F0);
  if ((v66 & 1) == 0)
    goto LABEL_36;
LABEL_28:
  v68 = v103;
  sub_1004CB7BC((uint64_t)v47 + v57[8], v103, (uint64_t *)&unk_1013E16F0);
  v69 = v102;
  sub_1004CB7BC((uint64_t)&v117[v57[8]], v102, (uint64_t *)&unk_1013E16F0);
  v70 = v112;
  v71 = v112 + *(int *)(v116 + 48);
  sub_1004CB7BC(v68, v112, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC(v69, v71, (uint64_t *)&unk_1013E16F0);
  if (v50(v70, 1, v51) != 1)
  {
    v73 = v101;
    sub_1004CB7BC(v70, (uint64_t)v101, (uint64_t *)&unk_1013E16F0);
    if (v50(v71, 1, v51) == 1)
    {
      sub_1004CB800(v102, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v103, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v73, type metadata accessor for CRLProto_Data);
      goto LABEL_33;
    }
    v76 = v110;
    sub_1004B84E0(v71, v110, type metadata accessor for CRLProto_Data);
    sub_1007B38CC(*v73, v73[1]);
    if ((v77 & 1) != 0)
    {
      v78 = *(int *)(v51 + 20);
      v79 = (char *)v73 + v78;
      v80 = v76 + v78;
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v72 = v105;
      LOBYTE(v79) = dispatch thunk of static Equatable.== infix(_:_:)(v79, v80);
      sub_1004B84A4(v76, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v102, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v103, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v73, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v70, (uint64_t *)&unk_1013E16F0);
      if ((v79 & 1) == 0)
        goto LABEL_36;
      goto LABEL_40;
    }
    sub_1004B84A4(v76, type metadata accessor for CRLProto_Data);
    sub_1004CB800(v102, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v103, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v73, type metadata accessor for CRLProto_Data);
    v53 = v70;
    goto LABEL_25;
  }
  sub_1004CB800(v69, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800(v68, (uint64_t *)&unk_1013E16F0);
  if (v50(v71, 1, v51) != 1)
  {
LABEL_33:
    v52 = (uint64_t *)&unk_1013E1AE8;
    v53 = v70;
    goto LABEL_35;
  }
  sub_1004CB800(v70, (uint64_t *)&unk_1013E16F0);
  v72 = v105;
LABEL_40:
  v81 = v57[9];
  v82 = (_DWORD *)((char *)v115 + v81);
  v83 = *((_BYTE *)v115 + v81 + 4);
  v84 = &v117[v81];
  v85 = v117[v81 + 4];
  if ((v83 & 1) != 0)
  {
    v86 = v100;
    if (!v85)
      goto LABEL_36;
  }
  else
  {
    if (*v82 != *(_DWORD *)v84)
      LOBYTE(v85) = 1;
    v86 = v100;
    if ((v85 & 1) != 0)
      goto LABEL_36;
  }
  v87 = v57[10];
  v88 = *((unsigned __int8 *)v115 + v87);
  v89 = v117[v87];
  if (v88 == 2)
  {
    if (v89 != 2)
      goto LABEL_36;
  }
  else if (v89 == 2 || ((((v89 & 1) == 0) ^ v88) & 1) == 0)
  {
    goto LABEL_36;
  }
  v90 = v57[11];
  v91 = (_DWORD *)((char *)v115 + v90);
  v92 = *((_BYTE *)v115 + v90 + 4);
  v93 = &v117[v90];
  v94 = v117[v90 + 4];
  if ((v92 & 1) == 0)
  {
    if (*v91 != *(_DWORD *)v93)
      LOBYTE(v94) = 1;
    if ((v94 & 1) != 0)
      goto LABEL_36;
LABEL_58:
    v95 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
    v96 = v108;
    v95(v108, (char *)v115 + v57[5], v72);
    v97 = v109;
    v95(v109, &v117[v57[5]], v72);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v74 = dispatch thunk of static Equatable.== infix(_:_:)(v96, v97);
    v98 = *(void (**)(char *, uint64_t))(v86 + 8);
    v98(v97, v72);
    v98(v96, v72);
    return v74 & 1;
  }
  if (v94)
    goto LABEL_58;
LABEL_36:
  v74 = 0;
  return v74 & 1;
}

uint64_t sub_100A509D0(unint64_t *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int *v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t, __n128);
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  double *v87;
  uint64_t v88;
  uint64_t *v89;

  v81 = type metadata accessor for UnknownStorage(0);
  v78 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v77 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v76 = (char *)&v76 - v6;
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v79 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v82 = (uint64_t)&v76 - v11;
  v12 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v12);
  v85 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v76 - v15;
  v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v17);
  v80 = (uint64_t *)((char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  v88 = (uint64_t)&v76 - v20;
  __chkstk_darwin(v21);
  v84 = (uint64_t)&v76 - v22;
  __chkstk_darwin(v23);
  v89 = (uint64_t *)((char *)&v76 - v24);
  __chkstk_darwin(v25);
  v27 = (char *)&v76 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v76 - v29;
  v31 = type metadata accessor for CRLProto_RealTimeEnter(0);
  v32 = *(int *)(v31 + 24);
  v86 = a1;
  sub_1004CB7BC((uint64_t)a1 + v32, (uint64_t)v30, (uint64_t *)&unk_1013E16F0);
  v33 = (int *)v31;
  v34 = *(int *)(v31 + 24);
  v35 = v7;
  v87 = a2;
  sub_1004CB7BC((uint64_t)a2 + v34, (uint64_t)v27, (uint64_t *)&unk_1013E16F0);
  v83 = v12;
  v36 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_1004CB7BC((uint64_t)v30, (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v27, v36, (uint64_t *)&unk_1013E16F0);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v37((uint64_t)v16, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
    if (v37(v36, 1, v7) == 1)
    {
      sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
      goto LABEL_4;
    }
LABEL_13:
    v52 = (uint64_t *)&unk_1013E1AE8;
    v53 = (uint64_t)v16;
    goto LABEL_25;
  }
  v51 = v89;
  sub_1004CB7BC((uint64_t)v16, (uint64_t)v89, (uint64_t *)&unk_1013E16F0);
  if (v37(v36, 1, v7) == 1)
  {
    sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v51, type metadata accessor for CRLProto_Data);
    goto LABEL_13;
  }
  v54 = v82;
  sub_1004B84E0(v36, v82, type metadata accessor for CRLProto_Data);
  sub_1007B38CC(*v51, v51[1]);
  if ((v55 & 1) == 0)
  {
    sub_1004B84A4(v54, type metadata accessor for CRLProto_Data);
    sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v51, type metadata accessor for CRLProto_Data);
    v53 = (uint64_t)v16;
    v52 = (uint64_t *)&unk_1013E16F0;
    goto LABEL_25;
  }
  v56 = *(int *)(v35 + 20);
  v57 = (char *)v51 + v56;
  v58 = v54 + v56;
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  LOBYTE(v57) = dispatch thunk of static Equatable.== infix(_:_:)(v57, v58);
  sub_1004B84A4(v54, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v27, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v30, (uint64_t *)&unk_1013E16F0);
  sub_1004B84A4((uint64_t)v51, type metadata accessor for CRLProto_Data);
  sub_1004CB800((uint64_t)v16, (uint64_t *)&unk_1013E16F0);
  if ((v57 & 1) == 0)
    goto LABEL_26;
LABEL_4:
  v38 = v35;
  v39 = v33;
  v40 = v33[7];
  v41 = v86;
  v42 = v84;
  sub_1004CB7BC((uint64_t)v86 + v40, v84, (uint64_t *)&unk_1013E16F0);
  v43 = v87;
  v44 = v88;
  sub_1004CB7BC((uint64_t)v87 + v39[7], v88, (uint64_t *)&unk_1013E16F0);
  v45 = v85;
  v46 = v85 + *(int *)(v83 + 48);
  sub_1004CB7BC(v42, v85, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC(v44, v46, (uint64_t *)&unk_1013E16F0);
  if (v37(v45, 1, v38) != 1)
  {
    v59 = v80;
    sub_1004CB7BC(v45, (uint64_t)v80, (uint64_t *)&unk_1013E16F0);
    if (v37(v46, 1, v38) == 1)
    {
      sub_1004CB800(v88, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v42, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v59, type metadata accessor for CRLProto_Data);
      goto LABEL_19;
    }
    v60 = v38;
    v61 = v79;
    sub_1004B84E0(v46, v79, type metadata accessor for CRLProto_Data);
    sub_1007B38CC(*v59, v59[1]);
    if ((v62 & 1) != 0)
    {
      v63 = *(int *)(v60 + 20);
      v64 = (char *)v59 + v63;
      v65 = v61 + v63;
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      LOBYTE(v64) = dispatch thunk of static Equatable.== infix(_:_:)(v64, v65);
      sub_1004B84A4(v61, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v88, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800(v42, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v59, type metadata accessor for CRLProto_Data);
      sub_1004CB800(v45, (uint64_t *)&unk_1013E16F0);
      if ((v64 & 1) == 0)
        goto LABEL_26;
      goto LABEL_7;
    }
    sub_1004B84A4(v61, type metadata accessor for CRLProto_Data);
    sub_1004CB800(v88, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800(v42, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v59, type metadata accessor for CRLProto_Data);
    v53 = v45;
    v52 = (uint64_t *)&unk_1013E16F0;
LABEL_25:
    sub_1004CB800(v53, v52);
    goto LABEL_26;
  }
  sub_1004CB800(v44, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800(v42, (uint64_t *)&unk_1013E16F0);
  if (v37(v46, 1, v38) != 1)
  {
LABEL_19:
    v52 = (uint64_t *)&unk_1013E1AE8;
    v53 = v45;
    goto LABEL_25;
  }
  sub_1004CB800(v45, (uint64_t *)&unk_1013E16F0);
LABEL_7:
  v47.n128_u64[0] = *v41;
  if (*(double *)v41 == *v43)
  {
    v48 = v39[8];
    v49 = *((unsigned __int8 *)v41 + v48);
    v50 = *((unsigned __int8 *)v43 + v48);
    if (v49 == 2)
    {
      if (v50 == 2)
      {
LABEL_30:
        v68 = (char *)v41 + v39[5];
        v69 = v78;
        v70 = *(void (**)(char *, char *, uint64_t, __n128))(v78 + 16);
        v71 = v76;
        v72 = v81;
        v70(v76, v68, v81, v47);
        v73 = (char *)v43 + v39[5];
        v74 = v77;
        ((void (*)(char *, char *, uint64_t))v70)(v77, v73, v72);
        sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v66 = dispatch thunk of static Equatable.== infix(_:_:)(v71, v74);
        v75 = *(void (**)(char *, uint64_t))(v69 + 8);
        v75(v74, v72);
        v75(v71, v72);
        return v66 & 1;
      }
    }
    else if (v50 != 2 && ((((v50 & 1) == 0) ^ v49) & 1) != 0)
    {
      goto LABEL_30;
    }
  }
LABEL_26:
  v66 = 0;
  return v66 & 1;
}

uint64_t sub_100A51178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && sub_10054431C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8))
    && (sub_100544E0C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) != 0
    && (sub_100545680(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24)) & 1) != 0
    && (sub_100545F18(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
    && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
    && sub_10054431C(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48))
    && sub_10054431C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56)))
  {
    v11 = type metadata accessor for CRLProto_ObjectInfo(0);
    v12 = a1 + *(int *)(v11 + 48);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v7, a2 + *(int *)(v11 + 48), v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v14 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100A5131C(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - v9;
  v11 = a1[1];
  v12 = *((_QWORD *)a2 + 1);
  v13 = *a1 == *(_QWORD *)a2 && v11 == v12;
  if (v13 || (v14 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(*a1, v11, *(_QWORD *)a2, v12, 0) & 1) != 0))
  {
    if (a1[2] == *((_QWORD *)a2 + 2))
    {
      v15 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
      v16 = (char *)a1 + *(int *)(v15 + 24);
      v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v17(v10, v16, v4);
      v17(v7, &a2[*(int *)(v15 + 24)], v4);
      sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
      v14 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
    }
    else
    {
      v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t sub_100A51474(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;

  v4 = type metadata accessor for UnknownStorage(0);
  v49 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v48 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v47 = (char *)&v45 - v7;
  v8 = type metadata accessor for CRLProto_Data(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v46 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v45 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v50 = a2;
  if (v23 == v25 && v24 == v26
    || (v27 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v25, v26, 0) & 1) != 0))
  {
    v45 = v4;
    v28 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
    sub_1004CB7BC((uint64_t)a1 + *(int *)(v28 + 24), (uint64_t)v22, (uint64_t *)&unk_1013E16F0);
    sub_1004CB7BC((uint64_t)&v50[*(int *)(v28 + 24)], (uint64_t)v19, (uint64_t *)&unk_1013E16F0);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_1004CB7BC((uint64_t)v22, (uint64_t)v13, (uint64_t *)&unk_1013E16F0);
    sub_1004CB7BC((uint64_t)v19, v29, (uint64_t *)&unk_1013E16F0);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E16F0);
      if (v30(v29, 1, v8) == 1)
      {
        sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
LABEL_12:
        v38 = v49;
        v39 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
        v40 = v47;
        v41 = v45;
        v39(v47, (char *)a1 + *(int *)(v28 + 20), v45);
        v42 = v48;
        v39(v48, &v50[*(int *)(v28 + 20)], v41);
        sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v27 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v42);
        v43 = *(void (**)(char *, uint64_t))(v38 + 8);
        v43(v42, v41);
        v43(v40, v41);
        return v27 & 1;
      }
    }
    else
    {
      sub_1004CB7BC((uint64_t)v13, (uint64_t)v16, (uint64_t *)&unk_1013E16F0);
      if (v30(v29, 1, v8) != 1)
      {
        v33 = v46;
        sub_1004B84E0(v29, v46, type metadata accessor for CRLProto_Data);
        sub_1007B38CC(*v16, v16[1]);
        if ((v34 & 1) != 0)
        {
          v35 = *(int *)(v8 + 20);
          v36 = (char *)v16 + v35;
          v37 = v33 + v35;
          sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
          LOBYTE(v36) = dispatch thunk of static Equatable.== infix(_:_:)(v36, v37);
          sub_1004B84A4(v33, type metadata accessor for CRLProto_Data);
          sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
          sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E16F0);
          sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLProto_Data);
          sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E16F0);
          if ((v36 & 1) != 0)
            goto LABEL_12;
LABEL_15:
          v27 = 0;
          return v27 & 1;
        }
        sub_1004B84A4(v33, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
        sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E16F0);
        sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLProto_Data);
        v32 = (uint64_t)v13;
        v31 = (uint64_t *)&unk_1013E16F0;
LABEL_14:
        sub_1004CB800(v32, v31);
        goto LABEL_15;
      }
      sub_1004CB800((uint64_t)v19, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v22, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v16, type metadata accessor for CRLProto_Data);
    }
    v31 = (uint64_t *)&unk_1013E1AE8;
    v32 = (uint64_t)v13;
    goto LABEL_14;
  }
  return v27 & 1;
}

uint64_t sub_100A5190C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, __n128))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;

  v6 = type metadata accessor for UnknownStorage(0);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  __chkstk_darwin(v6);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v48 = (char *)&v46 - v9;
  v10 = type metadata accessor for CRLProto_Data(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v52 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1004B804C((uint64_t *)&unk_1013E1AE8);
  __chkstk_darwin(v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  __chkstk_darwin(v16);
  v53 = (uint64_t *)((char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v20 = (char *)&v46 - v19;
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v46 - v23;
  v25 = a3(0, v22);
  v26 = *(int *)(v25 + 20);
  v46 = a1;
  sub_1004CB7BC(a1 + v26, (uint64_t)v24, (uint64_t *)&unk_1013E16F0);
  v27 = *(int *)(v25 + 20);
  v47 = a2;
  sub_1004CB7BC(a2 + v27, (uint64_t)v20, (uint64_t *)&unk_1013E16F0);
  v28 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_1004CB7BC((uint64_t)v24, (uint64_t)v15, (uint64_t *)&unk_1013E16F0);
  sub_1004CB7BC((uint64_t)v20, v28, (uint64_t *)&unk_1013E16F0);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v29((uint64_t)v15, 1, v10) != 1)
  {
    v31 = (uint64_t)v52;
    v32 = v53;
    sub_1004CB7BC((uint64_t)v15, (uint64_t)v53, (uint64_t *)&unk_1013E16F0);
    if (v29(v28, 1, v10) != 1)
    {
      sub_1004B84E0(v28, v31, type metadata accessor for CRLProto_Data);
      sub_1007B38CC(*v32, v32[1]);
      if ((v35 & 1) != 0)
      {
        v36 = *(int *)(v10 + 20);
        v37 = (char *)v32 + v36;
        v38 = v31 + v36;
        sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
        v30 = v51;
        LOBYTE(v37) = dispatch thunk of static Equatable.== infix(_:_:)(v37, v38);
        sub_1004B84A4(v31, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
        sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E16F0);
        sub_1004B84A4((uint64_t)v32, type metadata accessor for CRLProto_Data);
        sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E16F0);
        if ((v37 & 1) != 0)
          goto LABEL_9;
LABEL_12:
        v43 = 0;
        return v43 & 1;
      }
      sub_1004B84A4(v31, type metadata accessor for CRLProto_Data);
      sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
      sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E16F0);
      sub_1004B84A4((uint64_t)v32, type metadata accessor for CRLProto_Data);
      v34 = (uint64_t)v15;
      v33 = (uint64_t *)&unk_1013E16F0;
LABEL_11:
      sub_1004CB800(v34, v33);
      goto LABEL_12;
    }
    sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
    sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E16F0);
    sub_1004B84A4((uint64_t)v32, type metadata accessor for CRLProto_Data);
LABEL_6:
    v33 = (uint64_t *)&unk_1013E1AE8;
    v34 = (uint64_t)v15;
    goto LABEL_11;
  }
  sub_1004CB800((uint64_t)v20, (uint64_t *)&unk_1013E16F0);
  sub_1004CB800((uint64_t)v24, (uint64_t *)&unk_1013E16F0);
  if (v29(v28, 1, v10) != 1)
    goto LABEL_6;
  sub_1004CB800((uint64_t)v15, (uint64_t *)&unk_1013E16F0);
  v30 = v51;
LABEL_9:
  v39 = v50;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v41 = v48;
  v40(v48, v46, v30);
  v42 = v49;
  v40(v49, v47, v30);
  sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
  v43 = dispatch thunk of static Equatable.== infix(_:_:)(v41, v42);
  v44 = *(void (**)(char *, uint64_t))(v39 + 8);
  v44(v42, v30);
  v44(v41, v30);
  return v43 & 1;
}

uint64_t sub_100A51D74(float *a1, float *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - v11;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    v13 = a3(0);
    v14 = (char *)a1 + *(int *)(v13 + 24);
    v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v15(v12, v14, v6);
    v15(v9, (char *)a2 + *(int *)(v13 + 24), v6);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v16 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v9);
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v9, v6);
    v17(v12, v6);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_100A51EBC(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3])
  {
    v11 = type metadata accessor for CRLProto_Rect(0);
    v12 = (char *)a1 + *(int *)(v11 + 32);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v7, (char *)a2 + *(int *)(v11 + 32), v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v14 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100A52020(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - v9;
  if ((sub_100547074(*a1, *a2) & 1) != 0)
  {
    v11 = type metadata accessor for CRLProto_Path(0);
    v12 = (char *)a1 + *(int *)(v11 + 20);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v7, (char *)a2 + *(int *)(v11 + 20), v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v14 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100A52154(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - v9;
  v11 = *a2;
  if (*((_BYTE *)a2 + 8) == 1)
    __asm { BR              X11 }
  if (*a1 == v11
    && (sub_1007B38CC(a1[2], a1[3]), (v12 & 1) != 0)
    && (sub_1007B38CC(a1[4], a1[5]), (v13 & 1) != 0)
    && (sub_1007B38CC(a1[6], a1[7]), (v14 & 1) != 0))
  {
    v15 = type metadata accessor for CRLProto_Path.Element(0);
    v16 = (char *)a1 + *(int *)(v15 + 32);
    v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v17(v10, v16, v4);
    v17(v7, (char *)a2 + *(int *)(v15 + 32), v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v7, v4);
    v19(v10, v4);
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_100A52308(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2)
  {
    v11 = type metadata accessor for CRLProto_Date(0);
    v12 = (char *)a1 + *(int *)(v11 + 20);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v7, (char *)a2 + *(int *)(v11 + 20), v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v14 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100A5243C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = type metadata accessor for UnknownStorage(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v18 - v9;
  sub_1007B38CC(*a1, a1[1]);
  if ((v11 & 1) != 0)
  {
    v12 = type metadata accessor for CRLProto_Data(0);
    v13 = (char *)a1 + *(int *)(v12 + 20);
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v7, (char *)(a2 + *(int *)(v12 + 20)), v4);
    sub_1004B7878(&qword_1013E1AE0, (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage, (uint64_t)&protocol conformance descriptor for UnknownStorage);
    v15 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7);
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

unint64_t sub_100A52570()
{
  unint64_t result;

  result = qword_101403978;
  if (!qword_101403978)
  {
    result = swift_getWitnessTable(&unk_100F26D50, &type metadata for CRLProto_Path.ElementType);
    atomic_store(result, (unint64_t *)&qword_101403978);
  }
  return result;
}

unint64_t sub_100A525B4()
{
  unint64_t result;

  result = qword_1014039B0;
  if (!qword_1014039B0)
  {
    result = swift_getWitnessTable(&unk_100F26D08, &type metadata for CRLProto_TextSelection.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1014039B0);
  }
  return result;
}

uint64_t *sub_100A525F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100A52680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_100A526B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100A52714(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100A52774(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100A527D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A527DC);
}

uint64_t sub_100A527DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_100A5281C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A52828);
}

uint64_t sub_100A52828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_100A5286C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A53240(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

uint64_t sub_100A52894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A528A0);
}

uint64_t sub_100A528A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A528B0);
}

uint64_t sub_100A528B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A5EAA0(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int32 + 64, (uint64_t)&value witness table for Builtin.Int32 + 64);
}

uint64_t *sub_100A528C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100A52950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_100A52988(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *sub_100A529E4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100A52A48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100A52AA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100A52B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A52B0C);
}

uint64_t sub_100A52B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_100A52B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A52B5C);
}

uint64_t sub_100A52B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t *sub_100A52BA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 32);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100A52C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_100A52C64(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *sub_100A52CC0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_100A52D34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_100A52D90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100A52DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A52DF8);
}

uint64_t sub_100A52DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_100A52E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A52E44);
}

uint64_t sub_100A52E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 32);
  v6 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_100A52E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A537B0(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int32 + 64, (uint64_t)&value witness table for Builtin.Int32 + 64);
}

uint64_t *sub_100A52E9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for UnknownStorage(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100A52F34(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_100A52F7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_100A52FEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_QWORD *sub_100A53060(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100A530BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100A53128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A53134);
}

uint64_t sub_100A53134(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100A531B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A531BC);
}

char *sub_100A531BC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A53230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A53240(a1, a2, a3, (uint64_t)&value witness table for Builtin.BridgeObject + 64);
}

uint64_t sub_100A53240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  v7[0] = a4;
  result = type metadata accessor for UnknownStorage(319);
  if (v6 <= 0x3F)
  {
    v7[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v7, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLProto_Path.ElementType()
{
  return &type metadata for CRLProto_Path.ElementType;
}

_QWORD *sub_100A532BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a2[2];
    v8 = a2[3];
    sub_1004BE310(v7, v8);
    v4[2] = v7;
    v4[3] = v8;
    v9 = a2[4];
    v10 = a2[5];
    sub_1004BE310(v9, v10);
    v4[4] = v9;
    v4[5] = v10;
    v11 = a2[6];
    v12 = a2[7];
    sub_1004BE310(v11, v12);
    v4[6] = v11;
    v4[7] = v12;
    v13 = *(int *)(a3 + 32);
    v14 = (char *)v4 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_100A53398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1004BBBC8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_1004BBBC8(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  sub_1004BBBC8(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100A533F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  sub_1004BE310(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  sub_1004BE310(v8, v9);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_1004BE310(v10, v11);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v12 = *(int *)(a3 + 32);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_100A534A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  v8 = a2[3];
  sub_1004BE310(v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  sub_1004BBBC8(v9, v10);
  v11 = a2[4];
  v12 = a2[5];
  sub_1004BE310(v11, v12);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v12;
  sub_1004BBBC8(v13, v14);
  v15 = a2[6];
  v16 = a2[7];
  sub_1004BE310(v15, v16);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 56) = v16;
  sub_1004BBBC8(v17, v18);
  v19 = *(int *)(a3 + 32);
  v20 = a1 + v19;
  v21 = (uint64_t)a2 + v19;
  v22 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_100A5356C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100A535E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1004BBBC8(v6, v7);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_1004BBBC8(v8, v9);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_1004BBBC8(v10, v11);
  v12 = *(int *)(a3 + 32);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_100A53680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5368C);
}

uint64_t sub_100A5368C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 24) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100A53714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A53720);
}

uint64_t sub_100A53720(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A5379C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A537B0(a1, a2, a3, (uint64_t)"\t", (uint64_t)&unk_100F23868);
}

uint64_t sub_100A537B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  unint64_t v7;
  _QWORD v8[5];

  v8[0] = a4;
  v8[1] = a5;
  v8[2] = a5;
  v8[3] = a5;
  result = type metadata accessor for UnknownStorage(319);
  if (v7 <= 0x3F)
  {
    v8[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_100A53820(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v55)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11, v13);
    v14 = a3[6];
    v15 = (_QWORD *)((char *)v7 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for CRLProto_Path(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_1004B804C(&qword_1013FF2E8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      v21 = *(int *)(v17 + 20);
      v22 = (char *)v15 + v21;
      v23 = (char *)v16 + v21;
      v24 = swift_bridgeObjectRetain(v20);
      v12(v22, v23, v11, v24);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v25 = a3[7];
    v26 = a3[8];
    v27 = (char *)v7 + v25;
    v28 = (char *)a2 + v25;
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    v29 = (_QWORD *)((char *)v7 + v26);
    v30 = (_QWORD *)((char *)a2 + v26);
    v31 = type metadata accessor for CRLProto_Date(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_1004B804C(&qword_1013FF2D8);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      *v29 = *v30;
      ((void (*)(char *, char *, uint64_t))v12)((char *)v29 + *(int *)(v31 + 20), (char *)v30 + *(int *)(v31 + 20), v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = a3[9];
    v35 = a3[10];
    v36 = (char *)v7 + v34;
    v37 = (char *)a2 + v34;
    *(_DWORD *)v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    v38 = (char *)v7 + v35;
    v39 = (char *)a2 + v35;
    *(_DWORD *)v38 = *(_DWORD *)v39;
    v38[4] = v39[4];
    v40 = a3[11];
    v41 = (_QWORD *)((char *)v7 + v40);
    v42 = (_QWORD *)((char *)a2 + v40);
    v43 = type metadata accessor for CRLProto_Point(0);
    v44 = *(_QWORD *)(v43 - 8);
    v55 = (void (*)(char *, char *, uint64_t))v12;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = sub_1004B804C(&qword_1013FA7B0);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      *v41 = *v42;
      ((void (*)(char *, char *, uint64_t))v12)((char *)v41 + *(int *)(v43 + 24), (char *)v42 + *(int *)(v43 + 24), v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = a3[12];
    v47 = (_QWORD *)((char *)v7 + v46);
    v48 = (_QWORD *)((char *)a2 + v46);
    v49 = type metadata accessor for CRLProto_Data(0);
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v52 = *v48;
      v53 = v48[1];
      sub_1004BE310(*v48, v53);
      *v47 = v52;
      v47[1] = v53;
      v55((char *)v47 + *(int *)(v49 + 20), (char *)v48 + *(int *)(v49 + 20), v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *((_BYTE *)v7 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  }
  return v7;
}

uint64_t sub_100A53B80(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  void (*v16)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for UnknownStorage(0);
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v16(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for CRLProto_Path(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v16)(v6 + *(int *)(v7 + 20), v5, v8);
  }
  v9 = a1 + a2[8];
  v10 = type metadata accessor for CRLProto_Date(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    v16(v9 + *(int *)(v10 + 20), v5);
  v11 = a1 + a2[11];
  v12 = type metadata accessor for CRLProto_Point(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    v16(v11 + *(int *)(v12 + 24), v5);
  v13 = a1 + a2[12];
  v14 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v13, *(_QWORD *)(v13 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v16)(v13 + *(int *)(v14 + 20), v5);
  }
  return result;
}

_QWORD *sub_100A53D20(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v54)(char *, char *, uint64_t);

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10, v12);
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Path(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_1004B804C(&qword_1013FF2E8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = *v15;
    *v14 = *v15;
    v20 = *(int *)(v16 + 20);
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    v23 = swift_bridgeObjectRetain(v19);
    v11(v21, v22, v10, v23);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v24 = a3[7];
  v25 = a3[8];
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  *(_DWORD *)v26 = *(_DWORD *)v27;
  v26[4] = v27[4];
  v28 = (_QWORD *)((char *)a1 + v25);
  v29 = (_QWORD *)((char *)a2 + v25);
  v30 = type metadata accessor for CRLProto_Date(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = sub_1004B804C(&qword_1013FF2D8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    *v28 = *v29;
    ((void (*)(char *, char *, uint64_t))v11)((char *)v28 + *(int *)(v30 + 20), (char *)v29 + *(int *)(v30 + 20), v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v33 = a3[9];
  v34 = a3[10];
  v35 = (char *)a1 + v33;
  v36 = (char *)a2 + v33;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  v35[4] = v36[4];
  v37 = (char *)a1 + v34;
  v38 = (char *)a2 + v34;
  *(_DWORD *)v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  v39 = a3[11];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = type metadata accessor for CRLProto_Point(0);
  v43 = *(_QWORD *)(v42 - 8);
  v54 = (void (*)(char *, char *, uint64_t))v11;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    v44 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    *v40 = *v41;
    ((void (*)(char *, char *, uint64_t))v11)((char *)v40 + *(int *)(v42 + 24), (char *)v41 + *(int *)(v42 + 24), v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  v45 = a3[12];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = type metadata accessor for CRLProto_Data(0);
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v51 = *v47;
    v52 = v47[1];
    sub_1004BE310(*v47, v52);
    *v46 = v51;
    v46[1] = v52;
    v54((char *)v46 + *(int *)(v48 + 20), (char *)v47 + *(int *)(v48 + 20), v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_QWORD *sub_100A54058(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;

  v6 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v75 = *(_QWORD *)(v10 - 8);
  v74 = *(void (**)(char *, char *, uint64_t))(v75 + 24);
  v74(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Path(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      v19 = *v13;
      *v12 = *v13;
      v20 = *(int *)(v14 + 20);
      v21 = (char *)v12 + v20;
      v22 = (char *)v13 + v20;
      v23 = *(void (**)(char *, char *, uint64_t, __n128))(v75 + 16);
      v24 = swift_bridgeObjectRetain(v19);
      v23(v21, v22, v10, v24);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Path);
LABEL_6:
    v25 = sub_1004B804C(&qword_1013FF2E8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  v68 = *v13;
  *v12 = *v13;
  swift_bridgeObjectRetain(v68);
  v69 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v74)((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v10, v69);
LABEL_7:
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_DWORD *)v28;
  v27[4] = v28[4];
  *(_DWORD *)v27 = v29;
  v30 = a3[8];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for CRLProto_Date(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(&v31[*(int *)(v33 + 20)], &v32[*(int *)(v33 + 20)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v37)
  {
    sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLProto_Date);
LABEL_12:
    v38 = sub_1004B804C(&qword_1013FF2D8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v74(&v31[*(int *)(v33 + 20)], &v32[*(int *)(v33 + 20)], v10);
LABEL_13:
  v39 = a3[9];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = *(_DWORD *)v41;
  v40[4] = v41[4];
  *(_DWORD *)v40 = v42;
  v43 = a3[10];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = *(_DWORD *)v45;
  v44[4] = v45[4];
  *(_DWORD *)v44 = v46;
  v47 = a3[11];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = type metadata accessor for CRLProto_Point(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      *(_DWORD *)v48 = *(_DWORD *)v49;
      *((_DWORD *)v48 + 1) = *((_DWORD *)v49 + 1);
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(&v48[*(int *)(v50 + 24)], &v49[*(int *)(v50 + 24)], v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v54)
  {
    sub_1004B84A4((uint64_t)v48, type metadata accessor for CRLProto_Point);
LABEL_18:
    v55 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v48 = *(_DWORD *)v49;
  *((_DWORD *)v48 + 1) = *((_DWORD *)v49 + 1);
  v74(&v48[*(int *)(v50 + 24)], &v49[*(int *)(v50 + 24)], v10);
LABEL_19:
  v56 = a3[12];
  v57 = (_QWORD *)((char *)a1 + v56);
  v58 = (_QWORD *)((char *)a2 + v56);
  v59 = type metadata accessor for CRLProto_Data(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 1, v59);
  v63 = v61(v58, 1, v59);
  if (!v62)
  {
    if (!v63)
    {
      v70 = *v58;
      v71 = v58[1];
      sub_1004BE310(*v58, v71);
      v72 = *v57;
      v73 = v57[1];
      *v57 = v70;
      v57[1] = v71;
      sub_1004BBBC8(v72, v73);
      v74((char *)v57 + *(int *)(v59 + 20), (char *)v58 + *(int *)(v59 + 20), v10);
      goto LABEL_25;
    }
    sub_1004B84A4((uint64_t)v57, type metadata accessor for CRLProto_Data);
    goto LABEL_24;
  }
  if (v63)
  {
LABEL_24:
    v66 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_25;
  }
  v64 = *v58;
  v65 = v58[1];
  sub_1004BE310(*v58, v65);
  *v57 = v64;
  v57[1] = v65;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))((char *)v57 + *(int *)(v59 + 20), (char *)v58 + *(int *)(v59 + 20), v10);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
LABEL_25:
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_QWORD *sub_100A54534(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Path(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C(&qword_1013FF2E8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[7];
  v18 = a3[8];
  v19 = (char *)a1 + v17;
  v20 = (char *)a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  v21 = (_QWORD *)((char *)a1 + v18);
  v22 = (_QWORD *)((char *)a2 + v18);
  v23 = type metadata accessor for CRLProto_Date(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_1004B804C(&qword_1013FF2D8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    v10((char *)v21 + *(int *)(v23 + 20), (char *)v22 + *(int *)(v23 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[9];
  v27 = a3[10];
  v28 = (char *)a1 + v26;
  v29 = (char *)a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  v28[4] = v29[4];
  v30 = (char *)a1 + v27;
  v31 = (char *)a2 + v27;
  *(_DWORD *)v30 = *(_DWORD *)v31;
  v30[4] = v31[4];
  v32 = a3[11];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  v35 = type metadata accessor for CRLProto_Point(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *v33 = *v34;
    v10((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = a3[12];
  v39 = (_OWORD *)((char *)a1 + v38);
  v40 = (_OWORD *)((char *)a2 + v38);
  v41 = type metadata accessor for CRLProto_Data(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    *v39 = *v40;
    v10((char *)v39 + *(int *)(v41 + 20), (char *)v40 + *(int *)(v41 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_QWORD *sub_100A5483C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  __n128 v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v60 = *(_QWORD *)(v9 - 8);
  v59 = *(void (**)(char *, char *, uint64_t))(v60 + 40);
  v59(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for CRLProto_Path(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Path);
LABEL_6:
    v18 = sub_1004B804C(&qword_1013FF2E8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v56 = swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t, __n128))v59)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9, v56);
LABEL_7:
  v19 = a3[7];
  v20 = a3[8];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  v23 = (char *)a1 + v20;
  v24 = (char *)a2 + v20;
  v25 = type metadata accessor for CRLProto_Date(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_1004B84A4((uint64_t)v23, type metadata accessor for CRLProto_Date);
LABEL_12:
    v30 = sub_1004B804C(&qword_1013FF2D8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v59(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v9);
LABEL_13:
  v31 = a3[9];
  v32 = a3[10];
  v33 = (char *)a1 + v31;
  v34 = (char *)a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  v33[4] = v34[4];
  v35 = (char *)a1 + v32;
  v36 = (char *)a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  v35[4] = v36[4];
  v37 = a3[11];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = type metadata accessor for CRLProto_Point(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v43 = v42(v38, 1, v40);
  v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      *(_QWORD *)v38 = *(_QWORD *)v39;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v38[*(int *)(v40 + 24)], &v39[*(int *)(v40 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v44)
  {
    sub_1004B84A4((uint64_t)v38, type metadata accessor for CRLProto_Point);
LABEL_18:
    v45 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_19;
  }
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v59(&v38[*(int *)(v40 + 24)], &v39[*(int *)(v40 + 24)], v9);
LABEL_19:
  v46 = a3[12];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v49 = type metadata accessor for CRLProto_Data(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48);
  v52 = v51(v47, 1, v49);
  v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (!v53)
    {
      v57 = *v47;
      v58 = v47[1];
      *(_OWORD *)v47 = *(_OWORD *)v48;
      sub_1004BBBC8(v57, v58);
      v59((char *)v47 + *(int *)(v49 + 20), (char *)v48 + *(int *)(v49 + 20), v9);
      goto LABEL_25;
    }
    sub_1004B84A4((uint64_t)v47, type metadata accessor for CRLProto_Data);
    goto LABEL_24;
  }
  if (v53)
  {
LABEL_24:
    v54 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_25;
  }
  *(_OWORD *)v47 = *(_OWORD *)v48;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))((char *)v47 + *(int *)(v49 + 20), (char *)v48 + *(int *)(v49 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
LABEL_25:
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

uint64_t sub_100A54CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A54CD8);
}

uint64_t sub_100A54CD8(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_1004B804C(&qword_1013FF2E8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = sub_1004B804C(&qword_1013FF2D8);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[8];
        }
        else
        {
          v14 = sub_1004B804C(&qword_1013FA7B0);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[11];
          }
          else
          {
            v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
            v9 = *(_QWORD *)(v10 - 8);
            v11 = a3[12];
          }
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_100A54DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A54E00);
}

char *sub_100A54E00(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_1004B804C(&qword_1013FF2E8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = sub_1004B804C(&qword_1013FF2D8);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[8];
        }
        else
        {
          v14 = sub_1004B804C(&qword_1013FA7B0);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[11];
          }
          else
          {
            v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
            v9 = *(_QWORD *)(v10 - 8);
            v11 = a4[12];
          }
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_100A54F18(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[10];

  v12[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v12[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, &qword_101403E80, type metadata accessor for CRLProto_Path);
    if (v5 <= 0x3F)
    {
      v12[2] = *(_QWORD *)(v4 - 8) + 64;
      v12[3] = &unk_100F26840;
      sub_1007018C8(319, &qword_101403E88, type metadata accessor for CRLProto_Date);
      if (v7 <= 0x3F)
      {
        v12[4] = *(_QWORD *)(v6 - 8) + 64;
        v12[5] = &unk_100F26840;
        v12[6] = &unk_100F26840;
        sub_1007018C8(319, (unint64_t *)&unk_101403E90, type metadata accessor for CRLProto_Point);
        if (v9 <= 0x3F)
        {
          v12[7] = *(_QWORD *)(v8 - 8) + 64;
          sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
          if (v11 <= 0x3F)
          {
            v12[8] = *(_QWORD *)(v10 - 8) + 64;
            v12[9] = &unk_100F26858;
            swift_initStructMetadata(a1, 256, 10, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t *sub_100A55054(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v27);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1004BE310(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[2];
    v10 = a2[3];
    sub_1004BE310(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    v11 = a2[4];
    v12 = a2[5];
    sub_1004BE310(v11, v12);
    a1[4] = v11;
    a1[5] = v12;
    v13 = a2[6];
    v14 = a2[7];
    sub_1004BE310(v13, v14);
    a1[6] = v13;
    a1[7] = v14;
    v15 = a2[8];
    v16 = a2[9];
    sub_1004BE310(v15, v16);
    a1[8] = v15;
    a1[9] = v16;
    v17 = a2[10];
    v18 = a2[11];
    sub_1004BE310(v17, v18);
    a1[10] = v17;
    a1[11] = v18;
    v19 = a2[12];
    v20 = a2[13];
    sub_1004BE310(v19, v20);
    a1[12] = v19;
    a1[13] = v20;
    v21 = a2[14];
    v22 = a2[15];
    sub_1004BE310(v21, v22);
    a1[14] = v21;
    a1[15] = v22;
    v23 = *(int *)(a3 + 48);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for UnknownStorage(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t sub_100A55184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1004BBBC8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_1004BBBC8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_1004BBBC8(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  sub_1004BBBC8(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  sub_1004BBBC8(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  sub_1004BBBC8(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  sub_1004BBBC8(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1004BBBC8(*(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  v4 = a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_100A55208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = *a2;
  v7 = a2[1];
  sub_1004BE310(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[2];
  v9 = a2[3];
  sub_1004BE310(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  v10 = a2[4];
  v11 = a2[5];
  sub_1004BE310(v10, v11);
  a1[4] = v10;
  a1[5] = v11;
  v12 = a2[6];
  v13 = a2[7];
  sub_1004BE310(v12, v13);
  a1[6] = v12;
  a1[7] = v13;
  v14 = a2[8];
  v15 = a2[9];
  sub_1004BE310(v14, v15);
  a1[8] = v14;
  a1[9] = v15;
  v16 = a2[10];
  v17 = a2[11];
  sub_1004BE310(v16, v17);
  a1[10] = v16;
  a1[11] = v17;
  v18 = a2[12];
  v19 = a2[13];
  sub_1004BE310(v18, v19);
  a1[12] = v18;
  a1[13] = v19;
  v20 = a2[14];
  v21 = a2[15];
  sub_1004BE310(v20, v21);
  a1[14] = v20;
  a1[15] = v21;
  v22 = *(int *)(a3 + 48);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

uint64_t *sub_100A5530C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v6 = *a2;
  v7 = a2[1];
  sub_1004BE310(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1004BBBC8(v8, v9);
  v10 = a2[2];
  v11 = a2[3];
  sub_1004BE310(v10, v11);
  v12 = a1[2];
  v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_1004BBBC8(v12, v13);
  v14 = a2[4];
  v15 = a2[5];
  sub_1004BE310(v14, v15);
  v16 = a1[4];
  v17 = a1[5];
  a1[4] = v14;
  a1[5] = v15;
  sub_1004BBBC8(v16, v17);
  v18 = a2[6];
  v19 = a2[7];
  sub_1004BE310(v18, v19);
  v20 = a1[6];
  v21 = a1[7];
  a1[6] = v18;
  a1[7] = v19;
  sub_1004BBBC8(v20, v21);
  v22 = a2[8];
  v23 = a2[9];
  sub_1004BE310(v22, v23);
  v24 = a1[8];
  v25 = a1[9];
  a1[8] = v22;
  a1[9] = v23;
  sub_1004BBBC8(v24, v25);
  v26 = a2[10];
  v27 = a2[11];
  sub_1004BE310(v26, v27);
  v28 = a1[10];
  v29 = a1[11];
  a1[10] = v26;
  a1[11] = v27;
  sub_1004BBBC8(v28, v29);
  v30 = a2[12];
  v31 = a2[13];
  sub_1004BE310(v30, v31);
  v32 = a1[12];
  v33 = a1[13];
  a1[12] = v30;
  a1[13] = v31;
  sub_1004BBBC8(v32, v33);
  v34 = a2[14];
  v35 = a2[15];
  sub_1004BE310(v34, v35);
  v36 = a1[14];
  v37 = a1[15];
  a1[14] = v34;
  a1[15] = v35;
  sub_1004BBBC8(v36, v37);
  v38 = *(int *)(a3 + 48);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

_OWORD *sub_100A55450(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  v8 = *(int *)(a3 + 48);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t *sub_100A554C4(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1004BBBC8(v6, v7);
  v8 = a1[2];
  v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_1004BBBC8(v8, v9);
  v10 = a1[4];
  v11 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_1004BBBC8(v10, v11);
  v12 = a1[6];
  v13 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  sub_1004BBBC8(v12, v13);
  v14 = a1[8];
  v15 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  sub_1004BBBC8(v14, v15);
  v16 = a1[10];
  v17 = a1[11];
  *((_OWORD *)a1 + 5) = a2[5];
  sub_1004BBBC8(v16, v17);
  v18 = a1[12];
  v19 = a1[13];
  *((_OWORD *)a1 + 6) = a2[6];
  sub_1004BBBC8(v18, v19);
  v20 = a1[14];
  v21 = a1[15];
  *((_OWORD *)a1 + 7) = a2[7];
  sub_1004BBBC8(v20, v21);
  v22 = *(int *)(a3 + 48);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t sub_100A555A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A555B0);
}

uint64_t sub_100A555B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 12)
  {
    v4 = *(_QWORD *)(a1 + 8) >> 60;
    if (((4 * (_DWORD)v4) & 0xC) != 0)
      return 16 - ((4 * (_DWORD)v4) & 0xC | (v4 >> 2));
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_100A55638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A55644);
}

char *sub_100A55644(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 12)
  {
    *(_QWORD *)result = 0;
    *((_QWORD *)result + 1) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 48)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A556C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A5A298(a1, a2, a3, (uint64_t)&unk_100F23868, (uint64_t)&unk_100F23868, (uint64_t)&unk_100F23868);
}

_QWORD *sub_100A556D4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[6];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
    v47 = *(_QWORD *)(v15 - 8);
    if (v16(v14, 1, v15))
    {
      v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v45 = v10;
      v19 = v11;
      v20 = *v14;
      v21 = v14[1];
      sub_1004BE310(*v14, v21);
      *v13 = v20;
      v13[1] = v21;
      v11 = v19;
      v10 = v45;
      v11((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v45);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v13, 0, 1, v15);
    }
    v22 = a3[7];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    if (v16((uint64_t *)((char *)a2 + v22), 1, v15))
    {
      v25 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v46 = v10;
      v26 = v11;
      v27 = *v24;
      v28 = v24[1];
      sub_1004BE310(*v24, v28);
      *v23 = v27;
      v23[1] = v28;
      v11 = v26;
      v10 = v46;
      v11((uint64_t)v23 + *(int *)(v15 + 20), (uint64_t)v24 + *(int *)(v15 + 20), v46);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v23, 0, 1, v15);
    }
    v29 = a3[8];
    v30 = (_QWORD *)((char *)v4 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    if (v16((uint64_t *)((char *)a2 + v29), 1, v15))
    {
      v32 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = v10;
      v34 = (void (*)(char *, char *, uint64_t))v11;
      v35 = *v31;
      v36 = v31[1];
      sub_1004BE310(*v31, v36);
      *v30 = v35;
      v30[1] = v36;
      v34((char *)v30 + *(int *)(v15 + 20), (char *)v31 + *(int *)(v15 + 20), v33);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v15);
    }
    v37 = a3[9];
    v38 = a3[10];
    v39 = (char *)v4 + v37;
    v40 = (uint64_t)a2 + v37;
    *(_DWORD *)v39 = *(_DWORD *)v40;
    v39[4] = *(_BYTE *)(v40 + 4);
    *((_BYTE *)v4 + v38) = *((_BYTE *)a2 + v38);
    v41 = a3[11];
    v42 = (char *)v4 + v41;
    v43 = (uint64_t)a2 + v41;
    *(_DWORD *)v42 = *(_DWORD *)v43;
    v42[4] = *(_BYTE *)(v43 + 4);
  }
  return v4;
}

uint64_t sub_100A559A0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (*v12)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = type metadata accessor for UnknownStorage(0);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v12(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    v12(v6 + *(int *)(v7 + 20), v5);
  }
  v9 = a1 + a2[7];
  if (!v8(v9, 1, v7))
  {
    sub_1004BBBC8(*(_QWORD *)v9, *(_QWORD *)(v9 + 8));
    v12(v9 + *(int *)(v7 + 20), v5);
  }
  v10 = a1 + a2[8];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v10, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10 + *(int *)(v7 + 20), v5);
  }
  return result;
}

uint64_t sub_100A55AD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  v45 = *(_QWORD *)(v14 - 8);
  if (v15(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v43 = v9;
    v17 = v10;
    v18 = *v13;
    v19 = v13[1];
    sub_1004BE310(*v13, v19);
    *v12 = v18;
    v12[1] = v19;
    v10 = v17;
    v9 = v43;
    v10((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v43);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v12, 0, 1, v14);
  }
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  if (v15((uint64_t *)(a2 + v20), 1, v14))
  {
    v23 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v44 = v9;
    v24 = v10;
    v25 = *v22;
    v26 = v22[1];
    sub_1004BE310(*v22, v26);
    *v21 = v25;
    v21[1] = v26;
    v10 = v24;
    v9 = v44;
    v10((uint64_t)v21 + *(int *)(v14 + 20), (uint64_t)v22 + *(int *)(v14 + 20), v44);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v21, 0, 1, v14);
  }
  v27 = a3[8];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  if (v15((uint64_t *)(a2 + v27), 1, v14))
  {
    v30 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = v9;
    v32 = (void (*)(char *, char *, uint64_t))v10;
    v33 = *v29;
    v34 = v29[1];
    sub_1004BE310(*v29, v34);
    *v28 = v33;
    v28[1] = v34;
    v32((char *)v28 + *(int *)(v14 + 20), (char *)v29 + *(int *)(v14 + 20), v31);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v28, 0, 1, v14);
  }
  v35 = a3[9];
  v36 = a3[10];
  v37 = a1 + v35;
  v38 = a2 + v35;
  *(_DWORD *)v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  v39 = a3[11];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_DWORD *)v40 = *(_DWORD *)v41;
  *(_BYTE *)(v40 + 4) = *(_BYTE *)(v41 + 4);
  return a1;
}

uint64_t sub_100A55D74(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  int v44;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v60 = *(_QWORD *)(v10 - 8);
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 24);
  v58(v8, v9, v10);
  v11 = a3[6];
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v59 = *(_QWORD *)(v14 - 8);
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v59 + 48);
  v16 = v15(v12, 1, v14);
  v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      v18 = *v13;
      v19 = v13[1];
      sub_1004BE310(*v13, v19);
      *v12 = v18;
      v12[1] = v19;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v46 = *v13;
  v47 = v13[1];
  sub_1004BE310(*v13, v47);
  v48 = *v12;
  v49 = v12[1];
  *v12 = v46;
  v12[1] = v47;
  sub_1004BBBC8(v48, v49);
  v58((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v10);
LABEL_7:
  v21 = a3[7];
  v22 = (uint64_t *)(a1 + v21);
  v23 = (uint64_t *)((char *)a2 + v21);
  v24 = v15((uint64_t *)(a1 + v21), 1, v14);
  v25 = v15(v23, 1, v14);
  if (v24)
  {
    if (!v25)
    {
      v26 = *v23;
      v27 = v23[1];
      sub_1004BE310(*v23, v27);
      *v22 = v26;
      v22[1] = v27;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v22, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Data);
LABEL_12:
    v28 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  v50 = *v23;
  v51 = v23[1];
  sub_1004BE310(*v23, v51);
  v52 = *v22;
  v53 = v22[1];
  *v22 = v50;
  v22[1] = v51;
  sub_1004BBBC8(v52, v53);
  v58((uint64_t)v22 + *(int *)(v14 + 20), (uint64_t)v23 + *(int *)(v14 + 20), v10);
LABEL_13:
  v29 = a3[8];
  v30 = (uint64_t *)(a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  v32 = v15((uint64_t *)(a1 + v29), 1, v14);
  v33 = v15(v31, 1, v14);
  if (!v32)
  {
    if (!v33)
    {
      v54 = *v31;
      v55 = v31[1];
      sub_1004BE310(*v31, v55);
      v56 = *v30;
      v57 = v30[1];
      *v30 = v54;
      v30[1] = v55;
      sub_1004BBBC8(v56, v57);
      v58((uint64_t)v30 + *(int *)(v14 + 20), (uint64_t)v31 + *(int *)(v14 + 20), v10);
      goto LABEL_19;
    }
    sub_1004B84A4((uint64_t)v30, type metadata accessor for CRLProto_Data);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    v36 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  v34 = *v31;
  v35 = v31[1];
  sub_1004BE310(*v31, v35);
  *v30 = v34;
  v30[1] = v35;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v30 + *(int *)(v14 + 20), (char *)v31 + *(int *)(v14 + 20), v10);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v30, 0, 1, v14);
LABEL_19:
  v37 = a3[9];
  v38 = a1 + v37;
  v39 = (int *)((char *)a2 + v37);
  v40 = *v39;
  *(_BYTE *)(v38 + 4) = *((_BYTE *)v39 + 4);
  *(_DWORD *)v38 = v40;
  *(_BYTE *)(a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v41 = a3[11];
  v42 = a1 + v41;
  v43 = (int *)((char *)a2 + v41);
  v44 = *v43;
  *(_BYTE *)(v42 + 4) = *((_BYTE *)v43 + 4);
  *(_DWORD *)v42 = v44;
  return a1;
}

uint64_t sub_100A56144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[7];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16((_OWORD *)(a2 + v18), 1, v14))
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 20), (char *)v20 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[8];
  v23 = (_OWORD *)(a1 + v22);
  v24 = (_OWORD *)(a2 + v22);
  if (v16((_OWORD *)(a2 + v22), 1, v14))
  {
    v25 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v10((char *)v23 + *(int *)(v14 + 20), (char *)v24 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
  }
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  return a1;
}

uint64_t sub_100A56388(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v46 = *(_QWORD *)(v9 - 8);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 40);
  v45(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v39 = *(_QWORD *)v11;
  v40 = *((_QWORD *)v11 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  sub_1004BBBC8(v39, v40);
  v45((uint64_t)&v11[*(int *)(v13 + 20)], (uint64_t)&v12[*(int *)(v13 + 20)], v9);
LABEL_7:
  v19 = a3[7];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v20[*(int *)(v13 + 20)], &v21[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLProto_Data);
LABEL_12:
    v24 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  v41 = *(_QWORD *)v20;
  v42 = *((_QWORD *)v20 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  sub_1004BBBC8(v41, v42);
  v45((uint64_t)&v20[*(int *)(v13 + 20)], (uint64_t)&v21[*(int *)(v13 + 20)], v9);
LABEL_13:
  v25 = a3[8];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = v15((char *)(a1 + v25), 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      v43 = *v26;
      v44 = v26[1];
      *(_OWORD *)v26 = *(_OWORD *)v27;
      sub_1004BBBC8(v43, v44);
      v45((uint64_t)v26 + *(int *)(v13 + 20), (uint64_t)&v27[*(int *)(v13 + 20)], v9);
      goto LABEL_19;
    }
    sub_1004B84A4((uint64_t)v26, type metadata accessor for CRLProto_Data);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))((char *)v26 + *(int *)(v13 + 20), &v27[*(int *)(v13 + 20)], v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  v31 = a3[9];
  v32 = a3[10];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_DWORD *)v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  v35 = a3[11];
  v36 = a1 + v35;
  v37 = a2 + v35;
  *(_DWORD *)v36 = *(_DWORD *)v37;
  *(_BYTE *)(v36 + 4) = *(_BYTE *)(v37 + 4);
  return a1;
}

uint64_t sub_100A566FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A56708);
}

uint64_t sub_100A56708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v12;
  int v13;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(unsigned __int8 *)(a1 + a3[10]);
  if (v12 >= 2)
    v13 = ((v12 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v13 = -2;
  if (v13 < 0)
    v13 = -1;
  return (v13 + 1);
}

uint64_t sub_100A567CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A567D8);
}

uint64_t sub_100A567D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_BYTE *)(a1 + a4[10]) = a2 + 2;
  return result;
}

void sub_100A5687C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;

  v6[0] = "\t";
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = v7;
      v10 = &unk_100F26840;
      v11 = &unk_100F26858;
      v12 = &unk_100F26840;
      swift_initStructMetadata(a1, 256, 8, v6, a1 + 16);
    }
  }
}

ValueMetadata *type metadata accessor for CRLProto_TextSelection.TypeEnum()
{
  return &type metadata for CRLProto_TextSelection.TypeEnum;
}

uint64_t sub_100A56944(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  unsigned int (*v49)(uint64_t *, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = type metadata accessor for UnknownStorage(0);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11, v13);
    v14 = *(int *)(a3 + 28);
    v15 = (_BYTE *)(v7 + v14);
    v16 = (char *)a2 + v14;
    v17 = (int *)type metadata accessor for CRLProto_TextSelection(0);
    v18 = *((_QWORD *)v17 - 1);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_1004B804C(&qword_1013E4F40);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v46 = v18;
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v15[8] = v16[8];
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(&v15[v17[5]], &v16[v17[5]], v11);
      v20 = v17[6];
      v21 = &v15[v20];
      v22 = (uint64_t *)&v16[v20];
      v23 = type metadata accessor for CRLProto_Data(0);
      v49 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
      v47 = *(_QWORD *)(v23 - 8);
      v48 = (void (*)(char *, char *, uint64_t))v12;
      if (v49(v22, 1, v23))
      {
        v24 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = *v22;
        v26 = v22[1];
        sub_1004BE310(*v22, v26);
        *v21 = v25;
        v21[1] = v26;
        v48((char *)v21 + *(int *)(v23 + 20), (char *)v22 + *(int *)(v23 + 20), v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v21, 0, 1, v23);
      }
      v27 = v17[7];
      v28 = &v15[v27];
      v29 = (uint64_t *)&v16[v27];
      if (v49((uint64_t *)&v16[v27], 1, v23))
      {
        v30 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v31 = *v29;
        v32 = v29[1];
        sub_1004BE310(*v29, v32);
        *v28 = v31;
        v28[1] = v32;
        v48((char *)v28 + *(int *)(v23 + 20), (char *)v29 + *(int *)(v23 + 20), v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v28, 0, 1, v23);
      }
      v33 = v17[8];
      v34 = &v15[v33];
      v35 = (uint64_t *)&v16[v33];
      if (v49((uint64_t *)&v16[v33], 1, v23))
      {
        v36 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v37 = *v35;
        v38 = v35[1];
        sub_1004BE310(*v35, v38);
        *v34 = v37;
        v34[1] = v38;
        v48((char *)v34 + *(int *)(v23 + 20), (char *)v35 + *(int *)(v23 + 20), v11);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v23);
      }
      v39 = v17[9];
      v40 = &v15[v39];
      v41 = &v16[v39];
      *(_DWORD *)v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      v15[v17[10]] = v16[v17[10]];
      v42 = v17[11];
      v43 = &v15[v42];
      v44 = &v16[v42];
      v43[4] = v44[4];
      *(_DWORD *)v43 = *(_DWORD *)v44;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v46 + 56))(v15, 0, 1, v17);
    }
  }
  return v7;
}

uint64_t sub_100A56CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UnknownStorage(0);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v14(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v14(v6 + v7[5], v5);
    v9 = v6 + v7[6];
    v10 = type metadata accessor for CRLProto_Data(0);
    v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    if (!v11(v9, 1, v10))
    {
      sub_1004BBBC8(*(_QWORD *)v9, *(_QWORD *)(v9 + 8));
      v14(v9 + *(int *)(v10 + 20), v5);
    }
    v12 = v6 + v7[7];
    if (!v11(v12, 1, v10))
    {
      sub_1004BBBC8(*(_QWORD *)v12, *(_QWORD *)(v12 + 8));
      v14(v12 + *(int *)(v10 + 20), v5);
    }
    v13 = v6 + v7[8];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v13, 1, v10);
    if (!(_DWORD)result)
    {
      sub_1004BBBC8(*(_QWORD *)v13, *(_QWORD *)(v13 + 8));
      return ((uint64_t (*)(uint64_t, uint64_t))v14)(v13 + *(int *)(v10 + 20), v5);
    }
  }
  return result;
}

uint64_t sub_100A56E24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  unsigned int (*v48)(uint64_t *, uint64_t, uint64_t);

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (_BYTE *)(a1 + v13);
  v15 = (char *)a2 + v13;
  v16 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_1004B804C(&qword_1013E4F40);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v45 = v17;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v11)(&v14[v16[5]], &v15[v16[5]], v10);
    v19 = v16[6];
    v20 = &v14[v19];
    v21 = (uint64_t *)&v15[v19];
    v22 = type metadata accessor for CRLProto_Data(0);
    v48 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
    v46 = *(_QWORD *)(v22 - 8);
    v47 = (void (*)(char *, char *, uint64_t))v11;
    if (v48(v21, 1, v22))
    {
      v23 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = *v21;
      v25 = v21[1];
      sub_1004BE310(*v21, v25);
      *v20 = v24;
      v20[1] = v25;
      v47((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v20, 0, 1, v22);
    }
    v26 = v16[7];
    v27 = &v14[v26];
    v28 = (uint64_t *)&v15[v26];
    if (v48((uint64_t *)&v15[v26], 1, v22))
    {
      v29 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = *v28;
      v31 = v28[1];
      sub_1004BE310(*v28, v31);
      *v27 = v30;
      v27[1] = v31;
      v47((char *)v27 + *(int *)(v22 + 20), (char *)v28 + *(int *)(v22 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v27, 0, 1, v22);
    }
    v32 = v16[8];
    v33 = &v14[v32];
    v34 = (uint64_t *)&v15[v32];
    if (v48((uint64_t *)&v15[v32], 1, v22))
    {
      v35 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v36 = *v34;
      v37 = v34[1];
      sub_1004BE310(*v34, v37);
      *v33 = v36;
      v33[1] = v37;
      v47((char *)v33 + *(int *)(v22 + 20), (char *)v34 + *(int *)(v22 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v33, 0, 1, v22);
    }
    v38 = v16[9];
    v39 = &v14[v38];
    v40 = &v15[v38];
    *(_DWORD *)v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    v14[v16[10]] = v15[v16[10]];
    v41 = v16[11];
    v42 = &v14[v41];
    v43 = &v15[v41];
    v42[4] = v43[4];
    *(_DWORD *)v42 = *(_DWORD *)v43;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v45 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_100A5715C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  int *v16;
  uint64_t v17;
  uint64_t (*v18)(_BYTE *, uint64_t, int *);
  int v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(uint64_t *, uint64_t, uint64_t);
  int v37;
  size_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  int v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  int v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  int v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  int v94;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  void (*__src)(char *, char *, uint64_t);
  void *__srca;
  void *__srcb;
  unsigned int (*v111)(uint64_t *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 28);
  v14 = (_BYTE *)(a1 + v13);
  v15 = (char *)a2 + v13;
  v16 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (v19)
    {
      sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_TextSelection);
      goto LABEL_7;
    }
    v29 = *(_QWORD *)v15;
    v14[8] = v15[8];
    *(_QWORD *)v14 = v29;
    v114 = v10;
    v12((uint64_t)&v14[v16[5]], (uint64_t)&v15[v16[5]], v10);
    v30 = v16[6];
    v31 = &v14[v30];
    v32 = (uint64_t *)&v15[v30];
    v33 = type metadata accessor for CRLProto_Data(0);
    v105 = *(_QWORD *)(v33 - 8);
    v107 = v31;
    v34 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v105 + 48);
    LODWORD(v31) = v34(v31, 1, v33);
    v112 = v33;
    v35 = v33;
    v36 = v34;
    v37 = v34(v32, 1, v35);
    if ((_DWORD)v31)
    {
      if (v37)
      {
        v38 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
        v39 = v107;
LABEL_21:
        memcpy(v39, v32, v38);
        v62 = v112;
        goto LABEL_24;
      }
      v63 = *v32;
      v103 = v32[1];
      sub_1004BE310(*v32, v103);
      *v107 = v63;
      v107[1] = v103;
      v62 = v112;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v107 + *(int *)(v112 + 20), (char *)v32 + *(int *)(v112 + 20), v114);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v107, 0, 1, v112);
    }
    else
    {
      if (v37)
      {
        sub_1004B84A4((uint64_t)v107, type metadata accessor for CRLProto_Data);
        v38 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
        v39 = v107;
        goto LABEL_21;
      }
      v64 = *v32;
      v104 = v32[1];
      sub_1004BE310(*v32, v104);
      v65 = *v107;
      v66 = v107[1];
      *v107 = v64;
      v107[1] = v104;
      sub_1004BBBC8(v65, v66);
      v62 = v112;
      v12((uint64_t)v107 + *(int *)(v112 + 20), (uint64_t)v32 + *(int *)(v112 + 20), v114);
    }
LABEL_24:
    v67 = v16[7];
    v68 = (uint64_t *)&v14[v67];
    v69 = (uint64_t *)&v15[v67];
    v70 = v36((uint64_t *)&v14[v67], 1, v62);
    v71 = v62;
    v72 = v70;
    v73 = v36(v69, 1, v71);
    if (v72)
    {
      if (!v73)
      {
        v74 = *v69;
        __srca = (void *)v69[1];
        sub_1004BE310(*v69, (unint64_t)__srca);
        *v68 = v74;
        v68[1] = (uint64_t)__srca;
        v75 = v112;
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v68 + *(int *)(v112 + 20), (char *)v69 + *(int *)(v112 + 20), v114);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v68, 0, 1, v112);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v73)
      {
        v96 = *v69;
        __srcb = (void *)v69[1];
        sub_1004BE310(*v69, (unint64_t)__srcb);
        v97 = *v68;
        v98 = v68[1];
        *v68 = v96;
        v68[1] = (uint64_t)__srcb;
        sub_1004BBBC8(v97, v98);
        v75 = v112;
        v12((uint64_t)v68 + *(int *)(v112 + 20), (uint64_t)v69 + *(int *)(v112 + 20), v114);
LABEL_30:
        v77 = v16[8];
        v78 = (uint64_t *)&v14[v77];
        v79 = (uint64_t *)&v15[v77];
        v80 = v36((uint64_t *)&v14[v77], 1, v75);
        v81 = v75;
        v82 = v80;
        v83 = v36(v79, 1, v81);
        if (v82)
        {
          if (!v83)
          {
            v85 = *v79;
            v84 = v79[1];
            sub_1004BE310(*v79, v84);
            *v78 = v85;
            v78[1] = v84;
            (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v78 + *(int *)(v112 + 20), (char *)v79 + *(int *)(v112 + 20), v114);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v78, 0, 1, v112);
LABEL_36:
            v87 = v16[9];
            v88 = &v14[v87];
            v89 = &v15[v87];
            v90 = *(_DWORD *)v89;
            v88[4] = v89[4];
            *(_DWORD *)v88 = v90;
            v14[v16[10]] = v15[v16[10]];
            v91 = v16[11];
            v92 = &v14[v91];
            v93 = &v15[v91];
            v94 = *(_DWORD *)v93;
            v92[4] = v93[4];
            *(_DWORD *)v92 = v94;
            return a1;
          }
        }
        else
        {
          if (!v83)
          {
            v99 = *v79;
            v100 = v79[1];
            sub_1004BE310(*v79, v100);
            v101 = *v78;
            v102 = v78[1];
            *v78 = v99;
            v78[1] = v100;
            sub_1004BBBC8(v101, v102);
            v12((uint64_t)v78 + *(int *)(v112 + 20), (uint64_t)v79 + *(int *)(v112 + 20), v114);
            goto LABEL_36;
          }
          sub_1004B84A4((uint64_t)v78, type metadata accessor for CRLProto_Data);
        }
        v86 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        goto LABEL_36;
      }
      sub_1004B84A4((uint64_t)v68, type metadata accessor for CRLProto_Data);
    }
    v76 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    v75 = v112;
    goto LABEL_30;
  }
  if (v19)
  {
LABEL_7:
    v28 = sub_1004B804C(&qword_1013E4F40);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  v106 = v17;
  v20 = *(_QWORD *)v15;
  v14[8] = v15[8];
  *(_QWORD *)v14 = v20;
  v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v21(&v14[v16[5]], &v15[v16[5]], v10);
  v22 = v16[6];
  v23 = &v14[v22];
  v24 = (uint64_t *)&v15[v22];
  v25 = type metadata accessor for CRLProto_Data(0);
  v26 = *(_QWORD *)(v25 - 8);
  v111 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48);
  v113 = v10;
  __src = v21;
  if (v111(v24, 1, v25))
  {
    v27 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v40 = *v24;
    v41 = v24[1];
    sub_1004BE310(*v24, v41);
    *v23 = v40;
    v23[1] = v41;
    __src((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v113);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v42 = v16[7];
  v43 = &v14[v42];
  v44 = (uint64_t *)&v15[v42];
  if (v111((uint64_t *)&v15[v42], 1, v25))
  {
    v45 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v46 = *v44;
    v47 = v44[1];
    sub_1004BE310(*v44, v47);
    *v43 = v46;
    v43[1] = v47;
    __src((char *)v43 + *(int *)(v25 + 20), (char *)v44 + *(int *)(v25 + 20), v113);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v43, 0, 1, v25);
  }
  v48 = v16[8];
  v49 = &v14[v48];
  v50 = (uint64_t *)&v15[v48];
  if (v111((uint64_t *)&v15[v48], 1, v25))
  {
    v51 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v52 = *v50;
    v53 = v50[1];
    sub_1004BE310(*v50, v53);
    *v49 = v52;
    v49[1] = v53;
    __src((char *)v49 + *(int *)(v25 + 20), (char *)v50 + *(int *)(v25 + 20), v113);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v49, 0, 1, v25);
  }
  v54 = v16[9];
  v55 = &v14[v54];
  v56 = &v15[v54];
  v57 = *(_DWORD *)v56;
  v55[4] = v56[4];
  *(_DWORD *)v55 = v57;
  v14[v16[10]] = v15[v16[10]];
  v58 = v16[11];
  v59 = &v14[v58];
  v60 = &v15[v58];
  v61 = *(_DWORD *)v60;
  v59[4] = v60[4];
  *(_DWORD *)v59 = v61;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v106 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_100A57874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  unsigned int (*v38)(_OWORD *, uint64_t, uint64_t);
  uint64_t v39;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  v15 = *((_QWORD *)v14 - 1);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C(&qword_1013E4F40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v39 = v15;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v10((uint64_t)&v12[v14[5]], (uint64_t)&v13[v14[5]], v9);
    v17 = v14[6];
    v18 = &v12[v17];
    v19 = &v13[v17];
    v20 = type metadata accessor for CRLProto_Data(0);
    v21 = *(_QWORD *)(v20 - 8);
    v38 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v21 + 48);
    if (v38(v19, 1, v20))
    {
      v22 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v10((uint64_t)v18 + *(int *)(v20 + 20), (uint64_t)v19 + *(int *)(v20 + 20), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = v14[7];
    v24 = &v12[v23];
    v25 = &v13[v23];
    if (v38(&v13[v23], 1, v20))
    {
      v26 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *v24 = *v25;
      v10((uint64_t)v24 + *(int *)(v20 + 20), (uint64_t)v25 + *(int *)(v20 + 20), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    }
    v27 = v14[8];
    v28 = &v12[v27];
    v29 = &v13[v27];
    if (v38(&v13[v27], 1, v20))
    {
      v30 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *v28 = *v29;
      v10((uint64_t)v28 + *(int *)(v20 + 20), (uint64_t)v29 + *(int *)(v20 + 20), v9);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v28, 0, 1, v20);
    }
    v31 = v14[9];
    v32 = &v12[v31];
    v33 = &v13[v31];
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    v12[v14[10]] = v13[v14[10]];
    v34 = v14[11];
    v35 = &v12[v34];
    v36 = &v13[v34];
    v35[4] = v36[4];
    *(_DWORD *)v35 = *(_DWORD *)v36;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v39 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100A57B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, int *);
  int v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  int v31;
  size_t v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  int v53;
  int v54;
  size_t v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  int v61;
  int v62;
  size_t v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*__src)(char *, char *, uint64_t);
  _OWORD *__dst;
  unint64_t *__dsta;
  unsigned int (*v81)(_OWORD *, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 28);
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (v18)
    {
      sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_TextSelection);
      goto LABEL_7;
    }
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v74 = (void (*)(char *, char *, uint64_t))v11;
    v11((uint64_t)&v13[v15[5]], (uint64_t)&v14[v15[5]], v9);
    v26 = v15[6];
    v27 = (unint64_t *)&v13[v26];
    v28 = &v14[v26];
    v29 = type metadata accessor for CRLProto_Data(0);
    v75 = *(_QWORD *)(v29 - 8);
    v30 = *(uint64_t (**)(void))(v75 + 48);
    __dsta = v27;
    LODWORD(v27) = ((uint64_t (*)(unint64_t *, uint64_t, uint64_t))v30)(v27, 1, v29);
    v31 = ((uint64_t (*)(_OWORD *, uint64_t, uint64_t))v30)(v28, 1, v29);
    if ((_DWORD)v27)
    {
      if (v31)
      {
        v32 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
        v33 = __dsta;
LABEL_21:
        memcpy(v33, v28, v32);
        goto LABEL_24;
      }
      *(_OWORD *)__dsta = *v28;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)__dsta + *(int *)(v29 + 20), (char *)v28 + *(int *)(v29 + 20), v9);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dsta, 0, 1, v29);
    }
    else
    {
      if (v31)
      {
        sub_1004B84A4((uint64_t)__dsta, type metadata accessor for CRLProto_Data);
        v32 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
        v33 = __dsta;
        goto LABEL_21;
      }
      v49 = *__dsta;
      v50 = __dsta[1];
      *(_OWORD *)__dsta = *v28;
      sub_1004BBBC8(v49, v50);
      v74((char *)__dsta + *(int *)(v29 + 20), (char *)v28 + *(int *)(v29 + 20), v9);
    }
LABEL_24:
    v51 = v15[7];
    v52 = &v14[v51];
    v76 = (uint64_t)&v13[v51];
    v53 = v30();
    v54 = ((uint64_t (*)(_OWORD *, uint64_t, uint64_t))v30)(v52, 1, v29);
    if (v53)
    {
      if (v54)
      {
        v55 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
        v56 = (void *)v76;
LABEL_29:
        memcpy(v56, v52, v55);
        goto LABEL_32;
      }
      *(_OWORD *)v76 = *v52;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v76 + *(int *)(v29 + 20), (char *)v52 + *(int *)(v29 + 20), v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v29);
    }
    else
    {
      if (v54)
      {
        sub_1004B84A4(v76, type metadata accessor for CRLProto_Data);
        v55 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
        v56 = (void *)v76;
        goto LABEL_29;
      }
      v57 = *(_QWORD *)v76;
      v58 = *(_QWORD *)(v76 + 8);
      *(_OWORD *)v76 = *v52;
      sub_1004BBBC8(v57, v58);
      v74((char *)(v76 + *(int *)(v29 + 20)), (char *)v52 + *(int *)(v29 + 20), v9);
    }
LABEL_32:
    v59 = v15[8];
    v60 = &v14[v59];
    v77 = (uint64_t)&v13[v59];
    v61 = v30();
    v62 = ((uint64_t (*)(char *, uint64_t, uint64_t))v30)(v60, 1, v29);
    if (v61)
    {
      if (!v62)
      {
        *(_OWORD *)v77 = *(_OWORD *)v60;
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v77 + *(int *)(v29 + 20), &v60[*(int *)(v29 + 20)], v9);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v77, 0, 1, v29);
        goto LABEL_40;
      }
      v63 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
      v64 = (void *)v77;
    }
    else
    {
      if (!v62)
      {
        v65 = *(_QWORD *)v77;
        v66 = *(_QWORD *)(v77 + 8);
        *(_OWORD *)v77 = *(_OWORD *)v60;
        sub_1004BBBC8(v65, v66);
        v74((char *)(v77 + *(int *)(v29 + 20)), &v60[*(int *)(v29 + 20)], v9);
        goto LABEL_40;
      }
      sub_1004B84A4(v77, type metadata accessor for CRLProto_Data);
      v63 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
      v64 = (void *)v77;
    }
    memcpy(v64, v60, v63);
LABEL_40:
    v67 = v15[9];
    v68 = &v13[v67];
    v69 = &v14[v67];
    *(_DWORD *)v68 = *(_DWORD *)v69;
    v68[4] = v69[4];
    v13[v15[10]] = v14[v15[10]];
    v70 = v15[11];
    v71 = &v13[v70];
    v72 = &v14[v70];
    v71[4] = v72[4];
    *(_DWORD *)v71 = *(_DWORD *)v72;
    return a1;
  }
  if (v18)
  {
LABEL_7:
    v25 = sub_1004B804C(&qword_1013E4F40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(&v13[v15[5]], &v14[v15[5]], v9);
  v20 = v15[6];
  __dst = &v13[v20];
  v21 = &v14[v20];
  v22 = type metadata accessor for CRLProto_Data(0);
  v23 = *(_QWORD *)(v22 - 8);
  v81 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48);
  __src = v19;
  if (v81(v21, 1, v22))
  {
    v24 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *__dst = *v21;
    v19((char *)__dst + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  v34 = v23;
  v35 = v15[7];
  v36 = &v13[v35];
  v37 = &v14[v35];
  if (v81(&v14[v35], 1, v22))
  {
    v38 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *v36 = *v37;
    __src((char *)v36 + *(int *)(v22 + 20), (char *)v37 + *(int *)(v22 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v22);
  }
  v39 = v15[8];
  v40 = &v13[v39];
  v41 = &v14[v39];
  if (v81(&v14[v39], 1, v22))
  {
    v42 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    *v40 = *v41;
    __src((char *)v40 + *(int *)(v22 + 20), (char *)v41 + *(int *)(v22 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v22);
  }
  v43 = v15[9];
  v44 = &v13[v43];
  v45 = &v14[v43];
  *(_DWORD *)v44 = *(_DWORD *)v45;
  v44[4] = v45[4];
  v13[v15[10]] = v14[v15[10]];
  v46 = v15[11];
  v47 = &v13[v46];
  v48 = &v14[v46];
  v47[4] = v48[4];
  *(_DWORD *)v47 = *(_DWORD *)v48;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100A5828C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A58298);
}

uint64_t sub_100A58298(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_100A582A4(a1, a2, a3, &qword_1013E4F40);
}

uint64_t sub_100A582A4(char *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v12 = sub_1004B804C(a4);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a1[v13], a2, v12);
  }
}

uint64_t sub_100A58348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A58354);
}

char *sub_100A58354(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100A58360(a1, a2, a3, a4, &qword_1013E4F40);
}

char *sub_100A58360(char *result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a3)
    {
      v12 = v10;
      v13 = *(int *)(a4 + 24);
    }
    else
    {
      v12 = sub_1004B804C(a5);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(&v6[v13], a2, a2, v12);
  }
  return result;
}

void sub_100A5840C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100A61E6C(a1, a2, a3, (uint64_t)&value witness table for Builtin.BridgeObject + 64, (uint64_t)&unk_100F268C8, (unint64_t *)&unk_1014040A0, type metadata accessor for CRLProto_TextSelection);
}

uint64_t *sub_100A58434(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[6];
    v13 = (uint64_t *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v29 = v16;
      v30 = v11;
      v20 = *v14;
      v21 = v14[1];
      sub_1004BE310(*v14, v21);
      *v13 = v20;
      v13[1] = v21;
      v16 = v29;
      v11 = v30;
      v30((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v13, 0, 1, v15);
    }
    v22 = a3[7];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    if (v17(v24, 1, v15))
    {
      v25 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = *v24;
      v27 = v24[1];
      sub_1004BE310(*v24, v27);
      *v23 = v26;
      v23[1] = v27;
      v11((char *)v23 + *(int *)(v15 + 20), (char *)v24 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v15);
    }
  }
  return v4;
}

_QWORD *sub_100A58610(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v27 = v15;
    v28 = v10;
    v18 = *v13;
    v19 = v13[1];
    sub_1004BE310(*v13, v19);
    *v12 = v18;
    v12[1] = v19;
    v15 = v27;
    v10 = v28;
    v28((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v12, 0, 1, v14);
  }
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  if (v16(v22, 1, v14))
  {
    v23 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = *v22;
    v25 = v22[1];
    sub_1004BE310(*v22, v25);
    *v21 = v24;
    v21[1] = v25;
    v10((char *)v21 + *(int *)(v14 + 20), (char *)v22 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_100A587BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v41 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v41 + 24);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v40 = *(_QWORD *)(v14 - 8);
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48);
  v16 = v15(v12, 1, v14);
  v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      v38 = v10;
      v18 = *v13;
      v19 = v13[1];
      sub_1004BE310(*v13, v19);
      *v12 = v18;
      v12[1] = v19;
      v10 = v38;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v39 = v10;
  v30 = *v13;
  v31 = v13[1];
  sub_1004BE310(*v13, v31);
  v32 = *v12;
  v33 = v12[1];
  *v12 = v30;
  v12[1] = v31;
  v10 = v39;
  sub_1004BBBC8(v32, v33);
  v39((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
LABEL_7:
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v15((_QWORD *)((char *)a1 + v21), 1, v14);
  v25 = v15(v23, 1, v14);
  if (!v24)
  {
    if (!v25)
    {
      v34 = *v23;
      v35 = v23[1];
      sub_1004BE310(*v23, v35);
      v36 = *v22;
      v37 = v22[1];
      *v22 = v34;
      v22[1] = v35;
      sub_1004BBBC8(v36, v37);
      v10((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v28 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  v26 = *v23;
  v27 = v23[1];
  sub_1004BE310(*v23, v27);
  *v22 = v26;
  v22[1] = v27;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v22, 0, 1, v14);
  return a1;
}

_QWORD *sub_100A58A50(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[7];
  v19 = (_OWORD *)((char *)a1 + v18);
  v20 = (_OWORD *)((char *)a2 + v18);
  if (v16(v20, 1, v14))
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 20), (char *)v20 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

char *sub_100A58BD4(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v31 = *(_QWORD *)(v9 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v31 + 40);
  v30(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v26 = *(_QWORD *)v11;
  v27 = *((_QWORD *)v11 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  sub_1004BBBC8(v26, v27);
  v30(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
LABEL_7:
  v19 = a3[7];
  v20 = (uint64_t *)&a1[v19];
  v21 = (char *)a2 + v19;
  v22 = v15(&a1[v19], 1, v13);
  v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      v28 = *v20;
      v29 = v20[1];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      sub_1004BBBC8(v28, v29);
      v30((char *)v20 + *(int *)(v13 + 20), &v21[*(int *)(v13 + 20)], v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v20 + *(int *)(v13 + 20), &v21[*(int *)(v13 + 20)], v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  return a1;
}

uint64_t sub_100A58E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A58E34);
}

uint64_t sub_100A58E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A58E44);
}

void sub_100A58E48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

uint64_t sub_100A58F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A58F10);
}

uint64_t sub_100A58F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A58F20);
}

void sub_100A58F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100A60290(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int32 + 64);
}

_QWORD *sub_100A58F34(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[6];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v30 = v11;
      v31 = v16;
      v20 = *v14;
      v21 = v14[1];
      sub_1004BE310(*v14, v21);
      *v13 = v20;
      v13[1] = v21;
      v11 = v30;
      v16 = v31;
      v30((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v13, 0, 1, v15);
    }
    v22 = a3[7];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    if (v17((_QWORD *)((char *)a2 + v22), 1, v15))
    {
      v25 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = v11;
      v32 = v16;
      v27 = *v24;
      v28 = v24[1];
      sub_1004BE310(*v24, v28);
      *v23 = v27;
      v23[1] = v28;
      v26((char *)v23 + *(int *)(v15 + 20), (char *)v24 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v23, 0, 1, v15);
    }
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_100A59128(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    v11(v6 + *(int *)(v7 + 20), v5);
  }
  v9 = a1 + a2[7];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v9, *(_QWORD *)(v9 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v7 + 20), v5);
  }
  return result;
}

_QWORD *sub_100A59224(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v28 = v10;
    v29 = v15;
    v18 = *v13;
    v19 = v13[1];
    sub_1004BE310(*v13, v19);
    *v12 = v18;
    v12[1] = v19;
    v10 = v28;
    v15 = v29;
    v28((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v12, 0, 1, v14);
  }
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  if (v16((_QWORD *)((char *)a2 + v20), 1, v14))
  {
    v23 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v10;
    v30 = v15;
    v25 = *v22;
    v26 = v22[1];
    sub_1004BE310(*v22, v26);
    *v21 = v25;
    v21[1] = v26;
    v24((char *)v21 + *(int *)(v14 + 20), (char *)v22 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v21, 0, 1, v14);
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_100A593E8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v42 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v42 + 24);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v41 = *(_QWORD *)(v14 - 8);
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v41 + 48);
  v16 = v15(v12, 1, v14);
  v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      v39 = v10;
      v18 = *v13;
      v19 = v13[1];
      sub_1004BE310(*v13, v19);
      *v12 = v18;
      v12[1] = v19;
      v10 = v39;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v40 = v10;
  v30 = *v13;
  v31 = v13[1];
  sub_1004BE310(*v13, v31);
  v32 = *v12;
  v33 = v12[1];
  *v12 = v30;
  v12[1] = v31;
  v10 = v40;
  sub_1004BBBC8(v32, v33);
  v40((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
LABEL_7:
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v15((_QWORD *)((char *)a1 + v21), 1, v14);
  v25 = v15(v23, 1, v14);
  if (!v24)
  {
    if (!v25)
    {
      v34 = v10;
      v35 = *v23;
      v36 = v23[1];
      sub_1004BE310(*v23, v36);
      v37 = *v22;
      v38 = v22[1];
      *v22 = v35;
      v22[1] = v36;
      sub_1004BBBC8(v37, v38);
      v34((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v9);
      goto LABEL_13;
    }
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v28 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  v26 = *v23;
  v27 = v23[1];
  sub_1004BE310(*v23, v27);
  *v22 = v26;
  v22[1] = v27;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v22, 0, 1, v14);
LABEL_13:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_100A5968C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[7];
  v19 = (_OWORD *)((char *)a1 + v18);
  v20 = (_OWORD *)((char *)a2 + v18);
  if (v16((_QWORD *)((char *)a2 + v18), 1, v14))
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 20), (char *)v20 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

char *sub_100A5981C(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;

  *(_QWORD *)a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v31 = *(_QWORD *)(v9 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v31 + 40);
  v30(v7, v8, v9);
  v10 = a3[6];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v26 = *(_QWORD *)v11;
  v27 = *((_QWORD *)v11 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  sub_1004BBBC8(v26, v27);
  v30(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
LABEL_7:
  v19 = a3[7];
  v20 = (uint64_t *)&a1[v19];
  v21 = (char *)a2 + v19;
  v22 = v15(&a1[v19], 1, v13);
  v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      v28 = *v20;
      v29 = v20[1];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      sub_1004BBBC8(v28, v29);
      v30((char *)v20 + *(int *)(v13 + 20), &v21[*(int *)(v13 + 20)], v9);
      goto LABEL_13;
    }
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v20 + *(int *)(v13 + 20), &v21[*(int *)(v13 + 20)], v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
LABEL_13:
  a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100A59A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A59A88);
}

uint64_t sub_100A59A88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v12;
  int v13;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(unsigned __int8 *)(a1 + a3[8]);
  if (v12 >= 2)
    v13 = ((v12 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v13 = -2;
  if (v13 < 0)
    v13 = -1;
  return (v13 + 1);
}

uint64_t sub_100A59B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A59B58);
}

uint64_t sub_100A59B58(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_1004B804C((uint64_t *)&unk_1013E16F0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_BYTE *)(a1 + a4[8]) = a2 + 2;
  return result;
}

void sub_100A59BFC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = &unk_100F26858;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_100A59CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A59CD0);
}

uint64_t sub_100A59CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A59CE0);
}

uint64_t *sub_100A59CE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v17;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v15);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = a2[1];
    v6 = a2[2];
    a1[1] = v5;
    a1[2] = v6;
    v7 = a2[3];
    v8 = a2[4];
    a1[3] = v7;
    a1[4] = v8;
    v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    v10 = a2[7];
    v11 = *(int *)(a3 + 48);
    v17 = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    a1[7] = v10;
    v13 = type metadata accessor for UnknownStorage(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v14(v17, v12, v13);
  }
  return v3;
}

uint64_t sub_100A59DE8(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[7]);
  v4 = (char *)a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100A59E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(int *)(a3 + 48);
  v15 = a1 + v10;
  v11 = a2 + v10;
  *(_QWORD *)(a1 + 56) = v9;
  v12 = type metadata accessor for UnknownStorage(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  v13(v15, v11, v12);
  return a1;
}

uint64_t sub_100A59F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(int *)(a3 + 48);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t sub_100A5A028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 48);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100A5A0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v12);
  v13 = *(int *)(a3 + 48);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_100A5A168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5A174);
}

uint64_t sub_100A5A174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_100A5A1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5A1FC);
}

uint64_t sub_100A5A1FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A5A270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A5A298(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int32 + 64, (uint64_t)&value witness table for Builtin.BridgeObject + 64, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

uint64_t sub_100A5A298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  unint64_t v8;
  _QWORD v9[9];

  v9[0] = a4;
  v9[1] = a5;
  v9[2] = a5;
  v9[3] = a5;
  v9[4] = a5;
  v9[5] = a6;
  v9[6] = a5;
  v9[7] = a5;
  result = type metadata accessor for UnknownStorage(319);
  if (v8 <= 0x3F)
  {
    v9[8] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 9, v9, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_100A5A310(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for CRLProto_Data(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = *v11;
      v17 = v11[1];
      sub_1004BE310(*v11, v17);
      *v10 = v16;
      v10[1] = v17;
      v8((_QWORD *)((char *)v10 + *(int *)(v12 + 20)), (uint64_t *)((char *)v11 + *(int *)(v12 + 20)), v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_100A5A440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5 + *(int *)(v6 + 20), v4);
  }
  return result;
}

char *sub_100A5A4F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = (uint64_t *)&a2[v8];
  v11 = type metadata accessor for CRLProto_Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = *v10;
    v15 = v10[1];
    sub_1004BE310(*v10, v15);
    *(_QWORD *)v9 = v14;
    *((_QWORD *)v9 + 1) = v15;
    v7(&v9[*(int *)(v11 + 20)], (char *)v10 + *(int *)(v11 + 20), v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

char *sub_100A5A5F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for CRLProto_Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100A5A6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5A6F0);
}

uint64_t sub_100A5A6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5A700);
}

uint64_t *sub_100A5A704(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11, v13);
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for CRLProto_Data(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v21 = *v16;
      v22 = v16[1];
      sub_1004BE310(*v16, v22);
      *v15 = v21;
      v15[1] = v22;
      ((void (*)(char *, char *, uint64_t))v12)((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_100A5A850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 20), v5);
  }
  return result;
}

_QWORD *sub_100A5A910(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = *v15;
    v20 = v15[1];
    sub_1004BE310(*v15, v20);
    *v14 = v19;
    v14[1] = v20;
    ((void (*)(char *, char *, uint64_t))v11)((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

_QWORD *sub_100A5AA30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      v24 = *v15;
      v25 = v15[1];
      sub_1004BE310(*v15, v25);
      v26 = *v14;
      v27 = v14[1];
      *v14 = v24;
      v14[1] = v25;
      sub_1004BBBC8(v26, v27);
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
      return a1;
    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v22 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  v20 = *v15;
  v21 = v15[1];
  sub_1004BE310(*v15, v21);
  *v14 = v20;
  v14[1] = v21;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

_OWORD *sub_100A5ABC4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_100A5ACC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      v22 = *v14;
      v23 = v14[1];
      *(_OWORD *)v14 = *(_OWORD *)v15;
      sub_1004BBBC8(v22, v23);
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
      return a1;
    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_100A5AE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5AE40);
}

uint64_t sub_100A5AE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100A5AEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5AEF0);
}

uint64_t sub_100A5AEF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100A5AF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100A60290(a1, a2, a3, (uint64_t)&unk_100F269B8);
}

uint64_t *sub_100A5AF9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for UnknownStorage(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

_QWORD *sub_100A5B044(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_100A5B0BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_100A5B140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100A5B1A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100A5B218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5B224);
}

uint64_t sub_100A5B228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5B234);
}

uint64_t sub_100A5B234(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A5B2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A5EAA0(a1, a2, a3, (uint64_t)&unk_100F269B8, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

uint64_t *sub_100A5B2C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for CRLProto_Data(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      v15 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v26 = v13;
      v27 = v8;
      v17 = *v11;
      v18 = v11[1];
      sub_1004BE310(*v11, v18);
      *v10 = v17;
      v10[1] = v18;
      v13 = v26;
      v8 = v27;
      v27((_QWORD *)((char *)v10 + *(int *)(v12 + 20)), (uint64_t *)((char *)v11 + *(int *)(v12 + 20)), v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v12);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    if (v14(v21, 1, v12))
    {
      v22 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v23 = *v21;
      v24 = v21[1];
      sub_1004BE310(*v21, v24);
      *v20 = v23;
      v20[1] = v24;
      v8((_QWORD *)((char *)v20 + *(int *)(v12 + 20)), (uint64_t *)((char *)v21 + *(int *)(v12 + 20)), v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_100A5B484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for CRLProto_Data(0);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    sub_1004BBBC8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
    v10(v5 + *(int *)(v6 + 20), v4);
  }
  v8 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v6);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8 + *(int *)(v6 + 20), v4);
  }
  return result;
}

uint64_t sub_100A5B578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = type metadata accessor for CRLProto_Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v24 = v12;
    v25 = v7;
    v15 = *v10;
    v16 = v10[1];
    sub_1004BE310(*v10, v16);
    *v9 = v15;
    v9[1] = v16;
    v12 = v24;
    v7 = v25;
    v25((uint64_t)v9 + *(int *)(v11 + 20), (uint64_t)v10 + *(int *)(v11 + 20), v6);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v11);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  if (v13(v19, 1, v11))
  {
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = *v19;
    v22 = v19[1];
    sub_1004BE310(*v19, v22);
    *v18 = v21;
    v18[1] = v22;
    v7((uint64_t)v18 + *(int *)(v11 + 20), (uint64_t)v19 + *(int *)(v11 + 20), v6);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100A5B710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage(0);
  v38 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 24);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = type metadata accessor for CRLProto_Data(0);
  v37 = *(_QWORD *)(v11 - 8);
  v12 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48);
  v13 = v12(v9, 1, v11);
  v14 = v12(v10, 1, v11);
  if (v13)
  {
    if (!v14)
    {
      v35 = v7;
      v15 = *v10;
      v16 = v10[1];
      sub_1004BE310(*v10, v16);
      *v9 = v15;
      v9[1] = v16;
      v7 = v35;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v9 + *(int *)(v11 + 20), (char *)v10 + *(int *)(v11 + 20), v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1004B84A4((uint64_t)v9, type metadata accessor for CRLProto_Data);
LABEL_6:
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v36 = v7;
  v27 = *v10;
  v28 = v10[1];
  sub_1004BE310(*v10, v28);
  v29 = *v9;
  v30 = v9[1];
  *v9 = v27;
  v9[1] = v28;
  v7 = v36;
  sub_1004BBBC8(v29, v30);
  v36((uint64_t)v9 + *(int *)(v11 + 20), (uint64_t)v10 + *(int *)(v11 + 20), v6);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (uint64_t *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v21 = v12((uint64_t *)(a1 + v18), 1, v11);
  v22 = v12(v20, 1, v11);
  if (!v21)
  {
    if (!v22)
    {
      v31 = *v20;
      v32 = v20[1];
      sub_1004BE310(*v20, v32);
      v33 = *v19;
      v34 = v19[1];
      *v19 = v31;
      v19[1] = v32;
      sub_1004BBBC8(v33, v34);
      v7((uint64_t)v19 + *(int *)(v11 + 20), (uint64_t)v20 + *(int *)(v11 + 20), v6);
      return a1;
    }
    sub_1004B84A4((uint64_t)v19, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v25 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  v23 = *v20;
  v24 = v20[1];
  sub_1004BE310(*v20, v24);
  *v19 = v23;
  v19[1] = v24;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v19 + *(int *)(v11 + 20), (char *)v20 + *(int *)(v11 + 20), v6);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v19, 0, 1, v11);
  return a1;
}

char *sub_100A5B990(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for CRLProto_Data(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (v13(v17, 1, v11))
  {
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v7(&v16[*(int *)(v11 + 20)], &v17[*(int *)(v11 + 20)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100A5BB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;

  v6 = type metadata accessor for UnknownStorage(0);
  v28 = *(_QWORD *)(v6 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40);
  v27(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for CRLProto_Data(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLProto_Data);
LABEL_6:
    v15 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v23 = *(_QWORD *)v8;
  v24 = *((_QWORD *)v8 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  sub_1004BBBC8(v23, v24);
  v27((uint64_t)&v8[*(int *)(v10 + 20)], (uint64_t)&v9[*(int *)(v10 + 20)], v6);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (uint64_t *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = v12((char *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      v25 = *v17;
      v26 = v17[1];
      *(_OWORD *)v17 = *(_OWORD *)v18;
      sub_1004BBBC8(v25, v26);
      v27((uint64_t)v17 + *(int *)(v10 + 20), (uint64_t)&v18[*(int *)(v10 + 20)], v6);
      return a1;
    }
    sub_1004B84A4((uint64_t)v17, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))((char *)v17 + *(int *)(v10 + 20), &v18[*(int *)(v10 + 20)], v6);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t sub_100A5BD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5BD4C);
}

uint64_t sub_100A5BD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5BD5C);
}

void sub_100A5BD60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 3, &v6, a1 + 16);
    }
  }
}

uint64_t *sub_100A5BDF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[7];
    v13 = (uint64_t *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v35 = v10;
      v19 = v11;
      v20 = *v14;
      v21 = v14[1];
      sub_1004BE310(*v14, v21);
      *v13 = v20;
      v13[1] = v21;
      v11 = v19;
      v10 = v35;
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v35);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v22 = a3[8];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = type metadata accessor for CRLProto_Point(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = sub_1004B804C(&qword_1013FA7B0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v23 = *v24;
      v11((char *)v23 + *(int *)(v25 + 24), (char *)v24 + *(int *)(v25 + 24), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v28 = a3[9];
    v29 = (uint64_t *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = type metadata accessor for CRLProto_Size(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = sub_1004B804C(&qword_1013FA7B8);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      *v29 = *v30;
      v11((char *)v29 + *(int *)(v31 + 24), (char *)v30 + *(int *)(v31 + 24), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
  }
  return v4;
}

uint64_t sub_100A5C070(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void (*v13)(uint64_t, uint64_t);

  v4 = a1 + a2[6];
  v5 = type metadata accessor for UnknownStorage(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v13(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for CRLProto_Data(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    v13(v6 + *(int *)(v7 + 20), v5);
  }
  v8 = a1 + a2[8];
  v9 = type metadata accessor for CRLProto_Point(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    v13(v8 + *(int *)(v9 + 24), v5);
  v10 = a1 + a2[9];
  v11 = type metadata accessor for CRLProto_Size(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v10 + *(int *)(v11 + 24), v5);
  return result;
}

uint64_t sub_100A5C1BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v33 = v9;
    v17 = v10;
    v18 = *v13;
    v19 = v13[1];
    sub_1004BE310(*v13, v19);
    *v12 = v18;
    v12[1] = v19;
    v10 = v17;
    v9 = v33;
    v10((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v33);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = type metadata accessor for CRLProto_Point(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    v10((uint64_t)v21 + *(int *)(v23 + 24), (uint64_t)v22 + *(int *)(v23 + 24), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = type metadata accessor for CRLProto_Size(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = sub_1004B804C(&qword_1013FA7B8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    *v27 = *v28;
    v10((uint64_t)v27 + *(int *)(v29 + 24), (uint64_t)v28 + *(int *)(v29 + 24), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t sub_100A5C40C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_DWORD *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v45 = *(_QWORD *)(v9 - 8);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 24);
  v44(v7, v8, v9);
  v10 = a3[7];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      v18 = *v12;
      v19 = v12[1];
      sub_1004BE310(*v12, v19);
      *v11 = v18;
      v11[1] = v19;
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v9);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v40 = *v12;
  v41 = v12[1];
  sub_1004BE310(*v12, v41);
  v42 = *v11;
  v43 = v11[1];
  *v11 = v40;
  v11[1] = v41;
  sub_1004BBBC8(v42, v43);
  v44((uint64_t)v11 + *(int *)(v13 + 20), (uint64_t)v12 + *(int *)(v13 + 20), v9);
LABEL_7:
  v21 = a3[8];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = type metadata accessor for CRLProto_Point(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      *(_DWORD *)v22 = *(_DWORD *)v23;
      *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Point);
LABEL_12:
    v29 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
  v44((uint64_t)&v22[*(int *)(v24 + 24)], (uint64_t)&v23[*(int *)(v24 + 24)], v9);
LABEL_13:
  v30 = a3[9];
  v31 = (_DWORD *)(a1 + v30);
  v32 = (_DWORD *)(a2 + v30);
  v33 = type metadata accessor for CRLProto_Size(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      *v31 = *v32;
      v31[1] = v32[1];
      v44((uint64_t)v31 + *(int *)(v33 + 24), (uint64_t)v32 + *(int *)(v33 + 24), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v31, type metadata accessor for CRLProto_Size);
    goto LABEL_18;
  }
  if (v37)
  {
LABEL_18:
    v38 = sub_1004B804C(&qword_1013FA7B8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  *v31 = *v32;
  v31[1] = v32[1];
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v31 + *(int *)(v33 + 24), (char *)v32 + *(int *)(v33 + 24), v9);
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t sub_100A5C790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[7];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = type metadata accessor for CRLProto_Point(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = type metadata accessor for CRLProto_Size(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = sub_1004B804C(&qword_1013FA7B8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v10((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_100A5C9BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v41 = *(_QWORD *)(v9 - 8);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40);
  v40(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v38 = *(_QWORD *)v11;
  v39 = *((_QWORD *)v11 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  sub_1004BBBC8(v38, v39);
  v40((uint64_t)&v11[*(int *)(v13 + 20)], (uint64_t)&v12[*(int *)(v13 + 20)], v9);
LABEL_7:
  v19 = a3[8];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = type metadata accessor for CRLProto_Point(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLProto_Point);
LABEL_12:
    v27 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v40((uint64_t)&v20[*(int *)(v22 + 24)], (uint64_t)&v21[*(int *)(v22 + 24)], v9);
LABEL_13:
  v28 = a3[9];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = type metadata accessor for CRLProto_Size(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      *v29 = *v30;
      v40((uint64_t)v29 + *(int *)(v31 + 24), (uint64_t)v30 + *(int *)(v31 + 24), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v29, type metadata accessor for CRLProto_Size);
    goto LABEL_18;
  }
  if (v35)
  {
LABEL_18:
    v36 = sub_1004B804C(&qword_1013FA7B8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  *v29 = *v30;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))((char *)v29 + *(int *)(v31 + 24), (char *)v30 + *(int *)(v31 + 24), v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  return a1;
}

uint64_t sub_100A5CD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5CD14);
}

uint64_t sub_100A5CD14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
  }
  else
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    v7 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v10;
      v9 = a3[7];
    }
    else
    {
      v11 = sub_1004B804C(&qword_1013FA7B0);
      v7 = *(_QWORD *)(v11 - 8);
      if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
      {
        v8 = v11;
        v9 = a3[8];
      }
      else
      {
        v8 = sub_1004B804C(&qword_1013FA7B8);
        v7 = *(_QWORD *)(v8 - 8);
        v9 = a3[9];
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_100A5CDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5CDE4);
}

uint64_t sub_100A5CDE4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[6];
  }
  else
  {
    v12 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[7];
    }
    else
    {
      v13 = sub_1004B804C(&qword_1013FA7B0);
      v9 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v13;
        v11 = a4[8];
      }
      else
      {
        v10 = sub_1004B804C(&qword_1013FA7B8);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_100A5CEB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];

  v10[0] = (char *)&value witness table for Builtin.Int32 + 64;
  v10[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v10[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v10[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1007018C8(319, (unint64_t *)&unk_101403E90, type metadata accessor for CRLProto_Point);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        sub_1007018C8(319, (unint64_t *)&unk_1014046A8, type metadata accessor for CRLProto_Size);
        if (v9 <= 0x3F)
        {
          v10[5] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 6, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_100A5CFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 20), v5);
  }
  return result;
}

uint64_t sub_100A5D088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5D094);
}

uint64_t sub_100A5D098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5D0A4);
}

void sub_100A5D0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100A60290(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int64 + 64);
}

_QWORD *sub_100A5D0B8(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    *(_QWORD *)(a1 + 16) = a2[2];
    v7 = a3[8];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[9];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v28 = v11;
      v19 = *v14;
      v20 = v14[1];
      sub_1004BE310(*v14, v20);
      *v13 = v19;
      v13[1] = v20;
      v11 = v28;
      v28((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v21 = a3[10];
    v22 = (_QWORD *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = type metadata accessor for CRLProto_Point(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_1004B804C(&qword_1013FA7B0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *v22 = *v23;
      v11((uint64_t)v22 + *(int *)(v24 + 24), (uint64_t)v23 + *(int *)(v24 + 24), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return v4;
}

uint64_t sub_100A5D2B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  v4 = a1 + a2[8];
  v5 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[9];
  v7 = type metadata accessor for CRLProto_Data(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    v11(v6 + *(int *)(v7 + 20), v5);
  }
  v8 = a1 + a2[10];
  v9 = type metadata accessor for CRLProto_Point(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8 + *(int *)(v9 + 24), v5);
  return result;
}

uint64_t sub_100A5D3B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v26 = v10;
    v17 = *v13;
    v18 = v13[1];
    sub_1004BE310(*v13, v18);
    *v12 = v17;
    v12[1] = v18;
    v10 = v26;
    v26((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v19 = a3[10];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = type metadata accessor for CRLProto_Point(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v20 = *v21;
    v10((uint64_t)v20 + *(int *)(v22 + 24), (uint64_t)v21 + *(int *)(v22 + 24), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_100A5D584(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_DWORD *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v36 = *(_QWORD *)(v9 - 8);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 24);
  v35(v7, v8, v9);
  v10 = a3[9];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      v18 = *v12;
      v19 = v12[1];
      sub_1004BE310(*v12, v19);
      *v11 = v18;
      v11[1] = v19;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v9);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v31 = *v12;
  v32 = v12[1];
  sub_1004BE310(*v12, v32);
  v33 = *v11;
  v34 = v11[1];
  *v11 = v31;
  v11[1] = v32;
  sub_1004BBBC8(v33, v34);
  v35((uint64_t)v11 + *(int *)(v13 + 20), (uint64_t)v12 + *(int *)(v13 + 20), v9);
LABEL_7:
  v21 = a3[10];
  v22 = (_DWORD *)(a1 + v21);
  v23 = (_DWORD *)(a2 + v21);
  v24 = type metadata accessor for CRLProto_Point(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *v22 = *v23;
      v22[1] = v23[1];
      v35((uint64_t)v22 + *(int *)(v24 + 24), (uint64_t)v23 + *(int *)(v24 + 24), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Point);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    v29 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  *v22 = *v23;
  v22[1] = v23[1];
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v22 + *(int *)(v24 + 24), (char *)v23 + *(int *)(v24 + 24), v9);
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_100A5D824(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[8];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[9];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = type metadata accessor for CRLProto_Point(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_100A5D9D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v32 = *(_QWORD *)(v9 - 8);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 40);
  v31(v7, v8, v9);
  v10 = a3[9];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v29 = *(_QWORD *)v11;
  v30 = *((_QWORD *)v11 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  sub_1004BBBC8(v29, v30);
  v31((uint64_t)&v11[*(int *)(v13 + 20)], (uint64_t)&v12[*(int *)(v13 + 20)], v9);
LABEL_7:
  v19 = a3[10];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = type metadata accessor for CRLProto_Point(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *v20 = *v21;
      v31((uint64_t)v20 + *(int *)(v22 + 24), (uint64_t)v21 + *(int *)(v22 + 24), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLProto_Point);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v27 = sub_1004B804C(&qword_1013FA7B0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  *v20 = *v21;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_100A5DC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5DC58);
}

uint64_t sub_100A5DC58(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 12);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = a3[8];
    }
    else
    {
      v14 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v11 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
      {
        v12 = v14;
        v13 = a3[9];
      }
      else
      {
        v12 = sub_1004B804C(&qword_1013FA7B0);
        v11 = *(_QWORD *)(v12 - 8);
        v13 = a3[10];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_100A5DD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5DD30);
}

uint64_t sub_100A5DD30(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 12) = a2 + 1;
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[8];
    }
    else
    {
      v12 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        v10 = sub_1004B804C(&qword_1013FA7B0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[10];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100A5DDF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[7];

  v8[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v8[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v8[2] = &unk_100F268C8;
  v8[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v8[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v8[5] = *(_QWORD *)(v4 - 8) + 64;
      sub_1007018C8(319, (unint64_t *)&unk_101403E90, type metadata accessor for CRLProto_Point);
      if (v7 <= 0x3F)
      {
        v8[6] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 7, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100A5DEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5DEE8);
}

uint64_t sub_100A5DEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5DEF8);
}

uint64_t sub_100A5DEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v12 = type metadata accessor for CRLProto_Data(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v21 = *v11;
      v22 = v11[1];
      sub_1004BE310(*v11, v22);
      v23 = *v10;
      v24 = v10[1];
      *v10 = v21;
      v10[1] = v22;
      sub_1004BBBC8(v23, v24);
      v8((uint64_t)v10 + *(int *)(v12 + 20), (uint64_t)v11 + *(int *)(v12 + 20), v6);
      return a1;
    }
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  v17 = *v11;
  v18 = v11[1];
  sub_1004BE310(*v11, v18);
  *v10 = v17;
  v10[1] = v18;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v10 + *(int *)(v12 + 20), (char *)v11 + *(int *)(v12 + 20), v6);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_100A5E064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v12 = type metadata accessor for CRLProto_Data(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v19 = *v10;
      v20 = v10[1];
      *(_OWORD *)v10 = *(_OWORD *)v11;
      sub_1004BBBC8(v19, v20);
      v8((uint64_t)v10 + *(int *)(v12 + 20), (uint64_t)v11 + *(int *)(v12 + 20), v6);
      return a1;
    }
    sub_1004B84A4((uint64_t)v10, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v10 = *(_OWORD *)v11;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v10 + *(int *)(v12 + 20), (char *)v11 + *(int *)(v12 + 20), v6);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_100A5E1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5E1C0);
}

uint64_t sub_100A5E1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100A5E23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5E248);
}

uint64_t sub_100A5E24C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100A5E2CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t *sub_100A5E360(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = *v14;
      v20 = v14[1];
      sub_1004BE310(*v14, v20);
      *v13 = v19;
      v13[1] = v20;
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

_QWORD *sub_100A5E4A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = *v13;
    v18 = v13[1];
    sub_1004BE310(*v13, v18);
    *v12 = v17;
    v12[1] = v18;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_100A5E5BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100A5E6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5E6CC);
}

uint64_t sub_100A5E6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5E6DC);
}

uint64_t *sub_100A5E6E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for UnknownStorage(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_100A5E77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UnknownStorage(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_100A5E7C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_100A5E834(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *sub_100A5E8B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100A5E90C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UnknownStorage(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100A5E978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5E984);
}

uint64_t sub_100A5E988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100A5EA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5EA10);
}

uint64_t sub_100A5EA10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A5EA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A5EAA0(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int64 + 64, (uint64_t)&value witness table for Builtin.BridgeObject + 64);
}

uint64_t sub_100A5EAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  unint64_t v7;
  _QWORD v8[3];

  v8[0] = a4;
  v8[1] = a5;
  result = type metadata accessor for UnknownStorage(319);
  if (v7 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v8, a1 + 16);
    return 0;
  }
  return result;
}

_QWORD *sub_100A5EB0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for CRLProto_Data(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v23 = *v14;
      v24 = v14[1];
      sub_1004BE310(*v14, v24);
      v25 = *v13;
      v26 = v13[1];
      *v13 = v23;
      v13[1] = v24;
      sub_1004BBBC8(v25, v26);
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  v19 = *v14;
  v20 = v14[1];
  sub_1004BE310(*v14, v20);
  *v13 = v19;
  v13[1] = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_QWORD *sub_100A5EC88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for CRLProto_Data(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v21 = *v13;
      v22 = v13[1];
      *(_OWORD *)v13 = *(_OWORD *)v14;
      sub_1004BBBC8(v21, v22);
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100A5EDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5EDF8);
}

uint64_t sub_100A5EDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5EE08);
}

_QWORD *sub_100A5EE0C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v19);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[7];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[8];
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v29 = v16;
      v30 = v11;
      v20 = *v14;
      v21 = v14[1];
      sub_1004BE310(*v14, v21);
      *v13 = v20;
      v13[1] = v21;
      v16 = v29;
      v11 = v30;
      v30((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v13, 0, 1, v15);
    }
    v22 = a3[9];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    if (v17(v24, 1, v15))
    {
      v25 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = *v24;
      v27 = v24[1];
      sub_1004BE310(*v24, v27);
      *v23 = v26;
      v23[1] = v27;
      v11((uint64_t)v23 + *(int *)(v15 + 20), (uint64_t)v24 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v23, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_100A5EFEC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  v4 = a1 + a2[7];
  v5 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[8];
  v7 = type metadata accessor for CRLProto_Data(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    v11(v6 + *(int *)(v7 + 20), v5);
  }
  v9 = a1 + a2[9];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v9, *(_QWORD *)(v9 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9 + *(int *)(v7 + 20), v5);
  }
  return result;
}

uint64_t sub_100A5F0E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v27 = v15;
    v28 = v10;
    v18 = *v13;
    v19 = v13[1];
    sub_1004BE310(*v13, v19);
    *v12 = v18;
    v12[1] = v19;
    v15 = v27;
    v10 = v28;
    v28((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v12, 0, 1, v14);
  }
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  if (v16(v22, 1, v14))
  {
    v23 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = *v22;
    v25 = v22[1];
    sub_1004BE310(*v22, v25);
    *v21 = v24;
    v21[1] = v25;
    v10((uint64_t)v21 + *(int *)(v14 + 20), (uint64_t)v22 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100A5F29C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v41 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 24);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v40 = *(_QWORD *)(v14 - 8);
  v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48);
  v16 = v15(v12, 1, v14);
  v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      v38 = v10;
      v18 = *v13;
      v19 = v13[1];
      sub_1004BE310(*v13, v19);
      *v12 = v18;
      v12[1] = v19;
      v10 = v38;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v12, type metadata accessor for CRLProto_Data);
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v39 = v10;
  v30 = *v13;
  v31 = v13[1];
  sub_1004BE310(*v13, v31);
  v32 = *v12;
  v33 = v12[1];
  *v12 = v30;
  v12[1] = v31;
  v10 = v39;
  sub_1004BBBC8(v32, v33);
  v39((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v9);
LABEL_7:
  v21 = a3[9];
  v22 = (uint64_t *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = v15((uint64_t *)(a1 + v21), 1, v14);
  v25 = v15(v23, 1, v14);
  if (!v24)
  {
    if (!v25)
    {
      v34 = *v23;
      v35 = v23[1];
      sub_1004BE310(*v23, v35);
      v36 = *v22;
      v37 = v22[1];
      *v22 = v34;
      v22[1] = v35;
      sub_1004BBBC8(v36, v37);
      v10((uint64_t)v22 + *(int *)(v14 + 20), (uint64_t)v23 + *(int *)(v14 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v22, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v28 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  v26 = *v23;
  v27 = v23[1];
  sub_1004BE310(*v23, v27);
  *v22 = v26;
  v22[1] = v27;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v22, 0, 1, v14);
  return a1;
}

uint64_t sub_100A5F540(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_OWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[8];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[9];
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  if (v16(v20, 1, v14))
  {
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 20), (char *)v20 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100A5F6CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v31 = *(_QWORD *)(v9 - 8);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40);
  v30(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for CRLProto_Data(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1004B84A4((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v26 = *(_QWORD *)v11;
  v27 = *((_QWORD *)v11 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  sub_1004BBBC8(v26, v27);
  v30((uint64_t)&v11[*(int *)(v13 + 20)], (uint64_t)&v12[*(int *)(v13 + 20)], v9);
LABEL_7:
  v19 = a3[9];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = v15((char *)(a1 + v19), 1, v13);
  v23 = v15(v21, 1, v13);
  if (!v22)
  {
    if (!v23)
    {
      v28 = *v20;
      v29 = v20[1];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      sub_1004BBBC8(v28, v29);
      v30((uint64_t)v20 + *(int *)(v13 + 20), (uint64_t)&v21[*(int *)(v13 + 20)], v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v20, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v20 + *(int *)(v13 + 20), &v21[*(int *)(v13 + 20)], v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  return a1;
}

uint64_t sub_100A5F928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5F934);
}

uint64_t sub_100A5F934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 28);
    }
    else
    {
      v12 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_100A5F9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5F9E4);
}

uint64_t sub_100A5F9E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100A5FA80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];
  uint64_t v7;
  uint64_t v8;

  v6[0] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v6[2] = &unk_100F268C8;
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

uint64_t *sub_100A5FB34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for CRLProto_Data(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = *v14;
      v20 = v14[1];
      sub_1004BE310(*v14, v20);
      *v13 = v19;
      v13[1] = v20;
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

_DWORD *sub_100A5FC7C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = *v13;
    v18 = v13[1];
    sub_1004BE310(*v13, v18);
    *v12 = v17;
    v12[1] = v18;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_100A5FD98(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = type metadata accessor for CRLProto_Data(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v23 = *v14;
      v24 = v14[1];
      sub_1004BE310(*v14, v24);
      v25 = *v13;
      v26 = v13[1];
      *v13 = v23;
      v13[1] = v24;
      sub_1004BBBC8(v25, v26);
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  v19 = *v14;
  v20 = v14[1];
  sub_1004BE310(*v14, v20);
  *v13 = v19;
  v13[1] = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_DWORD *sub_100A5FF18(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_100A6001C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = type metadata accessor for CRLProto_Data(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      v21 = *v13;
      v22 = v13[1];
      *(_OWORD *)v13 = *(_OWORD *)v14;
      sub_1004BBBC8(v21, v22);
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100A60180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A6018C);
}

uint64_t sub_100A60190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_100A60204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A60210);
}

uint64_t sub_100A60214(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_100A60290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[3];

  v9[0] = a4;
  v5 = type metadata accessor for UnknownStorage(319);
  if (v6 <= 0x3F)
  {
    v9[1] = *(_QWORD *)(v5 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
    if (v8 <= 0x3F)
    {
      v9[2] = *(_QWORD *)(v7 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v9, a1 + 16);
    }
  }
}

uint64_t *sub_100A60328(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for UnknownStorage(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[6];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = type metadata accessor for CRLProto_BoardIdentifier(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_1004B804C(&qword_1013E4CB8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      v19 = *(int *)(v15 + 20);
      __dst = &v13[v19];
      v20 = &v14[v19];
      v21 = v11;
      v22 = type metadata accessor for CRLProto_Data(0);
      v35 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v20, 1, v22))
      {
        v23 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v33 = *((_QWORD *)v20 + 1);
        v34 = *(_QWORD *)v20;
        sub_1004BE310(*(_QWORD *)v20, v33);
        *(_QWORD *)__dst = v34;
        *((_QWORD *)__dst + 1) = v33;
        v21(&__dst[*(int *)(v22 + 20)], &v20[*(int *)(v22 + 20)], v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v22);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      v11 = v21;
    }
    v24 = a3[7];
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = type metadata accessor for CRLProto_Data(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = *v26;
      v31 = v26[1];
      sub_1004BE310(*v26, v31);
      *v25 = v30;
      v25[1] = v31;
      v11((char *)v25 + *(int *)(v27 + 20), (char *)v26 + *(int *)(v27 + 20), v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t sub_100A605B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void (*v13)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = type metadata accessor for UnknownStorage(0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v13(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for CRLProto_BoardIdentifier(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v13(v6, v5);
    v8 = v6 + *(int *)(v7 + 20);
    v9 = type metadata accessor for CRLProto_Data(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
      sub_1004BBBC8(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
      v13(v8 + *(int *)(v9 + 20), v5);
    }
  }
  v10 = a1 + a2[7];
  v11 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v10 + *(int *)(v11 + 20), v5);
  }
  return result;
}

_DWORD *sub_100A60700(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C(&qword_1013E4CB8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v17 = *(int *)(v14 + 20);
    __dst = &v12[v17];
    v18 = &v13[v17];
    v19 = v10;
    v20 = type metadata accessor for CRLProto_Data(0);
    v33 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v18, 1, v20))
    {
      v21 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v31 = *((_QWORD *)v18 + 1);
      v32 = *(_QWORD *)v18;
      sub_1004BE310(*(_QWORD *)v18, v31);
      *(_QWORD *)__dst = v32;
      *((_QWORD *)__dst + 1) = v31;
      v19(&__dst[*(int *)(v20 + 20)], &v18[*(int *)(v20 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    v10 = v19;
  }
  v22 = a3[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  v25 = type metadata accessor for CRLProto_Data(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = *v24;
    v29 = v24[1];
    sub_1004BE310(*v24, v29);
    *v23 = v28;
    v23[1] = v29;
    v10((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

_DWORD *sub_100A6095C(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t *, uint64_t);
  _QWORD *__dst;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v61 = *(_QWORD *)(v9 - 8);
  v60 = *(void (**)(char *, char *, uint64_t))(v61 + 24);
  v60(v7, v8, v9);
  v10 = a3[6];
  v11 = (uint64_t)a1 + v10;
  v12 = (uint64_t *)((char *)a2 + v10);
  v13 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v60((char *)v11, (char *)v12, v9);
      v26 = *(int *)(v13 + 20);
      v27 = (uint64_t *)(v11 + v26);
      v28 = (uint64_t *)((char *)v12 + v26);
      v29 = type metadata accessor for CRLProto_Data(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48);
      v32 = v31(v27, 1, v29);
      v33 = v31(v28, 1, v29);
      if (v32)
      {
        if (!v33)
        {
          v34 = *v28;
          v35 = v28[1];
          sub_1004BE310(*v28, v35);
          *v27 = v34;
          v27[1] = v35;
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))((char *)v27 + *(int *)(v29 + 20), (char *)v28 + *(int *)(v29 + 20), v9);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v33)
        {
          v52 = *v28;
          v53 = v28[1];
          sub_1004BE310(*v28, v53);
          v54 = *v27;
          v55 = v27[1];
          *v27 = v52;
          v27[1] = v53;
          sub_1004BBBC8(v54, v55);
          v60((char *)v27 + *(int *)(v29 + 20), (char *)v28 + *(int *)(v29 + 20), v9);
          goto LABEL_14;
        }
        sub_1004B84A4((uint64_t)v27, type metadata accessor for CRLProto_Data);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
      v24 = v27;
      v25 = v28;
LABEL_8:
      memcpy(v24, v25, v23);
      goto LABEL_14;
    }
    sub_1004B84A4(v11, type metadata accessor for CRLProto_BoardIdentifier);
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E4CB8) - 8) + 64);
    v24 = (void *)v11;
    v25 = v12;
    goto LABEL_8;
  }
  if (v17)
    goto LABEL_7;
  v58 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v61 + 16);
  v58(v11, v12, v9);
  v18 = *(int *)(v13 + 20);
  __dst = (_QWORD *)(v11 + v18);
  v19 = (char *)v12 + v18;
  v20 = type metadata accessor for CRLProto_Data(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v56 = *((_QWORD *)v19 + 1);
    v57 = *(_QWORD *)v19;
    sub_1004BE310(*(_QWORD *)v19, v56);
    *__dst = v57;
    __dst[1] = v56;
    v58((uint64_t)__dst + *(int *)(v20 + 20), (uint64_t *)&v19[*(int *)(v20 + 20)], v9);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  v36 = a3[7];
  v37 = (uint64_t *)((char *)a1 + v36);
  v38 = (uint64_t *)((char *)a2 + v36);
  v39 = type metadata accessor for CRLProto_Data(0);
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      v48 = *v38;
      v49 = v38[1];
      sub_1004BE310(*v38, v49);
      v50 = *v37;
      v51 = v37[1];
      *v37 = v48;
      v37[1] = v49;
      sub_1004BBBC8(v50, v51);
      v60((char *)v37 + *(int *)(v39 + 20), (char *)v38 + *(int *)(v39 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v37, type metadata accessor for CRLProto_Data);
    goto LABEL_19;
  }
  if (v43)
  {
LABEL_19:
    v46 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    return a1;
  }
  v44 = *v38;
  v45 = v38[1];
  sub_1004BE310(*v38, v45);
  *v37 = v44;
  v37[1] = v45;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))((char *)v37 + *(int *)(v39 + 20), (char *)v38 + *(int *)(v39 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  return a1;
}

_DWORD *sub_100A60D68(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C(&qword_1013E4CB8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    v17 = *(int *)(v14 + 20);
    __dst = &v12[v17];
    v18 = &v13[v17];
    v19 = type metadata accessor for CRLProto_Data(0);
    v28 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v18, 1, v19))
    {
      v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v18;
      v10(&__dst[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v21 = a3[7];
  v22 = (_OWORD *)((char *)a1 + v21);
  v23 = (_OWORD *)((char *)a2 + v21);
  v24 = type metadata accessor for CRLProto_Data(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v22 = *v23;
    v10((char *)v22 + *(int *)(v24 + 20), (char *)v23 + *(int *)(v24 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

_DWORD *sub_100A60FA0(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  _OWORD *__dst;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage(0);
  v51 = *(_QWORD *)(v9 - 8);
  v50 = *(void (**)(char *, char *, uint64_t))(v51 + 40);
  v50(v7, v8, v9);
  v10 = a3[6];
  v11 = (uint64_t)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for CRLProto_BoardIdentifier(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15((uint64_t)v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v50((char *)v11, v12, v9);
      v26 = *(int *)(v13 + 20);
      v27 = v11 + v26;
      v28 = &v12[v26];
      v29 = type metadata accessor for CRLProto_Data(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
      v32 = v31(v27, 1, v29);
      v33 = v31((uint64_t)v28, 1, v29);
      if (v32)
      {
        if (!v33)
        {
          *(_OWORD *)v27 = *(_OWORD *)v28;
          (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v27 + *(int *)(v29 + 20), &v28[*(int *)(v29 + 20)], v9);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v33)
        {
          v46 = *(_QWORD *)v27;
          v47 = *(_QWORD *)(v27 + 8);
          *(_OWORD *)v27 = *(_OWORD *)v28;
          sub_1004BBBC8(v46, v47);
          v50((char *)(v27 + *(int *)(v29 + 20)), &v28[*(int *)(v29 + 20)], v9);
          goto LABEL_14;
        }
        sub_1004B84A4(v27, type metadata accessor for CRLProto_Data);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C((uint64_t *)&unk_1013E16F0) - 8) + 64);
      v24 = (void *)v27;
      v25 = v28;
LABEL_8:
      memcpy(v24, v25, v23);
      goto LABEL_14;
    }
    sub_1004B84A4(v11, type metadata accessor for CRLProto_BoardIdentifier);
LABEL_7:
    v23 = *(_QWORD *)(*(_QWORD *)(sub_1004B804C(&qword_1013E4CB8) - 8) + 64);
    v24 = (void *)v11;
    v25 = v12;
    goto LABEL_8;
  }
  if (v17)
    goto LABEL_7;
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
  v48(v11, v12, v9);
  v18 = *(int *)(v13 + 20);
  __dst = (_OWORD *)(v11 + v18);
  v19 = &v12[v18];
  v20 = type metadata accessor for CRLProto_Data(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *__dst = *(_OWORD *)v19;
    v48((uint64_t)__dst + *(int *)(v20 + 20), &v19[*(int *)(v20 + 20)], v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_14:
  v34 = a3[7];
  v35 = (uint64_t *)((char *)a1 + v34);
  v36 = (uint64_t *)((char *)a2 + v34);
  v37 = type metadata accessor for CRLProto_Data(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      v44 = *v35;
      v45 = v35[1];
      *(_OWORD *)v35 = *(_OWORD *)v36;
      sub_1004BBBC8(v44, v45);
      v50((char *)v35 + *(int *)(v37 + 20), (char *)v36 + *(int *)(v37 + 20), v9);
      return a1;
    }
    sub_1004B84A4((uint64_t)v35, type metadata accessor for CRLProto_Data);
    goto LABEL_19;
  }
  if (v41)
  {
LABEL_19:
    v42 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v35 = *(_OWORD *)v36;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))((char *)v35 + *(int *)(v37 + 20), (char *)v36 + *(int *)(v37 + 20), v9);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  return a1;
}

uint64_t sub_100A61368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A61374);
}

uint64_t sub_100A61374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for UnknownStorage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
  }
  else
  {
    v10 = sub_1004B804C(&qword_1013E4CB8);
    v7 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v10;
      v9 = a3[6];
    }
    else
    {
      v8 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v7 = *(_QWORD *)(v8 - 8);
      v9 = a3[7];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t sub_100A61410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A6141C);
}

uint64_t sub_100A6141C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = type metadata accessor for UnknownStorage(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    v12 = sub_1004B804C(&qword_1013E4CB8);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[6];
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = a4[7];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_100A614C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = (char *)&value witness table for Builtin.Int32 + 64;
  v2 = type metadata accessor for UnknownStorage(319);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1007018C8(319, (unint64_t *)&unk_101404CB0, type metadata accessor for CRLProto_BoardIdentifier);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1007018C8(319, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

uint64_t *sub_100A61590(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage(0);
    v12 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v11 - 8) + 16);
    v13 = swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11, v13);
    v14 = *(int *)(a3 + 28);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for CRLProto_Data(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v21 = *v16;
      v22 = v16[1];
      sub_1004BE310(*v16, v22);
      *v15 = v21;
      v15[1] = v22;
      ((void (*)(char *, char *, uint64_t))v12)((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_100A616E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UnknownStorage(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for CRLProto_Data(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1004BBBC8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8));
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 20), v5);
  }
  return result;
}

_QWORD *sub_100A617A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v10 - 8) + 16);
  v12 = swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10, v12);
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = *v15;
    v20 = v15[1];
    sub_1004BE310(*v15, v20);
    *v14 = v19;
    v14[1] = v20;
    ((void (*)(char *, char *, uint64_t))v11)((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

_QWORD *sub_100A618CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;

  *a1 = *a2;
  v6 = a2[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      v24 = *v15;
      v25 = v15[1];
      sub_1004BE310(*v15, v25);
      v26 = *v14;
      v27 = v14[1];
      *v14 = v24;
      v14[1] = v25;
      sub_1004BBBC8(v26, v27);
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
      return a1;
    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v22 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  v20 = *v15;
  v21 = v15[1];
  sub_1004BE310(*v15, v21);
  *v14 = v20;
  v14[1] = v21;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_100A61A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for UnknownStorage(0);
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = type metadata accessor for CRLProto_Data(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_100A61B74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 28);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for CRLProto_Data(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v9) = v18(v14, 1, v16);
  v19 = v18(v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      v22 = *v14;
      v23 = v14[1];
      *(_OWORD *)v14 = *(_OWORD *)v15;
      sub_1004BBBC8(v22, v23);
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
      return a1;
    }
    sub_1004B84A4((uint64_t)v14, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v10);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_100A61CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A61CF4);
}

uint64_t sub_100A61CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100A61D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A61DA4);
}

uint64_t sub_100A61DA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for UnknownStorage(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1004B804C((uint64_t *)&unk_1013E16F0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100A61E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100A61E6C(a1, a2, a3, (uint64_t)&unk_100F269B8, (uint64_t)&value witness table for Builtin.Int64 + 64, (unint64_t *)&unk_1014034C8, type metadata accessor for CRLProto_Data);
}

void sub_100A61E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[4];

  v14[0] = a4;
  v14[1] = a5;
  v10 = type metadata accessor for UnknownStorage(319);
  if (v11 <= 0x3F)
  {
    v14[2] = *(_QWORD *)(v10 - 8) + 64;
    sub_1007018C8(319, a6, a7);
    if (v13 <= 0x3F)
    {
      v14[3] = *(_QWORD *)(v12 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v14, a1 + 16);
    }
  }
}

unint64_t sub_100A61F10()
{
  unint64_t result;

  result = qword_101404D80;
  if (!qword_101404D80)
  {
    result = swift_getWitnessTable(&unk_100F26BC8, &type metadata for CRLProto_TextSelection.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_101404D80);
  }
  return result;
}

unint64_t sub_100A61F58()
{
  unint64_t result;

  result = qword_101404D88;
  if (!qword_101404D88)
  {
    result = swift_getWitnessTable(&unk_100F26C68, &type metadata for CRLProto_Path.ElementType);
    atomic_store(result, (unint64_t *)&qword_101404D88);
  }
  return result;
}

unint64_t sub_100A61FA0()
{
  unint64_t result;

  result = qword_101404D90;
  if (!qword_101404D90)
  {
    result = swift_getWitnessTable(&unk_100F26BF0, &type metadata for CRLProto_TextSelection.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_101404D90);
  }
  return result;
}

unint64_t sub_100A61FE8()
{
  unint64_t result;

  result = qword_101404D98;
  if (!qword_101404D98)
  {
    result = swift_getWitnessTable(&unk_100F26C30, &type metadata for CRLProto_TextSelection.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_101404D98);
  }
  return result;
}

unint64_t sub_100A62030()
{
  unint64_t result;

  result = qword_101404DA0;
  if (!qword_101404DA0)
  {
    result = swift_getWitnessTable(&unk_100F26C90, &type metadata for CRLProto_Path.ElementType);
    atomic_store(result, (unint64_t *)&qword_101404DA0);
  }
  return result;
}

unint64_t sub_100A62078()
{
  unint64_t result;

  result = qword_101404DA8;
  if (!qword_101404DA8)
  {
    result = swift_getWitnessTable(&unk_100F26CD0, &type metadata for CRLProto_Path.ElementType);
    atomic_store(result, (unint64_t *)&qword_101404DA8);
  }
  return result;
}

char *sub_100A620E8()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void (*v4)(char *, uint64_t);
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)v0;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 4));
  v2 = &v0[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID];
  v3 = type metadata accessor for UUID(0);
  v4 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(&v0[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID], v3);
  swift_release(*(_QWORD *)&v0[qword_101480A40]);
  sub_100A63348((uint64_t)&v0[qword_101404F00]);
  v5 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 280)];
  v6 = type metadata accessor for GroupSession.State(255, *(_QWORD *)(v1 + 248), *(_QWORD *)(*(_QWORD *)(v1 + 256) + 8));
  v7 = type metadata accessor for Optional(0, v6);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  return v0;
}

_QWORD *sub_100A621CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  a1[3] = *(_QWORD *)(*v1 + 248);
  a1[4] = *(_QWORD *)(v3 + 256);
  v4 = sub_10050D1B0(a1);
  return GroupSession.activity.getter(v4, v4);
}

uint64_t sub_100A62214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4[16] = a3;
  v4[17] = v3;
  v4[14] = a1;
  v4[15] = a2;
  v5 = *v3;
  v6 = sub_1004B804C(&qword_1013E01F0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v5 + 248);
  v4[19] = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 256) + 8);
  v4[20] = v8;
  v9 = type metadata accessor for GroupSession.State(0, v7, v8);
  v4[21] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[22] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[23] = swift_task_alloc(v11);
  v4[24] = swift_task_alloc(v11);
  v12 = type metadata accessor for UUID(0);
  v4[25] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[26] = v13;
  v4[27] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MainActor(0);
  v4[28] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v4[29] = v15;
  v4[30] = v16;
  return swift_task_switch(sub_100A62320, v15, v16);
}

uint64_t sub_100A62320()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  if (qword_1013DD888 != -1)
    swift_once(&qword_1013DD888, sub_100A05DE4);
  v2 = v0[26];
  v1 = v0[27];
  v3 = v0[25];
  v4 = v0[17];
  swift_beginAccess(&static OS_os_log.realTimeSync, v0 + 11, 0, 0);
  v5 = (void *)static OS_os_log.realTimeSync;
  v6 = sub_1004B804C((uint64_t *)&unk_1013E0180);
  inited = swift_initStackObject(v6, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_100EF5E40;
  v0[31] = *(_QWORD *)(v4 + qword_101480A40);
  v8 = v5;
  v10 = GroupSession.id.getter(v9);
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(inited + 56) = &type metadata for String;
  *(_QWORD *)(inited + 64) = sub_1004CFC2C();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  v15 = static os_log_type_t.default.getter(v14);
  sub_100A06EBC((uint64_t)v8, &_mh_execute_header, v15, "Setting up group session sync controller. Group Session UUID: %{public}@", 72, 2, inited);
  swift_setDeallocating(inited);
  v16 = *(_QWORD *)(inited + 16);
  v17 = sub_1004B804C(&qword_1013E0190);
  swift_arrayDestroy(inited + 32, v16, v17);

  v18 = *(_QWORD *)(v4 + 32);
  v0[32] = v18;
  if (v18)
  {
    swift_retain(v18);
    return swift_task_switch(sub_100A6256C, v18, 0);
  }
  else
  {
    v21 = v0[16];
    v20 = v0[17];
    v22 = v0[14];
    v23 = v0[15];
    v24 = swift_task_alloc(32);
    v0[33] = v24;
    *(_QWORD *)(v24 + 16) = v20;
    *(_QWORD *)(v24 + 24) = v21;
    v25 = swift_task_alloc(32);
    v0[34] = v25;
    *(_QWORD *)(v25 + 16) = v20;
    *(_QWORD *)(v25 + 24) = v21;
    v26 = type metadata accessor for CRLGroupSessionSyncController();
    swift_allocObject(v26, 211, 15);
    v27 = dword_10140AC64;
    swift_unknownObjectRetain(v22);
    v28 = (_QWORD *)swift_task_alloc(v27);
    v0[35] = v28;
    *v28 = v0;
    v28[1] = sub_100A626D8;
    return sub_100C119C4(v22, v23, (uint64_t)&unk_101404F98, v24, (uint64_t)&unk_101404FA8, v25);
  }
}

uint64_t sub_100A6256C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[32];
  v2 = v0[14];
  *(_QWORD *)(v1 + 120) = v0[15];
  swift_unknownObjectWeakAssign(v1 + 112, v2);
  return swift_task_switch(sub_100A625B0, v0[29], v0[30]);
}

uint64_t sub_100A625B0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = swift_release(*(_QWORD *)(v0 + 256));
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 136);
  GroupSession.state.getter(v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for GroupSession.State.joined<A>(_:), v4);
  *(_BYTE *)(v0 + 304) = static GroupSession.State.== infix(_:_:)(v2, v3, v7, v6) & 1;
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(v3, v4);
  v9(v2, v4);
  v10 = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v0 + 296) = v10;
  if (v10)
  {
    swift_retain(v10);
    return swift_task_switch(sub_100A62880, v10, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 224));
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v13);
    swift_task_dealloc(v12);
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A626D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 272);
  v3 = *(_QWORD *)(*v1 + 280);
  v5 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 288) = a1;
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return swift_task_switch(sub_100A6274C, *(_QWORD *)(v2 + 232), *(_QWORD *)(v2 + 240));
}

uint64_t sub_100A6274C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 288);
  v3 = swift_release(v2);
  v5 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 160);
  v10 = *(_QWORD *)(v0 + 136);
  GroupSession.state.getter(v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, enum case for GroupSession.State.joined<A>(_:), v6);
  *(_BYTE *)(v0 + 304) = static GroupSession.State.== infix(_:_:)(v4, v5, v9, v8) & 1;
  v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v5, v6);
  v11(v4, v6);
  v12 = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v0 + 296) = v12;
  if (v12)
  {
    swift_retain(v12);
    return swift_task_switch(sub_100A62880, v12, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 224));
    v14 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 192);
    v16 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v15);
    swift_task_dealloc(v14);
    swift_task_dealloc(v16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100A62880()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(unsigned __int8 *)(v0 + 304);
  if (v2 != *(unsigned __int8 *)(v1 + 210))
  {
    *(_BYTE *)(v1 + 210) = v2;
    v1 = *(_QWORD *)(v0 + 296);
    if ((v2 & 1) != 0 && *(_BYTE *)(v1 + 208) == 1)
    {
      v3 = *(_QWORD *)(v0 + 144);
      *(_BYTE *)(v1 + 208) = 0;
      v4 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
      v5 = sub_100A63480();
      v6 = (_QWORD *)swift_allocObject(&unk_101292140, 40, 7);
      v6[2] = v1;
      v6[3] = v5;
      v6[4] = v1;
      swift_retain_n(v1, 2);
      v7 = sub_100521B98(v3, (uint64_t)&unk_1013FEE98, (uint64_t)v6);
      swift_release(v7);
    }
  }
  swift_release(v1);
  return swift_task_switch(sub_100A62964, *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
}

uint64_t sub_100A62964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100A629C4()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100FEE400, "Freeform/CRLBoardGroupSession.swift", 35, 2, 28, 0);
  __break(1u);
}

void sub_100A62A1C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100FEE400, "Freeform/CRLBoardGroupSession.swift", 35, 2, 36, 0);
  __break(1u);
}

char *sub_100A62A74(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v19;
  void *v20;

  v3 = v2;
  v6 = sub_1004B804C(&qword_1013FEDD8);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v3 + 4) = 0;
  v9 = &v3[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID];
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v12(v9, a1, v10);
  v12(&v3[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID], a2, v10);
  v13 = *(int *)(v6 + 48);
  v12(v8, a1, v10);
  v8[v13] = 0;
  v14 = sub_1004B804C(&qword_1013FED88);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *((_QWORD *)v3 + 2) = CurrentValueSubject.init(_:)(v8);
  v20 = &_swiftEmptySetSingleton;
  v15 = sub_1004B804C(&qword_1013FED98);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v16 = CurrentValueSubject.init(_:)(&v20);
  v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v17(a2, v10);
  v17(a1, v10);
  *((_QWORD *)v3 + 3) = v16;
  return v3;
}

uint64_t sub_100A62BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for MainActor(0);
  static MainActor.shared.getter(v0);
  v1 = dispatch thunk of Actor.unownedExecutor.getter(v0, &protocol witness table for MainActor);
  return swift_task_switch(sub_100A62C44, v1, v2);
}

uint64_t sub_100A62C44()
{
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001DLL, 0x8000000100FEE400, "Freeform/CRLBoardGroupSession.swift", 35, 2, 59, 0);
}

uint64_t sub_100A62CB0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t);

  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_release(*((_QWORD *)v0 + 4));
  v1 = &v0[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID];
  v2 = type metadata accessor for UUID(0);
  v3 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(&v0[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID], v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100A62D38()
{
  return type metadata accessor for CRLBoardGroupSession(0);
}

uint64_t type metadata accessor for CRLBoardGroupSession(uint64_t a1)
{
  uint64_t result;

  result = qword_101404DD8;
  if (!qword_101404DD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CRLBoardGroupSession);
  return result;
}

uint64_t sub_100A62D7C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = "\b";
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100A62E04(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[1] = "(";
  v2 = type metadata accessor for GroupSession.State(255, *(_QWORD *)(a1 + 248), *(_QWORD *)(*(_QWORD *)(a1 + 256) + 8));
  result = type metadata accessor for Optional(319, v2);
  if (v4 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 3, v5, a1 + 264);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100A62E9C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for CRLBoardGroupSession(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A62ED8(_QWORD *a1)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID);
}

uint64_t sub_100A62EF4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = *a4;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[9] = v7;
  v5[10] = v8;
  return swift_task_switch(sub_100A62F70, v7, v8);
}

uint64_t sub_100A62F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;

  v5 = v4[6];
  v6 = v4[5];
  v7 = v4[3];
  v4[11] = type metadata accessor for CRLRealTimeMessenger(0, *(_QWORD *)(v4[7] + 248), *(_QWORD *)(v4[7] + 256), a4);
  v8 = *(_QWORD *)(v6 + qword_101480A40);
  v9 = dword_1013EDADC;
  swift_retain(v8);
  swift_retain(v5);
  swift_unknownObjectRetain(v7);
  v10 = (uint64_t **)swift_task_alloc(v9);
  v4[12] = (uint64_t)v10;
  *v10 = v4;
  v10[1] = (uint64_t *)sub_100A6301C;
  return sub_1006E25E4(v8, v4[6], v4[3], v4[4]);
}

uint64_t sub_100A6301C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100A63074, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_100A63074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD **)(v0 + 16);
  v4 = swift_release(*(_QWORD *)(v0 + 64));
  v3[3] = v2;
  v3[4] = &off_101278D20;
  *v3 = v1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
}

uint64_t sub_100A630C8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = *a4;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[9] = v7;
  v5[10] = v8;
  return swift_task_switch(sub_100A63144, v7, v8);
}

uint64_t sub_100A63144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;

  v5 = v4[6];
  v6 = v4[5];
  v7 = v4[3];
  v4[11] = type metadata accessor for CRLUnreliableRealTimeMessenger(0, *(_QWORD *)(v4[7] + 248), *(_QWORD *)(v4[7] + 256), a4);
  v8 = *(_QWORD *)(v6 + qword_101480A40);
  v9 = dword_1013E1E54;
  swift_retain(v8);
  swift_retain(v5);
  swift_unknownObjectRetain(v7);
  v10 = (uint64_t **)swift_task_alloc(v9);
  v4[12] = (uint64_t)v10;
  *v10 = v4;
  v10[1] = (uint64_t *)sub_100A631F0;
  return sub_100550188(v8, v4[6], v4[3], v4[4]);
}

uint64_t sub_100A631F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100A63248, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_100A63248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __n128 v4;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD **)(v0 + 16);
  v4 = swift_release(*(_QWORD *)(v0 + 64));
  v3[3] = v2;
  v3[4] = &off_10126B7A0;
  *v3 = v1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
}

uint64_t sub_100A6329C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_release(*(uint64_t *)((char *)v0 + qword_101480A40));
  sub_100A63348((uint64_t)v0 + qword_101404F00);
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 280);
  v3 = type metadata accessor for GroupSession.State(255, *(_QWORD *)(v1 + 248), *(_QWORD *)(*(_QWORD *)(v1 + 256) + 8));
  v4 = type metadata accessor for Optional(0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
}

uint64_t sub_100A63318()
{
  uint64_t v0;

  sub_100A620E8();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for CRLBoardGroupSessionBase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100502040(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRLBoardGroupSessionBase);
}

uint64_t sub_100A63348(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1004B804C(&qword_1013EE2F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A63388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v9 = *(_QWORD **)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_101404F94);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_1004CFD00;
  return sub_100A62EF4(a1, a2, a3, v9, v8);
}

uint64_t sub_100A63404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v9 = *(_QWORD **)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v10 = (_QWORD *)swift_task_alloc(dword_101404FA4);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_1004CF80C;
  return sub_100A630C8(a1, a2, a3, v9, v8);
}

unint64_t sub_100A63480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1013FEE90;
  if (!qword_1013FEE90)
  {
    v1 = type metadata accessor for CRLGroupSessionSyncController();
    result = swift_getWitnessTable(&unk_100F2ECA0, v1);
    atomic_store(result, (unint64_t *)&qword_1013FEE90);
  }
  return result;
}

uint64_t sub_100A634C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100A634F4(uint64_t a1)
{
  sub_100A63508(a1);
}

void sub_100A63508(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t i;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  void (*v27)(char *, char *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v38 = (char *)&v34 - v6;
  v7 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  v43 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v34 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v34 - v14;
  v16 = *(_QWORD *)(a1 + 64);
  v41 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v42 = (unint64_t)(v17 + 63) >> 6;
  v20 = a1;
  swift_bridgeObjectRetain(a1);
  v21 = 0;
  v40 = (char *)_swiftEmptyArrayStorage;
  v36 = v3;
  if (!v19)
    goto LABEL_7;
LABEL_4:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v22 | (v21 << 6); ; i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    sub_1004CB7BC(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v43 + 72) * i, (uint64_t)v15, (uint64_t *)&unk_1013E1A50);
    sub_1004C4938((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_1013E1A50);
    sub_1004CB7BC((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1013E1A50);
    sub_1004CB800((uint64_t)v13, (uint64_t *)&unk_1013E1A50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
    {
      sub_1004CB800((uint64_t)v10, (uint64_t *)&unk_1013E1A50);
      if (v19)
        goto LABEL_4;
    }
    else
    {
      v27 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v27(v38, v10, v2);
      v37 = v27;
      v27(v39, v38, v2);
      if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
        v40 = (char *)sub_100D0EC28(0, *((_QWORD *)v40 + 2) + 1, 1, (unint64_t)v40);
      v29 = *((_QWORD *)v40 + 2);
      v28 = *((_QWORD *)v40 + 3);
      v30 = v29 + 1;
      v3 = v36;
      if (v29 >= v28 >> 1)
      {
        v34 = *((_QWORD *)v40 + 2);
        v35 = v29 + 1;
        v33 = (char *)sub_100D0EC28(v28 > 1, v29 + 1, 1, (unint64_t)v40);
        v29 = v34;
        v30 = v35;
        v40 = v33;
      }
      v31 = v39;
      v32 = v40;
      *((_QWORD *)v40 + 2) = v30;
      v37(&v32[((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v29], v31, v2);
      if (v19)
        goto LABEL_4;
    }
LABEL_7:
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v42)
      goto LABEL_29;
    v25 = *(_QWORD *)(v41 + 8 * v24);
    ++v21;
    if (!v25)
    {
      v21 = v24 + 1;
      if (v24 + 1 >= v42)
        goto LABEL_29;
      v25 = *(_QWORD *)(v41 + 8 * v21);
      if (!v25)
      {
        v21 = v24 + 2;
        if (v24 + 2 >= v42)
          goto LABEL_29;
        v25 = *(_QWORD *)(v41 + 8 * v21);
        if (!v25)
        {
          v21 = v24 + 3;
          if (v24 + 3 >= v42)
            goto LABEL_29;
          v25 = *(_QWORD *)(v41 + 8 * v21);
          if (!v25)
            break;
        }
      }
    }
LABEL_22:
    v19 = (v25 - 1) & v25;
  }
  v26 = v24 + 4;
  if (v26 >= v42)
  {
LABEL_29:
    swift_release(v20);
    return;
  }
  v25 = *(_QWORD *)(v41 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v42)
      goto LABEL_29;
    v25 = *(_QWORD *)(v41 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_100A638BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  if (v6)
    goto LABEL_6;
LABEL_7:
  v11 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v11 < v7)
    {
      v12 = *(_QWORD *)(v3 + 8 * v11);
      ++v8;
      if (v12)
        goto LABEL_22;
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_30;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (v12)
        goto LABEL_22;
      v8 = v11 + 2;
      if (v11 + 2 >= v7)
        goto LABEL_30;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (v12)
        goto LABEL_22;
      v8 = v11 + 3;
      if (v11 + 3 >= v7)
        goto LABEL_30;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (v12)
      {
LABEL_22:
        v6 = (v12 - 1) & v12;
        for (i = __clz(__rbit64(v12)) + (v8 << 6); ; i = v9 | (v8 << 6))
        {
          v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i + 8);
          v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
          Strong = swift_weakLoadStrong(v15 + 56);
          swift_bridgeObjectRetain(v14);
          swift_retain(v15);
          swift_release(Strong);
          if (Strong)
          {
            swift_release(v15);
            swift_bridgeObjectRelease(v14);
            if (!v6)
              goto LABEL_7;
          }
          else
          {
            v17 = sub_1004B804C(a2);
            v18 = swift_allocObject(v17, 24, 7);
            v19 = swift_weakLoadStrong(v15 + 56);
            swift_retain(v15);
            if (v19)
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(root:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 16, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
              swift_release(v19);
            }
            *(_QWORD *)(v18 + 16) = v15;
            swift_release(v15);
            swift_bridgeObjectRelease(v14);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
            v22 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v22 >= v21 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
            v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v18);
            specialized Array._endMutation()(v23);
            if (!v6)
              goto LABEL_7;
          }
LABEL_6:
          v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v13 = v11 + 4;
      if (v13 < v7)
      {
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (v12)
        {
          v8 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v13 + 1;
          if (__OFADD__(v13, 1))
            goto LABEL_32;
          if (v8 >= v7)
            break;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          ++v13;
          if (v12)
            goto LABEL_22;
        }
      }
    }
LABEL_30:
    swift_release(a1);
    return;
  }
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_100A63BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  if (v5)
    goto LABEL_6;
LABEL_7:
  v10 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v10 < v6)
    {
      v11 = *(_QWORD *)(v2 + 8 * v10);
      ++v7;
      if (v11)
        goto LABEL_22;
      v7 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_30;
      v11 = *(_QWORD *)(v2 + 8 * v7);
      if (v11)
        goto LABEL_22;
      v7 = v10 + 2;
      if (v10 + 2 >= v6)
        goto LABEL_30;
      v11 = *(_QWORD *)(v2 + 8 * v7);
      if (v11)
        goto LABEL_22;
      v7 = v10 + 3;
      if (v10 + 3 >= v6)
        goto LABEL_30;
      v11 = *(_QWORD *)(v2 + 8 * v7);
      if (v11)
      {
LABEL_22:
        v5 = (v11 - 1) & v11;
        for (i = __clz(__rbit64(v11)) + (v7 << 6); ; i = v8 | (v7 << 6))
        {
          v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i + 8);
          v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
          Strong = swift_weakLoadStrong(v14 + 80);
          swift_bridgeObjectRetain(v13);
          swift_retain(v14);
          swift_release(Strong);
          if (Strong)
          {
            swift_release(v14);
            swift_bridgeObjectRelease();
            if (!v5)
              goto LABEL_7;
          }
          else
          {
            v16 = sub_1004B804C(&qword_101405640);
            v17 = swift_allocObject(v16, 24, 7);
            v18 = swift_weakLoadStrong(v14 + 80);
            swift_retain(v14);
            if (v18)
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(root:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 16, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
              swift_release(v18);
            }
            *(_QWORD *)(v17 + 16) = v14;
            swift_release(v14);
            swift_bridgeObjectRelease();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
            v21 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v20 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v21 >= v20 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
            v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v17);
            specialized Array._endMutation()(v22);
            if (!v5)
              goto LABEL_7;
          }
LABEL_6:
          v8 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v12 = v10 + 4;
      if (v12 < v6)
      {
        v11 = *(_QWORD *)(v2 + 8 * v12);
        if (v11)
        {
          v7 = v12;
          goto LABEL_22;
        }
        while (1)
        {
          v7 = v12 + 1;
          if (__OFADD__(v12, 1))
            goto LABEL_32;
          if (v7 >= v6)
            break;
          v11 = *(_QWORD *)(v2 + 8 * v7);
          ++v12;
          if (v11)
            goto LABEL_22;
        }
      }
    }
LABEL_30:
    swift_release(a1);
    return;
  }
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_100A63EF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  int64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  char v56;
  __n128 v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  unint64_t v68;
  __n128 v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  void (*v76)(char *, char *, uint64_t);
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  double v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  __n128 v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, __n128);
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  NSString *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  _QWORD v130[6];
  void *v131;

  v112 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v112);
  v111 = (char *)&v107 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v3);
  v5 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v127 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v119 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v125 = (char *)&v107 - v10;
  __chkstk_darwin(v9);
  v118 = (char *)&v107 - v11;
  v12 = sub_1004B804C(&qword_1013E0270);
  __chkstk_darwin(v12);
  v122 = (uint64_t)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRLBoardIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  v123 = v14;
  v124 = v15;
  v16 = __chkstk_darwin(v14);
  v109 = (uint64_t)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v107 = (uint64_t)&v107 - v18;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v19 = a1;
    else
      v19 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v20 = __CocoaSet.makeIterator()(v19);
    v21 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    v22 = sub_1005A15B8((unint64_t *)&qword_1013E1778, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    v23 = Set.Iterator.init(_cocoa:)(v130, v20, v21, v22);
    a1 = v130[0];
    v116 = v130[1];
    v24 = v130[2];
    v25 = v130[3];
    v26 = v130[4];
  }
  else
  {
    v27 = -1 << *(_BYTE *)(a1 + 32);
    v28 = *(_QWORD *)(a1 + 56);
    v116 = a1 + 56;
    v24 = ~v27;
    v29 = -v27;
    if (v29 < 64)
      v30 = ~(-1 << v29);
    else
      v30 = -1;
    v26 = v30 & v28;
    swift_bridgeObjectRetain(a1);
    v25 = 0;
  }
  v114 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v108 = v24;
  v115 = (unint64_t)(v24 + 64) >> 6;
  v117 = CKCurrentUserDefaultName;
  v110 = _swiftEmptyArrayStorage;
  v113 = (char *)&type metadata for Swift.AnyObject + 8;
  v120 = a1;
  v121 = v5;
  v126 = v6;
LABEL_11:
  v31 = v25;
  for (i = v127; a1 < 0; v26 = v128)
  {
    v35 = __CocoaSet.Iterator.next()(v23);
    if (!v35)
      goto LABEL_74;
    v36 = v35;
    v129 = v35;
    v37 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
    swift_unknownObjectRetain(v36);
    swift_dynamicCast(&v131, &v129, v113, v37, 7);
    v38 = v131;
    swift_unknownObjectRelease(v36);
    v25 = v31;
    v33 = v26;
    i = v127;
    if (!v38)
      goto LABEL_74;
LABEL_34:
    v128 = v33;
    v42 = objc_msgSend(v38, "zoneName", v107, v108);
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v46._countAndFlagsBits = 0x5F6472616F42;
    v46._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v46))
    {
      v47 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0)
        v47 = v43 & 0xFFFFFFFFFFFFLL;
      v48 = 7;
      if (((v45 >> 60) & ((v43 & 0x800000000000000) == 0)) != 0)
        v48 = 11;
      if (!v47)
      {
LABEL_47:
        v57 = swift_bridgeObjectRelease(v45);
        v6 = v126;
        i = v127;
        v5 = v121;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v127 + 56))(v121, 1, 1, v126, v57);
        a1 = v120;
LABEL_53:
        sub_1004CB800((uint64_t)v5, (uint64_t *)&unk_1013E1A50);
        v71 = 1;
        v72 = v122;
        goto LABEL_66;
      }
      v49 = v48 | (v47 << 16);
      v50 = 4 * v47;
      v51 = v49;
      while (1)
      {
        v51 = String.index(before:)(v51, v43, v45);
        v52 = String.subscript.getter(v51, v43, v45);
        if (v52 == 95 && v53 == 0xE100000000000000)
          break;
        v55 = v53;
        v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, 95, 0xE100000000000000, 0);
        swift_bridgeObjectRelease(v55);
        if ((v56 & 1) != 0)
          goto LABEL_50;
        if (v51 < 0x4000)
          goto LABEL_47;
      }
      swift_bridgeObjectRelease(0xE100000000000000);
LABEL_50:
      v58 = String.index(after:)(v51, v43, v45);
      if (v50 < v58 >> 14)
        goto LABEL_76;
      v59 = String.subscript.getter(v58, v49, v43, v45);
      v61 = v60;
      v63 = v62;
      v65 = v64;
      v66 = swift_bridgeObjectRelease(v45);
      v67 = static String._fromSubstring(_:)(v59, v61, v63, v65, v66);
      v45 = v68;
      v69 = swift_bridgeObjectRelease(v65);
      v5 = v121;
      UUID.init(uuidString:)(v67, v45, v69);
      a1 = v120;
      v6 = v126;
      i = v127;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(i + 56))(v5, 1, 1, v6);
    }
    v70 = swift_bridgeObjectRelease(v45);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(i + 48))(v5, 1, v6, v70) == 1)
      goto LABEL_53;
    v73 = v6;
    v74 = *(void (**)(char *, char *, uint64_t))(i + 32);
    v75 = v118;
    v74(v118, v5, v73);
    v76 = *(void (**)(char *, char *, uint64_t))(i + 16);
    v76(v125, v75, v73);
    v77 = objc_msgSend(v38, "ownerName");
    v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
    v80 = v79;

    v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
    v83 = v81;
    if (v78 == v82 && v80 == v81)
    {
      swift_bridgeObjectRelease_n(v80, 2);
    }
    else
    {
      v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v80, v82, v81, 0);
      swift_bridgeObjectRelease(v80);
      *(_QWORD *)&v85 = swift_bridgeObjectRelease(v83).n128_u64[0];
      if ((v84 & 1) == 0)
      {
        v88 = objc_msgSend(v38, "ownerName", v85);
        v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
        v87 = v89;

        goto LABEL_60;
      }
    }
    v86 = 0;
    v87 = 0xE000000000000000;
LABEL_60:
    a1 = v120;
    v76(v119, v125, v126);
    v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
    v92 = v90;
    if (v86 == v91 && v87 == v90)
    {
      swift_bridgeObjectRelease(v87);
LABEL_64:
      v94 = swift_bridgeObjectRelease(v87);
      v86 = 0;
      v87 = 0xE000000000000000;
      goto LABEL_65;
    }
    v93 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, v91, v90, 0);
    v94 = swift_bridgeObjectRelease(v92);
    if ((v93 & 1) != 0)
      goto LABEL_64;
LABEL_65:
    v95 = v126;
    v96 = *(void (**)(char *, uint64_t, __n128))(v127 + 8);
    v96(v125, v126, v94);
    v97 = (uint64_t)v111;
    v74(v111, v119, v95);
    v6 = v95;
    v98 = (uint64_t *)(v97 + *(int *)(v112 + 20));
    *v98 = v86;
    v98[1] = v87;
    v72 = v122;
    sub_1004B84E0(v97, v122, type metadata accessor for CRLBoardIdentifierStorage);
    ((void (*)(char *, uint64_t))v96)(v118, v95);
    i = v127;
    v71 = 0;
    v5 = v121;
LABEL_66:
    v99 = v123;
    v100 = v124;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v72, v71, 1, v123);

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v72, 1, v99) != 1)
    {
      v101 = v72;
      v102 = v107;
      sub_1004B84E0(v101, v107, type metadata accessor for CRLBoardIdentifier);
      sub_1004B84E0(v102, v109, type metadata accessor for CRLBoardIdentifier);
      v103 = (unint64_t)v110;
      if ((swift_isUniquelyReferenced_nonNull_native(v110) & 1) == 0)
        v103 = sub_100D104C0(0, *(_QWORD *)(v103 + 16) + 1, 1, v103);
      v105 = *(_QWORD *)(v103 + 16);
      v104 = *(_QWORD *)(v103 + 24);
      if (v105 >= v104 >> 1)
        v103 = sub_100D104C0(v104 > 1, v105 + 1, 1, v103);
      *(_QWORD *)(v103 + 16) = v105 + 1;
      v106 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
      v110 = (_QWORD *)v103;
      v23 = (_QWORD *)sub_1004B84E0(v109, v103 + v106 + *(_QWORD *)(v124 + 72) * v105, type metadata accessor for CRLBoardIdentifier);
      v26 = v128;
      goto LABEL_11;
    }
    v23 = (_QWORD *)sub_1004CB800(v72, &qword_1013E0270);
    v31 = v25;
  }
  if (v26)
  {
    v33 = (v26 - 1) & v26;
    v34 = __clz(__rbit64(v26)) | (v31 << 6);
    v25 = v31;
    goto LABEL_33;
  }
  v39 = v31 + 1;
  if (!__OFADD__(v31, 1))
  {
    if (v39 < v115)
    {
      v40 = *(_QWORD *)(v116 + 8 * v39);
      v25 = v31 + 1;
      if (v40)
        goto LABEL_32;
      v25 = v31 + 2;
      if (v31 + 2 >= v115)
        goto LABEL_74;
      v40 = *(_QWORD *)(v116 + 8 * v25);
      if (v40)
        goto LABEL_32;
      v25 = v31 + 3;
      if (v31 + 3 >= v115)
        goto LABEL_74;
      v40 = *(_QWORD *)(v116 + 8 * v25);
      if (v40)
        goto LABEL_32;
      v25 = v31 + 4;
      if (v31 + 4 >= v115)
        goto LABEL_74;
      v40 = *(_QWORD *)(v116 + 8 * v25);
      if (v40)
      {
LABEL_32:
        v33 = (v40 - 1) & v40;
        v34 = __clz(__rbit64(v40)) + (v25 << 6);
LABEL_33:
        v38 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v34);
        if (v38)
          goto LABEL_34;
        goto LABEL_74;
      }
      v25 = v31 + 5;
      if (v31 + 5 < v115)
      {
        v40 = *(_QWORD *)(v116 + 8 * v25);
        if (!v40)
        {
          v41 = v31 + 6;
          while (v115 != v41)
          {
            v40 = *(_QWORD *)(v116 + 8 * v41++);
            if (v40)
            {
              v25 = v41 - 1;
              goto LABEL_32;
            }
          }
          goto LABEL_74;
        }
        goto LABEL_32;
      }
    }
LABEL_74:
    sub_1004D284C(a1);
    return;
  }
  __break(1u);
LABEL_76:
  __break(1u);
}

_QWORD *sub_100A648B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1004B804C(&qword_101405680);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for CRLAssetAddress(0);
  v9 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v29 = (uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v26 = (uint64_t)&v25 - v12;
  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v13)
  {
    v14 = _swiftEmptyArrayStorage;
    v27 = a1;
    v28 = a1 & 0xC000000000000001;
    v15 = 4;
    v25 = a2;
    while (1)
    {
      v16 = v15 - 4;
      if (!v28)
        break;
      a1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a1);
      v17 = __OFADD__(v16, 1);
      v18 = v15 - 3;
      if (v17)
        goto LABEL_20;
LABEL_11:
      v31 = a1;
      sub_100ABE7A8(&v31, a2, (uint64_t)v8);
      if (v3)
      {
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v27);
        swift_release(a1);
        return v14;
      }
      v19 = swift_release(a1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v8, 1, v30, v19) == 1)
      {
        sub_1004CB800((uint64_t)v8, &qword_101405680);
      }
      else
      {
        v20 = v26;
        sub_1004B84E0((uint64_t)v8, v26, type metadata accessor for CRLAssetAddress);
        sub_1004B84E0(v20, v29, type metadata accessor for CRLAssetAddress);
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          v14 = (_QWORD *)sub_100D11A08(0, v14[2] + 1, 1, (unint64_t)v14);
        v22 = v14[2];
        v21 = v14[3];
        if (v22 >= v21 >> 1)
          v14 = (_QWORD *)sub_100D11A08(v21 > 1, v22 + 1, 1, (unint64_t)v14);
        v14[2] = v22 + 1;
        sub_1004B84E0(v29, (uint64_t)v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v22, type metadata accessor for CRLAssetAddress);
        a2 = v25;
      }
      ++v15;
      a1 = v27;
      if (v18 == v13)
      {
        swift_bridgeObjectRelease(v27);
        return v14;
      }
    }
    a1 = *(_QWORD *)(a1 + 8 * v15);
    swift_retain(a1);
    v17 = __OFADD__(v16, 1);
    v18 = v15 - 3;
    if (!v17)
      goto LABEL_11;
LABEL_20:
    __break(1u);
LABEL_21:
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v13 = _CocoaArrayWrapper.endIndex.getter(v23);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

void sub_100A64B90(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v38 = a3;
  v3 = a2;
  v41 = sub_1004B804C(a2);
  v5 = __chkstk_darwin(v41);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v36 - v8;
  v43 = (unint64_t)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(a1 + 64);
  v39 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v42 = a1;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  v37 = v3;
  if (v13)
    goto LABEL_6;
LABEL_7:
  v17 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v17 < v40)
    {
      v18 = *(_QWORD *)(v39 + 8 * v17);
      ++v14;
      if (v18)
        goto LABEL_22;
      v14 = v17 + 1;
      if (v17 + 1 >= v40)
        goto LABEL_30;
      v18 = *(_QWORD *)(v39 + 8 * v14);
      if (v18)
        goto LABEL_22;
      v14 = v17 + 2;
      if (v17 + 2 >= v40)
        goto LABEL_30;
      v18 = *(_QWORD *)(v39 + 8 * v14);
      if (v18)
        goto LABEL_22;
      v14 = v17 + 3;
      if (v17 + 3 >= v40)
        goto LABEL_30;
      v18 = *(_QWORD *)(v39 + 8 * v14);
      if (v18)
      {
LABEL_22:
        v13 = (v18 - 1) & v18;
        for (i = __clz(__rbit64(v18)) + (v14 << 6); ; i = v15 | (v14 << 6))
        {
          v20 = v42;
          v21 = *(_QWORD *)(v42 + 48);
          v22 = type metadata accessor for UUID(0);
          (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v9, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * i, v22);
          v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * i);
          v24 = v41;
          *(_QWORD *)&v9[*(int *)(v41 + 48)] = v23;
          sub_1004C4938((uint64_t)v9, (uint64_t)v7, v3);
          v25 = *(_QWORD *)&v7[*(int *)(v24 + 48)];
          v26 = v25 + *(_QWORD *)(*(_QWORD *)v25 + 128);
          v27 = v3;
          Strong = swift_weakLoadStrong(v26);
          swift_retain(v23);
          swift_release(Strong);
          if (Strong)
          {
            sub_1004CB800((uint64_t)v7, v27);
            v3 = v27;
            if (!v13)
              goto LABEL_7;
          }
          else
          {
            v29 = sub_1004B804C(v38);
            v30 = swift_allocObject(v29, 24, 7);
            v31 = swift_weakLoadStrong(v26);
            swift_retain(v25);
            if (v31)
            {
              sub_100757E04(&_mh_execute_header, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(root:)", 11, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 16, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
              swift_release(v31);
            }
            *(_QWORD *)(v30 + 16) = v25;
            v3 = v37;
            v32 = sub_1004CB800((uint64_t)v7, v37);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
            v34 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v33 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v34 >= v33 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
            v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v30);
            specialized Array._endMutation()(v35);
            if (!v13)
              goto LABEL_7;
          }
LABEL_6:
          v15 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
        }
      }
      v19 = v17 + 4;
      if (v19 < v40)
      {
        v18 = *(_QWORD *)(v39 + 8 * v19);
        if (v18)
        {
          v14 = v19;
          goto LABEL_22;
        }
        while (1)
        {
          v14 = v19 + 1;
          if (__OFADD__(v19, 1))
            goto LABEL_32;
          if (v14 >= v40)
            break;
          v18 = *(_QWORD *)(v39 + 8 * v14);
          ++v19;
          if (v18)
            goto LABEL_22;
        }
      }
    }
LABEL_30:
    swift_release(v42);
    return;
  }
  __break(1u);
LABEL_32:
  __break(1u);
}

id sub_100A64F70()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  os_unfair_lock_s *v10;
  id v11;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v4)
  {
    v5 = *(id *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    v6 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager(0));
    v7 = v0;
    v8 = sub_100C7EE84((uint64_t)v7);

    v9 = *(void **)&v1[v3];
    *(_QWORD *)&v1[v3] = v8;
    v5 = v8;

    v4 = 0;
  }
  v10 = *(os_unfair_lock_s **)(v2 + 16);
  v11 = v4;
  os_unfair_lock_unlock(v10);
  return v5;
}

void sub_100A65018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[2];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = type metadata accessor for CRLTransactableHashableWrapper();
  v4 = sub_1004B7878((unint64_t *)&qword_101405D90, (uint64_t (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper, (uint64_t)&unk_100F393F8);
  v5 = 0;
  v17[1] = Set.init(minimumCapacity:)(v2, v3, v4);
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v10)
      goto LABEL_23;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_23;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_23;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
        {
          v5 = v14 + 3;
          if (v14 + 3 >= v10)
            goto LABEL_23;
          v15 = *(_QWORD *)(v6 + 8 * v5);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_5:
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    swift_retain(v13);
    sub_100AD58F8(v17, v13);
    swift_release(v17[0]);
  }
  v16 = v14 + 4;
  if (v16 >= v10)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_23;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100A651CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  result = Set.init(minimumCapacity:)(v12, v2, v13);
  v15 = 0;
  v16 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v17 + 63) >> 6;
  v26 = result;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_100AD569C((uint64_t)v8, (uint64_t)v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v25)
        goto LABEL_24;
      v23 = *(_QWORD *)(v16 + 8 * v15);
      if (!v23)
      {
        v15 = v22 + 2;
        if (v22 + 2 >= v25)
          goto LABEL_24;
        v23 = *(_QWORD *)(v16 + 8 * v15);
        if (!v23)
        {
          v15 = v22 + 3;
          if (v22 + 3 >= v25)
            goto LABEL_24;
          v23 = *(_QWORD *)(v16 + 8 * v15);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v19 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v25)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
LABEL_25:
    swift_release(a1);
    return v26;
  }
  v23 = *(_QWORD *)(v16 + 8 * v24);
  if (v23)
  {
    v15 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_100A6549C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16[2];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  v4 = sub_1005A15B8((unint64_t *)&qword_1013E1778, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v5 = 0;
  v16[1] = (id)Set.init(minimumCapacity:)(v2, v3, v4);
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_23;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_23;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 3;
          if (v13 + 3 >= v10)
            goto LABEL_23;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    sub_100ADA768((Swift::Int *)v16, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v12), (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t *)&unk_1013DE990);

  }
  v15 = v13 + 4;
  if (v15 >= v10)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_100A6567C(uint64_t a1, __n128 a2)
{
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  id v28[2];

  v2 = a1;
  v3 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v4 = __CocoaDictionary.count.getter(a1, a2);
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 16);
  }
  v5 = sub_1004B8930(0, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr);
  v6 = sub_1005A15B8((unint64_t *)&qword_1013E1778, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
  v24 = v5;
  v28[1] = (id)Set.init(minimumCapacity:)(v4, v5, v6);
  if (v3)
  {
    if (v2 < 0)
      v7 = v2;
    else
      v7 = v2 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaDictionary.makeIterator()(v7);
    v26 = 0;
    v9 = 0;
    v10 = 0;
    v2 = v8 | 0x8000000000000000;
  }
  else
  {
    v11 = -1 << *(_BYTE *)(v2 + 32);
    v26 = v2 + 64;
    v9 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(v2 + 64);
  }
  v14 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  while (v2 < 0)
  {
    v22 = __CocoaDictionary.Iterator.nextKey()();
    if (!v22)
      goto LABEL_40;
    v23 = v22;
    v27 = v22;
    swift_unknownObjectRetain(v22);
    swift_dynamicCast(v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
    v18 = v28[0];
    swift_unknownObjectRelease(v23);
    if (!v18)
      goto LABEL_40;
    v15 = v10;
    v17 = v14;
LABEL_18:
    sub_100ADA768((Swift::Int *)v28, v18, (unint64_t *)&qword_1013E1770, CKRecordZoneID_ptr, (uint64_t *)&unk_1013DE990);

    v14 = v17;
    v10 = v15;
  }
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v14 << 6);
    v17 = v14;
LABEL_17:
    v18 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
    if (!v18)
      goto LABEL_40;
    goto LABEL_18;
  }
  v19 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v19 >= v25)
      goto LABEL_40;
    v20 = *(_QWORD *)(v26 + 8 * v19);
    v17 = v14 + 1;
    if (!v20)
    {
      v17 = v14 + 2;
      if (v14 + 2 >= v25)
        goto LABEL_40;
      v20 = *(_QWORD *)(v26 + 8 * v17);
      if (!v20)
      {
        v17 = v14 + 3;
        if (v14 + 3 >= v25)
          goto LABEL_40;
        v20 = *(_QWORD *)(v26 + 8 * v17);
        if (!v20)
        {
          v17 = v14 + 4;
          if (v14 + 4 >= v25)
            goto LABEL_40;
          v20 = *(_QWORD *)(v26 + 8 * v17);
          if (!v20)
          {
            v17 = v14 + 5;
            if (v14 + 5 >= v25)
              goto LABEL_40;
            v20 = *(_QWORD *)(v26 + 8 * v17);
            if (!v20)
            {
              v21 = v14 + 6;
              while (v25 != v21)
              {
                v20 = *(_QWORD *)(v26 + 8 * v21++);
                if (v20)
                {
                  v17 = v21 - 1;
                  goto LABEL_36;
                }
              }
LABEL_40:
              sub_1004D284C(v2);
              return;
            }
          }
        }
      }
    }
LABEL_36:
    v15 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v17 << 6);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_100A65974(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = type metadata accessor for CRLBoardIdentifier(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1004B7878(&qword_1013E9A00, type metadata accessor for CRLBoardIdentifier, (uint64_t)&unk_100F0215C);
  result = Set.init(minimumCapacity:)(v12, v2, v13);
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v27 = result;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v15;
    if (!v24)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v20)
        goto LABEL_23;
      v24 = *(_QWORD *)(v26 + 8 * v15);
      if (!v24)
      {
        v15 = v23 + 2;
        if (v23 + 2 >= v20)
          goto LABEL_23;
        v24 = *(_QWORD *)(v26 + 8 * v15);
        if (!v24)
        {
          v15 = v23 + 3;
          if (v23 + 3 >= v20)
            goto LABEL_23;
          v24 = *(_QWORD *)(v26 + 8 * v15);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v19 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_5:
    sub_1004B8460(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v22, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_1004B84E0((uint64_t)v11, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
    sub_100AD7844((uint64_t)v8, (uint64_t)v5);
    result = sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  }
  v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release(a1);
    return v27;
  }
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v20)
      goto LABEL_23;
    v24 = *(_QWORD *)(v26 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100A65BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - v7;
  v9 = sub_1004B804C(&qword_1013FE308);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1004B7878(&qword_1014055D0, type metadata accessor for CRLSpotlightManager.ChangeType, (uint64_t)&unk_100F1DAAC);
  v13 = Set.init(minimumCapacity:)(0, v2, v12);
  v21 = v13;
  v17 = a1;
  v18 = xmmword_100F26EB0;
  v19 = 0u;
  v20 = 0u;
  sub_100AF35D8((uint64_t)v11);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v14(v11, 1, v2) != 1)
  {
    do
    {
      sub_1004B84E0((uint64_t)v11, (uint64_t)v5, type metadata accessor for CRLSpotlightManager.ChangeType);
      sub_100ADAF84((uint64_t)v8, (uint64_t)v5);
      sub_1004B84A4((uint64_t)v8, type metadata accessor for CRLSpotlightManager.ChangeType);
      sub_100AF35D8((uint64_t)v11);
    }
    while (v14(v11, 1, v2) != 1);
    v13 = v21;
  }
  v15 = *((_QWORD *)&v18 + 1);
  swift_bridgeObjectRelease();
  sub_100B010A4(v15);
  return v13;
}

uint64_t sub_100A65D98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v25 - v7;
  v9 = sub_1004B804C((uint64_t *)&unk_1013E1A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = sub_1004B7878((unint64_t *)&qword_1013DE630, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  result = Set.init(minimumCapacity:)(v12, v2, v13);
  v15 = 0;
  v16 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v17 + 63) >> 6;
  v26 = result;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_100AD569C((uint64_t)v8, (uint64_t)v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v25)
        goto LABEL_24;
      v23 = *(_QWORD *)(v16 + 8 * v15);
      if (!v23)
      {
        v15 = v22 + 2;
        if (v22 + 2 >= v25)
          goto LABEL_24;
        v23 = *(_QWORD *)(v16 + 8 * v15);
        if (!v23)
        {
          v15 = v22 + 3;
          if (v22 + 3 >= v25)
            goto LABEL_24;
          v23 = *(_QWORD *)(v16 + 8 * v15);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v19 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v25)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
LABEL_25:
    swift_release(a1);
    return v26;
  }
  v23 = *(_QWORD *)(v16 + 8 * v24);
  if (v23)
  {
    v15 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_100A66064(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16[3];

  v2 = 0;
  v16[2] = Set.init(minimumCapacity:)(*(_QWORD *)(a1 + 16), &type metadata for String, &protocol witness table for String);
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      goto LABEL_23;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_23;
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          goto LABEL_23;
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            goto LABEL_23;
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain(v12);
    sub_100AD8690(v16, v11, v12);
    swift_bridgeObjectRelease(v16[1]);
  }
  v15 = v13 + 4;
  if (v15 >= v7)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_100A661F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  id v16[2];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = type metadata accessor for CRLSceneInfo(0);
  v4 = sub_1004B7878(&qword_10140B790, type metadata accessor for CRLSceneInfo, (uint64_t)&protocol conformance descriptor for NSObject);
  v5 = 0;
  v16[1] = (id)Set.init(minimumCapacity:)(v2, v3, v4);
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_23;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_23;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 3;
          if (v13 + 3 >= v10)
            goto LABEL_23;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    sub_100ADBA5C((Swift::Int *)v16, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v12), type metadata accessor for CRLSceneInfo, &qword_1013DE780);

  }
  v15 = v13 + 4;
  if (v15 >= v10)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

unint64_t sub_100A663B8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return String.subscript.getter();
  __break(1u);
  return result;
}

uint64_t sub_100A66404@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __n128 v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = a1;
  v2 = sub_1004B804C(&qword_1014053D0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1004B804C(&qword_1014053D8);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1004B804C(&qword_101406490);
  v53 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v17 = v1[1];
  v20 = v1[2];
  v19 = v1[3];
  v21 = v19;
  v22 = v1[4];
  v47 = v16;
  v48 = v5;
  v54 = v17;
  v55 = v20;
  if (v22)
  {
    v52 = v19;
    v23 = v6;
    v49 = v2;
    v50 = v3;
    v24 = (v22 - 1) & v22;
    v25 = __clz(__rbit64(v22)) | (v19 << 6);
LABEL_3:
    v26 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 16 * v25);
    v27 = *v26;
    v28 = v26[1];
    v29 = v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v7 + 72) * v25, v23);
    v30 = (char *)v12 + *(int *)(v13 + 48);
    *v12 = v27;
    v12[1] = v28;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v30, v9, v29);
    v31 = v53;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v12, 0, 1, v13);
    v32 = swift_bridgeObjectRetain(v28);
    v2 = v49;
    v3 = v50;
    goto LABEL_25;
  }
  v33 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
LABEL_23:
    v21 = v14;
    goto LABEL_24;
  }
  v34 = (unint64_t)(v20 + 64) >> 6;
  if (v33 < v34)
  {
    v35 = *(_QWORD *)(v17 + 8 * v33);
    if (v35)
    {
LABEL_7:
      v23 = v6;
      v49 = v2;
      v50 = v3;
      v24 = (v35 - 1) & v35;
      v25 = __clz(__rbit64(v35)) + (v33 << 6);
      v52 = v33;
      goto LABEL_3;
    }
    v36 = v19 + 2;
    v21 = v19 + 1;
    if (v19 + 2 < v34)
    {
      v35 = *(_QWORD *)(v17 + 8 * v36);
      if (v35)
      {
LABEL_10:
        v33 = v36;
        goto LABEL_7;
      }
      v21 = v19 + 2;
      if (v19 + 3 < v34)
      {
        v35 = *(_QWORD *)(v17 + 8 * (v19 + 3));
        if (v35)
        {
          v33 = v19 + 3;
          goto LABEL_7;
        }
        v36 = v19 + 4;
        v21 = v19 + 3;
        if (v19 + 4 < v34)
        {
          v35 = *(_QWORD *)(v17 + 8 * v36);
          if (v35)
            goto LABEL_10;
          v33 = v19 + 5;
          v21 = v19 + 4;
          if (v19 + 5 < v34)
          {
            v35 = *(_QWORD *)(v17 + 8 * v33);
            if (v35)
              goto LABEL_7;
            v14 = v34 - 1;
            v37 = v19 + 6;
            while (v34 != v37)
            {
              v35 = *(_QWORD *)(v17 + 8 * v37++);
              if (v35)
              {
                v33 = v37 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v52 = v21;
  v31 = v53;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v12, 1, 1, v13);
  v24 = 0;
LABEL_25:
  v38 = v54;
  *v1 = v18;
  v1[1] = v38;
  v39 = v52;
  v1[2] = v55;
  v1[3] = v39;
  v1[4] = v24;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v31 + 48))(v12, 1, v13, v32) == 1)
  {
    sub_1004CB800((uint64_t)v12, &qword_1014053D8);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v51, 1, 1, v2);
  }
  else
  {
    v41 = (uint64_t)v47;
    sub_1004C4938((uint64_t)v12, (uint64_t)v47, &qword_101406490);
    v42 = (uint64_t)&v48[*(int *)(v2 + 48)];
    v43 = v1[5];
    result = sub_1004C4938(v41, v42, &qword_101406490);
    if (__OFADD__(v43, 1))
    {
      __break(1u);
    }
    else
    {
      v1[5] = v43 + 1;
      v44 = v51;
      v45 = (uint64_t)v51 + *(int *)(v2 + 48);
      *v51 = v43;
      sub_1004C4938(v42, v45, &qword_101406490);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v44, 0, 1, v2);
    }
  }
  return result;
}

id sub_100A667BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  objc_class *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _DWORD *v13;
  uint64_t v14;
  id v15;
  void *v16;
  os_unfair_lock_s *v17;
  id v18;
  objc_super v20;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v3)
  {
    v4 = *(id *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    v5 = (objc_class *)type metadata accessor for CRLAssetManager();
    v6 = (char *)objc_allocWithZone(v5);
    v7 = &v6[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store]);
    v8 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    v9 = type metadata accessor for CRLUnfairLock();
    v10 = swift_allocObject(v9, 24, 7);
    v11 = v0;
    v12 = v6;
    v13 = (_DWORD *)swift_slowAlloc(4, -1);
    *v13 = 0;
    *(_QWORD *)(v10 + 16) = v13;
    atomic_thread_fence(memory_order_acq_rel);
    *(_QWORD *)&v6[v8] = v10;
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    v14 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(_QWORD *)&v12[v14] = objc_msgSend((id)objc_opt_self(NSMapTable), "mapTableWithKeyOptions:valueOptions:", 517, 0);
    *(_QWORD *)&v12[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign(v7, v11);

    v20.receiver = v12;
    v20.super_class = v5;
    v15 = objc_msgSendSuper2(&v20, "init");

    v16 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = v15;
    v4 = v15;

    v3 = 0;
  }
  v17 = *(os_unfair_lock_s **)(v1 + 16);
  v18 = v3;
  os_unfair_lock_unlock(v17);
  return v4;
}

uint64_t sub_100A66950(uint64_t a1, void (*a2)(_QWORD **__return_ptr, uint64_t *, __n128), uint64_t a3, void (*a4)(_QWORD **__return_ptr, _QWORD *), uint64_t a5, void (*a6)(uint64_t **__return_ptr, _QWORD *, __n128), uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  int64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD *v51;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  void (*v61)(uint64_t **__return_ptr, _QWORD *, __n128);
  uint64_t v63;
  _QWORD *v66;
  uint64_t v67;
  _QWORD v68[2];
  uint64_t v69[4];

  v63 = *(_QWORD *)(a1 + 16);
  if (v63)
  {
    v8 = a1;
    swift_bridgeObjectRetain(a1);
    v9 = 0;
    v10 = _swiftEmptyDictionarySingleton;
    v60 = v11;
    v61 = a6;
    while (1)
    {
      *(_OWORD *)v69 = *(_OWORD *)(v8 + 16 * v9 + 32);
      v12 = v69[0];
      v13 = swift_unknownObjectRetain(v69[0]);
      a2(&v66, v69, v13);
      v14 = v66;
      if (v66)
        break;
      swift_unknownObjectRelease(v12);
LABEL_4:
      if (v63 == ++v9)
      {
        swift_bridgeObjectRelease(v8);
        goto LABEL_23;
      }
    }
    v15 = v67;
    v68[0] = v66;
    v68[1] = v67;
    a4(&v66, v68);
    v16 = (uint64_t)v66;
    v17 = v67;
    v18 = sub_1004B804C(&qword_1013E7968);
    v19 = (_QWORD *)swift_allocObject(v18, 64, 7);
    v19[6] = _swiftEmptyArrayStorage;
    swift_weakInit(v19 + 7, 0);
    v19[2] = v16;
    v19[3] = v17;
    v19[4] = v14;
    v19[5] = v15;
    v20 = v10[2];
    swift_unknownObjectRetain(v14);
    if (v20)
    {
      v21 = sub_100842E98(v16, v17);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(v10[7] + 8 * v21);
        swift_retain(v23);
        sub_100757E04(&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
        swift_release(v23);
      }
    }
    v25 = v19[2];
    v24 = v19[3];
    swift_bridgeObjectRetain(v24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    v66 = v10;
    v28 = sub_100842E98(v25, v24);
    v29 = v10[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    v32 = v27;
    if (v10[3] < v31)
    {
      sub_10081D544(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_100842E98(v25, v24);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_49;
      v28 = v33;
      v10 = v66;
      if ((v32 & 1) == 0)
        goto LABEL_18;
LABEL_16:
      v35 = v10[7];
      swift_release(*(_QWORD *)(v35 + 8 * v28));
      *(_QWORD *)(v35 + 8 * v28) = v19;
LABEL_20:
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(0x8000000000000000);
      swift_unknownObjectRelease(v68[0]);
      swift_unknownObjectRelease(v69[0]);
      v8 = v60;
      a6 = v61;
      goto LABEL_4;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v10 = v66;
      if ((v27 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_10083080C();
      v10 = v66;
      if ((v32 & 1) != 0)
        goto LABEL_16;
    }
LABEL_18:
    v10[(v28 >> 6) + 8] |= 1 << v28;
    v36 = (uint64_t *)(v10[6] + 16 * v28);
    *v36 = v25;
    v36[1] = v24;
    *(_QWORD *)(v10[7] + 8 * v28) = v19;
    v37 = v10[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_47;
    v10[2] = v39;
    swift_bridgeObjectRetain(v24);
    goto LABEL_20;
  }
  v10 = _swiftEmptyDictionarySingleton;
LABEL_23:
  v41 = v10 + 8;
  v40 = v10[8];
  v69[0] = (uint64_t)&_swiftEmptySetSingleton;
  v42 = -1 << *((_BYTE *)v10 + 32);
  if (-v42 < 64)
    v43 = ~(-1 << -(char)v42);
  else
    v43 = -1;
  v44 = v43 & v40;
  v45 = (unint64_t)(63 - v42) >> 6;
  swift_bridgeObjectRetain(v10);
  v46 = 0;
  while (1)
  {
    if (v44)
    {
      v47 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      v48 = v47 | (v46 << 6);
      goto LABEL_28;
    }
    v52 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v52 >= v45)
      goto LABEL_44;
    v53 = v41[v52];
    v54 = v46 + 1;
    if (!v53)
    {
      v54 = v46 + 2;
      if (v46 + 2 >= v45)
        goto LABEL_44;
      v53 = v41[v54];
      if (!v53)
      {
        v54 = v46 + 3;
        if (v46 + 3 >= v45)
          goto LABEL_44;
        v53 = v41[v54];
        if (!v53)
          break;
      }
    }
LABEL_43:
    v44 = (v53 - 1) & v53;
    v48 = __clz(__rbit64(v53)) + (v54 << 6);
    v46 = v54;
LABEL_28:
    v49 = *(_QWORD *)(v10[6] + 16 * v48 + 8);
    v50 = *(uint64_t **)(v10[7] + 8 * v48);
    swift_bridgeObjectRetain(v49);
    swift_retain(v50);
    swift_bridgeObjectRetain(v10);
    sub_100A692A0(v51, v50, v69, a6, a7, sub_100D14ED8, (void (*)(uint64_t, uint64_t, __n128))sub_100CFEBA8);
    swift_bridgeObjectRelease(v49);
    swift_bridgeObjectRelease(v10);
    swift_release(v50);
  }
  v55 = v46 + 4;
  if (v46 + 4 >= v45)
  {
LABEL_44:
    sub_1004D284C((uint64_t)v10);
    swift_bridgeObjectRetain(v10);
    sub_100A638BC(v56, &qword_101405650);
    v58 = v57;
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v69[0]);
    swift_bridgeObjectRelease(v10);
    return v58;
  }
  v53 = v41[v55];
  if (v53)
  {
    v54 = v46 + 4;
    goto LABEL_43;
  }
  while (1)
  {
    v54 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v54 >= v45)
      goto LABEL_44;
    v53 = v41[v54];
    ++v55;
    if (v53)
      goto LABEL_43;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100A66E54(uint64_t a1, void (*a2)(_QWORD **__return_ptr, id *, __n128), uint64_t a3, void (*a4)(_QWORD **__return_ptr, _QWORD *), uint64_t a5, void (*a6)(uint64_t **__return_ptr, _QWORD *, __n128), uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  __n128 v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int64_t v67;
  int64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  _QWORD *v72;
  int64_t v73;
  unint64_t v74;
  int64_t v75;
  int64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t result;
  _QWORD *v81;
  char *v83;
  int64_t v84;
  uint64_t v85;
  _QWORD *v88;
  uint64_t v89;
  _QWORD v90[2];
  id v91;
  id v92;

  v8 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v85 = 0;
    v9 = 0;
    v10 = 0;
    v11 = __CocoaDictionary.makeIterator()(a1) | 0x8000000000000000;
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v9 = ~v12;
    v85 = a1 + 64;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 64);
    v11 = a1;
  }
  v15 = swift_bridgeObjectRetain(v8);
  v16 = 0;
  v84 = (unint64_t)(v9 + 64) >> 6;
  v17 = _swiftEmptyDictionarySingleton;
  v83 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    v18 = v16;
    if ((v11 & 0x8000000000000000) == 0)
      break;
    v21 = __CocoaDictionary.Iterator.next()(v15);
    if (!v21)
      goto LABEL_49;
    v23 = v21;
    v24 = v22;
    v90[0] = v21;
    v25 = sub_1004B8930(0, &qword_1013E8810, CKRecordID_ptr);
    swift_unknownObjectRetain(v23);
    swift_dynamicCast(&v91, v90, v83, v25, 7);
    v26 = v91;
    swift_unknownObjectRelease(v23);
    v90[0] = v24;
    v27 = sub_1004B8930(0, (unint64_t *)&qword_1013E83B8, CKRecord_ptr);
    swift_unknownObjectRetain(v24);
    swift_dynamicCast(&v91, v90, v83, v27, 7);
    v28 = v91;
    v29 = swift_unknownObjectRelease(v24);
    if (!v26)
      goto LABEL_49;
LABEL_33:
    v91 = v26;
    v92 = v28;
    a2(&v88, &v91, v29);
    v35 = v88;
    if (v88)
    {
      v36 = v89;
      v90[0] = v88;
      v90[1] = v89;
      a4(&v88, v90);
      v37 = (uint64_t)v88;
      v38 = v89;
      v39 = sub_1004B804C(&qword_1013E7968);
      v40 = (_QWORD *)swift_allocObject(v39, 64, 7);
      v40[6] = _swiftEmptyArrayStorage;
      swift_weakInit(v40 + 7, 0);
      v40[2] = v37;
      v40[3] = v38;
      v40[4] = v35;
      v40[5] = v36;
      v41 = v17[2];
      swift_unknownObjectRetain(v35);
      if (v41)
      {
        v42 = sub_100842E98(v37, v38);
        if ((v43 & 1) != 0)
        {
          v44 = *(_QWORD *)(v17[7] + 8 * v42);
          swift_retain(v44);
          sub_100757E04(&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
          swift_release(v44);
        }
      }
      v45 = v40[2];
      v46 = v40[3];
      v81 = v40;
      swift_bridgeObjectRetain(v46);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
      v88 = v17;
      v49 = sub_100842E98(v45, v46);
      v50 = v17[2];
      v51 = (v48 & 1) == 0;
      v52 = v50 + v51;
      if (__OFADD__(v50, v51))
        goto LABEL_74;
      v53 = v48;
      if (v17[3] >= v52)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_10083080C();
      }
      else
      {
        sub_10081D544(v52, isUniquelyReferenced_nonNull_native);
        v54 = sub_100842E98(v45, v46);
        if ((v53 & 1) != (v55 & 1))
          goto LABEL_76;
        v49 = v54;
      }
      v17 = v88;
      if ((v53 & 1) != 0)
      {
        v56 = v88[7];
        v57 = 8 * v49;
        swift_release(*(_QWORD *)(v56 + v57));
        *(_QWORD *)(v56 + v57) = v81;
      }
      else
      {
        v88[(v49 >> 6) + 8] |= 1 << v49;
        v58 = (uint64_t *)(v17[6] + 16 * v49);
        *v58 = v45;
        v58[1] = v46;
        *(_QWORD *)(v17[7] + 8 * v49) = v81;
        v59 = v17[2];
        v60 = __OFADD__(v59, 1);
        v61 = v59 + 1;
        if (v60)
          goto LABEL_75;
        v17[2] = v61;
        swift_bridgeObjectRetain(v46);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v90[0]);

    }
    else
    {

    }
  }
  if (v10)
  {
    v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v20 = v19 | (v16 << 6);
    goto LABEL_32;
  }
  v30 = v16 + 1;
  if (__OFADD__(v16, 1))
    goto LABEL_73;
  if (v30 >= v84)
    goto LABEL_49;
  v31 = *(_QWORD *)(v85 + 8 * v30);
  ++v16;
  if (v31)
    goto LABEL_31;
  v16 = v18 + 2;
  if (v18 + 2 >= v84)
    goto LABEL_49;
  v31 = *(_QWORD *)(v85 + 8 * v16);
  if (v31)
    goto LABEL_31;
  v16 = v18 + 3;
  if (v18 + 3 >= v84)
    goto LABEL_49;
  v31 = *(_QWORD *)(v85 + 8 * v16);
  if (v31)
    goto LABEL_31;
  v16 = v18 + 4;
  if (v18 + 4 >= v84)
    goto LABEL_49;
  v31 = *(_QWORD *)(v85 + 8 * v16);
  if (v31)
    goto LABEL_31;
  v16 = v18 + 5;
  if (v18 + 5 >= v84)
    goto LABEL_49;
  v31 = *(_QWORD *)(v85 + 8 * v16);
  if (v31)
  {
LABEL_31:
    v10 = (v31 - 1) & v31;
    v20 = __clz(__rbit64(v31)) + (v16 << 6);
LABEL_32:
    v33 = 8 * v20;
    v34 = *(void **)(*(_QWORD *)(v11 + 56) + v33);
    v26 = *(id *)(*(_QWORD *)(v11 + 48) + v33);
    v28 = v34;
    if (!v26)
      goto LABEL_49;
    goto LABEL_33;
  }
  v32 = v18 + 6;
  while (v84 != v32)
  {
    v31 = *(_QWORD *)(v85 + 8 * v32++);
    if (v31)
    {
      v16 = v32 - 1;
      goto LABEL_31;
    }
  }
LABEL_49:
  sub_1004D284C(v11);
  v63 = v17 + 8;
  v62 = v17[8];
  v91 = &_swiftEmptySetSingleton;
  v64 = -1 << *((_BYTE *)v17 + 32);
  if (-v64 < 64)
    v65 = ~(-1 << -(char)v64);
  else
    v65 = -1;
  v66 = v65 & v62;
  v67 = (unint64_t)(63 - v64) >> 6;
  swift_bridgeObjectRetain(v17);
  v68 = 0;
  while (2)
  {
    if (v66)
    {
      v69 = __clz(__rbit64(v66));
      v66 &= v66 - 1;
      v70 = v69 | (v68 << 6);
LABEL_54:
      v71 = *(uint64_t **)(v17[7] + 8 * v70);
      swift_bridgeObjectRetain(*(_QWORD *)(v17[6] + 16 * v70 + 8));
      swift_retain(v71);
      swift_bridgeObjectRetain(v17);
      sub_100A692A0(v72, v71, (uint64_t *)&v91, a6, a7, sub_100D14ED8, (void (*)(uint64_t, uint64_t, __n128))sub_100CFEBA8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release(v71);
      continue;
    }
    break;
  }
  v73 = v68 + 1;
  if (__OFADD__(v68, 1))
  {
    __break(1u);
    goto LABEL_72;
  }
  if (v73 >= v67)
    goto LABEL_70;
  v74 = v63[v73];
  v75 = v68 + 1;
  if (v74)
    goto LABEL_69;
  v75 = v68 + 2;
  if (v68 + 2 >= v67)
    goto LABEL_70;
  v74 = v63[v75];
  if (v74)
    goto LABEL_69;
  v75 = v68 + 3;
  if (v68 + 3 >= v67)
    goto LABEL_70;
  v74 = v63[v75];
  if (v74)
  {
LABEL_69:
    v66 = (v74 - 1) & v74;
    v70 = __clz(__rbit64(v74)) + (v75 << 6);
    v68 = v75;
    goto LABEL_54;
  }
  v76 = v68 + 4;
  if (v68 + 4 >= v67)
  {
LABEL_70:
    sub_1004D284C((uint64_t)v17);
    swift_bridgeObjectRetain(v17);
    sub_100A638BC(v77, &qword_101405650);
    v79 = v78;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v79;
  }
  v74 = v63[v76];
  if (v74)
  {
    v75 = v68 + 4;
    goto LABEL_69;
  }
  while (1)
  {
    v75 = v76 + 1;
    if (__OFADD__(v76, 1))
      break;
    if (v75 >= v67)
      goto LABEL_70;
    v74 = v63[v75];
    ++v76;
    if (v74)
      goto LABEL_69;
  }
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100A675B4(uint64_t a1, void (*a2)(_QWORD **__return_ptr, id *, __n128), uint64_t a3, void (*a4)(_QWORD **__return_ptr, _QWORD *), uint64_t a5, void (*a6)(uint64_t **__return_ptr, _QWORD *, __n128), uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t i;
  uint64_t v17;
  id v18;
  __n128 v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int64_t v55;
  int64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  _QWORD *v60;
  int64_t v61;
  unint64_t v62;
  int64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v71;
  int64_t v72;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD v79[2];
  id v80;
  __int128 v81;

  v9 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 64);
  v72 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v13 = 0;
  v14 = _swiftEmptyDictionarySingleton;
  v69 = v9;
  if (!v12)
    goto LABEL_7;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v13 << 6); ; i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    v17 = *(_QWORD *)(a1 + 56);
    v80 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * i);
    v81 = *(_OWORD *)(v17 + 16 * i);
    v75 = v81;
    v18 = v80;
    v19 = swift_unknownObjectRetain(v75);
    a2(&v77, &v80, v19);
    v20 = v77;
    if (v77)
    {
      v24 = v78;
      v79[0] = v77;
      v79[1] = v78;
      a4(&v77, v79);
      v25 = (uint64_t)v77;
      v26 = v78;
      v27 = sub_1004B804C(&qword_1013E7830);
      v28 = (_QWORD *)swift_allocObject(v27, 64, 7);
      v28[6] = _swiftEmptyArrayStorage;
      swift_weakInit(v28 + 7, 0);
      v28[2] = v25;
      v28[3] = v26;
      v28[4] = v20;
      v28[5] = v24;
      v29 = v14[2];
      swift_unknownObjectRetain(v20);
      if (v29)
      {
        v30 = sub_100842E98(v25, v26);
        if ((v31 & 1) != 0)
        {
          v32 = *(_QWORD *)(v14[7] + 8 * v30);
          swift_retain(v32);
          sub_100757E04(&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
          swift_release(v32);
        }
      }
      v33 = v28[2];
      v34 = v28[3];
      v76 = v28;
      swift_bridgeObjectRetain(v34);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
      v77 = v14;
      v71 = v33;
      v37 = sub_100842E98(v33, v34);
      v38 = v14[2];
      v39 = (v36 & 1) == 0;
      v40 = v38 + v39;
      if (__OFADD__(v38, v39))
        goto LABEL_64;
      v41 = v36;
      if (v14[3] >= v40)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_10083196C();
      }
      else
      {
        sub_10081F214(v40, isUniquelyReferenced_nonNull_native);
        v42 = sub_100842E98(v71, v34);
        if ((v41 & 1) != (v43 & 1))
          goto LABEL_66;
        v37 = v42;
      }
      v9 = v69;
      v14 = v77;
      if ((v41 & 1) != 0)
      {
        v44 = v77[7];
        v45 = 8 * v37;
        swift_release(*(_QWORD *)(v44 + v45));
        *(_QWORD *)(v44 + v45) = v76;
      }
      else
      {
        v77[(v37 >> 6) + 8] |= 1 << v37;
        v46 = (uint64_t *)(v14[6] + 16 * v37);
        *v46 = v71;
        v46[1] = v34;
        *(_QWORD *)(v14[7] + 8 * v37) = v76;
        v47 = v14[2];
        v48 = __OFADD__(v47, 1);
        v49 = v47 + 1;
        if (v48)
          goto LABEL_65;
        v14[2] = v49;
        swift_bridgeObjectRetain(v34);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v79[0]);

      swift_unknownObjectRelease(v81);
      if (v12)
        goto LABEL_4;
    }
    else
    {
      swift_unknownObjectRelease(v75);

      if (v12)
        goto LABEL_4;
    }
LABEL_7:
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (v21 >= v72)
      goto LABEL_38;
    v22 = *(_QWORD *)(v9 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v72)
        goto LABEL_38;
      v22 = *(_QWORD *)(v9 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v72)
          goto LABEL_38;
        v22 = *(_QWORD *)(v9 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v72)
            goto LABEL_38;
          v22 = *(_QWORD *)(v9 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v12 = (v22 - 1) & v22;
  }
  v23 = v21 + 4;
  if (v23 >= v72)
  {
LABEL_38:
    swift_release(a1);
    v51 = v14 + 8;
    v50 = v14[8];
    v80 = &_swiftEmptySetSingleton;
    v52 = -1 << *((_BYTE *)v14 + 32);
    if (-v52 < 64)
      v53 = ~(-1 << -(char)v52);
    else
      v53 = -1;
    v54 = v53 & v50;
    v55 = (unint64_t)(63 - v52) >> 6;
    swift_bridgeObjectRetain(v14);
    v56 = 0;
    while (1)
    {
      if (v54)
      {
        v57 = __clz(__rbit64(v54));
        v54 &= v54 - 1;
        v58 = v57 | (v56 << 6);
      }
      else
      {
        v61 = v56 + 1;
        if (__OFADD__(v56, 1))
          goto LABEL_61;
        if (v61 >= v55)
        {
LABEL_59:
          sub_1004D284C((uint64_t)v14);
          swift_bridgeObjectRetain(v14);
          sub_100A638BC(v65, &qword_101405440);
          v67 = v66;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v67;
        }
        v62 = v51[v61];
        v63 = v56 + 1;
        if (!v62)
        {
          v63 = v56 + 2;
          if (v56 + 2 >= v55)
            goto LABEL_59;
          v62 = v51[v63];
          if (!v62)
          {
            v63 = v56 + 3;
            if (v56 + 3 >= v55)
              goto LABEL_59;
            v62 = v51[v63];
            if (!v62)
            {
              v64 = v56 + 4;
              if (v56 + 4 >= v55)
                goto LABEL_59;
              v62 = v51[v64];
              if (!v62)
              {
                while (1)
                {
                  v63 = v64 + 1;
                  if (__OFADD__(v64, 1))
                    goto LABEL_62;
                  if (v63 >= v55)
                    goto LABEL_59;
                  v62 = v51[v63];
                  ++v64;
                  if (v62)
                    goto LABEL_58;
                }
              }
              v63 = v56 + 4;
            }
          }
        }
LABEL_58:
        v54 = (v62 - 1) & v62;
        v58 = __clz(__rbit64(v62)) + (v63 << 6);
        v56 = v63;
      }
      v59 = *(uint64_t **)(v14[7] + 8 * v58);
      swift_bridgeObjectRetain(*(_QWORD *)(v14[6] + 16 * v58 + 8));
      swift_retain(v59);
      swift_bridgeObjectRetain(v14);
      sub_100A692A0(v60, v59, (uint64_t *)&v80, a6, a7, sub_100D14ED8, (void (*)(uint64_t, uint64_t, __n128))sub_100CFED70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release(v59);
    }
  }
  v22 = *(_QWORD *)(v9 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v72)
      goto LABEL_38;
    v22 = *(_QWORD *)(v9 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100A67BD4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, id *, double), uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *), uint64_t a5, void (*a6)(_QWORD **__return_ptr, uint64_t *, __n128))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  unint64_t v18;
  void *v19;
  id v20;
  double v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  unint64_t v26;
  void *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  int64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t result;
  uint64_t v85;
  int64_t v86;
  int64_t v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  unint64_t v94;
  void *v95;
  uint64_t v96;
  unint64_t v97;
  void *v98;
  unint64_t v99;
  void *v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  void *v104;
  unint64_t v105;
  void *v106;

  v85 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v86 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  v10 = _swiftEmptyDictionarySingleton;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v90 = v9;
      v12 = v11 | (v9 << 6);
      goto LABEL_5;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (v28 >= v86)
      goto LABEL_41;
    v29 = *(_QWORD *)(v85 + 8 * v28);
    v30 = v9 + 1;
    if (!v29)
    {
      v30 = v9 + 2;
      if (v9 + 2 >= v86)
        goto LABEL_41;
      v29 = *(_QWORD *)(v85 + 8 * v30);
      if (!v29)
      {
        v30 = v9 + 3;
        if (v9 + 3 >= v86)
          goto LABEL_41;
        v29 = *(_QWORD *)(v85 + 8 * v30);
        if (!v29)
        {
          v30 = v9 + 4;
          if (v9 + 4 >= v86)
            goto LABEL_41;
          v29 = *(_QWORD *)(v85 + 8 * v30);
          if (!v29)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v29 - 1) & v29;
    v90 = v30;
    v12 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    v13 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 40 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = (void *)v14[2];
    v18 = v14[3];
    v19 = (void *)v14[4];
    v101 = v13;
    v102 = v15;
    v103 = v16;
    v104 = v17;
    v105 = v18;
    v106 = v19;
    v20 = v13;
    v21 = sub_1007B0D28(v15, v16, v17, v18, v19);
    a2(&v91, &v101, v21);
    v22 = v92;
    if ((~v92 & 0xF000000000000007) == 0)
    {

      v23 = v15;
      v24 = v16;
      v25 = v17;
      v26 = v18;
      v27 = v19;
      goto LABEL_7;
    }
    v32 = v91;
    v34 = v93;
    v33 = v94;
    v35 = v95;
    v96 = v91;
    v97 = v92;
    v98 = v93;
    v99 = v94;
    v100 = v95;
    a4(&v91, &v96);
    v36 = v91;
    v37 = v92;
    v38 = sub_1004B804C(&qword_1013E7950);
    v39 = (_QWORD *)swift_allocObject(v38, 88, 7);
    v39[9] = _swiftEmptyArrayStorage;
    swift_weakInit(v39 + 10, 0);
    v39[2] = v36;
    v39[3] = v37;
    v39[4] = v32;
    v39[5] = v22;
    v39[6] = v34;
    v39[7] = v33;
    v39[8] = v35;
    if (v10[2])
    {
      sub_1007B0D28(v32, v22, v34, v33, v35);
      v40 = sub_100842E98(v36, v37);
      if ((v41 & 1) != 0)
      {
        v42 = *(_QWORD *)(v10[7] + 8 * v40);
        swift_retain(v42);
        sub_100757E04(&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
        swift_release(v42);
      }
    }
    else
    {
      sub_100B010EC(v32, v22, v34, v33, v35);
    }
    v44 = v39[2];
    v43 = v39[3];
    swift_bridgeObjectRetain(v43);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    v91 = (uint64_t)v10;
    v47 = sub_100842E98(v44, v43);
    v48 = v10[2];
    v49 = (v46 & 1) == 0;
    v50 = v48 + v49;
    if (__OFADD__(v48, v49))
      goto LABEL_67;
    v51 = v46;
    if (v10[3] >= v50)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v10 = (_QWORD *)v91;
        if ((v46 & 1) == 0)
          goto LABEL_38;
      }
      else
      {
        sub_100831F68();
        v10 = (_QWORD *)v91;
        if ((v51 & 1) == 0)
          goto LABEL_38;
      }
    }
    else
    {
      sub_10081FB4C(v50, isUniquelyReferenced_nonNull_native);
      v52 = sub_100842E98(v44, v43);
      if ((v51 & 1) != (v53 & 1))
        goto LABEL_69;
      v47 = v52;
      v10 = (_QWORD *)v91;
      if ((v51 & 1) == 0)
      {
LABEL_38:
        v10[(v47 >> 6) + 8] |= 1 << v47;
        v56 = (uint64_t *)(v10[6] + 16 * v47);
        *v56 = v44;
        v56[1] = v43;
        *(_QWORD *)(v10[7] + 8 * v47) = v39;
        v57 = v10[2];
        v58 = __OFADD__(v57, 1);
        v59 = v57 + 1;
        if (v58)
          goto LABEL_68;
        v10[2] = v59;
        swift_bridgeObjectRetain(v43);
        goto LABEL_40;
      }
    }
    v54 = v10[7];
    v55 = 8 * v47;
    swift_release(*(_QWORD *)(v54 + v55));
    *(_QWORD *)(v54 + v55) = v39;
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1007B0C8C(v96, v97, v98, v99, v100);
    v60 = v102;
    v61 = v103;
    v62 = v104;
    v63 = v105;
    v64 = v106;

    v23 = v60;
    v24 = v61;
    v25 = v62;
    v26 = v63;
    v27 = v64;
LABEL_7:
    sub_1007B0C8C(v23, v24, v25, v26, v27);
    v9 = v90;
  }
  v31 = v9 + 5;
  if (v9 + 5 >= v86)
  {
LABEL_41:
    swift_release(a1);
    v66 = v10 + 8;
    v65 = v10[8];
    v101 = &_swiftEmptySetSingleton;
    v67 = -1 << *((_BYTE *)v10 + 32);
    if (-v67 < 64)
      v68 = ~(-1 << -(char)v67);
    else
      v68 = -1;
    v69 = v68 & v65;
    v70 = (unint64_t)(63 - v67) >> 6;
    swift_bridgeObjectRetain(v10);
    v71 = 0;
    while (1)
    {
      if (v69)
      {
        v72 = __clz(__rbit64(v69));
        v69 &= v69 - 1;
        v73 = v72 | (v71 << 6);
      }
      else
      {
        v76 = v71 + 1;
        if (__OFADD__(v71, 1))
          goto LABEL_64;
        if (v76 >= v70)
        {
LABEL_62:
          sub_1004D284C((uint64_t)v10);
          swift_bridgeObjectRetain(v10);
          sub_100A63BD4(v80);
          v82 = v81;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v82;
        }
        v77 = v66[v76];
        v78 = v71 + 1;
        if (!v77)
        {
          v78 = v71 + 2;
          if (v71 + 2 >= v70)
            goto LABEL_62;
          v77 = v66[v78];
          if (!v77)
          {
            v78 = v71 + 3;
            if (v71 + 3 >= v70)
              goto LABEL_62;
            v77 = v66[v78];
            if (!v77)
            {
              v79 = v71 + 4;
              if (v71 + 4 >= v70)
                goto LABEL_62;
              v77 = v66[v79];
              if (!v77)
              {
                while (1)
                {
                  v78 = v79 + 1;
                  if (__OFADD__(v79, 1))
                    goto LABEL_65;
                  if (v78 >= v70)
                    goto LABEL_62;
                  v77 = v66[v78];
                  ++v79;
                  if (v77)
                    goto LABEL_61;
                }
              }
              v78 = v71 + 4;
            }
          }
        }
LABEL_61:
        v69 = (v77 - 1) & v77;
        v73 = __clz(__rbit64(v77)) + (v78 << 6);
        v71 = v78;
      }
      v74 = *(uint64_t **)(v10[7] + 8 * v73);
      swift_bridgeObjectRetain(*(_QWORD *)(v10[6] + 16 * v73 + 8));
      swift_retain(v74);
      swift_bridgeObjectRetain(v10);
      sub_100A69728(v75, v74, (uint64_t *)&v101, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release(v74);
    }
  }
  v29 = *(_QWORD *)(v85 + 8 * v31);
  if (v29)
  {
    v30 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v86)
      goto LABEL_41;
    v29 = *(_QWORD *)(v85 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_24;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100A68270(uint64_t a1, void (*a2)(char **__return_ptr, void **, __n128), char *a3, void (*a4)(char **), uint64_t a5, void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  __n128 v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char **);
  uint64_t v79;
  unint64_t v80;
  void (*v81)(char **__return_ptr, void **, __n128);
  char *v82;
  void (*v83)(uint64_t *);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void *v90;

  v83 = a6;
  v84 = a7;
  v78 = a4;
  v79 = a5;
  v81 = a2;
  v82 = a3;
  v8 = sub_1004B804C(&qword_101405418);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v74 - v12;
  v14 = type metadata accessor for UUID(0);
  v86 = *(_QWORD *)(v14 - 8);
  v87 = v14;
  v15 = __chkstk_darwin(v14);
  v85 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v77 = (char *)&v74 - v17;
  if ((unint64_t)a1 >> 62)
    goto LABEL_29;
  v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (v18)
  {
    while (1)
    {
      if (v18 < 1)
        goto LABEL_63;
      v19 = 0;
      v20 = (char *)&_swiftEmptyDictionarySingleton;
      v80 = a1 & 0xC000000000000001;
      v75 = v18;
      v76 = a1;
      while (1)
      {
        if (v80)
        {
          v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, a1);
        }
        else
        {
          v21 = *(void **)(a1 + 8 * v19 + 32);
          v22 = swift_retain(v21);
        }
        v90 = v21;
        v81(&v88, &v90, v22);
        v23 = v88;
        if (v88)
          break;
        swift_release(v21);
LABEL_6:
        if (v18 == ++v19)
        {
          swift_bridgeObjectRelease(a1);
          goto LABEL_34;
        }
      }
      v89 = v88;
      v24 = v77;
      v78(&v89);
      v25 = sub_1004B804C(&qword_1013E77F0);
      v26 = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
      *(_QWORD *)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 120)) = _swiftEmptyArrayStorage;
      swift_weakInit(v26 + *(_QWORD *)(*(_QWORD *)v26 + 128), 0);
      (*(void (**)(uint64_t, char *, uint64_t))(v86 + 32))(v26 + *(_QWORD *)(*(_QWORD *)v26 + 104), v24, v87);
      *(_QWORD *)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 112)) = v23;
      v27 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 104);
      v28 = *((_QWORD *)v20 + 2);
      v29 = swift_retain(v23);
      if (v28)
      {
        v30 = sub_100842EFC(v27);
        if ((v31 & 1) != 0)
        {
          v32 = *(_QWORD *)(*((_QWORD *)v20 + 7) + 8 * v30);
          swift_retain(v32);
          sub_100757E04(&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
          v29 = swift_release(v32);
        }
      }
      v33 = v85;
      a1 = *(_QWORD *)(v86 + 16);
      ((void (*)(uint64_t, uint64_t, uint64_t, __n128))a1)(v85, v27, v87, v29);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v20);
      v88 = v20;
      v36 = sub_100842EFC(v33);
      v37 = *((_QWORD *)v20 + 2);
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (!__OFADD__(v37, v38))
        break;
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      if (a1 < 0)
        v48 = a1;
      else
        v48 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v18 = _CocoaArrayWrapper.endIndex.getter(v48);
      if (!v18)
        goto LABEL_33;
    }
    v40 = v35;
    if (*((_QWORD *)v20 + 3) < v39)
    {
      sub_1008226E4(v39, isUniquelyReferenced_nonNull_native);
      v41 = sub_100842EFC(v85);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_65;
      v36 = v41;
      v20 = v88;
      if ((v40 & 1) == 0)
        goto LABEL_18;
LABEL_22:
      v46 = *((_QWORD *)v20 + 7);
      swift_release(*(_QWORD *)(v46 + 8 * v36));
      *(_QWORD *)(v46 + 8 * v36) = v26;
LABEL_23:
      v47 = swift_bridgeObjectRelease(0x8000000000000000);
      (*(void (**)(uint64_t, uint64_t, __n128))(v86 + 8))(v85, v87, v47);
      swift_release(v89);
      swift_release(v90);
      v18 = v75;
      a1 = v76;
      goto LABEL_6;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v20 = v88;
      if ((v35 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_100833C28();
      v20 = v88;
      if ((v40 & 1) != 0)
        goto LABEL_22;
    }
LABEL_18:
    *(_QWORD *)&v20[8 * (v36 >> 6) + 64] |= 1 << v36;
    ((void (*)(unint64_t, uint64_t, uint64_t))a1)(*((_QWORD *)v20 + 6) + *(_QWORD *)(v86 + 72) * v36, v85, v87);
    *(_QWORD *)(*((_QWORD *)v20 + 7) + 8 * v36) = v26;
    v43 = *((_QWORD *)v20 + 2);
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_28;
    *((_QWORD *)v20 + 2) = v45;
    goto LABEL_23;
  }
LABEL_33:
  swift_bridgeObjectRelease(a1);
  v20 = (char *)&_swiftEmptyDictionarySingleton;
LABEL_34:
  v90 = &_swiftEmptySetSingleton;
  v49 = *((_QWORD *)v20 + 8);
  v82 = v20 + 64;
  v50 = -1 << v20[32];
  if (-v50 < 64)
    v51 = ~(-1 << -(char)v50);
  else
    v51 = -1;
  v52 = v51 & v49;
  v85 = (unint64_t)(63 - v50) >> 6;
  v80 = v85 - 1;
  v81 = (void (*)(char **__return_ptr, void **, __n128))v50;
  v53 = swift_bridgeObjectRetain(v20);
  v54 = 0;
  if (!v52)
    goto LABEL_42;
LABEL_40:
  v58 = (v52 - 1) & v52;
  v59 = __clz(__rbit64(v52)) | (v54 << 6);
  v60 = v54;
LABEL_41:
  v61 = (uint64_t)v11;
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v86 + 16))(v11, *((_QWORD *)v20 + 6) + *(_QWORD *)(v86 + 72) * v59, v87, v53);
  v62 = *((_QWORD *)v20 + 7);
  v63 = sub_1004B804C(&qword_101405420);
  v64 = *(_QWORD *)(v62 + 8 * v59);
  *(_QWORD *)&v11[*(int *)(v63 + 48)] = v64;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v11, 0, 1, v63);
  swift_retain(v64);
  v65 = v60;
  while (1)
  {
    v11 = (char *)v61;
    sub_1004C4938(v61, (uint64_t)v13, &qword_101405418);
    v69 = sub_1004B804C(&qword_101405420);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v13, 1, v69) == 1)
    {
      sub_1004D284C((uint64_t)v20);
      swift_bridgeObjectRetain(v20);
      sub_100A64B90(v70, &qword_101405420, &qword_101405428);
      v72 = v71;
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v90);
      swift_bridgeObjectRelease(v20);
      return v72;
    }
    v55 = *(_QWORD *)&v13[*(int *)(v69 + 48)];
    swift_bridgeObjectRetain(v20);
    sub_100A69BF8(v56, v55, (uint64_t *)&v90, v83, v84);
    swift_bridgeObjectRelease(v20);
    v57 = swift_release(v55);
    (*(void (**)(char *, uint64_t, __n128))(v86 + 8))(v13, v87, v57);
    v54 = v65;
    v52 = v58;
    if (v58)
      goto LABEL_40;
LABEL_42:
    v60 = v54 + 1;
    if (__OFADD__(v54, 1))
      break;
    v65 = v54;
    if (v60 < v85)
    {
      v66 = *(_QWORD *)&v82[8 * v60];
      if (v66)
        goto LABEL_45;
      v67 = v54 + 2;
      v65 = v54 + 1;
      if (v54 + 2 < v85)
      {
        v66 = *(_QWORD *)&v82[8 * v67];
        if (v66)
          goto LABEL_48;
        v65 = v54 + 2;
        if (v54 + 3 < v85)
        {
          v66 = *(_QWORD *)&v82[8 * v54 + 24];
          if (v66)
          {
            v60 = v54 + 3;
            goto LABEL_45;
          }
          v67 = v54 + 4;
          v65 = v54 + 3;
          if (v54 + 4 < v85)
          {
            v66 = *(_QWORD *)&v82[8 * v67];
            if (!v66)
            {
              while (1)
              {
                v60 = v67 + 1;
                if (__OFADD__(v67, 1))
                  goto LABEL_64;
                if (v60 >= v85)
                {
                  v65 = v80;
                  goto LABEL_59;
                }
                v66 = *(_QWORD *)&v82[8 * v60];
                ++v67;
                if (v66)
                  goto LABEL_45;
              }
            }
LABEL_48:
            v60 = v67;
LABEL_45:
            v58 = (v66 - 1) & v66;
            v59 = __clz(__rbit64(v66)) + (v60 << 6);
            goto LABEL_41;
          }
        }
      }
    }
LABEL_59:
    v68 = sub_1004B804C(&qword_101405420);
    v61 = (uint64_t)v11;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v11, 1, 1, v68);
    v58 = 0;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v87);
  __break(1u);
  return result;
}

uint64_t sub_100A689F4(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  char *v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, __n128);
  uint64_t v48;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  __n128 v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  unint64_t v75;
  int64_t v76;
  unint64_t v77;
  void (*v78)(char *, unint64_t, uint64_t, __n128);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  unint64_t v84;
  int64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t result;
  uint64_t v92;
  char *v93;
  void (*v94)(_QWORD);
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  void (*v100)(uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  char *v106;
  void (*v107)(uint64_t);
  uint64_t v108;
  char *v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;

  v107 = a6;
  v108 = a7;
  v100 = a4;
  v101 = a5;
  v10 = sub_1004B804C(&qword_101405450);
  __chkstk_darwin(v10);
  v109 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v92 - v13;
  v112 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v106 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v99 = (char *)&v92 - v18;
  v19 = sub_1004B804C(&qword_101405458);
  __chkstk_darwin(v19);
  v98 = (uint64_t)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v92 - v22;
  v102 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v102);
  v105 = (uint64_t)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v28 = (char *)&v92 - v27;
  v29 = *(_QWORD *)(a1 + 16);
  v111 = v15;
  if (v29)
  {
    v30 = a1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v103 = *(_QWORD *)(v26 + 72);
    v104 = v26;
    v92 = a1;
    swift_bridgeObjectRetain(a1);
    v31 = (char *)_swiftEmptyDictionarySingleton;
    v32 = v102;
    v94 = a2;
    v95 = a3;
    v97 = v14;
    v93 = v23;
    v96 = v28;
    do
    {
      v110 = v29;
      sub_1004B8460(v30, (uint64_t)v28, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      a2(v28);
      v34 = v104;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v23, 1, v32) == 1)
      {
        sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_1004CB800((uint64_t)v23, &qword_101405458);
        v33 = v110;
      }
      else
      {
        v35 = v105;
        sub_1004B84E0((uint64_t)v23, v105, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        v36 = v32;
        v37 = v99;
        v100(v35);
        v38 = v98;
        sub_1004B8460(v35, v98, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v36);
        v39 = sub_1004B804C(&qword_1013E7848);
        v40 = swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
        *(_QWORD *)(v40 + *(_QWORD *)(*(_QWORD *)v40 + 120)) = _swiftEmptyArrayStorage;
        swift_weakInit(v40 + *(_QWORD *)(*(_QWORD *)v40 + 128), 0);
        v41 = v111;
        (*(void (**)(uint64_t, char *, uint64_t))(v111 + 32))(v40 + *(_QWORD *)(*(_QWORD *)v40 + 104), v37, v112);
        sub_1004C4938(v38, v40 + *(_QWORD *)(*(_QWORD *)v40 + 112), &qword_101405458);
        v43 = v40 + *(_QWORD *)(*(_QWORD *)v40 + 104);
        if (*((_QWORD *)v31 + 2))
        {
          v44 = sub_100842EFC(v40 + *(_QWORD *)(*(_QWORD *)v40 + 104));
          if ((v45 & 1) != 0)
          {
            v46 = *(_QWORD *)(*((_QWORD *)v31 + 7) + 8 * v44);
            swift_retain(v46);
            sub_100757E04(&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, "expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1004F5394((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2u, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u);
            v42 = swift_release(v46);
          }
        }
        v47 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v41 + 16);
        v48 = (uint64_t)v106;
        v47(v106, v43, v112, v42);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v113 = v31;
        v51 = sub_100842EFC(v48);
        v52 = *((_QWORD *)v31 + 2);
        v53 = (v50 & 1) == 0;
        v54 = v52 + v53;
        v33 = v110;
        if (__OFADD__(v52, v53))
        {
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        v55 = v50;
        if (*((_QWORD *)v31 + 3) >= v54)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1008344C8();
        }
        else
        {
          sub_100823B7C(v54, isUniquelyReferenced_nonNull_native);
          v56 = sub_100842EFC(v48);
          if ((v55 & 1) != (v57 & 1))
            goto LABEL_54;
          v51 = v56;
        }
        v28 = v96;
        v14 = v97;
        v31 = v113;
        if ((v55 & 1) != 0)
        {
          v58 = *((_QWORD *)v113 + 7);
          v59 = 8 * v51;
          swift_release(*(_QWORD *)(v58 + v59));
          *(_QWORD *)(v58 + v59) = v40;
          v60 = v111;
        }
        else
        {
          *(_QWORD *)&v113[8 * (v51 >> 6) + 64] |= 1 << v51;
          v60 = v111;
          ((void (*)(unint64_t, char *, uint64_t))v47)(*((_QWORD *)v31 + 6) + *(_QWORD *)(v111 + 72) * v51, v106, v112);
          *(_QWORD *)(*((_QWORD *)v31 + 7) + 8 * v51) = v40;
          v61 = *((_QWORD *)v31 + 2);
          v62 = __OFADD__(v61, 1);
          v63 = v61 + 1;
          if (v62)
            goto LABEL_52;
          *((_QWORD *)v31 + 2) = v63;
        }
        v64 = swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v106, v112, v64);
        sub_1004B84A4(v105, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_1004B84A4((uint64_t)v28, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        a2 = v94;
        v23 = v93;
        v32 = v102;
      }
      v30 += v103;
      v29 = v33 - 1;
    }
    while (v29);
    swift_bridgeObjectRelease();
    v15 = v111;
  }
  else
  {
    v31 = (char *)_swiftEmptyDictionarySingleton;
  }
  v113 = (char *)&_swiftEmptySetSingleton;
  v65 = *((_QWORD *)v31 + 8);
  v106 = v31 + 64;
  v66 = -1 << v31[32];
  if (-v66 < 64)
    v67 = ~(-1 << -(char)v66);
  else
    v67 = -1;
  v68 = v67 & v65;
  v110 = (unint64_t)(63 - v66) >> 6;
  v104 = v110 - 1;
  v105 = v66;
  v69 = swift_bridgeObjectRetain(v31);
  v70 = 0;
  if (!v68)
    goto LABEL_30;
LABEL_28:
  v74 = (v68 - 1) & v68;
  v75 = __clz(__rbit64(v68)) | (v70 << 6);
  v76 = v70;
  while (2)
  {
    v77 = *((_QWORD *)v31 + 6) + *(_QWORD *)(v15 + 72) * v75;
    v78 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v15 + 16);
    v79 = (uint64_t)v109;
    v78(v109, v77, v112, v69);
    v80 = *((_QWORD *)v31 + 7);
    v81 = sub_1004B804C(&qword_101405460);
    v82 = *(_QWORD *)(v80 + 8 * v75);
    *(_QWORD *)(v79 + *(int *)(v81 + 48)) = v82;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v79, 0, 1, v81);
    swift_retain(v82);
    v83 = v76;
    while (1)
    {
      sub_1004C4938(v79, (uint64_t)v14, &qword_101405450);
      v87 = sub_1004B804C(&qword_101405460);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 48))(v14, 1, v87) == 1)
      {
        sub_1004D284C((uint64_t)v31);
        swift_bridgeObjectRetain(v31);
        sub_100A64B90(v88, &qword_101405460, &qword_101405468);
        v90 = v89;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v90;
      }
      v71 = *(_QWORD *)&v14[*(int *)(v87 + 48)];
      swift_bridgeObjectRetain(v31);
      sub_100A6A1DC(v72, v71, (uint64_t *)&v113, v107, v108);
      swift_bridgeObjectRelease();
      v73 = swift_release(v71);
      v15 = v111;
      (*(void (**)(char *, uint64_t, __n128))(v111 + 8))(v14, v112, v73);
      v70 = v83;
      v68 = v74;
      if (v74)
        goto LABEL_28;
LABEL_30:
      v76 = v70 + 1;
      if (__OFADD__(v70, 1))
      {
        __break(1u);
        goto LABEL_51;
      }
      v83 = v70;
      if (v76 < v110)
      {
        v84 = *(_QWORD *)&v106[8 * v76];
        if (v84)
          goto LABEL_33;
        v85 = v70 + 2;
        v83 = v70 + 1;
        if (v70 + 2 < v110)
        {
          v84 = *(_QWORD *)&v106[8 * v85];
          if (v84)
            goto LABEL_36;
          v83 = v70 + 2;
          if (v70 + 3 < v110)
          {
            v84 = *(_QWORD *)&v106[8 * v70 + 24];
            if (v84)
            {
              v76 = v70 + 3;
              goto LABEL_33;
            }
            v85 = v70 + 4;
            v83 = v70 + 3;
            if (v70 + 4 < v110)
              break;
          }
        }
      }
LABEL_47:
      v86 = sub_1004B804C(&qword_101405460);
      v79 = (uint64_t)v109;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v109, 1, 1, v86);
      v74 = 0;
    }
    v84 = *(_QWORD *)&v106[8 * v85];
    if (v84)
    {
LABEL_36:
      v76 = v85;
LABEL_33:
      v74 = (v84 - 1) & v84;
      v75 = __clz(__rbit64(v84)) + (v76 << 6);
      continue;
    }
    break;
  }
  while (1)
  {
    v76 = v85 + 1;
    if (__OFADD__(v85, 1))
      break;
    if (v76 >= v110)
    {
      v83 = v104;
      goto LABEL_47;
    }
    v84 = *(_QWORD *)&v106[8 * v76];
    ++v85;
    if (v84)
      goto LABEL_33;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v112);
  __break(1u);
  return result;
}

void sub_100A692A0(_QWORD *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t **__return_ptr, _QWORD *, __n128), uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, __n128))
{
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t Strong;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, __n128);
  uint64_t (*v49)(uint64_t);
  uint64_t *v50;
  uint64_t v51;
  _QWORD v52[2];
  void *v53;

  v11 = a2;
  v53 = &_swiftEmptySetSingleton;
  v13 = *a3;
  v14 = a2[2];
  v15 = a2[3];
  swift_retain(a2);
  if ((sub_100622CA4(v14, v15, v13) & 1) != 0)
  {
    swift_release(v11);
    return;
  }
  v16 = v11[4];
  if (!v16)
  {
    v31 = &_swiftEmptySetSingleton;
LABEL_15:
    swift_bridgeObjectRelease(v31);
    swift_release(v11);
    return;
  }
  v48 = a7;
  v49 = a6;
  v17 = v11;
  while (1)
  {
    v18 = v17[5];
    v52[0] = v16;
    v52[1] = v18;
    v19 = v17[2];
    v20 = v17[3];
    swift_bridgeObjectRetain(v20);
    swift_unknownObjectRetain(v16);
    sub_100AD8690((uint64_t *)&v50, v19, v20);
    swift_bridgeObjectRelease(v51);
    v21 = v17[2];
    v22 = v17[3];
    swift_bridgeObjectRetain(v22);
    sub_100AD8690((uint64_t *)&v50, v21, v22);
    v23 = swift_bridgeObjectRelease(v51);
    a4(&v50, v52, v23);
    v24 = v51;
    if (!v51)
    {
      swift_unknownObjectRelease(v16);
      goto LABEL_18;
    }
    if (!a1[2] || (v25 = sub_100842E98((uint64_t)v50, v51), (v26 & 1) == 0))
    {
      swift_unknownObjectRelease(v16);
      swift_bridgeObjectRelease(v24);
LABEL_18:
      swift_bridgeObjectRelease(v53);
      swift_weakAssign(v17 + 7, 0);
      swift_release(v17);
      return;
    }
    v11 = *(uint64_t **)(a1[7] + 8 * v25);
    swift_beginAccess(v11 + 6, &v50, 33, 0);
    swift_retain(v11);
    swift_retain(v17);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
    v29 = *(_QWORD *)((v11[6] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v28 = *(_QWORD *)((v11[6] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v29 >= v28 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
    v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v17);
    specialized Array._endMutation()(v30);
    swift_endAccess(&v50);
    swift_weakAssign(v17 + 7, v11);
    v31 = v53;
    v32 = v11[2];
    v33 = v11[3];
    swift_bridgeObjectRetain(v53);
    LOBYTE(v32) = sub_100622CA4(v32, v33, (uint64_t)v31);
    swift_bridgeObjectRelease(v31);
    if ((v32 & 1) != 0)
      break;
    swift_bridgeObjectRelease(v24);
    swift_release(v17);
    swift_unknownObjectRelease(v52[0]);
    if ((sub_100622CA4(v11[2], v11[3], *a3) & 1) == 0)
    {
      v16 = v11[4];
      v17 = v11;
      if (v16)
        continue;
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRetain_n(v31, 2);
  v34 = sub_1005FF8B0((uint64_t)v31);
  swift_bridgeObjectRelease(v31);
  v50 = v34;
  v35 = 0;
  sub_100AF273C((uint64_t *)&v50);
  swift_bridgeObjectRelease(v31);
  v36 = v50;
  if (!v50[2])
  {
    __break(1u);
    goto LABEL_31;
  }
  v37 = v50[4];
  v38 = v50[5];
  swift_bridgeObjectRetain(v38);
  swift_release(v36);
  if (!a1[2] || (v39 = sub_100842E98(v37, v38), (v40 & 1) == 0))
  {
    swift_release(v17);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v24);
    v45 = v11;
LABEL_27:
    swift_release(v45);
    v46 = v52[0];
    swift_bridgeObjectRelease(v31);
    v44 = v46;
LABEL_28:
    swift_unknownObjectRelease(v44);
    return;
  }
  v36 = *(uint64_t **)(a1[7] + 8 * v39);
  swift_retain(v36);
  swift_bridgeObjectRelease(v38);
  Strong = swift_weakLoadStrong(v36 + 7);
  if (!Strong)
  {
    swift_bridgeObjectRelease(v24);
    swift_release(v11);
    swift_release(v17);
    v45 = v36;
    goto LABEL_27;
  }
  a1 = (_QWORD *)Strong;
  swift_weakAssign(v36 + 7, 0);
  swift_beginAccess(a1 + 6, &v50, 33, 0);
  swift_retain(v36);
  v35 = sub_100AFDD68(a1 + 6, (uint64_t)v36, v49);
  v42 = swift_release(v36);
  v33 = a1[6];
  if ((unint64_t)v33 >> 62)
  {
LABEL_31:
    if (v33 < 0)
      v47 = v33;
    else
      v47 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v43 = _CocoaArrayWrapper.endIndex.getter(v47);
    v42 = swift_bridgeObjectRelease(v33);
    if (v43 < v35)
      goto LABEL_35;
LABEL_25:
    v48(v35, v43, v42);
    swift_endAccess(&v50);
    swift_bridgeObjectRelease(v24);
    swift_release(v11);
    swift_release(v17);
    swift_release(a1);
    swift_release(v36);
    swift_bridgeObjectRelease(v31);
    v44 = v52[0];
    goto LABEL_28;
  }
  v43 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v43 >= v35)
    goto LABEL_25;
LABEL_35:
  __break(1u);
  swift_release(v50);
  __break(1u);
}

void sub_100A69728(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(_QWORD **__return_ptr, uint64_t *, __n128))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t Strong;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  unint64_t v48;
  void *v49;
  void *v50;

  v4 = a2;
  v6 = *a3;
  v50 = &_swiftEmptySetSingleton;
  v7 = a2[2];
  v8 = a2[3];
  swift_retain(a2);
  if ((sub_100622CA4(v7, v8, v6) & 1) != 0)
  {
    swift_release(v4);
    return;
  }
  v9 = v4[5];
  if ((~v9 & 0xF000000000000007) == 0)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    swift_release(v4);
    return;
  }
  v10 = v4;
  while (1)
  {
    v11 = a1;
    v12 = v10[3];
    v14 = (void *)v10[6];
    v15 = v10[7];
    v16 = (void *)v10[8];
    v45 = v10[4];
    v13 = v45;
    v46 = v9;
    v47 = v14;
    v48 = v15;
    v49 = v16;
    v17 = v10[2];
    swift_bridgeObjectRetain(v12);
    sub_100B010EC(v13, v9, v14, v15, v16);
    sub_100AD8690((uint64_t *)&v43, v17, v12);
    swift_bridgeObjectRelease();
    v19 = v10[2];
    v18 = v10[3];
    swift_bridgeObjectRetain(v18);
    sub_100AD8690((uint64_t *)&v43, v19, v18);
    v20 = swift_bridgeObjectRelease();
    a4(&v43, &v45, v20);
    if (!v44)
      goto LABEL_16;
    if (!*(_QWORD *)(v11 + 16) || (a1 = v11, v21 = sub_100842E98((uint64_t)v43, v44), (v22 & 1) == 0))
    {
      swift_bridgeObjectRelease();
LABEL_16:
      sub_100B01100(v13, v9, v14, v15, v16);
      swift_bridgeObjectRelease();
      swift_weakAssign(v10 + 10, 0);
      swift_release(v10);
      return;
    }
    v4 = *(uint64_t **)(*(_QWORD *)(v11 + 56) + 8 * v21);
    swift_beginAccess(v4 + 9, &v43, 33, 0);
    swift_retain(v4);
    swift_retain(v10);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v25 = *(_QWORD *)((v4[9] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v24 = *(_QWORD *)((v4[9] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v25 >= v24 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
    v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v10);
    specialized Array._endMutation()(v26);
    swift_endAccess(&v43);
    swift_weakAssign(v10 + 10, v4);
    v27 = (uint64_t)v50;
    v28 = v4[2];
    v29 = v4[3];
    swift_bridgeObjectRetain(v50);
    LOBYTE(v28) = sub_100622CA4(v28, v29, v27);
    swift_bridgeObjectRelease();
    if ((v28 & 1) != 0)
      break;
    swift_bridgeObjectRelease();
    swift_release(v10);
    sub_1007B0C8C(v45, v46, v47, v48, v49);
    if ((sub_100622CA4(v4[2], v4[3], *a3) & 1) == 0)
    {
      v9 = v4[5];
      v10 = v4;
      if ((~v9 & 0xF000000000000007) != 0)
        continue;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRetain_n(v27, 2);
  v30 = sub_1005FF8B0(v27);
  swift_bridgeObjectRelease();
  v43 = v30;
  v31 = 0;
  sub_100AF273C((uint64_t *)&v43);
  swift_bridgeObjectRelease();
  v32 = (uint64_t)v43;
  if (!v43[2])
  {
    __break(1u);
    goto LABEL_28;
  }
  v33 = v43[4];
  v34 = v43[5];
  swift_bridgeObjectRetain(v34);
  swift_release(v32);
  if (!*(_QWORD *)(a1 + 16) || (v35 = sub_100842E98(v33, v34), (v36 & 1) == 0))
  {
    swift_release(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = (uint64_t)v4;
LABEL_25:
    swift_release(v39);
    sub_1007B0C8C(v45, v46, v47, v48, v49);
    swift_bridgeObjectRelease();
    return;
  }
  a1 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v35);
  swift_retain(a1);
  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong(a1 + 80);
  if (!Strong)
  {
    swift_bridgeObjectRelease();
    swift_release(v4);
    swift_release(v10);
    v39 = a1;
    goto LABEL_25;
  }
  v13 = Strong;
  swift_weakAssign(a1 + 80, 0);
  swift_beginAccess(v13 + 72, &v43, 33, 0);
  swift_retain(a1);
  v31 = sub_100AFDD68((uint64_t *)(v13 + 72), a1, sub_100D14ED8);
  swift_release(a1);
  v32 = *(_QWORD *)(v13 + 72);
  if (!((unint64_t)v32 >> 62))
  {
    v38 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v38 >= v31)
    {
LABEL_23:
      sub_100CFEBB4(v31, v38);
      swift_endAccess(&v43);
      swift_bridgeObjectRelease();
      swift_release(v4);
      swift_release(v10);
      swift_release(v13);
      swift_release(a1);
      swift_bridgeObjectRelease();
      sub_1007B0C8C(v45, v46, v47, v48, v49);
      return;
    }
    goto LABEL_32;
  }
LABEL_28:
  if (v32 < 0)
    v40 = v32;
  else
    v40 = v32 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v32);
  v38 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease();
  if (v38 >= v31)
    goto LABEL_23;
LABEL_32:
  __break(1u);
  swift_release(v43);
  __break(1u);
}

